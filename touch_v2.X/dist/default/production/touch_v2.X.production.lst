

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan  3 18:06:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=4,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=4,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=4,class=CODE,delta=1
   182                           	psect	text161,global,reloc=4,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=4,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=4,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	text177,global,reloc=4,class=CODE,delta=1
   199                           	psect	text178,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3756	offset	0
   242 ;;_main$3752	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_k	offset	11
   247 ;;_j	offset	12
   248 ;;_i	offset	13
   249 ;;_inp_index	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	4
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-1 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-1 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_row	offset	0
   284 ;;_r	offset=-1 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_strPtr	offset=-4 (param)
   287 ;;_strPtr	offset=-1 (param)
   288 ;;_delay	offset=-4 (param)
   289 ;;_strPtr	offset=-1 (param)
   290 ;;_strPtr	offset=-2 (param)
   291 ;;__this	offset=-2 (param)
   292 ;;_clearBuffer	offset=-3 (param)
   293 ;;_s	offset	0
   294 ;;_k	offset	2
   295 ;;_dest	offset=-2 (param)
   296 ;;_c	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_ap	offset	0
   299 ;;_fmt	offset=-3 (param)
   300 ;;_cfmt	offset	0
   301 ;;_fp	offset=-2 (param)
   302 ;;_fmt	offset=-4 (param)
   303 ;;_ap	offset=-6 (param)
   304 ;;_vfpfcnvrt$5571	offset	0
   305 ;;_vfpfcnvrt$5582	offset	2
   306 ;;_vfpfcnvrt$5570	offset	4
   307 ;;_llu	offset	6
   308 ;;_ll	offset	14
   309 ;;_f	offset	22
   310 ;;_ct	offset	26
   311 ;;_cp	offset	29
   312 ;;_c	offset	31
   313 ;;_fp	offset=-2 (param)
   314 ;;_fmt	offset=-4 (param)
   315 ;;_ap	offset=-6 (param)
   316 ;;_xtoa$5556	offset	0
   317 ;;_xtoa$5555	offset	2
   318 ;;_n	offset	4
   319 ;;_c	offset	12
   320 ;;_i	offset	14
   321 ;;_w	offset	16
   322 ;;_p	offset	18
   323 ;;_fp	offset=-2 (param)
   324 ;;_d	offset=-10 (param)
   325 ;;_x	offset=-11 (param)
   326 ;;_toupper$6362	offset	0
   327 ;;_c	offset=-2 (param)
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_n	offset	0
   331 ;;_i	offset	8
   332 ;;_w	offset	10
   333 ;;_p	offset	12
   334 ;;_fp	offset=-2 (param)
   335 ;;_d	offset=-10 (param)
   336 ;;_counter	offset	0
   337 ;;_dividend	offset=-8 (param)
   338 ;;_divisor	offset=-16 (param)
   339 ;;_quotient	offset	0
   340 ;;_counter	offset	8
   341 ;;_dividend	offset=-8 (param)
   342 ;;_divisor	offset=-16 (param)
   343 ;;_r	offset	0
   344 ;;_l	offset	2
   345 ;;__l	offset=-2 (param)
   346 ;;__r	offset=-4 (param)
   347 ;;_n	offset=-6 (param)
   348 ;;_nuls	offset	0
   349 ;;_l	offset	7
   350 ;;_p	offset	9
   351 ;;_cp	offset	11
   352 ;;_w	offset	13
   353 ;;_i	offset	15
   354 ;;_fp	offset=-2 (param)
   355 ;;_s	offset=-4 (param)
   356 ;;_efgtoa$5528	offset	0
   357 ;;_efgtoa$5527	offset	2
   358 ;;_efgtoa$5526	offset	4
   359 ;;_efgtoa$5522	offset	6
   360 ;;_efgtoa$5518	offset	8
   361 ;;_efgtoa$5517	offset	10
   362 ;;_u	offset	12
   363 ;;_g	offset	16
   364 ;;_l	offset	20
   365 ;;_h	offset	24
   366 ;;_ou	offset	28
   367 ;;_n	offset	32
   368 ;;_e	offset	34
   369 ;;_i	offset	36
   370 ;;_w	offset	38
   371 ;;_p	offset	40
   372 ;;_sign	offset	42
   373 ;;_d	offset	44
   374 ;;_ne	offset	46
   375 ;;_m	offset	48
   376 ;;_pp	offset	50
   377 ;;_t	offset	52
   378 ;;_mode	offset	54
   379 ;;_nmode	offset	55
   380 ;;_fp	offset=-2 (param)
   381 ;;_f	offset=-6 (param)
   382 ;;_c	offset=-7 (param)
   383 ;;_tolower$6347	offset	0
   384 ;;_c	offset=-2 (param)
   385 ;;_c	offset=-2 (param)
   386 ;;_d	offset	0
   387 ;;_s	offset	2
   388 ;;_dest	offset=-2 (param)
   389 ;;_src	offset=-4 (param)
   390 ;;_u	offset	0
   391 ;;_m	offset	4
   392 ;;_e	offset	8
   393 ;;_x	offset=-4 (param)
   394 ;;_u	offset	0
   395 ;;_e	offset	4
   396 ;;_x	offset=-4 (param)
   397 ;;_exp1	offset	0
   398 ;;_sign1	offset	1
   399 ;;_f1	offset=-4 (param)
   400 ;;_f1	offset=-4 (param)
   401 ;;_ff1	offset=-4 (param)
   402 ;;_ff2	offset=-8 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	2
   409 ;;_counter	offset	3
   410 ;;_dividend	offset=-2 (param)
   411 ;;_divisor	offset=-4 (param)
   412 ;;_dtoa$5494	offset	0
   413 ;;_n	offset	2
   414 ;;_i	offset	10
   415 ;;_s	offset	12
   416 ;;_w	offset	14
   417 ;;_p	offset	16
   418 ;;_fp	offset=-2 (param)
   419 ;;_d	offset=-10 (param)
   420 ;;_a	offset=-2 (param)
   421 ;;_sign	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_quotient	offset	0
   426 ;;_sign	offset	8
   427 ;;_counter	offset	9
   428 ;;_dividend	offset=-8 (param)
   429 ;;_divisor	offset=-16 (param)
   430 ;;_w	offset	0
   431 ;;_fp	offset=-2 (param)
   432 ;;_c	offset=-3 (param)
   433 ;;_w	offset	0
   434 ;;_i	offset	2
   435 ;;_fp	offset=-2 (param)
   436 ;;_buf	offset=-4 (param)
   437 ;;_p	offset=-6 (param)
   438 ;;_a	offset	0
   439 ;;_s	offset=-2 (param)
   440 ;;_i	offset	0
   441 ;;_c	offset	2
   442 ;;_s	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_fp	offset=-4 (param)
   446 ;;_c	offset=-1 (param)
   447 ;;__this	offset=-2 (param)
   448 ;;_c	offset=-3 (param)
   449 ;;_atoi$6078	offset	0
   450 ;;_atoi$6076	offset	2
   451 ;;_atoi$6077	offset	4
   452 ;;_n	offset	5
   453 ;;_neg	offset	7
   454 ;;_s	offset=-2 (param)
   455 ;;_isspace$6127	offset	0
   456 ;;_c	offset=-2 (param)
   457 ;;_c	offset=-2 (param)
   458 ;;_vterm	offset=-1 (param)
   459 ;;_new_response_info	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_level	offset=-2 (param)
   462 ;;_dutyValue	offset=-2 (param)
   463 ;;_timer	offset=-1 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_count	offset=-3 (param)
   466 ;;_h	offset=-1 (param)
   467 ;;_u	offset	0
   468 ;;_x	offset=-4 (param)
   469 ;;_chan	offset=-1 (param)
   470 ;;_to_what	offset=-2 (param)
   471 ;;_u	offset	0
   472 ;;_s	offset=-2 (param)
   473 ;;_index	offset=-1 (param)
   474 ;;_arg	offset	0
   475 ;;_exp	offset	4
   476 ;;_sign	offset=-1 (param)
   477 ;;_val	offset=-5 (param)
   478 ;;_grs	offset	0
   479 ;;_rem	offset	4
   480 ;;_new_exp	offset	8
   481 ;;_aexp	offset	10
   482 ;;_bexp	offset	11
   483 ;;_sign	offset	12
   484 ;;_b	offset=-4 (param)
   485 ;;_a	offset=-8 (param)
   486 ;;_ff1	offset=-4 (param)
   487 ;;_ff2	offset=-8 (param)
   488 ;;_lp_speed	offset	0
   489 ;;_new	offset=-4 (param)
   490 ;;_bn	offset=-5 (param)
   491 ;;_slow	offset=-6 (param)
   492 ;;_b	offset=-4 (param)
   493 ;;_a	offset=-8 (param)
   494 ;;_grs	offset	0
   495 ;;_bexp	offset	1
   496 ;;_aexp	offset	2
   497 ;;_signs	offset	3
   498 ;;_b	offset=-4 (param)
   499 ;;_a	offset=-8 (param)
   500 ;;_prod	offset	0
   501 ;;_grs	offset	4
   502 ;;_temp	offset	8
   503 ;;_bexp	offset	10
   504 ;;_aexp	offset	11
   505 ;;_sign	offset	12
   506 ;;_b	offset=-4 (param)
   507 ;;_a	offset=-8 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_state	offset	0
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_i	offset	0
   520 ;;_sw_value	offset	1
   521 ;;_timerVal	offset=-2 (param)
   522 ;;_light	offset	0
   523 ;;_mode	offset=-1 (param)
   524 ;;_chan	offset=-1 (param)
   525 ;;_to_what	offset=-2 (param)
   526 ;;_u	offset	0
   527 ;;_s	offset=-2 (param)
   528 ;;_index	offset=-1 (param)
   529 ;;_arg	offset	0
   530 ;;_exp	offset	4
   531 ;;_sign	offset=-1 (param)
   532 ;;_val	offset=-5 (param)
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_grs	offset	0
   536 ;;_bexp	offset	1
   537 ;;_aexp	offset	2
   538 ;;_signs	offset	3
   539 ;;_b	offset=-4 (param)
   540 ;;_a	offset=-8 (param)
   541 ;;_prod	offset	0
   542 ;;_grs	offset	4
   543 ;;_temp	offset	8
   544 ;;_bexp	offset	10
   545 ;;_aexp	offset	11
   546 ;;_sign	offset	12
   547 ;;_b	offset=-4 (param)
   548 ;;_a	offset=-8 (param)
   549 ;;_grs	offset	0
   550 ;;_rem	offset	4
   551 ;;_new_exp	offset	8
   552 ;;_aexp	offset	10
   553 ;;_bexp	offset	11
   554 ;;_sign	offset	12
   555 ;;_b	offset=-4 (param)
   556 ;;_a	offset=-8 (param)
   557 ;;_ff1	offset=-4 (param)
   558 ;;_ff2	offset=-8 (param)
   559 ;;_timerVal	offset=-2 (param)
   560 ;;_adj	offset	0
   561 ;;_log_ptr	offset	4
   562 ;;_f	offset	0
   563 ;;_ap	offset	6
   564 ;;_s	offset=-3 (param)
   565 ;;_fmt	offset=-5 (param)
   566 ;;_cfmt	offset	0
   567 ;;_fp	offset=-2 (param)
   568 ;;_fmt	offset=-4 (param)
   569 ;;_ap	offset=-6 (param)
   570 ;;_vfpfcnvrt$5571	offset	0
   571 ;;_vfpfcnvrt$5582	offset	2
   572 ;;_vfpfcnvrt$5570	offset	4
   573 ;;_llu	offset	6
   574 ;;_ll	offset	14
   575 ;;_f	offset	22
   576 ;;_ct	offset	26
   577 ;;_cp	offset	29
   578 ;;_c	offset	31
   579 ;;_fp	offset=-2 (param)
   580 ;;_fmt	offset=-4 (param)
   581 ;;_ap	offset=-6 (param)
   582 ;;_xtoa$5556	offset	0
   583 ;;_xtoa$5555	offset	2
   584 ;;_n	offset	4
   585 ;;_c	offset	12
   586 ;;_i	offset	14
   587 ;;_w	offset	16
   588 ;;_p	offset	18
   589 ;;_fp	offset=-2 (param)
   590 ;;_d	offset=-10 (param)
   591 ;;_x	offset=-11 (param)
   592 ;;_toupper$6362	offset	0
   593 ;;_c	offset=-2 (param)
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_n	offset	0
   597 ;;_i	offset	8
   598 ;;_w	offset	10
   599 ;;_p	offset	12
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_counter	offset	0
   603 ;;_dividend	offset=-8 (param)
   604 ;;_divisor	offset=-16 (param)
   605 ;;_quotient	offset	0
   606 ;;_counter	offset	8
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_r	offset	0
   610 ;;_l	offset	2
   611 ;;__l	offset=-2 (param)
   612 ;;__r	offset=-4 (param)
   613 ;;_n	offset=-6 (param)
   614 ;;_nuls	offset	0
   615 ;;_l	offset	7
   616 ;;_p	offset	9
   617 ;;_cp	offset	11
   618 ;;_w	offset	13
   619 ;;_i	offset	15
   620 ;;_fp	offset=-2 (param)
   621 ;;_s	offset=-4 (param)
   622 ;;_efgtoa$5528	offset	0
   623 ;;_efgtoa$5527	offset	2
   624 ;;_efgtoa$5526	offset	4
   625 ;;_efgtoa$5522	offset	6
   626 ;;_efgtoa$5518	offset	8
   627 ;;_efgtoa$5517	offset	10
   628 ;;_u	offset	12
   629 ;;_g	offset	16
   630 ;;_l	offset	20
   631 ;;_h	offset	24
   632 ;;_ou	offset	28
   633 ;;_n	offset	32
   634 ;;_e	offset	34
   635 ;;_i	offset	36
   636 ;;_w	offset	38
   637 ;;_p	offset	40
   638 ;;_sign	offset	42
   639 ;;_d	offset	44
   640 ;;_ne	offset	46
   641 ;;_m	offset	48
   642 ;;_pp	offset	50
   643 ;;_t	offset	52
   644 ;;_mode	offset	54
   645 ;;_nmode	offset	55
   646 ;;_fp	offset=-2 (param)
   647 ;;_f	offset=-6 (param)
   648 ;;_c	offset=-7 (param)
   649 ;;_tolower$6347	offset	0
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_d	offset	0
   653 ;;_s	offset	2
   654 ;;_dest	offset=-2 (param)
   655 ;;_src	offset=-4 (param)
   656 ;;_u	offset	0
   657 ;;_m	offset	4
   658 ;;_e	offset	8
   659 ;;_x	offset=-4 (param)
   660 ;;_u	offset	0
   661 ;;_e	offset	4
   662 ;;_x	offset=-4 (param)
   663 ;;_exp1	offset	0
   664 ;;_sign1	offset	1
   665 ;;_f1	offset=-4 (param)
   666 ;;_f1	offset=-4 (param)
   667 ;;_ff1	offset=-4 (param)
   668 ;;_ff2	offset=-8 (param)
   669 ;;_sign	offset	0
   670 ;;_counter	offset	1
   671 ;;_dividend	offset=-2 (param)
   672 ;;_divisor	offset=-4 (param)
   673 ;;_quotient	offset	0
   674 ;;_sign	offset	2
   675 ;;_counter	offset	3
   676 ;;_dividend	offset=-2 (param)
   677 ;;_divisor	offset=-4 (param)
   678 ;;_dtoa$5494	offset	0
   679 ;;_n	offset	2
   680 ;;_i	offset	10
   681 ;;_s	offset	12
   682 ;;_w	offset	14
   683 ;;_p	offset	16
   684 ;;_fp	offset=-2 (param)
   685 ;;_d	offset=-10 (param)
   686 ;;_a	offset=-2 (param)
   687 ;;_sign	offset	0
   688 ;;_counter	offset	1
   689 ;;_dividend	offset=-8 (param)
   690 ;;_divisor	offset=-16 (param)
   691 ;;_quotient	offset	0
   692 ;;_sign	offset	8
   693 ;;_counter	offset	9
   694 ;;_dividend	offset=-8 (param)
   695 ;;_divisor	offset=-16 (param)
   696 ;;_w	offset	0
   697 ;;_fp	offset=-2 (param)
   698 ;;_c	offset=-3 (param)
   699 ;;_w	offset	0
   700 ;;_i	offset	2
   701 ;;_fp	offset=-2 (param)
   702 ;;_buf	offset=-4 (param)
   703 ;;_p	offset=-6 (param)
   704 ;;_a	offset	0
   705 ;;_s	offset=-2 (param)
   706 ;;_i	offset	0
   707 ;;_c	offset	2
   708 ;;_s	offset=-2 (param)
   709 ;;_fp	offset=-4 (param)
   710 ;;_c	offset=-2 (param)
   711 ;;_fp	offset=-4 (param)
   712 ;;_c	offset=-1 (param)
   713 ;;__this	offset=-2 (param)
   714 ;;_c	offset=-3 (param)
   715 ;;_atoi$6078	offset	0
   716 ;;_atoi$6076	offset	2
   717 ;;_atoi$6077	offset	4
   718 ;;_n	offset	5
   719 ;;_neg	offset	7
   720 ;;_s	offset=-2 (param)
   721 ;;_isspace$6127	offset	0
   722 ;;_c	offset=-2 (param)
   723 ;;_c	offset=-2 (param)
   724 ;;_dsize	offset=-2 (param)
   725 ;;_u	offset	0
   726 ;;_x	offset=-4 (param)
   727 ;;_f1p	offset=-2 (param)
   728 ;;_f2	offset=-6 (param)
   729 ;;_timer	offset=-1 (param)
   730 ;;_count	offset=-3 (param)
   731 ;;_channel	offset=-1 (param)
   732 ;;_i	offset	0
   733                           
   734                           	psect	idataBIGRAM
   735  016AF4                     __pidataBIGRAM:
   736                           	opt callstack 0
   737                           
   738                           ;initializer for _port_data
   739  016AF4  FF                 	db	255
   740  016AF5  00                 	db	0
   741  016AF6  FF                 	db	255
   742  016AF7  00                 	db	0
   743  016AF8  FF                 	db	255
   744  016AF9  00                 	db	0
   745  016AFA  FF                 	db	255
   746  016AFB  00                 	db	0
   747  016AFC  FF                 	db	255
   748  016AFD  00                 	db	0
   749  016AFE  FF                 	db	255
   750  016AFF  00                 	db	0
   751  016B00  FF                 	db	255
   752  016B01  00                 	db	0
   753  016B02  FF                 	db	255
   754  016B03  00                 	db	0
   755  016B04  00                 	db	0
   756  016B05  00                 	db	0
   757  016B06  00                 	db	0
   758  016B07  00                 	db	0
   759  016B08  00                 	db	0
   760  016B09  00                 	db	0
   761  016B0A  00                 	db	0
   762  016B0B  00                 	db	0
   763  016B0C  00                 	db	0
   764  016B0D  00                 	db	0
   765  016B0E  00                 	db	0
   766  016B0F  00                 	db	0
   767  016B10  00                 	db	0
   768  016B11  00                 	db	0
   769  016B12  00                 	db	0
   770  016B13  00                 	db	0
   771  016B14  00                 	db	0
   772  016B15  00                 	db	0
   773  016B16  00                 	db	0
   774  016B17  00                 	db	0
   775  016B18  00                 	db	0
   776  016B19  00                 	db	0
   777  016B1A  00                 	db	0
   778  016B1B  00                 	db	0
   779  016B1C  00                 	db	0
   780  016B1D  00                 	db	0
   781  016B1E  00                 	db	0
   782  016B1F  00                 	db	0
   783  016B20  00                 	db	0
   784  016B21  00                 	db	0
   785  016B22  00                 	db	0
   786  016B23  00                 	db	0
   787  016B24  00                 	db	0
   788  016B25  00                 	db	0
   789  016B26  00                 	db	0
   790  016B27  00                 	db	0
   791  016B28  00                 	db	0
   792  016B29  00                 	db	0
   793  016B2A  00                 	db	0
   794  016B2B  00                 	db	0
   795  016B2C  00                 	db	0
   796  016B2D  00                 	db	0
   797  016B2E  00                 	db	0
   798  016B2F  00                 	db	0
   799  016B30  00                 	db	0
   800  016B31  00                 	db	0
   801  016B32  00                 	db	0
   802  016B33  00                 	db	0
   803  016B34  00                 	db	0
   804  016B35  00                 	db	0
   805  016B36  00                 	db	0
   806  016B37  00                 	db	0
   807  016B38  00                 	db	0
   808  016B39  00                 	db	0
   809  016B3A  00                 	db	0
   810  016B3B  00                 	db	0
   811  016B3C  00                 	db	0
   812  016B3D  00                 	db	0
   813  016B3E  00                 	db	0
   814  016B3F  00                 	db	0
   815  016B40  00                 	db	0
   816  016B41  00                 	db	0
   817  016B42  00                 	db	0
   818  016B43  00                 	db	0
   819  016B44  00                 	db	0
   820  016B45  00                 	db	0
   821  016B46  00                 	db	0
   822  016B47  00                 	db	0
   823  016B48  00                 	db	0
   824  016B49  00                 	db	0
   825  016B4A  00                 	db	0
   826  016B4B  00                 	db	0
   827  016B4C  00                 	db	0
   828  016B4D  00                 	db	0
   829  016B4E  00                 	db	0
   830  016B4F  00                 	db	0
   831  016B50  00                 	db	0
   832  016B51  00                 	db	0
   833  016B52  00                 	db	0
   834  016B53  00                 	db	0
   835  016B54  00                 	db	0
   836  016B55  00                 	db	0
   837  016B56  00                 	db	0
   838  016B57  00                 	db	0
   839  016B58  00                 	db	0
   840  016B59  00                 	db	0
   841  016B5A  00                 	db	0
   842  016B5B  00                 	db	0
   843  016B5C  00                 	db	0
   844  016B5D  00                 	db	0
   845  016B5E  00                 	db	0
   846  016B5F  00                 	db	0
   847  016B60  00                 	db	0
   848  016B61  00                 	db	0
   849  016B62  00                 	db	0
   850  016B63  00                 	db	0
   851  016B64  00                 	db	0
   852  016B65  00                 	db	0
   853  016B66  00                 	db	0
   854  016B67  00                 	db	0
   855  016B68  00                 	db	0
   856  016B69  00                 	db	0
   857  016B6A  00                 	db	0
   858  016B6B  00                 	db	0
   859  016B6C  00                 	db	0
   860  016B6D  00                 	db	0
   861  016B6E  00                 	db	0
   862  016B6F  00                 	db	0
   863  016B70  00                 	db	0
   864  016B71  00                 	db	0
   865  016B72  00                 	db	0
   866  016B73  00                 	db	0
   867  016B74  00                 	db	0
   868  016B75  00                 	db	0
   869  016B76  00                 	db	0
   870  016B77  00                 	db	0
   871  016B78  00                 	db	0
   872  016B79  00                 	db	0
   873  016B7A  00                 	db	0
   874  016B7B  00                 	db	0
   875  016B7C  00                 	db	0
   876  016B7D  00                 	db	0
   877  016B7E  00                 	db	0
   878  016B7F  00                 	db	0
   879  016B80  00                 	db	0
   880  016B81  00                 	db	0
   881  016B82  00                 	db	0
   882  016B83  00                 	db	0
   883  016B84  00                 	db	0
   884  016B85  00                 	db	0
   885  016B86  00                 	db	0
   886  016B87  00                 	db	0
   887  016B88  00                 	db	0
   888  016B89  00                 	db	0
   889  016B8A  00                 	db	0
   890  016B8B  00                 	db	0
   891  016B8C  00                 	db	0
   892  016B8D  00                 	db	0
   893  016B8E  00                 	db	0
   894  016B8F  00                 	db	0
   895  016B90  00                 	db	0
   896  016B91  00                 	db	0
   897  016B92  00                 	db	0
   898  016B93  00                 	db	0
   899  016B94  00                 	db	0
   900  016B95  00                 	db	0
   901  016B96  00                 	db	0
   902  016B97  00                 	db	0
   903  016B98  00                 	db	0
   904  016B99  00                 	db	0
   905  016B9A  00                 	db	0
   906  016B9B  00                 	db	0
   907  016B9C  00                 	db	0
   908  016B9D  00                 	db	0
   909  016B9E  00                 	db	0
   910  016B9F  00                 	db	0
   911  016BA0  00                 	db	0
   912  016BA1  00                 	db	0
   913  016BA2  00                 	db	0
   914  016BA3  00                 	db	0
   915  016BA4  00                 	db	0
   916  016BA5  00                 	db	0
   917  016BA6  00                 	db	0
   918  016BA7  00                 	db	0
   919  016BA8  00                 	db	0
   920  016BA9  00                 	db	0
   921  016BAA  00                 	db	0
   922  016BAB  00                 	db	0
   923  016BAC  00                 	db	0
   924  016BAD  00                 	db	0
   925  016BAE  00                 	db	0
   926  016BAF  00                 	db	0
   927  016BB0  00                 	db	0
   928  016BB1  00                 	db	0
   929  016BB2  00                 	db	0
   930  016BB3  00                 	db	0
   931  016BB4  00                 	db	0
   932  016BB5  00                 	db	0
   933  016BB6  00                 	db	0
   934  016BB7  00                 	db	0
   935  016BB8  00                 	db	0
   936  016BB9  00                 	db	0
   937  016BBA  00                 	db	0
   938  016BBB  00                 	db	0
   939  016BBC  00                 	db	0
   940  016BBD  00                 	db	0
   941  016BBE  00                 	db	0
   942  016BBF  00                 	db	0
   943  016BC0  00                 	db	0
   944  016BC1  00                 	db	0
   945  016BC2  00                 	db	0
   946  016BC3  00                 	db	0
   947  016BC4  00                 	db	0
   948  016BC5  00                 	db	0
   949  016BC6  00                 	db	0
   950  016BC7  00                 	db	0
   951  016BC8  00                 	db	0
   952  016BC9  00                 	db	0
   953  016BCA  00                 	db	0
   954  016BCB  00                 	db	0
   955  016BCC  00                 	db	0
   956  016BCD  00                 	db	0
   957  016BCE  00                 	db	0
   958  016BCF  00                 	db	0
   959  016BD0  00                 	db	0
   960  016BD1  00                 	db	0
   961  016BD2  00                 	db	0
   962  016BD3  00                 	db	0
   963  016BD4  00                 	db	0
   964  016BD5  00                 	db	0
   965  016BD6  00                 	db	0
   966  016BD7  00                 	db	0
   967  016BD8  00                 	db	0
   968  016BD9  00                 	db	0
   969  016BDA  00                 	db	0
   970  016BDB  00                 	db	0
   971  016BDC  00                 	db	0
   972  016BDD  00                 	db	0
   973  016BDE  00                 	db	0
   974  016BDF  00                 	db	0
   975  016BE0  00                 	db	0
   976  016BE1  00                 	db	0
   977  016BE2  00                 	db	0
   978  016BE3  00                 	db	0
   979  016BE4  00                 	db	0
   980  016BE5  00                 	db	0
   981  016BE6  00                 	db	0
   982  016BE7  00                 	db	0
   983  016BE8  00                 	db	0
   984  016BE9  00                 	db	0
   985  016BEA  00                 	db	0
   986  016BEB  00                 	db	0
   987  016BEC  00                 	db	0
   988  016BED  00                 	db	0
   989  016BEE  00                 	db	0
   990  016BEF  00                 	db	0
   991  016BF0  00                 	db	0
   992  016BF1  00                 	db	0
   993  016BF2  00                 	db	0
   994  016BF3  00                 	db	0
   995  016BF4  00                 	db	0
   996  016BF5  00                 	db	0
   997  016BF6  00                 	db	0
   998  016BF7  00                 	db	0
   999  016BF8  00                 	db	0
  1000  016BF9  00                 	db	0
  1001  016BFA  00                 	db	0
  1002  016BFB  00                 	db	0
  1003  016BFC  00                 	db	0
  1004  016BFD  00                 	db	0
  1005  016BFE  00                 	db	0
  1006  016BFF  00                 	db	0
  1007  016C00  00                 	db	0
  1008  016C01  00                 	db	0
  1009  016C02  00                 	db	0
  1010  016C03  00                 	db	0
  1011  016C04  00                 	db	0
  1012  016C05  00                 	db	0
  1013  016C06  00                 	db	0
  1014  016C07  00                 	db	0
  1015  016C08  00                 	db	0
  1016  016C09  00                 	db	0
  1017  016C0A  00                 	db	0
  1018  016C0B  00                 	db	0
  1019  016C0C  00                 	db	0
  1020  016C0D  00                 	db	0
  1021  016C0E  00                 	db	0
  1022  016C0F  00                 	db	0
  1023  016C10  00                 	db	0
  1024  016C11  00                 	db	0
  1025  016C12  00                 	db	0
  1026  016C13  00                 	db	0
  1027  016C14  00                 	db	0
  1028  016C15  00                 	db	0
  1029  016C16  00                 	db	0
  1030  016C17  00                 	db	0
  1031  016C18  00                 	db	0
  1032  016C19  00                 	db	0
  1033  016C1A  00                 	db	0
  1034  016C1B  00                 	db	0
  1035  016C1C  00                 	db	0
  1036  016C1D  00                 	db	0
  1037  016C1E  00                 	db	0
  1038  016C1F  00                 	db	0
  1039  016C20  00                 	db	0
  1040  016C21  00                 	db	0
  1041  016C22  00                 	db	0
  1042  016C23  00                 	db	0
  1043  016C24  00                 	db	0
  1044  016C25  00                 	db	0
  1045  016C26  00                 	db	0
  1046  016C27  00                 	db	0
  1047  016C28  00                 	db	0
  1048  016C29  00                 	db	0
  1049  016C2A  00                 	db	0
  1050  016C2B  00                 	db	0
  1051  016C2C  00                 	db	0
  1052  016C2D  00                 	db	0
  1053  016C2E  00                 	db	0
  1054  016C2F  00                 	db	0
  1055  016C30  00                 	db	0
  1056  016C31  00                 	db	0
  1057  016C32  00                 	db	0
  1058  016C33  00                 	db	0
  1059  016C34  00                 	db	0
  1060  016C35  00                 	db	0
  1061  016C36  00                 	db	0
  1062  016C37  00                 	db	0
  1063  016C38  00                 	db	0
  1064  016C39  00                 	db	0
  1065  016C3A  00                 	db	0
  1066  016C3B  00                 	db	0
  1067  016C3C  00                 	db	0
  1068  016C3D  00                 	db	0
  1069  016C3E  00                 	db	0
  1070  016C3F  00                 	db	0
  1071  016C40  00                 	db	0
  1072  016C41  00                 	db	0
  1073  016C42  00                 	db	0
  1074  016C43  00                 	db	0
  1075  016C44  00                 	db	0
  1076  016C45  00                 	db	0
  1077  016C46  00                 	db	0
  1078  016C47  00                 	db	0
  1079  016C48  00                 	db	0
  1080  016C49  00                 	db	0
  1081  016C4A  00                 	db	0
  1082  016C4B  00                 	db	0
  1083  016C4C  00                 	db	0
  1084  016C4D  00                 	db	0
  1085  016C4E  00                 	db	0
  1086  016C4F  00                 	db	0
  1087  016C50  00                 	db	0
  1088  016C51  00                 	db	0
  1089  016C52  00                 	db	0
  1090  016C53  00                 	db	0
  1091  016C54  00                 	db	0
  1092  016C55  00                 	db	0
  1093  016C56  00                 	db	0
  1094  016C57  00                 	db	0
  1095  016C58  00                 	db	0
  1096  016C59  00                 	db	0
  1097  016C5A  00                 	db	0
  1098  016C5B  00                 	db	0
  1099  016C5C  00                 	db	0
  1100  016C5D  00                 	db	0
  1101  016C5E  00                 	db	0
  1102  016C5F  00                 	db	0
  1103  016C60  00                 	db	0
  1104  016C61  00                 	db	0
  1105  016C62  00                 	db	0
  1106  016C63  00                 	db	0
  1107  016C64  00                 	db	0
  1108  016C65  00                 	db	0
  1109  016C66  00                 	db	0
  1110  016C67  00                 	db	0
  1111  016C68  00                 	db	0
  1112  016C69  00                 	db	0
  1113  016C6A  00                 	db	0
  1114  016C6B  00                 	db	0
  1115  016C6C  00                 	db	0
  1116  016C6D  00                 	db	0
  1117  016C6E  00                 	db	0
  1118  016C6F  00                 	db	0
  1119  016C70  00                 	db	0
  1120  016C71  00                 	db	0
  1121  016C72  00                 	db	0
  1122  016C73  00                 	db	0
  1123  016C74  00                 	db	0
  1124  016C75  00                 	db	0
  1125  016C76  00                 	db	0
  1126  016C77  00                 	db	0
  1127  016C78  00                 	db	0
  1128  016C79  00                 	db	0
  1129  016C7A  00                 	db	0
  1130  016C7B  00                 	db	0
  1131  016C7C  00                 	db	0
  1132  016C7D  00                 	db	0
  1133  016C7E  00                 	db	0
  1134  016C7F  00                 	db	0
  1135  016C80  00                 	db	0
  1136  016C81  00                 	db	0
  1137  016C82  00                 	db	0
  1138  016C83  00                 	db	0
  1139  016C84  00                 	db	0
  1140  016C85  00                 	db	0
  1141  016C86  00                 	db	0
  1142  016C87  00                 	db	0
  1143  016C88  00                 	db	0
  1144  016C89  00                 	db	0
  1145  016C8A  00                 	db	0
  1146  016C8B  00                 	db	0
  1147  016C8C  00                 	db	0
  1148  016C8D  00                 	db	0
  1149  016C8E  00                 	db	0
  1150  016C8F  00                 	db	0
  1151  016C90  00                 	db	0
  1152  016C91  00                 	db	0
  1153  016C92  00                 	db	0
  1154  016C93  00                 	db	0
  1155  016C94  00                 	db	0
  1156  016C95  00                 	db	0
  1157  016C96  00                 	db	0
  1158  016C97  00                 	db	0
  1159  016C98  00                 	db	0
  1160  016C99  00                 	db	0
  1161  016C9A  00                 	db	0
  1162  016C9B  00                 	db	0
  1163  016C9C  00                 	db	0
  1164  016C9D  00                 	db	0
  1165  016C9E  00                 	db	0
  1166  016C9F  00                 	db	0
  1167  016CA0  00                 	db	0
  1168  016CA1  00                 	db	0
  1169  016CA2  00                 	db	0
  1170  016CA3  00                 	db	0
  1171  016CA4  00                 	db	0
  1172  016CA5  00                 	db	0
  1173  016CA6  00                 	db	0
  1174  016CA7  00                 	db	0
  1175  016CA8  00                 	db	0
  1176  016CA9  00                 	db	0
  1177  016CAA  00                 	db	0
  1178  016CAB  00                 	db	0
  1179  016CAC  00                 	db	0
  1180  016CAD  00                 	db	0
  1181  016CAE  00                 	db	0
  1182  016CAF  00                 	db	0
  1183  016CB0  00                 	db	0
  1184  016CB1  00                 	db	0
  1185  016CB2  00                 	db	0
  1186  016CB3  00                 	db	0
  1187  016CB4  00                 	db	0
  1188  016CB5  00                 	db	0
  1189  016CB6  00                 	db	0
  1190  016CB7  00                 	db	0
  1191  016CB8  00                 	db	0
  1192  016CB9  00                 	db	0
  1193  016CBA  00                 	db	0
  1194  016CBB  00                 	db	0
  1195  016CBC  00                 	db	0
  1196  016CBD  00                 	db	0
  1197  016CBE  00                 	db	0
  1198  016CBF  00                 	db	0
  1199  016CC0  00                 	db	0
  1200  016CC1  00                 	db	0
  1201  016CC2  00                 	db	0
  1202  016CC3  00                 	db	0
  1203  016CC4  00                 	db	0
  1204  016CC5  00                 	db	0
  1205  016CC6  00                 	db	0
  1206  016CC7  00                 	db	0
  1207  016CC8  00                 	db	0
  1208  016CC9  00                 	db	0
  1209  016CCA  00                 	db	0
  1210  016CCB  00                 	db	0
  1211  016CCC  00                 	db	0
  1212  016CCD  00                 	db	0
  1213  016CCE  00                 	db	0
  1214  016CCF  00                 	db	0
  1215  016CD0  00                 	db	0
  1216  016CD1  00                 	db	0
  1217  016CD2  00                 	db	0
  1218  016CD3  00                 	db	0
  1219  016CD4  00                 	db	0
  1220  016CD5  00                 	db	0
  1221  016CD6  00                 	db	0
  1222  016CD7  00                 	db	0
  1223  016CD8  00                 	db	0
  1224  016CD9  00                 	db	0
  1225  016CDA  00                 	db	0
  1226  016CDB  00                 	db	0
  1227  016CDC  00                 	db	0
  1228  016CDD  00                 	db	0
  1229  016CDE  00                 	db	0
  1230  016CDF  00                 	db	0
  1231  016CE0  00                 	db	0
  1232  016CE1  00                 	db	0
  1233  016CE2  00                 	db	0
  1234  016CE3  00                 	db	0
  1235  016CE4  00                 	db	0
  1236  016CE5  00                 	db	0
  1237  016CE6  00                 	db	0
  1238  016CE7  00                 	db	0
  1239  016CE8  00                 	db	0
  1240  016CE9  00                 	db	0
  1241  016CEA  00                 	db	0
  1242  016CEB  00                 	db	0
  1243  016CEC  00                 	db	0
  1244  016CED  00                 	db	0
  1245  016CEE  00                 	db	0
  1246  016CEF  00                 	db	0
  1247  016CF0  00                 	db	0
  1248  016CF1  00                 	db	0
  1249  016CF2  00                 	db	0
  1250  016CF3  00                 	db	0
  1251                           
  1252                           ;initializer for _C
  1253  016CF4  0000               	dw	0
  1254  016CF6  0000               	dw	0
  1255  016CF8  0000               	dw	0
  1256  016CFA  0000               	dw	0
  1257  016CFC  0000               	dw	0
  1258  016CFE  0000               	dw	0
  1259  016D00  0000               	dw	0
  1260  016D02  0000               	dw	0
  1261  016D04  0000               	dw	0
  1262  016D06  0000               	dw	0
  1263  016D08  0000               	dw	0
  1264  016D0A  0000               	dw	0
  1265  016D0C  0000               	dw	0
  1266  016D0E  0000               	dw	0
  1267  016D10  0000               	dw	0
  1268  016D12  0000               	dw	0
  1269  016D14  0000               	dw	0
  1270  016D16  0000               	dw	0
  1271  016D18  0000               	dw	0
  1272  016D1A  0000               	dw	0
  1273  016D1C  0000               	dw	0
  1274  016D1E  0000               	dw	0
  1275  016D20  0000               	dw	0
  1276  016D22  0000               	dw	0
  1277  016D24  0000               	dw	0
  1278  016D26  0000               	dw	0
  1279  016D28  0000               	dw	0
  1280  016D2A  0000               	dw	0
  1281  016D2C  0000               	dw	0
  1282  016D2E  0000               	dw	0
  1283  016D30  0000               	dw	0
  1284  016D32  0000               	dw	0
  1285  016D34  0000               	dw	0
  1286  016D36  0000               	dw	0
  1287  016D38  0000               	dw	0
  1288  016D3A  0000               	dw	0
  1289  016D3C  0000               	dw	0
  1290  016D3E  0000               	dw	0
  1291  016D40  0000               	dw	0
  1292  016D42  0000               	dw	0
  1293  016D44  0000               	dw	0
  1294  016D46  0000               	dw	0
  1295  016D48  0000               	dw	0
  1296  016D4A  0000               	dw	0
  1297  016D4C  0000               	dw	0
  1298  016D4E  0000               	dw	0
  1299  016D50  0000               	dw	0
  1300  016D52  0000               	dw	0
  1301  016D54  0000               	dw	0
  1302  016D56  0000               	dw	0
  1303  016D58  0000               	dw	0
  1304  016D5A  0000               	dw	0
  1305  016D5C  0000               	dw	0
  1306  016D5E  0000               	dw	0
  1307  016D60  0000               	dw	0
  1308  016D62  0000               	dw	0
  1309  016D64  0000               	dw	0
  1310  016D66  0000               	dw	0
  1311  016D68  0000               	dw	0
  1312  016D6A  0000               	dw	0
  1313  016D6C  0000               	dw	0
  1314  016D6E  0000               	dw	0
  1315  016D70  0000               	dw	0
  1316  016D72  0000               	dw	0
  1317  016D74  0000               	dw	0
  1318  016D76  0000               	dw	0
  1319  016D78  0000               	dw	0
  1320  016D7A  0000               	dw	0
  1321  016D7C  0000               	dw	0
  1322  016D7E  0000               	dw	0
  1323  016D80  0000               	dw	0
  1324  016D82  42FA               	dw	17146
  1325  016D84  0000               	dw	0
  1326  016D86  0000               	dw	0
  1327  016D88  0000               	dw	0
  1328  016D8A  0000               	dw	0
  1329  016D8C  0000               	dw	0
  1330  016D8E  0000               	dw	0
  1331  016D90  0000               	dw	0
  1332  016D92  0000               	dw	0
  1333  016D94  0000               	dw	0
  1334  016D96  0000               	dw	0
  1335  016D98  0000               	dw	0
  1336  016D9A  0000               	dw	0
  1337  016D9C  0000               	dw	0
  1338  016D9E  0000               	dw	0
  1339  016DA0  0000               	dw	0
  1340  016DA2  0000               	dw	0
  1341  016DA4  0000               	dw	0
  1342  016DA6  0000               	dw	0
  1343  016DA8  0000               	dw	0
  1344  016DAA  0000               	dw	0
  1345  016DAC  00                 	db	0
  1346  016DAD  01                 	db	1
  1347  016DAE  0000               	dw	0
  1348  016DB0  3F80               	dw	16256
  1349  016DB2  0000               	dw	0
  1350  016DB4  3F80               	dw	16256
  1351  016DB6  00                 	db	0
  1352  016DB7  00                 	db	0
  1353  016DB8  00                 	db	0
  1354  016DB9  00                 	db	0
  1355  016DBA  00                 	db	0
  1356  016DBB  00                 	db	0
  1357  016DBC  00                 	db	0
  1358  016DBD  00                 	db	0
  1359  016DBE  00                 	db	0
  1360  016DBF  00                 	db	0
  1361  016DC0  00                 	db	0
  1362  016DC1  00                 	db	0
  1363  016DC2  00                 	db	0
  1364  016DC3  00                 	db	0
  1365  016DC4  00                 	db	0
  1366  016DC5  00                 	db	0
  1367  016DC6  00                 	db	0
  1368  016DC7  00                 	db	0
  1369  016DC8  00                 	db	0
  1370  016DC9  00                 	db	0
  1371  016DCA  00                 	db	0
  1372  016DCB  00                 	db	0
  1373  016DCC  00                 	db	0
  1374  016DCD  00                 	db	0
  1375  016DCE  00                 	db	0
  1376  016DCF  00                 	db	0
  1377  016DD0  00                 	db	0
  1378  016DD1  00                 	db	0
  1379  016DD2  00                 	db	0
  1380  016DD3  00                 	db	0
  1381  016DD4  00                 	db	0
  1382  016DD5  00                 	db	0
  1383  016DD6  00                 	db	0
  1384  016DD7  00                 	db	0
  1385  016DD8  00                 	db	0
  1386  016DD9  00                 	db	0
  1387  016DDA  00                 	db	0
  1388  016DDB  00                 	db	0
  1389  016DDC  00                 	db	0
  1390  016DDD  00                 	db	0
  1391  016DDE  00                 	db	0
  1392  016DDF  00                 	db	0
  1393  016DE0  00                 	db	0
  1394  016DE1  00                 	db	0
  1395  016DE2  00                 	db	0
  1396  016DE3  00                 	db	0
  1397  016DE4  00                 	db	0
  1398  016DE5  00                 	db	0
  1399  016DE6  00                 	db	0
  1400  016DE7  00                 	db	0
  1401  016DE8  00                 	db	0
  1402  016DE9  00                 	db	0
  1403  016DEA  00                 	db	0
  1404  016DEB  00                 	db	0
  1405  016DEC  00                 	db	0
  1406  016DED  00                 	db	0
  1407  016DEE  00                 	db	0
  1408  016DEF  00                 	db	0
  1409  016DF0  00                 	db	0
  1410  016DF1  00                 	db	0
  1411  016DF2  00                 	db	0
  1412  016DF3  00                 	db	0
  1413  016DF4  00                 	db	0
  1414  016DF5  00                 	db	0
  1415  016DF6  00                 	db	0
  1416  016DF7  00                 	db	0
  1417  016DF8  00                 	db	0
  1418  016DF9  00                 	db	0
  1419  016DFA  00                 	db	0
  1420  016DFB  00                 	db	0
  1421  016DFC  00                 	db	0
  1422  016DFD  00                 	db	0
  1423  016DFE  00                 	db	0
  1424  016DFF  00                 	db	0
  1425  016E00  00                 	db	0
  1426  016E01  00                 	db	0
  1427  016E02  0000               	dw	0
  1428  016E04  0000               	dw	0
  1429  016E06  0000               	dw	0
  1430  016E08  0000               	dw	0
  1431  016E0A  0000               	dw	0
  1432  016E0C  0000               	dw	0
  1433  016E0E  0000               	dw	0
  1434  016E10  0000               	dw	0
  1435  016E12  0000               	dw	0
  1436  016E14  0000               	dw	0
  1437  016E16  01                 	db	1
  1438  016E17  00                 	db	0
  1439  016E18  00                 	db	0
  1440  016E19  00                 	db	0
  1441  016E1A  00                 	db	0
  1442  016E1B  00                 	db	0
  1443  016E1C  00                 	db	0
  1444  016E1D  00                 	db	0
  1445  016E1E  00                 	db	0
  1446                           
  1447                           	psect	idataBANK0
  1448  01C0BE                     __pidataBANK0:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for stoa@F1166
  1452  01C0BE  28                 	db	40
  1453  01C0BF  6E                 	db	110
  1454  01C0C0  75                 	db	117
  1455  01C0C1  6C                 	db	108
  1456  01C0C2  6C                 	db	108
  1457  01C0C3  29                 	db	41
  1458  01C0C4  00                 	db	0
  1459                           
  1460                           ;initializer for _H
  1461  01C0C5  00                 	db	0
  1462  01C0C6  00                 	db	0
  1463  01C0C7  01                 	db	1
  1464  01C0C8  00                 	db	0
  1465  01C0C9  01                 	db	1
  1466  01C0CA  00                 	db	0
  1467  01C0CB  00                 	db	0
  1468                           
  1469                           	psect	idataBANK1
  1470  019EFE                     __pidataBANK1:
  1471                           	opt callstack 0
  1472                           
  1473                           ;initializer for _R
  1474  019EFE  0000               	dw	0
  1475  019F00  0000               	dw	0
  1476  019F02  0000               	dw	0
  1477  019F04  0000               	dw	0
  1478  019F06  0000               	dw	0
  1479  019F08  0000               	dw	0
  1480  019F0A  0000               	dw	0
  1481  019F0C  0000               	dw	0
  1482  019F0E  0000               	dw	0
  1483  019F10  0000               	dw	0
  1484  019F12  0000               	dw	0
  1485  019F14  0000               	dw	0
  1486  019F16  0000               	dw	0
  1487  019F18  0000               	dw	0
  1488  019F1A  0000               	dw	0
  1489  019F1C  0000               	dw	0
  1490  019F1E  0F67               	dw	3943
  1491  019F20  0F8F               	dw	3983
  1492  019F22  0000               	dw	0
  1493  019F24  0000               	dw	0
  1494  019F26  0000               	dw	0
  1495  019F28  0000               	dw	0
  1496  019F2A  00                 	db	0
  1497  019F2B  0000               	dw	0
  1498  019F2D  00                 	db	0
  1499                           
  1500                           ;initializer for _V
  1501  019F2E  00                 	db	0
  1502  019F2F  00                 	db	0
  1503  019F30  00                 	db	0
  1504  019F31  00                 	db	0
  1505  019F32  00                 	db	0
  1506  019F33  00                 	db	0
  1507  019F34  00                 	db	0
  1508  019F35  00                 	db	0
  1509  019F36  00                 	db	0
  1510  019F37  00                 	db	0
  1511  019F38  00                 	db	0
  1512  019F39  00                 	db	0
  1513  019F3A  00                 	db	0
  1514  019F3B  00                 	db	0
  1515  019F3C  00                 	db	0
  1516  019F3D  00                 	db	0
  1517  019F3E  00                 	db	0
  1518  019F3F  00                 	db	0
  1519  019F40  00                 	db	0
  1520  019F41  00                 	db	0
  1521  019F42  00                 	db	0
  1522  019F43  00                 	db	0
  1523  019F44  00                 	db	0
  1524  019F45  00                 	db	0
  1525  019F46  00                 	db	0
  1526  019F47  00                 	db	0
  1527  019F48  00                 	db	0
  1528  019F49  00                 	db	0
  1529  019F4A  00                 	db	0
  1530  019F4B  00                 	db	0
  1531  019F4C  00                 	db	0
  1532  019F4D  00                 	db	0
  1533  019F4E  00                 	db	0
  1534  019F4F  00                 	db	0
  1535  019F50  00                 	db	0
  1536  019F51  00                 	db	0
  1537  019F52  00                 	db	0
  1538  019F53  00                 	db	0
  1539  019F54  00                 	db	0
  1540  019F55  00                 	db	0
  1541  019F56  00                 	db	0
  1542  019F57  00                 	db	0
  1543  019F58  00                 	db	0
  1544  019F59  00                 	db	0
  1545  019F5A  00                 	db	0
  1546  019F5B  00                 	db	0
  1547  019F5C  00                 	db	0
  1548  019F5D  00                 	db	0
  1549  019F5E  00                 	db	0
  1550  019F5F  00                 	db	0
  1551  019F60  00                 	db	0
  1552  019F61  00                 	db	0
  1553  019F62  00                 	db	0
  1554  019F63  00                 	db	0
  1555  019F64  00                 	db	0
  1556  019F65  00                 	db	0
  1557  019F66  00                 	db	0
  1558  019F67  00                 	db	0
  1559  019F68  00                 	db	0
  1560  019F69  00                 	db	0
  1561  019F6A  00                 	db	0
  1562  019F6B  00                 	db	0
  1563  019F6C  00                 	db	0
  1564  019F6D  00                 	db	0
  1565  019F6E  00                 	db	0
  1566  019F6F  00                 	db	0
  1567  019F70  00                 	db	0
  1568  019F71  00                 	db	0
  1569  019F72  00                 	db	0
  1570  019F73  00                 	db	0
  1571  019F74  00                 	db	0
  1572  019F75  00                 	db	0
  1573  019F76  00                 	db	0
  1574  019F77  00                 	db	0
  1575  019F78  00                 	db	0
  1576  019F79  00                 	db	0
  1577  019F7A  00                 	db	0
  1578  019F7B  00                 	db	0
  1579  019F7C  00                 	db	0
  1580  019F7D  00                 	db	0
  1581  019F7E  00                 	db	0
  1582  019F7F  00                 	db	0
  1583  019F80  00                 	db	0
  1584  019F81  00                 	db	0
  1585  019F82  00                 	db	0
  1586  019F83  00                 	db	0
  1587  019F84  00                 	db	0
  1588  019F85  00                 	db	0
  1589  019F86  00                 	db	0
  1590  019F87  00                 	db	0
  1591  019F88  00                 	db	0
  1592  019F89  00                 	db	0
  1593  019F8A  00                 	db	0
  1594  019F8B  00                 	db	0
  1595  019F8C  00                 	db	0
  1596  019F8D  00                 	db	0
  1597  019F8E  00                 	db	0
  1598  019F8F  00                 	db	0
  1599  019F90  00                 	db	0
  1600  019F91  00                 	db	0
  1601  019F92  00                 	db	0
  1602  019F93  00                 	db	0
  1603  019F94  00                 	db	0
  1604  019F95  00                 	db	0
  1605  019F96  00                 	db	0
  1606  019F97  00                 	db	0
  1607  019F98  00                 	db	0
  1608  019F99  00                 	db	0
  1609  019F9A  00                 	db	0
  1610  019F9B  00                 	db	0
  1611  019F9C  00                 	db	0
  1612  019F9D  00                 	db	0
  1613  019F9E  00                 	db	0
  1614  019F9F  00                 	db	0
  1615  019FA0  00                 	db	0
  1616  019FA1  00                 	db	0
  1617  019FA2  00                 	db	0
  1618  019FA3  00                 	db	0
  1619  019FA4  00                 	db	0
  1620  019FA5  00                 	db	0
  1621  019FA6  00                 	db	0
  1622  019FA7  00                 	db	0
  1623  019FA8  00                 	db	0
  1624  019FA9  00                 	db	0
  1625  019FAA  00                 	db	0
  1626  019FAB  00                 	db	0
  1627  019FAC  00                 	db	0
  1628  019FAD  00                 	db	0
  1629  019FAE  00                 	db	0
  1630  019FAF  0000               	dw	0
  1631  019FB1  0000               	dw	0
  1632  019FB3  0000               	dw	0
  1633  019FB5  0000               	dw	0
  1634  019FB7  00                 	db	0
  1635  019FB8  00                 	db	0
  1636  019FB9  00                 	db	0
  1637  019FBA  00                 	db	0
  1638  019FBB  00                 	db	0
  1639  019FBC  00                 	db	0
  1640  019FBD  0000               	dw	0
  1641  019FBF  0000               	dw	0
  1642  019FC1  0000               	dw	0
  1643  019FC3  0000               	dw	0
  1644  019FC5  0000               	dw	0
  1645  019FC7  0000               	dw	0
  1646  019FC9  00                 	db	0
  1647  019FCA  00                 	db	0
  1648  019FCB  00                 	db	0
  1649  019FCC  00                 	db	0
  1650  019FCD  00                 	db	0
  1651  019FCE  00                 	db	0
  1652  019FCF  00                 	db	0
  1653  019FD0  00                 	db	0
  1654  019FD1  00                 	db	0
  1655  019FD2  00                 	db	0
  1656  019FD3  00                 	db	0
  1657  019FD4  0000               	dw	0
  1658  019FD6  0000               	dw	0
  1659  019FD8  2D                 	db	45
  1660  019FD9  00                 	db	0
  1661  019FDA  00                 	db	0
  1662  019FDB  00                 	db	0
  1663  019FDC  00                 	db	0
  1664  019FDD  0000               	dw	0
  1665  019FDF  0000               	dw	0
  1666  019FE1  0000               	dw	0
  1667  019FE3  0000               	dw	0
  1668  019FE5  0000               	dw	0
  1669  019FE7  0000               	dw	0
  1670  019FE9  0000               	dw	0
  1671  019FEB  0000               	dw	0
  1672                           
  1673                           	psect	mediumconst
  1674  00FA34                     __pmediumconst:
  1675                           	opt callstack 0
  1676  00FA34  00                 	db	0
  1677  00FA35                     _BVSOC_TABLE:
  1678                           	opt callstack 0
  1679  00FA35  59D8               	dw	23000
  1680  00FA37  0000               	dw	0
  1681  00FA39  0005               	dw	5
  1682  00FA3B  0000               	dw	0
  1683  00FA3D  5B68               	dw	23400
  1684  00FA3F  0000               	dw	0
  1685  00FA41  000A               	dw	10
  1686  00FA43  0000               	dw	0
  1687  00FA45  5C30               	dw	23600
  1688  00FA47  0000               	dw	0
  1689  00FA49  0014               	dw	20
  1690  00FA4B  0000               	dw	0
  1691  00FA4D  5E38               	dw	24120
  1692  00FA4F  0000               	dw	0
  1693  00FA51  0019               	dw	25
  1694  00FA53  0000               	dw	0
  1695  00FA55  5E88               	dw	24200
  1696  00FA57  0000               	dw	0
  1697  00FA59  001E               	dw	30
  1698  00FA5B  0000               	dw	0
  1699  00FA5D  5F78               	dw	24440
  1700  00FA5F  0000               	dw	0
  1701  00FA61  0028               	dw	40
  1702  00FA63  0000               	dw	0
  1703  00FA65  5FDC               	dw	24540
  1704  00FA67  0000               	dw	0
  1705  00FA69  002D               	dw	45
  1706  00FA6B  0000               	dw	0
  1707  00FA6D  6018               	dw	24600
  1708  00FA6F  0000               	dw	0
  1709  00FA71  0032               	dw	50
  1710  00FA73  0000               	dw	0
  1711  00FA75  6046               	dw	24646
  1712  00FA77  0000               	dw	0
  1713  00FA79  0035               	dw	53
  1714  00FA7B  0000               	dw	0
  1715  00FA7D  607C               	dw	24700
  1716  00FA7F  0000               	dw	0
  1717  00FA81  0037               	dw	55
  1718  00FA83  0000               	dw	0
  1719  00FA85  60AE               	dw	24750
  1720  00FA87  0000               	dw	0
  1721  00FA89  0039               	dw	57
  1722  00FA8B  0000               	dw	0
  1723  00FA8D  60E0               	dw	24800
  1724  00FA8F  0000               	dw	0
  1725  00FA91  003C               	dw	60
  1726  00FA93  0000               	dw	0
  1727  00FA95  6112               	dw	24850
  1728  00FA97  0000               	dw	0
  1729  00FA99  003F               	dw	63
  1730  00FA9B  0000               	dw	0
  1731  00FA9D  615D               	dw	24925
  1732  00FA9F  0000               	dw	0
  1733  00FAA1  0043               	dw	67
  1734  00FAA3  0000               	dw	0
  1735  00FAA5  61A8               	dw	25000
  1736  00FAA7  0000               	dw	0
  1737  00FAA9  0046               	dw	70
  1738  00FAAB  0000               	dw	0
  1739  00FAAD  61BC               	dw	25020
  1740  00FAAF  0000               	dw	0
  1741  00FAB1  0048               	dw	72
  1742  00FAB3  0000               	dw	0
  1743  00FAB5  61D0               	dw	25040
  1744  00FAB7  0000               	dw	0
  1745  00FAB9  004B               	dw	75
  1746  00FABB  0000               	dw	0
  1747  00FABD  61DA               	dw	25050
  1748  00FABF  0000               	dw	0
  1749  00FAC1  0050               	dw	80
  1750  00FAC3  0000               	dw	0
  1751  00FAC5  61E4               	dw	25060
  1752  00FAC7  0000               	dw	0
  1753  00FAC9  0055               	dw	85
  1754  00FACB  0000               	dw	0
  1755  00FACD  61F8               	dw	25080
  1756  00FACF  0000               	dw	0
  1757  00FAD1  005A               	dw	90
  1758  00FAD3  0000               	dw	0
  1759  00FAD5  6208               	dw	25096
  1760  00FAD7  0000               	dw	0
  1761  00FAD9  005C               	dw	92
  1762  00FADB  0000               	dw	0
  1763  00FADD  6222               	dw	25122
  1764  00FADF  0000               	dw	0
  1765  00FAE1  005D               	dw	93
  1766  00FAE3  0000               	dw	0
  1767  00FAE5  6234               	dw	25140
  1768  00FAE7  0000               	dw	0
  1769  00FAE9  005F               	dw	95
  1770  00FAEB  0000               	dw	0
  1771  00FAED  6248               	dw	25160
  1772  00FAEF  0000               	dw	0
  1773  00FAF1  0061               	dw	97
  1774  00FAF3  0000               	dw	0
  1775  00FAF5  625C               	dw	25180
  1776  00FAF7  0000               	dw	0
  1777  00FAF9  0064               	dw	100
  1778  00FAFB  0000               	dw	0
  1779  00FAFD  6784               	dw	26500
  1780  00FAFF  0000               	dw	0
  1781  00FB01  0062               	dw	98
  1782  00FB03  0000               	dw	0
  1783  00FB05                     __end_of_BVSOC_TABLE:
  1784                           	opt callstack 0
  1785  00FB05                     _T:
  1786                           	opt callstack 0
  1787  00FB05  63                 	db	99
  1788  00FB06  6F                 	db	111
  1789  00FB07  6D                 	db	109
  1790  00FB08  6D                 	db	109
  1791  00FB09  61                 	db	97
  1792  00FB0A  6E                 	db	110
  1793  00FB0B  64                 	db	100
  1794  00FB0C  73                 	db	115
  1795  00FB0D  20                 	db	32
  1796  00FB0E  31                 	db	49
  1797  00FB0F  00                 	db	0
  1798  00FB10  00                 	db	0
  1799  00FB11  00                 	db	0
  1800  00FB12  00                 	db	0
  1801  00FB13  00                 	db	0
  1802  00FB14  00                 	db	0
  1803  00FB15  00                 	db	0
  1804  00FB16  00                 	db	0
  1805  00FB17  64                 	db	100
  1806  00FB18  69                 	db	105
  1807  00FB19  73                 	db	115
  1808  00FB1A  70                 	db	112
  1809  00FB1B  6C                 	db	108
  1810  00FB1C  61                 	db	97
  1811  00FB1D  79                 	db	121
  1812  00FB1E  73                 	db	115
  1813  00FB1F  20                 	db	32
  1814  00FB20  31                 	db	49
  1815  00FB21  00                 	db	0
  1816  00FB22  00                 	db	0
  1817  00FB23  00                 	db	0
  1818  00FB24  00                 	db	0
  1819  00FB25  00                 	db	0
  1820  00FB26  00                 	db	0
  1821  00FB27  00                 	db	0
  1822  00FB28  00                 	db	0
  1823  00FB29  63                 	db	99
  1824  00FB2A  6F                 	db	111
  1825  00FB2B  6D                 	db	109
  1826  00FB2C  6D                 	db	109
  1827  00FB2D  61                 	db	97
  1828  00FB2E  6E                 	db	110
  1829  00FB2F  64                 	db	100
  1830  00FB30  73                 	db	115
  1831  00FB31  20                 	db	32
  1832  00FB32  32                 	db	50
  1833  00FB33  00                 	db	0
  1834  00FB34  00                 	db	0
  1835  00FB35  00                 	db	0
  1836  00FB36  00                 	db	0
  1837  00FB37  00                 	db	0
  1838  00FB38  00                 	db	0
  1839  00FB39  00                 	db	0
  1840  00FB3A  00                 	db	0
  1841  00FB3B  64                 	db	100
  1842  00FB3C  69                 	db	105
  1843  00FB3D  73                 	db	115
  1844  00FB3E  70                 	db	112
  1845  00FB3F  6C                 	db	108
  1846  00FB40  61                 	db	97
  1847  00FB41  79                 	db	121
  1848  00FB42  73                 	db	115
  1849  00FB43  20                 	db	32
  1850  00FB44  32                 	db	50
  1851  00FB45  00                 	db	0
  1852  00FB46  00                 	db	0
  1853  00FB47  00                 	db	0
  1854  00FB48  00                 	db	0
  1855  00FB49  00                 	db	0
  1856  00FB4A  00                 	db	0
  1857  00FB4B  00                 	db	0
  1858  00FB4C  00                 	db	0
  1859  00FB4D  63                 	db	99
  1860  00FB4E  6F                 	db	111
  1861  00FB4F  6D                 	db	109
  1862  00FB50  6D                 	db	109
  1863  00FB51  61                 	db	97
  1864  00FB52  6E                 	db	110
  1865  00FB53  64                 	db	100
  1866  00FB54  73                 	db	115
  1867  00FB55  20                 	db	32
  1868  00FB56  33                 	db	51
  1869  00FB57  00                 	db	0
  1870  00FB58  00                 	db	0
  1871  00FB59  00                 	db	0
  1872  00FB5A  00                 	db	0
  1873  00FB5B  00                 	db	0
  1874  00FB5C  00                 	db	0
  1875  00FB5D  00                 	db	0
  1876  00FB5E  00                 	db	0
  1877  00FB5F  64                 	db	100
  1878  00FB60  69                 	db	105
  1879  00FB61  73                 	db	115
  1880  00FB62  70                 	db	112
  1881  00FB63  6C                 	db	108
  1882  00FB64  61                 	db	97
  1883  00FB65  79                 	db	121
  1884  00FB66  73                 	db	115
  1885  00FB67  20                 	db	32
  1886  00FB68  33                 	db	51
  1887  00FB69  00                 	db	0
  1888  00FB6A  00                 	db	0
  1889  00FB6B  00                 	db	0
  1890  00FB6C  00                 	db	0
  1891  00FB6D  00                 	db	0
  1892  00FB6E  00                 	db	0
  1893  00FB6F  00                 	db	0
  1894  00FB70  00                 	db	0
  1895  00FB71  63                 	db	99
  1896  00FB72  6F                 	db	111
  1897  00FB73  6D                 	db	109
  1898  00FB74  6D                 	db	109
  1899  00FB75  61                 	db	97
  1900  00FB76  6E                 	db	110
  1901  00FB77  64                 	db	100
  1902  00FB78  73                 	db	115
  1903  00FB79  20                 	db	32
  1904  00FB7A  34                 	db	52
  1905  00FB7B  00                 	db	0
  1906  00FB7C  00                 	db	0
  1907  00FB7D  00                 	db	0
  1908  00FB7E  00                 	db	0
  1909  00FB7F  00                 	db	0
  1910  00FB80  00                 	db	0
  1911  00FB81  00                 	db	0
  1912  00FB82  00                 	db	0
  1913  00FB83  64                 	db	100
  1914  00FB84  69                 	db	105
  1915  00FB85  73                 	db	115
  1916  00FB86  70                 	db	112
  1917  00FB87  6C                 	db	108
  1918  00FB88  61                 	db	97
  1919  00FB89  79                 	db	121
  1920  00FB8A  73                 	db	115
  1921  00FB8B  20                 	db	32
  1922  00FB8C  34                 	db	52
  1923  00FB8D  00                 	db	0
  1924  00FB8E  00                 	db	0
  1925  00FB8F  00                 	db	0
  1926  00FB90  00                 	db	0
  1927  00FB91  00                 	db	0
  1928  00FB92  00                 	db	0
  1929  00FB93  00                 	db	0
  1930  00FB94  00                 	db	0
  1931  00FB95                     __end_of_T:
  1932                           	opt callstack 0
  1933  00FB95                     _spin:
  1934                           	opt callstack 0
  1935  00FB95  7C                 	db	124
  1936  00FB96  7C                 	db	124
  1937  00FB97  2F                 	db	47
  1938  00FB98  2F                 	db	47
  1939  00FB99  2D                 	db	45
  1940  00FB9A  2D                 	db	45
  1941  00FB9B  00                 	db	0
  1942  00FB9C  00                 	db	0
  1943  00FB9D  00                 	db	0
  1944  00FB9E  00                 	db	0
  1945  00FB9F  00                 	db	0
  1946  00FBA0  00                 	db	0
  1947  00FBA1  00                 	db	0
  1948  00FBA2  00                 	db	0
  1949  00FBA3  00                 	db	0
  1950  00FBA4  00                 	db	0
  1951  00FBA5  00                 	db	0
  1952  00FBA6  00                 	db	0
  1953  00FBA7  00                 	db	0
  1954  00FBA8  00                 	db	0
  1955  00FBA9  7C                 	db	124
  1956  00FBAA  7C                 	db	124
  1957  00FBAB  2F                 	db	47
  1958  00FBAC  2F                 	db	47
  1959  00FBAD  2D                 	db	45
  1960  00FBAE  2D                 	db	45
  1961  00FBAF  5C                 	db	92
  1962  00FBB0  5C                 	db	92
  1963  00FBB1  00                 	db	0
  1964  00FBB2  00                 	db	0
  1965  00FBB3  00                 	db	0
  1966  00FBB4  00                 	db	0
  1967  00FBB5  00                 	db	0
  1968  00FBB6  00                 	db	0
  1969  00FBB7  00                 	db	0
  1970  00FBB8  00                 	db	0
  1971  00FBB9  00                 	db	0
  1972  00FBBA  00                 	db	0
  1973  00FBBB  00                 	db	0
  1974  00FBBC  00                 	db	0
  1975  00FBBD  4F                 	db	79
  1976  00FBBE  4F                 	db	79
  1977  00FBBF  4F                 	db	79
  1978  00FBC0  4F                 	db	79
  1979  00FBC1  4F                 	db	79
  1980  00FBC2  4F                 	db	79
  1981  00FBC3  2D                 	db	45
  1982  00FBC4  2D                 	db	45
  1983  00FBC5  5F                 	db	95
  1984  00FBC6  5F                 	db	95
  1985  00FBC7  2D                 	db	45
  1986  00FBC8  00                 	db	0
  1987  00FBC9  00                 	db	0
  1988  00FBCA  00                 	db	0
  1989  00FBCB  00                 	db	0
  1990  00FBCC  00                 	db	0
  1991  00FBCD  00                 	db	0
  1992  00FBCE  00                 	db	0
  1993  00FBCF  00                 	db	0
  1994  00FBD0  00                 	db	0
  1995  00FBD1  76                 	db	118
  1996  00FBD2  76                 	db	118
  1997  00FBD3  3C                 	db	60
  1998  00FBD4  3C                 	db	60
  1999  00FBD5  5E                 	db	94
  2000  00FBD6  5E                 	db	94
  2001  00FBD7  3E                 	db	62
  2002  00FBD8  3E                 	db	62
  2003  00FBD9  00                 	db	0
  2004  00FBDA  00                 	db	0
  2005  00FBDB  00                 	db	0
  2006  00FBDC  00                 	db	0
  2007  00FBDD  00                 	db	0
  2008  00FBDE  00                 	db	0
  2009  00FBDF  00                 	db	0
  2010  00FBE0  00                 	db	0
  2011  00FBE1  00                 	db	0
  2012  00FBE2  00                 	db	0
  2013  00FBE3  00                 	db	0
  2014  00FBE4  00                 	db	0
  2015  00FBE5  2E                 	db	46
  2016  00FBE6  2E                 	db	46
  2017  00FBE7  2A                 	db	42
  2018  00FBE8  2A                 	db	42
  2019  00FBE9  78                 	db	120
  2020  00FBEA  23                 	db	35
  2021  00FBEB  78                 	db	120
  2022  00FBEC  23                 	db	35
  2023  00FBED  58                 	db	88
  2024  00FBEE  58                 	db	88
  2025  00FBEF  7C                 	db	124
  2026  00FBF0  7C                 	db	124
  2027  00FBF1  2D                 	db	45
  2028  00FBF2  2D                 	db	45
  2029  00FBF3  00                 	db	0
  2030  00FBF4  00                 	db	0
  2031  00FBF5  00                 	db	0
  2032  00FBF6  00                 	db	0
  2033  00FBF7  00                 	db	0
  2034  00FBF8  00                 	db	0
  2035  00FBF9  2E                 	db	46
  2036  00FBFA  2E                 	db	46
  2037  00FBFB  6F                 	db	111
  2038  00FBFC  6F                 	db	111
  2039  00FBFD  4F                 	db	79
  2040  00FBFE  4F                 	db	79
  2041  00FBFF  6F                 	db	111
  2042  00FC00  6F                 	db	111
  2043  00FC01  00                 	db	0
  2044  00FC02  00                 	db	0
  2045  00FC03  00                 	db	0
  2046  00FC04  00                 	db	0
  2047  00FC05  00                 	db	0
  2048  00FC06  00                 	db	0
  2049  00FC07  00                 	db	0
  2050  00FC08  00                 	db	0
  2051  00FC09  00                 	db	0
  2052  00FC0A  00                 	db	0
  2053  00FC0B  00                 	db	0
  2054  00FC0C  00                 	db	0
  2055  00FC0D                     __end_of_spin:
  2056                           	opt callstack 0
  2057  00FC0D  0000               	dw	0
  2058  00FC0F  3F80               	dw	16256
  2059  00FC11  0000               	dw	0
  2060  00FC13  3FC0               	dw	16320
  2061  00FC15                     __end_of_bp:
  2062                           	opt callstack 0
  2063  00FC15  AA00               	dw	43520
  2064  00FC17  3FB8               	dw	16312
  2065  00FC19                     __end_of_ivln2_h:
  2066                           	opt callstack 0
  2067  00FC19  23C6               	dw	9158
  2068  00FC1B  B8F6               	dw	47350
  2069  00FC1D                     __end_of_cp_l:
  2070                           	opt callstack 0
  2071  00FC1D  4000               	dw	16384
  2072  00FC1F  3F76               	dw	16246
  2073  00FC21                     __end_of_cp_h:
  2074                           	opt callstack 0
  2075  0000                     _IVTADL	set	14493
  2076  0000                     _IVTADH	set	14494
  2077  0000                     _IVTADU	set	14495
  2078  0000                     _PIR6bits	set	14758
  2079  0000                     _PIR4bits	set	14756
  2080  0000                     _PIE8bits	set	14744
  2081  0000                     _PIR8bits	set	14760
  2082  0000                     _SCANPR	set	14839
  2083  0000                     _DMA2PR	set	14836
  2084  0000                     _DMA1PR	set	14835
  2085  0000                     _MAINPR	set	14834
  2086  0000                     _ISRPR	set	14833
  2087  0000                     _PIE2bits	set	14738
  2088  0000                     _PIR2bits	set	14754
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR9bits	set	14761
  2091  0000                     _PIE6bits	set	14742
  2092  0000                     _PIE3bits	set	14739
  2093  0000                     _PMD7	set	14791
  2094  0000                     _PMD6	set	14790
  2095  0000                     _PMD5	set	14789
  2096  0000                     _PMD4	set	14788
  2097  0000                     _PMD3	set	14787
  2098  0000                     _PMD2	set	14786
  2099  0000                     _PMD1	set	14785
  2100  0000                     _PMD0	set	14784
  2101  0000                     _OSCTUNE	set	14814
  2102  0000                     _OSCFRQ	set	14815
  2103  0000                     _OSCEN	set	14813
  2104  0000                     _OSCCON3	set	14811
  2105  0000                     _OSCCON1	set	14809
  2106  0000                     _IPR8bits	set	14728
  2107  0000                     _IPR9bits	set	14729
  2108  0000                     _IPR5bits	set	14725
  2109  0000                     _IPR1bits	set	14721
  2110  0000                     _IPR3bits	set	14723
  2111  0000                     _IPR6bits	set	14726
  2112  0000                     _IPR2bits	set	14722
  2113  0000                     _PIE5bits	set	14741
  2114  0000                     _PIE1bits	set	14737
  2115  0000                     _PIR5bits	set	14757
  2116  0000                     _PIR1bits	set	14753
  2117  0000                     _PLLR	set	118496
  2118  0000                     _SPI1SDIPPS	set	15071
  2119  0000                     _U1RXPPS	set	15077
  2120  0000                     _RC6PPS	set	14870
  2121  0000                     _RC5PPS	set	14869
  2122  0000                     _INT1PPS	set	15041
  2123  0000                     _RD1PPS	set	14873
  2124  0000                     _INT0PPS	set	15040
  2125  0000                     _RC3PPS	set	14867
  2126  0000                     _RB6PPS	set	14862
  2127  0000                     _SPI1SCKPPS	set	15070
  2128  0000                     _U2RXPPS	set	15080
  2129  0000                     _SLRCONF	set	14995
  2130  0000                     _SLRCONE	set	14979
  2131  0000                     _SLRCOND	set	14963
  2132  0000                     _SLRCONC	set	14947
  2133  0000                     _SLRCONB	set	14931
  2134  0000                     _SLRCONA	set	14915
  2135  0000                     _ODCOND	set	14962
  2136  0000                     _ODCONC	set	14946
  2137  0000                     _ODCONB	set	14930
  2138  0000                     _ODCONA	set	14914
  2139  0000                     _ODCONF	set	14994
  2140  0000                     _ODCONE	set	14978
  2141  0000                     _WPUC	set	14945
  2142  0000                     _WPUA	set	14913
  2143  0000                     _WPUB	set	14929
  2144  0000                     _WPUE	set	14977
  2145  0000                     _WPUF	set	14993
  2146  0000                     _WPUD	set	14961
  2147  0000                     _ANSELA	set	14912
  2148  0000                     _ANSELF	set	14992
  2149  0000                     _ANSELE	set	14976
  2150  0000                     _ANSELB	set	14928
  2151  0000                     _ANSELC	set	14944
  2152  0000                     _ANSELD	set	14960
  2153  0000                     _DMA2SSA	set	15321
  2154  0000                     _DMA1SSA	set	15353
  2155  0000                     _DMA2DSZ	set	15310
  2156  0000                     _DMA2SSZ	set	15319
  2157  0000                     _DMA2DSA	set	15312
  2158  0000                     _DMA1DSZ	set	15342
  2159  0000                     _DMA1SSZ	set	15351
  2160  0000                     _DMA1DSA	set	15344
  2161  0000                     _DMA2CON0bits	set	15324
  2162  0000                     _DMA2CON1bits	set	15325
  2163  0000                     _DMA1CON0bits	set	15356
  2164  0000                     _DMA1CON1bits	set	15357
  2165  0000                     _DMA2CON0	set	15324
  2166  0000                     _DMA2AIRQ	set	15326
  2167  0000                     _DMA2SIRQ	set	15327
  2168  0000                     _DMA2CON1	set	15325
  2169  0000                     _DMA1CON0	set	15356
  2170  0000                     _DMA1AIRQ	set	15358
  2171  0000                     _DMA1SIRQ	set	15359
  2172  0000                     _DMA1CON1	set	15357
  2173  0000                     _CLKRCON	set	15589
  2174  0000                     _CLKRCLK	set	15590
  2175  0000                     _SPI1INTFbits	set	15642
  2176  0000                     _SPI1CON0bits	set	15636
  2177  0000                     _SPI1RXB	set	15632
  2178  0000                     _SPI1TXB	set	15633
  2179  0000                     _SPI1TCNTL	set	15634
  2180  0000                     _SPI1CON0	set	15636
  2181  0000                     _SPI1CLK	set	15644
  2182  0000                     _SPI1BAUD	set	15641
  2183  0000                     _SPI1CON2	set	15638
  2184  0000                     _SPI1CON1	set	15637
  2185  0000                     _U2RXB	set	15824
  2186  0000                     _U2TXB	set	15826
  2187  0000                     _U2ERRIE	set	15842
  2188  0000                     _U2ERRIR	set	15841
  2189  0000                     _U2UIR	set	15840
  2190  0000                     _U2FIFO	set	15839
  2191  0000                     _U2BRGH	set	15838
  2192  0000                     _U2BRGL	set	15837
  2193  0000                     _U2CON2	set	15836
  2194  0000                     _U2CON1	set	15835
  2195  0000                     _U2CON0	set	15834
  2196  0000                     _U2P3L	set	15832
  2197  0000                     _U2P2L	set	15830
  2198  0000                     _U2P1L	set	15828
  2199  0000                     _U1RXB	set	15848
  2200  0000                     _U1ERRIE	set	15866
  2201  0000                     _U1ERRIR	set	15865
  2202  0000                     _U1UIR	set	15864
  2203  0000                     _U1FIFO	set	15863
  2204  0000                     _U1BRGH	set	15862
  2205  0000                     _U1BRGL	set	15861
  2206  0000                     _U1CON2	set	15860
  2207  0000                     _U1CON1	set	15859
  2208  0000                     _U1CON0	set	15858
  2209  0000                     _U1P3H	set	15857
  2210  0000                     _U1P3L	set	15856
  2211  0000                     _U1P2H	set	15855
  2212  0000                     _U1P2L	set	15854
  2213  0000                     _U1P1H	set	15853
  2214  0000                     _U1P1L	set	15852
  2215  0000                     _FVRCON	set	16065
  2216  0000                     _ADFLTRL	set	16102
  2217  0000                     _ADFLTRH	set	16103
  2218  0000                     _ADCON0bits	set	16120
  2219  0000                     _ADCON0	set	16120
  2220  0000                     _ADCLK	set	16127
  2221  0000                     _ADACT	set	16126
  2222  0000                     _ADREF	set	16125
  2223  0000                     _ADSTAT	set	16124
  2224  0000                     _ADCON3	set	16123
  2225  0000                     _ADCON2	set	16122
  2226  0000                     _ADCON1	set	16121
  2227  0000                     _ADPREH	set	16119
  2228  0000                     _ADPREL	set	16118
  2229  0000                     _ADCAP	set	16117
  2230  0000                     _ADACQH	set	16116
  2231  0000                     _ADACQL	set	16115
  2232  0000                     _ADPCH	set	16113
  2233  0000                     _ADRPT	set	16108
  2234  0000                     _ADACCU	set	16106
  2235  0000                     _ADSTPTH	set	16101
  2236  0000                     _ADSTPTL	set	16100
  2237  0000                     _ADUTHH	set	16097
  2238  0000                     _ADUTHL	set	16096
  2239  0000                     _ADLTHH	set	16095
  2240  0000                     _ADLTHL	set	16094
  2241  0000                     _CCPTMRS1bits	set	16223
  2242  0000                     _PORTFbits	set	16335
  2243  0000                     _LATFbits	set	16319
  2244  0000                     _LATCbits	set	16316
  2245  0000                     _LATDbits	set	16317
  2246  0000                     _PORTBbits	set	16331
  2247  0000                     _T3CONbits	set	16294
  2248  0000                     _T3CON	set	16294
  2249  0000                     _TMR3L	set	16292
  2250  0000                     _TMR3H	set	16293
  2251  0000                     _T3CLK	set	16297
  2252  0000                     _T3GATE	set	16296
  2253  0000                     _T3GCON	set	16295
  2254  0000                     _T2CON	set	16300
  2255  0000                     _T2TMR	set	16298
  2256  0000                     _T2PR	set	16299
  2257  0000                     _T2RST	set	16303
  2258  0000                     _T2HLT	set	16301
  2259  0000                     _T2CLKCON	set	16302
  2260  0000                     _PWM8DCL	set	16224
  2261  0000                     _PWM8DCH	set	16225
  2262  0000                     _PWM8CON	set	16226
  2263  0000                     _LATEbits	set	16318
  2264  0000                     _T5CONbits	set	16282
  2265  0000                     _T5CON	set	16282
  2266  0000                     _TMR5L	set	16280
  2267  0000                     _TMR5H	set	16281
  2268  0000                     _T5CLK	set	16285
  2269  0000                     _T5GATE	set	16284
  2270  0000                     _T5GCON	set	16283
  2271  0000                     _T6CON	set	16276
  2272  0000                     _T6TMR	set	16274
  2273  0000                     _T6PR	set	16275
  2274  0000                     _T6RST	set	16279
  2275  0000                     _T6HLT	set	16277
  2276  0000                     _T6CLKCON	set	16278
  2277  0000                     _TRISD	set	16325
  2278  0000                     _TRISC	set	16324
  2279  0000                     _TRISB	set	16323
  2280  0000                     _TRISA	set	16322
  2281  0000                     _TRISF	set	16327
  2282  0000                     _TRISE	set	16326
  2283  0000                     _LATC	set	16316
  2284  0000                     _LATB	set	16315
  2285  0000                     _LATF	set	16319
  2286  0000                     _LATA	set	16314
  2287  0000                     _LATD	set	16317
  2288  0000                     _LATE	set	16318
  2289  0000                     _IVTLOCKbits	set	16340
  2290  0000                     _IVTLOCK	set	16340
  2291  0000                     _INTCON0bits	set	16338
  2292  0000                     _GIE	set	130711
  2293  00FC21                     STR_64:
  2294                           
  2295                           ; BSR set to: 57
  2296  00FC21  20                 	db	32
  2297  00FC22  25                 	db	37
  2298  00FC23  63                 	db	99	;'c'
  2299  00FC24  20                 	db	32
  2300  00FC25  2C                 	db	44
  2301  00FC26  25                 	db	37
  2302  00FC27  6C                 	db	108	;'l'
  2303  00FC28  75                 	db	117	;'u'
  2304  00FC29  2C                 	db	44
  2305  00FC2A  25                 	db	37
  2306  00FC2B  34                 	db	52	;'4'
  2307  00FC2C  2E                 	db	46
  2308  00FC2D  34                 	db	52	;'4'
  2309  00FC2E  66                 	db	102	;'f'
  2310  00FC2F  2C                 	db	44
  2311  00FC30  25                 	db	37
  2312  00FC31  34                 	db	52	;'4'
  2313  00FC32  2E                 	db	46
  2314  00FC33  34                 	db	52	;'4'
  2315  00FC34  66                 	db	102	;'f'
  2316  00FC35  2C                 	db	44
  2317  00FC36  25                 	db	37
  2318  00FC37  34                 	db	52	;'4'
  2319  00FC38  2E                 	db	46
  2320  00FC39  34                 	db	52	;'4'
  2321  00FC3A  66                 	db	102	;'f'
  2322  00FC3B  2C                 	db	44
  2323  00FC3C  25                 	db	37
  2324  00FC3D  34                 	db	52	;'4'
  2325  00FC3E  2E                 	db	46
  2326  00FC3F  34                 	db	52	;'4'
  2327  00FC40  66                 	db	102	;'f'
  2328  00FC41  2C                 	db	44
  2329  00FC42  25                 	db	37
  2330  00FC43  34                 	db	52	;'4'
  2331  00FC44  2E                 	db	46
  2332  00FC45  33                 	db	51	;'3'
  2333  00FC46  66                 	db	102	;'f'
  2334  00FC47  2C                 	db	44
  2335  00FC48  25                 	db	37
  2336  00FC49  34                 	db	52	;'4'
  2337  00FC4A  2E                 	db	46
  2338  00FC4B  33                 	db	51	;'3'
  2339  00FC4C  66                 	db	102	;'f'
  2340  00FC4D  2C                 	db	44
  2341  00FC4E  25                 	db	37
  2342  00FC4F  34                 	db	52	;'4'
  2343  00FC50  2E                 	db	46
  2344  00FC51  33                 	db	51	;'3'
  2345  00FC52  66                 	db	102	;'f'
  2346  00FC53  2C                 	db	44
  2347  00FC54  25                 	db	37
  2348  00FC55  34                 	db	52	;'4'
  2349  00FC56  2E                 	db	46
  2350  00FC57  33                 	db	51	;'3'
  2351  00FC58  66                 	db	102	;'f'
  2352  00FC59  2C                 	db	44
  2353  00FC5A  25                 	db	37
  2354  00FC5B  34                 	db	52	;'4'
  2355  00FC5C  2E                 	db	46
  2356  00FC5D  33                 	db	51	;'3'
  2357  00FC5E  66                 	db	102	;'f'
  2358  00FC5F  2C                 	db	44
  2359  00FC60  25                 	db	37
  2360  00FC61  34                 	db	52	;'4'
  2361  00FC62  2E                 	db	46
  2362  00FC63  33                 	db	51	;'3'
  2363  00FC64  66                 	db	102	;'f'
  2364  00FC65  2C                 	db	44
  2365  00FC66  25                 	db	37
  2366  00FC67  64                 	db	100	;'d'
  2367  00FC68  2C                 	db	44
  2368  00FC69  25                 	db	37
  2369  00FC6A  64                 	db	100	;'d'
  2370  00FC6B  2C                 	db	44
  2371  00FC6C  25                 	db	37
  2372  00FC6D  32                 	db	50	;'2'
  2373  00FC6E  2E                 	db	46
  2374  00FC6F  36                 	db	54	;'6'
  2375  00FC70  66                 	db	102	;'f'
  2376  00FC71  2C                 	db	44
  2377  00FC72  25                 	db	37
  2378  00FC73  34                 	db	52	;'4'
  2379  00FC74  2E                 	db	46
  2380  00FC75  33                 	db	51	;'3'
  2381  00FC76  66                 	db	102	;'f'
  2382  00FC77  2C                 	db	44
  2383  00FC78  25                 	db	37
  2384  00FC79  64                 	db	100	;'d'
  2385  00FC7A  2C                 	db	44
  2386  00FC7B  25                 	db	37
  2387  00FC7C  64                 	db	100	;'d'
  2388  00FC7D  2C                 	db	44
  2389  00FC7E  25                 	db	37
  2390  00FC7F  6C                 	db	108	;'l'
  2391  00FC80  75                 	db	117	;'u'
  2392  00FC81  2C                 	db	44
  2393  00FC82  25                 	db	37
  2394  00FC83  6C                 	db	108	;'l'
  2395  00FC84  75                 	db	117	;'u'
  2396  00FC85  2C                 	db	44
  2397  00FC86  25                 	db	37
  2398  00FC87  34                 	db	52	;'4'
  2399  00FC88  2E                 	db	46
  2400  00FC89  33                 	db	51	;'3'
  2401  00FC8A  66                 	db	102	;'f'
  2402  00FC8B  2C                 	db	44
  2403  00FC8C  25                 	db	37
  2404  00FC8D  34                 	db	52	;'4'
  2405  00FC8E  2E                 	db	46
  2406  00FC8F  33                 	db	51	;'3'
  2407  00FC90  66                 	db	102	;'f'
  2408  00FC91  2C                 	db	44
  2409  00FC92  25                 	db	37
  2410  00FC93  34                 	db	52	;'4'
  2411  00FC94  2E                 	db	46
  2412  00FC95  33                 	db	51	;'3'
  2413  00FC96  66                 	db	102	;'f'
  2414  00FC97  0D                 	db	13
  2415  00FC98  0A                 	db	10
  2416  00FC99  00                 	db	0
  2417  00FC9A                     STR_17:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FC9A  52                 	db	82	;'R'
  2421  00FC9B  31                 	db	49	;'1'
  2422  00FC9C  20                 	db	32
  2423  00FC9D  25                 	db	37
  2424  00FC9E  32                 	db	50	;'2'
  2425  00FC9F  2E                 	db	46
  2426  00FCA0  33                 	db	51	;'3'
  2427  00FCA1  66                 	db	102	;'f'
  2428  00FCA2  20                 	db	32
  2429  00FCA3  25                 	db	37
  2430  00FCA4  33                 	db	51	;'3'
  2431  00FCA5  2E                 	db	46
  2432  00FCA6  34                 	db	52	;'4'
  2433  00FCA7  66                 	db	102	;'f'
  2434  00FCA8  20                 	db	32
  2435  00FCA9  20                 	db	32
  2436  00FCAA  20                 	db	32
  2437  00FCAB  20                 	db	32
  2438  00FCAC  20                 	db	32
  2439  00FCAD  20                 	db	32
  2440  00FCAE  20                 	db	32
  2441  00FCAF  20                 	db	32
  2442  00FCB0  20                 	db	32
  2443  00FCB1  20                 	db	32
  2444  00FCB2  20                 	db	32
  2445  00FCB3  00                 	db	0
  2446  00FCB4                     STR_18:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FCB4  52                 	db	82	;'R'
  2450  00FCB5  32                 	db	50	;'2'
  2451  00FCB6  20                 	db	32
  2452  00FCB7  25                 	db	37
  2453  00FCB8  32                 	db	50	;'2'
  2454  00FCB9  2E                 	db	46
  2455  00FCBA  33                 	db	51	;'3'
  2456  00FCBB  66                 	db	102	;'f'
  2457  00FCBC  20                 	db	32
  2458  00FCBD  25                 	db	37
  2459  00FCBE  33                 	db	51	;'3'
  2460  00FCBF  2E                 	db	46
  2461  00FCC0  34                 	db	52	;'4'
  2462  00FCC1  66                 	db	102	;'f'
  2463  00FCC2  20                 	db	32
  2464  00FCC3  20                 	db	32
  2465  00FCC4  20                 	db	32
  2466  00FCC5  20                 	db	32
  2467  00FCC6  20                 	db	32
  2468  00FCC7  20                 	db	32
  2469  00FCC8  20                 	db	32
  2470  00FCC9  20                 	db	32
  2471  00FCCA  20                 	db	32
  2472  00FCCB  20                 	db	32
  2473  00FCCC  20                 	db	32
  2474  00FCCD  00                 	db	0
  2475  00FCCE                     STR_9:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FCCE  53                 	db	83	;'S'
  2479  00FCCF  20                 	db	32
  2480  00FCD0  53                 	db	83	;'S'
  2481  00FCD1  25                 	db	37
  2482  00FCD2  63                 	db	99	;'c'
  2483  00FCD3  43                 	db	67	;'C'
  2484  00FCD4  20                 	db	32
  2485  00FCD5  25                 	db	37
  2486  00FCD6  64                 	db	100	;'d'
  2487  00FCD7  20                 	db	32
  2488  00FCD8  25                 	db	37
  2489  00FCD9  32                 	db	50	;'2'
  2490  00FCDA  2E                 	db	46
  2491  00FCDB  34                 	db	52	;'4'
  2492  00FCDC  66                 	db	102	;'f'
  2493  00FCDD  20                 	db	32
  2494  00FCDE  20                 	db	32
  2495  00FCDF  20                 	db	32
  2496  00FCE0  20                 	db	32
  2497  00FCE1  20                 	db	32
  2498  00FCE2  20                 	db	32
  2499  00FCE3  20                 	db	32
  2500  00FCE4  20                 	db	32
  2501  00FCE5  20                 	db	32
  2502  00FCE6  20                 	db	32
  2503  00FCE7  00                 	db	0
  2504  00FCE8                     
  2505                           ; BSR set to: 57
  2506  00FCE8  20                 	db	32
  2507  00FCE9  4D                 	db	77	;'M'
  2508  00FCEA  65                 	db	101	;'e'
  2509  00FCEB  73                 	db	115	;'s'
  2510  00FCEC  67                 	db	103	;'g'
  2511  00FCED  20                 	db	32
  2512  00FCEE  25                 	db	37
  2513  00FCEF  64                 	db	100	;'d'
  2514  00FCF0  20                 	db	32
  2515  00FCF1  53                 	db	83	;'S'
  2516  00FCF2  74                 	db	116	;'t'
  2517  00FCF3  61                 	db	97	;'a'
  2518  00FCF4  63                 	db	99	;'c'
  2519  00FCF5  6B                 	db	107	;'k'
  2520  00FCF6  20                 	db	32
  2521  00FCF7  25                 	db	37
  2522  00FCF8  64                 	db	100	;'d'
  2523  00FCF9  20                 	db	32
  2524  00FCFA  20                 	db	32
  2525  00FCFB  20                 	db	32
  2526  00FCFC  20                 	db	32
  2527  00FCFD  20                 	db	32
  2528  00FCFE  20                 	db	32
  2529  00FCFF  00                 	db	0
  2530  00FD00                     STR_16:
  2531                           
  2532                           ; BSR set to: 57
  2533  00FD00  45                 	db	69	;'E'
  2534  00FD01  53                 	db	83	;'S'
  2535  00FD02  52                 	db	82	;'R'
  2536  00FD03  20                 	db	32
  2537  00FD04  20                 	db	32
  2538  00FD05  25                 	db	37
  2539  00FD06  32                 	db	50	;'2'
  2540  00FD07  2E                 	db	46
  2541  00FD08  36                 	db	54	;'6'
  2542  00FD09  66                 	db	102	;'f'
  2543  00FD0A  20                 	db	32
  2544  00FD0B  20                 	db	32
  2545  00FD0C  20                 	db	32
  2546  00FD0D  20                 	db	32
  2547  00FD0E  20                 	db	32
  2548  00FD0F  20                 	db	32
  2549  00FD10  20                 	db	32
  2550  00FD11  20                 	db	32
  2551  00FD12  20                 	db	32
  2552  00FD13  20                 	db	32
  2553  00FD14  20                 	db	32
  2554  00FD15  00                 	db	0
  2555  00FD16                     STR_10:
  2556                           
  2557                           ; BSR set to: 57
  2558  00FD16  53                 	db	83	;'S'
  2559  00FD17  74                 	db	116	;'t'
  2560  00FD18  61                 	db	97	;'a'
  2561  00FD19  74                 	db	116	;'t'
  2562  00FD1A  69                 	db	105	;'i'
  2563  00FD1B  63                 	db	99	;'c'
  2564  00FD1C  20                 	db	32
  2565  00FD1D  53                 	db	83	;'S'
  2566  00FD1E  4F                 	db	79	;'O'
  2567  00FD1F  43                 	db	67	;'C'
  2568  00FD20  20                 	db	32
  2569  00FD21  25                 	db	37
  2570  00FD22  64                 	db	100	;'d'
  2571  00FD23  20                 	db	32
  2572  00FD24  20                 	db	32
  2573  00FD25  20                 	db	32
  2574  00FD26  20                 	db	32
  2575  00FD27  20                 	db	32
  2576  00FD28  20                 	db	32
  2577  00FD29  20                 	db	32
  2578  00FD2A  20                 	db	32
  2579  00FD2B  00                 	db	0
  2580  00FD2C                     STR_11:
  2581                           
  2582                           ; BSR set to: 57
  2583  00FD2C  42                 	db	66	;'B'
  2584  00FD2D  61                 	db	97	;'a'
  2585  00FD2E  74                 	db	116	;'t'
  2586  00FD2F  74                 	db	116	;'t'
  2587  00FD30  65                 	db	101	;'e'
  2588  00FD31  72                 	db	114	;'r'
  2589  00FD32  79                 	db	121	;'y'
  2590  00FD33  20                 	db	32
  2591  00FD34  41                 	db	65	;'A'
  2592  00FD35  68                 	db	104	;'h'
  2593  00FD36  20                 	db	32
  2594  00FD37  25                 	db	37
  2595  00FD38  33                 	db	51	;'3'
  2596  00FD39  2E                 	db	46
  2597  00FD3A  32                 	db	50	;'2'
  2598  00FD3B  66                 	db	102	;'f'
  2599  00FD3C  20                 	db	32
  2600  00FD3D  20                 	db	32
  2601  00FD3E  20                 	db	32
  2602  00FD3F  20                 	db	32
  2603  00FD40  20                 	db	32
  2604  00FD41  00                 	db	0
  2605  00FD42                     STR_5:
  2606                           
  2607                           ; BSR set to: 57
  2608  00FD42  20                 	db	32
  2609  00FD43  20                 	db	32
  2610  00FD44  20                 	db	32
  2611  00FD45  20                 	db	32
  2612  00FD46  20                 	db	32
  2613  00FD47  20                 	db	32
  2614  00FD48  20                 	db	32
  2615  00FD49  20                 	db	32
  2616  00FD4A  20                 	db	32
  2617  00FD4B  20                 	db	32
  2618  00FD4C  20                 	db	32
  2619  00FD4D  20                 	db	32
  2620  00FD4E  20                 	db	32
  2621  00FD4F  20                 	db	32
  2622  00FD50  20                 	db	32
  2623  00FD51  20                 	db	32
  2624  00FD52  20                 	db	32
  2625  00FD53  20                 	db	32
  2626  00FD54  20                 	db	32
  2627  00FD55  20                 	db	32
  2628  00FD56  00                 	db	0
  2629  00FD57                     STR_8:
  2630                           
  2631                           ; BSR set to: 57
  2632  00FD57  42                 	db	66	;'B'
  2633  00FD58  56                 	db	86	;'V'
  2634  00FD59  20                 	db	32
  2635  00FD5A  25                 	db	37
  2636  00FD5B  32                 	db	50	;'2'
  2637  00FD5C  2E                 	db	46
  2638  00FD5D  34                 	db	52	;'4'
  2639  00FD5E  66                 	db	102	;'f'
  2640  00FD5F  20                 	db	32
  2641  00FD60  20                 	db	32
  2642  00FD61  20                 	db	32
  2643  00FD62  20                 	db	32
  2644  00FD63  20                 	db	32
  2645  00FD64  20                 	db	32
  2646  00FD65  20                 	db	32
  2647  00FD66  20                 	db	32
  2648  00FD67  20                 	db	32
  2649  00FD68  20                 	db	32
  2650  00FD69  20                 	db	32
  2651  00FD6A  20                 	db	32
  2652  00FD6B  00                 	db	0
  2653  00FD6C                     STR_4:
  2654                           
  2655                           ; BSR set to: 57
  2656  00FD6C  20                 	db	32
  2657  00FD6D  4E                 	db	78	;'N'
  2658  00FD6E  53                 	db	83	;'S'
  2659  00FD6F  41                 	db	65	;'A'
  2660  00FD70  53                 	db	83	;'S'
  2661  00FD71  50                 	db	80	;'P'
  2662  00FD72  4F                 	db	79	;'O'
  2663  00FD73  4F                 	db	79	;'O'
  2664  00FD74  4B                 	db	75	;'K'
  2665  00FD75  20                 	db	32
  2666  00FD76  20                 	db	32
  2667  00FD77  20                 	db	32
  2668  00FD78  20                 	db	32
  2669  00FD79  20                 	db	32
  2670  00FD7A  20                 	db	32
  2671  00FD7B  20                 	db	32
  2672  00FD7C  20                 	db	32
  2673  00FD7D  20                 	db	32
  2674  00FD7E  20                 	db	32
  2675  00FD7F  20                 	db	32
  2676  00FD80  00                 	db	0
  2677  00FD81                     STR_12:
  2678                           
  2679                           ; BSR set to: 57
  2680  00FD81  42                 	db	66	;'B'
  2681  00FD82  61                 	db	97	;'a'
  2682  00FD83  74                 	db	116	;'t'
  2683  00FD84  74                 	db	116	;'t'
  2684  00FD85  65                 	db	101	;'e'
  2685  00FD86  72                 	db	114	;'r'
  2686  00FD87  79                 	db	121	;'y'
  2687  00FD88  20                 	db	32
  2688  00FD89  45                 	db	69	;'E'
  2689  00FD8A  53                 	db	83	;'S'
  2690  00FD8B  52                 	db	82	;'R'
  2691  00FD8C  20                 	db	32
  2692  00FD8D  20                 	db	32
  2693  00FD8E  20                 	db	32
  2694  00FD8F  20                 	db	32
  2695  00FD90  20                 	db	32
  2696  00FD91  20                 	db	32
  2697  00FD92  20                 	db	32
  2698  00FD93  20                 	db	32
  2699  00FD94  20                 	db	32
  2700  00FD95  00                 	db	0
  2701  00FD96                     STR_13:
  2702                           
  2703                           ; BSR set to: 57
  2704  00FD96  43                 	db	67	;'C'
  2705  00FD97  61                 	db	97	;'a'
  2706  00FD98  6C                 	db	108	;'l'
  2707  00FD99  63                 	db	99	;'c'
  2708  00FD9A  75                 	db	117	;'u'
  2709  00FD9B  6C                 	db	108	;'l'
  2710  00FD9C  61                 	db	97	;'a'
  2711  00FD9D  74                 	db	116	;'t'
  2712  00FD9E  69                 	db	105	;'i'
  2713  00FD9F  6F                 	db	111	;'o'
  2714  00FDA0  6E                 	db	110	;'n'
  2715  00FDA1  20                 	db	32
  2716  00FDA2  20                 	db	32
  2717  00FDA3  20                 	db	32
  2718  00FDA4  20                 	db	32
  2719  00FDA5  20                 	db	32
  2720  00FDA6  20                 	db	32
  2721  00FDA7  20                 	db	32
  2722  00FDA8  20                 	db	32
  2723  00FDA9  20                 	db	32
  2724  00FDAA  00                 	db	0
  2725  00FDAB                     STR_2:
  2726                           
  2727                           ; BSR set to: 57
  2728  00FDAB  20                 	db	32
  2729  00FDAC  56                 	db	86	;'V'
  2730  00FDAD  65                 	db	101	;'e'
  2731  00FDAE  72                 	db	114	;'r'
  2732  00FDAF  73                 	db	115	;'s'
  2733  00FDB0  69                 	db	105	;'i'
  2734  00FDB1  6F                 	db	111	;'o'
  2735  00FDB2  6E                 	db	110	;'n'
  2736  00FDB3  20                 	db	32
  2737  00FDB4  25                 	db	37
  2738  00FDB5  73                 	db	115	;'s'
  2739  00FDB6  20                 	db	32
  2740  00FDB7  20                 	db	32
  2741  00FDB8  20                 	db	32
  2742  00FDB9  20                 	db	32
  2743  00FDBA  20                 	db	32
  2744  00FDBB  20                 	db	32
  2745  00FDBC  20                 	db	32
  2746  00FDBD  20                 	db	32
  2747  00FDBE  20                 	db	32
  2748  00FDBF  00                 	db	0
  2749  00FDC0                     STR_1:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FDC0  20                 	db	32
  2753  00FDC1  4D                 	db	77	;'M'
  2754  00FDC2  42                 	db	66	;'B'
  2755  00FDC3  4D                 	db	77	;'M'
  2756  00FDC4  43                 	db	67	;'C'
  2757  00FDC5  20                 	db	32
  2758  00FDC6  53                 	db	83	;'S'
  2759  00FDC7  4F                 	db	79	;'O'
  2760  00FDC8  4C                 	db	76	;'L'
  2761  00FDC9  41                 	db	65	;'A'
  2762  00FDCA  52                 	db	82	;'R'
  2763  00FDCB  4D                 	db	77	;'M'
  2764  00FDCC  4F                 	db	79	;'O'
  2765  00FDCD  4E                 	db	78	;'N'
  2766  00FDCE  20                 	db	32
  2767  00FDCF  20                 	db	32
  2768  00FDD0  20                 	db	32
  2769  00FDD1  20                 	db	32
  2770  00FDD2  20                 	db	32
  2771  00FDD3  20                 	db	32
  2772  00FDD4  00                 	db	0
  2773  00FDD5                     STR_15:
  2774                           
  2775                           ; BSR set to: 57
  2776  00FDD5  43                 	db	67	;'C'
  2777  00FDD6  68                 	db	104	;'h'
  2778  00FDD7  65                 	db	101	;'e'
  2779  00FDD8  63                 	db	99	;'c'
  2780  00FDD9  6B                 	db	107	;'k'
  2781  00FDDA  69                 	db	105	;'i'
  2782  00FDDB  6E                 	db	110	;'n'
  2783  00FDDC  67                 	db	103	;'g'
  2784  00FDDD  20                 	db	32
  2785  00FDDE  25                 	db	37
  2786  00FDDF  63                 	db	99	;'c'
  2787  00FDE0  20                 	db	32
  2788  00FDE1  25                 	db	37
  2789  00FDE2  63                 	db	99	;'c'
  2790  00FDE3  20                 	db	32
  2791  00FDE4  20                 	db	32
  2792  00FDE5  20                 	db	32
  2793  00FDE6  20                 	db	32
  2794  00FDE7  20                 	db	32
  2795  00FDE8  20                 	db	32
  2796  00FDE9  00                 	db	0
  2797  00FDEA                     STR_14:
  2798                           
  2799                           ; BSR set to: 57
  2800  00FDEA  43                 	db	67	;'C'
  2801  00FDEB  68                 	db	104	;'h'
  2802  00FDEC  65                 	db	101	;'e'
  2803  00FDED  63                 	db	99	;'c'
  2804  00FDEE  6B                 	db	107	;'k'
  2805  00FDEF  20                 	db	32
  2806  00FDF0  33                 	db	51	;'3'
  2807  00FDF1  30                 	db	48	;'0'
  2808  00FDF2  20                 	db	32
  2809  00FDF3  73                 	db	115	;'s'
  2810  00FDF4  65                 	db	101	;'e'
  2811  00FDF5  63                 	db	99	;'c'
  2812  00FDF6  6F                 	db	111	;'o'
  2813  00FDF7  6E                 	db	110	;'n'
  2814  00FDF8  64                 	db	100	;'d'
  2815  00FDF9  73                 	db	115	;'s'
  2816  00FDFA  20                 	db	32
  2817  00FDFB  20                 	db	32
  2818  00FDFC  20                 	db	32
  2819  00FDFD  20                 	db	32
  2820  00FDFE  00                 	db	0
  2821  00FDFF                     STR_37:
  2822                           
  2823                           ; BSR set to: 57
  2824  00FDFF  45                 	db	69	;'E'
  2825  00FE00  53                 	db	83	;'S'
  2826  00FE01  52                 	db	82	;'R'
  2827  00FE02  20                 	db	32
  2828  00FE03  20                 	db	32
  2829  00FE04  25                 	db	37
  2830  00FE05  32                 	db	50	;'2'
  2831  00FE06  2E                 	db	46
  2832  00FE07  36                 	db	54	;'6'
  2833  00FE08  66                 	db	102	;'f'
  2834  00FE09  20                 	db	32
  2835  00FE0A  20                 	db	32
  2836  00FE0B  20                 	db	32
  2837  00FE0C  20                 	db	32
  2838  00FE0D  20                 	db	32
  2839  00FE0E  20                 	db	32
  2840  00FE0F  20                 	db	32
  2841  00FE10  20                 	db	32
  2842  00FE11  20                 	db	32
  2843  00FE12  00                 	db	0
  2844  00FE13                     STR_36:
  2845                           
  2846                           ; BSR set to: 57
  2847  00FE13  53                 	db	83	;'S'
  2848  00FE14  25                 	db	37
  2849  00FE15  63                 	db	99	;'c'
  2850  00FE16  43                 	db	67	;'C'
  2851  00FE17  20                 	db	32
  2852  00FE18  25                 	db	37
  2853  00FE19  64                 	db	100	;'d'
  2854  00FE1A  20                 	db	32
  2855  00FE1B  52                 	db	82	;'R'
  2856  00FE1C  55                 	db	85	;'U'
  2857  00FE1D  4E                 	db	78	;'N'
  2858  00FE1E  20                 	db	32
  2859  00FE1F  25                 	db	37
  2860  00FE20  64                 	db	100	;'d'
  2861  00FE21  20                 	db	32
  2862  00FE22  20                 	db	32
  2863  00FE23  20                 	db	32
  2864  00FE24  20                 	db	32
  2865  00FE25  20                 	db	32
  2866  00FE26  00                 	db	0
  2867  00FE27                     STR_25:
  2868                           
  2869                           ; BSR set to: 57
  2870  00FE27  50                 	db	80	;'P'
  2871  00FE28  56                 	db	86	;'V'
  2872  00FE29  20                 	db	32
  2873  00FE2A  25                 	db	37
  2874  00FE2B  63                 	db	99	;'c'
  2875  00FE2C  20                 	db	32
  2876  00FE2D  57                 	db	87	;'W'
  2877  00FE2E  48                 	db	72	;'H'
  2878  00FE2F  20                 	db	32
  2879  00FE30  25                 	db	37
  2880  00FE31  33                 	db	51	;'3'
  2881  00FE32  2E                 	db	46
  2882  00FE33  32                 	db	50	;'2'
  2883  00FE34  66                 	db	102	;'f'
  2884  00FE35  20                 	db	32
  2885  00FE36  20                 	db	32
  2886  00FE37  20                 	db	32
  2887  00FE38  20                 	db	32
  2888  00FE39  20                 	db	32
  2889  00FE3A  00                 	db	0
  2890  00FE3B                     STR_34:
  2891                           
  2892                           ; BSR set to: 57
  2893  00FE3B  42                 	db	66	;'B'
  2894  00FE3C  41                 	db	65	;'A'
  2895  00FE3D  54                 	db	84	;'T'
  2896  00FE3E  54                 	db	84	;'T'
  2897  00FE3F  20                 	db	32
  2898  00FE40  50                 	db	80	;'P'
  2899  00FE41  57                 	db	87	;'W'
  2900  00FE42  52                 	db	82	;'R'
  2901  00FE43  20                 	db	32
  2902  00FE44  25                 	db	37
  2903  00FE45  33                 	db	51	;'3'
  2904  00FE46  2E                 	db	46
  2905  00FE47  32                 	db	50	;'2'
  2906  00FE48  66                 	db	102	;'f'
  2907  00FE49  20                 	db	32
  2908  00FE4A  20                 	db	32
  2909  00FE4B  20                 	db	32
  2910  00FE4C  20                 	db	32
  2911  00FE4D  20                 	db	32
  2912  00FE4E  00                 	db	0
  2913  00FE4F                     STR_38:
  2914                           
  2915                           ; BSR set to: 57
  2916  00FE4F  52                 	db	82	;'R'
  2917  00FE50  31                 	db	49	;'1'
  2918  00FE51  20                 	db	32
  2919  00FE52  25                 	db	37
  2920  00FE53  32                 	db	50	;'2'
  2921  00FE54  2E                 	db	46
  2922  00FE55  33                 	db	51	;'3'
  2923  00FE56  66                 	db	102	;'f'
  2924  00FE57  20                 	db	32
  2925  00FE58  25                 	db	37
  2926  00FE59  33                 	db	51	;'3'
  2927  00FE5A  2E                 	db	46
  2928  00FE5B  34                 	db	52	;'4'
  2929  00FE5C  66                 	db	102	;'f'
  2930  00FE5D  20                 	db	32
  2931  00FE5E  20                 	db	32
  2932  00FE5F  20                 	db	32
  2933  00FE60  20                 	db	32
  2934  00FE61  20                 	db	32
  2935  00FE62  00                 	db	0
  2936  00FE63                     STR_39:
  2937                           
  2938                           ; BSR set to: 57
  2939  00FE63  52                 	db	82	;'R'
  2940  00FE64  32                 	db	50	;'2'
  2941  00FE65  20                 	db	32
  2942  00FE66  25                 	db	37
  2943  00FE67  32                 	db	50	;'2'
  2944  00FE68  2E                 	db	46
  2945  00FE69  33                 	db	51	;'3'
  2946  00FE6A  66                 	db	102	;'f'
  2947  00FE6B  20                 	db	32
  2948  00FE6C  25                 	db	37
  2949  00FE6D  33                 	db	51	;'3'
  2950  00FE6E  2E                 	db	46
  2951  00FE6F  34                 	db	52	;'4'
  2952  00FE70  66                 	db	102	;'f'
  2953  00FE71  20                 	db	32
  2954  00FE72  20                 	db	32
  2955  00FE73  20                 	db	32
  2956  00FE74  20                 	db	32
  2957  00FE75  20                 	db	32
  2958  00FE76  00                 	db	0
  2959  00FE77                     STR_22:
  2960                           
  2961                           ; BSR set to: 57
  2962  00FE77  50                 	db	80	;'P'
  2963  00FE78  56                 	db	86	;'V'
  2964  00FE79  20                 	db	32
  2965  00FE7A  25                 	db	37
  2966  00FE7B  63                 	db	99	;'c'
  2967  00FE7C  20                 	db	32
  2968  00FE7D  50                 	db	80	;'P'
  2969  00FE7E  57                 	db	87	;'W'
  2970  00FE7F  52                 	db	82	;'R'
  2971  00FE80  20                 	db	32
  2972  00FE81  25                 	db	37
  2973  00FE82  33                 	db	51	;'3'
  2974  00FE83  2E                 	db	46
  2975  00FE84  32                 	db	50	;'2'
  2976  00FE85  66                 	db	102	;'f'
  2977  00FE86  20                 	db	32
  2978  00FE87  20                 	db	32
  2979  00FE88  20                 	db	32
  2980  00FE89  20                 	db	32
  2981  00FE8A  00                 	db	0
  2982  00FE8B                     STR_35:
  2983                           
  2984                           ; BSR set to: 57
  2985  00FE8B  42                 	db	66	;'B'
  2986  00FE8C  41                 	db	65	;'A'
  2987  00FE8D  48                 	db	72	;'H'
  2988  00FE8E  20                 	db	32
  2989  00FE8F  25                 	db	37
  2990  00FE90  33                 	db	51	;'3'
  2991  00FE91  2E                 	db	46
  2992  00FE92  32                 	db	50	;'2'
  2993  00FE93  66                 	db	102	;'f'
  2994  00FE94  20                 	db	32
  2995  00FE95  50                 	db	80	;'P'
  2996  00FE96  25                 	db	37
  2997  00FE97  33                 	db	51	;'3'
  2998  00FE98  2E                 	db	46
  2999  00FE99  32                 	db	50	;'2'
  3000  00FE9A  66                 	db	102	;'f'
  3001  00FE9B  20                 	db	32
  3002  00FE9C  20                 	db	32
  3003  00FE9D  20                 	db	32
  3004  00FE9E  00                 	db	0
  3005  00FE9F                     STR_47:
  3006                           
  3007                           ; BSR set to: 57
  3008  00FE9F  48                 	db	72	;'H'
  3009  00FEA0  45                 	db	69	;'E'
  3010  00FEA1  4C                 	db	76	;'L'
  3011  00FEA2  50                 	db	80	;'P'
  3012  00FEA3  20                 	db	32
  3013  00FEA4  25                 	db	37
  3014  00FEA5  73                 	db	115	;'s'
  3015  00FEA6  20                 	db	32
  3016  00FEA7  20                 	db	32
  3017  00FEA8  20                 	db	32
  3018  00FEA9  20                 	db	32
  3019  00FEAA  20                 	db	32
  3020  00FEAB  20                 	db	32
  3021  00FEAC  20                 	db	32
  3022  00FEAD  20                 	db	32
  3023  00FEAE  20                 	db	32
  3024  00FEAF  20                 	db	32
  3025  00FEB0  20                 	db	32
  3026  00FEB1  00                 	db	0
  3027  00FEB2                     
  3028                           ; BSR set to: 57
  3029  00FEB2  44                 	db	68	;'D'
  3030  00FEB3  49                 	db	73	;'I'
  3031  00FEB4  53                 	db	83	;'S'
  3032  00FEB5  50                 	db	80	;'P'
  3033  00FEB6  4C                 	db	76	;'L'
  3034  00FEB7  41                 	db	65	;'A'
  3035  00FEB8  59                 	db	89	;'Y'
  3036  00FEB9  20                 	db	32
  3037  00FEBA  25                 	db	37
  3038  00FEBB  73                 	db	115	;'s'
  3039  00FEBC  20                 	db	32
  3040  00FEBD  20                 	db	32
  3041  00FEBE  20                 	db	32
  3042  00FEBF  20                 	db	32
  3043  00FEC0  20                 	db	32
  3044  00FEC1  20                 	db	32
  3045  00FEC2  20                 	db	32
  3046  00FEC3  20                 	db	32
  3047  00FEC4  00                 	db	0
  3048  00FEC5                     STR_31:
  3049                           
  3050                           ; BSR set to: 57
  3051  00FEC5  42                 	db	66	;'B'
  3052  00FEC6  41                 	db	65	;'A'
  3053  00FEC7  54                 	db	84	;'T'
  3054  00FEC8  20                 	db	32
  3055  00FEC9  49                 	db	73	;'I'
  3056  00FECA  57                 	db	87	;'W'
  3057  00FECB  48                 	db	72	;'H'
  3058  00FECC  20                 	db	32
  3059  00FECD  25                 	db	37
  3060  00FECE  34                 	db	52	;'4'
  3061  00FECF  2E                 	db	46
  3062  00FED0  31                 	db	49	;'1'
  3063  00FED1  66                 	db	102	;'f'
  3064  00FED2  20                 	db	32
  3065  00FED3  20                 	db	32
  3066  00FED4  20                 	db	32
  3067  00FED5  20                 	db	32
  3068  00FED6  20                 	db	32
  3069  00FED7  00                 	db	0
  3070  00FED8                     STR_32:
  3071                           
  3072                           ; BSR set to: 57
  3073  00FED8  42                 	db	66	;'B'
  3074  00FED9  41                 	db	65	;'A'
  3075  00FEDA  54                 	db	84	;'T'
  3076  00FEDB  20                 	db	32
  3077  00FEDC  4F                 	db	79	;'O'
  3078  00FEDD  57                 	db	87	;'W'
  3079  00FEDE  48                 	db	72	;'H'
  3080  00FEDF  20                 	db	32
  3081  00FEE0  25                 	db	37
  3082  00FEE1  34                 	db	52	;'4'
  3083  00FEE2  2E                 	db	46
  3084  00FEE3  31                 	db	49	;'1'
  3085  00FEE4  66                 	db	102	;'f'
  3086  00FEE5  20                 	db	32
  3087  00FEE6  20                 	db	32
  3088  00FEE7  20                 	db	32
  3089  00FEE8  20                 	db	32
  3090  00FEE9  20                 	db	32
  3091  00FEEA  00                 	db	0
  3092  00FEEB                     STR_33:
  3093                           
  3094                           ; BSR set to: 57
  3095  00FEEB  42                 	db	66	;'B'
  3096  00FEEC  41                 	db	65	;'A'
  3097  00FEED  54                 	db	84	;'T'
  3098  00FEEE  20                 	db	32
  3099  00FEEF  54                 	db	84	;'T'
  3100  00FEF0  57                 	db	87	;'W'
  3101  00FEF1  48                 	db	72	;'H'
  3102  00FEF2  20                 	db	32
  3103  00FEF3  25                 	db	37
  3104  00FEF4  34                 	db	52	;'4'
  3105  00FEF5  2E                 	db	46
  3106  00FEF6  31                 	db	49	;'1'
  3107  00FEF7  66                 	db	102	;'f'
  3108  00FEF8  20                 	db	32
  3109  00FEF9  20                 	db	32
  3110  00FEFA  20                 	db	32
  3111  00FEFB  20                 	db	32
  3112  00FEFC  20                 	db	32
  3113  00FEFD  00                 	db	0
  3114  00FEFE                     STR_27:
  3115                           
  3116                           ; BSR set to: 57
  3117  00FEFE  49                 	db	73	;'I'
  3118  00FEFF  4E                 	db	78	;'N'
  3119  00FF00  56                 	db	86	;'V'
  3120  00FF01  20                 	db	32
  3121  00FF02  20                 	db	32
  3122  00FF03  57                 	db	87	;'W'
  3123  00FF04  48                 	db	72	;'H'
  3124  00FF05  20                 	db	32
  3125  00FF06  25                 	db	37
  3126  00FF07  33                 	db	51	;'3'
  3127  00FF08  2E                 	db	46
  3128  00FF09  32                 	db	50	;'2'
  3129  00FF0A  66                 	db	102	;'f'
  3130  00FF0B  20                 	db	32
  3131  00FF0C  20                 	db	32
  3132  00FF0D  20                 	db	32
  3133  00FF0E  20                 	db	32
  3134  00FF0F  20                 	db	32
  3135  00FF10  00                 	db	0
  3136  00FF11                     STR_26:
  3137                           
  3138                           ; BSR set to: 57
  3139  00FF11  4C                 	db	76	;'L'
  3140  00FF12  4F                 	db	79	;'O'
  3141  00FF13  41                 	db	65	;'A'
  3142  00FF14  44                 	db	68	;'D'
  3143  00FF15  20                 	db	32
  3144  00FF16  57                 	db	87	;'W'
  3145  00FF17  48                 	db	72	;'H'
  3146  00FF18  20                 	db	32
  3147  00FF19  25                 	db	37
  3148  00FF1A  33                 	db	51	;'3'
  3149  00FF1B  2E                 	db	46
  3150  00FF1C  32                 	db	50	;'2'
  3151  00FF1D  66                 	db	102	;'f'
  3152  00FF1E  20                 	db	32
  3153  00FF1F  20                 	db	32
  3154  00FF20  20                 	db	32
  3155  00FF21  20                 	db	32
  3156  00FF22  20                 	db	32
  3157  00FF23  00                 	db	0
  3158  00FF24                     STR_24:
  3159                           
  3160                           ; BSR set to: 57
  3161  00FF24  49                 	db	73	;'I'
  3162  00FF25  4E                 	db	78	;'N'
  3163  00FF26  56                 	db	86	;'V'
  3164  00FF27  20                 	db	32
  3165  00FF28  20                 	db	32
  3166  00FF29  50                 	db	80	;'P'
  3167  00FF2A  57                 	db	87	;'W'
  3168  00FF2B  52                 	db	82	;'R'
  3169  00FF2C  20                 	db	32
  3170  00FF2D  25                 	db	37
  3171  00FF2E  33                 	db	51	;'3'
  3172  00FF2F  2E                 	db	46
  3173  00FF30  32                 	db	50	;'2'
  3174  00FF31  66                 	db	102	;'f'
  3175  00FF32  20                 	db	32
  3176  00FF33  20                 	db	32
  3177  00FF34  20                 	db	32
  3178  00FF35  20                 	db	32
  3179  00FF36  00                 	db	0
  3180  00FF37                     STR_23:
  3181                           
  3182                           ; BSR set to: 57
  3183  00FF37  4C                 	db	76	;'L'
  3184  00FF38  4F                 	db	79	;'O'
  3185  00FF39  41                 	db	65	;'A'
  3186  00FF3A  44                 	db	68	;'D'
  3187  00FF3B  20                 	db	32
  3188  00FF3C  50                 	db	80	;'P'
  3189  00FF3D  57                 	db	87	;'W'
  3190  00FF3E  52                 	db	82	;'R'
  3191  00FF3F  20                 	db	32
  3192  00FF40  25                 	db	37
  3193  00FF41  33                 	db	51	;'3'
  3194  00FF42  2E                 	db	46
  3195  00FF43  32                 	db	50	;'2'
  3196  00FF44  66                 	db	102	;'f'
  3197  00FF45  20                 	db	32
  3198  00FF46  20                 	db	32
  3199  00FF47  20                 	db	32
  3200  00FF48  20                 	db	32
  3201  00FF49  00                 	db	0
  3202  00FF4A                     STR_29:
  3203                           
  3204                           ; BSR set to: 57
  3205  00FF4A  42                 	db	66	;'B'
  3206  00FF4B  56                 	db	86	;'V'
  3207  00FF4C  20                 	db	32
  3208  00FF4D  25                 	db	37
  3209  00FF4E  32                 	db	50	;'2'
  3210  00FF4F  2E                 	db	46
  3211  00FF50  32                 	db	50	;'2'
  3212  00FF51  66                 	db	102	;'f'
  3213  00FF52  20                 	db	32
  3214  00FF53  42                 	db	66	;'B'
  3215  00FF54  41                 	db	65	;'A'
  3216  00FF55  20                 	db	32
  3217  00FF56  25                 	db	37
  3218  00FF57  32                 	db	50	;'2'
  3219  00FF58  2E                 	db	46
  3220  00FF59  32                 	db	50	;'2'
  3221  00FF5A  66                 	db	102	;'f'
  3222  00FF5B  20                 	db	32
  3223  00FF5C  00                 	db	0
  3224  00FF5D                     STR_30:
  3225                           
  3226                           ; BSR set to: 57
  3227  00FF5D  43                 	db	67	;'C'
  3228  00FF5E  56                 	db	86	;'V'
  3229  00FF5F  20                 	db	32
  3230  00FF60  25                 	db	37
  3231  00FF61  32                 	db	50	;'2'
  3232  00FF62  2E                 	db	46
  3233  00FF63  32                 	db	50	;'2'
  3234  00FF64  66                 	db	102	;'f'
  3235  00FF65  20                 	db	32
  3236  00FF66  4C                 	db	76	;'L'
  3237  00FF67  41                 	db	65	;'A'
  3238  00FF68  20                 	db	32
  3239  00FF69  25                 	db	37
  3240  00FF6A  32                 	db	50	;'2'
  3241  00FF6B  2E                 	db	46
  3242  00FF6C  32                 	db	50	;'2'
  3243  00FF6D  66                 	db	102	;'f'
  3244  00FF6E  20                 	db	32
  3245  00FF6F  00                 	db	0
  3246  00FF70                     STR_28:
  3247                           
  3248                           ; BSR set to: 57
  3249  00FF70  50                 	db	80	;'P'
  3250  00FF71  56                 	db	86	;'V'
  3251  00FF72  20                 	db	32
  3252  00FF73  25                 	db	37
  3253  00FF74  32                 	db	50	;'2'
  3254  00FF75  2E                 	db	46
  3255  00FF76  32                 	db	50	;'2'
  3256  00FF77  66                 	db	102	;'f'
  3257  00FF78  20                 	db	32
  3258  00FF79  50                 	db	80	;'P'
  3259  00FF7A  41                 	db	65	;'A'
  3260  00FF7B  20                 	db	32
  3261  00FF7C  25                 	db	37
  3262  00FF7D  32                 	db	50	;'2'
  3263  00FF7E  2E                 	db	46
  3264  00FF7F  32                 	db	50	;'2'
  3265  00FF80  66                 	db	102	;'f'
  3266  00FF81  20                 	db	32
  3267  00FF82  00                 	db	0
  3268  00FF83                     STR_21:
  3269                           
  3270                           ; BSR set to: 57
  3271  00FF83  25                 	db	37
  3272  00FF84  64                 	db	100	;'d'
  3273  00FF85  20                 	db	32
  3274  00FF86  25                 	db	37
  3275  00FF87  32                 	db	50	;'2'
  3276  00FF88  2E                 	db	46
  3277  00FF89  34                 	db	52	;'4'
  3278  00FF8A  66                 	db	102	;'f'
  3279  00FF8B  2C                 	db	44
  3280  00FF8C  20                 	db	32
  3281  00FF8D  25                 	db	37
  3282  00FF8E  64                 	db	100	;'d'
  3283  00FF8F  20                 	db	32
  3284  00FF90  20                 	db	32
  3285  00FF91  20                 	db	32
  3286  00FF92  23                 	db	35
  3287  00FF93  00                 	db	0
  3288  00FF94                     STR_19:
  3289                           
  3290                           ; BSR set to: 57
  3291  00FF94  25                 	db	37
  3292  00FF95  64                 	db	100	;'d'
  3293  00FF96  20                 	db	32
  3294  00FF97  25                 	db	37
  3295  00FF98  32                 	db	50	;'2'
  3296  00FF99  2E                 	db	46
  3297  00FF9A  34                 	db	52	;'4'
  3298  00FF9B  66                 	db	102	;'f'
  3299  00FF9C  20                 	db	32
  3300  00FF9D  20                 	db	32
  3301  00FF9E  20                 	db	32
  3302  00FF9F  25                 	db	37
  3303  00FFA0  64                 	db	100	;'d'
  3304  00FFA1  20                 	db	32
  3305  00FFA2  20                 	db	32
  3306  00FFA3  00                 	db	0
  3307  00FFA4                     STR_51:
  3308                           
  3309                           ; BSR set to: 57
  3310  00FFA4  76                 	db	118	;'v'
  3311  00FFA5  74                 	db	116	;'t'
  3312  00FFA6  65                 	db	101	;'e'
  3313  00FFA7  72                 	db	114	;'r'
  3314  00FFA8  6D                 	db	109	;'m'
  3315  00FFA9  20                 	db	32
  3316  00FFAA  25                 	db	37
  3317  00FFAB  78                 	db	120	;'x'
  3318  00FFAC  3A                 	db	58	;':'
  3319  00FFAD  25                 	db	37
  3320  00FFAE  78                 	db	120	;'x'
  3321  00FFAF  20                 	db	32
  3322  00FFB0  20                 	db	32
  3323  00FFB1  20                 	db	32
  3324  00FFB2  00                 	db	0
  3325  00FFB3                     STR_45:
  3326                           
  3327                           ; BSR set to: 57
  3328  00FFB3  4A                 	db	74	;'J'
  3329  00FFB4  61                 	db	97	;'a'
  3330  00FFB5  6E                 	db	110	;'n'
  3331  00FFB6  20                 	db	32
  3332  00FFB7  20                 	db	32
  3333  00FFB8  33                 	db	51	;'3'
  3334  00FFB9  20                 	db	32
  3335  00FFBA  32                 	db	50	;'2'
  3336  00FFBB  30                 	db	48	;'0'
  3337  00FFBC  32                 	db	50	;'2'
  3338  00FFBD  30                 	db	48	;'0'
  3339  00FFBE  00                 	db	0
  3340  00FFBF                     STR_49:
  3341                           
  3342                           ; BSR set to: 57
  3343  00FFBF  25                 	db	37
  3344  00FFC0  73                 	db	115	;'s'
  3345  00FFC1  20                 	db	32
  3346  00FFC2  20                 	db	32
  3347  00FFC3  20                 	db	32
  3348  00FFC4  20                 	db	32
  3349  00FFC5  20                 	db	32
  3350  00FFC6  20                 	db	32
  3351  00FFC7  20                 	db	32
  3352  00FFC8  00                 	db	0
  3353  00FFC9                     STR_46:
  3354                           
  3355                           ; BSR set to: 57
  3356  00FFC9  31                 	db	49	;'1'
  3357  00FFCA  30                 	db	48	;'0'
  3358  00FFCB  3A                 	db	58	;':'
  3359  00FFCC  30                 	db	48	;'0'
  3360  00FFCD  36                 	db	54	;'6'
  3361  00FFCE  3A                 	db	58	;':'
  3362  00FFCF  30                 	db	48	;'0'
  3363  00FFD0  38                 	db	56	;'8'
  3364  00FFD1  00                 	db	0
  3365  00FFD2                     STR_3:
  3366                           
  3367                           ; BSR set to: 57
  3368  00FFD2  31                 	db	49	;'1'
  3369  00FFD3  2E                 	db	46
  3370  00FFD4  30                 	db	48	;'0'
  3371  00FFD5  38                 	db	56	;'8'
  3372  00FFD6  00                 	db	0
  3373  00FFD7                     STR_65:
  3374                           
  3375                           ; BSR set to: 57
  3376  00FFD7  49                 	db	73	;'I'
  3377  00FFD8  4E                 	db	78	;'N'
  3378  00FFD9  46                 	db	70	;'F'
  3379  00FFDA  00                 	db	0
  3380  00FFDB                     STR_69:
  3381                           
  3382                           ; BSR set to: 57
  3383  00FFDB  4E                 	db	78	;'N'
  3384  00FFDC  41                 	db	65	;'A'
  3385  00FFDD  4E                 	db	78	;'N'
  3386  00FFDE  00                 	db	0
  3387  00FFDF                     STR_66:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FFDF  69                 	db	105	;'i'
  3391  00FFE0  6E                 	db	110	;'n'
  3392  00FFE1  66                 	db	102	;'f'
  3393  00FFE2  00                 	db	0
  3394  00FFE3                     STR_70:
  3395                           
  3396                           ; BSR set to: 57
  3397  00FFE3  6E                 	db	110	;'n'
  3398  00FFE4  61                 	db	97	;'a'
  3399  00FFE5  6E                 	db	110	;'n'
  3400  00FFE6  00                 	db	0
  3401  00FFE7                     STR_96:
  3402                           
  3403                           ; BSR set to: 57
  3404  00FFE7  6C                 	db	108	;'l'
  3405  00FFE8  58                 	db	88	;'X'
  3406  00FFE9  00                 	db	0
  3407  00FFEA                     STR_73:
  3408                           
  3409                           ; BSR set to: 57
  3410  00FFEA  6C                 	db	108	;'l'
  3411  00FFEB  64                 	db	100	;'d'
  3412  00FFEC  00                 	db	0
  3413  00FFED                     STR_82:
  3414                           
  3415                           ; BSR set to: 57
  3416  00FFED  6C                 	db	108	;'l'
  3417  00FFEE  66                 	db	102	;'f'
  3418  00FFEF  00                 	db	0
  3419  00FFF0                     STR_77:
  3420                           
  3421                           ; BSR set to: 57
  3422  00FFF0  6C                 	db	108	;'l'
  3423  00FFF1  69                 	db	105	;'i'
  3424  00FFF2  00                 	db	0
  3425  00FFF3                     STR_87:
  3426                           
  3427                           ; BSR set to: 57
  3428  00FFF3  6C                 	db	108	;'l'
  3429  00FFF4  75                 	db	117	;'u'
  3430  00FFF5  00                 	db	0
  3431  00FFF6                     STR_92:
  3432                           
  3433                           ; BSR set to: 57
  3434  00FFF6  6C                 	db	108	;'l'
  3435  00FFF7  78                 	db	120	;'x'
  3436  00FFF8  00                 	db	0
  3437  00FFF9                     STR_44:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FFF9  25                 	db	37
  3441  00FFFA  63                 	db	99	;'c'
  3442  00FFFB  00                 	db	0
  3443  00FFFC                     STR_43:
  3444                           
  3445                           ; BSR set to: 57
  3446  00FFFC  25                 	db	37
  3447  00FFFD  73                 	db	115	;'s'
  3448  00FFFE  00                 	db	0
  3449  0000                     
  3450                           ; #config settings
  3451  00FFFF  00                 	db	0	; dummy byte at the end
  3452  0000                     
  3453                           	psect	cinit
  3454  01A2A2                     __pcinit:
  3455                           	opt callstack 0
  3456  01A2A2                     start_initialization:
  3457                           	opt callstack 0
  3458  01A2A2                     __initialization:
  3459                           	opt callstack 0
  3460                           
  3461                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3462                           ; load TBLPTR registers with __pidataBIGRAM
  3463  01A2A2  0EF4               	movlw	low __pidataBIGRAM
  3464  01A2A4  6EF6               	movwf	tblptrl,c
  3465  01A2A6  0E6A               	movlw	high __pidataBIGRAM
  3466  01A2A8  6EF7               	movwf	tblptrh,c
  3467  01A2AA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3468  01A2AC  6EF8               	movwf	tblptru,c
  3469  01A2AE  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3470  01A2B2  EE20 F32B          	lfsr	2,811
  3471  01A2B6                     copy_data0:
  3472  01A2B6  0009               	tblrd		*+
  3473  01A2B8  006F FFD7 FFEE     	movff	tablat,postinc0
  3474  01A2BE  50DD               	movf	postdec2,w,c
  3475  01A2C0  50D9               	movf	fsr2l,w,c
  3476  01A2C2  E1F9               	bnz	copy_data0
  3477  01A2C4  50DA               	movf	fsr2h,w,c
  3478  01A2C6  E1F7               	bnz	copy_data0
  3479                           
  3480                           ; Initialize objects allocated to BANK1 (239 bytes)
  3481                           ; load TBLPTR registers with __pidataBANK1
  3482  01A2C8  0EFE               	movlw	low __pidataBANK1
  3483  01A2CA  6EF6               	movwf	tblptrl,c
  3484  01A2CC  0E9E               	movlw	high __pidataBANK1
  3485  01A2CE  6EF7               	movwf	tblptrh,c
  3486  01A2D0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3487  01A2D2  6EF8               	movwf	tblptru,c
  3488  01A2D4  EE00  F100         	lfsr	0,__pdataBANK1
  3489  01A2D8  EE20 F0EF          	lfsr	2,239
  3490  01A2DC                     copy_data1:
  3491  01A2DC  0009               	tblrd		*+
  3492  01A2DE  006F FFD7 FFEE     	movff	tablat,postinc0
  3493  01A2E4  50DD               	movf	postdec2,w,c
  3494  01A2E6  50D9               	movf	fsr2l,w,c
  3495  01A2E8  E1F9               	bnz	copy_data1
  3496                           
  3497                           ; Initialize objects allocated to BANK0 (14 bytes)
  3498                           ; load TBLPTR registers with __pidataBANK0
  3499  01A2EA  0EBE               	movlw	low __pidataBANK0
  3500  01A2EC  6EF6               	movwf	tblptrl,c
  3501  01A2EE  0EC0               	movlw	high __pidataBANK0
  3502  01A2F0  6EF7               	movwf	tblptrh,c
  3503  01A2F2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3504  01A2F4  6EF8               	movwf	tblptru,c
  3505  01A2F6  EE00  F0F0         	lfsr	0,__pdataBANK0
  3506  01A2FA  EE20 F00E          	lfsr	2,14
  3507  01A2FE                     copy_data2:
  3508  01A2FE  0009               	tblrd		*+
  3509  01A300  006F FFD7 FFEE     	movff	tablat,postinc0
  3510  01A306  50DD               	movf	postdec2,w,c
  3511  01A308  50D9               	movf	fsr2l,w,c
  3512  01A30A  E1F9               	bnz	copy_data2
  3513                           
  3514                           ; Clear objects allocated to BIGRAM (482 bytes)
  3515  01A30C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3516  01A310  EE20 F1E2          	lfsr	2,482
  3517  01A314                     clear_0:
  3518  01A314  6AEE               	clrf	postinc0,c
  3519  01A316  50DD               	movf	postdec2,w,c
  3520  01A318  50D9               	movf	fsr2l,w,c
  3521  01A31A  E1FC               	bnz	clear_0
  3522  01A31C  50DA               	movf	fsr2h,w,c
  3523  01A31E  E1FA               	bnz	clear_0
  3524                           
  3525                           ; Clear objects allocated to BANK4 (255 bytes)
  3526  01A320  EE01  F000         	lfsr	0,__pbssBANK4
  3527  01A324  EE20 F0FF          	lfsr	2,255
  3528  01A328                     clear_1:
  3529  01A328  6AEE               	clrf	postinc0,c
  3530  01A32A  50DD               	movf	postdec2,w,c
  3531  01A32C  50D9               	movf	fsr2l,w,c
  3532  01A32E  E1FC               	bnz	clear_1
  3533  01A330  50DA               	movf	fsr2h,w,c
  3534  01A332  E1FA               	bnz	clear_1
  3535                           
  3536                           ; Clear objects allocated to BANK3 (198 bytes)
  3537  01A334  EE00  F300         	lfsr	0,__pbssBANK3
  3538  01A338  0EC6               	movlw	198
  3539  01A33A                     clear_2:
  3540  01A33A  6AEE               	clrf	postinc0,c
  3541  01A33C  06E8               	decf	wreg,f,c
  3542  01A33E  E1FD               	bnz	clear_2
  3543                           
  3544                           ; Clear objects allocated to BANK2 (231 bytes)
  3545  01A340  EE00  F200         	lfsr	0,__pbssBANK2
  3546  01A344  0EE7               	movlw	231
  3547  01A346                     clear_3:
  3548  01A346  6AEE               	clrf	postinc0,c
  3549  01A348  06E8               	decf	wreg,f,c
  3550  01A34A  E1FD               	bnz	clear_3
  3551                           
  3552                           ; Clear objects allocated to BANK0 (119 bytes)
  3553  01A34C  EE00  F060         	lfsr	0,__pbssBANK0
  3554  01A350  0E77               	movlw	119
  3555  01A352                     clear_4:
  3556  01A352  6AEE               	clrf	postinc0,c
  3557  01A354  06E8               	decf	wreg,f,c
  3558  01A356  E1FD               	bnz	clear_4
  3559                           
  3560                           ; Clear objects allocated to COMRAM (14 bytes)
  3561  01A358  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3562  01A35C  0E0E               	movlw	14
  3563  01A35E                     clear_5:
  3564  01A35E  6AEE               	clrf	postinc0,c
  3565  01A360  06E8               	decf	wreg,f,c
  3566  01A362  E1FD               	bnz	clear_5
  3567                           
  3568                           ;
  3569                           ; Setup IVTBASE
  3570                           ;
  3571  01A364  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3572  01A366  6ED5               	movwf	213,c
  3573  01A368  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3574  01A36A  6ED6               	movwf	214,c
  3575  01A36C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3576  01A36E  6ED7               	movwf	215,c
  3577  01A370                     end_of_initialization:
  3578                           	opt callstack 0
  3579  01A370                     __end_of__initialization:
  3580                           	opt callstack 0
  3581  01A370  0100               	movlb	0
  3582  01A372  EF22  F089         	goto	_main	;jump to C main() function
  3583                           
  3584                           	psect	bssCOMRAM
  3585  00003A                     __pbssCOMRAM:
  3586                           	opt callstack 0
  3587  00003A                     _width:
  3588                           	opt callstack 0
  3589  00003A                     	ds	2
  3590  00003C                     _prec:
  3591                           	opt callstack 0
  3592  00003C                     	ds	2
  3593  00003E                     _flags:
  3594                           	opt callstack 0
  3595  00003E                     	ds	2
  3596  000040                     esr_check@esr_state:
  3597                           	opt callstack 0
  3598  000040                     	ds	1
  3599  000041                     calc_bsoc@log_update_wait:
  3600                           	opt callstack 0
  3601  000041                     	ds	1
  3602  000042                     check_day_time@day_delay:
  3603                           	opt callstack 0
  3604  000042                     	ds	1
  3605  000043                     _uart2RxHead:
  3606                           	opt callstack 0
  3607  000043                     	ds	1
  3608  000044                     _uart2TxBufferRemaining:
  3609                           	opt callstack 0
  3610  000044                     	ds	1
  3611  000045                     _uart2TxTail:
  3612                           	opt callstack 0
  3613  000045                     	ds	1
  3614  000046                     _uart1RxTail:
  3615                           	opt callstack 0
  3616  000046                     	ds	1
  3617  000047                     _uart1RxHead:
  3618                           	opt callstack 0
  3619  000047                     	ds	1
  3620                           
  3621                           	psect	bssBANK0
  3622  000060                     __pbssBANK0:
  3623                           	opt callstack 0
  3624  000060                     _spi_link:
  3625                           	opt callstack 0
  3626  000060                     	ds	12
  3627  00006C                     _uart1RxBuffer:
  3628                           	opt callstack 0
  3629  00006C                     	ds	8
  3630  000074                     spinners@s:
  3631                           	opt callstack 0
  3632  000074                     	ds	6
  3633  00007A                     floorf@F524:
  3634                           	opt callstack 0
  3635  00007A                     	ds	4
  3636  00007E                     fabsf@F463:
  3637                           	opt callstack 0
  3638  00007E                     	ds	4
  3639  000082                     ___fpclassifyf@F463:
  3640                           	opt callstack 0
  3641  000082                     	ds	4
  3642  000086                     calc_ror_data@bcror:
  3643                           	opt callstack 0
  3644  000086                     	ds	4
  3645  00008A                     calc_ror_data@bvror:
  3646                           	opt callstack 0
  3647  00008A                     	ds	4
  3648  00008E                     calc_model_data@bcror:
  3649                           	opt callstack 0
  3650  00008E                     	ds	4
  3651  000092                     calc_model_data@bvror:
  3652                           	opt callstack 0
  3653  000092                     	ds	4
  3654  000096                     _utctime:
  3655                           	opt callstack 0
  3656  000096                     	ds	4
  3657  00009A                     wdtdelay@dcount:
  3658                           	opt callstack 0
  3659  00009A                     	ds	4
  3660  00009E                     _P:
  3661                           	opt callstack 0
  3662  00009E                     	ds	4
  3663  0000A2                     _TMR3_InterruptHandler:
  3664                           	opt callstack 0
  3665  0000A2                     	ds	3
  3666  0000A5                     _TMR5_InterruptHandler:
  3667                           	opt callstack 0
  3668  0000A5                     	ds	3
  3669  0000A8                     _TMR6_InterruptHandler:
  3670                           	opt callstack 0
  3671  0000A8                     	ds	3
  3672  0000AB                     _ADCC_ADTI_InterruptHandler:
  3673                           	opt callstack 0
  3674  0000AB                     	ds	3
  3675  0000AE                     _ADCC_ADI_InterruptHandler:
  3676                           	opt callstack 0
  3677  0000AE                     	ds	3
  3678  0000B1                     _UART1_RxInterruptHandler:
  3679                           	opt callstack 0
  3680  0000B1                     	ds	3
  3681  0000B4                     _UART2_TxInterruptHandler:
  3682                           	opt callstack 0
  3683  0000B4                     	ds	3
  3684  0000B7                     _UART2_RxInterruptHandler:
  3685                           	opt callstack 0
  3686  0000B7                     	ds	3
  3687  0000BA                     _INT1_InterruptHandler:
  3688                           	opt callstack 0
  3689  0000BA                     	ds	3
  3690  0000BD                     _INT0_InterruptHandler:
  3691                           	opt callstack 0
  3692  0000BD                     	ds	3
  3693  0000C0                     _nout:
  3694                           	opt callstack 0
  3695  0000C0                     	ds	2
  3696  0000C2                     TMR3_ISR@CountCallBack:
  3697                           	opt callstack 0
  3698  0000C2                     	ds	2
  3699  0000C4                     _timer3ReloadVal:
  3700                           	opt callstack 0
  3701  0000C4                     	ds	2
  3702  0000C6                     TMR5_ISR@CountCallBack:
  3703                           	opt callstack 0
  3704  0000C6                     	ds	2
  3705  0000C8                     _timer5ReloadVal:
  3706                           	opt callstack 0
  3707  0000C8                     	ds	2
  3708  0000CA                     _mode_sw:
  3709                           	opt callstack 0
  3710  0000CA                     	ds	1
  3711  0000CB                     _uart2RxCount:
  3712                           	opt callstack 0
  3713  0000CB                     	ds	1
  3714  0000CC                     _uart2RxTail:
  3715                           	opt callstack 0
  3716  0000CC                     	ds	1
  3717  0000CD                     _uart2TxHead:
  3718                           	opt callstack 0
  3719  0000CD                     	ds	1
  3720  0000CE                     _uart1RxCount:
  3721                           	opt callstack 0
  3722  0000CE                     	ds	1
  3723  0000CF                     _seed:
  3724                           	opt callstack 0
  3725  0000CF                     	ds	8
  3726                           
  3727                           	psect	dataBANK0
  3728  0000F0                     __pdataBANK0:
  3729                           	opt callstack 0
  3730  0000F0                     stoa@F1166:
  3731                           	opt callstack 0
  3732  0000F0                     	ds	7
  3733  0000F7                     _H:
  3734                           	opt callstack 0
  3735  0000F7                     	ds	7
  3736                           
  3737                           	psect	dataBANK1
  3738  000100                     __pdataBANK1:
  3739                           	opt callstack 0
  3740  000100                     _R:
  3741                           	opt callstack 0
  3742  000100                     	ds	48
  3743  000130                     _V:
  3744                           	opt callstack 0
  3745  000130                     	ds	191
  3746                           
  3747                           	psect	bssBANK2
  3748  000200                     __pbssBANK2:
  3749                           	opt callstack 0
  3750  000200                     lp_filter@smooth:
  3751                           	opt callstack 0
  3752  000200                     	ds	84
  3753  000254                     _S:
  3754                           	opt callstack 0
  3755  000254                     	ds	41
  3756  00027D                     _tickCount:
  3757                           	opt callstack 0
  3758  00027D                     	ds	26
  3759  000297                     _dbuf:
  3760                           	opt callstack 0
  3761  000297                     	ds	80
  3762                           
  3763                           	psect	bssBANK3
  3764  000300                     __pbssBANK3:
  3765                           	opt callstack 0
  3766  000300                     _uart2TxBuffer:
  3767                           	opt callstack 0
  3768  000300                     	ds	64
  3769  000340                     _ring_buf2:
  3770                           	opt callstack 0
  3771  000340                     	ds	67
  3772  000383                     _ring_buf1:
  3773                           	opt callstack 0
  3774  000383                     	ds	67
  3775                           
  3776                           	psect	bssBANK4
  3777  000400                     __pbssBANK4:
  3778                           	opt callstack 0
  3779  000400                     _uart2RxBuffer:
  3780                           	opt callstack 0
  3781  000400                     	ds	255
  3782                           
  3783                           	psect	bssBIGRAM
  3784  00082A                     __pbssBIGRAM:
  3785                           	opt callstack 0
  3786  00082A                     _D:
  3787                           	opt callstack 0
  3788  00082A                     	ds	482
  3789                           
  3790                           	psect	dataBIGRAM
  3791  0004FF                     __pdataBIGRAM:
  3792                           	opt callstack 0
  3793  0004FF                     _port_data:
  3794                           	opt callstack 0
  3795  0004FF                     	ds	512
  3796  0006FF                     _C:
  3797                           	opt callstack 0
  3798  0006FF                     	ds	299
  3799                           
  3800                           	psect	cstackBANK0
  3801  0000D7                     __pcstackBANK0:
  3802                           	opt callstack 0
  3803  0000D7                     ??_TMR3_ISR:
  3804                           
  3805                           ; 1 bytes @ 0x0
  3806  0000D7                     	ds	25
  3807                           
  3808                           	psect	cstackCOMRAM
  3809  000021                     __pcstackCOMRAM:
  3810                           	opt callstack 0
  3811  000021                     ??_ADCC_ThresholdISR:
  3812  000021                     
  3813                           ; 1 bytes @ 0x0
  3814  000021                     	ds	5
  3815  000026                     ??_TMR6_ISR:
  3816                           
  3817                           ; 1 bytes @ 0x5
  3818  000026                     	ds	1
  3819  000027                     ??_INT1_ISR:
  3820  000027                     
  3821                           ; 1 bytes @ 0x6
  3822  000027                     	ds	4
  3823  00002B                     ??_TMR5_ISR:
  3824                           
  3825                           ; 1 bytes @ 0xA
  3826  00002B                     	ds	15
  3827                           
  3828 ;;
  3829 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3830 ;;
  3831 ;; *************** function _main *****************
  3832 ;; Defined at:
  3833 ;;		line 187 in file "main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  esr_temp        4  [STACK] float 
  3838 ;;  i_esr           2  [STACK] unsigned short 
  3839 ;;  shape           1  [STACK] unsigned char 
  3840 ;;  k               1  [STACK] unsigned char 
  3841 ;;  j               1  [STACK] unsigned char 
  3842 ;;  i               1  [STACK] unsigned char 
  3843 ;;  inp_index       1  [STACK] unsigned char 
  3844 ;;  mode            1  [STACK] enum E17013
  3845 ;;  i_ror           1  [STACK] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1  [STACK] void 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels required when called:   29
  3861 ;; This function calls:
  3862 ;;		_SYSTEM_Initialize
  3863 ;;		_StartTimer
  3864 ;;		_TimerDone
  3865 ;;		_WaitMs
  3866 ;;		___fladd
  3867 ;;		___flge
  3868 ;;		___fltol
  3869 ;;		_calc_model_data
  3870 ;;		_calc_ror_data
  3871 ;;		_check_adc_scan
  3872 ;;		_check_enter_button
  3873 ;;		_check_help
  3874 ;;		_clear_adc_scan
  3875 ;;		_clear_hid_pflags
  3876 ;;		_conv_raw_result
  3877 ;;		_convert_adc_data
  3878 ;;		_eaDogM_WriteCommand
  3879 ;;		_esr_check
  3880 ;;		_fabsf
  3881 ;;		_get_raw_result
  3882 ;;		_get_switch
  3883 ;;		_get_vterm_ptr
  3884 ;;		_hid_display
  3885 ;;		_init_bsoc
  3886 ;;		_init_display
  3887 ;;		_init_port_dma
  3888 ;;		_lp_filter
  3889 ;;		_mode_lamp_dim
  3890 ;;		_set_display_info
  3891 ;;		_set_load_relay_one
  3892 ;;		_set_load_relay_two
  3893 ;;		_set_vterm
  3894 ;;		_spinners
  3895 ;;		_sprintf
  3896 ;;		_srand
  3897 ;;		_start_adc_scan
  3898 ;;		_start_switch_handler
  3899 ;;		_static_soc
  3900 ;;		_update_lcd
  3901 ;; This function is called by:
  3902 ;;		Startup code after reset
  3903 ;; This function uses a reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text0
  3907  011244                     __ptext0:
  3908                           	opt callstack 0
  3909  011244                     _main:
  3910                           	opt callstack 0
  3911                           
  3912                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3913  011244  0E11               	movlw	17
  3914  011246  26E1               	addwf	fsr1l,f,c
  3915  011248  0E00               	movlw	0
  3916  01124A  22E2               	addwfc	fsr1h,f,c
  3917                           
  3918                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3919                           ;stkvar	_inp_index @ sp[(-17)+14]
  3920                           
  3921                           ;incstack = 0
  3922  01124C  0EFD               	movlw	-3
  3923  01124E  6AE3               	clrf	plusw1,c
  3924                           
  3925                           ;stkvar	_i @ sp[(-17)+13]
  3926  011250  0EFC               	movlw	-4
  3927  011252  6AE3               	clrf	plusw1,c
  3928                           
  3929                           ;stkvar	_j @ sp[(-17)+12]
  3930  011254  0EFB               	movlw	-5
  3931  011256  6AE3               	clrf	plusw1,c
  3932  011258  2AE3               	incf	plusw1,f,c
  3933                           
  3934                           ;stkvar	_k @ sp[(-17)+11]
  3935  01125A  0EFA               	movlw	-6
  3936  01125C  6AE3               	clrf	plusw1,c
  3937  01125E  82E3               	bsf	plusw1,1,c
  3938                           
  3939                           ;main.c: 193:  SYSTEM_Initialize();
  3940  011260  EC03  F0DA         	call	_SYSTEM_Initialize	;wreg free
  3941                           
  3942                           ; BSR set to: 60
  3943                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  3944  011264  8ED2               	bsf	210,7,c	;volatile
  3945                           
  3946                           ; BSR set to: 60
  3947                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  3948  011266  8CD2               	bsf	210,6,c	;volatile
  3949                           
  3950                           ; BSR set to: 60
  3951                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  3952  011268  0101               	movlb	1	; () banked
  3953  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;main.c: 206:  WaitMs(300);
  3957  01126C  0E2C               	movlw	44
  3958  01126E  6EE6               	movwf	postinc1,c
  3959  011270  0E01               	movlw	1
  3960  011272  6EE6               	movwf	postinc1,c
  3961  011274  EC76  F0DC         	call	_WaitMs	;wreg free
  3962                           
  3963                           ;main.c: 207:  if (PORTBbits.RB0) {
  3964  011278  A0CB               	btfss	203,0,c	;volatile
  3965  01127A  D004               	goto	l13036
  3966                           
  3967                           ;main.c: 208:   mode = UI_STATE_HOST;
  3968                           ;stkvar	_mode @ sp[(-17)+15]
  3969  01127C  0EFE               	movlw	-2
  3970  01127E  6AE3               	clrf	plusw1,c
  3971  011280  2AE3               	incf	plusw1,f,c
  3972                           
  3973                           ;main.c: 209:  } else {
  3974  011282  D004               	goto	l13038
  3975  011284                     l13036:
  3976                           
  3977                           ;main.c: 210:   mode = UI_STATE_LOG;
  3978                           ;stkvar	_mode @ sp[(-17)+15]
  3979  011284  0EFE               	movlw	-2
  3980  011286  6AE3               	clrf	plusw1,c
  3981  011288  80E3               	bsf	plusw1,0,c
  3982  01128A  82E3               	bsf	plusw1,1,c	;indir
  3983  01128C                     l13038:
  3984                           
  3985                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  3986                           ;stkvar	_mode @ sp[(-17)+15]
  3987  01128C  0EFE               	movlw	-2
  3988  01128E  04E3               	decf	plusw1,w,c
  3989  011290  A4D8               	btfss	status,2,c
  3990  011292  D007               	goto	l1324
  3991                           
  3992                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  3993  011294  80BD               	bsf	189,0,c	;volatile
  3994                           
  3995                           ;main.c: 215:   V.mode_pwm = 70;
  3996  011296  0E00               	movlw	0
  3997  011298  0101               	movlb	1	; () banked
  3998  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  3999  01129C  0E46               	movlw	70
  4000  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  4001                           
  4002                           ;main.c: 216:  } else {
  4003  0112A0  D004               	goto	l13042
  4004  0112A2                     l1324:
  4005  0112A2  90BD               	bcf	189,0,c	;volatile
  4006                           
  4007                           ;main.c: 218:   V.mode_pwm = 0;
  4008  0112A4  0101               	movlb	1	; () banked
  4009  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  4010  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  4011  0112AA                     l13042:
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4015  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  4016  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  4017  0112B6  ECF3  F0DF         	call	_mode_lamp_dim	;wreg free
  4018  0112BA  D326               	goto	l13162
  4019  0112BC                     l13044:
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;main.c: 228:    init_port_dma();
  4023  0112BC  ECC5  F0DC         	call	_init_port_dma	;wreg free
  4024                           
  4025                           ; BSR set to: 59
  4026                           ;main.c: 230:    init_display();
  4027  0112C0  ECF7  F0CF         	call	_init_display	;wreg free
  4028                           
  4029                           ; BSR set to: 61
  4030                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4031  0112C4  0E0C               	movlw	12
  4032  0112C6  6EE6               	movwf	postinc1,c
  4033  0112C8  EC66  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 235:    set_load_relay_one(1);
  4037  0112CC  0E01               	movlw	1
  4038  0112CE  6EE6               	movwf	postinc1,c
  4039  0112D0  EC47  F0E0         	call	_set_load_relay_one	;wreg free
  4040                           
  4041                           ;main.c: 236:    set_load_relay_two(1);
  4042  0112D4  0E01               	movlw	1
  4043  0112D6  6EE6               	movwf	postinc1,c
  4044  0112D8  EC3F  F0E0         	call	_set_load_relay_two	;wreg free
  4045                           
  4046                           ;main.c: 238:    V.ui_state = mode;
  4047                           ;stkvar	_mode @ sp[(-17)+15]
  4048  0112DC  0EFE               	movlw	-2
  4049  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4050                           
  4051                           ;main.c: 239:    srand(1957);
  4052  0112E4  0EA5               	movlw	165
  4053  0112E6  6EE6               	movwf	postinc1,c
  4054  0112E8  0E07               	movlw	7
  4055  0112EA  6EE6               	movwf	postinc1,c
  4056  0112EC  EC91  F0DC         	call	_srand	;wreg free
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;main.c: 240:    set_vterm(0);
  4060  0112F0  0E00               	movlw	0
  4061  0112F2  6EE6               	movwf	postinc1,c
  4062  0112F4  EC9E  F0DF         	call	_set_vterm	;wreg free
  4063                           
  4064                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4065  0112F8  0EC0               	movlw	low STR_1
  4066  0112FA  6EE6               	movwf	postinc1,c
  4067  0112FC  0EFD               	movlw	high STR_1
  4068  0112FE  6EE6               	movwf	postinc1,c
  4069  011300  0E00               	movlw	0
  4070  011302  6EE6               	movwf	postinc1,c
  4071  011304  0E00               	movlw	0
  4072  011306  6EE6               	movwf	postinc1,c
  4073  011308  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4074  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4075  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4076  011318  0E04               	movlw	4
  4077  01131A  6EE6               	movwf	postinc1,c
  4078  01131C  EC79  F0CE         	call	_sprintf	;wreg free
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.08");
  4082  011320  0ED2               	movlw	low STR_3
  4083  011322  6EE6               	movwf	postinc1,c
  4084  011324  0EFF               	movlw	high STR_3
  4085  011326  6EE6               	movwf	postinc1,c
  4086  011328  0EAB               	movlw	low STR_2
  4087  01132A  6EE6               	movwf	postinc1,c
  4088  01132C  0EFD               	movlw	high STR_2
  4089  01132E  6EE6               	movwf	postinc1,c
  4090  011330  0E00               	movlw	0
  4091  011332  6EE6               	movwf	postinc1,c
  4092  011334  0E01               	movlw	1
  4093  011336  6EE6               	movwf	postinc1,c
  4094  011338  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4095  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4096  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4097  011348  0E06               	movlw	6
  4098  01134A  6EE6               	movwf	postinc1,c
  4099  01134C  EC79  F0CE         	call	_sprintf	;wreg free
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4103  011350  0E6C               	movlw	low STR_4
  4104  011352  6EE6               	movwf	postinc1,c
  4105  011354  0EFD               	movlw	high STR_4
  4106  011356  6EE6               	movwf	postinc1,c
  4107  011358  0E00               	movlw	0
  4108  01135A  6EE6               	movwf	postinc1,c
  4109  01135C  0E02               	movlw	2
  4110  01135E  6EE6               	movwf	postinc1,c
  4111  011360  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4112  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4113  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4114  011370  0E04               	movlw	4
  4115  011372  6EE6               	movwf	postinc1,c
  4116  011374  EC79  F0CE         	call	_sprintf	;wreg free
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4120  011378  0E42               	movlw	low STR_5
  4121  01137A  6EE6               	movwf	postinc1,c
  4122  01137C  0EFD               	movlw	high STR_5
  4123  01137E  6EE6               	movwf	postinc1,c
  4124  011380  0E02               	movlw	2
  4125  011382  6EE6               	movwf	postinc1,c
  4126  011384  0E00               	movlw	0
  4127  011386  6EE6               	movwf	postinc1,c
  4128  011388  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4129  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4130  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4131  011398  0E04               	movlw	4
  4132  01139A  6EE6               	movwf	postinc1,c
  4133  01139C  EC79  F0CE         	call	_sprintf	;wreg free
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4137  0113A0  0E42               	movlw	low STR_5
  4138  0113A2  6EE6               	movwf	postinc1,c
  4139  0113A4  0EFD               	movlw	high STR_5
  4140  0113A6  6EE6               	movwf	postinc1,c
  4141  0113A8  0E02               	movlw	2
  4142  0113AA  6EE6               	movwf	postinc1,c
  4143  0113AC  0E01               	movlw	1
  4144  0113AE  6EE6               	movwf	postinc1,c
  4145  0113B0  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4146  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4147  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4148  0113C0  0E04               	movlw	4
  4149  0113C2  6EE6               	movwf	postinc1,c
  4150  0113C4  EC79  F0CE         	call	_sprintf	;wreg free
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4154  0113C8  0E42               	movlw	low STR_5
  4155  0113CA  6EE6               	movwf	postinc1,c
  4156  0113CC  0EFD               	movlw	high STR_5
  4157  0113CE  6EE6               	movwf	postinc1,c
  4158  0113D0  0E02               	movlw	2
  4159  0113D2  6EE6               	movwf	postinc1,c
  4160  0113D4  0E02               	movlw	2
  4161  0113D6  6EE6               	movwf	postinc1,c
  4162  0113D8  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4163  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4164  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4165  0113E8  0E04               	movlw	4
  4166  0113EA  6EE6               	movwf	postinc1,c
  4167  0113EC  EC79  F0CE         	call	_sprintf	;wreg free
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 247:    update_lcd(0);
  4171  0113F0  0E00               	movlw	0
  4172  0113F2  6EE6               	movwf	postinc1,c
  4173  0113F4  ECF1  F0CD         	call	_update_lcd	;wreg free
  4174                           
  4175                           ;main.c: 248:    WaitMs(1000);
  4176  0113F8  0EE8               	movlw	232
  4177  0113FA  6EE6               	movwf	postinc1,c
  4178  0113FC  0E03               	movlw	3
  4179  0113FE  6EE6               	movwf	postinc1,c
  4180  011400  EC76  F0DC         	call	_WaitMs	;wreg free
  4181                           
  4182                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4183  011404  0EFA               	movlw	250
  4184  011406  6EE6               	movwf	postinc1,c
  4185  011408  0E00               	movlw	0
  4186  01140A  6EE6               	movwf	postinc1,c
  4187  01140C  0E0A               	movlw	10
  4188  01140E  6EE6               	movwf	postinc1,c
  4189  011410  EC81  F0DB         	call	_StartTimer	;wreg free
  4190                           
  4191                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4192  011414  0EC8               	movlw	200
  4193  011416  6EE6               	movwf	postinc1,c
  4194  011418  0E00               	movlw	0
  4195  01141A  6EE6               	movwf	postinc1,c
  4196  01141C  0E01               	movlw	1
  4197  01141E  6EE6               	movwf	postinc1,c
  4198  011420  EC81  F0DB         	call	_StartTimer	;wreg free
  4199                           
  4200                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4201  011424  0EB8               	movlw	184
  4202  011426  6EE6               	movwf	postinc1,c
  4203  011428  0E0B               	movlw	11
  4204  01142A  6EE6               	movwf	postinc1,c
  4205  01142C  0E07               	movlw	7
  4206  01142E  6EE6               	movwf	postinc1,c
  4207  011430  EC81  F0DB         	call	_StartTimer	;wreg free
  4208                           
  4209                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4210  011434  0EDC               	movlw	220
  4211  011436  6EE6               	movwf	postinc1,c
  4212  011438  0E05               	movlw	5
  4213  01143A  6EE6               	movwf	postinc1,c
  4214  01143C  0E0B               	movlw	11
  4215  01143E  6EE6               	movwf	postinc1,c
  4216  011440  EC81  F0DB         	call	_StartTimer	;wreg free
  4217                           
  4218                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4219  011444  0EB8               	movlw	184
  4220  011446  6EE6               	movwf	postinc1,c
  4221  011448  0E0B               	movlw	11
  4222  01144A  6EE6               	movwf	postinc1,c
  4223  01144C  0E09               	movlw	9
  4224  01144E  6EE6               	movwf	postinc1,c
  4225  011450  EC81  F0DB         	call	_StartTimer	;wreg free
  4226                           
  4227                           ;main.c: 255:    start_adc_scan();
  4228  011454  EC1A  F0D8         	call	_start_adc_scan	;wreg free
  4229                           
  4230                           ;main.c: 256:    start_switch_handler();
  4231  011458  EC60  F0DF         	call	_start_switch_handler	;wreg free
  4232                           
  4233                           ; BSR set to: 57
  4234                           ;main.c: 257:    WaitMs(1000);
  4235  01145C  0EE8               	movlw	232
  4236  01145E  6EE6               	movwf	postinc1,c
  4237  011460  0E03               	movlw	3
  4238  011462  6EE6               	movwf	postinc1,c
  4239  011464  EC76  F0DC         	call	_WaitMs	;wreg free
  4240                           
  4241                           ;main.c: 262:    i_ror = 1;
  4242                           ;stkvar	_i_ror @ sp[(-17)+16]
  4243  011468  0EFF               	movlw	-1
  4244  01146A  6AE3               	clrf	plusw1,c
  4245  01146C  2AE3               	incf	plusw1,f,c
  4246  01146E                     l13094:
  4247                           
  4248                           ;main.c: 264:     calc_ror_data();
  4249  01146E  EC9E  F0C5         	call	_calc_ror_data	;wreg free
  4250                           
  4251                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4252  011472  0E00               	movlw	0
  4253  011474  6EE6               	movwf	postinc1,c
  4254  011476  0E04               	movlw	4
  4255  011478  6EE6               	movwf	postinc1,c
  4256  01147A  EC57  F0A9         	call	_conv_raw_result	;wreg free
  4257  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4258  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4259  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4260  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4261  011496  0E57               	movlw	low STR_8
  4262  011498  6EE6               	movwf	postinc1,c
  4263  01149A  0EFD               	movlw	high STR_8
  4264  01149C  6EE6               	movwf	postinc1,c
  4265  01149E  0E00               	movlw	0
  4266  0114A0  6EE6               	movwf	postinc1,c
  4267  0114A2  0E01               	movlw	1
  4268  0114A4  6EE6               	movwf	postinc1,c
  4269  0114A6  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4270  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4271  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4272  0114B6  0E08               	movlw	8
  4273  0114B8  6EE6               	movwf	postinc1,c
  4274  0114BA  EC79  F0CE         	call	_sprintf	;wreg free
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4278  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4279  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4280  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4281  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4282  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4283                           
  4284                           ;stkvar	_i_ror @ sp[(-21)+16]
  4285  0114DA  0EFB               	movlw	-5
  4286  0114DC  50E3               	movf	plusw1,w,c
  4287  0114DE  6EE6               	movwf	postinc1,c
  4288  0114E0  0E00               	movlw	0
  4289  0114E2  6EE6               	movwf	postinc1,c
  4290  0114E4  0E00               	movlw	0
  4291  0114E6  6EE6               	movwf	postinc1,c
  4292  0114E8  0E05               	movlw	5
  4293  0114EA  6EE6               	movwf	postinc1,c
  4294  0114EC  EC6C  F0D0         	call	_spinners	;wreg free
  4295  0114F0  5001               	movf	btemp^0,w,c
  4296  0114F2  6EE6               	movwf	postinc1,c
  4297  0114F4  0E00               	movlw	0
  4298  0114F6  6EE6               	movwf	postinc1,c
  4299  0114F8  0ECE               	movlw	low STR_9
  4300  0114FA  6EE6               	movwf	postinc1,c
  4301  0114FC  0EFC               	movlw	high STR_9
  4302  0114FE  6EE6               	movwf	postinc1,c
  4303  011500  0E00               	movlw	0
  4304  011502  6EE6               	movwf	postinc1,c
  4305  011504  0E02               	movlw	2
  4306  011506  6EE6               	movwf	postinc1,c
  4307  011508  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4308  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4309  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4310  011518  0E0C               	movlw	12
  4311  01151A  6EE6               	movwf	postinc1,c
  4312  01151C  EC79  F0CE         	call	_sprintf	;wreg free
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;main.c: 267:     update_lcd(0);
  4316  011520  0E00               	movlw	0
  4317  011522  6EE6               	movwf	postinc1,c
  4318  011524  ECF1  F0CD         	call	_update_lcd	;wreg free
  4319                           
  4320                           ;main.c: 268:     clear_adc_scan();
  4321  011528  ECBB  F0E0         	call	_clear_adc_scan	;wreg free
  4322                           
  4323                           ; BSR set to: 1
  4324                           ;main.c: 269:     start_adc_scan();
  4325  01152C  EC1A  F0D8         	call	_start_adc_scan	;wreg free
  4326                           
  4327                           ;main.c: 270:     WaitMs(2000);
  4328  011530  0ED0               	movlw	208
  4329  011532  6EE6               	movwf	postinc1,c
  4330  011534  0E07               	movlw	7
  4331  011536  6EE6               	movwf	postinc1,c
  4332  011538  EC76  F0DC         	call	_WaitMs	;wreg free
  4333                           
  4334                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4335                           ;stkvar	_i_ror @ sp[(-17)+16]
  4336  01153C  0EFF               	movlw	-1
  4337  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4338  011544  2A0C               	incf	(btemp+11)^0,f,c
  4339  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4340  01154C  060C               	decf	(btemp+11)^0,f,c
  4341  01154E  0E1E               	movlw	30
  4342  011550  600C               	cpfslt	(btemp+11)^0,c
  4343  011552  D01A               	goto	u12600
  4344  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4345  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4346  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4347  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4348  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4349  011570  0E42               	movlw	66
  4350  011572  6EE6               	movwf	postinc1,c
  4351  011574  0E60               	movlw	96
  4352  011576  6EE6               	movwf	postinc1,c
  4353  011578  0E65               	movlw	101
  4354  01157A  6EE6               	movwf	postinc1,c
  4355  01157C  0E3C               	movlw	60
  4356  01157E  6EE6               	movwf	postinc1,c
  4357  011580  ECDA  F0C7         	call	___flge	;wreg free
  4358  011584  A001               	btfss	btemp& (0+255),0,c
  4359  011586  D773               	goto	l13094
  4360  011588                     u12600:
  4361                           
  4362                           ;main.c: 275:    static_soc();
  4363  011588  ECDE  F0D8         	call	_static_soc	;wreg free
  4364                           
  4365                           ;main.c: 276:    init_bsoc();
  4366  01158C  ECC7  F0BD         	call	_init_bsoc	;wreg free
  4367                           
  4368                           ;main.c: 277:    set_load_relay_one(0);
  4369  011590  0E00               	movlw	0
  4370  011592  6EE6               	movwf	postinc1,c
  4371  011594  EC47  F0E0         	call	_set_load_relay_one	;wreg free
  4372                           
  4373                           ;main.c: 278:    set_load_relay_two(0);
  4374  011598  0E00               	movlw	0
  4375  01159A  6EE6               	movwf	postinc1,c
  4376  01159C  EC3F  F0E0         	call	_set_load_relay_two	;wreg free
  4377                           
  4378                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4379  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4380  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4381  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4382  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4383  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4384  0115BC  0E16               	movlw	low STR_10
  4385  0115BE  6EE6               	movwf	postinc1,c
  4386  0115C0  0EFD               	movlw	high STR_10
  4387  0115C2  6EE6               	movwf	postinc1,c
  4388  0115C4  0E00               	movlw	0
  4389  0115C6  6EE6               	movwf	postinc1,c
  4390  0115C8  0E00               	movlw	0
  4391  0115CA  6EE6               	movwf	postinc1,c
  4392  0115CC  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4393  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4394  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4395  0115DC  0E06               	movlw	6
  4396  0115DE  6EE6               	movwf	postinc1,c
  4397  0115E0  EC79  F0CE         	call	_sprintf	;wreg free
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4401  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4402  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4403  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4404  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4405  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4406  011600  0E2C               	movlw	low STR_11
  4407  011602  6EE6               	movwf	postinc1,c
  4408  011604  0EFD               	movlw	high STR_11
  4409  011606  6EE6               	movwf	postinc1,c
  4410  011608  0E00               	movlw	0
  4411  01160A  6EE6               	movwf	postinc1,c
  4412  01160C  0E01               	movlw	1
  4413  01160E  6EE6               	movwf	postinc1,c
  4414  011610  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4415  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4416  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4417  011620  0E08               	movlw	8
  4418  011622  6EE6               	movwf	postinc1,c
  4419  011624  EC79  F0CE         	call	_sprintf	;wreg free
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;main.c: 281:    update_lcd(0);
  4423  011628  0E00               	movlw	0
  4424  01162A  6EE6               	movwf	postinc1,c
  4425  01162C  ECF1  F0CD         	call	_update_lcd	;wreg free
  4426                           
  4427                           ;main.c: 282:    WaitMs(2000);
  4428  011630  0ED0               	movlw	208
  4429  011632  6EE6               	movwf	postinc1,c
  4430  011634  0E07               	movlw	7
  4431  011636  6EE6               	movwf	postinc1,c
  4432  011638  EC76  F0DC         	call	_WaitMs	;wreg free
  4433                           
  4434                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4435  01163C  0E81               	movlw	low STR_12
  4436  01163E  6EE6               	movwf	postinc1,c
  4437  011640  0EFD               	movlw	high STR_12
  4438  011642  6EE6               	movwf	postinc1,c
  4439  011644  0E00               	movlw	0
  4440  011646  6EE6               	movwf	postinc1,c
  4441  011648  0E00               	movlw	0
  4442  01164A  6EE6               	movwf	postinc1,c
  4443  01164C  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4444  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4445  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4446  01165C  0E04               	movlw	4
  4447  01165E  6EE6               	movwf	postinc1,c
  4448  011660  EC79  F0CE         	call	_sprintf	;wreg free
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4452  011664  0E96               	movlw	low STR_13
  4453  011666  6EE6               	movwf	postinc1,c
  4454  011668  0EFD               	movlw	high STR_13
  4455  01166A  6EE6               	movwf	postinc1,c
  4456  01166C  0E00               	movlw	0
  4457  01166E  6EE6               	movwf	postinc1,c
  4458  011670  0E01               	movlw	1
  4459  011672  6EE6               	movwf	postinc1,c
  4460  011674  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4461  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4462  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4463  011684  0E04               	movlw	4
  4464  011686  6EE6               	movwf	postinc1,c
  4465  011688  EC79  F0CE         	call	_sprintf	;wreg free
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4469  01168C  0EEA               	movlw	low STR_14
  4470  01168E  6EE6               	movwf	postinc1,c
  4471  011690  0EFD               	movlw	high STR_14
  4472  011692  6EE6               	movwf	postinc1,c
  4473  011694  0E00               	movlw	0
  4474  011696  6EE6               	movwf	postinc1,c
  4475  011698  0E02               	movlw	2
  4476  01169A  6EE6               	movwf	postinc1,c
  4477  01169C  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4478  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4479  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4480  0116AC  0E04               	movlw	4
  4481  0116AE  6EE6               	movwf	postinc1,c
  4482  0116B0  EC79  F0CE         	call	_sprintf	;wreg free
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;main.c: 286:    update_lcd(0);
  4486  0116B4  0E00               	movlw	0
  4487  0116B6  6EE6               	movwf	postinc1,c
  4488  0116B8  ECF1  F0CD         	call	_update_lcd	;wreg free
  4489                           
  4490                           ;main.c: 287:    uint16_t i_esr = 1;
  4491  0116BC  0E01               	movlw	1
  4492  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4493  0116C0  0E00               	movlw	0
  4494  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4495                           
  4496                           ;stkvar	_i_esr @ sp[(-17)+8]
  4497  0116C4  0EF7               	movlw	-9
  4498  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4499  0116CC  0EF8               	movlw	-8
  4500  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4501                           
  4502                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4503  0116D4  D06D               	goto	l13152
  4504  0116D6                     l13140:
  4505                           
  4506                           ;main.c: 291:     WaitMs(110);
  4507  0116D6  0E6E               	movlw	110
  4508  0116D8  6EE6               	movwf	postinc1,c
  4509  0116DA  0E00               	movlw	0
  4510  0116DC  6EE6               	movwf	postinc1,c
  4511  0116DE  EC76  F0DC         	call	_WaitMs	;wreg free
  4512                           
  4513                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4514                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4515  0116E2  0EF3               	movlw	-13
  4516  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4517  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4518  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4519  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4520  0116FC  ECE3  F0D2         	call	_fabsf	;wreg free
  4521  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4522  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4523  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4524  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4525  011718  EC21  F0C7         	call	___fltol	;wreg free
  4526  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4527                           
  4528                           ;stkvar	_shape @ sp[(-17)+10]
  4529  011722  0EF9               	movlw	-7
  4530  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4531                           
  4532                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4533  01172A  0E00               	movlw	0
  4534  01172C  6EE6               	movwf	postinc1,c
  4535                           
  4536                           ;stkvar	_shape @ sp[(-18)+10]
  4537  01172E  0EF8               	movlw	-8
  4538  011730  50E3               	movf	plusw1,w,c
  4539  011732  6EE6               	movwf	postinc1,c
  4540  011734  EC6C  F0D0         	call	_spinners	;wreg free
  4541  011738  5001               	movf	btemp^0,w,c
  4542  01173A  6EE6               	movwf	postinc1,c
  4543  01173C  0E00               	movlw	0
  4544  01173E  6EE6               	movwf	postinc1,c
  4545  011740  0E00               	movlw	0
  4546  011742  6EE6               	movwf	postinc1,c
  4547  011744  0E00               	movlw	0
  4548  011746  6EE6               	movwf	postinc1,c
  4549  011748  EC6C  F0D0         	call	_spinners	;wreg free
  4550  01174C  5001               	movf	btemp^0,w,c
  4551  01174E  6EE6               	movwf	postinc1,c
  4552  011750  0E00               	movlw	0
  4553  011752  6EE6               	movwf	postinc1,c
  4554  011754  0ED5               	movlw	low STR_15
  4555  011756  6EE6               	movwf	postinc1,c
  4556  011758  0EFD               	movlw	high STR_15
  4557  01175A  6EE6               	movwf	postinc1,c
  4558  01175C  0E00               	movlw	0
  4559  01175E  6EE6               	movwf	postinc1,c
  4560  011760  0E02               	movlw	2
  4561  011762  6EE6               	movwf	postinc1,c
  4562  011764  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4563  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4564  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4565  011774  0E08               	movlw	8
  4566  011776  6EE6               	movwf	postinc1,c
  4567  011778  EC79  F0CE         	call	_sprintf	;wreg free
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;main.c: 294:     update_lcd(0);
  4571  01177C  0E00               	movlw	0
  4572  01177E  6EE6               	movwf	postinc1,c
  4573  011780  ECF1  F0CD         	call	_update_lcd	;wreg free
  4574                           
  4575                           ;main.c: 296:     if (i_esr++ > 512)
  4576                           ;stkvar	_i_esr @ sp[(-17)+8]
  4577  011784  50E1               	movf	fsr1l,w,c
  4578  011786  0FF7               	addlw	-9
  4579  011788  6ED9               	movwf	fsr2l,c
  4580  01178A  50E2               	movf	fsr1h,w,c
  4581  01178C  6EDA               	movwf	fsr2h,c
  4582  01178E  0EFF               	movlw	255
  4583  011790  22DA               	addwfc	fsr2h,f,c
  4584  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4585  011798  0E01               	movlw	1
  4586  01179A  26DE               	addwf	postinc2,f,c
  4587  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4588  0117A2  0E00               	movlw	0
  4589  0117A4  22DD               	addwfc	postdec2,f,c
  4590  0117A6  040B               	decf	(btemp+10)^0,w,c
  4591  0117A8  0E02               	movlw	2
  4592  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4593  0117AC  B0D8               	btfsc	status,0,c
  4594  0117AE  D017               	goto	u12620
  4595  0117B0                     l13152:
  4596                           
  4597                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4598  0117B0  0E00               	movlw	0
  4599  0117B2  6EE6               	movwf	postinc1,c
  4600  0117B4  EC86  F0B8         	call	_esr_check	;wreg free
  4601                           
  4602                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4603  0117B8  0EF3               	movlw	-13
  4604  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4605  0117C0  0EF4               	movlw	-12
  4606  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4607  0117C8  0EF5               	movlw	-11
  4608  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4609  0117D0  0EF6               	movlw	-10
  4610  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4611  0117D8  0EF6               	movlw	-10
  4612  0117DA  BEE3               	btfsc	plusw1,7,c
  4613  0117DC  D77C               	goto	l13140
  4614  0117DE                     u12620:
  4615                           
  4616                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4617  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4618  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4619  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4620  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4621  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4622  0117FA  0E00               	movlw	low STR_16
  4623  0117FC  6EE6               	movwf	postinc1,c
  4624  0117FE  0EFD               	movlw	high STR_16
  4625  011800  6EE6               	movwf	postinc1,c
  4626  011802  0E00               	movlw	0
  4627  011804  6EE6               	movwf	postinc1,c
  4628  011806  0E00               	movlw	0
  4629  011808  6EE6               	movwf	postinc1,c
  4630  01180A  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4631  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4632  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4633  01181A  0E08               	movlw	8
  4634  01181C  6EE6               	movwf	postinc1,c
  4635  01181E  EC79  F0CE         	call	_sprintf	;wreg free
  4636                           
  4637                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4638  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4639  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4640  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4641  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4642  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4643  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4644  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4645  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4646  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4647  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4648  01185A  0E9A               	movlw	low STR_17
  4649  01185C  6EE6               	movwf	postinc1,c
  4650  01185E  0EFC               	movlw	high STR_17
  4651  011860  6EE6               	movwf	postinc1,c
  4652  011862  0E00               	movlw	0
  4653  011864  6EE6               	movwf	postinc1,c
  4654  011866  0E01               	movlw	1
  4655  011868  6EE6               	movwf	postinc1,c
  4656  01186A  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4657  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4658  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4659  01187A  0E0C               	movlw	12
  4660  01187C  6EE6               	movwf	postinc1,c
  4661  01187E  EC79  F0CE         	call	_sprintf	;wreg free
  4662                           
  4663                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4664  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4665  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4666  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4667  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4668  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4669  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4670  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4671  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4672  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4673  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4674  0118BA  0EB4               	movlw	low STR_18
  4675  0118BC  6EE6               	movwf	postinc1,c
  4676  0118BE  0EFC               	movlw	high STR_18
  4677  0118C0  6EE6               	movwf	postinc1,c
  4678  0118C2  0E00               	movlw	0
  4679  0118C4  6EE6               	movwf	postinc1,c
  4680  0118C6  0E02               	movlw	2
  4681  0118C8  6EE6               	movwf	postinc1,c
  4682  0118CA  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4683  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4684  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4685  0118DA  0E0C               	movlw	12
  4686  0118DC  6EE6               	movwf	postinc1,c
  4687  0118DE  EC79  F0CE         	call	_sprintf	;wreg free
  4688                           
  4689                           ;main.c: 302:    update_lcd(0);
  4690  0118E2  0E00               	movlw	0
  4691  0118E4  6EE6               	movwf	postinc1,c
  4692  0118E6  ECF1  F0CD         	call	_update_lcd	;wreg free
  4693                           
  4694                           ;main.c: 303:    WaitMs(5000);
  4695  0118EA  0E88               	movlw	136
  4696  0118EC  6EE6               	movwf	postinc1,c
  4697  0118EE  0E13               	movlw	19
  4698  0118F0  6EE6               	movwf	postinc1,c
  4699  0118F2  EC76  F0DC         	call	_WaitMs	;wreg free
  4700                           
  4701                           ;main.c: 304:    V.system_stable = 1;
  4702  0118F6  0E01               	movlw	1
  4703  0118F8  0101               	movlb	1	; () banked
  4704  0118FA  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4705                           
  4706                           ;main.c: 305:    break;
  4707  0118FC  D01C               	goto	l13164
  4708  0118FE                     l1340:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4712  0118FE  0100               	movlb	0	; () banked
  4713  011900  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4714                           
  4715                           ;main.c: 312:    break;
  4716  011902  D019               	goto	l13164
  4717  011904                     l1342:
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4721  011904  6B30               	clrf	_V& (0+255),b	;volatile
  4722                           
  4723                           ;main.c: 316:    break;
  4724  011906  D017               	goto	l13164
  4725  011908                     l13162:
  4726  011908  0101               	movlb	1	; () banked
  4727  01190A  5130               	movf	_V& (0+255),w,b	;volatile
  4728  01190C  6E0B               	movwf	(btemp+10)^0,c
  4729  01190E  6A0C               	clrf	(btemp+11)^0,c
  4730                           
  4731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4732                           ; Switch size 1, requested type "simple"
  4733                           ; Number of cases is 1, Range of values is 0 to 0
  4734                           ; switch strategies available:
  4735                           ; Name         Instructions Cycles
  4736                           ; simple_byte            4     3 (average)
  4737                           ;	Chosen strategy is simple_byte
  4738  011910  500C               	movf	(btemp+11)^0,w,c
  4739  011912  0A00               	xorlw	0	; case 0
  4740  011914  A4D8               	btfss	status,2,c
  4741  011916  D7F6               	goto	l1342
  4742                           
  4743                           ; BSR set to: 1
  4744                           ; Switch size 1, requested type "simple"
  4745                           ; Number of cases is 5, Range of values is 0 to 5
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; simple_byte           16     9 (average)
  4749                           ;	Chosen strategy is simple_byte
  4750  011918  500B               	movf	(btemp+10)^0,w,c
  4751  01191A  0A00               	xorlw	0	; case 0
  4752  01191C  B4D8               	btfsc	status,2,c
  4753  01191E  D4CE               	goto	l13044
  4754  011920  0A01               	xorlw	1	; case 1
  4755  011922  B4D8               	btfsc	status,2,c
  4756  011924  D008               	goto	l13164
  4757  011926  0A02               	xorlw	2	; case 3
  4758  011928  B4D8               	btfsc	status,2,c
  4759  01192A  D005               	goto	l13164
  4760  01192C  0A07               	xorlw	7	; case 4
  4761  01192E  B4D8               	btfsc	status,2,c
  4762  011930  D7E6               	goto	l1340
  4763  011932  0A01               	xorlw	1	; case 5
  4764  011934  D7E7               	goto	l1342
  4765  011936                     l13164:
  4766                           
  4767                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4768  011936  0E01               	movlw	1
  4769  011938  6EE6               	movwf	postinc1,c
  4770  01193A  ECA7  F0DD         	call	_TimerDone	;wreg free
  4771  01193E  5001               	movf	btemp^0,w,c
  4772  011940  B4D8               	btfsc	status,2,c
  4773  011942  D013               	goto	l13176
  4774  011944  ECAB  F0E0         	call	_check_adc_scan	;wreg free
  4775  011948  5001               	movf	btemp^0,w,c
  4776  01194A  B4D8               	btfsc	status,2,c
  4777  01194C  D00E               	goto	l13176
  4778                           
  4779                           ;main.c: 323:    convert_adc_data();
  4780  01194E  EC87  F0D2         	call	_convert_adc_data	;wreg free
  4781                           
  4782                           ;main.c: 327:    clear_adc_scan();
  4783  011952  ECBB  F0E0         	call	_clear_adc_scan	;wreg free
  4784                           
  4785                           ; BSR set to: 1
  4786                           ;main.c: 328:    start_adc_scan();
  4787  011956  EC1A  F0D8         	call	_start_adc_scan	;wreg free
  4788                           
  4789                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4790  01195A  0EC8               	movlw	200
  4791  01195C  6EE6               	movwf	postinc1,c
  4792  01195E  0E00               	movlw	0
  4793  011960  6EE6               	movwf	postinc1,c
  4794  011962  0E01               	movlw	1
  4795  011964  6EE6               	movwf	postinc1,c
  4796  011966  EC81  F0DB         	call	_StartTimer	;wreg free
  4797  01196A                     l13176:
  4798                           
  4799                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4800                           
  4801                           ;main.c: 332:   if (V.ticks) {
  4802  01196A  0E0A               	movlw	10
  4803  01196C  6EE6               	movwf	postinc1,c
  4804  01196E  ECA7  F0DD         	call	_TimerDone	;wreg free
  4805  011972  5001               	movf	btemp^0,w,c
  4806  011974  B4D8               	btfsc	status,2,c
  4807  011976  EF39  F091         	goto	l13252
  4808                           
  4809                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4810  01197A  0E09               	movlw	9
  4811  01197C  6EE6               	movwf	postinc1,c
  4812  01197E  ECA7  F0DD         	call	_TimerDone	;wreg free
  4813  011982  5001               	movf	btemp^0,w,c
  4814  011984  B4D8               	btfsc	status,2,c
  4815  011986  D004               	goto	l13184
  4816                           
  4817                           ;main.c: 338:     set_display_info(DIS_STR);
  4818  011988  0E00               	movlw	0
  4819  01198A  6EE6               	movwf	postinc1,c
  4820  01198C  ECAD  F0DF         	call	_set_display_info	;wreg free
  4821  011990                     l13184:
  4822                           
  4823                           ;main.c: 340:    calc_model_data();
  4824  011990  EC21  F0AE         	call	_calc_model_data	;wreg free
  4825                           
  4826                           ; BSR set to: 57
  4827                           ;main.c: 347:     hid_display(&H);
  4828                           
  4829                           ;main.c: 342:    if (0) {
  4830  011994  0EF7               	movlw	_H& (0+255)
  4831  011996  6EE6               	movwf	postinc1,c
  4832  011998  ECFE  F0CE         	call	_hid_display	;wreg free
  4833                           
  4834                           ;main.c: 348:     switch (H.hid_display) {
  4835  01199C  EFE8  F090         	goto	l13232
  4836  0119A0                     l1350:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;main.c: 350:      V.calib = 0;
  4840  0119A0  0101               	movlb	1	; () banked
  4841  0119A2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4842                           
  4843                           ; BSR set to: 1
  4844                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4845  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4846  0119A8  50DF               	movf	indf2,w,c
  4847  0119AA  A4D8               	btfss	status,2,c
  4848  0119AC  D002               	goto	l13194
  4849                           
  4850                           ; BSR set to: 1
  4851  0119AE  0E20               	movlw	32
  4852  0119B0  D001               	goto	L1
  4853  0119B2                     l13194:
  4854                           
  4855                           ; BSR set to: 1
  4856  0119B2  0E44               	movlw	68
  4857  0119B4                     L1:
  4858  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4859  0119B6  0E00               	movlw	0
  4860  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4861                           
  4862                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4863  0119BA  0EF1               	movlw	-15
  4864  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4865  0119C2  0EF2               	movlw	-14
  4866  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4867                           
  4868                           ; BSR set to: 1
  4869  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4870  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4871  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4872  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4873  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4874                           
  4875                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4876  0119E6  0EED               	movlw	-19
  4877  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4878  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4879  0119F4  0E77               	movlw	low STR_22
  4880  0119F6  6EE6               	movwf	postinc1,c
  4881  0119F8  0EFE               	movlw	high STR_22
  4882  0119FA  6EE6               	movwf	postinc1,c
  4883  0119FC  0E00               	movlw	0
  4884  0119FE  6EE6               	movwf	postinc1,c
  4885  011A00  0E00               	movlw	0
  4886  011A02  6EE6               	movwf	postinc1,c
  4887  011A04  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4888  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  4889  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4890  011A14  0E0A               	movlw	10
  4891  011A16  6EE6               	movwf	postinc1,c
  4892  011A18  EC79  F0CE         	call	_sprintf	;wreg free
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4896  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  4897  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  4898  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  4899  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4900  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4901  011A38  0E37               	movlw	low STR_23
  4902  011A3A  6EE6               	movwf	postinc1,c
  4903  011A3C  0EFF               	movlw	high STR_23
  4904  011A3E  6EE6               	movwf	postinc1,c
  4905  011A40  0E00               	movlw	0
  4906  011A42  6EE6               	movwf	postinc1,c
  4907  011A44  0E01               	movlw	1
  4908  011A46  6EE6               	movwf	postinc1,c
  4909  011A48  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4910  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  4911  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4912  011A58  0E08               	movlw	8
  4913  011A5A  6EE6               	movwf	postinc1,c
  4914  011A5C  EC79  F0CE         	call	_sprintf	;wreg free
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4918  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  4919  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  4920  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  4921  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4922  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4923  011A7C  0E24               	movlw	low STR_24
  4924  011A7E  6EE6               	movwf	postinc1,c
  4925  011A80  0EFF               	movlw	high STR_24
  4926  011A82  6EE6               	movwf	postinc1,c
  4927  011A84  0E00               	movlw	0
  4928  011A86  6EE6               	movwf	postinc1,c
  4929  011A88  0E02               	movlw	2
  4930  011A8A  6EE6               	movwf	postinc1,c
  4931  011A8C  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4932  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  4933  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4934  011A9C  0E08               	movlw	8
  4935  011A9E  6EE6               	movwf	postinc1,c
  4936  011AA0  EC79  F0CE         	call	_sprintf	;wreg free
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4940  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  4941  011AA8  50DF               	movf	indf2,w,c
  4942  011AAA  A4D8               	btfss	status,2,c
  4943  011AAC  D002               	goto	l13206
  4944                           
  4945                           ; BSR set to: 0
  4946  011AAE  0E20               	movlw	32
  4947  011AB0  D001               	goto	L2
  4948  011AB2                     l13206:
  4949                           
  4950                           ; BSR set to: 0
  4951  011AB2  0E44               	movlw	68
  4952  011AB4                     L2:
  4953  011AB4  6E0B               	movwf	(btemp+10)^0,c
  4954  011AB6  0E00               	movlw	0
  4955  011AB8  6E0C               	movwf	(btemp+11)^0,c
  4956                           
  4957                           ;stkvar	_main$3756 @ sp[(-17)+0]
  4958  011ABA  0EEF               	movlw	-17
  4959  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4960  011AC2  0EF0               	movlw	-16
  4961  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4962                           
  4963                           ; BSR set to: 0
  4964  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4965  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  4966  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  4967  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4968  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4969                           
  4970                           ;stkvar	_main$3756 @ sp[(-21)+0]
  4971  011AE6  0EEB               	movlw	-21
  4972  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  4973  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  4974  011AF4  0E27               	movlw	low STR_25
  4975  011AF6  6EE6               	movwf	postinc1,c
  4976  011AF8  0EFE               	movlw	high STR_25
  4977  011AFA  6EE6               	movwf	postinc1,c
  4978  011AFC  0E01               	movlw	1
  4979  011AFE  6EE6               	movwf	postinc1,c
  4980  011B00  0E00               	movlw	0
  4981  011B02  6EE6               	movwf	postinc1,c
  4982  011B04  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  4983  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  4984  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4985  011B14  0E0A               	movlw	10
  4986  011B16  6EE6               	movwf	postinc1,c
  4987  011B18  EC79  F0CE         	call	_sprintf	;wreg free
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4991  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  4992  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  4993  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  4994  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4995  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  011B38  0E11               	movlw	low STR_26
  4997  011B3A  6EE6               	movwf	postinc1,c
  4998  011B3C  0EFF               	movlw	high STR_26
  4999  011B3E  6EE6               	movwf	postinc1,c
  5000  011B40  0E01               	movlw	1
  5001  011B42  6EE6               	movwf	postinc1,c
  5002  011B44  0E01               	movlw	1
  5003  011B46  6EE6               	movwf	postinc1,c
  5004  011B48  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5005  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5006  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5007  011B58  0E08               	movlw	8
  5008  011B5A  6EE6               	movwf	postinc1,c
  5009  011B5C  EC79  F0CE         	call	_sprintf	;wreg free
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  5013  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5014  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5018  011B7C  0EFE               	movlw	low STR_27
  5019  011B7E  6EE6               	movwf	postinc1,c
  5020  011B80  0EFE               	movlw	high STR_27
  5021  011B82  6EE6               	movwf	postinc1,c
  5022  011B84  0E01               	movlw	1
  5023  011B86  6EE6               	movwf	postinc1,c
  5024  011B88  0E02               	movlw	2
  5025  011B8A  6EE6               	movwf	postinc1,c
  5026  011B8C  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5027  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5028  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5029  011B9C  0E08               	movlw	8
  5030  011B9E  6EE6               	movwf	postinc1,c
  5031  011BA0  EC79  F0CE         	call	_sprintf	;wreg free
  5032                           
  5033                           ;main.c: 358:      break;
  5034  011BA4  D32B               	goto	l13234
  5035  011BA6                     l1360:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;main.c: 360:      V.calib = 0;
  5039  011BA6  0101               	movlb	1	; () banked
  5040  011BA8  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5044  011BAA  EE21  F303         	lfsr	2,_C+4	;volatile
  5045  011BAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5046  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5047  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5048  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5049  011BC6  EE21  F313         	lfsr	2,_C+20	;volatile
  5050  011BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5051  011BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011BE2  0E70               	movlw	low STR_28
  5055  011BE4  6EE6               	movwf	postinc1,c
  5056  011BE6  0EFF               	movlw	high STR_28
  5057  011BE8  6EE6               	movwf	postinc1,c
  5058  011BEA  0E00               	movlw	0
  5059  011BEC  6EE6               	movwf	postinc1,c
  5060  011BEE  0E00               	movlw	0
  5061  011BF0  6EE6               	movwf	postinc1,c
  5062  011BF2  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5063  011BF6  0060  F007  FFE6   	movff	btemp,postinc1
  5064  011BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5065  011C02  0E0C               	movlw	12
  5066  011C04  6EE6               	movwf	postinc1,c
  5067  011C06  EC79  F0CE         	call	_sprintf	;wreg free
  5068                           
  5069                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5070  011C0A  EE21  F2FF         	lfsr	2,_C
  5071  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5072  011C14  006F FF7B FFE6     	movff	postinc2,postinc1
  5073  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5074  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5075  011C26  EE21  F30F         	lfsr	2,_C+16	;volatile
  5076  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5077  011C30  006F FF7B FFE6     	movff	postinc2,postinc1
  5078  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5079  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5080  011C42  0E4A               	movlw	low STR_29
  5081  011C44  6EE6               	movwf	postinc1,c
  5082  011C46  0EFF               	movlw	high STR_29
  5083  011C48  6EE6               	movwf	postinc1,c
  5084  011C4A  0E00               	movlw	0
  5085  011C4C  6EE6               	movwf	postinc1,c
  5086  011C4E  0E01               	movlw	1
  5087  011C50  6EE6               	movwf	postinc1,c
  5088  011C52  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5089  011C56  0060  F007  FFE6   	movff	btemp,postinc1
  5090  011C5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5091  011C62  0E0C               	movlw	12
  5092  011C64  6EE6               	movwf	postinc1,c
  5093  011C66  EC79  F0CE         	call	_sprintf	;wreg free
  5094                           
  5095                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5096  011C6A  EE21  F33F         	lfsr	2,_C+64	;volatile
  5097  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5100  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5101  011C86  EE21  F307         	lfsr	2,_C+8	;volatile
  5102  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5103  011C90  006F FF7B FFE6     	movff	postinc2,postinc1
  5104  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5105  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5106  011CA2  0E5D               	movlw	low STR_30
  5107  011CA4  6EE6               	movwf	postinc1,c
  5108  011CA6  0EFF               	movlw	high STR_30
  5109  011CA8  6EE6               	movwf	postinc1,c
  5110  011CAA  0E00               	movlw	0
  5111  011CAC  6EE6               	movwf	postinc1,c
  5112  011CAE  0E02               	movlw	2
  5113  011CB0  6EE6               	movwf	postinc1,c
  5114  011CB2  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5115  011CB6  0060  F007  FFE6   	movff	btemp,postinc1
  5116  011CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5117  011CC2  0E0C               	movlw	12
  5118  011CC4  6EE6               	movwf	postinc1,c
  5119  011CC6  EC79  F0CE         	call	_sprintf	;wreg free
  5120                           
  5121                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5122  011CCA  EE21  F39F         	lfsr	2,_C+160	;volatile
  5123  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011CE6  0EC5               	movlw	low STR_31
  5128  011CE8  6EE6               	movwf	postinc1,c
  5129  011CEA  0EFE               	movlw	high STR_31
  5130  011CEC  6EE6               	movwf	postinc1,c
  5131  011CEE  0E01               	movlw	1
  5132  011CF0  6EE6               	movwf	postinc1,c
  5133  011CF2  0E00               	movlw	0
  5134  011CF4  6EE6               	movwf	postinc1,c
  5135  011CF6  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5136  011CFA  0060  F007  FFE6   	movff	btemp,postinc1
  5137  011D00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5138  011D06  0E08               	movlw	8
  5139  011D08  6EE6               	movwf	postinc1,c
  5140  011D0A  EC79  F0CE         	call	_sprintf	;wreg free
  5141                           
  5142                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5143  011D0E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5144  011D12  006F FF7B FFE6     	movff	postinc2,postinc1
  5145  011D18  006F FF7B FFE6     	movff	postinc2,postinc1
  5146  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5147  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011D2A  0ED8               	movlw	low STR_32
  5149  011D2C  6EE6               	movwf	postinc1,c
  5150  011D2E  0EFE               	movlw	high STR_32
  5151  011D30  6EE6               	movwf	postinc1,c
  5152  011D32  0E01               	movlw	1
  5153  011D34  6EE6               	movwf	postinc1,c
  5154  011D36  0E01               	movlw	1
  5155  011D38  6EE6               	movwf	postinc1,c
  5156  011D3A  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5157  011D3E  0060  F007  FFE6   	movff	btemp,postinc1
  5158  011D44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5159  011D4A  0E08               	movlw	8
  5160  011D4C  6EE6               	movwf	postinc1,c
  5161  011D4E  EC79  F0CE         	call	_sprintf	;wreg free
  5162                           
  5163                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5164  011D52  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5165  011D56  006F FF7B FFE6     	movff	postinc2,postinc1
  5166  011D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5167  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5168  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  011D6E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5170  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5171  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5173  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011D8A  ECBC  F0A2         	call	___fladd	;wreg free
  5175  011D8E  0060  F007  FFE6   	movff	btemp,postinc1
  5176  011D94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5177  011D9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5178  011DA0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5179  011DA6  0EEB               	movlw	low STR_33
  5180  011DA8  6EE6               	movwf	postinc1,c
  5181  011DAA  0EFE               	movlw	high STR_33
  5182  011DAC  6EE6               	movwf	postinc1,c
  5183  011DAE  0E01               	movlw	1
  5184  011DB0  6EE6               	movwf	postinc1,c
  5185  011DB2  0E02               	movlw	2
  5186  011DB4  6EE6               	movwf	postinc1,c
  5187  011DB6  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5188  011DBA  0060  F007  FFE6   	movff	btemp,postinc1
  5189  011DC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5190  011DC6  0E08               	movlw	8
  5191  011DC8  6EE6               	movwf	postinc1,c
  5192  011DCA  EC79  F0CE         	call	_sprintf	;wreg free
  5193                           
  5194                           ;main.c: 368:      break;
  5195  011DCE  D216               	goto	l13234
  5196  011DD0                     l1361:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;main.c: 370:      V.calib = 0;
  5200  011DD0  0101               	movlb	1	; () banked
  5201  011DD2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5202                           
  5203                           ; BSR set to: 1
  5204                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5205  011DD4  EE21  F37F         	lfsr	2,_C+128	;volatile
  5206  011DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5207  011DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011DF0  0E3B               	movlw	low STR_34
  5211  011DF2  6EE6               	movwf	postinc1,c
  5212  011DF4  0EFE               	movlw	high STR_34
  5213  011DF6  6EE6               	movwf	postinc1,c
  5214  011DF8  0E00               	movlw	0
  5215  011DFA  6EE6               	movwf	postinc1,c
  5216  011DFC  0E00               	movlw	0
  5217  011DFE  6EE6               	movwf	postinc1,c
  5218  011E00  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5219  011E04  0060  F007  FFE6   	movff	btemp,postinc1
  5220  011E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5221  011E10  0E08               	movlw	8
  5222  011E12  6EE6               	movwf	postinc1,c
  5223  011E14  EC79  F0CE         	call	_sprintf	;wreg free
  5224                           
  5225                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5226  011E18  EE21  F393         	lfsr	2,_C+148	;volatile
  5227  011E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5228  011E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5230  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5231  011E34  EE21  F38F         	lfsr	2,_C+144	;volatile
  5232  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5233  011E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5234  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011E50  0E8B               	movlw	low STR_35
  5237  011E52  6EE6               	movwf	postinc1,c
  5238  011E54  0EFE               	movlw	high STR_35
  5239  011E56  6EE6               	movwf	postinc1,c
  5240  011E58  0E00               	movlw	0
  5241  011E5A  6EE6               	movwf	postinc1,c
  5242  011E5C  0E01               	movlw	1
  5243  011E5E  6EE6               	movwf	postinc1,c
  5244  011E60  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5245  011E64  0060  F007  FFE6   	movff	btemp,postinc1
  5246  011E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5247  011E70  0E0C               	movlw	12
  5248  011E72  6EE6               	movwf	postinc1,c
  5249  011E74  EC79  F0CE         	call	_sprintf	;wreg free
  5250                           
  5251                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5252  011E78  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5253  011E7C  006F FF78  F00B    	movff	postinc2,btemp+10
  5254  011E82  006F FF74  F00C    	movff	postdec2,btemp+11
  5255  011E88  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5256  011E8E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5257  011E94  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5258  011E98  006F FF78  F00B    	movff	postinc2,btemp+10
  5259  011E9E  006F FF74  F00C    	movff	postdec2,btemp+11
  5260  011EA4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5261  011EAA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5262  011EB0  0E00               	movlw	0
  5263  011EB2  6EE6               	movwf	postinc1,c
  5264  011EB4  0E05               	movlw	5
  5265  011EB6  6EE6               	movwf	postinc1,c
  5266  011EB8  EC6C  F0D0         	call	_spinners	;wreg free
  5267  011EBC  5001               	movf	btemp^0,w,c
  5268  011EBE  6EE6               	movwf	postinc1,c
  5269  011EC0  0E00               	movlw	0
  5270  011EC2  6EE6               	movwf	postinc1,c
  5271  011EC4  0E13               	movlw	low STR_36
  5272  011EC6  6EE6               	movwf	postinc1,c
  5273  011EC8  0EFE               	movlw	high STR_36
  5274  011ECA  6EE6               	movwf	postinc1,c
  5275  011ECC  0E00               	movlw	0
  5276  011ECE  6EE6               	movwf	postinc1,c
  5277  011ED0  0E02               	movlw	2
  5278  011ED2  6EE6               	movwf	postinc1,c
  5279  011ED4  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5280  011ED8  0060  F007  FFE6   	movff	btemp,postinc1
  5281  011EDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5282  011EE4  0E0A               	movlw	10
  5283  011EE6  6EE6               	movwf	postinc1,c
  5284  011EE8  EC79  F0CE         	call	_sprintf	;wreg free
  5285                           
  5286                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5287  011EEC  EE21  F387         	lfsr	2,_C+136	;volatile
  5288  011EF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011EF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5291  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5292  011F08  0EFF               	movlw	low STR_37
  5293  011F0A  6EE6               	movwf	postinc1,c
  5294  011F0C  0EFD               	movlw	high STR_37
  5295  011F0E  6EE6               	movwf	postinc1,c
  5296  011F10  0E01               	movlw	1
  5297  011F12  6EE6               	movwf	postinc1,c
  5298  011F14  0E00               	movlw	0
  5299  011F16  6EE6               	movwf	postinc1,c
  5300  011F18  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5301  011F1C  0060  F007  FFE6   	movff	btemp,postinc1
  5302  011F22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5303  011F28  0E08               	movlw	8
  5304  011F2A  6EE6               	movwf	postinc1,c
  5305  011F2C  EC79  F0CE         	call	_sprintf	;wreg free
  5306                           
  5307                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5308  011F30  EE22  F00D         	lfsr	2,_C+270	;volatile
  5309  011F34  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5313  011F4C  EE22  F019         	lfsr	2,_C+282	;volatile
  5314  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5315  011F56  006F FF7B FFE6     	movff	postinc2,postinc1
  5316  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5317  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5318  011F68  0E4F               	movlw	low STR_38
  5319  011F6A  6EE6               	movwf	postinc1,c
  5320  011F6C  0EFE               	movlw	high STR_38
  5321  011F6E  6EE6               	movwf	postinc1,c
  5322  011F70  0E01               	movlw	1
  5323  011F72  6EE6               	movwf	postinc1,c
  5324  011F74  0E01               	movlw	1
  5325  011F76  6EE6               	movwf	postinc1,c
  5326  011F78  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5327  011F7C  0060  F007  FFE6   	movff	btemp,postinc1
  5328  011F82  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5329  011F88  0E0C               	movlw	12
  5330  011F8A  6EE6               	movwf	postinc1,c
  5331  011F8C  EC79  F0CE         	call	_sprintf	;wreg free
  5332                           
  5333                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5334  011F90  EE22  F011         	lfsr	2,_C+274	;volatile
  5335  011F94  006F FF7B FFE6     	movff	postinc2,postinc1
  5336  011F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5337  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  011FAC  EE22  F01D         	lfsr	2,_C+286	;volatile
  5340  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5341  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  011FC8  0E63               	movlw	low STR_39
  5345  011FCA  6EE6               	movwf	postinc1,c
  5346  011FCC  0EFE               	movlw	high STR_39
  5347  011FCE  6EE6               	movwf	postinc1,c
  5348  011FD0  0E01               	movlw	1
  5349  011FD2  6EE6               	movwf	postinc1,c
  5350  011FD4  0E02               	movlw	2
  5351  011FD6  6EE6               	movwf	postinc1,c
  5352  011FD8  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5353  011FDC  0060  F007  FFE6   	movff	btemp,postinc1
  5354  011FE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5355  011FE8  0E0C               	movlw	12
  5356  011FEA  6EE6               	movwf	postinc1,c
  5357  011FEC  EC79  F0CE         	call	_sprintf	;wreg free
  5358                           
  5359                           ;main.c: 378:      break;
  5360  011FF0  D105               	goto	l13234
  5361  011FF2                     l13218:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 380:      if (!V.calib) {
  5365  011FF2  0101               	movlb	1	; () banked
  5366  011FF4  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5367  011FF6  A4D8               	btfss	status,2,c
  5368  011FF8  D02D               	goto	l13222
  5369                           
  5370                           ; BSR set to: 1
  5371                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5372  011FFA  0EFF               	movlw	255
  5373  011FFC  6EE6               	movwf	postinc1,c
  5374                           
  5375                           ;stkvar	_i @ sp[(-18)+13]
  5376  011FFE  0EFB               	movlw	-5
  5377  012000  50E3               	movf	plusw1,w,c
  5378  012002  6EE6               	movwf	postinc1,c
  5379  012004  0E00               	movlw	0
  5380  012006  6EE6               	movwf	postinc1,c
  5381  012008  0E00               	movlw	0
  5382  01200A  6EE6               	movwf	postinc1,c
  5383  01200C  0E00               	movlw	0
  5384  01200E  6EE6               	movwf	postinc1,c
  5385  012010  0E00               	movlw	0
  5386  012012  6EE6               	movwf	postinc1,c
  5387  012014  EC25  F0C3         	call	_lp_filter	;wreg free
  5388                           
  5389                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5390  012018  0EFF               	movlw	255
  5391  01201A  6EE6               	movwf	postinc1,c
  5392                           
  5393                           ;stkvar	_j @ sp[(-18)+12]
  5394  01201C  0EFA               	movlw	-6
  5395  01201E  50E3               	movf	plusw1,w,c
  5396  012020  6EE6               	movwf	postinc1,c
  5397  012022  0E00               	movlw	0
  5398  012024  6EE6               	movwf	postinc1,c
  5399  012026  0E00               	movlw	0
  5400  012028  6EE6               	movwf	postinc1,c
  5401  01202A  0E00               	movlw	0
  5402  01202C  6EE6               	movwf	postinc1,c
  5403  01202E  0E00               	movlw	0
  5404  012030  6EE6               	movwf	postinc1,c
  5405  012032  EC25  F0C3         	call	_lp_filter	;wreg free
  5406                           
  5407                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5408  012036  0EFF               	movlw	255
  5409  012038  6EE6               	movwf	postinc1,c
  5410                           
  5411                           ;stkvar	_k @ sp[(-18)+11]
  5412  01203A  0EF9               	movlw	-7
  5413  01203C  50E3               	movf	plusw1,w,c
  5414  01203E  6EE6               	movwf	postinc1,c
  5415  012040  0E00               	movlw	0
  5416  012042  6EE6               	movwf	postinc1,c
  5417  012044  0E00               	movlw	0
  5418  012046  6EE6               	movwf	postinc1,c
  5419  012048  0E00               	movlw	0
  5420  01204A  6EE6               	movwf	postinc1,c
  5421  01204C  0E00               	movlw	0
  5422  01204E  6EE6               	movwf	postinc1,c
  5423  012050  EC25  F0C3         	call	_lp_filter	;wreg free
  5424  012054                     l13222:
  5425                           
  5426                           ;main.c: 385:      V.calib = 1;
  5427  012054  0E01               	movlw	1
  5428  012056  0101               	movlb	1	; () banked
  5429  012058  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5430                           
  5431                           ; BSR set to: 1
  5432                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5433  01205A  0E02               	movlw	2
  5434  01205C  6EE6               	movwf	postinc1,c
  5435  01205E  EC3C  F0DD         	call	_get_switch	;wreg free
  5436  012062  5001               	movf	btemp^0,w,c
  5437  012064  6EE6               	movwf	postinc1,c
  5438  012066  0E00               	movlw	0
  5439  012068  6EE6               	movwf	postinc1,c
  5440                           
  5441                           ;stkvar	_i @ sp[(-19)+13]
  5442  01206A  0EFA               	movlw	-6
  5443  01206C  50E3               	movf	plusw1,w,c
  5444  01206E  0D04               	mullw	4
  5445  012070  0EFF               	movlw	low _C
  5446  012072  24F3               	addwf	243,w,c
  5447  012074  6ED9               	movwf	fsr2l,c
  5448  012076  0E06               	movlw	high _C
  5449  012078  20F4               	addwfc	prodh,w,c
  5450  01207A  6EDA               	movwf	fsr2h,c
  5451  01207C  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  012082  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5454  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5455                           
  5456                           ;stkvar	_i @ sp[(-23)+13]
  5457  012094  0EF6               	movlw	-10
  5458  012096  50E3               	movf	plusw1,w,c
  5459  012098  6EE6               	movwf	postinc1,c
  5460  01209A  EC3E  F0DF         	call	_get_raw_result	;wreg free
  5461  01209E  0060  F007  FFE6   	movff	btemp,postinc1
  5462  0120A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5463  0120AA  0E94               	movlw	low STR_19
  5464  0120AC  6EE6               	movwf	postinc1,c
  5465  0120AE  0EFF               	movlw	high STR_19
  5466  0120B0  6EE6               	movwf	postinc1,c
  5467  0120B2  0E00               	movlw	0
  5468  0120B4  6EE6               	movwf	postinc1,c
  5469  0120B6  0E00               	movlw	0
  5470  0120B8  6EE6               	movwf	postinc1,c
  5471  0120BA  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5472  0120BE  0060  F007  FFE6   	movff	btemp,postinc1
  5473  0120C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5474  0120CA  0E0C               	movlw	12
  5475  0120CC  6EE6               	movwf	postinc1,c
  5476  0120CE  EC79  F0CE         	call	_sprintf	;wreg free
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5480  0120D2  0E03               	movlw	3
  5481  0120D4  6EE6               	movwf	postinc1,c
  5482  0120D6  EC3C  F0DD         	call	_get_switch	;wreg free
  5483  0120DA  5001               	movf	btemp^0,w,c
  5484  0120DC  6EE6               	movwf	postinc1,c
  5485  0120DE  0E00               	movlw	0
  5486  0120E0  6EE6               	movwf	postinc1,c
  5487                           
  5488                           ;stkvar	_j @ sp[(-19)+12]
  5489  0120E2  0EF9               	movlw	-7
  5490  0120E4  50E3               	movf	plusw1,w,c
  5491  0120E6  0D04               	mullw	4
  5492  0120E8  0EFF               	movlw	low _C
  5493  0120EA  24F3               	addwf	243,w,c
  5494  0120EC  6ED9               	movwf	fsr2l,c
  5495  0120EE  0E06               	movlw	high _C
  5496  0120F0  20F4               	addwfc	prodh,w,c
  5497  0120F2  6EDA               	movwf	fsr2h,c
  5498  0120F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  0120FA  006F FF7B FFE6     	movff	postinc2,postinc1
  5500  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5501  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5502                           
  5503                           ;stkvar	_j @ sp[(-23)+12]
  5504  01210C  0EF5               	movlw	-11
  5505  01210E  50E3               	movf	plusw1,w,c
  5506  012110  6EE6               	movwf	postinc1,c
  5507  012112  EC3E  F0DF         	call	_get_raw_result	;wreg free
  5508  012116  0060  F007  FFE6   	movff	btemp,postinc1
  5509  01211C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5510  012122  0E94               	movlw	low STR_19
  5511  012124  6EE6               	movwf	postinc1,c
  5512  012126  0EFF               	movlw	high STR_19
  5513  012128  6EE6               	movwf	postinc1,c
  5514  01212A  0E00               	movlw	0
  5515  01212C  6EE6               	movwf	postinc1,c
  5516  01212E  0E01               	movlw	1
  5517  012130  6EE6               	movwf	postinc1,c
  5518  012132  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5519  012136  0060  F007  FFE6   	movff	btemp,postinc1
  5520  01213C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5521  012142  0E0C               	movlw	12
  5522  012144  6EE6               	movwf	postinc1,c
  5523  012146  EC79  F0CE         	call	_sprintf	;wreg free
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5527                           ;stkvar	_inp_index @ sp[(-17)+14]
  5528  01214A  0EFD               	movlw	-3
  5529  01214C  50E3               	movf	plusw1,w,c
  5530  01214E  6E0B               	movwf	(btemp+10)^0,c
  5531  012150  6A0C               	clrf	(btemp+11)^0,c
  5532  012152  0E01               	movlw	1
  5533  012154  260B               	addwf	(btemp+10)^0,f,c
  5534  012156  0E00               	movlw	0
  5535  012158  220C               	addwfc	(btemp+11)^0,f,c
  5536  01215A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5537  012160  0060  F033  FFE6   	movff	btemp+11,postinc1
  5538                           
  5539                           ;stkvar	_k @ sp[(-19)+11]
  5540  012166  0EF8               	movlw	-8
  5541  012168  50E3               	movf	plusw1,w,c
  5542  01216A  0D04               	mullw	4
  5543  01216C  0EFF               	movlw	low _C
  5544  01216E  24F3               	addwf	243,w,c
  5545  012170  6ED9               	movwf	fsr2l,c
  5546  012172  0E06               	movlw	high _C
  5547  012174  20F4               	addwfc	prodh,w,c
  5548  012176  6EDA               	movwf	fsr2h,c
  5549  012178  006F FF7B FFE6     	movff	postinc2,postinc1
  5550  01217E  006F FF7B FFE6     	movff	postinc2,postinc1
  5551  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5553                           
  5554                           ;stkvar	_k @ sp[(-23)+11]
  5555  012190  0EF4               	movlw	-12
  5556  012192  50E3               	movf	plusw1,w,c
  5557  012194  6EE6               	movwf	postinc1,c
  5558  012196  EC3E  F0DF         	call	_get_raw_result	;wreg free
  5559  01219A  0060  F007  FFE6   	movff	btemp,postinc1
  5560  0121A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5561  0121A6  0E83               	movlw	low STR_21
  5562  0121A8  6EE6               	movwf	postinc1,c
  5563  0121AA  0EFF               	movlw	high STR_21
  5564  0121AC  6EE6               	movwf	postinc1,c
  5565  0121AE  0E00               	movlw	0
  5566  0121B0  6EE6               	movwf	postinc1,c
  5567  0121B2  0E02               	movlw	2
  5568  0121B4  6EE6               	movwf	postinc1,c
  5569  0121B6  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  5570  0121BA  0060  F007  FFE6   	movff	btemp,postinc1
  5571  0121C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5572  0121C6  0E0C               	movlw	12
  5573  0121C8  6EE6               	movwf	postinc1,c
  5574  0121CA  EC79  F0CE         	call	_sprintf	;wreg free
  5575                           
  5576                           ;main.c: 389:      break;
  5577  0121CE  D016               	goto	l13234
  5578  0121D0                     l13232:
  5579  0121D0  0100               	movlb	0	; () banked
  5580  0121D2  51F7               	movf	_H& (0+255),w,b
  5581  0121D4  6E0B               	movwf	(btemp+10)^0,c
  5582  0121D6  6A0C               	clrf	(btemp+11)^0,c
  5583                           
  5584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5585                           ; Switch size 1, requested type "simple"
  5586                           ; Number of cases is 1, Range of values is 0 to 0
  5587                           ; switch strategies available:
  5588                           ; Name         Instructions Cycles
  5589                           ; simple_byte            4     3 (average)
  5590                           ;	Chosen strategy is simple_byte
  5591  0121D8  500C               	movf	(btemp+11)^0,w,c
  5592  0121DA  0A00               	xorlw	0	; case 0
  5593  0121DC  A4D8               	btfss	status,2,c
  5594  0121DE  D00E               	goto	l13234
  5595                           
  5596                           ; BSR set to: 0
  5597                           ; Switch size 1, requested type "simple"
  5598                           ; Number of cases is 4, Range of values is 0 to 3
  5599                           ; switch strategies available:
  5600                           ; Name         Instructions Cycles
  5601                           ; simple_byte           13     7 (average)
  5602                           ;	Chosen strategy is simple_byte
  5603  0121E0  500B               	movf	(btemp+10)^0,w,c
  5604  0121E2  0A00               	xorlw	0	; case 0
  5605  0121E4  B4D8               	btfsc	status,2,c
  5606  0121E6  D4DF               	goto	l1360
  5607  0121E8  0A01               	xorlw	1	; case 1
  5608  0121EA  B4D8               	btfsc	status,2,c
  5609  0121EC  EFD0  F08C         	goto	l1350
  5610  0121F0  0A03               	xorlw	3	; case 2
  5611  0121F2  B4D8               	btfsc	status,2,c
  5612  0121F4  D5ED               	goto	l1361
  5613  0121F6  0A01               	xorlw	1	; case 3
  5614  0121F8  B4D8               	btfsc	status,2,c
  5615  0121FA  D6FB               	goto	l13218
  5616  0121FC                     l13234:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;main.c: 393:     clear_hid_pflags(&H);
  5620  0121FC  0EF7               	movlw	_H& (0+255)
  5621  0121FE  6EE6               	movwf	postinc1,c
  5622  012200  ECD2  F0DE         	call	_clear_hid_pflags	;wreg free
  5623                           
  5624                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5625  012204  0EFA               	movlw	250
  5626  012206  6EE6               	movwf	postinc1,c
  5627  012208  0E00               	movlw	0
  5628  01220A  6EE6               	movwf	postinc1,c
  5629  01220C  0E0A               	movlw	10
  5630  01220E  6EE6               	movwf	postinc1,c
  5631  012210  EC81  F0DB         	call	_StartTimer	;wreg free
  5632                           
  5633                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5634  012214  0EF7               	movlw	_H& (0+255)
  5635  012216  6EE6               	movwf	postinc1,c
  5636  012218  ECA1  F0DB         	call	_check_enter_button	;wreg free
  5637  01221C  5001               	movf	btemp^0,w,c
  5638  01221E  0101               	movlb	1	; () banked
  5639  012220  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5643  012222  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5644  012224  B4D8               	btfsc	status,2,c
  5645  012226  D013               	goto	l13248
  5646                           
  5647                           ; BSR set to: 1
  5648  012228  0E03               	movlw	3
  5649  01222A  0100               	movlb	0	; () banked
  5650  01222C  19F7               	xorwf	_H& (0+255),w,b
  5651  01222E  B4D8               	btfsc	status,2,c
  5652  012230  D00E               	goto	l13248
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;main.c: 398:     V.enter = 0;
  5656  012232  0101               	movlb	1	; () banked
  5657  012234  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;main.c: 399:     V.screen = ~V.screen;
  5661  012236  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5662  012238  D002               	goto	u12720
  5663  01223A  0E01               	movlw	1
  5664  01223C  D001               	goto	u12726
  5665  01223E                     u12720:
  5666  01223E  0E00               	movlw	0
  5667  012240                     u12726:
  5668  012240  0AFF               	xorlw	255
  5669  012242  6E0C               	movwf	(btemp+11)^0,c
  5670  012244  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5671  012246  180C               	xorwf	(btemp+11)^0,w,c
  5672  012248  0BFE               	andlw	-2
  5673  01224A  180C               	xorwf	(btemp+11)^0,w,c
  5674  01224C  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5675  01224E                     l13248:
  5676                           
  5677                           ;main.c: 401:    set_vterm(V.screen);
  5678  01224E  0101               	movlb	1	; () banked
  5679  012250  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5680  012252  D002               	goto	u12730
  5681  012254  0E01               	movlw	1
  5682  012256  D001               	goto	u12736
  5683  012258                     u12730:
  5684  012258  0E00               	movlw	0
  5685  01225A                     u12736:
  5686  01225A  6EE6               	movwf	postinc1,c
  5687  01225C  EC9E  F0DF         	call	_set_vterm	;wreg free
  5688                           
  5689                           ;main.c: 402:    update_lcd(V.screen);
  5690  012260  0101               	movlb	1	; () banked
  5691  012262  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5692  012264  D002               	goto	u12740
  5693  012266  0E01               	movlw	1
  5694  012268  D001               	goto	u12746
  5695  01226A                     u12740:
  5696  01226A  0E00               	movlw	0
  5697  01226C                     u12746:
  5698  01226C  6EE6               	movwf	postinc1,c
  5699  01226E  ECF1  F0CD         	call	_update_lcd	;wreg free
  5700  012272                     l13252:
  5701                           
  5702                           ;main.c: 408:   check_help(V.flipper);
  5703  012272  0101               	movlb	1	; () banked
  5704  012274  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5705  012276  6EE6               	movwf	postinc1,c
  5706  012278  EC1A  F0C1         	call	_check_help	;wreg free
  5707                           
  5708                           ;main.c: 410:   if (V.enter) {
  5709  01227C  0101               	movlb	1	; () banked
  5710  01227E  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5711  012280  B4D8               	btfsc	status,2,c
  5712  012282  D062               	goto	l1366
  5713                           
  5714                           ; BSR set to: 1
  5715                           ;main.c: 411:    V.enter = 0;
  5716  012284  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5717                           
  5718                           ;main.c: 412:    V.calib = 0;
  5719  012286  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;main.c: 413:    inp_index += 3;
  5723                           ;stkvar	_inp_index @ sp[(-17)+14]
  5724  012288  0EFD               	movlw	-3
  5725  01228A  006F FF8C  F001    	movff	plusw1,btemp
  5726  012290  0E03               	movlw	3
  5727  012292  2601               	addwf	btemp^0,f,c
  5728  012294  0EFD               	movlw	-3
  5729  012296  0060  F007  FFE3   	movff	btemp,plusw1
  5730                           
  5731                           ;main.c: 414:    if (inp_index > 9)
  5732                           ;stkvar	_inp_index @ sp[(-17)+14]
  5733  01229C  0EFD               	movlw	-3
  5734  01229E  006F FF8C  F001    	movff	plusw1,btemp
  5735  0122A4  0E09               	movlw	9
  5736  0122A6  6401               	cpfsgt	btemp^0,c
  5737  0122A8  D03A               	goto	l13280
  5738                           
  5739                           ; BSR set to: 1
  5740                           ;main.c: 415:     inp_index = 0;
  5741                           ;stkvar	_inp_index @ sp[(-17)+14]
  5742  0122AA  0EFD               	movlw	-3
  5743  0122AC  6AE3               	clrf	plusw1,c
  5744  0122AE  D037               	goto	l13280
  5745  0122B0                     l13262:
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;main.c: 418:     i = C_BATT;
  5749                           ;stkvar	_i @ sp[(-17)+13]
  5750  0122B0  0EFC               	movlw	-4
  5751  0122B2  6AE3               	clrf	plusw1,c
  5752                           
  5753                           ; BSR set to: 1
  5754                           ;main.c: 419:     j = C_PV;
  5755                           ;stkvar	_j @ sp[(-17)+12]
  5756  0122B4  0EFB               	movlw	-5
  5757  0122B6  6AE3               	clrf	plusw1,c
  5758  0122B8  2AE3               	incf	plusw1,f,c
  5759                           
  5760                           ; BSR set to: 1
  5761                           ;main.c: 420:     k = V_CC;
  5762                           ;stkvar	_k @ sp[(-17)+11]
  5763  0122BA  0EFA               	movlw	-6
  5764  0122BC  6AE3               	clrf	plusw1,c
  5765  0122BE  82E3               	bsf	plusw1,1,c
  5766                           
  5767                           ;main.c: 421:     break;
  5768  0122C0  D043               	goto	l1366
  5769  0122C2                     l13268:
  5770                           
  5771                           ; BSR set to: 1
  5772                           ;main.c: 423:     i = V_BAT;
  5773                           ;stkvar	_i @ sp[(-17)+13]
  5774  0122C2  0EFC               	movlw	-4
  5775  0122C4  6AE3               	clrf	plusw1,c
  5776  0122C6  84E3               	bsf	plusw1,2,c
  5777                           
  5778                           ;main.c: 424:     j = V_PV;
  5779                           ;stkvar	_j @ sp[(-17)+12]
  5780  0122C8  0EFB               	movlw	-5
  5781  0122CA  6AE3               	clrf	plusw1,c
  5782  0122CC  80E3               	bsf	plusw1,0,c
  5783  0122CE  84E3               	bsf	plusw1,2,c	;indir
  5784                           
  5785                           ;main.c: 425:     k = V_CBUS;
  5786                           ;stkvar	_k @ sp[(-17)+11]
  5787  0122D0  0EFA               	movlw	-6
  5788  0122D2  6AE3               	clrf	plusw1,c
  5789  0122D4  82E3               	bsf	plusw1,1,c
  5790  0122D6  84E3               	bsf	plusw1,2,c	;indir
  5791                           
  5792                           ;main.c: 426:     break;
  5793  0122D8  D037               	goto	l1366
  5794  0122DA                     l13270:
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;main.c: 428:     i = V_BBAT;
  5798                           ;stkvar	_i @ sp[(-17)+13]
  5799  0122DA  0EFC               	movlw	-4
  5800  0122DC  6AE3               	clrf	plusw1,c
  5801  0122DE  82E3               	bsf	plusw1,1,c
  5802  0122E0  86E3               	bsf	plusw1,3,c	;indir
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;main.c: 429:     j = V_TEMP;
  5806  0122E2  0E0B               	movlw	11
  5807  0122E4  6E0C               	movwf	(btemp+11)^0,c
  5808                           
  5809                           ;stkvar	_j @ sp[(-17)+12]
  5810  0122E6  0EFB               	movlw	-5
  5811  0122E8  0060  F033  FFE3   	movff	btemp+11,plusw1
  5812                           
  5813                           ; BSR set to: 1
  5814                           ;main.c: 430:     k = V_INVERTER;
  5815                           ;stkvar	_k @ sp[(-17)+11]
  5816  0122EE  0EFA               	movlw	-6
  5817  0122F0  6AE3               	clrf	plusw1,c
  5818  0122F2  84E3               	bsf	plusw1,2,c
  5819  0122F4  86E3               	bsf	plusw1,3,c	;indir
  5820                           
  5821                           ;main.c: 431:     break;
  5822  0122F6  D028               	goto	l1366
  5823  0122F8                     l13276:
  5824                           
  5825                           ; BSR set to: 1
  5826                           ;main.c: 433:     i = V_LIGHT_SENSOR;
  5827  0122F8  0E0D               	movlw	13
  5828  0122FA  6E0C               	movwf	(btemp+11)^0,c
  5829                           
  5830                           ;stkvar	_i @ sp[(-17)+13]
  5831  0122FC  0EFC               	movlw	-4
  5832  0122FE  0060  F033  FFE3   	movff	btemp+11,plusw1
  5833                           
  5834                           ;main.c: 434:     j = V_LIGHT_SENSOR;
  5835  012304  0E0D               	movlw	13
  5836  012306  6E0C               	movwf	(btemp+11)^0,c
  5837                           
  5838                           ;stkvar	_j @ sp[(-17)+12]
  5839  012308  0EFB               	movlw	-5
  5840  01230A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5841                           
  5842                           ;main.c: 435:     k = V_LIGHT_SENSOR;
  5843  012310  0E0D               	movlw	13
  5844  012312  6E0C               	movwf	(btemp+11)^0,c
  5845                           
  5846                           ;stkvar	_k @ sp[(-17)+11]
  5847  012314  0EFA               	movlw	-6
  5848  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5849                           
  5850                           ;main.c: 436:     break;
  5851  01231C  D015               	goto	l1366
  5852  01231E                     l13280:
  5853                           
  5854                           ; BSR set to: 1
  5855                           ;stkvar	_inp_index @ sp[(-17)+14]
  5856  01231E  0EFD               	movlw	-3
  5857  012320  50E3               	movf	plusw1,w,c
  5858  012322  6E0B               	movwf	(btemp+10)^0,c
  5859  012324  6A0C               	clrf	(btemp+11)^0,c
  5860                           
  5861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5862                           ; Switch size 1, requested type "simple"
  5863                           ; Number of cases is 1, Range of values is 0 to 0
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte            4     3 (average)
  5867                           ;	Chosen strategy is simple_byte
  5868  012326  500C               	movf	(btemp+11)^0,w,c
  5869  012328  0A00               	xorlw	0	; case 0
  5870  01232A  A4D8               	btfss	status,2,c
  5871  01232C  D00D               	goto	l1366
  5872                           
  5873                           ; BSR set to: 1
  5874                           ; Switch size 1, requested type "simple"
  5875                           ; Number of cases is 4, Range of values is 0 to 9
  5876                           ; switch strategies available:
  5877                           ; Name         Instructions Cycles
  5878                           ; simple_byte           13     7 (average)
  5879                           ;	Chosen strategy is simple_byte
  5880  01232E  500B               	movf	(btemp+10)^0,w,c
  5881  012330  0A00               	xorlw	0	; case 0
  5882  012332  B4D8               	btfsc	status,2,c
  5883  012334  D7BD               	goto	l13262
  5884  012336  0A03               	xorlw	3	; case 3
  5885  012338  B4D8               	btfsc	status,2,c
  5886  01233A  D7C3               	goto	l13268
  5887  01233C  0A05               	xorlw	5	; case 6
  5888  01233E  B4D8               	btfsc	status,2,c
  5889  012340  D7CC               	goto	l13270
  5890  012342  0A0F               	xorlw	15	; case 9
  5891  012344  B4D8               	btfsc	status,2,c
  5892  012346  D7D8               	goto	l13276
  5893  012348                     l1366:
  5894                           
  5895                           ; BSR set to: 1
  5896                           ;main.c: 445:   if (V.set_sequ) {
  5897  012348  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5898  01234A  EF84  F08C         	goto	l13162
  5899                           
  5900                           ; BSR set to: 1
  5901                           ;main.c: 446:    if (TimerDone(TMR_INFO)) {
  5902  01234E  0E07               	movlw	7
  5903  012350  6EE6               	movwf	postinc1,c
  5904  012352  ECA7  F0DD         	call	_TimerDone	;wreg free
  5905  012356  5001               	movf	btemp^0,w,c
  5906  012358  B4D8               	btfsc	status,2,c
  5907  01235A  D00C               	goto	l13290
  5908                           
  5909                           ;main.c: 447:     V.set_sequ = 0;
  5910  01235C  0101               	movlb	1	; () banked
  5911  01235E  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;main.c: 448:     set_vterm(0);
  5915  012360  0E00               	movlw	0
  5916  012362  6EE6               	movwf	postinc1,c
  5917  012364  EC9E  F0DF         	call	_set_vterm	;wreg free
  5918                           
  5919                           ;main.c: 449:     update_lcd(0);
  5920  012368  0E00               	movlw	0
  5921  01236A  6EE6               	movwf	postinc1,c
  5922  01236C  ECF1  F0CD         	call	_update_lcd	;wreg free
  5923                           
  5924                           ;main.c: 450:    } else {
  5925  012370  EF84  F08C         	goto	l13162
  5926  012374                     l13290:
  5927                           
  5928                           ;main.c: 451:     set_vterm(2);
  5929  012374  0E02               	movlw	2
  5930  012376  6EE6               	movwf	postinc1,c
  5931  012378  EC9E  F0DF         	call	_set_vterm	;wreg free
  5932                           
  5933                           ;main.c: 452:     update_lcd(2);
  5934  01237C  0E02               	movlw	2
  5935  01237E  6EE6               	movwf	postinc1,c
  5936  012380  ECF1  F0CD         	call	_update_lcd	;wreg free
  5937  012384  EF84  F08C         	goto	l13162
  5938  012388                     __end_of_main:
  5939                           	opt callstack 0
  5940                           
  5941 ;; *************** function _static_soc *****************
  5942 ;; Defined at:
  5943 ;;		line 117 in file "mbmc.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1  [STACK] void 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/1
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:   15
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_main
  5968 ;; This function uses a reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text1
  5972  01B1BC                     __ptext1:
  5973                           	opt callstack 0
  5974  01B1BC                     _static_soc:
  5975                           	opt callstack 15
  5976                           
  5977                           ;mbmc.c: 119:  C.runtime = 120;
  5978                           
  5979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5980                           ;incstack = 0
  5981  01B1BC  0E78               	movlw	120
  5982  01B1BE  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  5983  01B1C4  0E00               	movlw	0
  5984  01B1C6  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  5985                           
  5986                           ;mbmc.c: 120:  C.soc = 100;
  5987  01B1CC  0E64               	movlw	100
  5988  01B1CE  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  5989  01B1D4  0E00               	movlw	0
  5990  01B1D6  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  5991                           
  5992                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5993  01B1DC  EE21  F38B         	lfsr	2,_C+140	;volatile
  5994  01B1E0  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5995  01B1E6  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5996  01B1EC  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5997  01B1F2  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5998                           
  5999                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6000  01B1F8  EE21  F38F         	lfsr	2,_C+144	;volatile
  6001  01B1FC  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6002  01B202  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6003  01B208  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6004  01B20E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6005                           
  6006                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6007  01B214  0012               	return		;funcret
  6008  01B216                     __end_of_static_soc:
  6009                           	opt callstack 0
  6010                           
  6011 ;; *************** function _start_switch_handler *****************
  6012 ;; Defined at:
  6013 ;;		line 124 in file "dio.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;		None
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1  [STACK] void 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 3F/39
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6031 ;;Total ram usage:        0 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:   16
  6034 ;; This function calls:
  6035 ;;		_INT1_SetInterruptHandler
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text2
  6042  01BEC0                     __ptext2:
  6043                           	opt callstack 0
  6044  01BEC0                     _start_switch_handler:
  6045                           	opt callstack 14
  6046                           
  6047                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  6048                           
  6049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6050                           ;incstack = 0
  6051  01BEC0  0139               	movlb	57	; () banked
  6052  01BEC2  9195               	bcf	149,0,b	;volatile
  6053                           
  6054                           ; BSR set to: 57
  6055                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6056  01BEC4  0EC8               	movlw	low _switch_handler
  6057  01BEC6  6EE6               	movwf	postinc1,c
  6058  01BEC8  0E93               	movlw	high _switch_handler
  6059  01BECA  6EE6               	movwf	postinc1,c
  6060  01BECC  0E01               	movlw	low (_switch_handler shr (0+16))
  6061  01BECE  6EE6               	movwf	postinc1,c
  6062  01BED0  EC33  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
  6063                           
  6064                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6065  01BED4  0E02               	movlw	2
  6066  01BED6  0102               	movlb	2	; () banked
  6067  01BED8  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6068                           
  6069                           ; BSR set to: 2
  6070                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6071  01BEDA  0139               	movlb	57	; () banked
  6072  01BEDC  8195               	bsf	149,0,b	;volatile
  6073                           
  6074                           ; BSR set to: 57
  6075                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6076  01BEDE  0012               	return		;funcret
  6077  01BEE0                     __end_of_start_switch_handler:
  6078                           	opt callstack 0
  6079                           
  6080 ;; *************** function _srand *****************
  6081 ;; Defined at:
  6082 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  s               2  [STACK] unsigned int 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1  [STACK] void 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 3F/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:   15
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_main
  6107 ;; This function uses a reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text3
  6111  01B922                     __ptext3:
  6112                           	opt callstack 0
  6113  01B922                     _srand:
  6114                           	opt callstack 15
  6115                           
  6116                           ;stkvar	_s @ sp[(0)+-2]
  6117                           
  6118                           ; BSR set to: 57
  6119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6120                           ;incstack = 0
  6121  01B922  0EFE               	movlw	-2
  6122  01B924  50E3               	movf	plusw1,w,c
  6123  01B926  0FFF               	addlw	255
  6124  01B928  6E0B               	movwf	(btemp+10)^0,c
  6125  01B92A  0EFF               	movlw	-1
  6126  01B92C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6127  01B932  0EFF               	movlw	255
  6128  01B934  220C               	addwfc	(btemp+11)^0,f,c
  6129  01B936  0060  F02C  F0CF   	movff	btemp+10,_seed
  6130  01B93C  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6131  01B942  0100               	movlb	0	; () banked
  6132  01B944  6BD1               	clrf	(_seed+2)& (0+255),b
  6133  01B946  6BD2               	clrf	(_seed+3)& (0+255),b
  6134  01B948  6BD3               	clrf	(_seed+4)& (0+255),b
  6135  01B94A  6BD4               	clrf	(_seed+5)& (0+255),b
  6136  01B94C  6BD5               	clrf	(_seed+6)& (0+255),b
  6137  01B94E  6BD6               	clrf	(_seed+7)& (0+255),b
  6138                           
  6139                           ; BSR set to: 0
  6140                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6141  01B950  52E5               	movf	postdec1,f,c
  6142  01B952  52E5               	movf	postdec1,f,c
  6143  01B954  0012               	return		;funcret
  6144  01B956                     __end_of_srand:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function _spinners *****************
  6148 ;; Defined at:
  6149 ;;		line 146 in file "mbmc.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  shape           1  [STACK] unsigned char 
  6152 ;;  reset           1  [STACK] unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  c               1  [STACK] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1  [STACK] unsigned char 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:   16
  6171 ;; This function calls:
  6172 ;;		_strlen
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text4
  6179  01A0D8                     __ptext4:
  6180                           	opt callstack 0
  6181  01A0D8                     _spinners:
  6182                           	opt callstack 0
  6183                           
  6184                           ; BSR set to: 0
  6185                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6186  01A0D8  52E6               	movf	postinc1,f,c
  6187                           
  6188                           ;mbmc.c: 146: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 147: {;mbmc.c: 148:  s
      +                          tatic uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6189                           ;stkvar	_shape @ sp[(-1)+-1]
  6190                           
  6191                           ;incstack = 0
  6192  01A0DA  0EFE               	movlw	-2
  6193  01A0DC  006F FF8C  F001    	movff	plusw1,btemp
  6194  01A0E2  0E05               	movlw	5
  6195  01A0E4  6401               	cpfsgt	btemp^0,c
  6196  01A0E6  D002               	goto	l1879
  6197                           
  6198                           ;mbmc.c: 152:   shape = 0;
  6199                           ;stkvar	_shape @ sp[(-1)+-1]
  6200  01A0E8  0EFE               	movlw	-2
  6201  01A0EA  6AE3               	clrf	plusw1,c
  6202  01A0EC                     l1879:
  6203                           
  6204                           ;mbmc.c: 153:  if (reset)
  6205                           ;stkvar	_reset @ sp[(-1)+-2]
  6206  01A0EC  0EFD               	movlw	-3
  6207  01A0EE  50E3               	movf	plusw1,w,c
  6208  01A0F0  B4D8               	btfsc	status,2,c
  6209  01A0F2  D00A               	goto	l10886
  6210                           
  6211                           ;mbmc.c: 154:   s[shape] = 0;
  6212                           ;stkvar	_shape @ sp[(-1)+-1]
  6213  01A0F4  0EFE               	movlw	-2
  6214  01A0F6  006F FF8C  F00C    	movff	plusw1,btemp+11
  6215  01A0FC  500C               	movf	(btemp+11)^0,w,c
  6216  01A0FE  0F74               	addlw	low spinners@s
  6217  01A100  6ED9               	movwf	fsr2l,c
  6218  01A102  6ADA               	clrf	fsr2h,c
  6219  01A104  0E00               	movlw	0
  6220  01A106  6EDF               	movwf	indf2,c
  6221  01A108                     l10886:
  6222                           
  6223                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6224                           ;stkvar	_shape @ sp[(-1)+-1]
  6225  01A108  0EFE               	movlw	-2
  6226  01A10A  50E3               	movf	plusw1,w,c
  6227  01A10C  0D14               	mullw	20
  6228  01A10E  0E95               	movlw	low _spin
  6229  01A110  6E0B               	movwf	(btemp+10)^0,c
  6230  01A112  0EFB               	movlw	high _spin
  6231  01A114  6E0C               	movwf	(btemp+11)^0,c
  6232  01A116  50F3               	movf	243,w,c
  6233  01A118  260B               	addwf	(btemp+10)^0,f,c
  6234  01A11A  50F4               	movf	244,w,c
  6235  01A11C  220C               	addwfc	(btemp+11)^0,f,c
  6236                           
  6237                           ;stkvar	_shape @ sp[(-1)+-1]
  6238  01A11E  0EFE               	movlw	-2
  6239  01A120  006F FF8C  F00A    	movff	plusw1,btemp+9
  6240  01A126  500A               	movf	(btemp+9)^0,w,c
  6241  01A128  0F74               	addlw	low spinners@s
  6242  01A12A  6ED9               	movwf	fsr2l,c
  6243  01A12C  6ADA               	clrf	fsr2h,c
  6244  01A12E  50DF               	movf	indf2,w,c
  6245  01A130  260B               	addwf	(btemp+10)^0,f,c
  6246  01A132  0E00               	movlw	0
  6247  01A134  220C               	addwfc	(btemp+11)^0,f,c
  6248  01A136  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6249  01A13C  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6250  01A142                     	if	0	;tblptru may be non-zero
  6251  01A142                     	endif
  6252  01A142                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6253  01A142  0E00               	movlw	low (__mediumconst shr (0+16))
  6254  01A144  6EF8               	movwf	tblptru,c
  6255  01A146                     	endif
  6256                           
  6257                           ;stkvar	_c @ sp[(-1)+0]
  6258  01A146  0008               	tblrd		*
  6259  01A148  0EFF               	movlw	-1
  6260  01A14A  006F FFD7 FFE3     	movff	tablat,plusw1
  6261                           
  6262                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6263                           ;stkvar	_shape @ sp[(-1)+-1]
  6264  01A150  0EFE               	movlw	-2
  6265  01A152  50E3               	movf	plusw1,w,c
  6266  01A154  0D14               	mullw	20
  6267  01A156  0E95               	movlw	low _spin
  6268  01A158  6E0B               	movwf	(btemp+10)^0,c
  6269  01A15A  0EFB               	movlw	high _spin
  6270  01A15C  6E0C               	movwf	(btemp+11)^0,c
  6271  01A15E  50F3               	movf	243,w,c
  6272  01A160  260B               	addwf	(btemp+10)^0,f,c
  6273  01A162  50F4               	movf	244,w,c
  6274  01A164  220C               	addwfc	(btemp+11)^0,f,c
  6275  01A166  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6276  01A16C  0060  F033  FFE6   	movff	btemp+11,postinc1
  6277  01A172  EC8C  F0D4         	call	_strlen	;wreg free
  6278                           
  6279                           ;stkvar	_shape @ sp[(-1)+-1]
  6280  01A176  0EFE               	movlw	-2
  6281  01A178  006F FF8C  F00C    	movff	plusw1,btemp+11
  6282  01A17E  500C               	movf	(btemp+11)^0,w,c
  6283  01A180  0F74               	addlw	low spinners@s
  6284  01A182  6ED9               	movwf	fsr2l,c
  6285  01A184  6ADA               	clrf	fsr2h,c
  6286  01A186  2ADF               	incf	indf2,f,c
  6287  01A188  50DF               	movf	indf2,w,c
  6288  01A18A  6E0B               	movwf	(btemp+10)^0,c
  6289  01A18C  6A0C               	clrf	(btemp+11)^0,c
  6290  01A18E  5001               	movf	btemp^0,w,c
  6291  01A190  5C0B               	subwf	(btemp+10)^0,w,c
  6292  01A192  5002               	movf	(btemp+1)^0,w,c
  6293  01A194  580C               	subwfb	(btemp+11)^0,w,c
  6294  01A196  A0D8               	btfss	status,0,c
  6295  01A198  D00A               	goto	l10892
  6296                           
  6297                           ;mbmc.c: 157:   s[shape] = 0;
  6298                           ;stkvar	_shape @ sp[(-1)+-1]
  6299  01A19A  0EFE               	movlw	-2
  6300  01A19C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6301  01A1A2  500C               	movf	(btemp+11)^0,w,c
  6302  01A1A4  0F74               	addlw	low spinners@s
  6303  01A1A6  6ED9               	movwf	fsr2l,c
  6304  01A1A8  6ADA               	clrf	fsr2h,c
  6305  01A1AA  0E00               	movlw	0
  6306  01A1AC  6EDF               	movwf	indf2,c
  6307  01A1AE                     l10892:
  6308                           
  6309                           ;mbmc.c: 158:  return c;
  6310                           ;stkvar	_c @ sp[(-1)+0]
  6311  01A1AE  0EFF               	movlw	-1
  6312  01A1B0  006F FF8C  F001    	movff	plusw1,btemp
  6313                           
  6314                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6315  01A1B6  52E5               	movf	postdec1,f,c
  6316  01A1B8  52E5               	movf	postdec1,f,c
  6317  01A1BA  52E5               	movf	postdec1,f,c
  6318  01A1BC  0012               	return		;funcret
  6319  01A1BE                     __end_of_spinners:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _init_port_dma *****************
  6323 ;; Defined at:
  6324 ;;		line 104 in file "eadog.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1  [STACK] void 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/1
  6335 ;;		On exit  : 3F/3B
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:   15
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_main
  6349 ;; This function uses a reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text5
  6353  01B98A                     __ptext5:
  6354                           	opt callstack 0
  6355  01B98A                     _init_port_dma:
  6356                           	opt callstack 15
  6357                           
  6358                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  6359                           
  6360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361                           ;incstack = 0
  6362  01B98A  0E3F               	movlw	-193
  6363  01B98C  013B               	movlb	59	; () banked
  6364  01B98E  17DD               	andwf	221,f,b	;volatile
  6365                           
  6366                           ; BSR set to: 59
  6367                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  6368  01B990  9BDD               	bcf	221,5,b	;volatile
  6369                           
  6370                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  6371  01B992  51DD               	movf	221,w,b	;volatile
  6372  01B994  0BF9               	andlw	-7
  6373  01B996  0902               	iorlw	2
  6374  01B998  6FDD               	movwf	221,b	;volatile
  6375                           
  6376                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  6377  01B99A  0EE7               	movlw	-25
  6378  01B99C  17DD               	andwf	221,f,b	;volatile
  6379                           
  6380                           ; BSR set to: 59
  6381                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  6382  01B99E  81DD               	bsf	221,0,b	;volatile
  6383                           
  6384                           ; BSR set to: 59
  6385                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  6386  01B9A0  9DDC               	bcf	220,6,b	;volatile
  6387                           
  6388                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  6389  01B9A2  0E3D               	movlw	61
  6390  01B9A4  6FD1               	movwf	209,b	;volatile
  6391  01B9A6  0EEA               	movlw	234
  6392  01B9A8  6FD0               	movwf	208,b	;volatile
  6393                           
  6394                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  6395  01B9AA  0EFF               	movlw	low _port_data
  6396  01B9AC  6FD9               	movwf	217,b	;volatile
  6397  01B9AE  0E04               	movlw	high _port_data
  6398  01B9B0  6FDA               	movwf	218,b	;volatile
  6399  01B9B2  0E00               	movlw	low (_port_data shr (0+16))
  6400  01B9B4  6FDB               	movwf	219,b	;volatile
  6401                           
  6402                           ; BSR set to: 59
  6403                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  6404  01B9B6  9BDC               	bcf	220,5,b	;volatile
  6405                           
  6406                           ; BSR set to: 59
  6407                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6408  01B9B8  0012               	return		;funcret
  6409  01B9BA                     __end_of_init_port_dma:
  6410                           	opt callstack 0
  6411                           
  6412 ;; *************** function _init_display *****************
  6413 ;; Defined at:
  6414 ;;		line 38 in file "eadog.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1  [STACK] void 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6423 ;; Tracked objects:
  6424 ;;		On entry : 3F/3B
  6425 ;;		On exit  : 3F/3D
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   17
  6435 ;; This function calls:
  6436 ;;		_ringBufS_init
  6437 ;;		_send_lcd_cmd
  6438 ;;		_send_lcd_cmd_long
  6439 ;;		_send_lcd_data
  6440 ;;		_wdtdelay
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text6
  6447  019FEE                     __ptext6:
  6448                           	opt callstack 0
  6449  019FEE                     _init_display:
  6450                           	opt callstack 13
  6451                           
  6452                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6453                           
  6454                           ; BSR set to: 59
  6455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6456                           ;incstack = 0
  6457  019FEE  0E83               	movlw	low _ring_buf1
  6458  019FF0  0100               	movlb	0	; () banked
  6459  019FF2  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6460  019FF4  0E03               	movlw	high _ring_buf1
  6461  019FF6  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6462                           
  6463                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6464  019FF8  0E40               	movlw	low _ring_buf2
  6465  019FFA  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6466  019FFC  0E03               	movlw	high _ring_buf2
  6467  019FFE  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6471  01A000  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6472  01A006  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6473  01A00C  EC93  F0DD         	call	_ringBufS_init	;wreg free
  6474                           
  6475                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6476  01A010  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6477  01A016  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6478  01A01C  EC93  F0DD         	call	_ringBufS_init	;wreg free
  6479                           
  6480                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6481  01A020  84BE               	bsf	190,2,c	;volatile
  6482                           
  6483                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  6484  01A022  013D               	movlb	61	; () banked
  6485  01A024  9F14               	bcf	20,7,b	;volatile
  6486                           
  6487                           ; BSR set to: 61
  6488                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  6489  01A026  0E20               	movlw	32
  6490  01A028  6F15               	movwf	21,b	;volatile
  6491                           
  6492                           ; BSR set to: 61
  6493                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  6494  01A02A  0E03               	movlw	3
  6495  01A02C  6F16               	movwf	22,b	;volatile
  6496                           
  6497                           ; BSR set to: 61
  6498                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  6499  01A02E  0E04               	movlw	4
  6500  01A030  6F19               	movwf	25,b	;volatile
  6501                           
  6502                           ; BSR set to: 61
  6503                           ;eadog.c: 55:  SPI1CLK = 0x02;
  6504  01A032  0E02               	movlw	2
  6505  01A034  6F1C               	movwf	28,b	;volatile
  6506                           
  6507                           ; BSR set to: 61
  6508                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  6509  01A036  0E83               	movlw	131
  6510  01A038  6F14               	movwf	20,b	;volatile
  6511                           
  6512                           ; BSR set to: 61
  6513                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  6514  01A03A  8F14               	bsf	20,7,b	;volatile
  6515                           
  6516                           ; BSR set to: 61
  6517                           ;eadog.c: 60:  wdtdelay(350000);
  6518  01A03C  0E30               	movlw	48
  6519  01A03E  6EE6               	movwf	postinc1,c
  6520  01A040  0E57               	movlw	87
  6521  01A042  6EE6               	movwf	postinc1,c
  6522  01A044  0E05               	movlw	5
  6523  01A046  6EE6               	movwf	postinc1,c
  6524  01A048  0E00               	movlw	0
  6525  01A04A  6EE6               	movwf	postinc1,c
  6526  01A04C  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  6530  01A050  0E46               	movlw	70
  6531  01A052  6EE6               	movwf	postinc1,c
  6532  01A054  EC41  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  6536  01A058  0E41               	movlw	65
  6537  01A05A  6EE6               	movwf	postinc1,c
  6538  01A05C  EC61  F0DB         	call	_send_lcd_cmd	;wreg free
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;eadog.c: 63:  wdtdelay(80);
  6542  01A060  0E50               	movlw	80
  6543  01A062  6EE6               	movwf	postinc1,c
  6544  01A064  0E00               	movlw	0
  6545  01A066  6EE6               	movwf	postinc1,c
  6546  01A068  0E00               	movlw	0
  6547  01A06A  6EE6               	movwf	postinc1,c
  6548  01A06C  0E00               	movlw	0
  6549  01A06E  6EE6               	movwf	postinc1,c
  6550  01A070  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  6554  01A074  0E53               	movlw	83
  6555  01A076  6EE6               	movwf	postinc1,c
  6556  01A078  EC61  F0DB         	call	_send_lcd_cmd	;wreg free
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;eadog.c: 65:  send_lcd_data(2);
  6560  01A07C  0E02               	movlw	2
  6561  01A07E  6EE6               	movwf	postinc1,c
  6562  01A080  ECC0  F0DE         	call	_send_lcd_data	;wreg free
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;eadog.c: 66:  wdtdelay(80);
  6566  01A084  0E50               	movlw	80
  6567  01A086  6EE6               	movwf	postinc1,c
  6568  01A088  0E00               	movlw	0
  6569  01A08A  6EE6               	movwf	postinc1,c
  6570  01A08C  0E00               	movlw	0
  6571  01A08E  6EE6               	movwf	postinc1,c
  6572  01A090  0E00               	movlw	0
  6573  01A092  6EE6               	movwf	postinc1,c
  6574  01A094  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  6578  01A098  0E51               	movlw	81
  6579  01A09A  6EE6               	movwf	postinc1,c
  6580  01A09C  EC41  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  6584  01A0A0  013D               	movlb	61	; () banked
  6585  01A0A2  9F14               	bcf	20,7,b	;volatile
  6586                           
  6587                           ; BSR set to: 61
  6588                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  6589  01A0A4  0E02               	movlw	2
  6590  01A0A6  6F16               	movwf	22,b	;volatile
  6591                           
  6592                           ; BSR set to: 61
  6593                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  6594  01A0A8  8F14               	bsf	20,7,b	;volatile
  6595                           
  6596                           ; BSR set to: 61
  6597                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  6598  01A0AA  931A               	bcf	26,1,b	;volatile
  6599                           
  6600                           ; BSR set to: 61
  6601                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  6602  01A0AC  0E3F               	movlw	-193
  6603  01A0AE  013B               	movlb	59	; () banked
  6604  01A0B0  17FD               	andwf	253,f,b	;volatile
  6605                           
  6606                           ; BSR set to: 59
  6607                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  6608  01A0B2  9BFD               	bcf	253,5,b	;volatile
  6609                           
  6610                           ; BSR set to: 59
  6611                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  6612  01A0B4  51FD               	movf	253,w,b	;volatile
  6613  01A0B6  0BF9               	andlw	-7
  6614  01A0B8  0902               	iorlw	2
  6615  01A0BA  6FFD               	movwf	253,b	;volatile
  6616                           
  6617                           ; BSR set to: 59
  6618                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  6619  01A0BC  0EE7               	movlw	-25
  6620  01A0BE  17FD               	andwf	253,f,b	;volatile
  6621                           
  6622                           ; BSR set to: 59
  6623                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  6624  01A0C0  81FD               	bsf	253,0,b	;volatile
  6625                           
  6626                           ; BSR set to: 59
  6627                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  6628  01A0C2  0E83               	movlw	low _ring_buf1
  6629  01A0C4  6FF9               	movwf	249,b	;volatile
  6630  01A0C6  0E03               	movlw	high _ring_buf1
  6631  01A0C8  6FFA               	movwf	250,b	;volatile
  6632  01A0CA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6633  01A0CC  6FFB               	movwf	251,b	;volatile
  6634                           
  6635                           ; BSR set to: 59
  6636                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  6637  01A0CE  9BFC               	bcf	252,5,b	;volatile
  6638                           
  6639                           ; BSR set to: 59
  6640                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  6641  01A0D0  013D               	movlb	61	; () banked
  6642  01A0D2  831A               	bsf	26,1,b	;volatile
  6643                           
  6644                           ; BSR set to: 61
  6645                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  6646  01A0D4  94BE               	bcf	190,2,c	;volatile
  6647                           
  6648                           ; BSR set to: 61
  6649                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6650  01A0D6  0012               	return		;funcret
  6651  01A0D8                     __end_of_init_display:
  6652                           	opt callstack 0
  6653                           
  6654 ;; *************** function _send_lcd_data *****************
  6655 ;; Defined at:
  6656 ;;		line 123 in file "eadog.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  data            1  [STACK] const unsigned char 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1  [STACK] void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6665 ;; Tracked objects:
  6666 ;;		On entry : 3F/0
  6667 ;;		On exit  : 3F/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:   16
  6677 ;; This function calls:
  6678 ;;		_SPI1_Exchange8bit
  6679 ;;		_wdtdelay
  6680 ;; This function is called by:
  6681 ;;		_init_display
  6682 ;; This function uses a reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text7
  6686  01BD80                     __ptext7:
  6687                           	opt callstack 0
  6688  01BD80                     _send_lcd_data:
  6689                           	opt callstack 13
  6690                           
  6691                           ; BSR set to: 61
  6692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6693                           ;incstack = 0
  6694                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  6695  01BD80  94BC               	bcf	188,2,c	;volatile
  6696                           
  6697                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  6698                           ;stkvar	_data @ sp[(0)+-1]
  6699  01BD82  0EFF               	movlw	-1
  6700  01BD84  50E3               	movf	plusw1,w,c
  6701  01BD86  6EE6               	movwf	postinc1,c
  6702  01BD88  EC80  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6703                           
  6704                           ; BSR set to: 57
  6705                           ;eadog.c: 127:  wdtdelay(8);
  6706  01BD8C  0E08               	movlw	8
  6707  01BD8E  6EE6               	movwf	postinc1,c
  6708  01BD90  0E00               	movlw	0
  6709  01BD92  6EE6               	movwf	postinc1,c
  6710  01BD94  0E00               	movlw	0
  6711  01BD96  6EE6               	movwf	postinc1,c
  6712  01BD98  0E00               	movlw	0
  6713  01BD9A  6EE6               	movwf	postinc1,c
  6714  01BD9C  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6715                           
  6716                           ; BSR set to: 0
  6717                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  6718  01BDA0  52E5               	movf	postdec1,f,c
  6719  01BDA2  0012               	return		;funcret
  6720  01BDA4                     __end_of_send_lcd_data:
  6721                           	opt callstack 0
  6722                           
  6723 ;; *************** function _send_lcd_cmd_long *****************
  6724 ;; Defined at:
  6725 ;;		line 139 in file "eadog.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  cmd             1  [STACK] const unsigned char 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1  [STACK] void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6734 ;; Tracked objects:
  6735 ;;		On entry : 3F/0
  6736 ;;		On exit  : 3F/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:   16
  6746 ;; This function calls:
  6747 ;;		_SPI1_Exchange8bit
  6748 ;;		_wdtdelay
  6749 ;; This function is called by:
  6750 ;;		_init_display
  6751 ;; This function uses a reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text8
  6755  01B682                     __ptext8:
  6756                           	opt callstack 0
  6757  01B682                     _send_lcd_cmd_long:
  6758                           	opt callstack 13
  6759                           
  6760                           ; BSR set to: 0
  6761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6762                           ;incstack = 0
  6763                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  6764  01B682  94BC               	bcf	188,2,c	;volatile
  6765                           
  6766                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  6767  01B684  0EFE               	movlw	254
  6768  01B686  6EE6               	movwf	postinc1,c
  6769  01B688  EC80  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6770                           
  6771                           ; BSR set to: 57
  6772                           ;eadog.c: 143:  wdtdelay(8);
  6773  01B68C  0E08               	movlw	8
  6774  01B68E  6EE6               	movwf	postinc1,c
  6775  01B690  0E00               	movlw	0
  6776  01B692  6EE6               	movwf	postinc1,c
  6777  01B694  0E00               	movlw	0
  6778  01B696  6EE6               	movwf	postinc1,c
  6779  01B698  0E00               	movlw	0
  6780  01B69A  6EE6               	movwf	postinc1,c
  6781  01B69C  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  6785                           ;stkvar	_cmd @ sp[(0)+-1]
  6786  01B6A0  0EFF               	movlw	-1
  6787  01B6A2  50E3               	movf	plusw1,w,c
  6788  01B6A4  6EE6               	movwf	postinc1,c
  6789  01B6A6  EC80  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6790                           
  6791                           ;eadog.c: 145:  wdtdelay(800);
  6792  01B6AA  0E20               	movlw	32
  6793  01B6AC  6EE6               	movwf	postinc1,c
  6794  01B6AE  0E03               	movlw	3
  6795  01B6B0  6EE6               	movwf	postinc1,c
  6796  01B6B2  0E00               	movlw	0
  6797  01B6B4  6EE6               	movwf	postinc1,c
  6798  01B6B6  0E00               	movlw	0
  6799  01B6B8  6EE6               	movwf	postinc1,c
  6800  01B6BA  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6801                           
  6802                           ; BSR set to: 0
  6803                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6804  01B6BE  52E5               	movf	postdec1,f,c
  6805  01B6C0  0012               	return		;funcret
  6806  01B6C2                     __end_of_send_lcd_cmd_long:
  6807                           	opt callstack 0
  6808                           
  6809 ;; *************** function _send_lcd_cmd *****************
  6810 ;; Defined at:
  6811 ;;		line 130 in file "eadog.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  cmd             1  [STACK] const unsigned char 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1  [STACK] void 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6820 ;; Tracked objects:
  6821 ;;		On entry : 3F/0
  6822 ;;		On exit  : 3F/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6829 ;;Total ram usage:        0 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:   16
  6832 ;; This function calls:
  6833 ;;		_SPI1_Exchange8bit
  6834 ;;		_wdtdelay
  6835 ;; This function is called by:
  6836 ;;		_init_display
  6837 ;; This function uses a reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text9
  6841  01B6C2                     __ptext9:
  6842                           	opt callstack 0
  6843  01B6C2                     _send_lcd_cmd:
  6844                           	opt callstack 13
  6845                           
  6846                           ; BSR set to: 0
  6847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6848                           ;incstack = 0
  6849                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  6850  01B6C2  94BC               	bcf	188,2,c	;volatile
  6851                           
  6852                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  6853  01B6C4  0EFE               	movlw	254
  6854  01B6C6  6EE6               	movwf	postinc1,c
  6855  01B6C8  EC80  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6856                           
  6857                           ; BSR set to: 57
  6858                           ;eadog.c: 134:  wdtdelay(8);
  6859  01B6CC  0E08               	movlw	8
  6860  01B6CE  6EE6               	movwf	postinc1,c
  6861  01B6D0  0E00               	movlw	0
  6862  01B6D2  6EE6               	movwf	postinc1,c
  6863  01B6D4  0E00               	movlw	0
  6864  01B6D6  6EE6               	movwf	postinc1,c
  6865  01B6D8  0E00               	movlw	0
  6866  01B6DA  6EE6               	movwf	postinc1,c
  6867  01B6DC  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  6871                           ;stkvar	_cmd @ sp[(0)+-1]
  6872  01B6E0  0EFF               	movlw	-1
  6873  01B6E2  50E3               	movf	plusw1,w,c
  6874  01B6E4  6EE6               	movwf	postinc1,c
  6875  01B6E6  EC80  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6876                           
  6877                           ;eadog.c: 136:  wdtdelay(8);
  6878  01B6EA  0E08               	movlw	8
  6879  01B6EC  6EE6               	movwf	postinc1,c
  6880  01B6EE  0E00               	movlw	0
  6881  01B6F0  6EE6               	movwf	postinc1,c
  6882  01B6F2  0E00               	movlw	0
  6883  01B6F4  6EE6               	movwf	postinc1,c
  6884  01B6F6  0E00               	movlw	0
  6885  01B6F8  6EE6               	movwf	postinc1,c
  6886  01B6FA  EC0B  F0D9         	call	_wdtdelay	;wreg free
  6887                           
  6888                           ; BSR set to: 0
  6889                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6890  01B6FE  52E5               	movf	postdec1,f,c
  6891  01B700  0012               	return		;funcret
  6892  01B702                     __end_of_send_lcd_cmd:
  6893                           	opt callstack 0
  6894                           
  6895 ;; *************** function _SPI1_Exchange8bit *****************
  6896 ;; Defined at:
  6897 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  data            1  [STACK] unsigned char 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1  [STACK] unsigned char 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 3F/39
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:   15
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_send_lcd_data
  6922 ;;		_send_lcd_cmd
  6923 ;;		_send_lcd_cmd_long
  6924 ;; This function uses a reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text10
  6928  01BF00                     __ptext10:
  6929                           	opt callstack 0
  6930  01BF00                     _SPI1_Exchange8bit:
  6931                           	opt callstack 13
  6932                           
  6933                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6934                           
  6935                           ; BSR set to: 0
  6936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6937                           ;incstack = 0
  6938  01BF00  0E01               	movlw	1
  6939  01BF02  013D               	movlb	61	; () banked
  6940  01BF04  6F12               	movwf	18,b	;volatile
  6941                           
  6942                           ; BSR set to: 61
  6943                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6944                           ;stkvar	_data @ sp[(0)+-1]
  6945  01BF06  0EFF               	movlw	-1
  6946  01BF08  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6947  01BF0E                     l807:
  6948                           
  6949                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6950  01BF0E  0139               	movlb	57	; () banked
  6951  01BF10  A9A2               	btfss	162,4,b	;volatile
  6952  01BF12  D7FD               	goto	l807
  6953                           
  6954                           ; BSR set to: 57
  6955                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6956  01BF14  006F F440  F001    	movff	15632,btemp	;volatile
  6957                           
  6958                           ; BSR set to: 57
  6959                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6960  01BF1A  52E5               	movf	postdec1,f,c
  6961  01BF1C  0012               	return		;funcret
  6962  01BF1E                     __end_of_SPI1_Exchange8bit:
  6963                           	opt callstack 0
  6964                           
  6965 ;; *************** function _ringBufS_init *****************
  6966 ;; Defined at:
  6967 ;;		line 22 in file "ringbufs.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  _this           2  [STACK] PTR volatile struct ring
  6970 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1  [STACK] void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:   16
  6989 ;; This function calls:
  6990 ;;		_memset
  6991 ;; This function is called by:
  6992 ;;		_init_display
  6993 ;; This function uses a reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text11
  6997  01BB26                     __ptext11:
  6998                           	opt callstack 0
  6999  01BB26                     _ringBufS_init:
  7000                           	opt callstack 13
  7001                           
  7002                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7003                           
  7004                           ; BSR set to: 57
  7005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7006                           ;incstack = 0
  7007  01BB26  0E43               	movlw	67
  7008  01BB28  6EE6               	movwf	postinc1,c
  7009  01BB2A  0E00               	movlw	0
  7010  01BB2C  6EE6               	movwf	postinc1,c
  7011  01BB2E  0E00               	movlw	0
  7012  01BB30  6EE6               	movwf	postinc1,c
  7013  01BB32  0E00               	movlw	0
  7014  01BB34  6EE6               	movwf	postinc1,c
  7015                           
  7016                           ;stkvar	__this @ sp[(-4)+-2]
  7017  01BB36  0EFA               	movlw	-6
  7018  01BB38  006F FF8F FFE6     	movff	plusw1,postinc1
  7019  01BB3E  006F FF8F FFE6     	movff	plusw1,postinc1
  7020  01BB44  EC10  F0B7         	call	_memset	;wreg free
  7021                           
  7022                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7023  01BB48  52E5               	movf	postdec1,f,c
  7024  01BB4A  52E5               	movf	postdec1,f,c
  7025  01BB4C  0012               	return		;funcret
  7026  01BB4E                     __end_of_ringBufS_init:
  7027                           	opt callstack 0
  7028                           
  7029 ;; *************** function _init_bsoc *****************
  7030 ;; Defined at:
  7031 ;;		line 107 in file "bsoc.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1  [STACK] void 
  7038 ;; Registers used:
  7039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/1
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7049 ;;Total ram usage:        0 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:   18
  7052 ;; This function calls:
  7053 ;;		_TMR3_SetInterruptHandler
  7054 ;;		_Volts_to_SOC
  7055 ;;		___fldiv
  7056 ;;		___flmul
  7057 ;;		___fltol
  7058 ;;		___xxtofl
  7059 ;;		_conv_raw_result
  7060 ;; This function is called by:
  7061 ;;		_main
  7062 ;; This function uses a reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text12
  7066  017B8E                     __ptext12:
  7067                           	opt callstack 0
  7068  017B8E                     _init_bsoc:
  7069                           	opt callstack 12
  7070                           
  7071                           ;bsoc.c: 112:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7072                           
  7073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7074                           ;incstack = 0
  7075  017B8E  0E00               	movlw	0
  7076  017B90  6EE6               	movwf	postinc1,c
  7077  017B92  0E00               	movlw	0
  7078  017B94  6EE6               	movwf	postinc1,c
  7079  017B96  0E7A               	movlw	122
  7080  017B98  6EE6               	movwf	postinc1,c
  7081  017B9A  0E44               	movlw	68
  7082  017B9C  6EE6               	movwf	postinc1,c
  7083  017B9E  0E00               	movlw	0
  7084  017BA0  6EE6               	movwf	postinc1,c
  7085  017BA2  0E04               	movlw	4
  7086  017BA4  6EE6               	movwf	postinc1,c
  7087  017BA6  EC57  F0A9         	call	_conv_raw_result	;wreg free
  7088  017BAA  0060  F007  FFE6   	movff	btemp,postinc1
  7089  017BB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7090  017BB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7091  017BBC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7092  017BC2  EC21  F0C7         	call	___fltol	;wreg free
  7093  017BC6  0060  F007  FFE6   	movff	btemp,postinc1
  7094  017BCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7095  017BD2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7096  017BD8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7097  017BDE  0E00               	movlw	0
  7098  017BE0  6EE6               	movwf	postinc1,c
  7099  017BE2  EC23  F0C2         	call	___xxtofl	;wreg free
  7100  017BE6  0060  F007  FFE6   	movff	btemp,postinc1
  7101  017BEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7102  017BF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7103  017BF8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7104  017BFE  ECA7  F09E         	call	___flmul	;wreg free
  7105  017C02  0060  F007  FFE6   	movff	btemp,postinc1
  7106  017C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7107  017C0E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7108  017C14  0060  F013  FFE6   	movff	btemp+3,postinc1
  7109  017C1A  EC21  F0C7         	call	___fltol	;wreg free
  7110  017C1E  0060  F007  FFE6   	movff	btemp,postinc1
  7111  017C24  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7112  017C2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7113  017C30  0060  F013  FFE6   	movff	btemp+3,postinc1
  7114  017C36  EC4E  F0CC         	call	_Volts_to_SOC	;wreg free
  7115  017C3A  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7116  017C40  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7117                           
  7118                           ;bsoc.c: 113:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7119  017C46  EE21  F38B         	lfsr	2,_C+140	;volatile
  7120  017C4A  006F FF7B FFE6     	movff	postinc2,postinc1
  7121  017C50  006F FF7B FFE6     	movff	postinc2,postinc1
  7122  017C56  006F FF7B FFE6     	movff	postinc2,postinc1
  7123  017C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  7124  017C62  0E00               	movlw	0
  7125  017C64  6EE6               	movwf	postinc1,c
  7126  017C66  0E00               	movlw	0
  7127  017C68  6EE6               	movwf	postinc1,c
  7128  017C6A  0EC8               	movlw	200
  7129  017C6C  6EE6               	movwf	postinc1,c
  7130  017C6E  0E42               	movlw	66
  7131  017C70  6EE6               	movwf	postinc1,c
  7132  017C72  0E00               	movlw	0
  7133  017C74  6EE6               	movwf	postinc1,c
  7134  017C76  0E00               	movlw	0
  7135  017C78  6EE6               	movwf	postinc1,c
  7136  017C7A  0E7A               	movlw	122
  7137  017C7C  6EE6               	movwf	postinc1,c
  7138  017C7E  0E44               	movlw	68
  7139  017C80  6EE6               	movwf	postinc1,c
  7140  017C82  0E00               	movlw	0
  7141  017C84  6EE6               	movwf	postinc1,c
  7142  017C86  0E04               	movlw	4
  7143  017C88  6EE6               	movwf	postinc1,c
  7144  017C8A  EC57  F0A9         	call	_conv_raw_result	;wreg free
  7145  017C8E  0060  F007  FFE6   	movff	btemp,postinc1
  7146  017C94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7147  017C9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7148  017CA0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7149  017CA6  EC21  F0C7         	call	___fltol	;wreg free
  7150  017CAA  0060  F007  FFE6   	movff	btemp,postinc1
  7151  017CB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7152  017CB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7153  017CBC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7154  017CC2  0E00               	movlw	0
  7155  017CC4  6EE6               	movwf	postinc1,c
  7156  017CC6  EC23  F0C2         	call	___xxtofl	;wreg free
  7157  017CCA  0060  F007  FFE6   	movff	btemp,postinc1
  7158  017CD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7159  017CD6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7160  017CDC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7161  017CE2  ECA7  F09E         	call	___flmul	;wreg free
  7162  017CE6  0060  F007  FFE6   	movff	btemp,postinc1
  7163  017CEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7164  017CF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7165  017CF8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7166  017CFE  EC21  F0C7         	call	___fltol	;wreg free
  7167  017D02  0060  F007  FFE6   	movff	btemp,postinc1
  7168  017D08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7169  017D0E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7170  017D14  0060  F013  FFE6   	movff	btemp+3,postinc1
  7171  017D1A  EC4E  F0CC         	call	_Volts_to_SOC	;wreg free
  7172  017D1E  0060  F004  F00B   	movff	btemp,btemp+10
  7173  017D24  0060  F008  F00C   	movff	btemp+1,btemp+11
  7174  017D2A  500B               	movf	(btemp+10)^0,w,c
  7175  017D2C  6E05               	movwf	(btemp+4)^0,c
  7176  017D2E  500C               	movf	(btemp+11)^0,w,c
  7177  017D30  6E06               	movwf	(btemp+5)^0,c
  7178  017D32  6A07               	clrf	(btemp+6)^0,c
  7179  017D34  6A08               	clrf	(btemp+7)^0,c
  7180  017D36  0060  F017  FFE6   	movff	btemp+4,postinc1
  7181  017D3C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7182  017D42  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7183  017D48  0060  F023  FFE6   	movff	btemp+7,postinc1
  7184  017D4E  0E00               	movlw	0
  7185  017D50  6EE6               	movwf	postinc1,c
  7186  017D52  EC23  F0C2         	call	___xxtofl	;wreg free
  7187  017D56  0060  F007  FFE6   	movff	btemp,postinc1
  7188  017D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7189  017D62  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7190  017D68  0060  F013  FFE6   	movff	btemp+3,postinc1
  7191  017D6E  EC9A  F0A6         	call	___fldiv	;wreg free
  7192  017D72  0060  F007  FFE6   	movff	btemp,postinc1
  7193  017D78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7194  017D7E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7195  017D84  0060  F013  FFE6   	movff	btemp+3,postinc1
  7196  017D8A  ECA7  F09E         	call	___flmul	;wreg free
  7197  017D8E  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7198  017D94  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7199  017D9A  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7200  017DA0  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7201                           
  7202                           ;bsoc.c: 114:  C.dynamic_ah_adj = C.dynamic_ah;
  7203  017DA6  EE21  F38F         	lfsr	2,_C+144	;volatile
  7204  017DAA  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7205  017DB0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7206  017DB6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7207  017DBC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7208                           
  7209                           ;bsoc.c: 115:  TMR3_SetInterruptHandler(calc_bsoc);
  7210  017DC2  0E34               	movlw	low _calc_bsoc
  7211  017DC4  6EE6               	movwf	postinc1,c
  7212  017DC6  0E33               	movlw	high _calc_bsoc
  7213  017DC8  6EE6               	movwf	postinc1,c
  7214  017DCA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7215  017DCC  6EE6               	movwf	postinc1,c
  7216  017DCE  EC1F  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
  7217                           
  7218                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7219  017DD2  0012               	return		;funcret
  7220  017DD4                     __end_of_init_bsoc:
  7221                           	opt callstack 0
  7222                           
  7223 ;; *************** function _Volts_to_SOC *****************
  7224 ;; Defined at:
  7225 ;;		line 172 in file "bsoc.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  cvoltage        4  [STACK] unsigned long 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  soc             4  [STACK] float 
  7230 ;;  slot            1  [STACK] unsigned char 
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  2  [STACK] unsigned short 
  7233 ;; Registers used:
  7234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/1
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:   16
  7247 ;; This function calls:
  7248 ;;		___fltol
  7249 ;;		___xxtofl
  7250 ;; This function is called by:
  7251 ;;		_init_bsoc
  7252 ;; This function uses a reentrant model
  7253 ;;
  7254                           
  7255                           	psect	text13
  7256  01989C                     __ptext13:
  7257                           	opt callstack 0
  7258  01989C                     _Volts_to_SOC:
  7259                           	opt callstack 0
  7260                           
  7261                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7262  01989C  0E05               	movlw	5
  7263  01989E  26E1               	addwf	fsr1l,f,c
  7264  0198A0  0E00               	movlw	0
  7265  0198A2  22E2               	addwfc	fsr1h,f,c
  7266                           
  7267                           ;bsoc.c: 172: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 173: {;bsoc.c: 174:  uint
      +                          8_t slot;;bsoc.c: 175:  float soc = 0;
  7268                           
  7269                           ;incstack = 0
  7270  0198A4  0E00               	movlw	0
  7271  0198A6  6E09               	movwf	(btemp+8)^0,c
  7272  0198A8  0E00               	movlw	0
  7273  0198AA  6E0A               	movwf	(btemp+9)^0,c
  7274  0198AC  0E00               	movlw	0
  7275  0198AE  6E0B               	movwf	(btemp+10)^0,c
  7276  0198B0  0E00               	movlw	0
  7277  0198B2  6E0C               	movwf	(btemp+11)^0,c
  7278                           
  7279                           ;stkvar	_soc @ sp[(-5)+0]
  7280  0198B4  0EFB               	movlw	-5
  7281  0198B6  0060  F027  FFE3   	movff	btemp+8,plusw1
  7282  0198BC  0EFC               	movlw	-4
  7283  0198BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7284  0198C4  0EFD               	movlw	-3
  7285  0198C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7286  0198CC  0EFE               	movlw	-2
  7287  0198CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7288                           
  7289                           ;bsoc.c: 177:  for (slot = 0; slot < 26; slot++) {
  7290                           ;stkvar	_slot @ sp[(-5)+4]
  7291  0198D4  0EFF               	movlw	-1
  7292  0198D6  6AE3               	clrf	plusw1,c
  7293  0198D8                     l10658:
  7294                           
  7295                           ;bsoc.c: 178:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7296                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7297                           ;stkvar	_slot @ sp[(-5)+4]
  7298  0198D8  0EFF               	movlw	-1
  7299  0198DA  50E3               	movf	plusw1,w,c
  7300  0198DC  0D08               	mullw	8
  7301  0198DE  0E35               	movlw	low _BVSOC_TABLE
  7302  0198E0  24F3               	addwf	243,w,c
  7303  0198E2  6EF6               	movwf	tblptrl,c
  7304  0198E4  0EFA               	movlw	high _BVSOC_TABLE
  7305  0198E6  20F4               	addwfc	244,w,c
  7306  0198E8  6EF7               	movwf	tblptrh,c
  7307  0198EA                     	if	1	;There are 3 active tblptr bytes
  7308  0198EA  6AF8               	clrf	tblptru,c
  7309  0198EC  0E00               	movlw	low (__mediumconst shr (0+16))
  7310  0198EE  22F8               	addwfc	tblptru,f,c
  7311  0198F0                     	endif
  7312  0198F0  0EF7               	movlw	-9
  7313  0198F2  50E3               	movf	plusw1,w,c
  7314  0198F4  0009               	tblrd		*+
  7315  0198F6  5CF5               	subwf	tablat,w,c
  7316  0198F8  0EF8               	movlw	-8
  7317  0198FA  50E3               	movf	plusw1,w,c
  7318  0198FC  0009               	tblrd		*+
  7319  0198FE  58F5               	subwfb	tablat,w,c
  7320  019900  0EF9               	movlw	-7
  7321  019902  50E3               	movf	plusw1,w,c
  7322  019904  0009               	tblrd		*+
  7323  019906  58F5               	subwfb	tablat,w,c
  7324  019908  0EFA               	movlw	-6
  7325  01990A  50E3               	movf	plusw1,w,c
  7326  01990C  0009               	tblrd		*+
  7327  01990E  58F5               	subwfb	tablat,w,c
  7328  019910  B0D8               	btfsc	status,0,c
  7329  019912  D034               	goto	l10662
  7330                           
  7331                           ;bsoc.c: 179:    soc = BVSOC_TABLE[slot][1];
  7332                           ;stkvar	_slot @ sp[(-5)+4]
  7333  019914  0EFF               	movlw	-1
  7334  019916  50E3               	movf	plusw1,w,c
  7335  019918  0D08               	mullw	8
  7336  01991A  0E04               	movlw	4
  7337  01991C  26F3               	addwf	243,f,c
  7338  01991E  0E00               	movlw	0
  7339  019920  22F4               	addwfc	244,f,c
  7340  019922  0E35               	movlw	low _BVSOC_TABLE
  7341  019924  24F3               	addwf	243,w,c
  7342  019926  6EF6               	movwf	tblptrl,c
  7343  019928  0EFA               	movlw	high _BVSOC_TABLE
  7344  01992A  20F4               	addwfc	244,w,c
  7345  01992C  6EF7               	movwf	tblptrh,c
  7346  01992E                     	if	1	;There are 3 active tblptr bytes
  7347  01992E  6AF8               	clrf	tblptru,c
  7348  019930  0E00               	movlw	low (__mediumconst shr (0+16))
  7349  019932  22F8               	addwfc	tblptru,f,c
  7350  019934                     	endif
  7351  019934  0009               	tblrd		*+
  7352  019936  006F FFD7 FFE6     	movff	tablat,postinc1
  7353  01993C  0009               	tblrd		*+
  7354  01993E  006F FFD7 FFE6     	movff	tablat,postinc1
  7355  019944  0009               	tblrd		*+
  7356  019946  006F FFD7 FFE6     	movff	tablat,postinc1
  7357  01994C  0009               	tblrd		*+
  7358  01994E  006F FFD7 FFE6     	movff	tablat,postinc1
  7359  019954  0E00               	movlw	0
  7360  019956  6EE6               	movwf	postinc1,c
  7361  019958  EC23  F0C2         	call	___xxtofl	;wreg free
  7362                           
  7363                           ;stkvar	_soc @ sp[(-5)+0]
  7364  01995C  0EFB               	movlw	-5
  7365  01995E  0060  F007  FFE3   	movff	btemp,plusw1
  7366  019964  0EFC               	movlw	-4
  7367  019966  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7368  01996C  0EFD               	movlw	-3
  7369  01996E  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7370  019974  0EFE               	movlw	-2
  7371  019976  0060  F013  FFE3   	movff	btemp+3,plusw1
  7372  01997C                     l10662:
  7373                           
  7374                           ;bsoc.c: 181:  }
  7375                           ;stkvar	_slot @ sp[(-5)+4]
  7376  01997C  0EFF               	movlw	-1
  7377  01997E  2AE3               	incf	plusw1,f,c
  7378                           
  7379                           ;stkvar	_slot @ sp[(-5)+4]
  7380  019980  0EFF               	movlw	-1
  7381  019982  006F FF8C  F001    	movff	plusw1,btemp
  7382  019988  0E19               	movlw	25
  7383  01998A  6401               	cpfsgt	btemp^0,c
  7384  01998C  D7A5               	goto	l10658
  7385                           
  7386                           ;bsoc.c: 182:  return soc;
  7387                           ;stkvar	_soc @ sp[(-5)+0]
  7388  01998E  0EFB               	movlw	-5
  7389  019990  006F FF8F FFE6     	movff	plusw1,postinc1
  7390  019996  006F FF8F FFE6     	movff	plusw1,postinc1
  7391  01999C  006F FF8F FFE6     	movff	plusw1,postinc1
  7392  0199A2  006F FF8F FFE6     	movff	plusw1,postinc1
  7393  0199A8  EC21  F0C7         	call	___fltol	;wreg free
  7394                           
  7395                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7396  0199AC  0EF7               	movlw	247
  7397  0199AE  26E1               	addwf	fsr1l,f,c
  7398  0199B0  0EFF               	movlw	255
  7399  0199B2  22E2               	addwfc	fsr1h,f,c
  7400  0199B4  0012               	return		;funcret
  7401  0199B6                     __end_of_Volts_to_SOC:
  7402                           	opt callstack 0
  7403                           
  7404 ;; *************** function _hid_display *****************
  7405 ;; Defined at:
  7406 ;;		line 17 in file "hid.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  h               1  [STACK] PTR struct H_data
  7409 ;;		 -> H(7), 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1  [STACK] PTR struct H_data
  7414 ;; Registers used:
  7415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7416 ;; Tracked objects:
  7417 ;;		On entry : 3F/39
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7425 ;;Total ram usage:        0 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:   17
  7428 ;; This function calls:
  7429 ;;		_hid_input
  7430 ;; This function is called by:
  7431 ;;		_main
  7432 ;; This function uses a reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text14
  7436  019DFC                     __ptext14:
  7437                           	opt callstack 0
  7438  019DFC                     _hid_display:
  7439                           	opt callstack 13
  7440                           
  7441                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7442                           ;stkvar	_h @ sp[(0)+-1]
  7443                           
  7444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7445                           ;incstack = 0
  7446  019DFC  0EFF               	movlw	-1
  7447  019DFE  50E3               	movf	plusw1,w,c
  7448  019E00  6EE6               	movwf	postinc1,c
  7449  019E02  ECBB  F0D5         	call	_hid_input	;wreg free
  7450                           
  7451                           ;hid.c: 21:  switch (h->h_state) {
  7452  019E06  D066               	goto	l11070
  7453  019E08                     l11048:
  7454                           
  7455                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7456                           ;stkvar	_h @ sp[(0)+-1]
  7457  019E08  0EFF               	movlw	-1
  7458  019E0A  50E3               	movf	plusw1,w,c
  7459  019E0C  6ED9               	movwf	fsr2l,c
  7460  019E0E  6ADA               	clrf	fsr2h,c
  7461  019E10  0E01               	movlw	1
  7462  019E12  26D9               	addwf	fsr2l,f,c
  7463  019E14  0E01               	movlw	1
  7464  019E16  6EDF               	movwf	indf2,c
  7465                           
  7466                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7467                           ;stkvar	_h @ sp[(0)+-1]
  7468  019E18  0EFF               	movlw	-1
  7469  019E1A  50E3               	movf	plusw1,w,c
  7470  019E1C  6ED9               	movwf	fsr2l,c
  7471  019E1E  6ADA               	clrf	fsr2h,c
  7472  019E20  0E00               	movlw	0
  7473  019E22  6EDF               	movwf	indf2,c
  7474                           
  7475                           ;hid.c: 25:   h->wait_enter = 1;
  7476                           ;stkvar	_h @ sp[(0)+-1]
  7477  019E24  0EFF               	movlw	-1
  7478  019E26  50E3               	movf	plusw1,w,c
  7479  019E28  6ED9               	movwf	fsr2l,c
  7480  019E2A  6ADA               	clrf	fsr2h,c
  7481  019E2C  0E04               	movlw	4
  7482  019E2E  26D9               	addwf	fsr2l,f,c
  7483  019E30  0E01               	movlw	1
  7484  019E32  6EDF               	movwf	indf2,c
  7485                           
  7486                           ;hid.c: 26:   h->wait_select = 1;
  7487                           ;stkvar	_h @ sp[(0)+-1]
  7488  019E34  0EFF               	movlw	-1
  7489  019E36  50E3               	movf	plusw1,w,c
  7490  019E38  6ED9               	movwf	fsr2l,c
  7491  019E3A  6ADA               	clrf	fsr2h,c
  7492  019E3C  0E02               	movlw	2
  7493  019E3E  26D9               	addwf	fsr2l,f,c
  7494  019E40  0E01               	movlw	1
  7495  019E42  6EDF               	movwf	indf2,c
  7496                           
  7497                           ;hid.c: 27:   h->select_p = SW_OFF;
  7498                           ;stkvar	_h @ sp[(0)+-1]
  7499  019E44  0EFF               	movlw	-1
  7500  019E46  50E3               	movf	plusw1,w,c
  7501  019E48  6ED9               	movwf	fsr2l,c
  7502  019E4A  6ADA               	clrf	fsr2h,c
  7503  019E4C  0E03               	movlw	3
  7504  019E4E  26D9               	addwf	fsr2l,f,c
  7505  019E50  0E00               	movlw	0
  7506  019E52  6EDF               	movwf	indf2,c
  7507                           
  7508                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7509                           ;stkvar	_h @ sp[(0)+-1]
  7510  019E54  0EFF               	movlw	-1
  7511  019E56  50E3               	movf	plusw1,w,c
  7512  019E58  6ED9               	movwf	fsr2l,c
  7513  019E5A  6ADA               	clrf	fsr2h,c
  7514  019E5C  0E05               	movlw	5
  7515  019E5E  26D9               	addwf	fsr2l,f,c
  7516  019E60  0E00               	movlw	0
  7517  019E62  D036               	goto	L3
  7518  019E64                     l11060:
  7519                           
  7520                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7521                           ;stkvar	_h @ sp[(0)+-1]
  7522  019E64  0EFF               	movlw	-1
  7523  019E66  50E3               	movf	plusw1,w,c
  7524  019E68  6ED9               	movwf	fsr2l,c
  7525  019E6A  6ADA               	clrf	fsr2h,c
  7526  019E6C  0E02               	movlw	2
  7527  019E6E  26D9               	addwf	fsr2l,f,c
  7528  019E70  50DF               	movf	indf2,w,c
  7529  019E72  A4D8               	btfss	status,2,c
  7530  019E74  D042               	goto	l1967
  7531                           
  7532                           ;stkvar	_h @ sp[(0)+-1]
  7533  019E76  0EFF               	movlw	-1
  7534  019E78  50E3               	movf	plusw1,w,c
  7535  019E7A  6ED9               	movwf	fsr2l,c
  7536  019E7C  6ADA               	clrf	fsr2h,c
  7537  019E7E  0E03               	movlw	3
  7538  019E80  26D9               	addwf	fsr2l,f,c
  7539  019E82  50DF               	movf	indf2,w,c
  7540  019E84  A4D8               	btfss	status,2,c
  7541  019E86  D039               	goto	l1967
  7542                           
  7543                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7544                           ;stkvar	_h @ sp[(0)+-1]
  7545  019E88  0EFF               	movlw	-1
  7546  019E8A  50E3               	movf	plusw1,w,c
  7547  019E8C  6ED9               	movwf	fsr2l,c
  7548  019E8E  6ADA               	clrf	fsr2h,c
  7549  019E90  0E06               	movlw	6
  7550  019E92  26D9               	addwf	fsr2l,f,c
  7551                           
  7552                           ;stkvar	_h @ sp[(0)+-1]
  7553  019E94  0EFF               	movlw	-1
  7554  019E96  50E3               	movf	plusw1,w,c
  7555  019E98  6EE9               	movwf	fsr0l,c
  7556  019E9A  6AEA               	clrf	fsr0h,c
  7557  019E9C  0E06               	movlw	6
  7558  019E9E  26E9               	addwf	fsr0l,f,c
  7559  019EA0  2AEF               	incf	indf0,f,c
  7560  019EA2  50EF               	movf	indf0,w,c
  7561  019EA4  0B03               	andlw	3
  7562  019EA6  6EDF               	movwf	indf2,c
  7563                           
  7564                           ;hid.c: 34:    h->hid_display = h->sequence;
  7565                           ;stkvar	_h @ sp[(0)+-1]
  7566  019EA8  0EFF               	movlw	-1
  7567  019EAA  50E3               	movf	plusw1,w,c
  7568  019EAC  6ED9               	movwf	fsr2l,c
  7569  019EAE  6ADA               	clrf	fsr2h,c
  7570  019EB0  0E06               	movlw	6
  7571  019EB2  26D9               	addwf	fsr2l,f,c
  7572                           
  7573                           ;stkvar	_h @ sp[(0)+-1]
  7574  019EB4  0EFF               	movlw	-1
  7575  019EB6  50E3               	movf	plusw1,w,c
  7576  019EB8  6EE9               	movwf	fsr0l,c
  7577  019EBA  6AEA               	clrf	fsr0h,c
  7578  019EBC  006F FF7F FFEF     	movff	indf2,indf0
  7579                           
  7580                           ;hid.c: 35:    h->wait_select = 1;
  7581                           ;stkvar	_h @ sp[(0)+-1]
  7582  019EC2  0EFF               	movlw	-1
  7583  019EC4  50E3               	movf	plusw1,w,c
  7584  019EC6  6ED9               	movwf	fsr2l,c
  7585  019EC8  6ADA               	clrf	fsr2h,c
  7586  019ECA  0E02               	movlw	2
  7587  019ECC  26D9               	addwf	fsr2l,f,c
  7588  019ECE  0E01               	movlw	1
  7589  019ED0                     L3:
  7590  019ED0  6EDF               	movwf	indf2,c
  7591  019ED2  D013               	goto	l1967
  7592  019ED4                     l11070:
  7593                           
  7594                           ;stkvar	_h @ sp[(0)+-1]
  7595  019ED4  0EFF               	movlw	-1
  7596  019ED6  50E3               	movf	plusw1,w,c
  7597  019ED8  6ED9               	movwf	fsr2l,c
  7598  019EDA  6ADA               	clrf	fsr2h,c
  7599  019EDC  0E01               	movlw	1
  7600  019EDE  26D9               	addwf	fsr2l,f,c
  7601  019EE0  50DF               	movf	indf2,w,c
  7602  019EE2  6E0B               	movwf	(btemp+10)^0,c
  7603  019EE4  6A0C               	clrf	(btemp+11)^0,c
  7604                           
  7605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7606                           ; Switch size 1, requested type "simple"
  7607                           ; Number of cases is 1, Range of values is 0 to 0
  7608                           ; switch strategies available:
  7609                           ; Name         Instructions Cycles
  7610                           ; simple_byte            4     3 (average)
  7611                           ;	Chosen strategy is simple_byte
  7612  019EE6  500C               	movf	(btemp+11)^0,w,c
  7613  019EE8  0A00               	xorlw	0	; case 0
  7614  019EEA  A4D8               	btfss	status,2,c
  7615  019EEC  D7BB               	goto	l11060
  7616                           
  7617                           ; Switch size 1, requested type "simple"
  7618                           ; Number of cases is 2, Range of values is 0 to 1
  7619                           ; switch strategies available:
  7620                           ; Name         Instructions Cycles
  7621                           ; simple_byte            7     4 (average)
  7622                           ;	Chosen strategy is simple_byte
  7623  019EEE  500B               	movf	(btemp+10)^0,w,c
  7624  019EF0  0A00               	xorlw	0	; case 0
  7625  019EF2  B4D8               	btfsc	status,2,c
  7626  019EF4  D789               	goto	l11048
  7627  019EF6  0A01               	xorlw	1	; case 1
  7628  019EF8  D7B5               	goto	l11060
  7629  019EFA                     l1967:
  7630                           
  7631                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7632  019EFA  52E5               	movf	postdec1,f,c
  7633  019EFC  0012               	return		;funcret
  7634  019EFE                     __end_of_hid_display:
  7635                           	opt callstack 0
  7636                           
  7637 ;; *************** function _hid_input *****************
  7638 ;; Defined at:
  7639 ;;		line 3 in file "hid.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  h               1  [STACK] PTR struct H_data
  7642 ;;		 -> H(7), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1  [STACK] PTR struct H_data
  7647 ;; Registers used:
  7648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/39
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:   16
  7661 ;; This function calls:
  7662 ;;		_get_switch
  7663 ;; This function is called by:
  7664 ;;		_hid_display
  7665 ;; This function uses a reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text15
  7669  01AB76                     __ptext15:
  7670                           	opt callstack 0
  7671  01AB76                     _hid_input:
  7672                           	opt callstack 13
  7673                           
  7674                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7675                           
  7676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7677                           ;incstack = 0
  7678  01AB76  0E02               	movlw	2
  7679  01AB78  6EE6               	movwf	postinc1,c
  7680  01AB7A  EC3C  F0DD         	call	_get_switch	;wreg free
  7681  01AB7E  5001               	movf	btemp^0,w,c
  7682  01AB80  B4D8               	btfsc	status,2,c
  7683  01AB82  D01C               	goto	l10570
  7684                           
  7685                           ;hid.c: 6:   h->wait_select = 0;
  7686                           ;stkvar	_h @ sp[(0)+-1]
  7687  01AB84  0EFF               	movlw	-1
  7688  01AB86  50E3               	movf	plusw1,w,c
  7689  01AB88  6ED9               	movwf	fsr2l,c
  7690  01AB8A  6ADA               	clrf	fsr2h,c
  7691  01AB8C  0E02               	movlw	2
  7692  01AB8E  26D9               	addwf	fsr2l,f,c
  7693  01AB90  0E00               	movlw	0
  7694  01AB92  6EDF               	movwf	indf2,c
  7695                           
  7696                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7697  01AB94  0E02               	movlw	2
  7698  01AB96  6EE6               	movwf	postinc1,c
  7699  01AB98  EC3C  F0DD         	call	_get_switch	;wreg free
  7700  01AB9C  5001               	movf	btemp^0,w,c
  7701  01AB9E  B4D8               	btfsc	status,2,c
  7702  01ABA0  D003               	goto	u9750
  7703  01ABA2  6A0C               	clrf	(btemp+11)^0,c
  7704  01ABA4  2A0C               	incf	(btemp+11)^0,f,c
  7705  01ABA6  D001               	goto	u9768
  7706  01ABA8                     u9750:
  7707  01ABA8  6A0C               	clrf	(btemp+11)^0,c
  7708  01ABAA                     u9768:
  7709                           
  7710                           ;stkvar	_h @ sp[(0)+-1]
  7711  01ABAA  0EFF               	movlw	-1
  7712  01ABAC  50E3               	movf	plusw1,w,c
  7713  01ABAE  6ED9               	movwf	fsr2l,c
  7714  01ABB0  6ADA               	clrf	fsr2h,c
  7715  01ABB2  0E03               	movlw	3
  7716  01ABB4  26D9               	addwf	fsr2l,f,c
  7717  01ABB6  0060  F033  FFDF   	movff	btemp+11,indf2
  7718  01ABBC                     l10570:
  7719                           
  7720                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7721  01ABBC  0E03               	movlw	3
  7722  01ABBE  6EE6               	movwf	postinc1,c
  7723  01ABC0  EC3C  F0DD         	call	_get_switch	;wreg free
  7724  01ABC4  5001               	movf	btemp^0,w,c
  7725  01ABC6  B4D8               	btfsc	status,2,c
  7726  01ABC8  D01C               	goto	l1958
  7727                           
  7728                           ;hid.c: 11:   h->wait_enter = 0;
  7729                           ;stkvar	_h @ sp[(0)+-1]
  7730  01ABCA  0EFF               	movlw	-1
  7731  01ABCC  50E3               	movf	plusw1,w,c
  7732  01ABCE  6ED9               	movwf	fsr2l,c
  7733  01ABD0  6ADA               	clrf	fsr2h,c
  7734  01ABD2  0E04               	movlw	4
  7735  01ABD4  26D9               	addwf	fsr2l,f,c
  7736  01ABD6  0E00               	movlw	0
  7737  01ABD8  6EDF               	movwf	indf2,c
  7738                           
  7739                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7740  01ABDA  0E03               	movlw	3
  7741  01ABDC  6EE6               	movwf	postinc1,c
  7742  01ABDE  EC3C  F0DD         	call	_get_switch	;wreg free
  7743  01ABE2  5001               	movf	btemp^0,w,c
  7744  01ABE4  B4D8               	btfsc	status,2,c
  7745  01ABE6  D003               	goto	u9780
  7746  01ABE8  6A0C               	clrf	(btemp+11)^0,c
  7747  01ABEA  2A0C               	incf	(btemp+11)^0,f,c
  7748  01ABEC  D001               	goto	u9798
  7749  01ABEE                     u9780:
  7750  01ABEE  6A0C               	clrf	(btemp+11)^0,c
  7751  01ABF0                     u9798:
  7752                           
  7753                           ;stkvar	_h @ sp[(0)+-1]
  7754  01ABF0  0EFF               	movlw	-1
  7755  01ABF2  50E3               	movf	plusw1,w,c
  7756  01ABF4  6ED9               	movwf	fsr2l,c
  7757  01ABF6  6ADA               	clrf	fsr2h,c
  7758  01ABF8  0E05               	movlw	5
  7759  01ABFA  26D9               	addwf	fsr2l,f,c
  7760  01ABFC  0060  F033  FFDF   	movff	btemp+11,indf2
  7761  01AC02                     l1958:
  7762                           
  7763                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7764  01AC02  52E5               	movf	postdec1,f,c
  7765  01AC04  0012               	return		;funcret
  7766  01AC06                     __end_of_hid_input:
  7767                           	opt callstack 0
  7768                           
  7769 ;; *************** function _get_switch *****************
  7770 ;; Defined at:
  7771 ;;		line 18 in file "dio.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  i               1  [STACK] unsigned char 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1  [STACK] enum E17021
  7778 ;; Registers used:
  7779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/1
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7789 ;;Total ram usage:        0 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:   15
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_main
  7796 ;;		_hid_input
  7797 ;; This function uses a reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text16
  7801  01BA78                     __ptext16:
  7802                           	opt callstack 0
  7803  01BA78                     _get_switch:
  7804                           	opt callstack 13
  7805                           
  7806                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7807                           ;stkvar	_i @ sp[(0)+-1]
  7808                           
  7809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7810                           ;incstack = 0
  7811  01BA78  0EFF               	movlw	-1
  7812  01BA7A  006F FF8C  F001    	movff	plusw1,btemp
  7813  01BA80  0E03               	movlw	3
  7814  01BA82  6401               	cpfsgt	btemp^0,c
  7815  01BA84  D002               	goto	l9922
  7816                           
  7817                           ;dio.c: 21:   return SW_OFF;
  7818  01BA86  0E00               	movlw	0
  7819  01BA88  D00A               	goto	L4
  7820  01BA8A                     l9922:
  7821                           
  7822                           ;dio.c: 23:  return S.button[i].sw;
  7823                           ;stkvar	_i @ sp[(0)+-1]
  7824  01BA8A  0EFF               	movlw	-1
  7825  01BA8C  50E3               	movf	plusw1,w,c
  7826  01BA8E  0D05               	mullw	5
  7827  01BA90  0E54               	movlw	low _S
  7828  01BA92  24F3               	addwf	243,w,c
  7829  01BA94  6ED9               	movwf	fsr2l,c
  7830  01BA96  0E02               	movlw	high _S
  7831  01BA98  20F4               	addwfc	prodh,w,c
  7832  01BA9A  6EDA               	movwf	fsr2h,c
  7833  01BA9C  50DF               	movf	indf2,w,c
  7834  01BA9E                     L4:
  7835  01BA9E  6E01               	movwf	btemp^0,c
  7836                           
  7837                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7838  01BAA0  52E5               	movf	postdec1,f,c
  7839  01BAA2  0012               	return		;funcret
  7840  01BAA4                     __end_of_get_switch:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function _esr_check *****************
  7844 ;; Defined at:
  7845 ;;		line 191 in file "bsoc.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  fsm             1  [STACK] unsigned char 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  4  [STACK] float 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   18
  7866 ;; This function calls:
  7867 ;;		_StartTimer
  7868 ;;		_TimerDone
  7869 ;;		___fldiv
  7870 ;;		___flsub
  7871 ;;		_conv_raw_result
  7872 ;;		_fabsf
  7873 ;;		_set_load_relay_one
  7874 ;;		_set_load_relay_two
  7875 ;;		_update_adc_result
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;; This function uses a reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text17
  7882  01710C                     __ptext17:
  7883                           	opt callstack 0
  7884  01710C                     _esr_check:
  7885                           	opt callstack 12
  7886                           
  7887                           ;bsoc.c: 191: float esr_check(uint8_t fsm);bsoc.c: 192: {;bsoc.c: 193:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 195:  if (fsm) {
  7888                           ;stkvar	_fsm @ sp[(0)+-1]
  7889                           
  7890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7891                           ;incstack = 0
  7892  01710C  0EFF               	movlw	-1
  7893  01710E  50E3               	movf	plusw1,w,c
  7894  017110  B4D8               	btfsc	status,2,c
  7895  017112  D146               	goto	l10982
  7896                           
  7897                           ;bsoc.c: 196:   esr_state = 0;
  7898  017114  6A40               	clrf	esr_check@esr_state^0,c
  7899                           
  7900                           ;bsoc.c: 197:   return -10.0;
  7901  017116  0E00               	movlw	0
  7902  017118  6E01               	movwf	btemp^0,c
  7903  01711A  0E00               	movlw	0
  7904  01711C  6E02               	movwf	(btemp+1)^0,c
  7905  01711E  0E20               	movlw	32
  7906  017120  6E03               	movwf	(btemp+2)^0,c
  7907  017122  0EC1               	movlw	193
  7908  017124  D158               	goto	L5
  7909  017126                     l10914:
  7910                           
  7911                           ;bsoc.c: 202:   StartTimer(TMR_ESR, 10000);
  7912  017126  0E10               	movlw	16
  7913  017128  6EE6               	movwf	postinc1,c
  7914  01712A  0E27               	movlw	39
  7915  01712C  6EE6               	movwf	postinc1,c
  7916  01712E  0E0C               	movlw	12
  7917  017130  6EE6               	movwf	postinc1,c
  7918  017132  EC81  F0DB         	call	_StartTimer	;wreg free
  7919  017136                     l10916:
  7920                           
  7921                           ;bsoc.c: 203:   esr_state++;
  7922  017136  2A40               	incf	esr_check@esr_state^0,f,c
  7923                           
  7924                           ;bsoc.c: 204:   break;
  7925  017138  D147               	goto	l10984
  7926  01713A                     l10918:
  7927                           
  7928                           ;bsoc.c: 209:   set_load_relay_one(0);
  7929  01713A  0E00               	movlw	0
  7930  01713C  6EE6               	movwf	postinc1,c
  7931  01713E  EC47  F0E0         	call	_set_load_relay_one	;wreg free
  7932                           
  7933                           ;bsoc.c: 210:   set_load_relay_two(0);
  7934  017142  0E00               	movlw	0
  7935  017144  6EE6               	movwf	postinc1,c
  7936  017146  EC3F  F0E0         	call	_set_load_relay_two	;wreg free
  7937                           
  7938                           ;bsoc.c: 211:   if (TimerDone(TMR_ESR)) {
  7939  01714A  0E0C               	movlw	12
  7940  01714C  6EE6               	movwf	postinc1,c
  7941  01714E  ECA7  F0DD         	call	_TimerDone	;wreg free
  7942  017152  5001               	movf	btemp^0,w,c
  7943  017154  B4D8               	btfsc	status,2,c
  7944  017156  D009               	goto	l10924
  7945                           
  7946                           ;bsoc.c: 212:    StartTimer(TMR_ESR, 10000);
  7947  017158  0E10               	movlw	16
  7948  01715A  6EE6               	movwf	postinc1,c
  7949  01715C  0E27               	movlw	39
  7950  01715E  6EE6               	movwf	postinc1,c
  7951  017160  0E0C               	movlw	12
  7952  017162  6EE6               	movwf	postinc1,c
  7953  017164  EC81  F0DB         	call	_StartTimer	;wreg free
  7954                           
  7955                           ;bsoc.c: 213:   } else {
  7956  017168  D006               	goto	l10928
  7957  01716A                     l10924:
  7958                           
  7959                           ;bsoc.c: 214:    return -2.0;
  7960  01716A  0E00               	movlw	0
  7961  01716C  6E01               	movwf	btemp^0,c
  7962  01716E  0E00               	movlw	0
  7963  017170  6E02               	movwf	(btemp+1)^0,c
  7964  017172  0E00               	movlw	0
  7965  017174  D066               	goto	L7
  7966  017176                     l10928:
  7967                           
  7968                           ;bsoc.c: 219:   update_adc_result();
  7969  017176  EC21  F0DC         	call	_update_adc_result	;wreg free
  7970                           
  7971                           ;bsoc.c: 220:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7972  01717A  0E00               	movlw	0
  7973  01717C  6EE6               	movwf	postinc1,c
  7974  01717E  0E04               	movlw	4
  7975  017180  6EE6               	movwf	postinc1,c
  7976  017182  EC57  F0A9         	call	_conv_raw_result	;wreg free
  7977  017186  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7978  01718C  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7979  017192  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7980  017198  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7981  01719E  D7CB               	goto	l10916
  7982  0171A0                     l10934:
  7983                           
  7984                           ;bsoc.c: 224:   set_load_relay_one(1);
  7985  0171A0  0E01               	movlw	1
  7986  0171A2  6EE6               	movwf	postinc1,c
  7987  0171A4  EC47  F0E0         	call	_set_load_relay_one	;wreg free
  7988                           
  7989                           ;bsoc.c: 225:   if (TimerDone(TMR_ESR)) {
  7990  0171A8  0E0C               	movlw	12
  7991  0171AA  6EE6               	movwf	postinc1,c
  7992  0171AC  ECA7  F0DD         	call	_TimerDone	;wreg free
  7993  0171B0  5001               	movf	btemp^0,w,c
  7994  0171B2  B4D8               	btfsc	status,2,c
  7995  0171B4  D009               	goto	l10940
  7996                           
  7997                           ;bsoc.c: 226:    StartTimer(TMR_ESR, 10000);
  7998  0171B6  0E10               	movlw	16
  7999  0171B8  6EE6               	movwf	postinc1,c
  8000  0171BA  0E27               	movlw	39
  8001  0171BC  6EE6               	movwf	postinc1,c
  8002  0171BE  0E0C               	movlw	12
  8003  0171C0  6EE6               	movwf	postinc1,c
  8004  0171C2  EC81  F0DB         	call	_StartTimer	;wreg free
  8005                           
  8006                           ;bsoc.c: 227:   } else {
  8007  0171C6  D006               	goto	l10944
  8008  0171C8                     l10940:
  8009                           
  8010                           ;bsoc.c: 228:    return -3.0;
  8011  0171C8  0E00               	movlw	0
  8012  0171CA  6E01               	movwf	btemp^0,c
  8013  0171CC  0E00               	movlw	0
  8014  0171CE  6E02               	movwf	(btemp+1)^0,c
  8015  0171D0  0E40               	movlw	64
  8016  0171D2  D037               	goto	L7
  8017  0171D4                     l10944:
  8018                           
  8019                           ;bsoc.c: 231:   update_adc_result();
  8020  0171D4  EC21  F0DC         	call	_update_adc_result	;wreg free
  8021                           
  8022                           ;bsoc.c: 232:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8023  0171D8  0E00               	movlw	0
  8024  0171DA  6EE6               	movwf	postinc1,c
  8025  0171DC  0E04               	movlw	4
  8026  0171DE  6EE6               	movwf	postinc1,c
  8027  0171E0  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8028  0171E4  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8029  0171EA  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8030  0171F0  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8031  0171F6  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8032                           
  8033                           ;bsoc.c: 233:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8034  0171FC  0E00               	movlw	0
  8035  0171FE  6EE6               	movwf	postinc1,c
  8036  017200  0E00               	movlw	0
  8037  017202  6EE6               	movwf	postinc1,c
  8038  017204  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8039  017208  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8040  01720E  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8041  017214  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8042  01721A  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8043  017220  D78A               	goto	l10916
  8044  017222                     l10952:
  8045                           
  8046                           ;bsoc.c: 237:   set_load_relay_two(1);
  8047  017222  0E01               	movlw	1
  8048  017224  6EE6               	movwf	postinc1,c
  8049  017226  EC3F  F0E0         	call	_set_load_relay_two	;wreg free
  8050                           
  8051                           ;bsoc.c: 238:   if (!TimerDone(TMR_ESR))
  8052  01722A  0E0C               	movlw	12
  8053  01722C  6EE6               	movwf	postinc1,c
  8054  01722E  ECA7  F0DD         	call	_TimerDone	;wreg free
  8055  017232  5001               	movf	btemp^0,w,c
  8056  017234  A4D8               	btfss	status,2,c
  8057  017236  D008               	goto	l10960
  8058                           
  8059                           ;bsoc.c: 239:    return -4.0;
  8060  017238  0E00               	movlw	0
  8061  01723A  6E01               	movwf	btemp^0,c
  8062  01723C  0E00               	movlw	0
  8063  01723E  6E02               	movwf	(btemp+1)^0,c
  8064  017240  0E80               	movlw	128
  8065  017242                     L7:
  8066  017242  6E03               	movwf	(btemp+2)^0,c
  8067  017244  0EC0               	movlw	192
  8068  017246  D0C7               	goto	L5
  8069  017248                     l10960:
  8070                           
  8071                           ;bsoc.c: 241:   update_adc_result();
  8072  017248  EC21  F0DC         	call	_update_adc_result	;wreg free
  8073                           
  8074                           ;bsoc.c: 242:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8075  01724C  0E00               	movlw	0
  8076  01724E  6EE6               	movwf	postinc1,c
  8077  017250  0E04               	movlw	4
  8078  017252  6EE6               	movwf	postinc1,c
  8079  017254  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8080  017258  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8081  01725E  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8082  017264  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8083  01726A  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8084                           
  8085                           ;bsoc.c: 243:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8086  017270  0E00               	movlw	0
  8087  017272  6EE6               	movwf	postinc1,c
  8088  017274  0E00               	movlw	0
  8089  017276  6EE6               	movwf	postinc1,c
  8090  017278  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8091  01727C  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8092  017282  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8093  017288  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8094  01728E  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8095                           
  8096                           ;bsoc.c: 245:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8097  017294  EE22  F011         	lfsr	2,_C+274	;volatile
  8098  017298  006F FF7B FFE6     	movff	postinc2,postinc1
  8099  01729E  006F FF7B FFE6     	movff	postinc2,postinc1
  8100  0172A4  006F FF7B FFE6     	movff	postinc2,postinc1
  8101  0172AA  006F FF7B FFE6     	movff	postinc2,postinc1
  8102  0172B0  EE22  F00D         	lfsr	2,_C+270	;volatile
  8103  0172B4  006F FF7B FFE6     	movff	postinc2,postinc1
  8104  0172BA  006F FF7B FFE6     	movff	postinc2,postinc1
  8105  0172C0  006F FF7B FFE6     	movff	postinc2,postinc1
  8106  0172C6  006F FF7B FFE6     	movff	postinc2,postinc1
  8107  0172CC  ECDB  F0DA         	call	___flsub	;wreg free
  8108  0172D0  0060  F007  FFE6   	movff	btemp,postinc1
  8109  0172D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8110  0172DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8111  0172E2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8112  0172E8  EE22  F01D         	lfsr	2,_C+286	;volatile
  8113  0172EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8114  0172F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8115  0172F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8116  0172FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8117  017304  EE22  F019         	lfsr	2,_C+282	;volatile
  8118  017308  006F FF7B FFE6     	movff	postinc2,postinc1
  8119  01730E  006F FF7B FFE6     	movff	postinc2,postinc1
  8120  017314  006F FF7B FFE6     	movff	postinc2,postinc1
  8121  01731A  006F FF7B FFE6     	movff	postinc2,postinc1
  8122  017320  ECDB  F0DA         	call	___flsub	;wreg free
  8123  017324  0060  F007  FFE6   	movff	btemp,postinc1
  8124  01732A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8125  017330  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8126  017336  0060  F013  FFE6   	movff	btemp+3,postinc1
  8127  01733C  EC9A  F0A6         	call	___fldiv	;wreg free
  8128  017340  0060  F007  FFE6   	movff	btemp,postinc1
  8129  017346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8130  01734C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8131  017352  0060  F013  FFE6   	movff	btemp+3,postinc1
  8132  017358  ECE3  F0D2         	call	_fabsf	;wreg free
  8133  01735C  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8134  017362  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8135  017368  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8136  01736E  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8137                           
  8138                           ;bsoc.c: 246:   set_load_relay_one(0);
  8139  017374  0E00               	movlw	0
  8140  017376  6EE6               	movwf	postinc1,c
  8141  017378  EC47  F0E0         	call	_set_load_relay_one	;wreg free
  8142                           
  8143                           ;bsoc.c: 247:   set_load_relay_two(0);
  8144  01737C  0E00               	movlw	0
  8145  01737E  6EE6               	movwf	postinc1,c
  8146  017380  EC3F  F0E0         	call	_set_load_relay_two	;wreg free
  8147                           
  8148                           ;bsoc.c: 248:   esr_state = 0;
  8149  017384  6A40               	clrf	esr_check@esr_state^0,c
  8150                           
  8151                           ;bsoc.c: 249:   return C.esr;
  8152  017386  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8153  01738C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8154  017392  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8155  017398  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8156  01739E  D01C               	goto	l2079
  8157  0173A0                     l10982:
  8158  0173A0  5040               	movf	esr_check@esr_state^0,w,c
  8159  0173A2  6E0B               	movwf	(btemp+10)^0,c
  8160  0173A4  6A0C               	clrf	(btemp+11)^0,c
  8161                           
  8162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8163                           ; Switch size 1, requested type "simple"
  8164                           ; Number of cases is 1, Range of values is 0 to 0
  8165                           ; switch strategies available:
  8166                           ; Name         Instructions Cycles
  8167                           ; simple_byte            4     3 (average)
  8168                           ;	Chosen strategy is simple_byte
  8169  0173A6  500C               	movf	(btemp+11)^0,w,c
  8170  0173A8  0A00               	xorlw	0	; case 0
  8171  0173AA  A4D8               	btfss	status,2,c
  8172  0173AC  D00D               	goto	l10984
  8173                           
  8174                           ; Switch size 1, requested type "simple"
  8175                           ; Number of cases is 4, Range of values is 0 to 3
  8176                           ; switch strategies available:
  8177                           ; Name         Instructions Cycles
  8178                           ; simple_byte           13     7 (average)
  8179                           ;	Chosen strategy is simple_byte
  8180  0173AE  500B               	movf	(btemp+10)^0,w,c
  8181  0173B0  0A00               	xorlw	0	; case 0
  8182  0173B2  B4D8               	btfsc	status,2,c
  8183  0173B4  D6B8               	goto	l10914
  8184  0173B6  0A01               	xorlw	1	; case 1
  8185  0173B8  B4D8               	btfsc	status,2,c
  8186  0173BA  D6BF               	goto	l10918
  8187  0173BC  0A03               	xorlw	3	; case 2
  8188  0173BE  B4D8               	btfsc	status,2,c
  8189  0173C0  D6EF               	goto	l10934
  8190  0173C2  0A01               	xorlw	1	; case 3
  8191  0173C4  B4D8               	btfsc	status,2,c
  8192  0173C6  D72D               	goto	l10952
  8193  0173C8                     l10984:
  8194                           
  8195                           ;bsoc.c: 254:  return -1.0;
  8196  0173C8  0E00               	movlw	0
  8197  0173CA  6E01               	movwf	btemp^0,c
  8198  0173CC  0E00               	movlw	0
  8199  0173CE  6E02               	movwf	(btemp+1)^0,c
  8200  0173D0  0E80               	movlw	128
  8201  0173D2  6E03               	movwf	(btemp+2)^0,c
  8202  0173D4  0EBF               	movlw	191
  8203  0173D6                     L5:
  8204  0173D6  6E04               	movwf	(btemp+3)^0,c
  8205  0173D8                     l2079:
  8206                           
  8207                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8208  0173D8  52E5               	movf	postdec1,f,c
  8209  0173DA  0012               	return		;funcret
  8210  0173DC                     __end_of_esr_check:
  8211                           	opt callstack 0
  8212                           
  8213 ;; *************** function _update_adc_result *****************
  8214 ;; Defined at:
  8215 ;;		line 74 in file "daq.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1  [STACK] _Bool 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8233 ;;Total ram usage:        0 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:   17
  8236 ;; This function calls:
  8237 ;;		_StartTimer
  8238 ;;		_TimerDone
  8239 ;;		_check_adc_scan
  8240 ;;		_clear_adc_scan
  8241 ;;		_start_adc_scan
  8242 ;; This function is called by:
  8243 ;;		_esr_check
  8244 ;; This function uses a reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text18
  8248  01B842                     __ptext18:
  8249                           	opt callstack 0
  8250  01B842                     _update_adc_result:
  8251                           	opt callstack 12
  8252                           
  8253                           ;daq.c: 76:  if (R.done) {
  8254                           
  8255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8256                           ;incstack = 0
  8257  01B842  0101               	movlb	1	; () banked
  8258  01B844  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8259  01B846  B4D8               	btfsc	status,2,c
  8260  01B848  0012               	return	
  8261                           
  8262                           ; BSR set to: 1
  8263                           ;daq.c: 77:   clear_adc_scan();
  8264  01B84A  ECBB  F0E0         	call	_clear_adc_scan	;wreg free
  8265                           
  8266                           ; BSR set to: 1
  8267                           ;daq.c: 78:   start_adc_scan();
  8268  01B84E  EC1A  F0D8         	call	_start_adc_scan	;wreg free
  8269                           
  8270                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8271  01B852  0EC8               	movlw	200
  8272  01B854  6EE6               	movwf	postinc1,c
  8273  01B856  0E00               	movlw	0
  8274  01B858  6EE6               	movwf	postinc1,c
  8275  01B85A  0E01               	movlw	1
  8276  01B85C  6EE6               	movwf	postinc1,c
  8277  01B85E  EC81  F0DB         	call	_StartTimer	;wreg free
  8278  01B862                     l10502:
  8279  01B862  0E01               	movlw	1
  8280  01B864  6EE6               	movwf	postinc1,c
  8281  01B866  ECA7  F0DD         	call	_TimerDone	;wreg free
  8282  01B86A  5001               	movf	btemp^0,w,c
  8283  01B86C  A4D8               	btfss	status,2,c
  8284  01B86E  0012               	return	
  8285  01B870  ECAB  F0E0         	call	_check_adc_scan	;wreg free
  8286  01B874  5001               	movf	btemp^0,w,c
  8287  01B876  A4D8               	btfss	status,2,c
  8288  01B878  0012               	return	
  8289  01B87A  D7F3               	goto	l10502
  8290  01B87C                     __end_of_update_adc_result:
  8291                           	opt callstack 0
  8292                           
  8293 ;; *************** function _start_adc_scan *****************
  8294 ;; Defined at:
  8295 ;;		line 35 in file "daq.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1  [STACK] _Bool 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:   16
  8316 ;; This function calls:
  8317 ;;		_ADCC_DischargeSampleCapacitor
  8318 ;;		_ADCC_SetADIInterruptHandler
  8319 ;;		_ADCC_SetADTIInterruptHandler
  8320 ;;		_ADCC_StartConversion
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;;		_update_adc_result
  8324 ;; This function uses a reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text19
  8328  01B034                     __ptext19:
  8329                           	opt callstack 0
  8330  01B034                     _start_adc_scan:
  8331                           	opt callstack 14
  8332                           
  8333                           ;daq.c: 37:  if (R.done)
  8334                           
  8335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8336                           ;incstack = 0
  8337  01B034  0101               	movlb	1	; () banked
  8338  01B036  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8339  01B038  A4D8               	btfss	status,2,c
  8340  01B03A  0012               	return	
  8341                           
  8342                           ; BSR set to: 1
  8343                           ;daq.c: 40:  R.scan_index = 0;
  8344  01B03C  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8345                           
  8346                           ; BSR set to: 1
  8347                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8348  01B03E  013A               	movlb	58	; () banked
  8349  01B040  5140               	movf	64,w,b	;volatile
  8350  01B042  006E F940  F001    	movff	14928,btemp	;volatile
  8351  01B048  6A02               	clrf	(btemp+1)^0,c
  8352  01B04A  0060  F004  F002   	movff	btemp,btemp+1
  8353  01B050  6A01               	clrf	btemp^0,c
  8354  01B052  2601               	addwf	btemp^0,f,c
  8355  01B054  0E00               	movlw	0
  8356  01B056  2202               	addwfc	(btemp+1)^0,f,c
  8357  01B058  0E77               	movlw	119
  8358  01B05A  1401               	andwf	btemp^0,w,c
  8359  01B05C  0101               	movlb	1	; () banked
  8360  01B05E  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8361  01B060  0E3C               	movlw	60
  8362  01B062  1402               	andwf	(btemp+1)^0,w,c
  8363  01B064  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8364                           
  8365                           ; BSR set to: 1
  8366                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8367  01B066  0E9E               	movlw	low _adc_int_handler
  8368  01B068  6EE6               	movwf	postinc1,c
  8369  01B06A  0EC1               	movlw	high _adc_int_handler
  8370  01B06C  6EE6               	movwf	postinc1,c
  8371  01B06E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8372  01B070  6EE6               	movwf	postinc1,c
  8373  01B072  EC6F  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8374                           
  8375                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8376  01B076  0E96               	movlw	low _adc_int_t_handler
  8377  01B078  6EE6               	movwf	postinc1,c
  8378  01B07A  0EAD               	movlw	high _adc_int_t_handler
  8379  01B07C  6EE6               	movwf	postinc1,c
  8380  01B07E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8381  01B080  6EE6               	movwf	postinc1,c
  8382  01B082  EC5B  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8383                           
  8384                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8385  01B086  ECA7  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8386                           
  8387                           ; BSR set to: 62
  8388                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8389  01B08A  0101               	movlb	1	; () banked
  8390  01B08C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8391  01B08E  0B0F               	andlw	15
  8392  01B090  6EE6               	movwf	postinc1,c
  8393  01B092  EC36  F0E0         	call	_ADCC_StartConversion	;wreg free
  8394                           
  8395                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8396  01B096  0012               	return		;funcret
  8397  01B098                     __end_of_start_adc_scan:
  8398                           	opt callstack 0
  8399                           
  8400 ;; *************** function _ADCC_StartConversion *****************
  8401 ;; Defined at:
  8402 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  channel         1  [STACK] enum E16136
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1  [STACK] void 
  8409 ;; Registers used:
  8410 ;;		fsr1l, fsr1h
  8411 ;; Tracked objects:
  8412 ;;		On entry : 3F/1
  8413 ;;		On exit  : 3F/3E
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:   15
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_start_adc_scan
  8427 ;;		_adc_int_t_handler
  8428 ;; This function uses a reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text20
  8432  01C06C                     __ptext20:
  8433                           	opt callstack 0
  8434  01C06C                     _ADCC_StartConversion:
  8435                           	opt callstack 0
  8436                           
  8437                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8438                           ;stkvar	_channel @ sp[(0)+-1]
  8439                           
  8440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8441                           ;incstack = 0
  8442 ;; hardware stack exceeded
  8443  01C06C  0EFF               	movlw	-1
  8444  01C06E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8445                           
  8446                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8447  01C074  013E               	movlb	62	; () banked
  8448  01C076  8FF8               	bsf	248,7,b	;volatile
  8449                           
  8450                           ; BSR set to: 62
  8451                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8452  01C078  81F8               	bsf	248,0,b	;volatile
  8453                           
  8454                           ; BSR set to: 62
  8455                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8456  01C07A  52E5               	movf	postdec1,f,c
  8457  01C07C  0012               	return		;funcret
  8458  01C07E                     __end_of_ADCC_StartConversion:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8462 ;; Defined at:
  8463 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1  [STACK] void 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/1
  8474 ;;		On exit  : 3F/3E
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:   15
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_start_adc_scan
  8488 ;;		_adc_int_t_handler
  8489 ;; This function uses a reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text21
  8493  01C14E                     __ptext21:
  8494                           	opt callstack 0
  8495  01C14E                     _ADCC_DischargeSampleCapacitor:
  8496                           	opt callstack 0
  8497                           
  8498                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8499                           
  8500                           ; BSR set to: 62
  8501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8502                           ;incstack = 0
  8503 ;; hardware stack exceeded
  8504  01C14E  0E3B               	movlw	59
  8505  01C150  013E               	movlb	62	; () banked
  8506  01C152  6FF1               	movwf	241,b	;volatile
  8507                           
  8508                           ; BSR set to: 62
  8509                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8510  01C154  0012               	return		;funcret
  8511  01C156                     __end_of_ADCC_DischargeSampleCapacitor:
  8512                           	opt callstack 0
  8513                           
  8514 ;; *************** function _clear_adc_scan *****************
  8515 ;; Defined at:
  8516 ;;		line 66 in file "daq.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;		None
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1  [STACK] void 
  8523 ;; Registers used:
  8524 ;;		None
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 3F/1
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;Total ram usage:        0 bytes
  8535 ;; Hardware stack levels used:    1
  8536 ;; Hardware stack levels required when called:   15
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		_main
  8541 ;;		_update_adc_result
  8542 ;; This function uses a reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text22
  8546  01C176                     __ptext22:
  8547                           	opt callstack 0
  8548  01C176                     _clear_adc_scan:
  8549                           	opt callstack 13
  8550                           
  8551                           ;daq.c: 68:  R.done = 0;
  8552                           
  8553                           ; BSR set to: 62
  8554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8555                           ;incstack = 0
  8556  01C176  0101               	movlb	1	; () banked
  8557  01C178  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8558                           
  8559                           ; BSR set to: 1
  8560                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8561  01C17A  0012               	return		;funcret
  8562  01C17C                     __end_of_clear_adc_scan:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _check_adc_scan *****************
  8566 ;; Defined at:
  8567 ;;		line 58 in file "daq.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;		None
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1  [STACK] _Bool 
  8574 ;; Registers used:
  8575 ;;		btemp
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/1
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;Total ram usage:        0 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:   15
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_main
  8592 ;;		_update_adc_result
  8593 ;; This function uses a reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text23
  8597  01C156                     __ptext23:
  8598                           	opt callstack 0
  8599  01C156                     _check_adc_scan:
  8600                           	opt callstack 13
  8601                           
  8602                           ;daq.c: 60:  return R.done;
  8603                           
  8604                           ; BSR set to: 1
  8605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8606                           ;incstack = 0
  8607  01C156  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8608                           
  8609                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8610  01C15C  0012               	return		;funcret
  8611  01C15E                     __end_of_check_adc_scan:
  8612                           	opt callstack 0
  8613                           
  8614 ;; *************** function _set_load_relay_two *****************
  8615 ;; Defined at:
  8616 ;;		line 130 in file "mbmc.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  mode            1  [STACK] _Bool 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1  [STACK] void 
  8623 ;; Registers used:
  8624 ;;		wreg, fsr1l, fsr1h
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8634 ;;Total ram usage:        0 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:   15
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_main
  8641 ;;		_esr_check
  8642 ;; This function uses a reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text24
  8646  01C07E                     __ptext24:
  8647                           	opt callstack 0
  8648  01C07E                     _set_load_relay_two:
  8649                           	opt callstack 15
  8650                           
  8651                           ;mbmc.c: 130: void set_load_relay_two(_Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LATDbits.
      +                          LATD5 = mode;
  8652                           ;stkvar	_mode @ sp[(0)+-1]
  8653                           
  8654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8655                           ;incstack = 0
  8656  01C07E  0EFF               	movlw	-1
  8657  01C080  B0E3               	btfsc	plusw1,0,c
  8658  01C082  D002               	bra	u9515
  8659  01C084  9ABD               	bcf	189,5,c	;volatile
  8660  01C086  D001               	bra	u9516
  8661  01C088                     u9515:
  8662  01C088  8ABD               	bsf	189,5,c	;volatile
  8663  01C08A                     u9516:
  8664                           
  8665                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8666  01C08A  52E5               	movf	postdec1,f,c
  8667  01C08C  0012               	return		;funcret
  8668  01C08E                     __end_of_set_load_relay_two:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _set_load_relay_one *****************
  8672 ;; Defined at:
  8673 ;;		line 125 in file "mbmc.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  mode            1  [STACK] _Bool 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1  [STACK] void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr1l, fsr1h
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:   15
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_main
  8698 ;;		_esr_check
  8699 ;; This function uses a reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text25
  8703  01C08E                     __ptext25:
  8704                           	opt callstack 0
  8705  01C08E                     _set_load_relay_one:
  8706                           	opt callstack 15
  8707                           
  8708                           ;mbmc.c: 125: void set_load_relay_one(_Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LATDbits.
      +                          LATD4 = mode;
  8709                           ;stkvar	_mode @ sp[(0)+-1]
  8710                           
  8711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8712                           ;incstack = 0
  8713  01C08E  0EFF               	movlw	-1
  8714  01C090  B0E3               	btfsc	plusw1,0,c
  8715  01C092  D002               	bra	u9505
  8716  01C094  98BD               	bcf	189,4,c	;volatile
  8717  01C096  D001               	bra	u9506
  8718  01C098                     u9505:
  8719  01C098  88BD               	bsf	189,4,c	;volatile
  8720  01C09A                     u9506:
  8721                           
  8722                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8723  01C09A  52E5               	movf	postdec1,f,c
  8724  01C09C  0012               	return		;funcret
  8725  01C09E                     __end_of_set_load_relay_one:
  8726                           	opt callstack 0
  8727                           
  8728 ;; *************** function _eaDogM_WriteCommand *****************
  8729 ;; Defined at:
  8730 ;;		line 385 in file "eadog.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  cmd             1  [STACK] const unsigned char 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1  [STACK] void 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8739 ;; Tracked objects:
  8740 ;;		On entry : 3F/3D
  8741 ;;		On exit  : 3F/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;Total ram usage:        0 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:   26
  8751 ;; This function calls:
  8752 ;;		_send_lcd_cmd_dma
  8753 ;; This function is called by:
  8754 ;;		_main
  8755 ;; This function uses a reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text26
  8759  01C0CC                     __ptext26:
  8760                           	opt callstack 0
  8761  01C0CC                     _eaDogM_WriteCommand:
  8762                           	opt callstack 4
  8763                           
  8764                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  8765                           ;stkvar	_cmd @ sp[(0)+-1]
  8766                           
  8767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8768                           ;incstack = 0
  8769  01C0CC  0EFF               	movlw	-1
  8770  01C0CE  50E3               	movf	plusw1,w,c
  8771  01C0D0  6EE6               	movwf	postinc1,c
  8772  01C0D2  EC8F  F0DF         	call	_send_lcd_cmd_dma	;wreg free
  8773                           
  8774                           ; BSR set to: 0
  8775                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8776  01C0D6  52E5               	movf	postdec1,f,c
  8777  01C0D8  0012               	return		;funcret
  8778  01C0DA                     __end_of_eaDogM_WriteCommand:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _convert_adc_data *****************
  8782 ;; Defined at:
  8783 ;;		line 51 in file "mbmc.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  i               1  [STACK] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1  [STACK] void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/1
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:   18
  8804 ;; This function calls:
  8805 ;;		_conv_raw_result
  8806 ;;		_lp_filter
  8807 ;; This function is called by:
  8808 ;;		_main
  8809 ;; This function uses a reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text27
  8813  01A50E                     __ptext27:
  8814                           	opt callstack 0
  8815  01A50E                     _convert_adc_data:
  8816                           	opt callstack 0
  8817                           
  8818                           ; BSR set to: 0
  8819                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8820  01A50E  52E6               	movf	postinc1,f,c
  8821                           
  8822                           ;mbmc.c: 53:  uint8_t i = 0;
  8823                           ;stkvar	_i @ sp[(-1)+0]
  8824                           
  8825                           ;incstack = 0
  8826  01A510  0EFF               	movlw	-1
  8827  01A512  6AE3               	clrf	plusw1,c
  8828  01A514                     l10994:
  8829                           
  8830                           ;mbmc.c: 56:   if (V.calib) {
  8831  01A514  0101               	movlb	1	; () banked
  8832  01A516  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8833  01A518  B4D8               	btfsc	status,2,c
  8834  01A51A  D01B               	goto	l10998
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8838  01A51C  0E01               	movlw	1
  8839  01A51E  6EE6               	movwf	postinc1,c
  8840                           
  8841                           ;stkvar	_i @ sp[(-2)+0]
  8842  01A520  0EFE               	movlw	-2
  8843  01A522  50E3               	movf	plusw1,w,c
  8844  01A524  6EE6               	movwf	postinc1,c
  8845  01A526  0E01               	movlw	1
  8846  01A528  6EE6               	movwf	postinc1,c
  8847                           
  8848                           ;stkvar	_i @ sp[(-4)+0]
  8849  01A52A  0EFC               	movlw	-4
  8850  01A52C  50E3               	movf	plusw1,w,c
  8851  01A52E  6EE6               	movwf	postinc1,c
  8852  01A530  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8853  01A534  0060  F007  FFE6   	movff	btemp,postinc1
  8854  01A53A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8855  01A540  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8856  01A546  0060  F013  FFE6   	movff	btemp+3,postinc1
  8857  01A54C  EC25  F0C3         	call	_lp_filter	;wreg free
  8858  01A550  D01A               	goto	L8
  8859  01A552                     l10998:
  8860                           
  8861                           ; BSR set to: 1
  8862                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8863  01A552  0E00               	movlw	0
  8864  01A554  6EE6               	movwf	postinc1,c
  8865                           
  8866                           ;stkvar	_i @ sp[(-2)+0]
  8867  01A556  0EFE               	movlw	-2
  8868  01A558  50E3               	movf	plusw1,w,c
  8869  01A55A  6EE6               	movwf	postinc1,c
  8870  01A55C  0E00               	movlw	0
  8871  01A55E  6EE6               	movwf	postinc1,c
  8872                           
  8873                           ;stkvar	_i @ sp[(-4)+0]
  8874  01A560  0EFC               	movlw	-4
  8875  01A562  50E3               	movf	plusw1,w,c
  8876  01A564  6EE6               	movwf	postinc1,c
  8877  01A566  EC57  F0A9         	call	_conv_raw_result	;wreg free
  8878  01A56A  0060  F007  FFE6   	movff	btemp,postinc1
  8879  01A570  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8880  01A576  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8881  01A57C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8882  01A582  EC25  F0C3         	call	_lp_filter	;wreg free
  8883  01A586                     L8:
  8884                           
  8885                           ;stkvar	_i @ sp[(-1)+0]
  8886  01A586  0EFF               	movlw	-1
  8887  01A588  50E3               	movf	plusw1,w,c
  8888  01A58A  0D04               	mullw	4
  8889  01A58C  0EFF               	movlw	low _C
  8890  01A58E  24F3               	addwf	243,w,c
  8891  01A590  6ED9               	movwf	fsr2l,c
  8892  01A592  0E06               	movlw	high _C
  8893  01A594  20F4               	addwfc	prodh,w,c
  8894  01A596  6EDA               	movwf	fsr2h,c
  8895  01A598  0060  F007  FFDE   	movff	btemp,postinc2
  8896  01A59E  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8897  01A5A4  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8898  01A5AA  0060  F013  FFDE   	movff	btemp+3,postinc2
  8899                           
  8900                           ;mbmc.c: 61:  } while (++i < 16);
  8901                           ;stkvar	_i @ sp[(-1)+0]
  8902  01A5B0  0EFF               	movlw	-1
  8903  01A5B2  2AE3               	incf	plusw1,f,c
  8904  01A5B4  0EFF               	movlw	-1
  8905  01A5B6  006F FF8C  F001    	movff	plusw1,btemp
  8906  01A5BC  0E0F               	movlw	15
  8907  01A5BE  6401               	cpfsgt	btemp^0,c
  8908  01A5C0  D7A9               	goto	l10994
  8909                           
  8910                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8911  01A5C2  52E5               	movf	postdec1,f,c
  8912  01A5C4  0012               	return		;funcret
  8913  01A5C6                     __end_of_convert_adc_data:
  8914                           	opt callstack 0
  8915                           
  8916 ;; *************** function _clear_hid_pflags *****************
  8917 ;; Defined at:
  8918 ;;		line 51 in file "hid.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  h               1  [STACK] PTR struct H_data
  8921 ;;		 -> H(7), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1  [STACK] void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8928 ;; Tracked objects:
  8929 ;;		On entry : 3F/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;Total ram usage:        0 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   15
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_main
  8944 ;; This function uses a reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text28
  8948  01BDA4                     __ptext28:
  8949                           	opt callstack 0
  8950  01BDA4                     _clear_hid_pflags:
  8951                           	opt callstack 15
  8952                           
  8953                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8954                           ;stkvar	_h @ sp[(0)+-1]
  8955                           
  8956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8957                           ;incstack = 0
  8958  01BDA4  0EFF               	movlw	-1
  8959  01BDA6  50E3               	movf	plusw1,w,c
  8960  01BDA8  6ED9               	movwf	fsr2l,c
  8961  01BDAA  6ADA               	clrf	fsr2h,c
  8962  01BDAC  0E03               	movlw	3
  8963  01BDAE  26D9               	addwf	fsr2l,f,c
  8964  01BDB0  0E00               	movlw	0
  8965  01BDB2  6EDF               	movwf	indf2,c
  8966                           
  8967                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8968                           ;stkvar	_h @ sp[(0)+-1]
  8969  01BDB4  0EFF               	movlw	-1
  8970  01BDB6  50E3               	movf	plusw1,w,c
  8971  01BDB8  6ED9               	movwf	fsr2l,c
  8972  01BDBA  6ADA               	clrf	fsr2h,c
  8973  01BDBC  0E05               	movlw	5
  8974  01BDBE  26D9               	addwf	fsr2l,f,c
  8975  01BDC0  0E00               	movlw	0
  8976  01BDC2  6EDF               	movwf	indf2,c
  8977                           
  8978                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8979  01BDC4  52E5               	movf	postdec1,f,c
  8980  01BDC6  0012               	return		;funcret
  8981  01BDC8                     __end_of_clear_hid_pflags:
  8982                           	opt callstack 0
  8983                           
  8984 ;; *************** function _check_help *****************
  8985 ;; Defined at:
  8986 ;;		line 40 in file "mconfig.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  flipper         1  [STACK] const _Bool 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  estatus         1    0        _Bool 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1  [STACK] _Bool 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8995 ;; Tracked objects:
  8996 ;;		On entry : 3F/1
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:   28
  9007 ;; This function calls:
  9008 ;;		_StartTimer
  9009 ;;		_TimerDone
  9010 ;;		_display_help
  9011 ;;		_display_info
  9012 ;;		_get_vterm_ptr
  9013 ;;		_help_button
  9014 ;;		_mode_lamp_bright
  9015 ;;		_mode_lamp_dim
  9016 ;;		_set_display_info
  9017 ;;		_set_temp_display_help
  9018 ;;		_set_vterm
  9019 ;;		_sprintf
  9020 ;;		_update_lcd
  9021 ;;		_vterm_dump
  9022 ;; This function is called by:
  9023 ;;		_main
  9024 ;; This function uses a reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text29
  9028  018234                     __ptext29:
  9029                           	opt callstack 0
  9030  018234                     _check_help:
  9031                           	opt callstack 2
  9032                           
  9033                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9034                           
  9035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9036                           ;incstack = 0
  9037  018234  EC3E  F0DC         	call	_help_button	;wreg free
  9038  018238  5001               	movf	btemp^0,w,c
  9039  01823A  B4D8               	btfsc	status,2,c
  9040  01823C  D0D0               	goto	l12988
  9041  01823E  ECAF  F0E0         	call	_display_info	;wreg free
  9042  018242  0401               	decf	btemp^0,w,c
  9043  018244  B4D8               	btfsc	status,2,c
  9044  018246  D0CB               	goto	l12988
  9045                           
  9046                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9047  018248  0EDC               	movlw	220
  9048  01824A  6EE6               	movwf	postinc1,c
  9049  01824C  0E05               	movlw	5
  9050  01824E  6EE6               	movwf	postinc1,c
  9051  018250  0E0B               	movlw	11
  9052  018252  6EE6               	movwf	postinc1,c
  9053  018254  EC81  F0DB         	call	_StartTimer	;wreg free
  9054                           
  9055                           ;mconfig.c: 48:   if (V.debug)
  9056  018258  0101               	movlb	1	; () banked
  9057  01825A  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;mconfig.c: 49:    vterm_dump();
  9061  01825C  EC25  F0CB         	call	_vterm_dump	;wreg free
  9062                           
  9063                           ;mconfig.c: 51:   set_vterm(1);
  9064  018260  0E01               	movlw	1
  9065  018262  6EE6               	movwf	postinc1,c
  9066  018264  EC9E  F0DF         	call	_set_vterm	;wreg free
  9067                           
  9068                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9069  018268  ECAF  F0E0         	call	_display_info	;wreg free
  9070  01826C  5001               	movf	btemp^0,w,c
  9071  01826E  6EE6               	movwf	postinc1,c
  9072  018270  EC4F  F0E0         	call	_set_temp_display_help	;wreg free
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9076  018274  0E01               	movlw	1
  9077  018276  6EE6               	movwf	postinc1,c
  9078  018278  ECAD  F0DF         	call	_set_display_info	;wreg free
  9079                           
  9080                           ;mconfig.c: 54:   if (flipper) {
  9081                           ;stkvar	_flipper @ sp[(0)+-1]
  9082  01827C  0EFF               	movlw	-1
  9083  01827E  50E3               	movf	plusw1,w,c
  9084  018280  B4D8               	btfsc	status,2,c
  9085  018282  D019               	goto	l12974
  9086                           
  9087                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9088  018284  0EB3               	movlw	low STR_45
  9089  018286  6EE6               	movwf	postinc1,c
  9090  018288  0EFF               	movlw	high STR_45
  9091  01828A  6EE6               	movwf	postinc1,c
  9092  01828C  0E9F               	movlw	low STR_47
  9093  01828E  6EE6               	movwf	postinc1,c
  9094  018290  0EFE               	movlw	high STR_47
  9095  018292  6EE6               	movwf	postinc1,c
  9096  018294  0E01               	movlw	1
  9097  018296  6EE6               	movwf	postinc1,c
  9098  018298  0E00               	movlw	0
  9099  01829A  6EE6               	movwf	postinc1,c
  9100  01829C  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9101  0182A0  0060  F007  FFE6   	movff	btemp,postinc1
  9102  0182A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9103  0182AC  0E06               	movlw	6
  9104  0182AE  6EE6               	movwf	postinc1,c
  9105  0182B0  EC79  F0CE         	call	_sprintf	;wreg free
  9106                           
  9107                           ;mconfig.c: 56:   } else {
  9108  0182B4  D018               	goto	l1671
  9109  0182B6                     l12974:
  9110                           
  9111                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9112  0182B6  0EC9               	movlw	low STR_46
  9113  0182B8  6EE6               	movwf	postinc1,c
  9114  0182BA  0EFF               	movlw	high STR_46
  9115  0182BC  6EE6               	movwf	postinc1,c
  9116  0182BE  0E9F               	movlw	low STR_47
  9117  0182C0  6EE6               	movwf	postinc1,c
  9118  0182C2  0EFE               	movlw	high STR_47
  9119  0182C4  6EE6               	movwf	postinc1,c
  9120  0182C6  0E01               	movlw	1
  9121  0182C8  6EE6               	movwf	postinc1,c
  9122  0182CA  0E00               	movlw	0
  9123  0182CC  6EE6               	movwf	postinc1,c
  9124  0182CE  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9125  0182D2  0060  F007  FFE6   	movff	btemp,postinc1
  9126  0182D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9127  0182DE  0E06               	movlw	6
  9128  0182E0  6EE6               	movwf	postinc1,c
  9129  0182E2  EC79  F0CE         	call	_sprintf	;wreg free
  9130  0182E6                     l1671:
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9134  0182E6  0101               	movlb	1	; () banked
  9135  0182E8  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9136  0182EA  32E8               	rrcf	wreg,f,c
  9137  0182EC  32E8               	rrcf	wreg,f,c
  9138  0182EE  0B03               	andlw	3
  9139  0182F0  0D24               	mullw	36
  9140  0182F2  0E12               	movlw	18
  9141  0182F4  26F3               	addwf	243,f,c
  9142  0182F6  0E00               	movlw	0
  9143  0182F8  22F4               	addwfc	244,f,c
  9144  0182FA  0E05               	movlw	low _T
  9145  0182FC  6E0B               	movwf	(btemp+10)^0,c
  9146  0182FE  0EFB               	movlw	high _T
  9147  018300  6E0C               	movwf	(btemp+11)^0,c
  9148  018302  50F3               	movf	243,w,c
  9149  018304  260B               	addwf	(btemp+10)^0,f,c
  9150  018306  50F4               	movf	244,w,c
  9151  018308  220C               	addwfc	(btemp+11)^0,f,c
  9152  01830A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9153  018310  0060  F033  FFE6   	movff	btemp+11,postinc1
  9154  018316  0EBF               	movlw	low STR_49
  9155  018318  6EE6               	movwf	postinc1,c
  9156  01831A  0EFF               	movlw	high STR_49
  9157  01831C  6EE6               	movwf	postinc1,c
  9158  01831E  0E01               	movlw	1
  9159  018320  6EE6               	movwf	postinc1,c
  9160  018322  0E01               	movlw	1
  9161  018324  6EE6               	movwf	postinc1,c
  9162  018326  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9163  01832A  0060  F007  FFE6   	movff	btemp,postinc1
  9164  018330  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9165  018336  0E06               	movlw	6
  9166  018338  6EE6               	movwf	postinc1,c
  9167  01833A  EC79  F0CE         	call	_sprintf	;wreg free
  9168                           
  9169                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9170  01833E  0101               	movlb	1	; () banked
  9171  018340  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9172  018342  32E8               	rrcf	wreg,f,c
  9173  018344  32E8               	rrcf	wreg,f,c
  9174  018346  0B03               	andlw	3
  9175  018348  0D24               	mullw	36
  9176  01834A  0E05               	movlw	low _T
  9177  01834C  6E0B               	movwf	(btemp+10)^0,c
  9178  01834E  0EFB               	movlw	high _T
  9179  018350  6E0C               	movwf	(btemp+11)^0,c
  9180  018352  50F3               	movf	243,w,c
  9181  018354  260B               	addwf	(btemp+10)^0,f,c
  9182  018356  50F4               	movf	244,w,c
  9183  018358  220C               	addwfc	(btemp+11)^0,f,c
  9184  01835A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9185  018360  0060  F033  FFE6   	movff	btemp+11,postinc1
  9186  018366  0EBF               	movlw	low STR_49
  9187  018368  6EE6               	movwf	postinc1,c
  9188  01836A  0EFF               	movlw	high STR_49
  9189  01836C  6EE6               	movwf	postinc1,c
  9190  01836E  0E01               	movlw	1
  9191  018370  6EE6               	movwf	postinc1,c
  9192  018372  0E02               	movlw	2
  9193  018374  6EE6               	movwf	postinc1,c
  9194  018376  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9195  01837A  0060  F007  FFE6   	movff	btemp,postinc1
  9196  018380  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9197  018386  0E06               	movlw	6
  9198  018388  6EE6               	movwf	postinc1,c
  9199  01838A  EC79  F0CE         	call	_sprintf	;wreg free
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;mconfig.c: 61:   V.help_id++;
  9203  01838E  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9204  018392  38DF               	swapf	223,w,c
  9205  018394  6E0C               	movwf	(btemp+11)^0,c
  9206  018396  320C               	rrcf	(btemp+11)^0,f,c
  9207  018398  300C               	rrcf	(btemp+11)^0,w,c
  9208  01839A  0B03               	andlw	3
  9209  01839C  6E0C               	movwf	(btemp+11)^0,c
  9210  01839E  2A0C               	incf	(btemp+11)^0,f,c
  9211  0183A0  3A0C               	swapf	(btemp+11)^0,f,c
  9212  0183A2  360C               	rlcf	(btemp+11)^0,f,c
  9213  0183A4  360C               	rlcf	(btemp+11)^0,f,c
  9214  0183A6  50DF               	movf	223,w,c
  9215  0183A8  180C               	xorwf	(btemp+11)^0,w,c
  9216  0183AA  0B3F               	andlw	-193
  9217  0183AC  180C               	xorwf	(btemp+11)^0,w,c
  9218  0183AE  6EDF               	movwf	223,c
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9222  0183B0  0EB8               	movlw	184
  9223  0183B2  6EE6               	movwf	postinc1,c
  9224  0183B4  0E0B               	movlw	11
  9225  0183B6  6EE6               	movwf	postinc1,c
  9226  0183B8  0E09               	movlw	9
  9227  0183BA  6EE6               	movwf	postinc1,c
  9228  0183BC  EC81  F0DB         	call	_StartTimer	;wreg free
  9229                           
  9230                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9231  0183C0  0EB8               	movlw	184
  9232  0183C2  6EE6               	movwf	postinc1,c
  9233  0183C4  0E0B               	movlw	11
  9234  0183C6  6EE6               	movwf	postinc1,c
  9235  0183C8  0E07               	movlw	7
  9236  0183CA  6EE6               	movwf	postinc1,c
  9237  0183CC  EC81  F0DB         	call	_StartTimer	;wreg free
  9238                           
  9239                           ;mconfig.c: 64:   mode_lamp_bright();
  9240  0183D0  EC6D  F0E0         	call	_mode_lamp_bright	;wreg free
  9241                           
  9242                           ;mconfig.c: 65:   update_lcd(1);
  9243  0183D4  0E01               	movlw	1
  9244  0183D6  6EE6               	movwf	postinc1,c
  9245  0183D8  ECF1  F0CD         	call	_update_lcd	;wreg free
  9246                           
  9247                           ;mconfig.c: 67:  } else {
  9248  0183DC  D032               	goto	l1672
  9249  0183DE                     l12988:
  9250                           
  9251                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9252  0183DE  0E09               	movlw	9
  9253  0183E0  6EE6               	movwf	postinc1,c
  9254  0183E2  ECA7  F0DD         	call	_TimerDone	;wreg free
  9255  0183E6  5001               	movf	btemp^0,w,c
  9256  0183E8  B4D8               	btfsc	status,2,c
  9257  0183EA  D02B               	goto	l1672
  9258                           
  9259                           ;mconfig.c: 69:    set_vterm(0);
  9260  0183EC  0E00               	movlw	0
  9261  0183EE  6EE6               	movwf	postinc1,c
  9262  0183F0  EC9E  F0DF         	call	_set_vterm	;wreg free
  9263                           
  9264                           ;mconfig.c: 70:    V.help = 0;
  9265  0183F4  0101               	movlb	1	; () banked
  9266  0183F6  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9267                           
  9268                           ; BSR set to: 1
  9269                           ;mconfig.c: 71:    set_display_info(display_help());
  9270  0183F8  ECB3  F0E0         	call	_display_help	;wreg free
  9271  0183FC  5001               	movf	btemp^0,w,c
  9272  0183FE  6EE6               	movwf	postinc1,c
  9273  018400  ECAD  F0DF         	call	_set_display_info	;wreg free
  9274                           
  9275                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9276  018404  0060  F717  FFE6   	movff	_V+149,postinc1
  9277  01840A  0060  F71B  FFE6   	movff	_V+150,postinc1
  9278  018410  ECF3  F0DF         	call	_mode_lamp_dim	;wreg free
  9279                           
  9280                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9281  018414  0E0B               	movlw	11
  9282  018416  6EE6               	movwf	postinc1,c
  9283  018418  ECA7  F0DD         	call	_TimerDone	;wreg free
  9284  01841C  5001               	movf	btemp^0,w,c
  9285  01841E  B4D8               	btfsc	status,2,c
  9286  018420  D010               	goto	l1672
  9287                           
  9288                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9289  018422  0101               	movlb	1	; () banked
  9290  018424  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9291  018426  A4D8               	btfss	status,2,c
  9292  018428  D002               	goto	u12540
  9293  01842A  0E01               	movlw	1
  9294  01842C  D001               	goto	u12550
  9295  01842E                     u12540:
  9296  01842E  0E00               	movlw	0
  9297  018430                     u12550:
  9298  018430  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9299                           
  9300                           ; BSR set to: 1
  9301                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9302  018432  0EDC               	movlw	220
  9303  018434  6EE6               	movwf	postinc1,c
  9304  018436  0E05               	movlw	5
  9305  018438  6EE6               	movwf	postinc1,c
  9306  01843A  0E0B               	movlw	11
  9307  01843C  6EE6               	movwf	postinc1,c
  9308  01843E  EC81  F0DB         	call	_StartTimer	;wreg free
  9309  018442                     l1672:
  9310                           
  9311                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9312  018442  52E5               	movf	postdec1,f,c
  9313  018444  0012               	return		;funcret
  9314  018446                     __end_of_check_help:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function _vterm_dump *****************
  9318 ;; Defined at:
  9319 ;;		line 121 in file "mconfig.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1  [STACK] void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9328 ;; Tracked objects:
  9329 ;;		On entry : 3F/1
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9337 ;;Total ram usage:        0 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:   27
  9340 ;; This function calls:
  9341 ;;		_WaitMs
  9342 ;;		_eaDogM_WriteStringAtPos
  9343 ;;		_get_vterm_ptr
  9344 ;;		_sprintf
  9345 ;;		_wait_lcd_done
  9346 ;; This function is called by:
  9347 ;;		_check_help
  9348 ;; This function uses a reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text30
  9352  01964A                     __ptext30:
  9353                           	opt callstack 0
  9354  01964A                     _vterm_dump:
  9355                           	opt callstack 2
  9356                           
  9357                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9358                           
  9359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9360                           ;incstack = 0
  9361  01964A  0E01               	movlw	1
  9362  01964C  6EE6               	movwf	postinc1,c
  9363  01964E  0E00               	movlw	0
  9364  019650  6EE6               	movwf	postinc1,c
  9365  019652  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9366  019656  0060  F007  FFE6   	movff	btemp,postinc1
  9367  01965C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9368  019662  0E00               	movlw	0
  9369  019664  6EE6               	movwf	postinc1,c
  9370  019666  0E00               	movlw	0
  9371  019668  6EE6               	movwf	postinc1,c
  9372  01966A  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9373  01966E  0060  F007  FFE6   	movff	btemp,postinc1
  9374  019674  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9375  01967A  0EA4               	movlw	low STR_51
  9376  01967C  6EE6               	movwf	postinc1,c
  9377  01967E  0EFF               	movlw	high STR_51
  9378  019680  6EE6               	movwf	postinc1,c
  9379  019682  0E31               	movlw	low (_V+1)
  9380  019684  6EE6               	movwf	postinc1,c
  9381  019686  0E01               	movlw	high (_V+1)
  9382  019688  6EE6               	movwf	postinc1,c
  9383  01968A  0E08               	movlw	8
  9384  01968C  6EE6               	movwf	postinc1,c
  9385  01968E  EC79  F0CE         	call	_sprintf	;wreg free
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;mconfig.c: 124:  wait_lcd_done();
  9389  019692  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9393  019696  0E31               	movlw	low (_V+1)
  9394  019698  6EE6               	movwf	postinc1,c
  9395  01969A  0E01               	movlw	high (_V+1)
  9396  01969C  6EE6               	movwf	postinc1,c
  9397  01969E  0E00               	movlw	0
  9398  0196A0  6EE6               	movwf	postinc1,c
  9399  0196A2  0E00               	movlw	0
  9400  0196A4  6EE6               	movwf	postinc1,c
  9401  0196A6  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9402                           
  9403                           ; BSR set to: 59
  9404                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9405  0196AA  0E01               	movlw	1
  9406  0196AC  6EE6               	movwf	postinc1,c
  9407  0196AE  0E01               	movlw	1
  9408  0196B0  6EE6               	movwf	postinc1,c
  9409  0196B2  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9410  0196B6  0060  F007  FFE6   	movff	btemp,postinc1
  9411  0196BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9412  0196C2  0E00               	movlw	0
  9413  0196C4  6EE6               	movwf	postinc1,c
  9414  0196C6  0E01               	movlw	1
  9415  0196C8  6EE6               	movwf	postinc1,c
  9416  0196CA  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9417  0196CE  0060  F007  FFE6   	movff	btemp,postinc1
  9418  0196D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9419  0196DA  0EA4               	movlw	low STR_51
  9420  0196DC  6EE6               	movwf	postinc1,c
  9421  0196DE  0EFF               	movlw	high STR_51
  9422  0196E0  6EE6               	movwf	postinc1,c
  9423  0196E2  0E31               	movlw	low (_V+1)
  9424  0196E4  6EE6               	movwf	postinc1,c
  9425  0196E6  0E01               	movlw	high (_V+1)
  9426  0196E8  6EE6               	movwf	postinc1,c
  9427  0196EA  0E08               	movlw	8
  9428  0196EC  6EE6               	movwf	postinc1,c
  9429  0196EE  EC79  F0CE         	call	_sprintf	;wreg free
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;mconfig.c: 127:  wait_lcd_done();
  9433  0196F2  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
  9434                           
  9435                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9436  0196F6  0E31               	movlw	low (_V+1)
  9437  0196F8  6EE6               	movwf	postinc1,c
  9438  0196FA  0E01               	movlw	high (_V+1)
  9439  0196FC  6EE6               	movwf	postinc1,c
  9440  0196FE  0E00               	movlw	0
  9441  019700  6EE6               	movwf	postinc1,c
  9442  019702  0E01               	movlw	1
  9443  019704  6EE6               	movwf	postinc1,c
  9444  019706  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9445                           
  9446                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9447  01970A  0E01               	movlw	1
  9448  01970C  6EE6               	movwf	postinc1,c
  9449  01970E  0E02               	movlw	2
  9450  019710  6EE6               	movwf	postinc1,c
  9451  019712  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9452  019716  0060  F007  FFE6   	movff	btemp,postinc1
  9453  01971C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9454  019722  0E00               	movlw	0
  9455  019724  6EE6               	movwf	postinc1,c
  9456  019726  0E02               	movlw	2
  9457  019728  6EE6               	movwf	postinc1,c
  9458  01972A  EC25  F0DD         	call	_get_vterm_ptr	;wreg free
  9459  01972E  0060  F007  FFE6   	movff	btemp,postinc1
  9460  019734  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9461  01973A  0EA4               	movlw	low STR_51
  9462  01973C  6EE6               	movwf	postinc1,c
  9463  01973E  0EFF               	movlw	high STR_51
  9464  019740  6EE6               	movwf	postinc1,c
  9465  019742  0E31               	movlw	low (_V+1)
  9466  019744  6EE6               	movwf	postinc1,c
  9467  019746  0E01               	movlw	high (_V+1)
  9468  019748  6EE6               	movwf	postinc1,c
  9469  01974A  0E08               	movlw	8
  9470  01974C  6EE6               	movwf	postinc1,c
  9471  01974E  EC79  F0CE         	call	_sprintf	;wreg free
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;mconfig.c: 130:  wait_lcd_done();
  9475  019752  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9479  019756  0E31               	movlw	low (_V+1)
  9480  019758  6EE6               	movwf	postinc1,c
  9481  01975A  0E01               	movlw	high (_V+1)
  9482  01975C  6EE6               	movwf	postinc1,c
  9483  01975E  0E00               	movlw	0
  9484  019760  6EE6               	movwf	postinc1,c
  9485  019762  0E02               	movlw	2
  9486  019764  6EE6               	movwf	postinc1,c
  9487  019766  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9488                           
  9489                           ; BSR set to: 59
  9490                           ;mconfig.c: 132:  WaitMs(3000);
  9491  01976A  0EB8               	movlw	184
  9492  01976C  6EE6               	movwf	postinc1,c
  9493  01976E  0E0B               	movlw	11
  9494  019770  6EE6               	movwf	postinc1,c
  9495  019772  EC76  F0DC         	call	_WaitMs	;wreg free
  9496                           
  9497                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9498  019776  0012               	return		;funcret
  9499  019778                     __end_of_vterm_dump:
  9500                           	opt callstack 0
  9501                           
  9502 ;; *************** function _sprintf *****************
  9503 ;; Defined at:
  9504 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  s               2  [STACK] PTR unsigned char 
  9507 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9508 ;;  fmt             2  [STACK] PTR const unsigned char 
  9509 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
  9510 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
  9511 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
  9512 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
  9513 ;;		 -> STR_47(19), STR_42(17), STR_41(16), STR_40(16), 
  9514 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9515 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9516 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9517 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9518 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9519 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9520 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
  9521 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
  9522 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
  9523 ;;		 -> STR_2(21), STR_1(21), 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  f               6  [STACK] struct _IO_FILE
  9526 ;;  ap              2  [STACK] PTR void [1]
  9527 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9528 ;;  ret             2    0        int 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  2  [STACK] int 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 3F/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:   23
  9545 ;; This function calls:
  9546 ;;		_vfprintf
  9547 ;; This function is called by:
  9548 ;;		_main
  9549 ;;		_check_help
  9550 ;;		_vterm_dump
  9551 ;;		_calc_bsoc
  9552 ;; This function uses a reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text31
  9556  019CF2                     __ptext31:
  9557                           	opt callstack 0
  9558  019CF2                     _sprintf:
  9559                           	opt callstack 0
  9560                           
  9561                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9562  019CF2  0E08               	movlw	8
  9563  019CF4  26E1               	addwf	fsr1l,f,c
  9564  019CF6  0E00               	movlw	0
  9565  019CF8  22E2               	addwfc	fsr1h,f,c
  9566                           
  9567                           ;incstack = 0
  9568 ;; hardware stack exceeded
  9569  019CFA  0EFE               	movlw	254
  9570  019CFC  6E0B               	movwf	(btemp+10)^0,c
  9571  019CFE  0EFF               	movlw	255
  9572  019D00  6E0C               	movwf	(btemp+11)^0,c
  9573                           
  9574                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9575  019D02  0EF5               	movlw	245
  9576  019D04  24E1               	addwf	fsr1l,w,c
  9577  019D06  6E09               	movwf	(btemp+8)^0,c
  9578  019D08  0EFF               	movlw	255
  9579  019D0A  20E2               	addwfc	fsr1h,w,c
  9580  019D0C  6E0A               	movwf	(btemp+9)^0,c
  9581  019D0E  500B               	movf	(btemp+10)^0,w,c
  9582  019D10  2609               	addwf	(btemp+8)^0,f,c
  9583  019D12  500C               	movf	(btemp+11)^0,w,c
  9584  019D14  220A               	addwfc	(btemp+9)^0,f,c
  9585                           
  9586                           ;stkvar	_ap @ sp[(-8)+6]
  9587  019D16  0EFF               	movlw	-1
  9588  019D18  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9589  019D1E  0EFE               	movlw	-2
  9590  019D20  0060  F027  FFE3   	movff	btemp+8,plusw1
  9591                           
  9592                           ;stkvar	_s @ sp[(-8)+-3]
  9593  019D26  0EF5               	movlw	-11
  9594  019D28  006F FF8C  F00B    	movff	plusw1,btemp+10
  9595  019D2E  0EF6               	movlw	-10
  9596  019D30  006F FF8C  F00C    	movff	plusw1,btemp+11
  9597                           
  9598                           ;stkvar	_f @ sp[(-8)+0]
  9599  019D36  0EF9               	movlw	-7
  9600  019D38  0060  F033  FFE3   	movff	btemp+11,plusw1
  9601  019D3E  0EF8               	movlw	-8
  9602  019D40  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9603                           
  9604                           ;stkvar	_f @ sp[(-8)+0]
  9605  019D46  0EFA               	movlw	250
  9606  019D48  24E1               	addwf	fsr1l,w,c
  9607  019D4A  6ED9               	movwf	fsr2l,c
  9608  019D4C  0EFF               	movlw	255
  9609  019D4E  20E2               	addwfc	fsr1h,w,c
  9610  019D50  6EDA               	movwf	fsr2h,c
  9611  019D52  0E00               	movlw	0
  9612  019D54  6EDE               	movwf	postinc2,c
  9613  019D56  0E00               	movlw	0
  9614  019D58  6EDD               	movwf	postdec2,c
  9615                           
  9616                           ;stkvar	_f @ sp[(-8)+0]
  9617  019D5A  0EFC               	movlw	252
  9618  019D5C  24E1               	addwf	fsr1l,w,c
  9619  019D5E  6ED9               	movwf	fsr2l,c
  9620  019D60  0EFF               	movlw	255
  9621  019D62  20E2               	addwfc	fsr1h,w,c
  9622  019D64  6EDA               	movwf	fsr2h,c
  9623  019D66  0E00               	movlw	0
  9624  019D68  6EDE               	movwf	postinc2,c
  9625  019D6A  0E00               	movlw	0
  9626  019D6C  6EDD               	movwf	postdec2,c
  9627                           
  9628                           ;stkvar	_ap @ sp[(-8)+6]
  9629  019D6E  0EFE               	movlw	254
  9630  019D70  24E1               	addwf	fsr1l,w,c
  9631  019D72  6E01               	movwf	btemp^0,c
  9632  019D74  0EFF               	movlw	255
  9633  019D76  20E2               	addwfc	fsr1h,w,c
  9634  019D78  6E02               	movwf	(btemp+1)^0,c
  9635  019D7A  0060  F007  FFE6   	movff	btemp,postinc1
  9636  019D80  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9637                           
  9638                           ;stkvar	_fmt @ sp[(-10)+-5]
  9639  019D86  0EF1               	movlw	-15
  9640  019D88  006F FF8F FFE6     	movff	plusw1,postinc1
  9641  019D8E  006F FF8F FFE6     	movff	plusw1,postinc1
  9642                           
  9643                           ;stkvar	_f @ sp[(-12)+0]
  9644  019D94  0EF4               	movlw	244
  9645  019D96  24E1               	addwf	fsr1l,w,c
  9646  019D98  6E01               	movwf	btemp^0,c
  9647  019D9A  0EFF               	movlw	255
  9648  019D9C  20E2               	addwfc	fsr1h,w,c
  9649  019D9E  6E02               	movwf	(btemp+1)^0,c
  9650  019DA0  0060  F007  FFE6   	movff	btemp,postinc1
  9651  019DA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9652  019DAC  EC3A  F0D3         	call	_vfprintf	;wreg free
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;stkvar	_f @ sp[(-8)+0]
  9656  019DB0  0EFA               	movlw	250
  9657  019DB2  24E1               	addwf	fsr1l,w,c
  9658  019DB4  6ED9               	movwf	fsr2l,c
  9659  019DB6  0EFF               	movlw	255
  9660  019DB8  20E2               	addwfc	fsr1h,w,c
  9661  019DBA  6EDA               	movwf	fsr2h,c
  9662  019DBC  006F FF78  F00B    	movff	postinc2,btemp+10
  9663  019DC2  006F FF74  F00C    	movff	postdec2,btemp+11
  9664                           
  9665                           ;stkvar	_s @ sp[(-8)+-3]
  9666  019DC8  0EF5               	movlw	-11
  9667  019DCA  006F FF8C  F009    	movff	plusw1,btemp+8
  9668  019DD0  0EF6               	movlw	-10
  9669  019DD2  006F FF8C  F00A    	movff	plusw1,btemp+9
  9670  019DD8  500B               	movf	(btemp+10)^0,w,c
  9671  019DDA  2409               	addwf	(btemp+8)^0,w,c
  9672  019DDC  6ED9               	movwf	fsr2l,c
  9673  019DDE  500C               	movf	(btemp+11)^0,w,c
  9674  019DE0  200A               	addwfc	(btemp+9)^0,w,c
  9675  019DE2  6EDA               	movwf	fsr2h,c
  9676  019DE4  0E00               	movlw	0
  9677  019DE6  6EDF               	movwf	indf2,c
  9678                           
  9679                           ; BSR set to: 0
  9680                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9681  019DE8  0EF8               	movlw	248
  9682  019DEA  26E1               	addwf	fsr1l,f,c
  9683  019DEC  0EFF               	movlw	255
  9684  019DEE  22E2               	addwfc	fsr1h,f,c
  9685  019DF0  52E5               	movf	postdec1,f,c
  9686  019DF2  50E7               	movf	indf1,w,c
  9687  019DF4  5EE1               	subwf	fsr1l,f,c
  9688  019DF6  0E00               	movlw	0
  9689  019DF8  5AE2               	subwfb	fsr1h,f,c
  9690  019DFA  0012               	return		;funcret
  9691  019DFC                     __end_of_sprintf:
  9692                           	opt callstack 0
  9693                           
  9694 ;; *************** function _get_vterm_ptr *****************
  9695 ;; Defined at:
  9696 ;;		line 116 in file "mconfig.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  line            1  [STACK] const unsigned char 
  9699 ;;  vterm           1  [STACK] const unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  2  [STACK] PTR unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;Total ram usage:        0 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:   15
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_main
  9722 ;;		_check_help
  9723 ;;		_vterm_dump
  9724 ;; This function uses a reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text32
  9728  01BA4A                     __ptext32:
  9729                           	opt callstack 0
  9730  01BA4A                     _get_vterm_ptr:
  9731                           	opt callstack 15
  9732                           
  9733                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9734                           ;stkvar	_vterm @ sp[(0)+-2]
  9735                           
  9736                           ; BSR set to: 0
  9737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9738                           ;incstack = 0
  9739  01BA4A  0EFE               	movlw	-2
  9740  01BA4C  50E3               	movf	plusw1,w,c
  9741  01BA4E  0B03               	andlw	3
  9742  01BA50  0D78               	mullw	120
  9743  01BA52  0E2A               	movlw	low _D
  9744  01BA54  6E01               	movwf	btemp^0,c
  9745  01BA56  0E08               	movlw	high _D
  9746  01BA58  6E02               	movwf	(btemp+1)^0,c
  9747  01BA5A  50F3               	movf	243,w,c
  9748  01BA5C  2601               	addwf	btemp^0,f,c
  9749  01BA5E  50F4               	movf	244,w,c
  9750  01BA60  2202               	addwfc	(btemp+1)^0,f,c
  9751                           
  9752                           ;stkvar	_line @ sp[(0)+-1]
  9753  01BA62  0EFF               	movlw	-1
  9754  01BA64  50E3               	movf	plusw1,w,c
  9755  01BA66  0B03               	andlw	3
  9756  01BA68  0D28               	mullw	40
  9757  01BA6A  50F3               	movf	243,w,c
  9758  01BA6C  2601               	addwf	btemp^0,f,c
  9759  01BA6E  50F4               	movf	244,w,c
  9760  01BA70  2202               	addwfc	(btemp+1)^0,f,c
  9761                           
  9762                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9763  01BA72  52E5               	movf	postdec1,f,c
  9764  01BA74  52E5               	movf	postdec1,f,c
  9765  01BA76  0012               	return		;funcret
  9766  01BA78                     __end_of_get_vterm_ptr:
  9767                           	opt callstack 0
  9768                           
  9769 ;; *************** function _WaitMs *****************
  9770 ;; Defined at:
  9771 ;;		line 32 in file "timers.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  numMilliseco    2  [STACK] const unsigned short 
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1  [STACK] void 
  9778 ;; Registers used:
  9779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/1
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9789 ;;Total ram usage:        0 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:   16
  9792 ;; This function calls:
  9793 ;;		_StartTimer
  9794 ;;		_TimerDone
  9795 ;; This function is called by:
  9796 ;;		_main
  9797 ;;		_vterm_dump
  9798 ;; This function uses a reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text33
  9802  01B8EC                     __ptext33:
  9803                           	opt callstack 0
  9804  01B8EC                     _WaitMs:
  9805                           	opt callstack 12
  9806                           
  9807                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9808                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9809                           
  9810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9811                           ;incstack = 0
  9812  01B8EC  0EFE               	movlw	-2
  9813  01B8EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9814  01B8F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9815  01B8FA  0E00               	movlw	0
  9816  01B8FC  6EE6               	movwf	postinc1,c
  9817  01B8FE  EC81  F0DB         	call	_StartTimer	;wreg free
  9818                           
  9819                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9820  01B902  D005               	goto	l9864
  9821  01B904                     l1603:
  9822                           
  9823                           ;timers.c: 36:   __nop();
  9824  01B904  F000               	nop	
  9825                           
  9826                           ;timers.c: 37:   __nop();
  9827  01B906  F000               	nop	
  9828                           
  9829                           ;timers.c: 38:   __nop();
  9830  01B908  F000               	nop	
  9831                           
  9832                           ;timers.c: 39:   __nop();
  9833  01B90A  F000               	nop	
  9834  01B90C  0004               	clrwdt		;# 
  9835  01B90E                     l9864:
  9836                           
  9837                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9838  01B90E  0E00               	movlw	0
  9839  01B910  6EE6               	movwf	postinc1,c
  9840  01B912  ECA7  F0DD         	call	_TimerDone	;wreg free
  9841  01B916  5001               	movf	btemp^0,w,c
  9842  01B918  B4D8               	btfsc	status,2,c
  9843  01B91A  D7F4               	goto	l1603
  9844                           
  9845                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9846  01B91C  52E5               	movf	postdec1,f,c
  9847  01B91E  52E5               	movf	postdec1,f,c
  9848  01B920  0012               	return		;funcret
  9849  01B922                     __end_of_WaitMs:
  9850                           	opt callstack 0
  9851                           
  9852 ;; *************** function _update_lcd *****************
  9853 ;; Defined at:
  9854 ;;		line 85 in file "mconfig.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  vterm           1  [STACK] unsigned char 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1  [STACK] unsigned char 
  9861 ;; Registers used:
  9862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;Total ram usage:        0 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:   27
  9875 ;; This function calls:
  9876 ;;		_eaDogM_WriteStringAtPos
  9877 ;;		_wait_lcd_done
  9878 ;; This function is called by:
  9879 ;;		_main
  9880 ;;		_check_help
  9881 ;; This function uses a reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text34
  9885  019BE2                     __ptext34:
  9886                           	opt callstack 0
  9887  019BE2                     _update_lcd:
  9888                           	opt callstack 3
  9889                           
  9890                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9891                           ;stkvar	_vterm @ sp[(0)+-1]
  9892                           
  9893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9894                           ;incstack = 0
  9895  019BE2  0EFF               	movlw	-1
  9896  019BE4  006F FF8C  F001    	movff	plusw1,btemp
  9897  019BEA  0E03               	movlw	3
  9898  019BEC  1601               	andwf	btemp^0,f,c
  9899  019BEE  0EFF               	movlw	-1
  9900  019BF0  0060  F007  FFE3   	movff	btemp,plusw1
  9901                           
  9902                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9903  019BF6  EE22  F20A         	lfsr	2,_D+480
  9904  019BFA  A0DF               	btfss	indf2,0,c
  9905  019BFC  D004               	goto	l12770
  9906                           
  9907                           ;stkvar	_vterm @ sp[(0)+-1]
  9908  019BFE  0EFF               	movlw	-1
  9909  019C00  50E3               	movf	plusw1,w,c
  9910  019C02  B4D8               	btfsc	status,2,c
  9911  019C04  D074               	goto	l1679
  9912  019C06                     l12770:
  9913                           
  9914                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
  9915                           ;stkvar	_vterm @ sp[(0)+-1]
  9916  019C06  0EFF               	movlw	-1
  9917  019C08  50E3               	movf	plusw1,w,c
  9918  019C0A  0D78               	mullw	120
  9919  019C0C  0E3E               	movlw	low (_D+20)
  9920  019C0E  24F3               	addwf	243,w,c
  9921  019C10  6ED9               	movwf	fsr2l,c
  9922  019C12  0E08               	movlw	high (_D+20)
  9923  019C14  20F4               	addwfc	prodh,w,c
  9924  019C16  6EDA               	movwf	fsr2h,c
  9925  019C18  0E00               	movlw	0
  9926  019C1A  6EDF               	movwf	indf2,c
  9927                           
  9928                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
  9929                           ;stkvar	_vterm @ sp[(0)+-1]
  9930  019C1C  0EFF               	movlw	-1
  9931  019C1E  50E3               	movf	plusw1,w,c
  9932  019C20  0D78               	mullw	120
  9933  019C22  0E66               	movlw	low (_D+60)
  9934  019C24  24F3               	addwf	243,w,c
  9935  019C26  6ED9               	movwf	fsr2l,c
  9936  019C28  0E08               	movlw	high (_D+60)
  9937  019C2A  20F4               	addwfc	prodh,w,c
  9938  019C2C  6EDA               	movwf	fsr2h,c
  9939  019C2E  0E00               	movlw	0
  9940  019C30  6EDF               	movwf	indf2,c
  9941                           
  9942                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
  9943                           ;stkvar	_vterm @ sp[(0)+-1]
  9944  019C32  0EFF               	movlw	-1
  9945  019C34  50E3               	movf	plusw1,w,c
  9946  019C36  0D78               	mullw	120
  9947  019C38  0E8E               	movlw	low (_D+100)
  9948  019C3A  24F3               	addwf	243,w,c
  9949  019C3C  6ED9               	movwf	fsr2l,c
  9950  019C3E  0E08               	movlw	high (_D+100)
  9951  019C40  20F4               	addwfc	prodh,w,c
  9952  019C42  6EDA               	movwf	fsr2h,c
  9953  019C44  0E00               	movlw	0
  9954  019C46  6EDF               	movwf	indf2,c
  9955                           
  9956                           ;mconfig.c: 95:  wait_lcd_done();
  9957  019C48  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9961                           ;stkvar	_vterm @ sp[(0)+-1]
  9962  019C4C  0EFF               	movlw	-1
  9963  019C4E  50E3               	movf	plusw1,w,c
  9964  019C50  0D78               	mullw	120
  9965  019C52  0E2A               	movlw	low _D
  9966  019C54  6E0B               	movwf	(btemp+10)^0,c
  9967  019C56  0E08               	movlw	high _D
  9968  019C58  6E0C               	movwf	(btemp+11)^0,c
  9969  019C5A  50F3               	movf	243,w,c
  9970  019C5C  260B               	addwf	(btemp+10)^0,f,c
  9971  019C5E  50F4               	movf	244,w,c
  9972  019C60  220C               	addwfc	(btemp+11)^0,f,c
  9973  019C62  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9974  019C68  0060  F033  FFE6   	movff	btemp+11,postinc1
  9975  019C6E  0E00               	movlw	0
  9976  019C70  6EE6               	movwf	postinc1,c
  9977  019C72  0E00               	movlw	0
  9978  019C74  6EE6               	movwf	postinc1,c
  9979  019C76  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9980                           
  9981                           ; BSR set to: 59
  9982                           ;mconfig.c: 97:  wait_lcd_done();
  9983  019C7A  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9987                           ;stkvar	_vterm @ sp[(0)+-1]
  9988  019C7E  0EFF               	movlw	-1
  9989  019C80  50E3               	movf	plusw1,w,c
  9990  019C82  0D78               	mullw	120
  9991  019C84  0E2A               	movlw	low _D
  9992  019C86  6E0B               	movwf	(btemp+10)^0,c
  9993  019C88  0E08               	movlw	high _D
  9994  019C8A  6E0C               	movwf	(btemp+11)^0,c
  9995  019C8C  0E28               	movlw	40
  9996  019C8E  260B               	addwf	(btemp+10)^0,f,c
  9997  019C90  0E00               	movlw	0
  9998  019C92  220C               	addwfc	(btemp+11)^0,f,c
  9999  019C94  50F3               	movf	243,w,c
 10000  019C96  260B               	addwf	(btemp+10)^0,f,c
 10001  019C98  50F4               	movf	244,w,c
 10002  019C9A  220C               	addwfc	(btemp+11)^0,f,c
 10003  019C9C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10004  019CA2  0060  F033  FFE6   	movff	btemp+11,postinc1
 10005  019CA8  0E00               	movlw	0
 10006  019CAA  6EE6               	movwf	postinc1,c
 10007  019CAC  0E01               	movlw	1
 10008  019CAE  6EE6               	movwf	postinc1,c
 10009  019CB0  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10010                           
 10011                           ; BSR set to: 59
 10012                           ;mconfig.c: 99:  wait_lcd_done();
 10013  019CB4  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10017                           ;stkvar	_vterm @ sp[(0)+-1]
 10018  019CB8  0EFF               	movlw	-1
 10019  019CBA  50E3               	movf	plusw1,w,c
 10020  019CBC  0D78               	mullw	120
 10021  019CBE  0E2A               	movlw	low _D
 10022  019CC0  6E0B               	movwf	(btemp+10)^0,c
 10023  019CC2  0E08               	movlw	high _D
 10024  019CC4  6E0C               	movwf	(btemp+11)^0,c
 10025  019CC6  0E50               	movlw	80
 10026  019CC8  260B               	addwf	(btemp+10)^0,f,c
 10027  019CCA  0E00               	movlw	0
 10028  019CCC  220C               	addwfc	(btemp+11)^0,f,c
 10029  019CCE  50F3               	movf	243,w,c
 10030  019CD0  260B               	addwf	(btemp+10)^0,f,c
 10031  019CD2  50F4               	movf	244,w,c
 10032  019CD4  220C               	addwfc	(btemp+11)^0,f,c
 10033  019CD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10034  019CDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 10035  019CE2  0E00               	movlw	0
 10036  019CE4  6EE6               	movwf	postinc1,c
 10037  019CE6  0E02               	movlw	2
 10038  019CE8  6EE6               	movwf	postinc1,c
 10039  019CEA  ECE5  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10040  019CEE                     l1679:
 10041                           
 10042                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10043  019CEE  52E5               	movf	postdec1,f,c
 10044  019CF0  0012               	return		;funcret
 10045  019CF2                     __end_of_update_lcd:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10049 ;; Defined at:
 10050 ;;		line 195 in file "eadog.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  r               1  [STACK] const unsigned char 
 10053 ;;  c               1  [STACK] const unsigned char 
 10054 ;;  strPtr          2  [STACK] PTR unsigned char 
 10055 ;;		 -> D.lcd(480), D(482), V(191), 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;  row             1  [STACK] unsigned char 
 10058 ;; Return value:  Size  Location     Type
 10059 ;;                  1  [STACK] void 
 10060 ;; Registers used:
 10061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10062 ;; Tracked objects:
 10063 ;;		On entry : 3F/0
 10064 ;;		On exit  : 3F/3B
 10065 ;;		Unchanged: 0/0
 10066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10071 ;;Total ram usage:        0 bytes
 10072 ;; Hardware stack levels used:    1
 10073 ;; Hardware stack levels required when called:   26
 10074 ;; This function calls:
 10075 ;;		_eaDogM_WriteString
 10076 ;;		_send_lcd_cmd_dma
 10077 ;;		_send_lcd_data_dma
 10078 ;;		_wait_lcd_done
 10079 ;;		_wdtdelay
 10080 ;; This function is called by:
 10081 ;;		_update_lcd
 10082 ;;		_vterm_dump
 10083 ;; This function uses a reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text35
 10087  01A7CA                     __ptext35:
 10088                           	opt callstack 0
 10089  01A7CA                     _eaDogM_WriteStringAtPos:
 10090                           	opt callstack 0
 10091                           
 10092                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10093  01A7CA  52E6               	movf	postinc1,f,c
 10094                           
 10095                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10096                           
 10097                           ;incstack = 0
 10098  01A7CC  D014               	goto	l12746
 10099  01A7CE                     l12734:
 10100                           
 10101                           ;eadog.c: 201:   row = 0x40;
 10102                           ;stkvar	_row @ sp[(-1)+0]
 10103  01A7CE  0EFF               	movlw	-1
 10104  01A7D0  6AE3               	clrf	plusw1,c
 10105  01A7D2  8CE3               	bsf	plusw1,6,c
 10106                           
 10107                           ;eadog.c: 202:   break;
 10108  01A7D4  D026               	goto	l12748
 10109  01A7D6                     l12736:
 10110                           
 10111                           ;eadog.c: 204:   row = 0x14;
 10112                           ;stkvar	_row @ sp[(-1)+0]
 10113  01A7D6  0EFF               	movlw	-1
 10114  01A7D8  6AE3               	clrf	plusw1,c
 10115  01A7DA  84E3               	bsf	plusw1,2,c
 10116  01A7DC  88E3               	bsf	plusw1,4,c	;indir
 10117                           
 10118                           ;eadog.c: 205:   break;
 10119  01A7DE  D021               	goto	l12748
 10120  01A7E0                     l12738:
 10121                           
 10122                           ;eadog.c: 207:   row = 0x54;
 10123  01A7E0  0E54               	movlw	84
 10124  01A7E2  6E0C               	movwf	(btemp+11)^0,c
 10125                           
 10126                           ;stkvar	_row @ sp[(-1)+0]
 10127  01A7E4  0EFF               	movlw	-1
 10128  01A7E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10129                           
 10130                           ;eadog.c: 208:   break;
 10131  01A7EC  D01A               	goto	l12748
 10132  01A7EE                     l12740:
 10133                           
 10134                           ;eadog.c: 210:   row = 0x1;
 10135                           ;stkvar	_row @ sp[(-1)+0]
 10136  01A7EE  0EFF               	movlw	-1
 10137  01A7F0  6AE3               	clrf	plusw1,c
 10138  01A7F2  2AE3               	incf	plusw1,f,c
 10139                           
 10140                           ;eadog.c: 211:   break;
 10141  01A7F4  D016               	goto	l12748
 10142  01A7F6                     l12746:
 10143                           
 10144                           ;stkvar	_r @ sp[(-1)+-1]
 10145  01A7F6  0EFE               	movlw	-2
 10146  01A7F8  50E3               	movf	plusw1,w,c
 10147  01A7FA  6E0B               	movwf	(btemp+10)^0,c
 10148  01A7FC  6A0C               	clrf	(btemp+11)^0,c
 10149                           
 10150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10151                           ; Switch size 1, requested type "simple"
 10152                           ; Number of cases is 1, Range of values is 0 to 0
 10153                           ; switch strategies available:
 10154                           ; Name         Instructions Cycles
 10155                           ; simple_byte            4     3 (average)
 10156                           ;	Chosen strategy is simple_byte
 10157  01A7FE  500C               	movf	(btemp+11)^0,w,c
 10158  01A800  0A00               	xorlw	0	; case 0
 10159  01A802  A4D8               	btfss	status,2,c
 10160  01A804  D7E4               	goto	l12734
 10161                           
 10162                           ; Switch size 1, requested type "simple"
 10163                           ; Number of cases is 4, Range of values is 0 to 3
 10164                           ; switch strategies available:
 10165                           ; Name         Instructions Cycles
 10166                           ; simple_byte           13     7 (average)
 10167                           ;	Chosen strategy is simple_byte
 10168  01A806  500B               	movf	(btemp+10)^0,w,c
 10169  01A808  0A00               	xorlw	0	; case 0
 10170  01A80A  B4D8               	btfsc	status,2,c
 10171  01A80C  D7E0               	goto	l12734
 10172  01A80E  0A01               	xorlw	1	; case 1
 10173  01A810  B4D8               	btfsc	status,2,c
 10174  01A812  D7E1               	goto	l12736
 10175  01A814  0A03               	xorlw	3	; case 2
 10176  01A816  B4D8               	btfsc	status,2,c
 10177  01A818  D7E3               	goto	l12738
 10178  01A81A  0A01               	xorlw	1	; case 3
 10179  01A81C  B4D8               	btfsc	status,2,c
 10180  01A81E  D7E7               	goto	l12740
 10181  01A820  D7D6               	goto	l12734
 10182  01A822                     l12748:
 10183                           
 10184                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10185  01A822  0E45               	movlw	69
 10186  01A824  6EE6               	movwf	postinc1,c
 10187  01A826  EC8F  F0DF         	call	_send_lcd_cmd_dma	;wreg free
 10188                           
 10189                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10190                           ;stkvar	_c @ sp[(-1)+-2]
 10191  01A82A  0EFD               	movlw	-3
 10192  01A82C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10193                           
 10194                           ;stkvar	_row @ sp[(-1)+0]
 10195  01A832  0EFF               	movlw	-1
 10196  01A834  50E3               	movf	plusw1,w,c
 10197  01A836  240C               	addwf	(btemp+11)^0,w,c
 10198  01A838  6EE6               	movwf	postinc1,c
 10199  01A83A  ECDE  F0D9         	call	_send_lcd_data_dma	;wreg free
 10200                           
 10201                           ; BSR set to: 59
 10202                           ;eadog.c: 218:  wait_lcd_done();
 10203  01A83E  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;eadog.c: 219:  wdtdelay(8);
 10207  01A842  0E08               	movlw	8
 10208  01A844  6EE6               	movwf	postinc1,c
 10209  01A846  0E00               	movlw	0
 10210  01A848  6EE6               	movwf	postinc1,c
 10211  01A84A  0E00               	movlw	0
 10212  01A84C  6EE6               	movwf	postinc1,c
 10213  01A84E  0E00               	movlw	0
 10214  01A850  6EE6               	movwf	postinc1,c
 10215  01A852  EC0B  F0D9         	call	_wdtdelay	;wreg free
 10216                           
 10217                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 10218                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10219  01A856  0EFB               	movlw	-5
 10220  01A858  006F FF8F FFE6     	movff	plusw1,postinc1
 10221  01A85E  006F FF8F FFE6     	movff	plusw1,postinc1
 10222  01A864  EC39  F0D4         	call	_eaDogM_WriteString	;wreg free
 10223                           
 10224                           ; BSR set to: 59
 10225                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10226  01A868  0EFB               	movlw	251
 10227  01A86A  26E1               	addwf	fsr1l,f,c
 10228  01A86C  0EFF               	movlw	255
 10229  01A86E  22E2               	addwfc	fsr1h,f,c
 10230  01A870  0012               	return		;funcret
 10231  01A872                     __end_of_eaDogM_WriteStringAtPos:
 10232                           	opt callstack 0
 10233                           
 10234 ;; *************** function _send_lcd_cmd_dma *****************
 10235 ;; Defined at:
 10236 ;;		line 171 in file "eadog.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  strPtr          1  [STACK] unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1  [STACK] void 
 10243 ;; Registers used:
 10244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/3D
 10247 ;;		On exit  : 3F/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10254 ;;Total ram usage:        0 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; Hardware stack levels required when called:   25
 10257 ;; This function calls:
 10258 ;;		_send_lcd_data_dma
 10259 ;;		_wait_lcd_done
 10260 ;; This function is called by:
 10261 ;;		_eaDogM_WriteStringAtPos
 10262 ;;		_eaDogM_WriteCommand
 10263 ;; This function uses a reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text36
 10267  01BF1E                     __ptext36:
 10268                           	opt callstack 0
 10269  01BF1E                     _send_lcd_cmd_dma:
 10270                           	opt callstack 3
 10271                           
 10272                           ;eadog.c: 171: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:  send
      +                          _lcd_data_dma(0xFE);
 10273                           
 10274                           ; BSR set to: 59
 10275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10276                           ;incstack = 0
 10277  01BF1E  0EFE               	movlw	254
 10278  01BF20  6EE6               	movwf	postinc1,c
 10279  01BF22  ECDE  F0D9         	call	_send_lcd_data_dma	;wreg free
 10280                           
 10281                           ; BSR set to: 59
 10282                           ;eadog.c: 174:  wait_lcd_done();
 10283  01BF26  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 10287                           ;stkvar	_strPtr @ sp[(0)+-1]
 10288  01BF2A  0EFF               	movlw	-1
 10289  01BF2C  50E3               	movf	plusw1,w,c
 10290  01BF2E  6EE6               	movwf	postinc1,c
 10291  01BF30  ECDE  F0D9         	call	_send_lcd_data_dma	;wreg free
 10292                           
 10293                           ;eadog.c: 176:  wait_lcd_done();
 10294  01BF34  ECCB  F0DF         	call	_wait_lcd_done	;wreg free
 10295                           
 10296                           ; BSR set to: 0
 10297                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10298  01BF38  52E5               	movf	postdec1,f,c
 10299  01BF3A  0012               	return		;funcret
 10300  01BF3C                     __end_of_send_lcd_cmd_dma:
 10301                           	opt callstack 0
 10302                           
 10303 ;; *************** function _wait_lcd_done *****************
 10304 ;; Defined at:
 10305 ;;		line 444 in file "eadog.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1  [STACK] void 
 10312 ;; Registers used:
 10313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 3F/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:   16
 10326 ;; This function calls:
 10327 ;;		_wdtdelay
 10328 ;; This function is called by:
 10329 ;;		_send_lcd_cmd_dma
 10330 ;;		_eaDogM_WriteStringAtPos
 10331 ;;		_update_lcd
 10332 ;;		_vterm_dump
 10333 ;; This function uses a reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text37
 10337  01BF96                     __ptext37:
 10338                           	opt callstack 0
 10339  01BF96                     _wait_lcd_done:
 10340                           	opt callstack 13
 10341                           
 10342                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 10343                           
 10344                           ; BSR set to: 0
 10345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10346                           ;incstack = 0
 10347  01BF96  0100               	movlb	0	; () banked
 10348  01BF98  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10349  01BF9A  D7FD               	goto	_wait_lcd_done
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;eadog.c: 447:  wdtdelay(50);
 10353  01BF9C  0E32               	movlw	50
 10354  01BF9E  6EE6               	movwf	postinc1,c
 10355  01BFA0  0E00               	movlw	0
 10356  01BFA2  6EE6               	movwf	postinc1,c
 10357  01BFA4  0E00               	movlw	0
 10358  01BFA6  6EE6               	movwf	postinc1,c
 10359  01BFA8  0E00               	movlw	0
 10360  01BFAA  6EE6               	movwf	postinc1,c
 10361  01BFAC  EC0B  F0D9         	call	_wdtdelay	;wreg free
 10362                           
 10363                           ; BSR set to: 0
 10364                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10365  01BFB0  0012               	return		;funcret
 10366  01BFB2                     __end_of_wait_lcd_done:
 10367                           	opt callstack 0
 10368                           
 10369 ;; *************** function _wdtdelay *****************
 10370 ;; Defined at:
 10371 ;;		line 23 in file "eadog.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  delay           4  [STACK] const unsigned long 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1  [STACK] void 
 10378 ;; Registers used:
 10379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10380 ;; Tracked objects:
 10381 ;;		On entry : 2/3D
 10382 ;;		On exit  : 3F/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;Total ram usage:        0 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:   15
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_init_display
 10396 ;;		_send_lcd_data
 10397 ;;		_send_lcd_cmd
 10398 ;;		_send_lcd_cmd_long
 10399 ;;		_eaDogM_WriteStringAtPos
 10400 ;;		_wait_lcd_done
 10401 ;; This function uses a reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text38
 10405  01B216                     __ptext38:
 10406                           	opt callstack 0
 10407  01B216                     _wdtdelay:
 10408                           	opt callstack 13
 10409                           
 10410                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10411                           
 10412                           ; BSR set to: 0
 10413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10414                           ;incstack = 0
 10415  01B216  0100               	movlb	0	; () banked
 10416  01B218  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10417  01B21A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10418  01B21C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10419  01B21E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10420  01B220                     l1459:
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;eadog.c: 28:   __nop();
 10424  01B220  F000               	nop	
 10425  01B222  0004               	clrwdt		;# 
 10426                           
 10427                           ;eadog.c: 30:  };
 10428  01B224  0E01               	movlw	1
 10429  01B226  0100               	movlb	0	; () banked
 10430  01B228  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10431  01B22A  0E00               	movlw	0
 10432  01B22C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10433  01B22E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10434  01B230  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;stkvar	_delay @ sp[(0)+-4]
 10438  01B232  0EFC               	movlw	-4
 10439  01B234  006F FF8C  F001    	movff	plusw1,btemp
 10440  01B23A  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10441  01B23C  5C01               	subwf	btemp^0,w,c
 10442  01B23E  0EFD               	movlw	-3
 10443  01B240  006F FF8C  F001    	movff	plusw1,btemp
 10444  01B246  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10445  01B248  5801               	subwfb	btemp^0,w,c
 10446  01B24A  0EFE               	movlw	-2
 10447  01B24C  006F FF8C  F001    	movff	plusw1,btemp
 10448  01B252  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10449  01B254  5801               	subwfb	btemp^0,w,c
 10450  01B256  0EFF               	movlw	-1
 10451  01B258  006F FF8C  F001    	movff	plusw1,btemp
 10452  01B25E  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10453  01B260  5801               	subwfb	btemp^0,w,c
 10454  01B262  B0D8               	btfsc	status,0,c
 10455  01B264  D7DD               	goto	l1459
 10456                           
 10457                           ; BSR set to: 0
 10458                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10459  01B266  52E5               	movf	postdec1,f,c
 10460  01B268  52E5               	movf	postdec1,f,c
 10461  01B26A  52E5               	movf	postdec1,f,c
 10462  01B26C  52E5               	movf	postdec1,f,c
 10463  01B26E  0012               	return		;funcret
 10464  01B270                     __end_of_wdtdelay:
 10465                           	opt callstack 0
 10466                           
 10467 ;; *************** function _send_lcd_data_dma *****************
 10468 ;; Defined at:
 10469 ;;		line 182 in file "eadog.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  strPtr          1  [STACK] unsigned char 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;		None
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1  [STACK] void 
 10476 ;; Registers used:
 10477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 3F/3B
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10487 ;;Total ram usage:        0 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:   24
 10490 ;; This function calls:
 10491 ;;		_printf
 10492 ;;		_ringBufS_flush
 10493 ;;		_start_lcd
 10494 ;;		_wait_lcd_set
 10495 ;; This function is called by:
 10496 ;;		_send_lcd_cmd_dma
 10497 ;;		_eaDogM_WriteStringAtPos
 10498 ;; This function uses a reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text39
 10502  01B3BC                     __ptext39:
 10503                           	opt callstack 0
 10504  01B3BC                     _send_lcd_data_dma:
 10505                           	opt callstack 4
 10506                           
 10507                           ;eadog.c: 182: void send_lcd_data_dma(uint8_t strPtr);eadog.c: 183: {;eadog.c: 184:  wai
      +                          t_lcd_set();
 10508                           
 10509                           ; BSR set to: 0
 10510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10511                           ;incstack = 0
 10512  01B3BC  ECBE  F0E0         	call	_wait_lcd_set	;wreg free
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 10516  01B3C0  0E00               	movlw	0
 10517  01B3C2  6EE6               	movwf	postinc1,c
 10518  01B3C4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10519  01B3CA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10520  01B3D0  EC29  F0D5         	call	_ringBufS_flush	;wreg free
 10521  01B3D4  94BC               	bcf	188,2,c	;volatile
 10522                           
 10523                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 10524  01B3D6  013B               	movlb	59	; () banked
 10525  01B3D8  9FFC               	bcf	252,7,b	;volatile
 10526                           
 10527                           ; BSR set to: 59
 10528                           ;eadog.c: 189:  DMA1SSZ = 1;
 10529  01B3DA  0E00               	movlw	0
 10530  01B3DC  6FF8               	movwf	248,b	;volatile
 10531  01B3DE  0E01               	movlw	1
 10532  01B3E0  6FF7               	movwf	247,b	;volatile
 10533                           
 10534                           ; BSR set to: 59
 10535                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 10536  01B3E2  8FFC               	bsf	252,7,b	;volatile
 10537                           
 10538                           ; BSR set to: 59
 10539                           ;eadog.c: 191:  printf("%c", strPtr);
 10540                           ;stkvar	_strPtr @ sp[(0)+-1]
 10541  01B3E4  0EFF               	movlw	-1
 10542  01B3E6  50E3               	movf	plusw1,w,c
 10543  01B3E8  6EE6               	movwf	postinc1,c
 10544  01B3EA  0E00               	movlw	0
 10545  01B3EC  6EE6               	movwf	postinc1,c
 10546  01B3EE  0EF9               	movlw	low STR_44
 10547  01B3F0  6EE6               	movwf	postinc1,c
 10548  01B3F2  0EFF               	movlw	high STR_44
 10549  01B3F4  6EE6               	movwf	postinc1,c
 10550  01B3F6  0E04               	movlw	4
 10551  01B3F8  6EE6               	movwf	postinc1,c
 10552  01B3FA  EC4C  F0D8         	call	_printf	;wreg free
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;eadog.c: 192:  start_lcd();
 10556  01B3FE  ECC1  F0E0         	call	_start_lcd	;wreg free
 10557                           
 10558                           ; BSR set to: 59
 10559                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10560  01B402  52E5               	movf	postdec1,f,c
 10561  01B404  0012               	return		;funcret
 10562  01B406                     __end_of_send_lcd_data_dma:
 10563                           	opt callstack 0
 10564                           
 10565 ;; *************** function _eaDogM_WriteString *****************
 10566 ;; Defined at:
 10567 ;;		line 151 in file "eadog.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  strPtr          2  [STACK] PTR unsigned char 
 10570 ;;		 -> D.lcd(480), D(482), V(191), 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;		None
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1  [STACK] void 
 10575 ;; Registers used:
 10576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10577 ;; Tracked objects:
 10578 ;;		On entry : 3F/0
 10579 ;;		On exit  : 3F/3B
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10586 ;;Total ram usage:        0 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:   24
 10589 ;; This function calls:
 10590 ;;		_printf
 10591 ;;		_ringBufS_flush
 10592 ;;		_start_lcd
 10593 ;;		_strlen
 10594 ;;		_wait_lcd_set
 10595 ;; This function is called by:
 10596 ;;		_eaDogM_WriteStringAtPos
 10597 ;; This function uses a reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text40
 10601  01A872                     __ptext40:
 10602                           	opt callstack 0
 10603  01A872                     _eaDogM_WriteString:
 10604                           	opt callstack 4
 10605                           
 10606                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 10607                           
 10608                           ; BSR set to: 59
 10609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10610                           ;incstack = 0
 10611  01A872  ECBE  F0E0         	call	_wait_lcd_set	;wreg free
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 10615  01A876  0E00               	movlw	0
 10616  01A878  6EE6               	movwf	postinc1,c
 10617  01A87A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10618  01A880  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10619  01A886  EC29  F0D5         	call	_ringBufS_flush	;wreg free
 10620  01A88A  94BC               	bcf	188,2,c	;volatile
 10621                           
 10622                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10623                           ;stkvar	_strPtr @ sp[(0)+-2]
 10624  01A88C  0EFE               	movlw	-2
 10625  01A88E  006F FF8F FFE6     	movff	plusw1,postinc1
 10626  01A894  006F FF8F FFE6     	movff	plusw1,postinc1
 10627  01A89A  EC8C  F0D4         	call	_strlen	;wreg free
 10628  01A89E  5002               	movf	(btemp+1)^0,w,c
 10629  01A8A0  E104               	bnz	u12280
 10630  01A8A2  0E41               	movlw	65
 10631  01A8A4  5C01               	subwf	btemp^0,w,c
 10632  01A8A6  A0D8               	btfss	status,0,c
 10633  01A8A8  D010               	goto	l12690
 10634  01A8AA                     u12280:
 10635                           
 10636                           ;stkvar	_strPtr @ sp[(0)+-2]
 10637  01A8AA  0EFE               	movlw	-2
 10638  01A8AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 10639  01A8B2  0EFF               	movlw	-1
 10640  01A8B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10641  01A8BA  0E40               	movlw	64
 10642  01A8BC  240B               	addwf	(btemp+10)^0,w,c
 10643  01A8BE  6ED9               	movwf	fsr2l,c
 10644  01A8C0  0E00               	movlw	0
 10645  01A8C2  200C               	addwfc	(btemp+11)^0,w,c
 10646  01A8C4  6EDA               	movwf	fsr2h,c
 10647  01A8C6  0E00               	movlw	0
 10648  01A8C8  6EDF               	movwf	indf2,c
 10649  01A8CA                     l12690:
 10650                           
 10651                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 10652  01A8CA  013B               	movlb	59	; () banked
 10653  01A8CC  9FFC               	bcf	252,7,b	;volatile
 10654                           
 10655                           ; BSR set to: 59
 10656                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 10657                           ;stkvar	_strPtr @ sp[(0)+-2]
 10658  01A8CE  0EFE               	movlw	-2
 10659  01A8D0  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  01A8DC  EC8C  F0D4         	call	_strlen	;wreg free
 10662  01A8E0  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10663  01A8E6  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10664                           
 10665                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 10666  01A8EC  013B               	movlb	59	; () banked
 10667  01A8EE  8FFC               	bsf	252,7,b	;volatile
 10668                           
 10669                           ; BSR set to: 59
 10670                           ;eadog.c: 161:  printf("%s", strPtr);
 10671                           ;stkvar	_strPtr @ sp[(0)+-2]
 10672  01A8F0  0EFE               	movlw	-2
 10673  01A8F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10674  01A8F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10675  01A8FE  0EFC               	movlw	low STR_43
 10676  01A900  6EE6               	movwf	postinc1,c
 10677  01A902  0EFF               	movlw	high STR_43
 10678  01A904  6EE6               	movwf	postinc1,c
 10679  01A906  0E04               	movlw	4
 10680  01A908  6EE6               	movwf	postinc1,c
 10681  01A90A  EC4C  F0D8         	call	_printf	;wreg free
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;eadog.c: 162:  start_lcd();
 10685  01A90E  ECC1  F0E0         	call	_start_lcd	;wreg free
 10686                           
 10687                           ; BSR set to: 59
 10688                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10689  01A912  52E5               	movf	postdec1,f,c
 10690  01A914  52E5               	movf	postdec1,f,c
 10691  01A916  0012               	return		;funcret
 10692  01A918                     __end_of_eaDogM_WriteString:
 10693                           	opt callstack 0
 10694                           
 10695 ;; *************** function _wait_lcd_set *****************
 10696 ;; Defined at:
 10697 ;;		line 434 in file "eadog.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;		None
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1  [STACK] void 
 10704 ;; Registers used:
 10705 ;;		None
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 3F/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10715 ;;Total ram usage:        0 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:   15
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_eaDogM_WriteString
 10722 ;;		_send_lcd_data_dma
 10723 ;; This function uses a reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text41
 10727  01C17C                     __ptext41:
 10728                           	opt callstack 0
 10729  01C17C                     _wait_lcd_set:
 10730                           	opt callstack 12
 10731                           
 10732                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 10733                           
 10734                           ; BSR set to: 59
 10735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10736                           ;incstack = 0
 10737  01C17C  0100               	movlb	0	; () banked
 10738  01C17E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10739                           
 10740                           ; BSR set to: 0
 10741                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10742  01C180  0012               	return		;funcret
 10743  01C182                     __end_of_wait_lcd_set:
 10744                           	opt callstack 0
 10745                           
 10746 ;; *************** function _start_lcd *****************
 10747 ;; Defined at:
 10748 ;;		line 429 in file "eadog.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1  [STACK] void 
 10755 ;; Registers used:
 10756 ;;		None
 10757 ;; Tracked objects:
 10758 ;;		On entry : 3F/0
 10759 ;;		On exit  : 3F/3B
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:   15
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_eaDogM_WriteString
 10773 ;;		_send_lcd_data_dma
 10774 ;; This function uses a reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text42
 10778  01C182                     __ptext42:
 10779                           	opt callstack 0
 10780  01C182                     _start_lcd:
 10781                           	opt callstack 12
 10782                           
 10783                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 10784                           
 10785                           ; BSR set to: 0
 10786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10787                           ;incstack = 0
 10788  01C182  013B               	movlb	59	; () banked
 10789  01C184  8DFC               	bsf	252,6,b	;volatile
 10790                           
 10791                           ; BSR set to: 59
 10792                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10793  01C186  0012               	return		;funcret
 10794  01C188                     __end_of_start_lcd:
 10795                           	opt callstack 0
 10796                           
 10797 ;; *************** function _ringBufS_flush *****************
 10798 ;; Defined at:
 10799 ;;		line 76 in file "ringbufs.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10802 ;;		 -> ring_buf1(67), 
 10803 ;;  clearBuffer     1  [STACK] const char 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1  [STACK] void 
 10808 ;; Registers used:
 10809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10810 ;; Tracked objects:
 10811 ;;		On entry : 3F/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10819 ;;Total ram usage:        0 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:   16
 10822 ;; This function calls:
 10823 ;;		_memset
 10824 ;; This function is called by:
 10825 ;;		_eaDogM_WriteString
 10826 ;;		_send_lcd_data_dma
 10827 ;; This function uses a reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text43
 10831  01AA52                     __ptext43:
 10832                           	opt callstack 0
 10833  01AA52                     _ringBufS_flush:
 10834                           	opt callstack 11
 10835                           
 10836                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10837                           ;stkvar	__this @ sp[(0)+-2]
 10838                           
 10839                           ; BSR set to: 59
 10840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10841                           ;incstack = 0
 10842  01AA52  0EFE               	movlw	-2
 10843  01AA54  006F FF8C  F00B    	movff	plusw1,btemp+10
 10844  01AA5A  0EFF               	movlw	-1
 10845  01AA5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10846  01AA62  0E42               	movlw	66
 10847  01AA64  240B               	addwf	(btemp+10)^0,w,c
 10848  01AA66  6ED9               	movwf	fsr2l,c
 10849  01AA68  0E00               	movlw	0
 10850  01AA6A  200C               	addwfc	(btemp+11)^0,w,c
 10851  01AA6C  6EDA               	movwf	fsr2h,c
 10852  01AA6E  0E00               	movlw	0
 10853  01AA70  6EDF               	movwf	indf2,c
 10854                           
 10855                           ;ringbufs.c: 79:  _this->head = 0;
 10856                           ;stkvar	__this @ sp[(0)+-2]
 10857  01AA72  0EFE               	movlw	-2
 10858  01AA74  006F FF8C  F00B    	movff	plusw1,btemp+10
 10859  01AA7A  0EFF               	movlw	-1
 10860  01AA7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10861  01AA82  0E40               	movlw	64
 10862  01AA84  240B               	addwf	(btemp+10)^0,w,c
 10863  01AA86  6ED9               	movwf	fsr2l,c
 10864  01AA88  0E00               	movlw	0
 10865  01AA8A  200C               	addwfc	(btemp+11)^0,w,c
 10866  01AA8C  6EDA               	movwf	fsr2h,c
 10867  01AA8E  0E00               	movlw	0
 10868  01AA90  6EDF               	movwf	indf2,c
 10869                           
 10870                           ;ringbufs.c: 80:  _this->tail = 0;
 10871                           ;stkvar	__this @ sp[(0)+-2]
 10872  01AA92  0EFE               	movlw	-2
 10873  01AA94  006F FF8C  F00B    	movff	plusw1,btemp+10
 10874  01AA9A  0EFF               	movlw	-1
 10875  01AA9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10876  01AAA2  0E41               	movlw	65
 10877  01AAA4  240B               	addwf	(btemp+10)^0,w,c
 10878  01AAA6  6ED9               	movwf	fsr2l,c
 10879  01AAA8  0E00               	movlw	0
 10880  01AAAA  200C               	addwfc	(btemp+11)^0,w,c
 10881  01AAAC  6EDA               	movwf	fsr2h,c
 10882  01AAAE  0E00               	movlw	0
 10883  01AAB0  6EDF               	movwf	indf2,c
 10884                           
 10885                           ;ringbufs.c: 81:  if (clearBuffer) {
 10886                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10887  01AAB2  0EFD               	movlw	-3
 10888  01AAB4  50E3               	movf	plusw1,w,c
 10889  01AAB6  B4D8               	btfsc	status,2,c
 10890  01AAB8  D011               	goto	l1588
 10891                           
 10892                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10893  01AABA  0E40               	movlw	64
 10894  01AABC  6EE6               	movwf	postinc1,c
 10895  01AABE  0E00               	movlw	0
 10896  01AAC0  6EE6               	movwf	postinc1,c
 10897  01AAC2  0E00               	movlw	0
 10898  01AAC4  6EE6               	movwf	postinc1,c
 10899  01AAC6  0E00               	movlw	0
 10900  01AAC8  6EE6               	movwf	postinc1,c
 10901                           
 10902                           ;stkvar	__this @ sp[(-4)+-2]
 10903  01AACA  0EFA               	movlw	-6
 10904  01AACC  006F FF8F FFE6     	movff	plusw1,postinc1
 10905  01AAD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10906  01AAD8  EC10  F0B7         	call	_memset	;wreg free
 10907  01AADC                     l1588:
 10908                           
 10909                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10910  01AADC  52E5               	movf	postdec1,f,c
 10911  01AADE  52E5               	movf	postdec1,f,c
 10912  01AAE0  52E5               	movf	postdec1,f,c
 10913  01AAE2  0012               	return		;funcret
 10914  01AAE4                     __end_of_ringBufS_flush:
 10915                           	opt callstack 0
 10916                           
 10917 ;; *************** function _memset *****************
 10918 ;; Defined at:
 10919 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  dest            2  [STACK] PTR void 
 10922 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10923 ;;  c               2  [STACK] int 
 10924 ;;  n               2  [STACK] unsigned int 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  s               2  [STACK] PTR unsigned char 
 10927 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10928 ;;  k               2  [STACK] unsigned int 
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  2  [STACK] PTR void 
 10931 ;; Registers used:
 10932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10942 ;;Total ram usage:        0 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:   15
 10945 ;; This function calls:
 10946 ;;		Nothing
 10947 ;; This function is called by:
 10948 ;;		_ringBufS_init
 10949 ;;		_ringBufS_flush
 10950 ;; This function uses a reentrant model
 10951 ;;
 10952                           
 10953                           	psect	text44
 10954  016E20                     __ptext44:
 10955                           	opt callstack 0
 10956  016E20                     _memset:
 10957                           	opt callstack 0
 10958                           
 10959                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10960  016E20  52E6               	movf	postinc1,f,c
 10961  016E22  52E6               	movf	postinc1,f,c
 10962  016E24  52E6               	movf	postinc1,f,c
 10963  016E26  52E6               	movf	postinc1,f,c
 10964                           
 10965                           ;stkvar	_dest @ sp[(-4)+-2]
 10966                           
 10967                           ;incstack = 0
 10968  016E28  0EFA               	movlw	-6
 10969  016E2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10970  016E30  0EFB               	movlw	-5
 10971  016E32  006F FF8C  F00C    	movff	plusw1,btemp+11
 10972                           
 10973                           ;stkvar	_s @ sp[(-4)+0]
 10974  016E38  0EFD               	movlw	-3
 10975  016E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10976  016E40  0EFC               	movlw	-4
 10977  016E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10978                           
 10979                           ;stkvar	_n @ sp[(-4)+-6]
 10980  016E48  0EF6               	movlw	-10
 10981  016E4A  006F FF8C  F001    	movff	plusw1,btemp
 10982  016E50  0EF7               	movlw	-9
 10983  016E52  50E3               	movf	plusw1,w,c
 10984  016E54  1001               	iorwf	btemp^0,w,c
 10985  016E56  B4D8               	btfsc	status,2,c
 10986  016E58  D154               	goto	u10830
 10987                           
 10988                           ;stkvar	_c @ sp[(-4)+-4]
 10989                           ;stkvar	_s @ sp[(-4)+0]
 10990  016E5A  0EFC               	movlw	-4
 10991  016E5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10992  016E62  0EFD               	movlw	-3
 10993  016E64  006F FF8F FFDA     	movff	plusw1,fsr2h
 10994  016E6A  0EF8               	movlw	-8
 10995  016E6C  006F FF8F FFDF     	movff	plusw1,indf2
 10996                           
 10997                           ;stkvar	_c @ sp[(-4)+-4]
 10998                           ;stkvar	_n @ sp[(-4)+-6]
 10999                           ;stkvar	_s @ sp[(-4)+0]
 11000  016E72  0EFC               	movlw	-4
 11001  016E74  006F FF8C  F00B    	movff	plusw1,btemp+10
 11002  016E7A  0EFD               	movlw	-3
 11003  016E7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11004  016E82  0EF6               	movlw	-10
 11005  016E84  50E3               	movf	plusw1,w,c
 11006  016E86  260B               	addwf	(btemp+10)^0,f,c
 11007  016E88  0EF7               	movlw	-9
 11008  016E8A  50E3               	movf	plusw1,w,c
 11009  016E8C  220C               	addwfc	(btemp+11)^0,f,c
 11010  016E8E  0EFF               	movlw	255
 11011  016E90  240B               	addwf	(btemp+10)^0,w,c
 11012  016E92  6ED9               	movwf	fsr2l,c
 11013  016E94  0EFF               	movlw	255
 11014  016E96  200C               	addwfc	(btemp+11)^0,w,c
 11015  016E98  6EDA               	movwf	fsr2h,c
 11016  016E9A  0EF8               	movlw	-8
 11017  016E9C  006F FF8F FFDF     	movff	plusw1,indf2
 11018                           
 11019                           ;stkvar	_n @ sp[(-4)+-6]
 11020  016EA2  0EF7               	movlw	-9
 11021  016EA4  50E3               	movf	plusw1,w,c
 11022  016EA6  E108               	bnz	l11842
 11023  016EA8  0EF6               	movlw	-10
 11024  016EAA  006F FF8C  F001    	movff	plusw1,btemp
 11025  016EB0  0E03               	movlw	3
 11026  016EB2  5E01               	subwf	btemp^0,f,c
 11027  016EB4  A0D8               	btfss	status,0,c
 11028  016EB6  D125               	goto	u10830
 11029  016EB8                     l11842:
 11030                           
 11031                           ;stkvar	_c @ sp[(-4)+-4]
 11032                           ;stkvar	_s @ sp[(-4)+0]
 11033  016EB8  0EFC               	movlw	-4
 11034  016EBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11035  016EC0  0EFD               	movlw	-3
 11036  016EC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11037  016EC8  0E01               	movlw	1
 11038  016ECA  240B               	addwf	(btemp+10)^0,w,c
 11039  016ECC  6ED9               	movwf	fsr2l,c
 11040  016ECE  0E00               	movlw	0
 11041  016ED0  200C               	addwfc	(btemp+11)^0,w,c
 11042  016ED2  6EDA               	movwf	fsr2h,c
 11043  016ED4  0EF8               	movlw	-8
 11044  016ED6  006F FF8F FFDF     	movff	plusw1,indf2
 11045                           
 11046                           ;stkvar	_c @ sp[(-4)+-4]
 11047                           ;stkvar	_s @ sp[(-4)+0]
 11048  016EDC  0EFC               	movlw	-4
 11049  016EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11050  016EE4  0EFD               	movlw	-3
 11051  016EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11052  016EEC  0E02               	movlw	2
 11053  016EEE  240B               	addwf	(btemp+10)^0,w,c
 11054  016EF0  6ED9               	movwf	fsr2l,c
 11055  016EF2  0E00               	movlw	0
 11056  016EF4  200C               	addwfc	(btemp+11)^0,w,c
 11057  016EF6  6EDA               	movwf	fsr2h,c
 11058  016EF8  0EF8               	movlw	-8
 11059  016EFA  006F FF8F FFDF     	movff	plusw1,indf2
 11060                           
 11061                           ;stkvar	_c @ sp[(-4)+-4]
 11062                           ;stkvar	_n @ sp[(-4)+-6]
 11063                           ;stkvar	_s @ sp[(-4)+0]
 11064  016F00  0EFC               	movlw	-4
 11065  016F02  006F FF8C  F00B    	movff	plusw1,btemp+10
 11066  016F08  0EFD               	movlw	-3
 11067  016F0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11068  016F10  0EF6               	movlw	-10
 11069  016F12  50E3               	movf	plusw1,w,c
 11070  016F14  260B               	addwf	(btemp+10)^0,f,c
 11071  016F16  0EF7               	movlw	-9
 11072  016F18  50E3               	movf	plusw1,w,c
 11073  016F1A  220C               	addwfc	(btemp+11)^0,f,c
 11074  016F1C  0EFE               	movlw	254
 11075  016F1E  240B               	addwf	(btemp+10)^0,w,c
 11076  016F20  6ED9               	movwf	fsr2l,c
 11077  016F22  0EFF               	movlw	255
 11078  016F24  200C               	addwfc	(btemp+11)^0,w,c
 11079  016F26  6EDA               	movwf	fsr2h,c
 11080  016F28  0EF8               	movlw	-8
 11081  016F2A  006F FF8F FFDF     	movff	plusw1,indf2
 11082                           
 11083                           ;stkvar	_c @ sp[(-4)+-4]
 11084                           ;stkvar	_n @ sp[(-4)+-6]
 11085                           ;stkvar	_s @ sp[(-4)+0]
 11086  016F30  0EFC               	movlw	-4
 11087  016F32  006F FF8C  F00B    	movff	plusw1,btemp+10
 11088  016F38  0EFD               	movlw	-3
 11089  016F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11090  016F40  0EF6               	movlw	-10
 11091  016F42  50E3               	movf	plusw1,w,c
 11092  016F44  260B               	addwf	(btemp+10)^0,f,c
 11093  016F46  0EF7               	movlw	-9
 11094  016F48  50E3               	movf	plusw1,w,c
 11095  016F4A  220C               	addwfc	(btemp+11)^0,f,c
 11096  016F4C  0EFD               	movlw	253
 11097  016F4E  240B               	addwf	(btemp+10)^0,w,c
 11098  016F50  6ED9               	movwf	fsr2l,c
 11099  016F52  0EFF               	movlw	255
 11100  016F54  200C               	addwfc	(btemp+11)^0,w,c
 11101  016F56  6EDA               	movwf	fsr2h,c
 11102  016F58  0EF8               	movlw	-8
 11103  016F5A  006F FF8F FFDF     	movff	plusw1,indf2
 11104                           
 11105                           ;stkvar	_n @ sp[(-4)+-6]
 11106  016F60  0EF7               	movlw	-9
 11107  016F62  50E3               	movf	plusw1,w,c
 11108  016F64  E108               	bnz	l11848
 11109  016F66  0EF6               	movlw	-10
 11110  016F68  006F FF8C  F001    	movff	plusw1,btemp
 11111  016F6E  0E07               	movlw	7
 11112  016F70  5E01               	subwf	btemp^0,f,c
 11113  016F72  A0D8               	btfss	status,0,c
 11114  016F74  D0C6               	goto	u10830
 11115  016F76                     l11848:
 11116                           
 11117                           ;stkvar	_c @ sp[(-4)+-4]
 11118                           ;stkvar	_s @ sp[(-4)+0]
 11119  016F76  0EFC               	movlw	-4
 11120  016F78  006F FF8C  F00B    	movff	plusw1,btemp+10
 11121  016F7E  0EFD               	movlw	-3
 11122  016F80  006F FF8C  F00C    	movff	plusw1,btemp+11
 11123  016F86  0E03               	movlw	3
 11124  016F88  240B               	addwf	(btemp+10)^0,w,c
 11125  016F8A  6ED9               	movwf	fsr2l,c
 11126  016F8C  0E00               	movlw	0
 11127  016F8E  200C               	addwfc	(btemp+11)^0,w,c
 11128  016F90  6EDA               	movwf	fsr2h,c
 11129  016F92  0EF8               	movlw	-8
 11130  016F94  006F FF8F FFDF     	movff	plusw1,indf2
 11131                           
 11132                           ;stkvar	_c @ sp[(-4)+-4]
 11133                           ;stkvar	_n @ sp[(-4)+-6]
 11134                           ;stkvar	_s @ sp[(-4)+0]
 11135  016F9A  0EFC               	movlw	-4
 11136  016F9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11137  016FA2  0EFD               	movlw	-3
 11138  016FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11139  016FAA  0EF6               	movlw	-10
 11140  016FAC  50E3               	movf	plusw1,w,c
 11141  016FAE  260B               	addwf	(btemp+10)^0,f,c
 11142  016FB0  0EF7               	movlw	-9
 11143  016FB2  50E3               	movf	plusw1,w,c
 11144  016FB4  220C               	addwfc	(btemp+11)^0,f,c
 11145  016FB6  0EFC               	movlw	252
 11146  016FB8  240B               	addwf	(btemp+10)^0,w,c
 11147  016FBA  6ED9               	movwf	fsr2l,c
 11148  016FBC  0EFF               	movlw	255
 11149  016FBE  200C               	addwfc	(btemp+11)^0,w,c
 11150  016FC0  6EDA               	movwf	fsr2h,c
 11151  016FC2  0EF8               	movlw	-8
 11152  016FC4  006F FF8F FFDF     	movff	plusw1,indf2
 11153                           
 11154                           ;stkvar	_n @ sp[(-4)+-6]
 11155  016FCA  0EF7               	movlw	-9
 11156  016FCC  50E3               	movf	plusw1,w,c
 11157  016FCE  E108               	bnz	l11854
 11158  016FD0  0EF6               	movlw	-10
 11159  016FD2  006F FF8C  F001    	movff	plusw1,btemp
 11160  016FD8  0E09               	movlw	9
 11161  016FDA  5E01               	subwf	btemp^0,f,c
 11162  016FDC  A0D8               	btfss	status,0,c
 11163  016FDE  D091               	goto	u10830
 11164  016FE0                     l11854:
 11165                           
 11166                           ;stkvar	_s @ sp[(-4)+0]
 11167  016FE0  0EFC               	movlw	-4
 11168  016FE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11169  016FE8  1E0B               	comf	(btemp+10)^0,f,c
 11170  016FEA  0EFD               	movlw	-3
 11171  016FEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11172  016FF2  1E0C               	comf	(btemp+11)^0,f,c
 11173  016FF4  2A0B               	incf	(btemp+10)^0,f,c
 11174  016FF6  B4D8               	btfsc	status,2,c
 11175  016FF8  2A0C               	incf	(btemp+11)^0,f,c
 11176  016FFA  0E03               	movlw	3
 11177  016FFC  160B               	andwf	(btemp+10)^0,f,c
 11178  016FFE  0E00               	movlw	0
 11179  017000  160C               	andwf	(btemp+11)^0,f,c
 11180                           
 11181                           ;stkvar	_k @ sp[(-4)+2]
 11182  017002  0EFE               	movlw	-2
 11183  017004  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11184  01700A  0EFF               	movlw	-1
 11185  01700C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11186                           
 11187                           ;stkvar	_k @ sp[(-4)+2]
 11188                           ;stkvar	_s @ sp[(-4)+0]
 11189  017012  0EFC               	movlw	-4
 11190  017014  50E3               	movf	plusw1,w,c
 11191  017016  6E01               	movwf	btemp^0,c
 11192  017018  0EFE               	movlw	-2
 11193  01701A  50E3               	movf	plusw1,w,c
 11194  01701C  2601               	addwf	btemp^0,f,c
 11195  01701E  0EFC               	movlw	-4
 11196  017020  0060  F007  FFE3   	movff	btemp,plusw1
 11197  017026  0EFD               	movlw	-3
 11198  017028  50E3               	movf	plusw1,w,c
 11199  01702A  6E01               	movwf	btemp^0,c
 11200  01702C  0EFF               	movlw	-1
 11201  01702E  50E3               	movf	plusw1,w,c
 11202  017030  2201               	addwfc	btemp^0,f,c
 11203  017032  0EFD               	movlw	-3
 11204  017034  0060  F007  FFE3   	movff	btemp,plusw1
 11205                           
 11206                           ;stkvar	_k @ sp[(-4)+2]
 11207                           ;stkvar	_n @ sp[(-4)+-6]
 11208  01703A  0EF6               	movlw	-10
 11209  01703C  50E3               	movf	plusw1,w,c
 11210  01703E  6E01               	movwf	btemp^0,c
 11211  017040  0EFE               	movlw	-2
 11212  017042  50E3               	movf	plusw1,w,c
 11213  017044  5E01               	subwf	btemp^0,f,c
 11214  017046  0EF6               	movlw	-10
 11215  017048  0060  F007  FFE3   	movff	btemp,plusw1
 11216  01704E  0EF7               	movlw	-9
 11217  017050  50E3               	movf	plusw1,w,c
 11218  017052  6E01               	movwf	btemp^0,c
 11219  017054  0EFF               	movlw	-1
 11220  017056  50E3               	movf	plusw1,w,c
 11221  017058  5A01               	subwfb	btemp^0,f,c
 11222  01705A  0EF7               	movlw	-9
 11223  01705C  0060  F007  FFE3   	movff	btemp,plusw1
 11224  017062  0EFC               	movlw	252
 11225  017064  6E0B               	movwf	(btemp+10)^0,c
 11226  017066  0EFF               	movlw	255
 11227  017068  6E0C               	movwf	(btemp+11)^0,c
 11228                           
 11229                           ;stkvar	_n @ sp[(-4)+-6]
 11230  01706A  0EF6               	movlw	-10
 11231  01706C  006F FF8C  F001    	movff	plusw1,btemp
 11232  017072  500B               	movf	(btemp+10)^0,w,c
 11233  017074  1601               	andwf	btemp^0,f,c
 11234  017076  0EF6               	movlw	-10
 11235  017078  0060  F007  FFE3   	movff	btemp,plusw1
 11236  01707E  0EF7               	movlw	-9
 11237  017080  006F FF8C  F001    	movff	plusw1,btemp
 11238  017086  500C               	movf	(btemp+11)^0,w,c
 11239  017088  1601               	andwf	btemp^0,f,c
 11240  01708A  0EF7               	movlw	-9
 11241  01708C  D02E               	goto	L9
 11242  01708E                     l11862:
 11243                           
 11244                           ;stkvar	_c @ sp[(-4)+-4]
 11245                           ;stkvar	_s @ sp[(-4)+0]
 11246  01708E  0EFC               	movlw	-4
 11247  017090  006F FF8F FFD9     	movff	plusw1,fsr2l
 11248  017096  0EFD               	movlw	-3
 11249  017098  006F FF8F FFDA     	movff	plusw1,fsr2h
 11250  01709E  0EF8               	movlw	-8
 11251  0170A0  006F FF8F FFDF     	movff	plusw1,indf2
 11252                           
 11253                           ;stkvar	_n @ sp[(-4)+-6]
 11254  0170A6  0EF6               	movlw	-10
 11255  0170A8  006F FF8C  F001    	movff	plusw1,btemp
 11256  0170AE  0E01               	movlw	1
 11257  0170B0  5E01               	subwf	btemp^0,f,c
 11258  0170B2  0EF6               	movlw	-10
 11259  0170B4  0060  F007  FFE3   	movff	btemp,plusw1
 11260  0170BA  0EF7               	movlw	-9
 11261  0170BC  006F FF8C  F001    	movff	plusw1,btemp
 11262  0170C2  0E00               	movlw	0
 11263  0170C4  5A01               	subwfb	btemp^0,f,c
 11264  0170C6  0EF7               	movlw	-9
 11265  0170C8  0060  F007  FFE3   	movff	btemp,plusw1
 11266                           
 11267                           ;stkvar	_s @ sp[(-4)+0]
 11268  0170CE  0EFC               	movlw	-4
 11269  0170D0  50E3               	movf	plusw1,w,c
 11270  0170D2  0F01               	addlw	1
 11271  0170D4  6E01               	movwf	btemp^0,c
 11272  0170D6  0EFC               	movlw	-4
 11273  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 11274  0170DE  6A01               	clrf	btemp^0,c
 11275  0170E0  0EFD               	movlw	-3
 11276  0170E2  50E3               	movf	plusw1,w,c
 11277  0170E4  2001               	addwfc	btemp^0,w,c
 11278  0170E6  6E01               	movwf	btemp^0,c
 11279  0170E8  0EFD               	movlw	-3
 11280  0170EA                     L9:
 11281  0170EA  0060  F007  FFE3   	movff	btemp,plusw1
 11282                           
 11283                           ;stkvar	_n @ sp[(-4)+-6]
 11284  0170F0  0EF6               	movlw	-10
 11285  0170F2  006F FF8C  F001    	movff	plusw1,btemp
 11286  0170F8  0EF7               	movlw	-9
 11287  0170FA  50E3               	movf	plusw1,w,c
 11288  0170FC  1001               	iorwf	btemp^0,w,c
 11289  0170FE  A4D8               	btfss	status,2,c
 11290  017100  D7C6               	goto	l11862
 11291  017102                     u10830:
 11292                           
 11293                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11294  017102  0EF6               	movlw	246
 11295  017104  26E1               	addwf	fsr1l,f,c
 11296  017106  0EFF               	movlw	255
 11297  017108  22E2               	addwfc	fsr1h,f,c
 11298  01710A  0012               	return		;funcret
 11299  01710C                     __end_of_memset:
 11300                           	opt callstack 0
 11301                           
 11302 ;; *************** function _printf *****************
 11303 ;; Defined at:
 11304 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;  fmt             2  [STACK] PTR const unsigned char 
 11307 ;;		 -> STR_44(3), STR_43(3), 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;  ap              2  [STACK] PTR void [1]
 11310 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11311 ;;  ret             2    0        int 
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  2  [STACK] int 
 11314 ;; Registers used:
 11315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11316 ;; Tracked objects:
 11317 ;;		On entry : 3F/3B
 11318 ;;		On exit  : 3F/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11325 ;;Total ram usage:        0 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:   23
 11328 ;; This function calls:
 11329 ;;		_vfprintf
 11330 ;; This function is called by:
 11331 ;;		_eaDogM_WriteString
 11332 ;;		_send_lcd_data_dma
 11333 ;; This function uses a reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text45
 11337  01B098                     __ptext45:
 11338                           	opt callstack 0
 11339  01B098                     _printf:
 11340                           	opt callstack 0
 11341                           
 11342                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11343  01B098  52E6               	movf	postinc1,f,c
 11344  01B09A  52E6               	movf	postinc1,f,c
 11345                           
 11346                           ;stkvar	?_printf @ sp[(-2)+-3]
 11347                           
 11348                           ;incstack = 0
 11349  01B09C  0EFB               	movlw	251
 11350  01B09E  24E1               	addwf	fsr1l,w,c
 11351  01B0A0  6E0B               	movwf	(btemp+10)^0,c
 11352  01B0A2  0EFF               	movlw	255
 11353  01B0A4  20E2               	addwfc	fsr1h,w,c
 11354  01B0A6  6E0C               	movwf	(btemp+11)^0,c
 11355                           
 11356                           ;stkvar	_ap @ sp[(-2)+0]
 11357  01B0A8  0EFF               	movlw	-1
 11358  01B0AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11359  01B0B0  0EFE               	movlw	-2
 11360  01B0B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11361                           
 11362                           ;stkvar	_ap @ sp[(-2)+0]
 11363  01B0B8  0EFE               	movlw	254
 11364  01B0BA  24E1               	addwf	fsr1l,w,c
 11365  01B0BC  6E01               	movwf	btemp^0,c
 11366  01B0BE  0EFF               	movlw	255
 11367  01B0C0  20E2               	addwfc	fsr1h,w,c
 11368  01B0C2  6E02               	movwf	(btemp+1)^0,c
 11369  01B0C4  0060  F007  FFE6   	movff	btemp,postinc1
 11370  01B0CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11371                           
 11372                           ;stkvar	_fmt @ sp[(-4)+-3]
 11373  01B0D0  0EF9               	movlw	-7
 11374  01B0D2  006F FF8F FFE6     	movff	plusw1,postinc1
 11375  01B0D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11376  01B0DE  0E00               	movlw	0
 11377  01B0E0  6EE6               	movwf	postinc1,c
 11378  01B0E2  0E00               	movlw	0
 11379  01B0E4  6EE6               	movwf	postinc1,c
 11380  01B0E6  EC3A  F0D3         	call	_vfprintf	;wreg free
 11381                           
 11382                           ; BSR set to: 0
 11383                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11384  01B0EA  52E5               	movf	postdec1,f,c
 11385  01B0EC  52E5               	movf	postdec1,f,c
 11386  01B0EE  52E5               	movf	postdec1,f,c
 11387  01B0F0  50E7               	movf	indf1,w,c
 11388  01B0F2  5EE1               	subwf	fsr1l,f,c
 11389  01B0F4  0E00               	movlw	0
 11390  01B0F6  5AE2               	subwfb	fsr1h,f,c
 11391  01B0F8  0012               	return		;funcret
 11392  01B0FA                     __end_of_printf:
 11393                           	opt callstack 0
 11394                           
 11395 ;; *************** function _vfprintf *****************
 11396 ;; Defined at:
 11397 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11400 ;;		 -> f(6), NULL(0), 
 11401 ;;  fmt             2  [STACK] PTR const unsigned char 
 11402 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11403 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11404 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11405 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11406 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 11407 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 11408 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 11409 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 11410 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 11411 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 11412 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11413 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11414 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11415 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11416 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11417 ;;  ap              2  [STACK] PTR PTR void 
 11418 ;;		 -> ap(2), ap(2), 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  cfmt            2  [STACK] PTR unsigned char 
 11421 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11422 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11423 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11424 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11425 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 11426 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 11427 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 11428 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 11429 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 11430 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 11431 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11432 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11433 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11434 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11435 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  2  [STACK] int 
 11438 ;; Registers used:
 11439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 3F/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;Total ram usage:        0 bytes
 11450 ;; Hardware stack levels used:    1
 11451 ;; Hardware stack levels required when called:   22
 11452 ;; This function calls:
 11453 ;;		_vfpfcnvrt
 11454 ;; This function is called by:
 11455 ;;		_sprintf
 11456 ;;		_printf
 11457 ;; This function uses a reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text46
 11461  01A674                     __ptext46:
 11462                           	opt callstack 0
 11463  01A674                     _vfprintf:
 11464                           	opt callstack 0
 11465                           
 11466                           ; BSR set to: 0
 11467                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11468  01A674  52E6               	movf	postinc1,f,c
 11469  01A676  52E6               	movf	postinc1,f,c
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11472                           ;stkvar	_fmt @ sp[(-2)+-4]
 11473                           
 11474                           ;incstack = 0
 11475 ;; hardware stack exceeded
 11476  01A678  0EFA               	movlw	-6
 11477  01A67A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11478  01A680  0EFB               	movlw	-5
 11479  01A682  006F FF8C  F00C    	movff	plusw1,btemp+11
 11480                           
 11481                           ;stkvar	_cfmt @ sp[(-2)+0]
 11482  01A688  0EFF               	movlw	-1
 11483  01A68A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11484  01A690  0EFE               	movlw	-2
 11485  01A692  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11488  01A698  0100               	movlb	0	; () banked
 11489  01A69A  6BC0               	clrf	_nout& (0+255),b
 11490  01A69C  6BC1               	clrf	(_nout+1)& (0+255),b
 11491                           
 11492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11493  01A69E  D021               	goto	l12712
 11494  01A6A0                     l12710:
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11498                           ;stkvar	_ap @ sp[(-2)+-6]
 11499  01A6A0  0EF8               	movlw	-8
 11500  01A6A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11501  01A6A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11502                           
 11503                           ;stkvar	_cfmt @ sp[(-4)+0]
 11504  01A6AE  0EFC               	movlw	252
 11505  01A6B0  24E1               	addwf	fsr1l,w,c
 11506  01A6B2  6E01               	movwf	btemp^0,c
 11507  01A6B4  0EFF               	movlw	255
 11508  01A6B6  20E2               	addwfc	fsr1h,w,c
 11509  01A6B8  6E02               	movwf	(btemp+1)^0,c
 11510  01A6BA  0060  F007  FFE6   	movff	btemp,postinc1
 11511  01A6C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11512                           
 11513                           ;stkvar	_fp @ sp[(-6)+-2]
 11514  01A6C6  0EF8               	movlw	-8
 11515  01A6C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11516  01A6CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11517  01A6D4  ECC4  F091         	call	_vfpfcnvrt	;wreg free
 11518  01A6D8  5001               	movf	btemp^0,w,c
 11519  01A6DA  0100               	movlb	0	; () banked
 11520  01A6DC  27C0               	addwf	_nout& (0+255),f,b
 11521  01A6DE  5002               	movf	(btemp+1)^0,w,c
 11522  01A6E0  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11523  01A6E2                     l12712:
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11527                           ;stkvar	_cfmt @ sp[(-2)+0]
 11528  01A6E2  50E1               	movf	fsr1l,w,c
 11529  01A6E4  0FFE               	addlw	-2
 11530  01A6E6  6ED9               	movwf	fsr2l,c
 11531  01A6E8  50E2               	movf	fsr1h,w,c
 11532  01A6EA  6EDA               	movwf	fsr2h,c
 11533  01A6EC  0EFF               	movlw	255
 11534  01A6EE  22DA               	addwfc	fsr2h,f,c
 11535  01A6F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11536  01A6F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11537  01A6FC                     	if	0	;tblptru may be non-zero
 11538  01A6FC                     	endif
 11539  01A6FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11540  01A6FC  0E00               	movlw	low (__mediumconst shr (0+16))
 11541  01A6FE  6EF8               	movwf	tblptru,c
 11542  01A700                     	endif
 11543  01A700  0008               	tblrd		*
 11544  01A702  50F5               	movf	tablat,w,c
 11545  01A704  0900               	iorlw	0
 11546  01A706  A4D8               	btfss	status,2,c
 11547  01A708  D7CB               	goto	l12710
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11551  01A70A  0060  F300  F001   	movff	_nout,btemp
 11552  01A710  0060  F304  F002   	movff	_nout+1,btemp+1
 11553                           
 11554                           ; BSR set to: 0
 11555                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11556  01A716  0EF8               	movlw	248
 11557  01A718  26E1               	addwf	fsr1l,f,c
 11558  01A71A  0EFF               	movlw	255
 11559  01A71C  22E2               	addwfc	fsr1h,f,c
 11560  01A71E  0012               	return		;funcret
 11561  01A720                     __end_of_vfprintf:
 11562                           	opt callstack 0
 11563                           
 11564 ;; *************** function _vfpfcnvrt *****************
 11565 ;; Defined at:
 11566 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11569 ;;		 -> f(6), NULL(0), 
 11570 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11571 ;;		 -> cfmt(2), 
 11572 ;;  ap              2  [STACK] PTR PTR void 
 11573 ;;		 -> ap(2), ap(2), 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  llu             8  [STACK] unsigned long long 
 11576 ;;  ll              8  [STACK] long long 
 11577 ;;  f               4  [STACK] long long 
 11578 ;;  ct              3  [STACK] unsigned char [3]
 11579 ;;  vp              3    0        PTR void 
 11580 ;;  cp              2  [STACK] PTR unsigned char 
 11581 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 11582 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 11583 ;;		 -> V(191), 
 11584 ;;  i               2    0        int 
 11585 ;;  done            2    0        int 
 11586 ;;  c               1  [STACK] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  2  [STACK] int 
 11589 ;; Registers used:
 11590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11600 ;;Total ram usage:        0 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:   21
 11603 ;; This function calls:
 11604 ;;		_atoi
 11605 ;;		_ctoa
 11606 ;;		_dtoa
 11607 ;;		_efgtoa
 11608 ;;		_fputc
 11609 ;;		_isdigit
 11610 ;;		_isupper
 11611 ;;		_stoa
 11612 ;;		_strncmp
 11613 ;;		_tolower
 11614 ;;		_utoa
 11615 ;;		_xtoa
 11616 ;; This function is called by:
 11617 ;;		_vfprintf
 11618 ;; This function uses a reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text47
 11622  012388                     __ptext47:
 11623                           	opt callstack 0
 11624  012388                     _vfpfcnvrt:
 11625                           	opt callstack 0
 11626                           
 11627                           ; BSR set to: 0
 11628                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11629  012388  0E20               	movlw	32
 11630  01238A  26E1               	addwf	fsr1l,f,c
 11631  01238C  0E00               	movlw	0
 11632  01238E  22E2               	addwfc	fsr1h,f,c
 11633                           
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11635                           ;stkvar	_fmt @ sp[(-32)+-4]
 11636                           
 11637                           ;incstack = 0
 11638 ;; hardware stack exceeded
 11639  012390  0EDC               	movlw	-36
 11640  012392  006F FF8F FFD9     	movff	plusw1,fsr2l
 11641  012398  0EDD               	movlw	-35
 11642  01239A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11643  0123A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11644  0123A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11645  0123AC                     	if	0	;tblptru may be non-zero
 11646  0123AC                     	endif
 11647  0123AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11648  0123AC  0E00               	movlw	low (__mediumconst shr (0+16))
 11649  0123AE  6EF8               	movwf	tblptru,c
 11650  0123B0                     	endif
 11651  0123B0  0008               	tblrd		*
 11652  0123B2  50F5               	movf	tablat,w,c
 11653  0123B4  0A25               	xorlw	37
 11654  0123B6  A4D8               	btfss	status,2,c
 11655  0123B8  EF6B  F099         	goto	l12672
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11658                           ;stkvar	_fmt @ sp[(-32)+-4]
 11659  0123BC  0EDC               	movlw	-36
 11660  0123BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11661  0123C4  0EDD               	movlw	-35
 11662  0123C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11663  0123CC  2ADE               	incf	postinc2,f,c
 11664  0123CE  0E00               	movlw	0
 11665  0123D0  22DD               	addwfc	postdec2,f,c
 11666                           
 11667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11668  0123D2  6A3A               	clrf	_width^0,c
 11669  0123D4  6A3B               	clrf	(_width+1)^0,c
 11670  0123D6  6A3E               	clrf	_flags^0,c
 11671  0123D8  6A3F               	clrf	(_flags+1)^0,c
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11674  0123DA  683C               	setf	_prec^0,c
 11675  0123DC  683D               	setf	(_prec+1)^0,c
 11676                           
 11677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11678                           ;stkvar	_fmt @ sp[(-32)+-4]
 11679  0123DE  0EDC               	movlw	-36
 11680  0123E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11681  0123E6  0EDD               	movlw	-35
 11682  0123E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11683  0123EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11684  0123F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11685  0123FA                     	if	0	;tblptru may be non-zero
 11686  0123FA                     	endif
 11687  0123FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11688  0123FA  0E00               	movlw	low (__mediumconst shr (0+16))
 11689  0123FC  6EF8               	movwf	tblptru,c
 11690  0123FE                     	endif
 11691  0123FE  0008               	tblrd		*
 11692  012400  50F5               	movf	tablat,w,c
 11693  012402  0A2A               	xorlw	42
 11694  012404  A4D8               	btfss	status,2,c
 11695  012406  D031               	goto	l12490
 11696                           
 11697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11698                           ;stkvar	_fmt @ sp[(-32)+-4]
 11699  012408  0EDC               	movlw	-36
 11700  01240A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11701  012410  0EDD               	movlw	-35
 11702  012412  006F FF8F FFDA     	movff	plusw1,fsr2h
 11703  012418  2ADE               	incf	postinc2,f,c
 11704  01241A  0E00               	movlw	0
 11705  01241C  22DD               	addwfc	postdec2,f,c
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11708                           ;stkvar	_ap @ sp[(-32)+-6]
 11709  01241E  0EDA               	movlw	-38
 11710  012420  006F FF8F FFD9     	movff	plusw1,fsr2l
 11711  012426  0EDB               	movlw	-37
 11712  012428  006F FF8F FFDA     	movff	plusw1,fsr2h
 11713  01242E  0E02               	movlw	2
 11714  012430  5EDE               	subwf	postinc2,f,c
 11715  012432  0E00               	movlw	0
 11716  012434  5ADD               	subwfb	postdec2,f,c
 11717  012436  006F FF78  F00B    	movff	postinc2,btemp+10
 11718  01243C  006F FF74  F00C    	movff	postdec2,btemp+11
 11719  012442  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11720  012448  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11721  01244E  006F FF78  F03A    	movff	postinc2,_width
 11722  012454  006F FF74  F03B    	movff	postdec2,_width+1
 11723                           
 11724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11725  01245A  AE3B               	btfss	(_width+1)^0,7,c
 11726  01245C  D066               	goto	u12020
 11727                           
 11728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11729  01245E  803E               	bsf	_flags^0,0,c
 11730                           
 11731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11732  012460  6C3A               	negf	_width^0,c
 11733  012462  1E3B               	comf	(_width+1)^0,f,c
 11734  012464  B0D8               	btfsc	status,0,c
 11735  012466  2A3B               	incf	(_width+1)^0,f,c
 11736  012468  D060               	goto	u12020
 11737  01246A                     l12490:
 11738                           
 11739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11740                           ;stkvar	_fmt @ sp[(-32)+-4]
 11741  01246A  0EDC               	movlw	-36
 11742  01246C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11743  012472  0EDD               	movlw	-35
 11744  012474  006F FF8F FFDA     	movff	plusw1,fsr2h
 11745  01247A  006F FF78  F00B    	movff	postinc2,btemp+10
 11746  012480  006F FF74  F00C    	movff	postdec2,btemp+11
 11747  012486  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11748  01248C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11749  012492  EC8D  F0BC         	call	_atoi	;wreg free
 11750  012496  0060  F004  F03A   	movff	btemp,_width
 11751  01249C  0060  F008  F03B   	movff	btemp+1,_width+1
 11752                           
 11753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11754  0124A2  D00B               	goto	l12494
 11755  0124A4                     l12492:
 11756                           
 11757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11758                           ;stkvar	_fmt @ sp[(-32)+-4]
 11759  0124A4  0EDC               	movlw	-36
 11760  0124A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11761  0124AC  0EDD               	movlw	-35
 11762  0124AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11763  0124B4  2ADE               	incf	postinc2,f,c
 11764  0124B6  0E00               	movlw	0
 11765  0124B8  22DD               	addwfc	postdec2,f,c
 11766  0124BA                     l12494:
 11767  0124BA  0ED0               	movlw	208
 11768  0124BC  6E0B               	movwf	(btemp+10)^0,c
 11769  0124BE  0EFF               	movlw	255
 11770  0124C0  6E0C               	movwf	(btemp+11)^0,c
 11771                           
 11772                           ;stkvar	_fmt @ sp[(-32)+-4]
 11773  0124C2  0EDC               	movlw	-36
 11774  0124C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11775  0124CA  0EDD               	movlw	-35
 11776  0124CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11777  0124D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 11778  0124D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 11779  0124DE                     	if	0	;tblptru may be non-zero
 11780  0124DE                     	endif
 11781  0124DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11782  0124DE  0E00               	movlw	low (__mediumconst shr (0+16))
 11783  0124E0  6EF8               	movwf	tblptru,c
 11784  0124E2                     	endif
 11785  0124E2  0008               	tblrd		*
 11786  0124E4  50F5               	movf	tablat,w,c
 11787  0124E6  6E09               	movwf	(btemp+8)^0,c
 11788  0124E8  6A0A               	clrf	(btemp+9)^0,c
 11789  0124EA  500B               	movf	(btemp+10)^0,w,c
 11790  0124EC  2609               	addwf	(btemp+8)^0,f,c
 11791  0124EE  500C               	movf	(btemp+11)^0,w,c
 11792  0124F0  220A               	addwfc	(btemp+9)^0,f,c
 11793  0124F2  500A               	movf	(btemp+9)^0,w,c
 11794  0124F4  E106               	bnz	u12000
 11795  0124F6  0E0A               	movlw	10
 11796  0124F8  5C09               	subwf	(btemp+8)^0,w,c
 11797  0124FA  B0D8               	btfsc	status,0,c
 11798  0124FC  D002               	goto	u12000
 11799  0124FE  0E01               	movlw	1
 11800  012500  D001               	goto	u12010
 11801  012502                     u12000:
 11802  012502  0E00               	movlw	0
 11803  012504                     u12010:
 11804  012504  6E0B               	movwf	(btemp+10)^0,c
 11805  012506  6A0C               	clrf	(btemp+11)^0,c
 11806                           
 11807                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11808  012508  0EE4               	movlw	-28
 11809  01250A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11810  012510  0EE5               	movlw	-27
 11811  012512  0060  F033  FFE3   	movff	btemp+11,plusw1
 11812                           
 11813                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11814  012518  0EE4               	movlw	-28
 11815  01251A  006F FF8C  F001    	movff	plusw1,btemp
 11816  012520  0EE5               	movlw	-27
 11817  012522  50E3               	movf	plusw1,w,c
 11818  012524  1001               	iorwf	btemp^0,w,c
 11819  012526  A4D8               	btfss	status,2,c
 11820  012528  D7BD               	goto	l12492
 11821  01252A                     u12020:
 11822                           
 11823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11824                           ;stkvar	_fmt @ sp[(-32)+-4]
 11825  01252A  0EDC               	movlw	-36
 11826  01252C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11827  012532  0EDD               	movlw	-35
 11828  012534  006F FF8F FFDA     	movff	plusw1,fsr2h
 11829  01253A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11830  012540  006F FF77 FFF7     	movff	postdec2,tblptrh
 11831  012546                     	if	0	;tblptru may be non-zero
 11832  012546                     	endif
 11833  012546                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11834  012546  0E00               	movlw	low (__mediumconst shr (0+16))
 11835  012548  6EF8               	movwf	tblptru,c
 11836  01254A                     	endif
 11837  01254A  0008               	tblrd		*
 11838  01254C  50F5               	movf	tablat,w,c
 11839  01254E  0A2E               	xorlw	46
 11840  012550  A4D8               	btfss	status,2,c
 11841  012552  D0AC               	goto	u12070
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11844  012554  6A3C               	clrf	_prec^0,c
 11845  012556  6A3D               	clrf	(_prec+1)^0,c
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11848                           ;stkvar	_fmt @ sp[(-32)+-4]
 11849  012558  0EDC               	movlw	-36
 11850  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11851  012560  0EDD               	movlw	-35
 11852  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 11853  012568  2ADE               	incf	postinc2,f,c
 11854  01256A  0E00               	movlw	0
 11855  01256C  22DD               	addwfc	postdec2,f,c
 11856                           
 11857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11858                           ;stkvar	_fmt @ sp[(-32)+-4]
 11859  01256E  0EDC               	movlw	-36
 11860  012570  006F FF8F FFD9     	movff	plusw1,fsr2l
 11861  012576  0EDD               	movlw	-35
 11862  012578  006F FF8F FFDA     	movff	plusw1,fsr2h
 11863  01257E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11864  012584  006F FF77 FFF7     	movff	postdec2,tblptrh
 11865  01258A                     	if	0	;tblptru may be non-zero
 11866  01258A                     	endif
 11867  01258A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11868  01258A  0E00               	movlw	low (__mediumconst shr (0+16))
 11869  01258C  6EF8               	movwf	tblptru,c
 11870  01258E                     	endif
 11871  01258E  0008               	tblrd		*
 11872  012590  50F5               	movf	tablat,w,c
 11873  012592  0A2A               	xorlw	42
 11874  012594  A4D8               	btfss	status,2,c
 11875  012596  D02A               	goto	l12512
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11878                           ;stkvar	_fmt @ sp[(-32)+-4]
 11879  012598  0EDC               	movlw	-36
 11880  01259A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11881  0125A0  0EDD               	movlw	-35
 11882  0125A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11883  0125A8  2ADE               	incf	postinc2,f,c
 11884  0125AA  0E00               	movlw	0
 11885  0125AC  22DD               	addwfc	postdec2,f,c
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11888                           ;stkvar	_ap @ sp[(-32)+-6]
 11889  0125AE  0EDA               	movlw	-38
 11890  0125B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11891  0125B6  0EDB               	movlw	-37
 11892  0125B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11893  0125BE  0E02               	movlw	2
 11894  0125C0  5EDE               	subwf	postinc2,f,c
 11895  0125C2  0E00               	movlw	0
 11896  0125C4  5ADD               	subwfb	postdec2,f,c
 11897  0125C6  006F FF78  F00B    	movff	postinc2,btemp+10
 11898  0125CC  006F FF74  F00C    	movff	postdec2,btemp+11
 11899  0125D2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11900  0125D8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11901  0125DE  006F FF78  F03C    	movff	postinc2,_prec
 11902  0125E4  006F FF74  F03D    	movff	postdec2,_prec+1
 11903                           
 11904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11905  0125EA  D060               	goto	u12070
 11906  0125EC                     l12512:
 11907                           
 11908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11909                           ;stkvar	_fmt @ sp[(-32)+-4]
 11910  0125EC  0EDC               	movlw	-36
 11911  0125EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11912  0125F4  0EDD               	movlw	-35
 11913  0125F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11914  0125FC  006F FF78  F00B    	movff	postinc2,btemp+10
 11915  012602  006F FF74  F00C    	movff	postdec2,btemp+11
 11916  012608  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11917  01260E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11918  012614  EC8D  F0BC         	call	_atoi	;wreg free
 11919  012618  0060  F004  F03C   	movff	btemp,_prec
 11920  01261E  0060  F008  F03D   	movff	btemp+1,_prec+1
 11921                           
 11922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11923  012624  D00B               	goto	l12516
 11924  012626                     l12514:
 11925                           
 11926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11927                           ;stkvar	_fmt @ sp[(-32)+-4]
 11928  012626  0EDC               	movlw	-36
 11929  012628  006F FF8F FFD9     	movff	plusw1,fsr2l
 11930  01262E  0EDD               	movlw	-35
 11931  012630  006F FF8F FFDA     	movff	plusw1,fsr2h
 11932  012636  2ADE               	incf	postinc2,f,c
 11933  012638  0E00               	movlw	0
 11934  01263A  22DD               	addwfc	postdec2,f,c
 11935  01263C                     l12516:
 11936  01263C  0ED0               	movlw	208
 11937  01263E  6E0B               	movwf	(btemp+10)^0,c
 11938  012640  0EFF               	movlw	255
 11939  012642  6E0C               	movwf	(btemp+11)^0,c
 11940                           
 11941                           ;stkvar	_fmt @ sp[(-32)+-4]
 11942  012644  0EDC               	movlw	-36
 11943  012646  006F FF8F FFD9     	movff	plusw1,fsr2l
 11944  01264C  0EDD               	movlw	-35
 11945  01264E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11946  012654  006F FF7B FFF6     	movff	postinc2,tblptrl
 11947  01265A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11948  012660                     	if	0	;tblptru may be non-zero
 11949  012660                     	endif
 11950  012660                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11951  012660  0E00               	movlw	low (__mediumconst shr (0+16))
 11952  012662  6EF8               	movwf	tblptru,c
 11953  012664                     	endif
 11954  012664  0008               	tblrd		*
 11955  012666  50F5               	movf	tablat,w,c
 11956  012668  6E09               	movwf	(btemp+8)^0,c
 11957  01266A  6A0A               	clrf	(btemp+9)^0,c
 11958  01266C  500B               	movf	(btemp+10)^0,w,c
 11959  01266E  2609               	addwf	(btemp+8)^0,f,c
 11960  012670  500C               	movf	(btemp+11)^0,w,c
 11961  012672  220A               	addwfc	(btemp+9)^0,f,c
 11962  012674  500A               	movf	(btemp+9)^0,w,c
 11963  012676  E106               	bnz	u12050
 11964  012678  0E0A               	movlw	10
 11965  01267A  5C09               	subwf	(btemp+8)^0,w,c
 11966  01267C  B0D8               	btfsc	status,0,c
 11967  01267E  D002               	goto	u12050
 11968  012680  0E01               	movlw	1
 11969  012682  D001               	goto	u12060
 11970  012684                     u12050:
 11971  012684  0E00               	movlw	0
 11972  012686                     u12060:
 11973  012686  6E0B               	movwf	(btemp+10)^0,c
 11974  012688  6A0C               	clrf	(btemp+11)^0,c
 11975                           
 11976                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 11977  01268A  0EE0               	movlw	-32
 11978  01268C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11979  012692  0EE1               	movlw	-31
 11980  012694  0060  F033  FFE3   	movff	btemp+11,plusw1
 11981                           
 11982                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 11983  01269A  0EE0               	movlw	-32
 11984  01269C  006F FF8C  F001    	movff	plusw1,btemp
 11985  0126A2  0EE1               	movlw	-31
 11986  0126A4  50E3               	movf	plusw1,w,c
 11987  0126A6  1001               	iorwf	btemp^0,w,c
 11988  0126A8  A4D8               	btfss	status,2,c
 11989  0126AA  D7BD               	goto	l12514
 11990  0126AC                     u12070:
 11991                           
 11992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11993                           ;stkvar	_fmt @ sp[(-32)+-4]
 11994  0126AC  0EDC               	movlw	-36
 11995  0126AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11996  0126B4  0EDD               	movlw	-35
 11997  0126B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11998  0126BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11999  0126C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12000  0126C8                     	if	0	;tblptru may be non-zero
 12001  0126C8                     	endif
 12002  0126C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12003  0126C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12004  0126CA  6EF8               	movwf	tblptru,c
 12005  0126CC                     	endif
 12006  0126CC  0008               	tblrd		*
 12007  0126CE  50F5               	movf	tablat,w,c
 12008  0126D0  6EE6               	movwf	postinc1,c
 12009  0126D2  0E00               	movlw	0
 12010  0126D4  6EE6               	movwf	postinc1,c
 12011  0126D6  EC89  F0D6         	call	_tolower	;wreg free
 12012                           
 12013                           ;stkvar	_ct @ sp[(-32)+26]
 12014  0126DA  0EFA               	movlw	-6
 12015  0126DC  0060  F007  FFE3   	movff	btemp,plusw1
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12018                           ;stkvar	_ct @ sp[(-32)+26]
 12019  0126E2  0EFA               	movlw	-6
 12020  0126E4  50E3               	movf	plusw1,w,c
 12021  0126E6  B4D8               	btfsc	status,2,c
 12022  0126E8  D05B               	goto	l12532
 12023                           
 12024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12025                           ;stkvar	_ct @ sp[(-32)+26]
 12026  0126EA  0EFB               	movlw	251
 12027  0126EC  24E1               	addwf	fsr1l,w,c
 12028  0126EE  6ED9               	movwf	fsr2l,c
 12029  0126F0  0EFF               	movlw	255
 12030  0126F2  20E2               	addwfc	fsr1h,w,c
 12031  0126F4  6EDA               	movwf	fsr2h,c
 12032                           
 12033                           ;stkvar	_fmt @ sp[(-32)+-4]
 12034  0126F6  0EDC               	movlw	-36
 12035  0126F8  006F FF8F FFE9     	movff	plusw1,fsr0l
 12036  0126FE  0EDD               	movlw	-35
 12037  012700  006F FF8F FFEA     	movff	plusw1,fsr0h
 12038  012706  006F FFB8  F00B    	movff	postinc0,btemp+10
 12039  01270C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12040  012712  0E01               	movlw	1
 12041  012714  260B               	addwf	(btemp+10)^0,f,c
 12042  012716  0E00               	movlw	0
 12043  012718  220C               	addwfc	(btemp+11)^0,f,c
 12044  01271A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12045  012720  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12046  012726                     	if	0	;tblptru may be non-zero
 12047  012726                     	endif
 12048  012726                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12049  012726  0E00               	movlw	low (__mediumconst shr (0+16))
 12050  012728  6EF8               	movwf	tblptru,c
 12051  01272A                     	endif
 12052  01272A  0008               	tblrd		*
 12053  01272C  50F5               	movf	tablat,w,c
 12054  01272E  6EE6               	movwf	postinc1,c
 12055  012730  0E00               	movlw	0
 12056  012732  6EE6               	movwf	postinc1,c
 12057  012734  EC89  F0D6         	call	_tolower	;wreg free
 12058  012738  5001               	movf	btemp^0,w,c
 12059  01273A  6EDF               	movwf	indf2,c
 12060                           
 12061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12062                           ;stkvar	_ct @ sp[(-32)+26]
 12063  01273C  0EFB               	movlw	251
 12064  01273E  24E1               	addwf	fsr1l,w,c
 12065  012740  6ED9               	movwf	fsr2l,c
 12066  012742  0EFF               	movlw	255
 12067  012744  20E2               	addwfc	fsr1h,w,c
 12068  012746  6EDA               	movwf	fsr2h,c
 12069  012748  50DF               	movf	indf2,w,c
 12070  01274A  B4D8               	btfsc	status,2,c
 12071  01274C  D029               	goto	l12532
 12072                           
 12073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12074                           ;stkvar	_ct @ sp[(-32)+26]
 12075  01274E  0EFC               	movlw	252
 12076  012750  24E1               	addwf	fsr1l,w,c
 12077  012752  6ED9               	movwf	fsr2l,c
 12078  012754  0EFF               	movlw	255
 12079  012756  20E2               	addwfc	fsr1h,w,c
 12080  012758  6EDA               	movwf	fsr2h,c
 12081                           
 12082                           ;stkvar	_fmt @ sp[(-32)+-4]
 12083  01275A  0EDC               	movlw	-36
 12084  01275C  006F FF8F FFE9     	movff	plusw1,fsr0l
 12085  012762  0EDD               	movlw	-35
 12086  012764  006F FF8F FFEA     	movff	plusw1,fsr0h
 12087  01276A  006F FFB8  F00B    	movff	postinc0,btemp+10
 12088  012770  006F FFB4  F00C    	movff	postdec0,btemp+11
 12089  012776  0E02               	movlw	2
 12090  012778  260B               	addwf	(btemp+10)^0,f,c
 12091  01277A  0E00               	movlw	0
 12092  01277C  220C               	addwfc	(btemp+11)^0,f,c
 12093  01277E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12094  012784  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12095  01278A                     	if	0	;tblptru may be non-zero
 12096  01278A                     	endif
 12097  01278A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12098  01278A  0E00               	movlw	low (__mediumconst shr (0+16))
 12099  01278C  6EF8               	movwf	tblptru,c
 12100  01278E                     	endif
 12101  01278E  0008               	tblrd		*
 12102  012790  50F5               	movf	tablat,w,c
 12103  012792  6EE6               	movwf	postinc1,c
 12104  012794  0E00               	movlw	0
 12105  012796  6EE6               	movwf	postinc1,c
 12106  012798  EC89  F0D6         	call	_tolower	;wreg free
 12107  01279C  5001               	movf	btemp^0,w,c
 12108  01279E  6EDF               	movwf	indf2,c
 12109  0127A0                     l12532:
 12110                           
 12111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12112                           ;stkvar	_fmt @ sp[(-32)+-4]
 12113  0127A0  0EDC               	movlw	-36
 12114  0127A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12115  0127A8  0EDD               	movlw	-35
 12116  0127AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12117  0127B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12118  0127B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12119  0127BC                     	if	0	;tblptru may be non-zero
 12120  0127BC                     	endif
 12121  0127BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12122  0127BC  0E00               	movlw	low (__mediumconst shr (0+16))
 12123  0127BE  6EF8               	movwf	tblptru,c
 12124  0127C0                     	endif
 12125  0127C0  0008               	tblrd		*
 12126  0127C2  50F5               	movf	tablat,w,c
 12127  0127C4  0A63               	xorlw	99
 12128  0127C6  A4D8               	btfss	status,2,c
 12129  0127C8  D037               	goto	l12542
 12130                           
 12131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12132                           ;stkvar	_fmt @ sp[(-32)+-4]
 12133  0127CA  0EDC               	movlw	-36
 12134  0127CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12135  0127D2  0EDD               	movlw	-35
 12136  0127D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12137  0127DA  2ADE               	incf	postinc2,f,c
 12138  0127DC  0E00               	movlw	0
 12139  0127DE  22DD               	addwfc	postdec2,f,c
 12140                           
 12141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12142                           ;stkvar	_ap @ sp[(-32)+-6]
 12143  0127E0  0EDA               	movlw	-38
 12144  0127E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12145  0127E8  0EDB               	movlw	-37
 12146  0127EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12147  0127F0  0E02               	movlw	2
 12148  0127F2  5EDE               	subwf	postinc2,f,c
 12149  0127F4  0E00               	movlw	0
 12150  0127F6  5ADD               	subwfb	postdec2,f,c
 12151  0127F8  006F FF78  F00B    	movff	postinc2,btemp+10
 12152  0127FE  006F FF74  F00C    	movff	postdec2,btemp+11
 12153  012804  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12154  01280A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12155  012810  50DF               	movf	indf2,w,c
 12156  012812  6E0C               	movwf	(btemp+11)^0,c
 12157                           
 12158                           ;stkvar	_c @ sp[(-32)+31]
 12159  012814  0EFF               	movlw	-1
 12160  012816  0060  F033  FFE3   	movff	btemp+11,plusw1
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12163                           ;stkvar	_c @ sp[(-32)+31]
 12164  01281C  0EFF               	movlw	-1
 12165  01281E  50E3               	movf	plusw1,w,c
 12166  012820  6EE6               	movwf	postinc1,c
 12167                           
 12168                           ;stkvar	_fp @ sp[(-33)+-2]
 12169  012822  0EDD               	movlw	-35
 12170  012824  006F FF8F FFE6     	movff	plusw1,postinc1
 12171  01282A  006F FF8F FFE6     	movff	plusw1,postinc1
 12172  012830  EC03  F0D6         	call	_ctoa	;wreg free
 12173  012834  EF95  F099         	goto	l2362
 12174  012838                     l12542:
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12177                           ;stkvar	_fmt @ sp[(-32)+-4]
 12178  012838  0EDC               	movlw	-36
 12179  01283A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12180  012840  0EDD               	movlw	-35
 12181  012842  006F FF8F FFDA     	movff	plusw1,fsr2h
 12182  012848  006F FF7B FFF6     	movff	postinc2,tblptrl
 12183  01284E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12184  012854                     	if	0	;tblptru may be non-zero
 12185  012854                     	endif
 12186  012854                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12187  012854  0E00               	movlw	low (__mediumconst shr (0+16))
 12188  012856  6EF8               	movwf	tblptru,c
 12189  012858                     	endif
 12190  012858  0008               	tblrd		*
 12191  01285A  50F5               	movf	tablat,w,c
 12192  01285C  0A64               	xorlw	100
 12193  01285E  B4D8               	btfsc	status,2,c
 12194  012860  D015               	goto	u12120
 12195                           
 12196                           ;stkvar	_fmt @ sp[(-32)+-4]
 12197  012862  0EDC               	movlw	-36
 12198  012864  006F FF8F FFD9     	movff	plusw1,fsr2l
 12199  01286A  0EDD               	movlw	-35
 12200  01286C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12201  012872  006F FF7B FFF6     	movff	postinc2,tblptrl
 12202  012878  006F FF77 FFF7     	movff	postdec2,tblptrh
 12203  01287E                     	if	0	;tblptru may be non-zero
 12204  01287E                     	endif
 12205  01287E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12206  01287E  0E00               	movlw	low (__mediumconst shr (0+16))
 12207  012880  6EF8               	movwf	tblptru,c
 12208  012882                     	endif
 12209  012882  0008               	tblrd		*
 12210  012884  50F5               	movf	tablat,w,c
 12211  012886  0A69               	xorlw	105
 12212  012888  A4D8               	btfss	status,2,c
 12213  01288A  D076               	goto	l12554
 12214  01288C                     u12120:
 12215                           
 12216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12217                           ;stkvar	_fmt @ sp[(-32)+-4]
 12218  01288C  0EDC               	movlw	-36
 12219  01288E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12220  012894  0EDD               	movlw	-35
 12221  012896  006F FF8F FFDA     	movff	plusw1,fsr2h
 12222  01289C  2ADE               	incf	postinc2,f,c
 12223  01289E  0E00               	movlw	0
 12224  0128A0  22DD               	addwfc	postdec2,f,c
 12225                           
 12226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12227                           ;stkvar	_ap @ sp[(-32)+-6]
 12228  0128A2  0EDA               	movlw	-38
 12229  0128A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12230  0128AA  0EDB               	movlw	-37
 12231  0128AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12232  0128B2  0E02               	movlw	2
 12233  0128B4  5EDE               	subwf	postinc2,f,c
 12234  0128B6  0E00               	movlw	0
 12235  0128B8  5ADD               	subwfb	postdec2,f,c
 12236  0128BA  006F FF78  F00B    	movff	postinc2,btemp+10
 12237  0128C0  006F FF74  F00C    	movff	postdec2,btemp+11
 12238  0128C6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12239  0128CC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12240  0128D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12241  0128D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12242                           
 12243                           ;stkvar	_ll @ sp[(-32)+14]
 12244  0128DE  0EEE               	movlw	-18
 12245  0128E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12246  0128E6  0EEF               	movlw	-17
 12247  0128E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12248  0128EE  6A01               	clrf	btemp^0,c
 12249  0128F0  BEE3               	btfsc	plusw1,7,c
 12250  0128F2  6801               	setf	btemp^0,c
 12251  0128F4  0EF0               	movlw	-16
 12252  0128F6  0060  F007  FFE3   	movff	btemp,plusw1
 12253  0128FC  0EF1               	movlw	-15
 12254  0128FE  0060  F007  FFE3   	movff	btemp,plusw1
 12255  012904  0EF2               	movlw	-14
 12256  012906  0060  F007  FFE3   	movff	btemp,plusw1
 12257  01290C  0EF3               	movlw	-13
 12258  01290E  0060  F007  FFE3   	movff	btemp,plusw1
 12259  012914  0EF4               	movlw	-12
 12260  012916  0060  F007  FFE3   	movff	btemp,plusw1
 12261  01291C  0EF5               	movlw	-11
 12262  01291E  0060  F007  FFE3   	movff	btemp,plusw1
 12263  012924                     l12550:
 12264                           
 12265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12266                           ;stkvar	_ll @ sp[(-32)+14]
 12267  012924  50E1               	movf	fsr1l,w,c
 12268  012926  0FEE               	addlw	-18
 12269  012928  6ED9               	movwf	fsr2l,c
 12270  01292A  50E2               	movf	fsr1h,w,c
 12271  01292C  6EDA               	movwf	fsr2h,c
 12272  01292E  0EFF               	movlw	255
 12273  012930  22DA               	addwfc	fsr2h,f,c
 12274  012932  006F FF7B FFE6     	movff	postinc2,postinc1
 12275  012938  006F FF7B FFE6     	movff	postinc2,postinc1
 12276  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 12277  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 12278  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 12279  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 12280  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 12281  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 12282                           
 12283                           ;stkvar	_fp @ sp[(-40)+-2]
 12284  012962  0ED6               	movlw	-42
 12285  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 12286  01296A  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  012970  ECE1  F0AB         	call	_dtoa	;wreg free
 12288  012974  EF95  F099         	goto	l2362
 12289  012978                     l12554:
 12290                           
 12291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12292  012978  0E02               	movlw	2
 12293  01297A  6EE6               	movwf	postinc1,c
 12294  01297C  0E00               	movlw	0
 12295  01297E  6EE6               	movwf	postinc1,c
 12296  012980  0EEA               	movlw	low STR_73
 12297  012982  6EE6               	movwf	postinc1,c
 12298  012984  0EFF               	movlw	high STR_73
 12299  012986  6EE6               	movwf	postinc1,c
 12300                           
 12301                           ;stkvar	_fmt @ sp[(-36)+-4]
 12302  012988  0ED8               	movlw	-40
 12303  01298A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12304  012990  0ED9               	movlw	-39
 12305  012992  006F FF8F FFDA     	movff	plusw1,fsr2h
 12306  012998  006F FF78  F00B    	movff	postinc2,btemp+10
 12307  01299E  006F FF74  F00C    	movff	postdec2,btemp+11
 12308  0129A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12309  0129AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 12310  0129B0  EC0A  F0C0         	call	_strncmp	;wreg free
 12311  0129B4  5001               	movf	btemp^0,w,c
 12312  0129B6  1002               	iorwf	(btemp+1)^0,w,c
 12313  0129B8  B4D8               	btfsc	status,2,c
 12314  0129BA  D022               	goto	u12140
 12315  0129BC  0E02               	movlw	2
 12316  0129BE  6EE6               	movwf	postinc1,c
 12317  0129C0  0E00               	movlw	0
 12318  0129C2  6EE6               	movwf	postinc1,c
 12319  0129C4  0EF0               	movlw	low STR_77
 12320  0129C6  6EE6               	movwf	postinc1,c
 12321  0129C8  0EFF               	movlw	high STR_77
 12322  0129CA  6EE6               	movwf	postinc1,c
 12323                           
 12324                           ;stkvar	_fmt @ sp[(-36)+-4]
 12325  0129CC  0ED8               	movlw	-40
 12326  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12327  0129D4  0ED9               	movlw	-39
 12328  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12329  0129DC  006F FF78  F00B    	movff	postinc2,btemp+10
 12330  0129E2  006F FF74  F00C    	movff	postdec2,btemp+11
 12331  0129E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12332  0129EE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12333  0129F4  EC0A  F0C0         	call	_strncmp	;wreg free
 12334  0129F8  5001               	movf	btemp^0,w,c
 12335  0129FA  1002               	iorwf	(btemp+1)^0,w,c
 12336  0129FC  A4D8               	btfss	status,2,c
 12337  0129FE  D069               	goto	l12566
 12338  012A00                     u12140:
 12339                           
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12341                           ;stkvar	_fmt @ sp[(-32)+-4]
 12342  012A00  0EDC               	movlw	-36
 12343  012A02  006F FF8F FFD9     	movff	plusw1,fsr2l
 12344  012A08  0EDD               	movlw	-35
 12345  012A0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12346  012A10  0E02               	movlw	2
 12347  012A12  26DE               	addwf	postinc2,f,c
 12348  012A14  0E00               	movlw	0
 12349  012A16  22DD               	addwfc	postdec2,f,c
 12350                           
 12351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12352                           ;stkvar	_ap @ sp[(-32)+-6]
 12353  012A18  0EDA               	movlw	-38
 12354  012A1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12355  012A20  0EDB               	movlw	-37
 12356  012A22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12357  012A28  0E04               	movlw	4
 12358  012A2A  5EDE               	subwf	postinc2,f,c
 12359  012A2C  0E00               	movlw	0
 12360  012A2E  5ADD               	subwfb	postdec2,f,c
 12361  012A30  006F FF78  F00B    	movff	postinc2,btemp+10
 12362  012A36  006F FF74  F00C    	movff	postdec2,btemp+11
 12363  012A3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12364  012A42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12365  012A48  006F FF78  F009    	movff	postinc2,btemp+8
 12366  012A4E  006F FF78  F00A    	movff	postinc2,btemp+9
 12367  012A54  006F FF78  F00B    	movff	postinc2,btemp+10
 12368  012A5A  006F FF78  F00C    	movff	postinc2,btemp+11
 12369  012A60  0060  F024  F011   	movff	btemp+8,btemp+16
 12370  012A66  0060  F028  F012   	movff	btemp+9,btemp+17
 12371  012A6C  0060  F02C  F013   	movff	btemp+10,btemp+18
 12372  012A72  0060  F030  F014   	movff	btemp+11,btemp+19
 12373  012A78  6A15               	clrf	(btemp+20)^0,c
 12374  012A7A  BE14               	btfsc	(btemp+19)^0,7,c
 12375  012A7C  6815               	setf	(btemp+20)^0,c
 12376  012A7E  0060  F054  F016   	movff	btemp+20,btemp+21
 12377  012A84  0060  F054  F017   	movff	btemp+20,btemp+22
 12378  012A8A  0060  F054  F018   	movff	btemp+20,btemp+23
 12379                           
 12380                           ;stkvar	_ll @ sp[(-32)+14]
 12381  012A90  0EEE               	movlw	-18
 12382  012A92  0060  F047  FFE3   	movff	btemp+16,plusw1
 12383  012A98  0EEF               	movlw	-17
 12384  012A9A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12385  012AA0  0EF0               	movlw	-16
 12386  012AA2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12387  012AA8  0EF1               	movlw	-15
 12388  012AAA  0060  F053  FFE3   	movff	btemp+19,plusw1
 12389  012AB0  0EF2               	movlw	-14
 12390  012AB2  0060  F057  FFE3   	movff	btemp+20,plusw1
 12391  012AB8  0EF3               	movlw	-13
 12392  012ABA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12393  012AC0  0EF4               	movlw	-12
 12394  012AC2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12395  012AC8  0EF5               	movlw	-11
 12396  012ACA  0060  F063  FFE3   	movff	btemp+23,plusw1
 12397  012AD0  D729               	goto	l12550
 12398  012AD2                     l12566:
 12399                           
 12400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12401                           ;stkvar	_ct @ sp[(-32)+26]
 12402  012AD2  0EFA               	movlw	-6
 12403  012AD4  006F FF8C  F001    	movff	plusw1,btemp
 12404  012ADA  0E66               	movlw	102
 12405  012ADC  1801               	xorwf	btemp^0,w,c
 12406  012ADE  A4D8               	btfss	status,2,c
 12407  012AE0  D06E               	goto	l12578
 12408                           
 12409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12410                           ;stkvar	_fmt @ sp[(-32)+-4]
 12411  012AE2  0EDC               	movlw	-36
 12412  012AE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12413  012AEA  0EDD               	movlw	-35
 12414  012AEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12415  012AF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12416  012AF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12417  012AFE                     	if	0	;tblptru may be non-zero
 12418  012AFE                     	endif
 12419  012AFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12420  012AFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12421  012B00  6EF8               	movwf	tblptru,c
 12422  012B02                     	endif
 12423                           
 12424                           ;stkvar	_c @ sp[(-32)+31]
 12425  012B02  0008               	tblrd		*
 12426  012B04  0EFF               	movlw	-1
 12427  012B06  006F FFD7 FFE3     	movff	tablat,plusw1
 12428                           
 12429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12430                           ;stkvar	_fmt @ sp[(-32)+-4]
 12431  012B0C  0EDC               	movlw	-36
 12432  012B0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12433  012B14  0EDD               	movlw	-35
 12434  012B16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12435  012B1C  2ADE               	incf	postinc2,f,c
 12436  012B1E  0E00               	movlw	0
 12437  012B20  22DD               	addwfc	postdec2,f,c
 12438                           
 12439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12440                           ;stkvar	_ap @ sp[(-32)+-6]
 12441  012B22  0EDA               	movlw	-38
 12442  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12443  012B2A  0EDB               	movlw	-37
 12444  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12445  012B32  0E04               	movlw	4
 12446  012B34  5EDE               	subwf	postinc2,f,c
 12447  012B36  0E00               	movlw	0
 12448  012B38  5ADD               	subwfb	postdec2,f,c
 12449  012B3A  006F FF78  F00B    	movff	postinc2,btemp+10
 12450  012B40  006F FF74  F00C    	movff	postdec2,btemp+11
 12451  012B46  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12452  012B4C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12453  012B52  006F FF78  F009    	movff	postinc2,btemp+8
 12454  012B58  006F FF78  F00A    	movff	postinc2,btemp+9
 12455  012B5E  006F FF78  F00B    	movff	postinc2,btemp+10
 12456  012B64  006F FF78  F00C    	movff	postinc2,btemp+11
 12457                           
 12458                           ;stkvar	_f @ sp[(-32)+22]
 12459  012B6A  0EF6               	movlw	-10
 12460  012B6C  0060  F027  FFE3   	movff	btemp+8,plusw1
 12461  012B72  0EF7               	movlw	-9
 12462  012B74  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12463  012B7A  0EF8               	movlw	-8
 12464  012B7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12465  012B82  0EF9               	movlw	-7
 12466  012B84  0060  F033  FFE3   	movff	btemp+11,plusw1
 12467  012B8A                     l12574:
 12468                           
 12469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12470                           ;stkvar	_c @ sp[(-32)+31]
 12471  012B8A  0EFF               	movlw	-1
 12472  012B8C  50E3               	movf	plusw1,w,c
 12473  012B8E  6EE6               	movwf	postinc1,c
 12474                           
 12475                           ;stkvar	_f @ sp[(-33)+22]
 12476  012B90  0EF5               	movlw	-11
 12477  012B92  006F FF8F FFE6     	movff	plusw1,postinc1
 12478  012B98  006F FF8F FFE6     	movff	plusw1,postinc1
 12479  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12480  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12481                           
 12482                           ;stkvar	_fp @ sp[(-37)+-2]
 12483  012BAA  0ED9               	movlw	-39
 12484  012BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  012BB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12486  012BB8  EC00  F080         	call	_efgtoa	;wreg free
 12487  012BBC  D3B6               	goto	l2362
 12488  012BBE                     l12578:
 12489                           
 12490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12491  012BBE  0E02               	movlw	2
 12492  012BC0  6EE6               	movwf	postinc1,c
 12493  012BC2  0E00               	movlw	0
 12494  012BC4  6EE6               	movwf	postinc1,c
 12495  012BC6  0EED               	movlw	low STR_82
 12496  012BC8  6EE6               	movwf	postinc1,c
 12497  012BCA  0EFF               	movlw	high STR_82
 12498  012BCC  6EE6               	movwf	postinc1,c
 12499                           
 12500                           ;stkvar	_ct @ sp[(-36)+26]
 12501  012BCE  0EF6               	movlw	246
 12502  012BD0  24E1               	addwf	fsr1l,w,c
 12503  012BD2  6E01               	movwf	btemp^0,c
 12504  012BD4  0EFF               	movlw	255
 12505  012BD6  20E2               	addwfc	fsr1h,w,c
 12506  012BD8  6E02               	movwf	(btemp+1)^0,c
 12507  012BDA  0060  F007  FFE6   	movff	btemp,postinc1
 12508  012BE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12509  012BE6  EC0A  F0C0         	call	_strncmp	;wreg free
 12510  012BEA  5001               	movf	btemp^0,w,c
 12511  012BEC  1002               	iorwf	(btemp+1)^0,w,c
 12512  012BEE  A4D8               	btfss	status,2,c
 12513  012BF0  D096               	goto	l12598
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12516                           ;stkvar	_fmt @ sp[(-32)+-4]
 12517  012BF2  0EDC               	movlw	-36
 12518  012BF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12519  012BFA  0EDD               	movlw	-35
 12520  012BFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12521  012C02  006F FF78  F00B    	movff	postinc2,btemp+10
 12522  012C08  006F FF74  F00C    	movff	postdec2,btemp+11
 12523  012C0E  0E01               	movlw	1
 12524  012C10  260B               	addwf	(btemp+10)^0,f,c
 12525  012C12  0E00               	movlw	0
 12526  012C14  220C               	addwfc	(btemp+11)^0,f,c
 12527  012C16  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12528  012C1C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12529  012C22                     	if	0	;tblptru may be non-zero
 12530  012C22                     	endif
 12531  012C22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12532  012C22  0E00               	movlw	low (__mediumconst shr (0+16))
 12533  012C24  6EF8               	movwf	tblptru,c
 12534  012C26                     	endif
 12535                           
 12536                           ;stkvar	_c @ sp[(-32)+31]
 12537  012C26  0008               	tblrd		*
 12538  012C28  0EFF               	movlw	-1
 12539  012C2A  006F FFD7 FFE3     	movff	tablat,plusw1
 12540  012C30  0EBF               	movlw	191
 12541  012C32  6E0B               	movwf	(btemp+10)^0,c
 12542  012C34  0EFF               	movlw	255
 12543  012C36  6E0C               	movwf	(btemp+11)^0,c
 12544                           
 12545                           ;stkvar	_fmt @ sp[(-32)+-4]
 12546  012C38  0EDC               	movlw	-36
 12547  012C3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12548  012C40  0EDD               	movlw	-35
 12549  012C42  006F FF8F FFDA     	movff	plusw1,fsr2h
 12550  012C48  006F FF7B FFF6     	movff	postinc2,tblptrl
 12551  012C4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12552  012C54                     	if	0	;tblptru may be non-zero
 12553  012C54                     	endif
 12554  012C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12555  012C54  0E00               	movlw	low (__mediumconst shr (0+16))
 12556  012C56  6EF8               	movwf	tblptru,c
 12557  012C58                     	endif
 12558  012C58  0008               	tblrd		*
 12559  012C5A  50F5               	movf	tablat,w,c
 12560  012C5C  6E09               	movwf	(btemp+8)^0,c
 12561  012C5E  6A0A               	clrf	(btemp+9)^0,c
 12562  012C60  500B               	movf	(btemp+10)^0,w,c
 12563  012C62  2609               	addwf	(btemp+8)^0,f,c
 12564  012C64  500C               	movf	(btemp+11)^0,w,c
 12565  012C66  220A               	addwfc	(btemp+9)^0,f,c
 12566  012C68  500A               	movf	(btemp+9)^0,w,c
 12567  012C6A  E106               	bnz	u12170
 12568  012C6C  0E1A               	movlw	26
 12569  012C6E  5C09               	subwf	(btemp+8)^0,w,c
 12570  012C70  B0D8               	btfsc	status,0,c
 12571  012C72  D002               	goto	u12170
 12572  012C74  0E01               	movlw	1
 12573  012C76  D001               	goto	u12180
 12574  012C78                     u12170:
 12575  012C78  0E00               	movlw	0
 12576  012C7A                     u12180:
 12577  012C7A  6E0B               	movwf	(btemp+10)^0,c
 12578  012C7C  6A0C               	clrf	(btemp+11)^0,c
 12579                           
 12580                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12581  012C7E  0EE2               	movlw	-30
 12582  012C80  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12583  012C86  0EE3               	movlw	-29
 12584  012C88  0060  F033  FFE3   	movff	btemp+11,plusw1
 12585                           
 12586                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12587  012C8E  0EE2               	movlw	-30
 12588  012C90  006F FF8C  F001    	movff	plusw1,btemp
 12589  012C96  0EE3               	movlw	-29
 12590  012C98  50E3               	movf	plusw1,w,c
 12591  012C9A  1001               	iorwf	btemp^0,w,c
 12592                           
 12593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12594                           ;stkvar	_ap @ sp[(-32)+-6]
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12597                           
 12598                           ;stkvar	_f @ sp[(-32)+22]
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12601                           ;stkvar	_ap @ sp[(-32)+-6]
 12602  012C9C  0EDA               	movlw	-38
 12603  012C9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12604  012CA4  0EDB               	movlw	-37
 12605  012CA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12606  012CAC  0E04               	movlw	4
 12607  012CAE  5EDE               	subwf	postinc2,f,c
 12608  012CB0  0E00               	movlw	0
 12609  012CB2  5ADD               	subwfb	postdec2,f,c
 12610  012CB4  006F FF78  F00B    	movff	postinc2,btemp+10
 12611  012CBA  006F FF74  F00C    	movff	postdec2,btemp+11
 12612  012CC0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12613  012CC6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12614  012CCC  006F FF78  F009    	movff	postinc2,btemp+8
 12615  012CD2  006F FF78  F00A    	movff	postinc2,btemp+9
 12616  012CD8  006F FF78  F00B    	movff	postinc2,btemp+10
 12617  012CDE  006F FF78  F00C    	movff	postinc2,btemp+11
 12618                           
 12619                           ;stkvar	_f @ sp[(-32)+22]
 12620  012CE4  0EF6               	movlw	-10
 12621  012CE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 12622  012CEC  0EF7               	movlw	-9
 12623  012CEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12624  012CF4  0EF8               	movlw	-8
 12625  012CF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12626  012CFC  0EF9               	movlw	-7
 12627  012CFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 12628                           
 12629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12630                           ;stkvar	_fmt @ sp[(-32)+-4]
 12631  012D04  0EDC               	movlw	-36
 12632  012D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 12633  012D0C  0EDD               	movlw	-35
 12634  012D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12635  012D14  0E02               	movlw	2
 12636  012D16  26DE               	addwf	postinc2,f,c
 12637  012D18  0E00               	movlw	0
 12638  012D1A  22DD               	addwfc	postdec2,f,c
 12639  012D1C  D736               	goto	l12574
 12640  012D1E                     l12598:
 12641                           
 12642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12643                           ;stkvar	_fmt @ sp[(-32)+-4]
 12644  012D1E  0EDC               	movlw	-36
 12645  012D20  006F FF8F FFD9     	movff	plusw1,fsr2l
 12646  012D26  0EDD               	movlw	-35
 12647  012D28  006F FF8F FFDA     	movff	plusw1,fsr2h
 12648  012D2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12649  012D34  006F FF77 FFF7     	movff	postdec2,tblptrh
 12650  012D3A                     	if	0	;tblptru may be non-zero
 12651  012D3A                     	endif
 12652  012D3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12653  012D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 12654  012D3C  6EF8               	movwf	tblptru,c
 12655  012D3E                     	endif
 12656  012D3E  0008               	tblrd		*
 12657  012D40  50F5               	movf	tablat,w,c
 12658  012D42  0A73               	xorlw	115
 12659  012D44  A4D8               	btfss	status,2,c
 12660  012D46  D042               	goto	l12608
 12661                           
 12662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12663                           ;stkvar	_fmt @ sp[(-32)+-4]
 12664  012D48  0EDC               	movlw	-36
 12665  012D4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12666  012D50  0EDD               	movlw	-35
 12667  012D52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12668  012D58  2ADE               	incf	postinc2,f,c
 12669  012D5A  0E00               	movlw	0
 12670  012D5C  22DD               	addwfc	postdec2,f,c
 12671                           
 12672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12673                           ;stkvar	_ap @ sp[(-32)+-6]
 12674  012D5E  0EDA               	movlw	-38
 12675  012D60  006F FF8F FFD9     	movff	plusw1,fsr2l
 12676  012D66  0EDB               	movlw	-37
 12677  012D68  006F FF8F FFDA     	movff	plusw1,fsr2h
 12678  012D6E  0E02               	movlw	2
 12679  012D70  5EDE               	subwf	postinc2,f,c
 12680  012D72  0E00               	movlw	0
 12681  012D74  5ADD               	subwfb	postdec2,f,c
 12682  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 12683  012D7C  006F FF74  F00C    	movff	postdec2,btemp+11
 12684  012D82  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12685  012D88  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12686  012D8E  006F FF78  F00B    	movff	postinc2,btemp+10
 12687  012D94  006F FF74  F00C    	movff	postdec2,btemp+11
 12688                           
 12689                           ;stkvar	_cp @ sp[(-32)+29]
 12690  012D9A  0EFE               	movlw	-2
 12691  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12692  012DA2  0EFD               	movlw	-3
 12693  012DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12694                           
 12695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12696                           ;stkvar	_cp @ sp[(-32)+29]
 12697  012DAA  0EFD               	movlw	-3
 12698  012DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12699  012DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12700                           
 12701                           ;stkvar	_fp @ sp[(-34)+-2]
 12702  012DB8  0EDC               	movlw	-36
 12703  012DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12704  012DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 12705  012DC6  ECEE  F0B9         	call	_stoa	;wreg free
 12706  012DCA  D2AF               	goto	l2362
 12707  012DCC                     l12608:
 12708                           
 12709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12710                           ;stkvar	_fmt @ sp[(-32)+-4]
 12711  012DCC  0EDC               	movlw	-36
 12712  012DCE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12713  012DD4  0EDD               	movlw	-35
 12714  012DD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12715  012DDC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12716  012DE2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12717  012DE8                     	if	0	;tblptru may be non-zero
 12718  012DE8                     	endif
 12719  012DE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12720  012DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 12721  012DEA  6EF8               	movwf	tblptru,c
 12722  012DEC                     	endif
 12723  012DEC  0008               	tblrd		*
 12724  012DEE  50F5               	movf	tablat,w,c
 12725  012DF0  0A75               	xorlw	117
 12726  012DF2  A4D8               	btfss	status,2,c
 12727  012DF4  D07C               	goto	l12618
 12728                           
 12729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12730                           ;stkvar	_fmt @ sp[(-32)+-4]
 12731  012DF6  0EDC               	movlw	-36
 12732  012DF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12733  012DFE  0EDD               	movlw	-35
 12734  012E00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12735  012E06  2ADE               	incf	postinc2,f,c
 12736  012E08  0E00               	movlw	0
 12737  012E0A  22DD               	addwfc	postdec2,f,c
 12738                           
 12739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12740                           ;stkvar	_ap @ sp[(-32)+-6]
 12741  012E0C  0EDA               	movlw	-38
 12742  012E0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12743  012E14  0EDB               	movlw	-37
 12744  012E16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12745  012E1C  0E02               	movlw	2
 12746  012E1E  5EDE               	subwf	postinc2,f,c
 12747  012E20  0E00               	movlw	0
 12748  012E22  5ADD               	subwfb	postdec2,f,c
 12749  012E24  006F FF78  F00B    	movff	postinc2,btemp+10
 12750  012E2A  006F FF74  F00C    	movff	postdec2,btemp+11
 12751  012E30  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12752  012E36  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12753  012E3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12754  012E42  006F FF74  F00C    	movff	postdec2,btemp+11
 12755  012E48  500B               	movf	(btemp+10)^0,w,c
 12756  012E4A  6E11               	movwf	(btemp+16)^0,c
 12757  012E4C  500C               	movf	(btemp+11)^0,w,c
 12758  012E4E  6E12               	movwf	(btemp+17)^0,c
 12759  012E50  6A13               	clrf	(btemp+18)^0,c
 12760  012E52  6A14               	clrf	(btemp+19)^0,c
 12761  012E54  6A15               	clrf	(btemp+20)^0,c
 12762  012E56  6A16               	clrf	(btemp+21)^0,c
 12763  012E58  6A17               	clrf	(btemp+22)^0,c
 12764  012E5A  6A18               	clrf	(btemp+23)^0,c
 12765                           
 12766                           ;stkvar	_llu @ sp[(-32)+6]
 12767  012E5C  0EE6               	movlw	-26
 12768  012E5E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12769  012E64  0EE7               	movlw	-25
 12770  012E66  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12771  012E6C  0EE8               	movlw	-24
 12772  012E6E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12773  012E74  0EE9               	movlw	-23
 12774  012E76  0060  F053  FFE3   	movff	btemp+19,plusw1
 12775  012E7C  0EEA               	movlw	-22
 12776  012E7E  0060  F057  FFE3   	movff	btemp+20,plusw1
 12777  012E84  0EEB               	movlw	-21
 12778  012E86  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12779  012E8C  0EEC               	movlw	-20
 12780  012E8E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12781  012E94  0EED               	movlw	-19
 12782  012E96  0060  F063  FFE3   	movff	btemp+23,plusw1
 12783                           
 12784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12785                           ;stkvar	_llu @ sp[(-32)+6]
 12786  012E9C  50E1               	movf	fsr1l,w,c
 12787  012E9E  0FE6               	addlw	-26
 12788  012EA0  6ED9               	movwf	fsr2l,c
 12789  012EA2  50E2               	movf	fsr1h,w,c
 12790  012EA4  6EDA               	movwf	fsr2h,c
 12791  012EA6  0EFF               	movlw	255
 12792  012EA8  22DA               	addwfc	fsr2h,f,c
 12793  012EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 12794  012EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 12795  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12796  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12797  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12798  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12799  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12800  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12801                           
 12802                           ;stkvar	_fp @ sp[(-40)+-2]
 12803  012EDA  0ED6               	movlw	-42
 12804  012EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 12805  012EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12806  012EE8  ECDA  F0B3         	call	_utoa	;wreg free
 12807  012EEC  D21E               	goto	l2362
 12808  012EEE                     l12618:
 12809                           
 12810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12811  012EEE  0E02               	movlw	2
 12812  012EF0  6EE6               	movwf	postinc1,c
 12813  012EF2  0E00               	movlw	0
 12814  012EF4  6EE6               	movwf	postinc1,c
 12815  012EF6  0EF3               	movlw	low STR_87
 12816  012EF8  6EE6               	movwf	postinc1,c
 12817  012EFA  0EFF               	movlw	high STR_87
 12818  012EFC  6EE6               	movwf	postinc1,c
 12819                           
 12820                           ;stkvar	_fmt @ sp[(-36)+-4]
 12821  012EFE  0ED8               	movlw	-40
 12822  012F00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12823  012F06  0ED9               	movlw	-39
 12824  012F08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12825  012F0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12826  012F14  006F FF74  F00C    	movff	postdec2,btemp+11
 12827  012F1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12828  012F20  0060  F033  FFE6   	movff	btemp+11,postinc1
 12829  012F26  EC0A  F0C0         	call	_strncmp	;wreg free
 12830  012F2A  5001               	movf	btemp^0,w,c
 12831  012F2C  1002               	iorwf	(btemp+1)^0,w,c
 12832  012F2E  A4D8               	btfss	status,2,c
 12833  012F30  D039               	goto	l12628
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12836                           ;stkvar	_fmt @ sp[(-32)+-4]
 12837  012F32  0EDC               	movlw	-36
 12838  012F34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12839  012F3A  0EDD               	movlw	-35
 12840  012F3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12841  012F42  0E02               	movlw	2
 12842  012F44  26DE               	addwf	postinc2,f,c
 12843  012F46  0E00               	movlw	0
 12844  012F48  22DD               	addwfc	postdec2,f,c
 12845                           
 12846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12847                           ;stkvar	_ap @ sp[(-32)+-6]
 12848  012F4A  0EDA               	movlw	-38
 12849  012F4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12850  012F52  0EDB               	movlw	-37
 12851  012F54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12852  012F5A  0E04               	movlw	4
 12853  012F5C  5EDE               	subwf	postinc2,f,c
 12854  012F5E  0E00               	movlw	0
 12855  012F60  5ADD               	subwfb	postdec2,f,c
 12856  012F62  006F FF78  F00B    	movff	postinc2,btemp+10
 12857  012F68  006F FF74  F00C    	movff	postdec2,btemp+11
 12858  012F6E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12859  012F74  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12860  012F7A  006F FF78  F009    	movff	postinc2,btemp+8
 12861  012F80  006F FF78  F00A    	movff	postinc2,btemp+9
 12862  012F86  006F FF78  F00B    	movff	postinc2,btemp+10
 12863  012F8C  006F FF78  F00C    	movff	postinc2,btemp+11
 12864  012F92  5009               	movf	(btemp+8)^0,w,c
 12865  012F94  6E11               	movwf	(btemp+16)^0,c
 12866  012F96  500A               	movf	(btemp+9)^0,w,c
 12867  012F98  6E12               	movwf	(btemp+17)^0,c
 12868  012F9A  500B               	movf	(btemp+10)^0,w,c
 12869  012F9C  6E13               	movwf	(btemp+18)^0,c
 12870  012F9E  500C               	movf	(btemp+11)^0,w,c
 12871  012FA0  6E14               	movwf	(btemp+19)^0,c
 12872  012FA2  D758               	goto	L10
 12873  012FA4                     l12628:
 12874                           
 12875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12876                           ;stkvar	_fmt @ sp[(-32)+-4]
 12877  012FA4  0EDC               	movlw	-36
 12878  012FA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12879  012FAC  0EDD               	movlw	-35
 12880  012FAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12881  012FB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12882  012FBA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12883  012FC0                     	if	0	;tblptru may be non-zero
 12884  012FC0                     	endif
 12885  012FC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12886  012FC0  0E00               	movlw	low (__mediumconst shr (0+16))
 12887  012FC2  6EF8               	movwf	tblptru,c
 12888  012FC4                     	endif
 12889  012FC4  0008               	tblrd		*
 12890  012FC6  50F5               	movf	tablat,w,c
 12891  012FC8  0A78               	xorlw	120
 12892  012FCA  B4D8               	btfsc	status,2,c
 12893  012FCC  D015               	goto	u12240
 12894                           
 12895                           ;stkvar	_fmt @ sp[(-32)+-4]
 12896  012FCE  0EDC               	movlw	-36
 12897  012FD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12898  012FD6  0EDD               	movlw	-35
 12899  012FD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12900  012FDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12901  012FE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12902  012FEA                     	if	0	;tblptru may be non-zero
 12903  012FEA                     	endif
 12904  012FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12905  012FEA  0E00               	movlw	low (__mediumconst shr (0+16))
 12906  012FEC  6EF8               	movwf	tblptru,c
 12907  012FEE                     	endif
 12908  012FEE  0008               	tblrd		*
 12909  012FF0  50F5               	movf	tablat,w,c
 12910  012FF2  0A58               	xorlw	88
 12911  012FF4  A4D8               	btfss	status,2,c
 12912  012FF6  D094               	goto	l12642
 12913  012FF8                     u12240:
 12914                           
 12915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12916                           ;stkvar	_fmt @ sp[(-32)+-4]
 12917  012FF8  0EDC               	movlw	-36
 12918  012FFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12919  013000  0EDD               	movlw	-35
 12920  013002  006F FF8F FFDA     	movff	plusw1,fsr2h
 12921  013008  006F FF7B FFF6     	movff	postinc2,tblptrl
 12922  01300E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12923  013014                     	if	0	;tblptru may be non-zero
 12924  013014                     	endif
 12925  013014                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12926  013014  0E00               	movlw	low (__mediumconst shr (0+16))
 12927  013016  6EF8               	movwf	tblptru,c
 12928  013018                     	endif
 12929                           
 12930                           ;stkvar	_c @ sp[(-32)+31]
 12931  013018  0008               	tblrd		*
 12932  01301A  0EFF               	movlw	-1
 12933  01301C  006F FFD7 FFE3     	movff	tablat,plusw1
 12934                           
 12935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12936                           ;stkvar	_fmt @ sp[(-32)+-4]
 12937  013022  0EDC               	movlw	-36
 12938  013024  006F FF8F FFD9     	movff	plusw1,fsr2l
 12939  01302A  0EDD               	movlw	-35
 12940  01302C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12941  013032  2ADE               	incf	postinc2,f,c
 12942  013034  0E00               	movlw	0
 12943  013036  22DD               	addwfc	postdec2,f,c
 12944                           
 12945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12946                           ;stkvar	_ap @ sp[(-32)+-6]
 12947  013038  0EDA               	movlw	-38
 12948  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12949  013040  0EDB               	movlw	-37
 12950  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 12951  013048  0E02               	movlw	2
 12952  01304A  5EDE               	subwf	postinc2,f,c
 12953  01304C  0E00               	movlw	0
 12954  01304E  5ADD               	subwfb	postdec2,f,c
 12955  013050  006F FF78  F00B    	movff	postinc2,btemp+10
 12956  013056  006F FF74  F00C    	movff	postdec2,btemp+11
 12957  01305C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12958  013062  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12959  013068  006F FF78  F00B    	movff	postinc2,btemp+10
 12960  01306E  006F FF74  F00C    	movff	postdec2,btemp+11
 12961  013074  500B               	movf	(btemp+10)^0,w,c
 12962  013076  6E11               	movwf	(btemp+16)^0,c
 12963  013078  500C               	movf	(btemp+11)^0,w,c
 12964  01307A  6E12               	movwf	(btemp+17)^0,c
 12965  01307C  6A13               	clrf	(btemp+18)^0,c
 12966  01307E  6A14               	clrf	(btemp+19)^0,c
 12967  013080  6A15               	clrf	(btemp+20)^0,c
 12968  013082  6A16               	clrf	(btemp+21)^0,c
 12969  013084  6A17               	clrf	(btemp+22)^0,c
 12970  013086  6A18               	clrf	(btemp+23)^0,c
 12971                           
 12972                           ;stkvar	_llu @ sp[(-32)+6]
 12973  013088  0EE6               	movlw	-26
 12974  01308A  0060  F047  FFE3   	movff	btemp+16,plusw1
 12975  013090  0EE7               	movlw	-25
 12976  013092  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12977  013098  0EE8               	movlw	-24
 12978  01309A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12979  0130A0  0EE9               	movlw	-23
 12980  0130A2  0060  F053  FFE3   	movff	btemp+19,plusw1
 12981  0130A8  0EEA               	movlw	-22
 12982  0130AA  0060  F057  FFE3   	movff	btemp+20,plusw1
 12983  0130B0  0EEB               	movlw	-21
 12984  0130B2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12985  0130B8  0EEC               	movlw	-20
 12986  0130BA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12987  0130C0  0EED               	movlw	-19
 12988  0130C2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12989                           
 12990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12991                           ;stkvar	_c @ sp[(-32)+31]
 12992  0130C8  0EFF               	movlw	-1
 12993  0130CA  50E3               	movf	plusw1,w,c
 12994  0130CC  6EE6               	movwf	postinc1,c
 12995                           
 12996                           ;stkvar	_llu @ sp[(-33)+6]
 12997  0130CE  50E1               	movf	fsr1l,w,c
 12998  0130D0  0FE5               	addlw	-27
 12999  0130D2  6ED9               	movwf	fsr2l,c
 13000  0130D4  50E2               	movf	fsr1h,w,c
 13001  0130D6  6EDA               	movwf	fsr2h,c
 13002  0130D8  0EFF               	movlw	255
 13003  0130DA  22DA               	addwfc	fsr2h,f,c
 13004  0130DC  006F FF7B FFE6     	movff	postinc2,postinc1
 13005  0130E2  006F FF7B FFE6     	movff	postinc2,postinc1
 13006  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 13007  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 13008  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13009  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13010  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 13011  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 13012                           
 13013                           ;stkvar	_fp @ sp[(-41)+-2]
 13014  01310C  0ED5               	movlw	-43
 13015  01310E  006F FF8F FFE6     	movff	plusw1,postinc1
 13016  013114  006F FF8F FFE6     	movff	plusw1,postinc1
 13017  01311A  EC47  F0B0         	call	_xtoa	;wreg free
 13018  01311E  D105               	goto	l2362
 13019  013120                     l12642:
 13020                           
 13021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13022  013120  0E02               	movlw	2
 13023  013122  6EE6               	movwf	postinc1,c
 13024  013124  0E00               	movlw	0
 13025  013126  6EE6               	movwf	postinc1,c
 13026  013128  0EF6               	movlw	low STR_92
 13027  01312A  6EE6               	movwf	postinc1,c
 13028  01312C  0EFF               	movlw	high STR_92
 13029  01312E  6EE6               	movwf	postinc1,c
 13030                           
 13031                           ;stkvar	_fmt @ sp[(-36)+-4]
 13032  013130  0ED8               	movlw	-40
 13033  013132  006F FF8F FFD9     	movff	plusw1,fsr2l
 13034  013138  0ED9               	movlw	-39
 13035  01313A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13036  013140  006F FF78  F00B    	movff	postinc2,btemp+10
 13037  013146  006F FF74  F00C    	movff	postdec2,btemp+11
 13038  01314C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13039  013152  0060  F033  FFE6   	movff	btemp+11,postinc1
 13040  013158  EC0A  F0C0         	call	_strncmp	;wreg free
 13041  01315C  5001               	movf	btemp^0,w,c
 13042  01315E  1002               	iorwf	(btemp+1)^0,w,c
 13043  013160  B4D8               	btfsc	status,2,c
 13044  013162  D022               	goto	u12260
 13045  013164  0E02               	movlw	2
 13046  013166  6EE6               	movwf	postinc1,c
 13047  013168  0E00               	movlw	0
 13048  01316A  6EE6               	movwf	postinc1,c
 13049  01316C  0EE7               	movlw	low STR_96
 13050  01316E  6EE6               	movwf	postinc1,c
 13051  013170  0EFF               	movlw	high STR_96
 13052  013172  6EE6               	movwf	postinc1,c
 13053                           
 13054                           ;stkvar	_fmt @ sp[(-36)+-4]
 13055  013174  0ED8               	movlw	-40
 13056  013176  006F FF8F FFD9     	movff	plusw1,fsr2l
 13057  01317C  0ED9               	movlw	-39
 13058  01317E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13059  013184  006F FF78  F00B    	movff	postinc2,btemp+10
 13060  01318A  006F FF74  F00C    	movff	postdec2,btemp+11
 13061  013190  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13062  013196  0060  F033  FFE6   	movff	btemp+11,postinc1
 13063  01319C  EC0A  F0C0         	call	_strncmp	;wreg free
 13064  0131A0  5001               	movf	btemp^0,w,c
 13065  0131A2  1002               	iorwf	(btemp+1)^0,w,c
 13066  0131A4  A4D8               	btfss	status,2,c
 13067  0131A6  D058               	goto	l12656
 13068  0131A8                     u12260:
 13069                           
 13070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13071                           ;stkvar	_fmt @ sp[(-32)+-4]
 13072  0131A8  0EDC               	movlw	-36
 13073  0131AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13074  0131B0  0EDD               	movlw	-35
 13075  0131B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13076  0131B8  006F FF78  F00B    	movff	postinc2,btemp+10
 13077  0131BE  006F FF74  F00C    	movff	postdec2,btemp+11
 13078  0131C4  0E01               	movlw	1
 13079  0131C6  260B               	addwf	(btemp+10)^0,f,c
 13080  0131C8  0E00               	movlw	0
 13081  0131CA  220C               	addwfc	(btemp+11)^0,f,c
 13082  0131CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13083  0131D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13084  0131D8                     	if	0	;tblptru may be non-zero
 13085  0131D8                     	endif
 13086  0131D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13087  0131D8  0E00               	movlw	low (__mediumconst shr (0+16))
 13088  0131DA  6EF8               	movwf	tblptru,c
 13089  0131DC                     	endif
 13090                           
 13091                           ;stkvar	_c @ sp[(-32)+31]
 13092  0131DC  0008               	tblrd		*
 13093  0131DE  0EFF               	movlw	-1
 13094  0131E0  006F FFD7 FFE3     	movff	tablat,plusw1
 13095                           
 13096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13097                           ;stkvar	_fmt @ sp[(-32)+-4]
 13098  0131E6  0EDC               	movlw	-36
 13099  0131E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13100  0131EE  0EDD               	movlw	-35
 13101  0131F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13102  0131F6  0E02               	movlw	2
 13103  0131F8  26DE               	addwf	postinc2,f,c
 13104  0131FA  0E00               	movlw	0
 13105  0131FC  22DD               	addwfc	postdec2,f,c
 13106                           
 13107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13108                           ;stkvar	_ap @ sp[(-32)+-6]
 13109  0131FE  0EDA               	movlw	-38
 13110  013200  006F FF8F FFD9     	movff	plusw1,fsr2l
 13111  013206  0EDB               	movlw	-37
 13112  013208  006F FF8F FFDA     	movff	plusw1,fsr2h
 13113  01320E  0E04               	movlw	4
 13114  013210  5EDE               	subwf	postinc2,f,c
 13115  013212  0E00               	movlw	0
 13116  013214  5ADD               	subwfb	postdec2,f,c
 13117  013216  006F FF78  F00B    	movff	postinc2,btemp+10
 13118  01321C  006F FF74  F00C    	movff	postdec2,btemp+11
 13119  013222  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13120  013228  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13121  01322E  006F FF78  F009    	movff	postinc2,btemp+8
 13122  013234  006F FF78  F00A    	movff	postinc2,btemp+9
 13123  01323A  006F FF78  F00B    	movff	postinc2,btemp+10
 13124  013240  006F FF78  F00C    	movff	postinc2,btemp+11
 13125  013246  5009               	movf	(btemp+8)^0,w,c
 13126  013248  6E11               	movwf	(btemp+16)^0,c
 13127  01324A  500A               	movf	(btemp+9)^0,w,c
 13128  01324C  6E12               	movwf	(btemp+17)^0,c
 13129  01324E  500B               	movf	(btemp+10)^0,w,c
 13130  013250  6E13               	movwf	(btemp+18)^0,c
 13131  013252  500C               	movf	(btemp+11)^0,w,c
 13132  013254  6E14               	movwf	(btemp+19)^0,c
 13133  013256  D714               	goto	L11
 13134  013258                     l12656:
 13135                           
 13136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13137                           ;stkvar	_fmt @ sp[(-32)+-4]
 13138  013258  0EDC               	movlw	-36
 13139  01325A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13140  013260  0EDD               	movlw	-35
 13141  013262  006F FF8F FFDA     	movff	plusw1,fsr2h
 13142  013268  006F FF7B FFF6     	movff	postinc2,tblptrl
 13143  01326E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13144  013274                     	if	0	;tblptru may be non-zero
 13145  013274                     	endif
 13146  013274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13147  013274  0E00               	movlw	low (__mediumconst shr (0+16))
 13148  013276  6EF8               	movwf	tblptru,c
 13149  013278                     	endif
 13150  013278  0008               	tblrd		*
 13151  01327A  50F5               	movf	tablat,w,c
 13152  01327C  0A25               	xorlw	37
 13153  01327E  A4D8               	btfss	status,2,c
 13154  013280  D01A               	goto	l12666
 13155                           
 13156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13157                           ;stkvar	_fmt @ sp[(-32)+-4]
 13158  013282  0EDC               	movlw	-36
 13159  013284  006F FF8F FFD9     	movff	plusw1,fsr2l
 13160  01328A  0EDD               	movlw	-35
 13161  01328C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13162  013292  2ADE               	incf	postinc2,f,c
 13163  013294  0E00               	movlw	0
 13164  013296  22DD               	addwfc	postdec2,f,c
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13167                           ;stkvar	_fp @ sp[(-32)+-2]
 13168  013298  0EDE               	movlw	-34
 13169  01329A  006F FF8F FFE6     	movff	plusw1,postinc1
 13170  0132A0  006F FF8F FFE6     	movff	plusw1,postinc1
 13171  0132A6  0E25               	movlw	37
 13172  0132A8  6EE6               	movwf	postinc1,c
 13173  0132AA  0E00               	movlw	0
 13174  0132AC  6EE6               	movwf	postinc1,c
 13175  0132AE  ECBC  F0CB         	call	_fputc	;wreg free
 13176  0132B2                     l12662:
 13177                           
 13178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13179  0132B2  0E01               	movlw	1
 13180  0132B4  D00C               	goto	L12
 13181  0132B6                     l12666:
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13184                           ;stkvar	_fmt @ sp[(-32)+-4]
 13185  0132B6  0EDC               	movlw	-36
 13186  0132B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13187  0132BE  0EDD               	movlw	-35
 13188  0132C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13189  0132C6  2ADE               	incf	postinc2,f,c
 13190  0132C8  0E00               	movlw	0
 13191  0132CA  22DD               	addwfc	postdec2,f,c
 13192                           
 13193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13194  0132CC  0E00               	movlw	0
 13195  0132CE                     L12:
 13196  0132CE  6E01               	movwf	btemp^0,c
 13197  0132D0  0E00               	movlw	0
 13198  0132D2  6E02               	movwf	(btemp+1)^0,c
 13199  0132D4  D02A               	goto	l2362
 13200  0132D6                     l12672:
 13201                           
 13202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13203                           ;stkvar	_fp @ sp[(-32)+-2]
 13204  0132D6  0EDE               	movlw	-34
 13205  0132D8  006F FF8F FFE6     	movff	plusw1,postinc1
 13206  0132DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13207                           
 13208                           ;stkvar	_fmt @ sp[(-34)+-4]
 13209  0132E4  0EDA               	movlw	-38
 13210  0132E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13211  0132EC  0EDB               	movlw	-37
 13212  0132EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13213  0132F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 13214  0132FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 13215  013300                     	if	0	;tblptru may be non-zero
 13216  013300                     	endif
 13217  013300                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13218  013300  0E00               	movlw	low (__mediumconst shr (0+16))
 13219  013302  6EF8               	movwf	tblptru,c
 13220  013304                     	endif
 13221  013304  0008               	tblrd		*
 13222  013306  50F5               	movf	tablat,w,c
 13223  013308  6EE6               	movwf	postinc1,c
 13224  01330A  0E00               	movlw	0
 13225  01330C  6EE6               	movwf	postinc1,c
 13226  01330E  ECBC  F0CB         	call	_fputc	;wreg free
 13227                           
 13228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13229                           ;stkvar	_fmt @ sp[(-32)+-4]
 13230  013312  0EDC               	movlw	-36
 13231  013314  006F FF8F FFD9     	movff	plusw1,fsr2l
 13232  01331A  0EDD               	movlw	-35
 13233  01331C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13234  013322  2ADE               	incf	postinc2,f,c
 13235  013324  0E00               	movlw	0
 13236  013326  22DD               	addwfc	postdec2,f,c
 13237  013328  D7C4               	goto	l12662
 13238  01332A                     l2362:
 13239                           
 13240                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13241  01332A  0EDA               	movlw	218
 13242  01332C  26E1               	addwf	fsr1l,f,c
 13243  01332E  0EFF               	movlw	255
 13244  013330  22E2               	addwfc	fsr1h,f,c
 13245  013332  0012               	return		;funcret
 13246  013334                     __end_of_vfpfcnvrt:
 13247                           	opt callstack 0
 13248                           
 13249 ;; *************** function _xtoa *****************
 13250 ;; Defined at:
 13251 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13254 ;;		 -> f(6), NULL(0), 
 13255 ;;  d               8  [STACK] unsigned long long 
 13256 ;;  x               1  [STACK] unsigned char 
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;  n               8  [STACK] unsigned long long 
 13259 ;;  c               2  [STACK] int 
 13260 ;;  i               2  [STACK] int 
 13261 ;;  w               2  [STACK] int 
 13262 ;;  p               2  [STACK] int 
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  2  [STACK] int 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13276 ;;Total ram usage:        0 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:   20
 13279 ;; This function calls:
 13280 ;;		_isalpha
 13281 ;;		_isupper
 13282 ;;		_pad
 13283 ;;		_toupper
 13284 ;; This function is called by:
 13285 ;;		_vfpfcnvrt
 13286 ;; This function uses a reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text48
 13290  01608E                     __ptext48:
 13291                           	opt callstack 0
 13292  01608E                     _xtoa:
 13293                           	opt callstack 0
 13294                           
 13295                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13296  01608E  0E14               	movlw	20
 13297  016090  26E1               	addwf	fsr1l,f,c
 13298  016092  0E00               	movlw	0
 13299  016094  22E2               	addwfc	fsr1h,f,c
 13300                           
 13301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13302                           
 13303                           ;incstack = 0
 13304 ;; hardware stack exceeded
 13305  016096  AE3D               	btfss	(_prec+1)^0,7,c
 13306                           
 13307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13308  016098  923E               	bcf	_flags^0,1,c
 13309                           
 13310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13311  01609A  BE3D               	btfsc	(_prec+1)^0,7,c
 13312  01609C  D005               	goto	u11800
 13313  01609E  503D               	movf	(_prec+1)^0,w,c
 13314  0160A0  E110               	bnz	l12392
 13315  0160A2  043C               	decf	_prec^0,w,c
 13316  0160A4  B0D8               	btfsc	status,0,c
 13317  0160A6  D00D               	goto	l12392
 13318  0160A8                     u11800:
 13319  0160A8  0E01               	movlw	1
 13320  0160AA  6E0B               	movwf	(btemp+10)^0,c
 13321  0160AC  0E00               	movlw	0
 13322  0160AE  6E0C               	movwf	(btemp+11)^0,c
 13323                           
 13324                           ;stkvar	_p @ sp[(-20)+18]
 13325  0160B0  0EFE               	movlw	-2
 13326  0160B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13327  0160B8  0EFF               	movlw	-1
 13328  0160BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13329  0160C0  D008               	goto	l2312
 13330  0160C2                     l12392:
 13331                           
 13332                           ;stkvar	_p @ sp[(-20)+18]
 13333  0160C2  0EFE               	movlw	-2
 13334  0160C4  0060  F0F3  FFE3   	movff	_prec,plusw1
 13335  0160CA  0EFF               	movlw	-1
 13336  0160CC  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13337  0160D2                     l2312:
 13338                           
 13339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13340                           ;stkvar	_w @ sp[(-20)+16]
 13341  0160D2  0EFC               	movlw	-4
 13342  0160D4  0060  F0EB  FFE3   	movff	_width,plusw1
 13343  0160DA  0EFD               	movlw	-3
 13344  0160DC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13345                           
 13346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13347  0160E2  A83E               	btfss	_flags^0,4,c
 13348  0160E4  D00B               	goto	l12398
 13349                           
 13350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13351                           ;stkvar	_w @ sp[(-20)+16]
 13352  0160E6  50E1               	movf	fsr1l,w,c
 13353  0160E8  0FFC               	addlw	-4
 13354  0160EA  6ED9               	movwf	fsr2l,c
 13355  0160EC  50E2               	movf	fsr1h,w,c
 13356  0160EE  6EDA               	movwf	fsr2h,c
 13357  0160F0  0EFF               	movlw	255
 13358  0160F2  22DA               	addwfc	fsr2h,f,c
 13359  0160F4  0EFE               	movlw	254
 13360  0160F6  26DE               	addwf	postinc2,f,c
 13361  0160F8  0EFF               	movlw	255
 13362  0160FA  22DD               	addwfc	postdec2,f,c
 13363  0160FC                     l12398:
 13364                           
 13365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13366                           ;stkvar	_d @ sp[(-20)+-10]
 13367  0160FC  0EE2               	movlw	226
 13368  0160FE  24E1               	addwf	fsr1l,w,c
 13369  016100  6ED9               	movwf	fsr2l,c
 13370  016102  0EFF               	movlw	255
 13371  016104  20E2               	addwfc	fsr1h,w,c
 13372  016106  6EDA               	movwf	fsr2h,c
 13373                           
 13374                           ;stkvar	_n @ sp[(-20)+4]
 13375  016108  0E08               	movlw	8
 13376  01610A  6E01               	movwf	btemp^0,c
 13377  01610C  0EF0               	movlw	-16
 13378  01610E                     us1182999:
 13379  01610E  006F FF7B FFE3     	movff	postinc2,plusw1
 13380  016114  28E8               	incf	wreg,w,c
 13381  016116  2E01               	decfsz	btemp^0,f,c
 13382  016118  D7FA               	bra	us1182999
 13383                           
 13384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13385  01611A  0E4F               	movlw	79
 13386  01611C  6E0B               	movwf	(btemp+10)^0,c
 13387  01611E  0E00               	movlw	0
 13388  016120  6E0C               	movwf	(btemp+11)^0,c
 13389                           
 13390                           ;stkvar	_i @ sp[(-20)+14]
 13391  016122  0EFA               	movlw	-6
 13392  016124  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13393  01612A  0EFB               	movlw	-5
 13394  01612C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13395                           
 13396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13397  016132  0102               	movlb	2	; () banked
 13398  016134  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13399                           
 13400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13401  016136  D0EE               	goto	l12436
 13402  016138                     l12404:
 13403                           
 13404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13405                           ;stkvar	_i @ sp[(-20)+14]
 13406  016138  50E1               	movf	fsr1l,w,c
 13407  01613A  0FFA               	addlw	-6
 13408  01613C  6ED9               	movwf	fsr2l,c
 13409  01613E  50E2               	movf	fsr1h,w,c
 13410  016140  6EDA               	movwf	fsr2h,c
 13411  016142  0EFF               	movlw	255
 13412  016144  22DA               	addwfc	fsr2h,f,c
 13413  016146  06DE               	decf	postinc2,f,c
 13414  016148  0E00               	movlw	0
 13415  01614A  5ADD               	subwfb	postdec2,f,c
 13416                           
 13417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13418                           ;stkvar	_n @ sp[(-20)+4]
 13419  01614C  0EF0               	movlw	-16
 13420  01614E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13421  016154  0EF1               	movlw	-15
 13422  016156  006F FF8C  F00C    	movff	plusw1,btemp+11
 13423  01615C  0E0F               	movlw	15
 13424  01615E  160B               	andwf	(btemp+10)^0,f,c
 13425  016160  0E00               	movlw	0
 13426  016162  160C               	andwf	(btemp+11)^0,f,c
 13427                           
 13428                           ;stkvar	_c @ sp[(-20)+12]
 13429  016164  0EF8               	movlw	-8
 13430  016166  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13431  01616C  0EF9               	movlw	-7
 13432  01616E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13433                           
 13434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13435                           ;stkvar	_c @ sp[(-20)+12]
 13436  016174  0EF9               	movlw	-7
 13437  016176  BEE3               	btfsc	plusw1,7,c
 13438  016178  D00F               	goto	l12412
 13439  01617A  0EF9               	movlw	-7
 13440  01617C  50E3               	movf	plusw1,w,c
 13441  01617E  E108               	bnz	u11830
 13442  016180  0EF8               	movlw	-8
 13443  016182  006F FF8C  F001    	movff	plusw1,btemp
 13444  016188  0E0A               	movlw	10
 13445  01618A  5E01               	subwf	btemp^0,f,c
 13446  01618C  A0D8               	btfss	status,0,c
 13447  01618E  D004               	goto	l12412
 13448  016190                     u11830:
 13449                           
 13450                           ;stkvar	_c @ sp[(-20)+12]
 13451  016190  0EF8               	movlw	-8
 13452  016192  50E3               	movf	plusw1,w,c
 13453  016194  0F57               	addlw	87
 13454  016196  D003               	goto	L13
 13455  016198                     l12412:
 13456                           
 13457                           ;stkvar	_c @ sp[(-20)+12]
 13458  016198  0EF8               	movlw	-8
 13459  01619A  50E3               	movf	plusw1,w,c
 13460  01619C  0F30               	addlw	48
 13461  01619E                     L13:
 13462  01619E  6E0B               	movwf	(btemp+10)^0,c
 13463  0161A0  0EF9               	movlw	-7
 13464  0161A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13465  0161A8  0E00               	movlw	0
 13466  0161AA  220C               	addwfc	(btemp+11)^0,f,c
 13467                           
 13468                           ;stkvar	_c @ sp[(-20)+12]
 13469  0161AC  0EF8               	movlw	-8
 13470  0161AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13471  0161B4  0EF9               	movlw	-7
 13472  0161B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13473  0161BC  0EBF               	movlw	191
 13474  0161BE  6E0B               	movwf	(btemp+10)^0,c
 13475  0161C0  0EFF               	movlw	255
 13476  0161C2  6E0C               	movwf	(btemp+11)^0,c
 13477                           
 13478                           ;stkvar	_x @ sp[(-20)+-11]
 13479  0161C4  0EE1               	movlw	-31
 13480  0161C6  50E3               	movf	plusw1,w,c
 13481  0161C8  6E09               	movwf	(btemp+8)^0,c
 13482  0161CA  6A0A               	clrf	(btemp+9)^0,c
 13483  0161CC  500B               	movf	(btemp+10)^0,w,c
 13484  0161CE  2609               	addwf	(btemp+8)^0,f,c
 13485  0161D0  500C               	movf	(btemp+11)^0,w,c
 13486  0161D2  220A               	addwfc	(btemp+9)^0,f,c
 13487  0161D4  500A               	movf	(btemp+9)^0,w,c
 13488  0161D6  E106               	bnz	u11840
 13489  0161D8  0E1A               	movlw	26
 13490  0161DA  5C09               	subwf	(btemp+8)^0,w,c
 13491  0161DC  B0D8               	btfsc	status,0,c
 13492  0161DE  D002               	goto	u11840
 13493  0161E0  0E01               	movlw	1
 13494  0161E2  D001               	goto	u11850
 13495  0161E4                     u11840:
 13496  0161E4  0E00               	movlw	0
 13497  0161E6                     u11850:
 13498  0161E6  6E0B               	movwf	(btemp+10)^0,c
 13499  0161E8  6A0C               	clrf	(btemp+11)^0,c
 13500                           
 13501                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13502  0161EA  0EEE               	movlw	-18
 13503  0161EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13504  0161F2  0EEF               	movlw	-17
 13505  0161F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13506                           
 13507                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13508  0161FA  0EEE               	movlw	-18
 13509  0161FC  006F FF8C  F001    	movff	plusw1,btemp
 13510  016202  0EEF               	movlw	-17
 13511  016204  50E3               	movf	plusw1,w,c
 13512  016206  1001               	iorwf	btemp^0,w,c
 13513  016208  B4D8               	btfsc	status,2,c
 13514  01620A  D041               	goto	l12428
 13515  01620C  0E9F               	movlw	159
 13516  01620E  6E0B               	movwf	(btemp+10)^0,c
 13517  016210  0EFF               	movlw	255
 13518  016212  6E0C               	movwf	(btemp+11)^0,c
 13519                           
 13520                           ;stkvar	_c @ sp[(-20)+12]
 13521  016214  0EF8               	movlw	-8
 13522  016216  006F FF8C  F009    	movff	plusw1,btemp+8
 13523  01621C  0EF9               	movlw	-7
 13524  01621E  006F FF8C  F00A    	movff	plusw1,btemp+9
 13525  016224  0E20               	movlw	32
 13526  016226  1209               	iorwf	(btemp+8)^0,f,c
 13527  016228  0E00               	movlw	0
 13528  01622A  120A               	iorwf	(btemp+9)^0,f,c
 13529  01622C  500B               	movf	(btemp+10)^0,w,c
 13530  01622E  2609               	addwf	(btemp+8)^0,f,c
 13531  016230  500C               	movf	(btemp+11)^0,w,c
 13532  016232  220A               	addwfc	(btemp+9)^0,f,c
 13533  016234  500A               	movf	(btemp+9)^0,w,c
 13534  016236  E106               	bnz	u11870
 13535  016238  0E1A               	movlw	26
 13536  01623A  5C09               	subwf	(btemp+8)^0,w,c
 13537  01623C  B0D8               	btfsc	status,0,c
 13538  01623E  D002               	goto	u11870
 13539  016240  0E01               	movlw	1
 13540  016242  D001               	goto	u11880
 13541  016244                     u11870:
 13542  016244  0E00               	movlw	0
 13543  016246                     u11880:
 13544  016246  6E0B               	movwf	(btemp+10)^0,c
 13545  016248  6A0C               	clrf	(btemp+11)^0,c
 13546                           
 13547                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13548  01624A  0EEC               	movlw	-20
 13549  01624C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13550  016252  0EED               	movlw	-19
 13551  016254  0060  F033  FFE3   	movff	btemp+11,plusw1
 13552                           
 13553                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13554  01625A  0EEC               	movlw	-20
 13555  01625C  006F FF8C  F001    	movff	plusw1,btemp
 13556  016262  0EED               	movlw	-19
 13557  016264  50E3               	movf	plusw1,w,c
 13558  016266  1001               	iorwf	btemp^0,w,c
 13559  016268  B4D8               	btfsc	status,2,c
 13560  01626A  D011               	goto	l12428
 13561                           
 13562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13563                           ;stkvar	_c @ sp[(-20)+12]
 13564  01626C  0EF8               	movlw	-8
 13565  01626E  006F FF8F FFE6     	movff	plusw1,postinc1
 13566  016274  006F FF8F FFE6     	movff	plusw1,postinc1
 13567  01627A  EC47  F0D6         	call	_toupper	;wreg free
 13568                           
 13569                           ;stkvar	_c @ sp[(-20)+12]
 13570  01627E  0EF8               	movlw	-8
 13571  016280  0060  F007  FFE3   	movff	btemp,plusw1
 13572  016286  0EF9               	movlw	-7
 13573  016288  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13574  01628E                     l12428:
 13575                           
 13576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13577                           ;stkvar	_c @ sp[(-20)+12]
 13578                           ;stkvar	_i @ sp[(-20)+14]
 13579  01628E  0EFA               	movlw	-6
 13580  016290  006F FF8C  F00B    	movff	plusw1,btemp+10
 13581  016296  0EFB               	movlw	-5
 13582  016298  006F FF8C  F00C    	movff	plusw1,btemp+11
 13583  01629E  0E97               	movlw	low _dbuf
 13584  0162A0  240B               	addwf	(btemp+10)^0,w,c
 13585  0162A2  6ED9               	movwf	fsr2l,c
 13586  0162A4  0E02               	movlw	high _dbuf
 13587  0162A6  200C               	addwfc	(btemp+11)^0,w,c
 13588  0162A8  6EDA               	movwf	fsr2h,c
 13589  0162AA  0EF8               	movlw	-8
 13590  0162AC  006F FF8F FFDF     	movff	plusw1,indf2
 13591                           
 13592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13593                           ;stkvar	_p @ sp[(-20)+18]
 13594  0162B2  50E1               	movf	fsr1l,w,c
 13595  0162B4  0FFE               	addlw	-2
 13596  0162B6  6ED9               	movwf	fsr2l,c
 13597  0162B8  50E2               	movf	fsr1h,w,c
 13598  0162BA  6EDA               	movwf	fsr2h,c
 13599  0162BC  0EFF               	movlw	255
 13600  0162BE  22DA               	addwfc	fsr2h,f,c
 13601  0162C0  06DE               	decf	postinc2,f,c
 13602  0162C2  0E00               	movlw	0
 13603  0162C4  5ADD               	subwfb	postdec2,f,c
 13604                           
 13605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13606                           ;stkvar	_w @ sp[(-20)+16]
 13607  0162C6  50E1               	movf	fsr1l,w,c
 13608  0162C8  0FFC               	addlw	-4
 13609  0162CA  6ED9               	movwf	fsr2l,c
 13610  0162CC  50E2               	movf	fsr1h,w,c
 13611  0162CE  6EDA               	movwf	fsr2h,c
 13612  0162D0  0EFF               	movlw	255
 13613  0162D2  22DA               	addwfc	fsr2h,f,c
 13614  0162D4  06DE               	decf	postinc2,f,c
 13615  0162D6  0E00               	movlw	0
 13616  0162D8  5ADD               	subwfb	postdec2,f,c
 13617                           
 13618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13619  0162DA  0E04               	movlw	4
 13620  0162DC  6E0C               	movwf	(btemp+11)^0,c
 13621                           
 13622                           ;stkvar	_n @ sp[(-20)+4]
 13623  0162DE  50E1               	movf	fsr1l,w,c
 13624  0162E0  0FF0               	addlw	-16
 13625  0162E2  6ED9               	movwf	fsr2l,c
 13626  0162E4  50E2               	movf	fsr1h,w,c
 13627  0162E6  6EDA               	movwf	fsr2h,c
 13628  0162E8  0EFF               	movlw	255
 13629  0162EA  22DA               	addwfc	fsr2h,f,c
 13630  0162EC  280C               	incf	(btemp+11)^0,w,c
 13631  0162EE  52DE               	movf	postinc2,f,c
 13632  0162F0  D00F               	goto	u11900
 13633  0162F2                     u11905:
 13634  0162F2  52DE               	movf	postinc2,f,c
 13635  0162F4  52DE               	movf	postinc2,f,c
 13636  0162F6  52DE               	movf	postinc2,f,c
 13637  0162F8  52DE               	movf	postinc2,f,c
 13638  0162FA  52DE               	movf	postinc2,f,c
 13639  0162FC  52DE               	movf	postinc2,f,c
 13640  0162FE  90D8               	bcf	status,0,c
 13641  016300  32DD               	rrcf	postdec2,f,c
 13642  016302  32DD               	rrcf	postdec2,f,c
 13643  016304  32DD               	rrcf	postdec2,f,c
 13644  016306  32DD               	rrcf	postdec2,f,c
 13645  016308  32DD               	rrcf	postdec2,f,c
 13646  01630A  32DD               	rrcf	postdec2,f,c
 13647  01630C  32DD               	rrcf	postdec2,f,c
 13648  01630E  32DE               	rrcf	postinc2,f,c
 13649  016310                     u11900:
 13650  016310  2EE8               	decfsz	wreg,f,c
 13651  016312  D7EF               	goto	u11905
 13652  016314                     l12436:
 13653                           
 13654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13655                           ;stkvar	_i @ sp[(-20)+14]
 13656  016314  0EFB               	movlw	-5
 13657  016316  BEE3               	btfsc	plusw1,7,c
 13658  016318  D03A               	goto	u11950
 13659  01631A  0EFB               	movlw	-5
 13660  01631C  50E3               	movf	plusw1,w,c
 13661  01631E  E108               	bnz	u11910
 13662  016320  0EFA               	movlw	-6
 13663  016322  006F FF8C  F001    	movff	plusw1,btemp
 13664  016328  0E02               	movlw	2
 13665  01632A  5E01               	subwf	btemp^0,f,c
 13666  01632C  A0D8               	btfss	status,0,c
 13667  01632E  D02F               	goto	u11950
 13668  016330                     u11910:
 13669                           
 13670                           ;stkvar	_n @ sp[(-20)+4]
 13671  016330  0EF0               	movlw	-16
 13672  016332  50E3               	movf	plusw1,w,c
 13673  016334  E115               	bnz	u11921
 13674  016336  0EF1               	movlw	-15
 13675  016338  50E3               	movf	plusw1,w,c
 13676  01633A  E112               	bnz	u11921
 13677  01633C  0EF2               	movlw	-14
 13678  01633E  50E3               	movf	plusw1,w,c
 13679  016340  E10F               	bnz	u11921
 13680  016342  0EF3               	movlw	-13
 13681  016344  50E3               	movf	plusw1,w,c
 13682  016346  E10C               	bnz	u11921
 13683  016348  0EF4               	movlw	-12
 13684  01634A  50E3               	movf	plusw1,w,c
 13685  01634C  E109               	bnz	u11921
 13686  01634E  0EF5               	movlw	-11
 13687  016350  50E3               	movf	plusw1,w,c
 13688  016352  E106               	bnz	u11921
 13689  016354  0EF6               	movlw	-10
 13690  016356  50E3               	movf	plusw1,w,c
 13691  016358  E103               	bnz	u11921
 13692  01635A  0EF7               	movlw	-9
 13693  01635C  50E3               	movf	plusw1,w,c
 13694  01635E  A4D8               	btfss	status,2,c
 13695  016360                     u11921:
 13696  016360  D6EB               	goto	l12404
 13697                           
 13698                           ;stkvar	_p @ sp[(-20)+18]
 13699  016362  0EFF               	movlw	-1
 13700  016364  BEE3               	btfsc	plusw1,7,c
 13701  016366  D007               	goto	u11930
 13702  016368  0EFF               	movlw	-1
 13703  01636A  50E3               	movf	plusw1,w,c
 13704  01636C  E103               	bnz	u11931
 13705  01636E  0EFE               	movlw	-2
 13706  016370  04E3               	decf	plusw1,w,c
 13707  016372  B0D8               	btfsc	status,0,c
 13708  016374                     u11931:
 13709  016374  D6E1               	goto	l12404
 13710  016376                     u11930:
 13711                           
 13712                           ;stkvar	_w @ sp[(-20)+16]
 13713  016376  0EFD               	movlw	-3
 13714  016378  BEE3               	btfsc	plusw1,7,c
 13715  01637A  D009               	goto	u11950
 13716  01637C  0EFD               	movlw	-3
 13717  01637E  50E3               	movf	plusw1,w,c
 13718  016380  E104               	bnz	u11940
 13719  016382  0EFC               	movlw	-4
 13720  016384  04E3               	decf	plusw1,w,c
 13721  016386  A0D8               	btfss	status,0,c
 13722  016388  D002               	goto	u11950
 13723  01638A                     u11940:
 13724  01638A  B23E               	btfsc	_flags^0,1,c
 13725  01638C  D6D5               	goto	l12404
 13726  01638E                     u11950:
 13727                           
 13728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13729  01638E  A83E               	btfss	_flags^0,4,c
 13730  016390  D036               	goto	l12452
 13731                           
 13732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13733                           ;stkvar	_i @ sp[(-20)+14]
 13734  016392  50E1               	movf	fsr1l,w,c
 13735  016394  0FFA               	addlw	-6
 13736  016396  6ED9               	movwf	fsr2l,c
 13737  016398  50E2               	movf	fsr1h,w,c
 13738  01639A  6EDA               	movwf	fsr2h,c
 13739  01639C  0EFF               	movlw	255
 13740  01639E  22DA               	addwfc	fsr2h,f,c
 13741  0163A0  06DE               	decf	postinc2,f,c
 13742  0163A2  0E00               	movlw	0
 13743  0163A4  5ADD               	subwfb	postdec2,f,c
 13744                           
 13745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13746                           ;stkvar	_x @ sp[(-20)+-11]
 13747                           ;stkvar	_i @ sp[(-20)+14]
 13748  0163A6  0EFA               	movlw	-6
 13749  0163A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13750  0163AE  0EFB               	movlw	-5
 13751  0163B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13752  0163B6  0E97               	movlw	low _dbuf
 13753  0163B8  240B               	addwf	(btemp+10)^0,w,c
 13754  0163BA  6ED9               	movwf	fsr2l,c
 13755  0163BC  0E02               	movlw	high _dbuf
 13756  0163BE  200C               	addwfc	(btemp+11)^0,w,c
 13757  0163C0  6EDA               	movwf	fsr2h,c
 13758  0163C2  0EE1               	movlw	-31
 13759  0163C4  006F FF8F FFDF     	movff	plusw1,indf2
 13760                           
 13761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13762                           ;stkvar	_i @ sp[(-20)+14]
 13763  0163CA  50E1               	movf	fsr1l,w,c
 13764  0163CC  0FFA               	addlw	-6
 13765  0163CE  6ED9               	movwf	fsr2l,c
 13766  0163D0  50E2               	movf	fsr1h,w,c
 13767  0163D2  6EDA               	movwf	fsr2h,c
 13768  0163D4  0EFF               	movlw	255
 13769  0163D6  22DA               	addwfc	fsr2h,f,c
 13770  0163D8  06DE               	decf	postinc2,f,c
 13771  0163DA  0E00               	movlw	0
 13772  0163DC  5ADD               	subwfb	postdec2,f,c
 13773                           
 13774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13775                           ;stkvar	_i @ sp[(-20)+14]
 13776  0163DE  0EFA               	movlw	-6
 13777  0163E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 13778  0163E6  0EFB               	movlw	-5
 13779  0163E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 13780  0163EE  0E97               	movlw	low _dbuf
 13781  0163F0  240B               	addwf	(btemp+10)^0,w,c
 13782  0163F2  6ED9               	movwf	fsr2l,c
 13783  0163F4  0E02               	movlw	high _dbuf
 13784  0163F6  200C               	addwfc	(btemp+11)^0,w,c
 13785  0163F8  6EDA               	movwf	fsr2h,c
 13786  0163FA  0E30               	movlw	48
 13787  0163FC  6EDF               	movwf	indf2,c
 13788  0163FE                     l12452:
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13791                           ;stkvar	_w @ sp[(-20)+16]
 13792  0163FE  0EFC               	movlw	-4
 13793  016400  006F FF8F FFE6     	movff	plusw1,postinc1
 13794  016406  006F FF8F FFE6     	movff	plusw1,postinc1
 13795                           
 13796                           ;stkvar	_i @ sp[(-22)+14]
 13797  01640C  0E97               	movlw	low _dbuf
 13798  01640E  6E0B               	movwf	(btemp+10)^0,c
 13799  016410  0E02               	movlw	high _dbuf
 13800  016412  6E0C               	movwf	(btemp+11)^0,c
 13801  016414  0EF8               	movlw	-8
 13802  016416  50E3               	movf	plusw1,w,c
 13803  016418  260B               	addwf	(btemp+10)^0,f,c
 13804  01641A  0EF9               	movlw	-7
 13805  01641C  50E3               	movf	plusw1,w,c
 13806  01641E  220C               	addwfc	(btemp+11)^0,f,c
 13807  016420  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13808  016426  0060  F033  FFE6   	movff	btemp+11,postinc1
 13809                           
 13810                           ;stkvar	_fp @ sp[(-24)+-2]
 13811  01642C  0EE6               	movlw	-26
 13812  01642E  006F FF8F FFE6     	movff	plusw1,postinc1
 13813  016434  006F FF8F FFE6     	movff	plusw1,postinc1
 13814  01643A  EC67  F0CD         	call	_pad	;wreg free
 13815                           
 13816                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13817  01643E  0EE1               	movlw	225
 13818  016440  26E1               	addwf	fsr1l,f,c
 13819  016442  0EFF               	movlw	255
 13820  016444  22E2               	addwfc	fsr1h,f,c
 13821  016446  0012               	return		;funcret
 13822  016448                     __end_of_xtoa:
 13823                           	opt callstack 0
 13824                           
 13825 ;; *************** function _toupper *****************
 13826 ;; Defined at:
 13827 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  c               2  [STACK] int 
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;		None
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  2  [STACK] int 
 13834 ;; Registers used:
 13835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/2
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;Total ram usage:        0 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:   16
 13848 ;; This function calls:
 13849 ;;		_islower
 13850 ;; This function is called by:
 13851 ;;		_xtoa
 13852 ;; This function uses a reentrant model
 13853 ;;
 13854                           
 13855                           	psect	text49
 13856  01AC8E                     __ptext49:
 13857                           	opt callstack 0
 13858  01AC8E                     _toupper:
 13859                           	opt callstack 0
 13860                           
 13861                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13862  01AC8E  52E6               	movf	postinc1,f,c
 13863  01AC90  52E6               	movf	postinc1,f,c
 13864                           
 13865                           ;stkvar	_c @ sp[(-2)+-2]
 13866                           
 13867                           ;incstack = 0
 13868 ;; hardware stack exceeded
 13869  01AC92  0EFC               	movlw	-4
 13870  01AC94  50E3               	movf	plusw1,w,c
 13871  01AC96  0F9F               	addlw	159
 13872  01AC98  6E0B               	movwf	(btemp+10)^0,c
 13873  01AC9A  0EFD               	movlw	-3
 13874  01AC9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13875  01ACA2  0EFF               	movlw	255
 13876  01ACA4  220C               	addwfc	(btemp+11)^0,f,c
 13877  01ACA6  500C               	movf	(btemp+11)^0,w,c
 13878  01ACA8  E106               	bnz	u6250
 13879  01ACAA  0E1A               	movlw	26
 13880  01ACAC  5C0B               	subwf	(btemp+10)^0,w,c
 13881  01ACAE  B0D8               	btfsc	status,0,c
 13882  01ACB0  D002               	goto	u6250
 13883  01ACB2  0E01               	movlw	1
 13884  01ACB4  D001               	goto	u6260
 13885  01ACB6                     u6250:
 13886  01ACB6  0E00               	movlw	0
 13887  01ACB8                     u6260:
 13888  01ACB8  6E0B               	movwf	(btemp+10)^0,c
 13889  01ACBA  6A0C               	clrf	(btemp+11)^0,c
 13890                           
 13891                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13892  01ACBC  0EFE               	movlw	-2
 13893  01ACBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13894  01ACC4  0EFF               	movlw	-1
 13895  01ACC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13896                           
 13897                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13898  01ACCC  0EFE               	movlw	-2
 13899  01ACCE  006F FF8C  F001    	movff	plusw1,btemp
 13900  01ACD4  0EFF               	movlw	-1
 13901  01ACD6  50E3               	movf	plusw1,w,c
 13902  01ACD8  1001               	iorwf	btemp^0,w,c
 13903  01ACDA  B4D8               	btfsc	status,2,c
 13904  01ACDC  D00D               	goto	l8098
 13905                           
 13906                           ;stkvar	_c @ sp[(-2)+-2]
 13907  01ACDE  0EFC               	movlw	-4
 13908  01ACE0  006F FF8C  F001    	movff	plusw1,btemp
 13909  01ACE6  0EFD               	movlw	-3
 13910  01ACE8  006F FF8C  F002    	movff	plusw1,btemp+1
 13911  01ACEE  0E5F               	movlw	95
 13912  01ACF0  1601               	andwf	btemp^0,f,c
 13913  01ACF2  0E00               	movlw	0
 13914  01ACF4  1602               	andwf	(btemp+1)^0,f,c
 13915  01ACF6  D008               	goto	l3479
 13916  01ACF8                     l8098:
 13917                           
 13918                           ;stkvar	_c @ sp[(-2)+-2]
 13919  01ACF8  0EFC               	movlw	-4
 13920  01ACFA  006F FF8C  F001    	movff	plusw1,btemp
 13921  01AD00  0EFD               	movlw	-3
 13922  01AD02  006F FF8C  F002    	movff	plusw1,btemp+1
 13923  01AD08                     l3479:
 13924                           
 13925                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13926  01AD08  52E5               	movf	postdec1,f,c
 13927  01AD0A  52E5               	movf	postdec1,f,c
 13928  01AD0C  52E5               	movf	postdec1,f,c
 13929  01AD0E  52E5               	movf	postdec1,f,c
 13930  01AD10  0012               	return		;funcret
 13931  01AD12                     __end_of_toupper:
 13932                           	opt callstack 0
 13933                           
 13934 ;; *************** function _islower *****************
 13935 ;; Defined at:
 13936 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;  c               2  [STACK] int 
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;		None
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  2  [STACK] int 
 13943 ;; Registers used:
 13944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;Total ram usage:        0 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:   15
 13957 ;; This function calls:
 13958 ;;		Nothing
 13959 ;; This function is called by:
 13960 ;;		_toupper
 13961 ;; This function uses a reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text50
 13965  01B9BA                     __ptext50:
 13966                           	opt callstack 0
 13967  01B9BA                     _islower:
 13968                           	opt callstack 0
 13969                           
 13970                           ;stkvar	_c @ sp[(0)+-2]
 13971                           
 13972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13973                           ;incstack = 0
 13974 ;; hardware stack exceeded
 13975  01B9BA  0EFE               	movlw	-2
 13976  01B9BC  50E3               	movf	plusw1,w,c
 13977  01B9BE  0F9F               	addlw	159
 13978  01B9C0  6E0B               	movwf	(btemp+10)^0,c
 13979  01B9C2  0EFF               	movlw	-1
 13980  01B9C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13981  01B9CA  0EFF               	movlw	255
 13982  01B9CC  220C               	addwfc	(btemp+11)^0,f,c
 13983  01B9CE  500C               	movf	(btemp+11)^0,w,c
 13984  01B9D0  E106               	bnz	u5890
 13985  01B9D2  0E1A               	movlw	26
 13986  01B9D4  5C0B               	subwf	(btemp+10)^0,w,c
 13987  01B9D6  B0D8               	btfsc	status,0,c
 13988  01B9D8  D002               	goto	u5890
 13989  01B9DA  0E01               	movlw	1
 13990  01B9DC  D001               	goto	u5900
 13991  01B9DE                     u5890:
 13992  01B9DE  0E00               	movlw	0
 13993  01B9E0                     u5900:
 13994  01B9E0  6E01               	movwf	btemp^0,c
 13995  01B9E2  6A02               	clrf	(btemp+1)^0,c
 13996                           
 13997                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13998  01B9E4  52E5               	movf	postdec1,f,c
 13999  01B9E6  52E5               	movf	postdec1,f,c
 14000  01B9E8  0012               	return		;funcret
 14001  01B9EA                     __end_of_islower:
 14002                           	opt callstack 0
 14003                           
 14004 ;; *************** function _isalpha *****************
 14005 ;; Defined at:
 14006 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  c               2  [STACK] int 
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;		None
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  2  [STACK] int 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14024 ;;Total ram usage:        0 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:   15
 14027 ;; This function calls:
 14028 ;;		Nothing
 14029 ;; This function is called by:
 14030 ;;		_xtoa
 14031 ;; This function uses a reentrant model
 14032 ;;
 14033                           
 14034                           	psect	text51
 14035  01B5FC                     __ptext51:
 14036                           	opt callstack 0
 14037  01B5FC                     _isalpha:
 14038                           	opt callstack 0
 14039                           
 14040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14041                           ;incstack = 0
 14042 ;; hardware stack exceeded
 14043  01B5FC  0E9F               	movlw	159
 14044  01B5FE  6E0B               	movwf	(btemp+10)^0,c
 14045  01B600  0EFF               	movlw	255
 14046  01B602  6E0C               	movwf	(btemp+11)^0,c
 14047                           
 14048                           ;stkvar	_c @ sp[(0)+-2]
 14049  01B604  0EFE               	movlw	-2
 14050  01B606  006F FF8C  F009    	movff	plusw1,btemp+8
 14051  01B60C  0EFF               	movlw	-1
 14052  01B60E  006F FF8C  F00A    	movff	plusw1,btemp+9
 14053  01B614  0E20               	movlw	32
 14054  01B616  1209               	iorwf	(btemp+8)^0,f,c
 14055  01B618  0E00               	movlw	0
 14056  01B61A  120A               	iorwf	(btemp+9)^0,f,c
 14057  01B61C  500B               	movf	(btemp+10)^0,w,c
 14058  01B61E  2609               	addwf	(btemp+8)^0,f,c
 14059  01B620  500C               	movf	(btemp+11)^0,w,c
 14060  01B622  220A               	addwfc	(btemp+9)^0,f,c
 14061  01B624  500A               	movf	(btemp+9)^0,w,c
 14062  01B626  E106               	bnz	u6230
 14063  01B628  0E1A               	movlw	26
 14064  01B62A  5C09               	subwf	(btemp+8)^0,w,c
 14065  01B62C  B0D8               	btfsc	status,0,c
 14066  01B62E  D002               	goto	u6230
 14067  01B630  0E01               	movlw	1
 14068  01B632  D001               	goto	u6240
 14069  01B634                     u6230:
 14070  01B634  0E00               	movlw	0
 14071  01B636                     u6240:
 14072  01B636  6E01               	movwf	btemp^0,c
 14073  01B638  6A02               	clrf	(btemp+1)^0,c
 14074                           
 14075                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14076  01B63A  52E5               	movf	postdec1,f,c
 14077  01B63C  52E5               	movf	postdec1,f,c
 14078  01B63E  0012               	return		;funcret
 14079  01B640                     __end_of_isalpha:
 14080                           	opt callstack 0
 14081                           
 14082 ;; *************** function _utoa *****************
 14083 ;; Defined at:
 14084 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14087 ;;		 -> f(6), NULL(0), 
 14088 ;;  d               8  [STACK] unsigned long long 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;  n               8  [STACK] unsigned long long 
 14091 ;;  i               2  [STACK] int 
 14092 ;;  w               2  [STACK] int 
 14093 ;;  p               2  [STACK] int 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  2  [STACK] int 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:   20
 14110 ;; This function calls:
 14111 ;;		___lodiv
 14112 ;;		___lomod
 14113 ;;		_pad
 14114 ;; This function is called by:
 14115 ;;		_vfpfcnvrt
 14116 ;; This function uses a reentrant model
 14117 ;;
 14118                           
 14119                           	psect	text52
 14120  0167B4                     __ptext52:
 14121                           	opt callstack 0
 14122  0167B4                     _utoa:
 14123                           	opt callstack 0
 14124                           
 14125                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14126  0167B4  0E0E               	movlw	14
 14127  0167B6  26E1               	addwf	fsr1l,f,c
 14128  0167B8  0E00               	movlw	0
 14129  0167BA  22E2               	addwfc	fsr1h,f,c
 14130                           
 14131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14132                           
 14133                           ;incstack = 0
 14134 ;; hardware stack exceeded
 14135  0167BC  AE3D               	btfss	(_prec+1)^0,7,c
 14136                           
 14137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14138  0167BE  923E               	bcf	_flags^0,1,c
 14139                           
 14140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14141  0167C0  BE3D               	btfsc	(_prec+1)^0,7,c
 14142  0167C2  D005               	goto	u11720
 14143  0167C4  503D               	movf	(_prec+1)^0,w,c
 14144  0167C6  E110               	bnz	l12352
 14145  0167C8  043C               	decf	_prec^0,w,c
 14146  0167CA  B0D8               	btfsc	status,0,c
 14147  0167CC  D00D               	goto	l12352
 14148  0167CE                     u11720:
 14149  0167CE  0E01               	movlw	1
 14150  0167D0  6E0B               	movwf	(btemp+10)^0,c
 14151  0167D2  0E00               	movlw	0
 14152  0167D4  6E0C               	movwf	(btemp+11)^0,c
 14153                           
 14154                           ;stkvar	_p @ sp[(-14)+12]
 14155  0167D6  0EFE               	movlw	-2
 14156  0167D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14157  0167DE  0EFF               	movlw	-1
 14158  0167E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14159  0167E6  D008               	goto	l2297
 14160  0167E8                     l12352:
 14161                           
 14162                           ;stkvar	_p @ sp[(-14)+12]
 14163  0167E8  0EFE               	movlw	-2
 14164  0167EA  0060  F0F3  FFE3   	movff	_prec,plusw1
 14165  0167F0  0EFF               	movlw	-1
 14166  0167F2  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14167  0167F8                     l2297:
 14168                           
 14169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14170                           ;stkvar	_w @ sp[(-14)+10]
 14171  0167F8  0EFC               	movlw	-4
 14172  0167FA  0060  F0EB  FFE3   	movff	_width,plusw1
 14173  016800  0EFD               	movlw	-3
 14174  016802  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14175                           
 14176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14177                           ;stkvar	_d @ sp[(-14)+-10]
 14178  016808  0EE8               	movlw	232
 14179  01680A  24E1               	addwf	fsr1l,w,c
 14180  01680C  6ED9               	movwf	fsr2l,c
 14181  01680E  0EFF               	movlw	255
 14182  016810  20E2               	addwfc	fsr1h,w,c
 14183  016812  6EDA               	movwf	fsr2h,c
 14184                           
 14185                           ;stkvar	_n @ sp[(-14)+0]
 14186  016814  0E08               	movlw	8
 14187  016816  6E01               	movwf	btemp^0,c
 14188  016818  0EF2               	movlw	-14
 14189  01681A                     us1173999:
 14190  01681A  006F FF7B FFE3     	movff	postinc2,plusw1
 14191  016820  28E8               	incf	wreg,w,c
 14192  016822  2E01               	decfsz	btemp^0,f,c
 14193  016824  D7FA               	bra	us1173999
 14194                           
 14195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14196  016826  0E4F               	movlw	79
 14197  016828  6E0B               	movwf	(btemp+10)^0,c
 14198  01682A  0E00               	movlw	0
 14199  01682C  6E0C               	movwf	(btemp+11)^0,c
 14200                           
 14201                           ;stkvar	_i @ sp[(-14)+8]
 14202  01682E  0EFA               	movlw	-6
 14203  016830  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14204  016836  0EFB               	movlw	-5
 14205  016838  0060  F033  FFE3   	movff	btemp+11,plusw1
 14206                           
 14207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14208  01683E  0102               	movlb	2	; () banked
 14209  016840  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14210                           
 14211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14212  016842  D0FB               	goto	l12370
 14213  016844                     l12360:
 14214                           
 14215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14216                           ;stkvar	_i @ sp[(-14)+8]
 14217  016844  50E1               	movf	fsr1l,w,c
 14218  016846  0FFA               	addlw	-6
 14219  016848  6ED9               	movwf	fsr2l,c
 14220  01684A  50E2               	movf	fsr1h,w,c
 14221  01684C  6EDA               	movwf	fsr2h,c
 14222  01684E  0EFF               	movlw	255
 14223  016850  22DA               	addwfc	fsr2h,f,c
 14224  016852  06DE               	decf	postinc2,f,c
 14225  016854  0E00               	movlw	0
 14226  016856  5ADD               	subwfb	postdec2,f,c
 14227                           
 14228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14229  016858  0E0A               	movlw	10
 14230  01685A  6EE6               	movwf	postinc1,c
 14231  01685C  0E00               	movlw	0
 14232  01685E  6EE6               	movwf	postinc1,c
 14233  016860  0E00               	movlw	0
 14234  016862  6EE6               	movwf	postinc1,c
 14235  016864  0E00               	movlw	0
 14236  016866  6EE6               	movwf	postinc1,c
 14237  016868  0E00               	movlw	0
 14238  01686A  6EE6               	movwf	postinc1,c
 14239  01686C  0E00               	movlw	0
 14240  01686E  6EE6               	movwf	postinc1,c
 14241  016870  0E00               	movlw	0
 14242  016872  6EE6               	movwf	postinc1,c
 14243  016874  0E00               	movlw	0
 14244  016876  6EE6               	movwf	postinc1,c
 14245                           
 14246                           ;stkvar	_n @ sp[(-22)+0]
 14247  016878  50E1               	movf	fsr1l,w,c
 14248  01687A  0FEA               	addlw	-22
 14249  01687C  6ED9               	movwf	fsr2l,c
 14250  01687E  50E2               	movf	fsr1h,w,c
 14251  016880  6EDA               	movwf	fsr2h,c
 14252  016882  0EFF               	movlw	255
 14253  016884  22DA               	addwfc	fsr2h,f,c
 14254  016886  006F FF7B FFE6     	movff	postinc2,postinc1
 14255  01688C  006F FF7B FFE6     	movff	postinc2,postinc1
 14256  016892  006F FF7B FFE6     	movff	postinc2,postinc1
 14257  016898  006F FF7B FFE6     	movff	postinc2,postinc1
 14258  01689E  006F FF7B FFE6     	movff	postinc2,postinc1
 14259  0168A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14260  0168AA  006F FF7B FFE6     	movff	postinc2,postinc1
 14261  0168B0  006F FF7B FFE6     	movff	postinc2,postinc1
 14262  0168B6  EC85  F0CA         	call	___lomod	;wreg free
 14263  0168BA  52E5               	movf	postdec1,f,c
 14264  0168BC  006F FF9C  F018    	movff	indf1,btemp+23
 14265  0168C2  52E5               	movf	postdec1,f,c
 14266  0168C4  006F FF9C  F017    	movff	indf1,btemp+22
 14267  0168CA  52E5               	movf	postdec1,f,c
 14268  0168CC  006F FF9C  F016    	movff	indf1,btemp+21
 14269  0168D2  52E5               	movf	postdec1,f,c
 14270  0168D4  006F FF9C  F015    	movff	indf1,btemp+20
 14271  0168DA  52E5               	movf	postdec1,f,c
 14272  0168DC  006F FF9C  F014    	movff	indf1,btemp+19
 14273  0168E2  52E5               	movf	postdec1,f,c
 14274  0168E4  006F FF9C  F013    	movff	indf1,btemp+18
 14275  0168EA  52E5               	movf	postdec1,f,c
 14276  0168EC  006F FF9C  F012    	movff	indf1,btemp+17
 14277  0168F2  52E5               	movf	postdec1,f,c
 14278  0168F4  006F FF9C  F011    	movff	indf1,btemp+16
 14279  0168FA  0EF8               	movlw	248
 14280  0168FC  26E1               	addwf	fsr1l,f,c
 14281  0168FE  0EFF               	movlw	255
 14282  016900  22E2               	addwfc	fsr1h,f,c
 14283  016902  0E30               	movlw	48
 14284  016904  2611               	addwf	(btemp+16)^0,f,c
 14285                           
 14286                           ;stkvar	_i @ sp[(-14)+8]
 14287  016906  0EFA               	movlw	-6
 14288  016908  006F FF8C  F00B    	movff	plusw1,btemp+10
 14289  01690E  0EFB               	movlw	-5
 14290  016910  006F FF8C  F00C    	movff	plusw1,btemp+11
 14291  016916  0E97               	movlw	low _dbuf
 14292  016918  240B               	addwf	(btemp+10)^0,w,c
 14293  01691A  6ED9               	movwf	fsr2l,c
 14294  01691C  0E02               	movlw	high _dbuf
 14295  01691E  200C               	addwfc	(btemp+11)^0,w,c
 14296  016920  6EDA               	movwf	fsr2h,c
 14297  016922  0060  F047  FFDF   	movff	btemp+16,indf2
 14298                           
 14299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14300                           ;stkvar	_p @ sp[(-14)+12]
 14301  016928  50E1               	movf	fsr1l,w,c
 14302  01692A  0FFE               	addlw	-2
 14303  01692C  6ED9               	movwf	fsr2l,c
 14304  01692E  50E2               	movf	fsr1h,w,c
 14305  016930  6EDA               	movwf	fsr2h,c
 14306  016932  0EFF               	movlw	255
 14307  016934  22DA               	addwfc	fsr2h,f,c
 14308  016936  06DE               	decf	postinc2,f,c
 14309  016938  0E00               	movlw	0
 14310  01693A  5ADD               	subwfb	postdec2,f,c
 14311                           
 14312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14313                           ;stkvar	_w @ sp[(-14)+10]
 14314  01693C  50E1               	movf	fsr1l,w,c
 14315  01693E  0FFC               	addlw	-4
 14316  016940  6ED9               	movwf	fsr2l,c
 14317  016942  50E2               	movf	fsr1h,w,c
 14318  016944  6EDA               	movwf	fsr2h,c
 14319  016946  0EFF               	movlw	255
 14320  016948  22DA               	addwfc	fsr2h,f,c
 14321  01694A  06DE               	decf	postinc2,f,c
 14322  01694C  0E00               	movlw	0
 14323  01694E  5ADD               	subwfb	postdec2,f,c
 14324                           
 14325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14326  016950  0E0A               	movlw	10
 14327  016952  6EE6               	movwf	postinc1,c
 14328  016954  0E00               	movlw	0
 14329  016956  6EE6               	movwf	postinc1,c
 14330  016958  0E00               	movlw	0
 14331  01695A  6EE6               	movwf	postinc1,c
 14332  01695C  0E00               	movlw	0
 14333  01695E  6EE6               	movwf	postinc1,c
 14334  016960  0E00               	movlw	0
 14335  016962  6EE6               	movwf	postinc1,c
 14336  016964  0E00               	movlw	0
 14337  016966  6EE6               	movwf	postinc1,c
 14338  016968  0E00               	movlw	0
 14339  01696A  6EE6               	movwf	postinc1,c
 14340  01696C  0E00               	movlw	0
 14341  01696E  6EE6               	movwf	postinc1,c
 14342                           
 14343                           ;stkvar	_n @ sp[(-22)+0]
 14344  016970  50E1               	movf	fsr1l,w,c
 14345  016972  0FEA               	addlw	-22
 14346  016974  6ED9               	movwf	fsr2l,c
 14347  016976  50E2               	movf	fsr1h,w,c
 14348  016978  6EDA               	movwf	fsr2h,c
 14349  01697A  0EFF               	movlw	255
 14350  01697C  22DA               	addwfc	fsr2h,f,c
 14351  01697E  006F FF7B FFE6     	movff	postinc2,postinc1
 14352  016984  006F FF7B FFE6     	movff	postinc2,postinc1
 14353  01698A  006F FF7B FFE6     	movff	postinc2,postinc1
 14354  016990  006F FF7B FFE6     	movff	postinc2,postinc1
 14355  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 14356  01699C  006F FF7B FFE6     	movff	postinc2,postinc1
 14357  0169A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14358  0169A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14359  0169AE  EC61  F0C6         	call	___lodiv	;wreg free
 14360  0169B2  52E5               	movf	postdec1,f,c
 14361  0169B4  006F FF9C  F018    	movff	indf1,btemp+23
 14362  0169BA  52E5               	movf	postdec1,f,c
 14363  0169BC  006F FF9C  F017    	movff	indf1,btemp+22
 14364  0169C2  52E5               	movf	postdec1,f,c
 14365  0169C4  006F FF9C  F016    	movff	indf1,btemp+21
 14366  0169CA  52E5               	movf	postdec1,f,c
 14367  0169CC  006F FF9C  F015    	movff	indf1,btemp+20
 14368  0169D2  52E5               	movf	postdec1,f,c
 14369  0169D4  006F FF9C  F014    	movff	indf1,btemp+19
 14370  0169DA  52E5               	movf	postdec1,f,c
 14371  0169DC  006F FF9C  F013    	movff	indf1,btemp+18
 14372  0169E2  52E5               	movf	postdec1,f,c
 14373  0169E4  006F FF9C  F012    	movff	indf1,btemp+17
 14374  0169EA  52E5               	movf	postdec1,f,c
 14375  0169EC  006F FF9C  F011    	movff	indf1,btemp+16
 14376  0169F2  0EF8               	movlw	248
 14377  0169F4  26E1               	addwf	fsr1l,f,c
 14378  0169F6  0EFF               	movlw	255
 14379  0169F8  22E2               	addwfc	fsr1h,f,c
 14380                           
 14381                           ;stkvar	_n @ sp[(-14)+0]
 14382  0169FA  0EF2               	movlw	-14
 14383  0169FC  0060  F047  FFE3   	movff	btemp+16,plusw1
 14384  016A02  0EF3               	movlw	-13
 14385  016A04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14386  016A0A  0EF4               	movlw	-12
 14387  016A0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14388  016A12  0EF5               	movlw	-11
 14389  016A14  0060  F053  FFE3   	movff	btemp+19,plusw1
 14390  016A1A  0EF6               	movlw	-10
 14391  016A1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 14392  016A22  0EF7               	movlw	-9
 14393  016A24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14394  016A2A  0EF8               	movlw	-8
 14395  016A2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14396  016A32  0EF9               	movlw	-7
 14397  016A34  0060  F063  FFE3   	movff	btemp+23,plusw1
 14398  016A3A                     l12370:
 14399                           
 14400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14401                           ;stkvar	_i @ sp[(-14)+8]
 14402  016A3A  0EFA               	movlw	-6
 14403  016A3C  006F FF8C  F001    	movff	plusw1,btemp
 14404  016A42  0EFB               	movlw	-5
 14405  016A44  50E3               	movf	plusw1,w,c
 14406  016A46  1001               	iorwf	btemp^0,w,c
 14407  016A48  B4D8               	btfsc	status,2,c
 14408  016A4A  D02F               	goto	u11780
 14409                           
 14410                           ;stkvar	_n @ sp[(-14)+0]
 14411  016A4C  0EF2               	movlw	-14
 14412  016A4E  50E3               	movf	plusw1,w,c
 14413  016A50  E115               	bnz	u11751
 14414  016A52  0EF3               	movlw	-13
 14415  016A54  50E3               	movf	plusw1,w,c
 14416  016A56  E112               	bnz	u11751
 14417  016A58  0EF4               	movlw	-12
 14418  016A5A  50E3               	movf	plusw1,w,c
 14419  016A5C  E10F               	bnz	u11751
 14420  016A5E  0EF5               	movlw	-11
 14421  016A60  50E3               	movf	plusw1,w,c
 14422  016A62  E10C               	bnz	u11751
 14423  016A64  0EF6               	movlw	-10
 14424  016A66  50E3               	movf	plusw1,w,c
 14425  016A68  E109               	bnz	u11751
 14426  016A6A  0EF7               	movlw	-9
 14427  016A6C  50E3               	movf	plusw1,w,c
 14428  016A6E  E106               	bnz	u11751
 14429  016A70  0EF8               	movlw	-8
 14430  016A72  50E3               	movf	plusw1,w,c
 14431  016A74  E103               	bnz	u11751
 14432  016A76  0EF9               	movlw	-7
 14433  016A78  50E3               	movf	plusw1,w,c
 14434  016A7A  A4D8               	btfss	status,2,c
 14435  016A7C                     u11751:
 14436  016A7C  D6E3               	goto	l12360
 14437                           
 14438                           ;stkvar	_p @ sp[(-14)+12]
 14439  016A7E  0EFF               	movlw	-1
 14440  016A80  BEE3               	btfsc	plusw1,7,c
 14441  016A82  D007               	goto	u11760
 14442  016A84  0EFF               	movlw	-1
 14443  016A86  50E3               	movf	plusw1,w,c
 14444  016A88  E103               	bnz	u11761
 14445  016A8A  0EFE               	movlw	-2
 14446  016A8C  04E3               	decf	plusw1,w,c
 14447  016A8E  B0D8               	btfsc	status,0,c
 14448  016A90                     u11761:
 14449  016A90  D6D9               	goto	l12360
 14450  016A92                     u11760:
 14451                           
 14452                           ;stkvar	_w @ sp[(-14)+10]
 14453  016A92  0EFD               	movlw	-3
 14454  016A94  BEE3               	btfsc	plusw1,7,c
 14455  016A96  D009               	goto	u11780
 14456  016A98  0EFD               	movlw	-3
 14457  016A9A  50E3               	movf	plusw1,w,c
 14458  016A9C  E104               	bnz	u11770
 14459  016A9E  0EFC               	movlw	-4
 14460  016AA0  04E3               	decf	plusw1,w,c
 14461  016AA2  A0D8               	btfss	status,0,c
 14462  016AA4  D002               	goto	u11780
 14463  016AA6                     u11770:
 14464  016AA6  B23E               	btfsc	_flags^0,1,c
 14465  016AA8  D6CD               	goto	l12360
 14466  016AAA                     u11780:
 14467                           
 14468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14469                           ;stkvar	_w @ sp[(-14)+10]
 14470  016AAA  0EFC               	movlw	-4
 14471  016AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14472  016AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14473                           
 14474                           ;stkvar	_i @ sp[(-16)+8]
 14475  016AB8  0E97               	movlw	low _dbuf
 14476  016ABA  6E0B               	movwf	(btemp+10)^0,c
 14477  016ABC  0E02               	movlw	high _dbuf
 14478  016ABE  6E0C               	movwf	(btemp+11)^0,c
 14479  016AC0  0EF8               	movlw	-8
 14480  016AC2  50E3               	movf	plusw1,w,c
 14481  016AC4  260B               	addwf	(btemp+10)^0,f,c
 14482  016AC6  0EF9               	movlw	-7
 14483  016AC8  50E3               	movf	plusw1,w,c
 14484  016ACA  220C               	addwfc	(btemp+11)^0,f,c
 14485  016ACC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14486  016AD2  0060  F033  FFE6   	movff	btemp+11,postinc1
 14487                           
 14488                           ;stkvar	_fp @ sp[(-18)+-2]
 14489  016AD8  0EEC               	movlw	-20
 14490  016ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 14491  016AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 14492  016AE6  EC67  F0CD         	call	_pad	;wreg free
 14493                           
 14494                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14495  016AEA  0EE8               	movlw	232
 14496  016AEC  26E1               	addwf	fsr1l,f,c
 14497  016AEE  0EFF               	movlw	255
 14498  016AF0  22E2               	addwfc	fsr1h,f,c
 14499  016AF2  0012               	return		;funcret
 14500  016AF4                     __end_of_utoa:
 14501                           	opt callstack 0
 14502                           
 14503 ;; *************** function ___lomod *****************
 14504 ;; Defined at:
 14505 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;  dividend        8  [STACK] unsigned long long 
 14508 ;;  divisor         8  [STACK] unsigned long long 
 14509 ;; Auto vars:     Size  Location     Type
 14510 ;;  counter         1  [STACK] unsigned char 
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  8  [STACK] unsigned long long 
 14513 ;; Registers used:
 14514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14515 ;; Tracked objects:
 14516 ;;		On entry : 0/2
 14517 ;;		On exit  : 0/0
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14524 ;;Total ram usage:        0 bytes
 14525 ;; Hardware stack levels used:    1
 14526 ;; Hardware stack levels required when called:   15
 14527 ;; This function calls:
 14528 ;;		Nothing
 14529 ;; This function is called by:
 14530 ;;		_utoa
 14531 ;; This function uses a reentrant model
 14532 ;;
 14533                           
 14534                           	psect	text53
 14535  01950A                     __ptext53:
 14536                           	opt callstack 0
 14537  01950A                     ___lomod:
 14538                           	opt callstack 0
 14539                           
 14540                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14541  01950A  52E6               	movf	postinc1,f,c
 14542                           
 14543                           ;stkvar	_divisor @ sp[(-1)+-16]
 14544                           
 14545                           ;incstack = 0
 14546 ;; hardware stack exceeded
 14547  01950C  0EEF               	movlw	-17
 14548  01950E  50E3               	movf	plusw1,w,c
 14549  019510  E116               	bnz	u7380
 14550  019512  0EF0               	movlw	-16
 14551  019514  50E3               	movf	plusw1,w,c
 14552  019516  E113               	bnz	u7380
 14553  019518  0EF1               	movlw	-15
 14554  01951A  50E3               	movf	plusw1,w,c
 14555  01951C  E110               	bnz	u7380
 14556  01951E  0EF2               	movlw	-14
 14557  019520  50E3               	movf	plusw1,w,c
 14558  019522  E10D               	bnz	u7380
 14559  019524  0EF3               	movlw	-13
 14560  019526  50E3               	movf	plusw1,w,c
 14561  019528  E10A               	bnz	u7380
 14562  01952A  0EF4               	movlw	-12
 14563  01952C  50E3               	movf	plusw1,w,c
 14564  01952E  E107               	bnz	u7380
 14565  019530  0EF5               	movlw	-11
 14566  019532  50E3               	movf	plusw1,w,c
 14567  019534  E104               	bnz	u7380
 14568  019536  0EF6               	movlw	-10
 14569  019538  50E3               	movf	plusw1,w,c
 14570  01953A  B4D8               	btfsc	status,2,c
 14571  01953C  D075               	goto	u7410
 14572  01953E                     u7380:
 14573                           
 14574                           ;stkvar	_counter @ sp[(-1)+0]
 14575  01953E  0EFF               	movlw	-1
 14576  019540  6AE3               	clrf	plusw1,c
 14577  019542  D012               	goto	L14
 14578  019544                     l8708:
 14579                           
 14580                           ;stkvar	_divisor @ sp[(-1)+-16]
 14581  019544  90D8               	bcf	status,0,c
 14582  019546  0EEF               	movlw	-17
 14583  019548  36E3               	rlcf	plusw1,f,c
 14584  01954A  0EF0               	movlw	-16
 14585  01954C  36E3               	rlcf	plusw1,f,c
 14586  01954E  0EF1               	movlw	-15
 14587  019550  36E3               	rlcf	plusw1,f,c
 14588  019552  0EF2               	movlw	-14
 14589  019554  36E3               	rlcf	plusw1,f,c
 14590  019556  0EF3               	movlw	-13
 14591  019558  36E3               	rlcf	plusw1,f,c
 14592  01955A  0EF4               	movlw	-12
 14593  01955C  36E3               	rlcf	plusw1,f,c
 14594  01955E  0EF5               	movlw	-11
 14595  019560  36E3               	rlcf	plusw1,f,c
 14596  019562  0EF6               	movlw	-10
 14597  019564  36E3               	rlcf	plusw1,f,c
 14598                           
 14599                           ;stkvar	_counter @ sp[(-1)+0]
 14600  019566  0EFF               	movlw	-1
 14601  019568                     L14:
 14602  019568  2AE3               	incf	plusw1,f,c
 14603                           
 14604                           ;stkvar	_divisor @ sp[(-1)+-16]
 14605  01956A  0EF6               	movlw	-10
 14606  01956C  AEE3               	btfss	plusw1,7,c
 14607  01956E  D7EA               	goto	l8708
 14608  019570                     u7390:
 14609                           
 14610                           ;stkvar	_divisor @ sp[(-1)+-16]
 14611                           ;stkvar	_dividend @ sp[(-1)+-8]
 14612  019570  50E1               	movf	fsr1l,w,c
 14613  019572  0FF7               	addlw	-9
 14614  019574  6ED9               	movwf	fsr2l,c
 14615  019576  50E2               	movf	fsr1h,w,c
 14616  019578  6EDA               	movwf	fsr2h,c
 14617  01957A  0EFF               	movlw	255
 14618  01957C  22DA               	addwfc	fsr2h,f,c
 14619  01957E  0EEF               	movlw	-17
 14620  019580  50E3               	movf	plusw1,w,c
 14621  019582  5CDE               	subwf	postinc2,w,c
 14622  019584  0EF0               	movlw	-16
 14623  019586  50E3               	movf	plusw1,w,c
 14624  019588  58DE               	subwfb	postinc2,w,c
 14625  01958A  0EF1               	movlw	-15
 14626  01958C  50E3               	movf	plusw1,w,c
 14627  01958E  58DE               	subwfb	postinc2,w,c
 14628  019590  0EF2               	movlw	-14
 14629  019592  50E3               	movf	plusw1,w,c
 14630  019594  58DE               	subwfb	postinc2,w,c
 14631  019596  0EF3               	movlw	-13
 14632  019598  50E3               	movf	plusw1,w,c
 14633  01959A  58DE               	subwfb	postinc2,w,c
 14634  01959C  0EF4               	movlw	-12
 14635  01959E  50E3               	movf	plusw1,w,c
 14636  0195A0  58DE               	subwfb	postinc2,w,c
 14637  0195A2  0EF5               	movlw	-11
 14638  0195A4  50E3               	movf	plusw1,w,c
 14639  0195A6  58DE               	subwfb	postinc2,w,c
 14640  0195A8  0EF6               	movlw	-10
 14641  0195AA  50E3               	movf	plusw1,w,c
 14642  0195AC  58DE               	subwfb	postinc2,w,c
 14643  0195AE  A0D8               	btfss	status,0,c
 14644  0195B0  D01F               	goto	l8716
 14645                           
 14646                           ;stkvar	_divisor @ sp[(-1)+-16]
 14647                           ;stkvar	_dividend @ sp[(-1)+-8]
 14648  0195B2  50E1               	movf	fsr1l,w,c
 14649  0195B4  0FF7               	addlw	-9
 14650  0195B6  6ED9               	movwf	fsr2l,c
 14651  0195B8  50E2               	movf	fsr1h,w,c
 14652  0195BA  6EDA               	movwf	fsr2h,c
 14653  0195BC  0EFF               	movlw	255
 14654  0195BE  22DA               	addwfc	fsr2h,f,c
 14655  0195C0  0EEF               	movlw	-17
 14656  0195C2  50E3               	movf	plusw1,w,c
 14657  0195C4  5EDE               	subwf	postinc2,f,c
 14658  0195C6  0EF0               	movlw	-16
 14659  0195C8  50E3               	movf	plusw1,w,c
 14660  0195CA  5ADE               	subwfb	postinc2,f,c
 14661  0195CC  0EF1               	movlw	-15
 14662  0195CE  50E3               	movf	plusw1,w,c
 14663  0195D0  5ADE               	subwfb	postinc2,f,c
 14664  0195D2  0EF2               	movlw	-14
 14665  0195D4  50E3               	movf	plusw1,w,c
 14666  0195D6  5ADE               	subwfb	postinc2,f,c
 14667  0195D8  0EF3               	movlw	-13
 14668  0195DA  50E3               	movf	plusw1,w,c
 14669  0195DC  5ADE               	subwfb	postinc2,f,c
 14670  0195DE  0EF4               	movlw	-12
 14671  0195E0  50E3               	movf	plusw1,w,c
 14672  0195E2  5ADE               	subwfb	postinc2,f,c
 14673  0195E4  0EF5               	movlw	-11
 14674  0195E6  50E3               	movf	plusw1,w,c
 14675  0195E8  5ADE               	subwfb	postinc2,f,c
 14676  0195EA  0EF6               	movlw	-10
 14677  0195EC  50E3               	movf	plusw1,w,c
 14678  0195EE  5ADE               	subwfb	postinc2,f,c
 14679  0195F0                     l8716:
 14680                           
 14681                           ;stkvar	_divisor @ sp[(-1)+-16]
 14682  0195F0  90D8               	bcf	status,0,c
 14683  0195F2  0EF6               	movlw	-10
 14684  0195F4  32E3               	rrcf	plusw1,f,c
 14685  0195F6  0EF5               	movlw	-11
 14686  0195F8  32E3               	rrcf	plusw1,f,c
 14687  0195FA  0EF4               	movlw	-12
 14688  0195FC  32E3               	rrcf	plusw1,f,c
 14689  0195FE  0EF3               	movlw	-13
 14690  019600  32E3               	rrcf	plusw1,f,c
 14691  019602  0EF2               	movlw	-14
 14692  019604  32E3               	rrcf	plusw1,f,c
 14693  019606  0EF1               	movlw	-15
 14694  019608  32E3               	rrcf	plusw1,f,c
 14695  01960A  0EF0               	movlw	-16
 14696  01960C  32E3               	rrcf	plusw1,f,c
 14697  01960E  0EEF               	movlw	-17
 14698  019610  32E3               	rrcf	plusw1,f,c
 14699                           
 14700                           ;stkvar	_counter @ sp[(-1)+0]
 14701  019612  0EFF               	movlw	-1
 14702  019614  50E3               	movf	plusw1,w,c
 14703  019616  6E01               	movwf	btemp^0,c
 14704  019618  0E01               	movlw	1
 14705  01961A  5E01               	subwf	btemp^0,f,c
 14706  01961C  0EFF               	movlw	-1
 14707  01961E  0060  F007  FFE3   	movff	btemp,plusw1
 14708  019624  A4D8               	btfss	status,2,c
 14709  019626  D7A4               	goto	u7390
 14710  019628                     u7410:
 14711                           
 14712                           ;stkvar	_dividend @ sp[(-1)+-8]
 14713  019628  0EF7               	movlw	247
 14714  01962A  24E1               	addwf	fsr1l,w,c
 14715  01962C  6ED9               	movwf	fsr2l,c
 14716  01962E  0EFF               	movlw	255
 14717  019630  20E2               	addwfc	fsr1h,w,c
 14718  019632  6EDA               	movwf	fsr2h,c
 14719                           
 14720                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14721  019634  0E08               	movlw	8
 14722  019636  6E01               	movwf	btemp^0,c
 14723  019638  0EF7               	movlw	-9
 14724  01963A                     us742999:
 14725  01963A  006F FF7B FFE3     	movff	postinc2,plusw1
 14726  019640  28E8               	incf	wreg,w,c
 14727  019642  2E01               	decfsz	btemp^0,f,c
 14728  019644  D7FA               	bra	us742999
 14729                           
 14730                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14731  019646  52E5               	movf	postdec1,f,c
 14732  019648  0012               	return		;funcret
 14733  01964A                     __end_of___lomod:
 14734                           	opt callstack 0
 14735                           
 14736 ;; *************** function ___lodiv *****************
 14737 ;; Defined at:
 14738 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  dividend        8  [STACK] unsigned long long 
 14741 ;;  divisor         8  [STACK] unsigned long long 
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;  quotient        8  [STACK] unsigned long long 
 14744 ;;  counter         1  [STACK] unsigned char 
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  8  [STACK] unsigned long long 
 14747 ;; Registers used:
 14748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/2
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;Total ram usage:        0 bytes
 14759 ;; Hardware stack levels used:    1
 14760 ;; Hardware stack levels required when called:   15
 14761 ;; This function calls:
 14762 ;;		Nothing
 14763 ;; This function is called by:
 14764 ;;		_utoa
 14765 ;; This function uses a reentrant model
 14766 ;;
 14767                           
 14768                           	psect	text54
 14769  018CC2                     __ptext54:
 14770                           	opt callstack 0
 14771  018CC2                     ___lodiv:
 14772                           	opt callstack 0
 14773                           
 14774                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14775  018CC2  0E09               	movlw	9
 14776  018CC4  26E1               	addwf	fsr1l,f,c
 14777  018CC6  0E00               	movlw	0
 14778  018CC8  22E2               	addwfc	fsr1h,f,c
 14779                           
 14780                           ;stkvar	_quotient @ sp[(-9)+0]
 14781                           
 14782                           ;incstack = 0
 14783 ;; hardware stack exceeded
 14784  018CCA  0E07               	movlw	7
 14785  018CCC  6E01               	movwf	btemp^0,c
 14786  018CCE  0EF7               	movlw	-9
 14787  018CD0                     u7321:
 14788  018CD0  6AE3               	clrf	plusw1,c
 14789  018CD2  2AE8               	incf	wreg,f,c
 14790  018CD4  0601               	decf	btemp^0,f,c
 14791  018CD6  E2FC               	bc	u7321
 14792                           
 14793                           ;stkvar	_divisor @ sp[(-9)+-16]
 14794  018CD8  0EE7               	movlw	-25
 14795  018CDA  50E3               	movf	plusw1,w,c
 14796  018CDC  E116               	bnz	u7330
 14797  018CDE  0EE8               	movlw	-24
 14798  018CE0  50E3               	movf	plusw1,w,c
 14799  018CE2  E113               	bnz	u7330
 14800  018CE4  0EE9               	movlw	-23
 14801  018CE6  50E3               	movf	plusw1,w,c
 14802  018CE8  E110               	bnz	u7330
 14803  018CEA  0EEA               	movlw	-22
 14804  018CEC  50E3               	movf	plusw1,w,c
 14805  018CEE  E10D               	bnz	u7330
 14806  018CF0  0EEB               	movlw	-21
 14807  018CF2  50E3               	movf	plusw1,w,c
 14808  018CF4  E10A               	bnz	u7330
 14809  018CF6  0EEC               	movlw	-20
 14810  018CF8  50E3               	movf	plusw1,w,c
 14811  018CFA  E107               	bnz	u7330
 14812  018CFC  0EED               	movlw	-19
 14813  018CFE  50E3               	movf	plusw1,w,c
 14814  018D00  E104               	bnz	u7330
 14815  018D02  0EEE               	movlw	-18
 14816  018D04  50E3               	movf	plusw1,w,c
 14817  018D06  B4D8               	btfsc	status,2,c
 14818  018D08  D088               	goto	u7360
 14819  018D0A                     u7330:
 14820                           
 14821                           ;stkvar	_counter @ sp[(-9)+8]
 14822  018D0A  0EFF               	movlw	-1
 14823  018D0C  6AE3               	clrf	plusw1,c
 14824  018D0E  D012               	goto	L15
 14825  018D10                     l8684:
 14826                           
 14827                           ;stkvar	_divisor @ sp[(-9)+-16]
 14828  018D10  90D8               	bcf	status,0,c
 14829  018D12  0EE7               	movlw	-25
 14830  018D14  36E3               	rlcf	plusw1,f,c
 14831  018D16  0EE8               	movlw	-24
 14832  018D18  36E3               	rlcf	plusw1,f,c
 14833  018D1A  0EE9               	movlw	-23
 14834  018D1C  36E3               	rlcf	plusw1,f,c
 14835  018D1E  0EEA               	movlw	-22
 14836  018D20  36E3               	rlcf	plusw1,f,c
 14837  018D22  0EEB               	movlw	-21
 14838  018D24  36E3               	rlcf	plusw1,f,c
 14839  018D26  0EEC               	movlw	-20
 14840  018D28  36E3               	rlcf	plusw1,f,c
 14841  018D2A  0EED               	movlw	-19
 14842  018D2C  36E3               	rlcf	plusw1,f,c
 14843  018D2E  0EEE               	movlw	-18
 14844  018D30  36E3               	rlcf	plusw1,f,c
 14845                           
 14846                           ;stkvar	_counter @ sp[(-9)+8]
 14847  018D32  0EFF               	movlw	-1
 14848  018D34                     L15:
 14849  018D34  2AE3               	incf	plusw1,f,c
 14850                           
 14851                           ;stkvar	_divisor @ sp[(-9)+-16]
 14852  018D36  0EEE               	movlw	-18
 14853  018D38  AEE3               	btfss	plusw1,7,c
 14854  018D3A  D7EA               	goto	l8684
 14855  018D3C                     u7340:
 14856                           
 14857                           ;stkvar	_quotient @ sp[(-9)+0]
 14858  018D3C  90D8               	bcf	status,0,c
 14859  018D3E  0EF7               	movlw	-9
 14860  018D40  36E3               	rlcf	plusw1,f,c
 14861  018D42  0EF8               	movlw	-8
 14862  018D44  36E3               	rlcf	plusw1,f,c
 14863  018D46  0EF9               	movlw	-7
 14864  018D48  36E3               	rlcf	plusw1,f,c
 14865  018D4A  0EFA               	movlw	-6
 14866  018D4C  36E3               	rlcf	plusw1,f,c
 14867  018D4E  0EFB               	movlw	-5
 14868  018D50  36E3               	rlcf	plusw1,f,c
 14869  018D52  0EFC               	movlw	-4
 14870  018D54  36E3               	rlcf	plusw1,f,c
 14871  018D56  0EFD               	movlw	-3
 14872  018D58  36E3               	rlcf	plusw1,f,c
 14873  018D5A  0EFE               	movlw	-2
 14874  018D5C  36E3               	rlcf	plusw1,f,c
 14875                           
 14876                           ;stkvar	_divisor @ sp[(-9)+-16]
 14877                           ;stkvar	_dividend @ sp[(-9)+-8]
 14878  018D5E  50E1               	movf	fsr1l,w,c
 14879  018D60  0FEF               	addlw	-17
 14880  018D62  6ED9               	movwf	fsr2l,c
 14881  018D64  50E2               	movf	fsr1h,w,c
 14882  018D66  6EDA               	movwf	fsr2h,c
 14883  018D68  0EFF               	movlw	255
 14884  018D6A  22DA               	addwfc	fsr2h,f,c
 14885  018D6C  0EE7               	movlw	-25
 14886  018D6E  50E3               	movf	plusw1,w,c
 14887  018D70  5CDE               	subwf	postinc2,w,c
 14888  018D72  0EE8               	movlw	-24
 14889  018D74  50E3               	movf	plusw1,w,c
 14890  018D76  58DE               	subwfb	postinc2,w,c
 14891  018D78  0EE9               	movlw	-23
 14892  018D7A  50E3               	movf	plusw1,w,c
 14893  018D7C  58DE               	subwfb	postinc2,w,c
 14894  018D7E  0EEA               	movlw	-22
 14895  018D80  50E3               	movf	plusw1,w,c
 14896  018D82  58DE               	subwfb	postinc2,w,c
 14897  018D84  0EEB               	movlw	-21
 14898  018D86  50E3               	movf	plusw1,w,c
 14899  018D88  58DE               	subwfb	postinc2,w,c
 14900  018D8A  0EEC               	movlw	-20
 14901  018D8C  50E3               	movf	plusw1,w,c
 14902  018D8E  58DE               	subwfb	postinc2,w,c
 14903  018D90  0EED               	movlw	-19
 14904  018D92  50E3               	movf	plusw1,w,c
 14905  018D94  58DE               	subwfb	postinc2,w,c
 14906  018D96  0EEE               	movlw	-18
 14907  018D98  50E3               	movf	plusw1,w,c
 14908  018D9A  58DE               	subwfb	postinc2,w,c
 14909  018D9C  A0D8               	btfss	status,0,c
 14910  018D9E  D021               	goto	l8696
 14911                           
 14912                           ;stkvar	_divisor @ sp[(-9)+-16]
 14913                           ;stkvar	_dividend @ sp[(-9)+-8]
 14914  018DA0  50E1               	movf	fsr1l,w,c
 14915  018DA2  0FEF               	addlw	-17
 14916  018DA4  6ED9               	movwf	fsr2l,c
 14917  018DA6  50E2               	movf	fsr1h,w,c
 14918  018DA8  6EDA               	movwf	fsr2h,c
 14919  018DAA  0EFF               	movlw	255
 14920  018DAC  22DA               	addwfc	fsr2h,f,c
 14921  018DAE  0EE7               	movlw	-25
 14922  018DB0  50E3               	movf	plusw1,w,c
 14923  018DB2  5EDE               	subwf	postinc2,f,c
 14924  018DB4  0EE8               	movlw	-24
 14925  018DB6  50E3               	movf	plusw1,w,c
 14926  018DB8  5ADE               	subwfb	postinc2,f,c
 14927  018DBA  0EE9               	movlw	-23
 14928  018DBC  50E3               	movf	plusw1,w,c
 14929  018DBE  5ADE               	subwfb	postinc2,f,c
 14930  018DC0  0EEA               	movlw	-22
 14931  018DC2  50E3               	movf	plusw1,w,c
 14932  018DC4  5ADE               	subwfb	postinc2,f,c
 14933  018DC6  0EEB               	movlw	-21
 14934  018DC8  50E3               	movf	plusw1,w,c
 14935  018DCA  5ADE               	subwfb	postinc2,f,c
 14936  018DCC  0EEC               	movlw	-20
 14937  018DCE  50E3               	movf	plusw1,w,c
 14938  018DD0  5ADE               	subwfb	postinc2,f,c
 14939  018DD2  0EED               	movlw	-19
 14940  018DD4  50E3               	movf	plusw1,w,c
 14941  018DD6  5ADE               	subwfb	postinc2,f,c
 14942  018DD8  0EEE               	movlw	-18
 14943  018DDA  50E3               	movf	plusw1,w,c
 14944  018DDC  5ADE               	subwfb	postinc2,f,c
 14945                           
 14946                           ;stkvar	_quotient @ sp[(-9)+0]
 14947  018DDE  0EF7               	movlw	-9
 14948  018DE0  80E3               	bsf	plusw1,0,c
 14949  018DE2                     l8696:
 14950                           
 14951                           ;stkvar	_divisor @ sp[(-9)+-16]
 14952  018DE2  90D8               	bcf	status,0,c
 14953  018DE4  0EEE               	movlw	-18
 14954  018DE6  32E3               	rrcf	plusw1,f,c
 14955  018DE8  0EED               	movlw	-19
 14956  018DEA  32E3               	rrcf	plusw1,f,c
 14957  018DEC  0EEC               	movlw	-20
 14958  018DEE  32E3               	rrcf	plusw1,f,c
 14959  018DF0  0EEB               	movlw	-21
 14960  018DF2  32E3               	rrcf	plusw1,f,c
 14961  018DF4  0EEA               	movlw	-22
 14962  018DF6  32E3               	rrcf	plusw1,f,c
 14963  018DF8  0EE9               	movlw	-23
 14964  018DFA  32E3               	rrcf	plusw1,f,c
 14965  018DFC  0EE8               	movlw	-24
 14966  018DFE  32E3               	rrcf	plusw1,f,c
 14967  018E00  0EE7               	movlw	-25
 14968  018E02  32E3               	rrcf	plusw1,f,c
 14969                           
 14970                           ;stkvar	_counter @ sp[(-9)+8]
 14971  018E04  0EFF               	movlw	-1
 14972  018E06  50E3               	movf	plusw1,w,c
 14973  018E08  6E01               	movwf	btemp^0,c
 14974  018E0A  0E01               	movlw	1
 14975  018E0C  5E01               	subwf	btemp^0,f,c
 14976  018E0E  0EFF               	movlw	-1
 14977  018E10  0060  F007  FFE3   	movff	btemp,plusw1
 14978  018E16  A4D8               	btfss	status,2,c
 14979  018E18  D791               	goto	u7340
 14980  018E1A                     u7360:
 14981                           
 14982                           ;stkvar	_quotient @ sp[(-9)+0]
 14983  018E1A  0EF7               	movlw	247
 14984  018E1C  24E1               	addwf	fsr1l,w,c
 14985  018E1E  6ED9               	movwf	fsr2l,c
 14986  018E20  0EFF               	movlw	255
 14987  018E22  20E2               	addwfc	fsr1h,w,c
 14988  018E24  6EDA               	movwf	fsr2h,c
 14989                           
 14990                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14991  018E26  0E08               	movlw	8
 14992  018E28  6E01               	movwf	btemp^0,c
 14993  018E2A  0EEF               	movlw	-17
 14994  018E2C                     us737999:
 14995  018E2C  006F FF7B FFE3     	movff	postinc2,plusw1
 14996  018E32  28E8               	incf	wreg,w,c
 14997  018E34  2E01               	decfsz	btemp^0,f,c
 14998  018E36  D7FA               	bra	us737999
 14999                           
 15000                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15001  018E38  0EF7               	movlw	247
 15002  018E3A  26E1               	addwf	fsr1l,f,c
 15003  018E3C  0EFF               	movlw	255
 15004  018E3E  22E2               	addwfc	fsr1h,f,c
 15005  018E40  0012               	return		;funcret
 15006  018E42                     __end_of___lodiv:
 15007                           	opt callstack 0
 15008                           
 15009 ;; *************** function _strncmp *****************
 15010 ;; Defined at:
 15011 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  _l              2  [STACK] PTR const unsigned char 
 15014 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15015 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15016 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15017 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15018 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15019 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 15020 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 15021 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 15022 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 15023 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 15024 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 15025 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15026 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15027 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15028 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15029 ;;		 -> STR_1(21), 
 15030 ;;  _r              2  [STACK] PTR const unsigned char 
 15031 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15032 ;;		 -> STR_79(3), STR_75(3), 
 15033 ;;  n               2  [STACK] unsigned int 
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;  r               2  [STACK] PTR const unsigned char 
 15036 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15037 ;;		 -> STR_79(3), STR_75(3), 
 15038 ;;  l               2  [STACK] PTR const unsigned char 
 15039 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15040 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15041 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15042 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15043 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15044 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 15045 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 15046 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 15047 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 15048 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 15049 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 15050 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15051 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15052 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15053 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15054 ;;		 -> STR_1(21), 
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  2  [STACK] int 
 15057 ;; Registers used:
 15058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;Total ram usage:        0 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:   15
 15071 ;; This function calls:
 15072 ;;		Nothing
 15073 ;; This function is called by:
 15074 ;;		_vfpfcnvrt
 15075 ;; This function uses a reentrant model
 15076 ;;
 15077                           
 15078                           	psect	text55
 15079  018014                     __ptext55:
 15080                           	opt callstack 0
 15081  018014                     _strncmp:
 15082                           	opt callstack 0
 15083                           
 15084                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15085  018014  52E6               	movf	postinc1,f,c
 15086  018016  52E6               	movf	postinc1,f,c
 15087  018018  52E6               	movf	postinc1,f,c
 15088  01801A  52E6               	movf	postinc1,f,c
 15089                           
 15090                           ;stkvar	__l @ sp[(-4)+-2]
 15091                           
 15092                           ;incstack = 0
 15093 ;; hardware stack exceeded
 15094  01801C  0EFA               	movlw	-6
 15095  01801E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15096  018024  0EFB               	movlw	-5
 15097  018026  006F FF8C  F00C    	movff	plusw1,btemp+11
 15098                           
 15099                           ;stkvar	_l @ sp[(-4)+2]
 15100  01802C  0EFF               	movlw	-1
 15101  01802E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15102  018034  0EFE               	movlw	-2
 15103  018036  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15104                           
 15105                           ;stkvar	__r @ sp[(-4)+-4]
 15106  01803C  0EF8               	movlw	-8
 15107  01803E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15108  018044  0EF9               	movlw	-7
 15109  018046  006F FF8C  F00C    	movff	plusw1,btemp+11
 15110                           
 15111                           ;stkvar	_r @ sp[(-4)+0]
 15112  01804C  0EFD               	movlw	-3
 15113  01804E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15114  018054  0EFC               	movlw	-4
 15115  018056  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15116                           
 15117                           ;stkvar	_n @ sp[(-4)+-6]
 15118  01805C  0EF6               	movlw	-10
 15119  01805E  006F FF8C  F001    	movff	plusw1,btemp
 15120  018064  0E01               	movlw	1
 15121  018066  5E01               	subwf	btemp^0,f,c
 15122  018068  0EF6               	movlw	-10
 15123  01806A  0060  F007  FFE3   	movff	btemp,plusw1
 15124  018070  0EF7               	movlw	-9
 15125  018072  006F FF8C  F001    	movff	plusw1,btemp
 15126  018078  0E00               	movlw	0
 15127  01807A  5A01               	subwfb	btemp^0,f,c
 15128  01807C  0EF7               	movlw	-9
 15129  01807E  0060  F007  FFE3   	movff	btemp,plusw1
 15130  018084  0EF6               	movlw	-10
 15131  018086  28E3               	incf	plusw1,w,c
 15132  018088  E13F               	bnz	l9366
 15133  01808A  0EF7               	movlw	-9
 15134  01808C  28E3               	incf	plusw1,w,c
 15135  01808E  A4D8               	btfss	status,2,c
 15136  018090  D03B               	goto	l9366
 15137  018092  0E00               	movlw	0
 15138  018094  6E01               	movwf	btemp^0,c
 15139  018096  0E00               	movlw	0
 15140  018098  6E02               	movwf	(btemp+1)^0,c
 15141  01809A  D0C7               	goto	l3451
 15142  01809C                     l9364:
 15143                           
 15144                           ;stkvar	_l @ sp[(-4)+2]
 15145  01809C  0EFE               	movlw	-2
 15146  01809E  50E3               	movf	plusw1,w,c
 15147  0180A0  0F01               	addlw	1
 15148  0180A2  6E01               	movwf	btemp^0,c
 15149  0180A4  0EFE               	movlw	-2
 15150  0180A6  0060  F007  FFE3   	movff	btemp,plusw1
 15151  0180AC  6A01               	clrf	btemp^0,c
 15152  0180AE  0EFF               	movlw	-1
 15153  0180B0  50E3               	movf	plusw1,w,c
 15154  0180B2  2001               	addwfc	btemp^0,w,c
 15155  0180B4  6E01               	movwf	btemp^0,c
 15156  0180B6  0EFF               	movlw	-1
 15157  0180B8  0060  F007  FFE3   	movff	btemp,plusw1
 15158                           
 15159                           ;stkvar	_r @ sp[(-4)+0]
 15160  0180BE  0EFC               	movlw	-4
 15161  0180C0  50E3               	movf	plusw1,w,c
 15162  0180C2  0F01               	addlw	1
 15163  0180C4  6E01               	movwf	btemp^0,c
 15164  0180C6  0EFC               	movlw	-4
 15165  0180C8  0060  F007  FFE3   	movff	btemp,plusw1
 15166  0180CE  6A01               	clrf	btemp^0,c
 15167  0180D0  0EFD               	movlw	-3
 15168  0180D2  50E3               	movf	plusw1,w,c
 15169  0180D4  2001               	addwfc	btemp^0,w,c
 15170  0180D6  6E01               	movwf	btemp^0,c
 15171  0180D8  0EFD               	movlw	-3
 15172  0180DA  0060  F007  FFE3   	movff	btemp,plusw1
 15173                           
 15174                           ;stkvar	_n @ sp[(-4)+-6]
 15175  0180E0  0EF6               	movlw	-10
 15176  0180E2  006F FF8C  F001    	movff	plusw1,btemp
 15177  0180E8  0E01               	movlw	1
 15178  0180EA  5E01               	subwf	btemp^0,f,c
 15179  0180EC  0EF6               	movlw	-10
 15180  0180EE  0060  F007  FFE3   	movff	btemp,plusw1
 15181  0180F4  0EF7               	movlw	-9
 15182  0180F6  006F FF8C  F001    	movff	plusw1,btemp
 15183  0180FC  0E00               	movlw	0
 15184  0180FE  5A01               	subwfb	btemp^0,f,c
 15185  018100  0EF7               	movlw	-9
 15186  018102  0060  F007  FFE3   	movff	btemp,plusw1
 15187  018108                     l9366:
 15188                           
 15189                           ;stkvar	_l @ sp[(-4)+2]
 15190  018108  0EFE               	movlw	-2
 15191  01810A  006F FF8F FFF6     	movff	plusw1,tblptrl
 15192  018110  0EFF               	movlw	-1
 15193  018112  006F FF8F FFF7     	movff	plusw1,tblptrh
 15194  018118  0E00               	movlw	low (__mediumconst shr (0+16))
 15195  01811A  6EF8               	movwf	tblptru,c
 15196  01811C  0E1F               	movlw	(high __ramtop+-1)
 15197  01811E  64F7               	cpfsgt	tblptrh,c
 15198  018120  D003               	bra	u8617
 15199  018122  0008               	tblrd		*
 15200  018124  50F5               	movf	tablat,w,c
 15201  018126  D007               	bra	u8610
 15202  018128                     u8617:
 15203  018128  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15204  01812E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15205  018134  50EF               	movf	indf0,w,c
 15206  018136                     u8610:
 15207  018136  0900               	iorlw	0
 15208  018138  B4D8               	btfsc	status,2,c
 15209  01813A  D04A               	goto	u8650
 15210                           
 15211                           ;stkvar	_r @ sp[(-4)+0]
 15212  01813C  50E1               	movf	fsr1l,w,c
 15213  01813E  0FFC               	addlw	-4
 15214  018140  6ED9               	movwf	fsr2l,c
 15215  018142  50E2               	movf	fsr1h,w,c
 15216  018144  6EDA               	movwf	fsr2h,c
 15217  018146  0EFF               	movlw	255
 15218  018148  22DA               	addwfc	fsr2h,f,c
 15219  01814A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15220  018150  006F FF77 FFF7     	movff	postdec2,tblptrh
 15221  018156                     	if	0	;tblptru may be non-zero
 15222  018156                     	endif
 15223  018156                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15224  018156  0E00               	movlw	low (__mediumconst shr (0+16))
 15225  018158  6EF8               	movwf	tblptru,c
 15226  01815A                     	endif
 15227  01815A  0008               	tblrd		*
 15228  01815C  50F5               	movf	tablat,w,c
 15229  01815E  0900               	iorlw	0
 15230  018160  B4D8               	btfsc	status,2,c
 15231  018162  D036               	goto	u8650
 15232                           
 15233                           ;stkvar	_n @ sp[(-4)+-6]
 15234  018164  0EF6               	movlw	-10
 15235  018166  006F FF8C  F001    	movff	plusw1,btemp
 15236  01816C  0EF7               	movlw	-9
 15237  01816E  50E3               	movf	plusw1,w,c
 15238  018170  1001               	iorwf	btemp^0,w,c
 15239  018172  B4D8               	btfsc	status,2,c
 15240  018174  D02D               	goto	u8650
 15241                           
 15242                           ;stkvar	_r @ sp[(-4)+0]
 15243  018176  50E1               	movf	fsr1l,w,c
 15244  018178  0FFC               	addlw	-4
 15245  01817A  6ED9               	movwf	fsr2l,c
 15246  01817C  50E2               	movf	fsr1h,w,c
 15247  01817E  6EDA               	movwf	fsr2h,c
 15248  018180  0EFF               	movlw	255
 15249  018182  22DA               	addwfc	fsr2h,f,c
 15250  018184  006F FF7B FFF6     	movff	postinc2,tblptrl
 15251  01818A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15252  018190                     	if	0	;tblptru may be non-zero
 15253  018190                     	endif
 15254  018190                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15255  018190  0E00               	movlw	low (__mediumconst shr (0+16))
 15256  018192  6EF8               	movwf	tblptru,c
 15257  018194                     	endif
 15258  018194  0008               	tblrd		*
 15259  018196  006F FFD4  F00C    	movff	tablat,btemp+11
 15260                           
 15261                           ;stkvar	_l @ sp[(-4)+2]
 15262  01819C  0EFE               	movlw	-2
 15263  01819E  006F FF8F FFF6     	movff	plusw1,tblptrl
 15264  0181A4  0EFF               	movlw	-1
 15265  0181A6  006F FF8F FFF7     	movff	plusw1,tblptrh
 15266  0181AC  0E00               	movlw	low (__mediumconst shr (0+16))
 15267  0181AE  6EF8               	movwf	tblptru,c
 15268  0181B0  0E1F               	movlw	(high __ramtop+-1)
 15269  0181B2  64F7               	cpfsgt	tblptrh,c
 15270  0181B4  D003               	bra	u8657
 15271  0181B6  0008               	tblrd		*
 15272  0181B8  50F5               	movf	tablat,w,c
 15273  0181BA  D007               	bra	u8655
 15274  0181BC                     u8657:
 15275  0181BC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15276  0181C2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15277  0181C8  50EF               	movf	indf0,w,c
 15278  0181CA                     u8655:
 15279  0181CA  180C               	xorwf	(btemp+11)^0,w,c
 15280  0181CC  B4D8               	btfsc	status,2,c
 15281  0181CE  D766               	goto	l9364
 15282  0181D0                     u8650:
 15283                           
 15284                           ;stkvar	_l @ sp[(-4)+2]
 15285  0181D0  0EFE               	movlw	-2
 15286  0181D2  006F FF8F FFF6     	movff	plusw1,tblptrl
 15287  0181D8  0EFF               	movlw	-1
 15288  0181DA  006F FF8F FFF7     	movff	plusw1,tblptrh
 15289  0181E0  0E00               	movlw	low (__mediumconst shr (0+16))
 15290  0181E2  6EF8               	movwf	tblptru,c
 15291  0181E4  0E1F               	movlw	(high __ramtop+-1)
 15292  0181E6  64F7               	cpfsgt	tblptrh,c
 15293  0181E8  D003               	bra	u8667
 15294  0181EA  0008               	tblrd		*
 15295  0181EC  50F5               	movf	tablat,w,c
 15296  0181EE  D007               	bra	u8660
 15297  0181F0                     u8667:
 15298  0181F0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15299  0181F6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15300  0181FC  50EF               	movf	indf0,w,c
 15301  0181FE                     u8660:
 15302  0181FE  6E01               	movwf	btemp^0,c
 15303  018200  6A02               	clrf	(btemp+1)^0,c
 15304                           
 15305                           ;stkvar	_r @ sp[(-4)+0]
 15306  018202  50E1               	movf	fsr1l,w,c
 15307  018204  0FFC               	addlw	-4
 15308  018206  6ED9               	movwf	fsr2l,c
 15309  018208  50E2               	movf	fsr1h,w,c
 15310  01820A  6EDA               	movwf	fsr2h,c
 15311  01820C  0EFF               	movlw	255
 15312  01820E  22DA               	addwfc	fsr2h,f,c
 15313  018210  006F FF7B FFF6     	movff	postinc2,tblptrl
 15314  018216  006F FF77 FFF7     	movff	postdec2,tblptrh
 15315  01821C                     	if	0	;tblptru may be non-zero
 15316  01821C                     	endif
 15317  01821C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15318  01821C  0E00               	movlw	low (__mediumconst shr (0+16))
 15319  01821E  6EF8               	movwf	tblptru,c
 15320  018220                     	endif
 15321  018220  0008               	tblrd		*
 15322  018222  50F5               	movf	tablat,w,c
 15323  018224  5E01               	subwf	btemp^0,f,c
 15324  018226  0E00               	movlw	0
 15325  018228  5A02               	subwfb	(btemp+1)^0,f,c
 15326  01822A                     l3451:
 15327                           
 15328                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15329  01822A  0EF6               	movlw	246
 15330  01822C  26E1               	addwf	fsr1l,f,c
 15331  01822E  0EFF               	movlw	255
 15332  018230  22E2               	addwfc	fsr1h,f,c
 15333  018232  0012               	return		;funcret
 15334  018234                     __end_of_strncmp:
 15335                           	opt callstack 0
 15336                           
 15337 ;; *************** function _stoa *****************
 15338 ;; Defined at:
 15339 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15340 ;; Parameters:    Size  Location     Type
 15341 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15342 ;;		 -> f(6), NULL(0), 
 15343 ;;  s               2  [STACK] PTR unsigned char 
 15344 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15345 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15346 ;;		 -> V(191), 
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;  nuls            7  [STACK] unsigned char [7]
 15349 ;;  l               2  [STACK] int 
 15350 ;;  p               2  [STACK] int 
 15351 ;;  cp              2  [STACK] PTR unsigned char 
 15352 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15353 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15354 ;;		 -> STR_3(5), V(191), 
 15355 ;;  w               2  [STACK] int 
 15356 ;;  i               2  [STACK] int 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  2  [STACK] int 
 15359 ;; Registers used:
 15360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;Total ram usage:        0 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; Hardware stack levels required when called:   18
 15373 ;; This function calls:
 15374 ;;		_fputc
 15375 ;;		_strlen
 15376 ;; This function is called by:
 15377 ;;		_vfpfcnvrt
 15378 ;; This function uses a reentrant model
 15379 ;;
 15380                           
 15381                           	psect	text56
 15382  0173DC                     __ptext56:
 15383                           	opt callstack 0
 15384  0173DC                     _stoa:
 15385                           	opt callstack 0
 15386                           
 15387                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15388  0173DC  0E11               	movlw	17
 15389  0173DE  26E1               	addwf	fsr1l,f,c
 15390  0173E0  0E00               	movlw	0
 15391  0173E2  22E2               	addwfc	fsr1h,f,c
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15394                           
 15395                           ;incstack = 0
 15396 ;; hardware stack exceeded
 15397  0173E4  EE20  F0F0         	lfsr	2,stoa@F1166
 15398                           
 15399                           ;stkvar	_nuls @ sp[(-17)+0]
 15400  0173E8  0E07               	movlw	7
 15401  0173EA  6E01               	movwf	btemp^0,c
 15402  0173EC  0EEF               	movlw	-17
 15403  0173EE                     us1161999:
 15404  0173EE  006F FF7B FFE3     	movff	postinc2,plusw1
 15405  0173F4  28E8               	incf	wreg,w,c
 15406  0173F6  2E01               	decfsz	btemp^0,f,c
 15407  0173F8  D7FA               	bra	us1161999
 15408                           
 15409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15410                           ;stkvar	_s @ sp[(-17)+-4]
 15411  0173FA  0EEB               	movlw	-21
 15412  0173FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15413  017402  0EEC               	movlw	-20
 15414  017404  006F FF8C  F00C    	movff	plusw1,btemp+11
 15415                           
 15416                           ;stkvar	_cp @ sp[(-17)+11]
 15417  01740A  0EFB               	movlw	-5
 15418  01740C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15419  017412  0EFA               	movlw	-6
 15420  017414  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15421                           
 15422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15423                           ;stkvar	_cp @ sp[(-17)+11]
 15424  01741A  0EFA               	movlw	-6
 15425  01741C  006F FF8C  F001    	movff	plusw1,btemp
 15426  017422  0EFB               	movlw	-5
 15427  017424  50E3               	movf	plusw1,w,c
 15428  017426  1001               	iorwf	btemp^0,w,c
 15429  017428  A4D8               	btfss	status,2,c
 15430  01742A  D00E               	goto	l12300
 15431                           
 15432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15433                           ;stkvar	_nuls @ sp[(-17)+0]
 15434  01742C  0EEF               	movlw	239
 15435  01742E  24E1               	addwf	fsr1l,w,c
 15436  017430  6E0B               	movwf	(btemp+10)^0,c
 15437  017432  0EFF               	movlw	255
 15438  017434  20E2               	addwfc	fsr1h,w,c
 15439  017436  6E0C               	movwf	(btemp+11)^0,c
 15440                           
 15441                           ;stkvar	_cp @ sp[(-17)+11]
 15442  017438  0EFB               	movlw	-5
 15443  01743A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15444  017440  0EFA               	movlw	-6
 15445  017442  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15446  017448                     l12300:
 15447                           
 15448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15449                           ;stkvar	_cp @ sp[(-17)+11]
 15450  017448  0EFA               	movlw	-6
 15451  01744A  006F FF8F FFE6     	movff	plusw1,postinc1
 15452  017450  006F FF8F FFE6     	movff	plusw1,postinc1
 15453  017456  EC8C  F0D4         	call	_strlen	;wreg free
 15454                           
 15455                           ;stkvar	_l @ sp[(-17)+7]
 15456  01745A  0EF6               	movlw	-10
 15457  01745C  0060  F007  FFE3   	movff	btemp,plusw1
 15458  017462  0EF7               	movlw	-9
 15459  017464  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15460                           
 15461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15462                           ;stkvar	_p @ sp[(-17)+9]
 15463  01746A  0EF8               	movlw	-8
 15464  01746C  0060  F0F3  FFE3   	movff	_prec,plusw1
 15465  017472  0EF9               	movlw	-7
 15466  017474  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15467                           
 15468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15469                           ;stkvar	_p @ sp[(-17)+9]
 15470  01747A  0EF9               	movlw	-7
 15471  01747C  BEE3               	btfsc	plusw1,7,c
 15472  01747E  D023               	goto	l2276
 15473                           
 15474                           ;stkvar	_l @ sp[(-17)+7]
 15475                           ;stkvar	_p @ sp[(-17)+9]
 15476  017480  50E1               	movf	fsr1l,w,c
 15477  017482  0FF8               	addlw	-8
 15478  017484  6ED9               	movwf	fsr2l,c
 15479  017486  50E2               	movf	fsr1h,w,c
 15480  017488  6EDA               	movwf	fsr2h,c
 15481  01748A  0EFF               	movlw	255
 15482  01748C  22DA               	addwfc	fsr2h,f,c
 15483  01748E  0EF6               	movlw	-10
 15484  017490  50E3               	movf	plusw1,w,c
 15485  017492  5CDE               	subwf	postinc2,w,c
 15486  017494  50DE               	movf	postinc2,w,c
 15487  017496  0A80               	xorlw	128
 15488  017498  6E01               	movwf	btemp^0,c
 15489  01749A  0EF7               	movlw	-9
 15490  01749C  50E3               	movf	plusw1,w,c
 15491  01749E  0A80               	xorlw	128
 15492  0174A0  5801               	subwfb	btemp^0,w,c
 15493  0174A2  B0D8               	btfsc	status,0,c
 15494  0174A4  D010               	goto	l2276
 15495                           
 15496                           ;stkvar	_p @ sp[(-17)+9]
 15497                           ;stkvar	_l @ sp[(-17)+7]
 15498  0174A6  0EF8               	movlw	-8
 15499  0174A8  006F FF8C  F001    	movff	plusw1,btemp
 15500  0174AE  0EF6               	movlw	-10
 15501  0174B0  0060  F007  FFE3   	movff	btemp,plusw1
 15502  0174B6  0EF9               	movlw	-7
 15503  0174B8  006F FF8C  F001    	movff	plusw1,btemp
 15504  0174BE  0EF7               	movlw	-9
 15505  0174C0  0060  F007  FFE3   	movff	btemp,plusw1
 15506  0174C6                     l2276:
 15507                           
 15508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15509                           ;stkvar	_l @ sp[(-17)+7]
 15510                           ;stkvar	_p @ sp[(-17)+9]
 15511  0174C6  0EF6               	movlw	-10
 15512  0174C8  006F FF8C  F001    	movff	plusw1,btemp
 15513  0174CE  0EF8               	movlw	-8
 15514  0174D0  0060  F007  FFE3   	movff	btemp,plusw1
 15515  0174D6  0EF7               	movlw	-9
 15516  0174D8  006F FF8C  F001    	movff	plusw1,btemp
 15517  0174DE  0EF9               	movlw	-7
 15518  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 15519                           
 15520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15521                           ;stkvar	_w @ sp[(-17)+13]
 15522  0174E6  0EFC               	movlw	-4
 15523  0174E8  0060  F0EB  FFE3   	movff	_width,plusw1
 15524  0174EE  0EFD               	movlw	-3
 15525  0174F0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15526                           
 15527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15528  0174F6  A03E               	btfss	_flags^0,0,c
 15529  0174F8  D01F               	goto	l12320
 15530  0174FA  D031               	goto	u11660
 15531  0174FC                     l12316:
 15532                           
 15533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15534                           ;stkvar	_fp @ sp[(-17)+-2]
 15535  0174FC  0EED               	movlw	-19
 15536  0174FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  017504  006F FF8F FFE6     	movff	plusw1,postinc1
 15538  01750A  0E20               	movlw	32
 15539  01750C  6EE6               	movwf	postinc1,c
 15540  01750E  0E00               	movlw	0
 15541  017510  6EE6               	movwf	postinc1,c
 15542  017512  ECBC  F0CB         	call	_fputc	;wreg free
 15543                           
 15544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15545                           ;stkvar	_l @ sp[(-17)+7]
 15546  017516  0EF6               	movlw	-10
 15547  017518  50E3               	movf	plusw1,w,c
 15548  01751A  0F01               	addlw	1
 15549  01751C  6E01               	movwf	btemp^0,c
 15550  01751E  0EF6               	movlw	-10
 15551  017520  0060  F007  FFE3   	movff	btemp,plusw1
 15552  017526  6A01               	clrf	btemp^0,c
 15553  017528  0EF7               	movlw	-9
 15554  01752A  50E3               	movf	plusw1,w,c
 15555  01752C  2001               	addwfc	btemp^0,w,c
 15556  01752E  6E01               	movwf	btemp^0,c
 15557  017530  0EF7               	movlw	-9
 15558  017532  0060  F007  FFE3   	movff	btemp,plusw1
 15559  017538                     l12320:
 15560                           
 15561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15562                           ;stkvar	_w @ sp[(-17)+13]
 15563                           ;stkvar	_l @ sp[(-17)+7]
 15564  017538  50E1               	movf	fsr1l,w,c
 15565  01753A  0FF6               	addlw	-10
 15566  01753C  6ED9               	movwf	fsr2l,c
 15567  01753E  50E2               	movf	fsr1h,w,c
 15568  017540  6EDA               	movwf	fsr2h,c
 15569  017542  0EFF               	movlw	255
 15570  017544  22DA               	addwfc	fsr2h,f,c
 15571  017546  0EFC               	movlw	-4
 15572  017548  50E3               	movf	plusw1,w,c
 15573  01754A  5CDE               	subwf	postinc2,w,c
 15574  01754C  50DE               	movf	postinc2,w,c
 15575  01754E  0A80               	xorlw	128
 15576  017550  6E01               	movwf	btemp^0,c
 15577  017552  0EFD               	movlw	-3
 15578  017554  50E3               	movf	plusw1,w,c
 15579  017556  0A80               	xorlw	128
 15580  017558  5801               	subwfb	btemp^0,w,c
 15581  01755A  A0D8               	btfss	status,0,c
 15582  01755C  D7CF               	goto	l12316
 15583  01755E                     u11660:
 15584                           
 15585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15586                           ;stkvar	_i @ sp[(-17)+15]
 15587  01755E  0EFE               	movlw	-2
 15588  017560  6AE3               	clrf	plusw1,c
 15589  017562  0EFF               	movlw	-1
 15590  017564  6AE3               	clrf	plusw1,c
 15591                           
 15592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15593  017566  D045               	goto	l12330
 15594  017568                     l12324:
 15595                           
 15596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15597                           ;stkvar	_fp @ sp[(-17)+-2]
 15598  017568  0EED               	movlw	-19
 15599  01756A  006F FF8F FFE6     	movff	plusw1,postinc1
 15600  017570  006F FF8F FFE6     	movff	plusw1,postinc1
 15601                           
 15602                           ;stkvar	_cp @ sp[(-19)+11]
 15603  017576  0EF8               	movlw	-8
 15604  017578  006F FF8F FFF6     	movff	plusw1,tblptrl
 15605  01757E  0EF9               	movlw	-7
 15606  017580  006F FF8F FFF7     	movff	plusw1,tblptrh
 15607  017586  0E00               	movlw	low (__mediumconst shr (0+16))
 15608  017588  6EF8               	movwf	tblptru,c
 15609  01758A  0E1F               	movlw	(high __ramtop+-1)
 15610  01758C  64F7               	cpfsgt	tblptrh,c
 15611  01758E  D003               	bra	u11677
 15612  017590  0008               	tblrd		*
 15613  017592  50F5               	movf	tablat,w,c
 15614  017594  D007               	bra	u11670
 15615  017596                     u11677:
 15616  017596  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15617  01759C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15618  0175A2  50EF               	movf	indf0,w,c
 15619  0175A4                     u11670:
 15620  0175A4  6EE6               	movwf	postinc1,c
 15621  0175A6  0E00               	movlw	0
 15622  0175A8  6EE6               	movwf	postinc1,c
 15623  0175AA  ECBC  F0CB         	call	_fputc	;wreg free
 15624                           
 15625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15626                           ;stkvar	_cp @ sp[(-17)+11]
 15627  0175AE  0EFA               	movlw	-6
 15628  0175B0  50E3               	movf	plusw1,w,c
 15629  0175B2  0F01               	addlw	1
 15630  0175B4  6E01               	movwf	btemp^0,c
 15631  0175B6  0EFA               	movlw	-6
 15632  0175B8  0060  F007  FFE3   	movff	btemp,plusw1
 15633  0175BE  6A01               	clrf	btemp^0,c
 15634  0175C0  0EFB               	movlw	-5
 15635  0175C2  50E3               	movf	plusw1,w,c
 15636  0175C4  2001               	addwfc	btemp^0,w,c
 15637  0175C6  6E01               	movwf	btemp^0,c
 15638  0175C8  0EFB               	movlw	-5
 15639  0175CA  0060  F007  FFE3   	movff	btemp,plusw1
 15640                           
 15641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15642                           ;stkvar	_i @ sp[(-17)+15]
 15643  0175D0  0EFE               	movlw	-2
 15644  0175D2  50E3               	movf	plusw1,w,c
 15645  0175D4  0F01               	addlw	1
 15646  0175D6  6E01               	movwf	btemp^0,c
 15647  0175D8  0EFE               	movlw	-2
 15648  0175DA  0060  F007  FFE3   	movff	btemp,plusw1
 15649  0175E0  6A01               	clrf	btemp^0,c
 15650  0175E2  0EFF               	movlw	-1
 15651  0175E4  50E3               	movf	plusw1,w,c
 15652  0175E6  2001               	addwfc	btemp^0,w,c
 15653  0175E8  6E01               	movwf	btemp^0,c
 15654  0175EA  0EFF               	movlw	-1
 15655  0175EC  0060  F007  FFE3   	movff	btemp,plusw1
 15656  0175F2                     l12330:
 15657                           
 15658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15659                           ;stkvar	_p @ sp[(-17)+9]
 15660                           ;stkvar	_i @ sp[(-17)+15]
 15661  0175F2  50E1               	movf	fsr1l,w,c
 15662  0175F4  0FFE               	addlw	-2
 15663  0175F6  6ED9               	movwf	fsr2l,c
 15664  0175F8  50E2               	movf	fsr1h,w,c
 15665  0175FA  6EDA               	movwf	fsr2h,c
 15666  0175FC  0EFF               	movlw	255
 15667  0175FE  22DA               	addwfc	fsr2h,f,c
 15668  017600  0EF8               	movlw	-8
 15669  017602  50E3               	movf	plusw1,w,c
 15670  017604  5CDE               	subwf	postinc2,w,c
 15671  017606  50DE               	movf	postinc2,w,c
 15672  017608  0A80               	xorlw	128
 15673  01760A  6E01               	movwf	btemp^0,c
 15674  01760C  0EF9               	movlw	-7
 15675  01760E  50E3               	movf	plusw1,w,c
 15676  017610  0A80               	xorlw	128
 15677  017612  5801               	subwfb	btemp^0,w,c
 15678  017614  A0D8               	btfss	status,0,c
 15679  017616  D7A8               	goto	l12324
 15680                           
 15681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15682  017618  B03E               	btfsc	_flags^0,0,c
 15683  01761A  D01F               	goto	l12338
 15684  01761C  D031               	goto	u11700
 15685  01761E                     l12334:
 15686                           
 15687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15688                           ;stkvar	_fp @ sp[(-17)+-2]
 15689  01761E  0EED               	movlw	-19
 15690  017620  006F FF8F FFE6     	movff	plusw1,postinc1
 15691  017626  006F FF8F FFE6     	movff	plusw1,postinc1
 15692  01762C  0E20               	movlw	32
 15693  01762E  6EE6               	movwf	postinc1,c
 15694  017630  0E00               	movlw	0
 15695  017632  6EE6               	movwf	postinc1,c
 15696  017634  ECBC  F0CB         	call	_fputc	;wreg free
 15697                           
 15698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15699                           ;stkvar	_l @ sp[(-17)+7]
 15700  017638  0EF6               	movlw	-10
 15701  01763A  50E3               	movf	plusw1,w,c
 15702  01763C  0F01               	addlw	1
 15703  01763E  6E01               	movwf	btemp^0,c
 15704  017640  0EF6               	movlw	-10
 15705  017642  0060  F007  FFE3   	movff	btemp,plusw1
 15706  017648  6A01               	clrf	btemp^0,c
 15707  01764A  0EF7               	movlw	-9
 15708  01764C  50E3               	movf	plusw1,w,c
 15709  01764E  2001               	addwfc	btemp^0,w,c
 15710  017650  6E01               	movwf	btemp^0,c
 15711  017652  0EF7               	movlw	-9
 15712  017654  0060  F007  FFE3   	movff	btemp,plusw1
 15713  01765A                     l12338:
 15714                           
 15715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15716                           ;stkvar	_w @ sp[(-17)+13]
 15717                           ;stkvar	_l @ sp[(-17)+7]
 15718  01765A  50E1               	movf	fsr1l,w,c
 15719  01765C  0FF6               	addlw	-10
 15720  01765E  6ED9               	movwf	fsr2l,c
 15721  017660  50E2               	movf	fsr1h,w,c
 15722  017662  6EDA               	movwf	fsr2h,c
 15723  017664  0EFF               	movlw	255
 15724  017666  22DA               	addwfc	fsr2h,f,c
 15725  017668  0EFC               	movlw	-4
 15726  01766A  50E3               	movf	plusw1,w,c
 15727  01766C  5CDE               	subwf	postinc2,w,c
 15728  01766E  50DE               	movf	postinc2,w,c
 15729  017670  0A80               	xorlw	128
 15730  017672  6E01               	movwf	btemp^0,c
 15731  017674  0EFD               	movlw	-3
 15732  017676  50E3               	movf	plusw1,w,c
 15733  017678  0A80               	xorlw	128
 15734  01767A  5801               	subwfb	btemp^0,w,c
 15735  01767C  A0D8               	btfss	status,0,c
 15736  01767E  D7CF               	goto	l12334
 15737  017680                     u11700:
 15738                           
 15739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15740                           ;stkvar	_l @ sp[(-17)+7]
 15741  017680  0EF6               	movlw	-10
 15742  017682  006F FF8C  F001    	movff	plusw1,btemp
 15743  017688  0EF7               	movlw	-9
 15744  01768A  006F FF8C  F002    	movff	plusw1,btemp+1
 15745                           
 15746                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15747  017690  0EEB               	movlw	235
 15748  017692  26E1               	addwf	fsr1l,f,c
 15749  017694  0EFF               	movlw	255
 15750  017696  22E2               	addwfc	fsr1h,f,c
 15751  017698  0012               	return		;funcret
 15752  01769A                     __end_of_stoa:
 15753                           	opt callstack 0
 15754                           
 15755 ;; *************** function _efgtoa *****************
 15756 ;; Defined at:
 15757 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15760 ;;		 -> f(6), NULL(0), 
 15761 ;;  f               4  [STACK] PTR struct _IO_FILE
 15762 ;;  c               1  [STACK] unsigned char 
 15763 ;; Auto vars:     Size  Location     Type
 15764 ;;  u               4  [STACK] unsigned char 
 15765 ;;  g               4  [STACK] unsigned char 
 15766 ;;  l               4  [STACK] unsigned char 
 15767 ;;  h               4  [STACK] unsigned char 
 15768 ;;  ou              4  [STACK] unsigned char 
 15769 ;;  n               2  [STACK] int 
 15770 ;;  e               2  [STACK] int 
 15771 ;;  i               2  [STACK] int 
 15772 ;;  w               2  [STACK] int 
 15773 ;;  p               2  [STACK] int 
 15774 ;;  sign            2  [STACK] int 
 15775 ;;  d               2  [STACK] int 
 15776 ;;  ne              2  [STACK] int 
 15777 ;;  m               2  [STACK] int 
 15778 ;;  pp              2  [STACK] int 
 15779 ;;  t               2  [STACK] int 
 15780 ;;  mode            1  [STACK] unsigned char 
 15781 ;;  nmode           1  [STACK] unsigned char 
 15782 ;; Return value:  Size  Location     Type
 15783 ;;                  2  [STACK] int 
 15784 ;; Registers used:
 15785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15795 ;;Total ram usage:        0 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; Hardware stack levels required when called:   20
 15798 ;; This function calls:
 15799 ;;		___awdiv
 15800 ;;		___awmod
 15801 ;;		___fladd
 15802 ;;		___fldiv
 15803 ;;		___fleq
 15804 ;;		___flge
 15805 ;;		___flmul
 15806 ;;		___flneg
 15807 ;;		___flsub
 15808 ;;		___fltol
 15809 ;;		___fpclassifyf
 15810 ;;		_floorf
 15811 ;;		_isupper
 15812 ;;		_pad
 15813 ;;		_strcpy
 15814 ;;		_tolower
 15815 ;; This function is called by:
 15816 ;;		_vfpfcnvrt
 15817 ;; This function uses a reentrant model
 15818 ;;
 15819                           
 15820                           	psect	text57
 15821  010000                     __ptext57:
 15822                           	opt callstack 0
 15823  010000                     _efgtoa:
 15824                           	opt callstack 0
 15825                           
 15826                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15827  010000  0E38               	movlw	56
 15828  010002  26E1               	addwf	fsr1l,f,c
 15829  010004  0E00               	movlw	0
 15830  010006  22E2               	addwfc	fsr1h,f,c
 15831                           
 15832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15833                           ;stkvar	_sign @ sp[(-56)+42]
 15834                           
 15835                           ;incstack = 0
 15836 ;; hardware stack exceeded
 15837  010008  0EF2               	movlw	-14
 15838  01000A  6AE3               	clrf	plusw1,c
 15839  01000C  0EF3               	movlw	-13
 15840  01000E  6AE3               	clrf	plusw1,c
 15841                           
 15842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15843                           ;stkvar	_f @ sp[(-56)+-6]
 15844  010010  0EC2               	movlw	-62
 15845  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15846  010018  0EC3               	movlw	-61
 15847  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15848  010020  0EC4               	movlw	-60
 15849  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15850  010028  0EC5               	movlw	-59
 15851  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15852                           
 15853                           ;stkvar	_g @ sp[(-56)+16]
 15854  010030  0ED8               	movlw	-40
 15855  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15856  010038  0ED9               	movlw	-39
 15857  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15858  010040  0EDA               	movlw	-38
 15859  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15860  010048  0EDB               	movlw	-37
 15861  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15862                           
 15863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15864                           ;stkvar	_g @ sp[(-56)+16]
 15865  010050  0EDB               	movlw	-37
 15866  010052  AEE3               	btfss	plusw1,7,c
 15867  010054  D02B               	goto	l11998
 15868                           
 15869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15870  010056  0E01               	movlw	1
 15871  010058  6E0B               	movwf	(btemp+10)^0,c
 15872  01005A  0E00               	movlw	0
 15873  01005C  6E0C               	movwf	(btemp+11)^0,c
 15874                           
 15875                           ;stkvar	_sign @ sp[(-56)+42]
 15876  01005E  0EF2               	movlw	-14
 15877  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15878  010066  0EF3               	movlw	-13
 15879  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15882                           ;stkvar	_g @ sp[(-56)+16]
 15883  01006E  0ED8               	movlw	-40
 15884  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15885  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15886  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15887  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15888  010088  EC28  F0DA         	call	___flneg	;wreg free
 15889                           
 15890                           ;stkvar	_g @ sp[(-56)+16]
 15891  01008C  0ED8               	movlw	-40
 15892  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15893  010094  0ED9               	movlw	-39
 15894  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15895  01009C  0EDA               	movlw	-38
 15896  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15897  0100A4  0EDB               	movlw	-37
 15898  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15899  0100AC                     l11998:
 15900                           
 15901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15902                           ;stkvar	_n @ sp[(-56)+32]
 15903  0100AC  0EE8               	movlw	-24
 15904  0100AE  6AE3               	clrf	plusw1,c
 15905  0100B0  0EE9               	movlw	-23
 15906  0100B2  6AE3               	clrf	plusw1,c
 15907                           
 15908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15909                           ;stkvar	_w @ sp[(-56)+38]
 15910  0100B4  0EEE               	movlw	-18
 15911  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15912  0100BC  0EEF               	movlw	-17
 15913  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15914                           
 15915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15916                           ;stkvar	_sign @ sp[(-56)+42]
 15917  0100C4  0EF2               	movlw	-14
 15918  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15919  0100CC  0EF3               	movlw	-13
 15920  0100CE  50E3               	movf	plusw1,w,c
 15921  0100D0  1001               	iorwf	btemp^0,w,c
 15922  0100D2  A4D8               	btfss	status,2,c
 15923  0100D4  D002               	goto	u11110
 15924  0100D6  A43E               	btfss	_flags^0,2,c
 15925  0100D8  D036               	goto	l12018
 15926  0100DA                     u11110:
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15929                           ;stkvar	_sign @ sp[(-56)+42]
 15930  0100DA  0EF2               	movlw	-14
 15931  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15932  0100E2  0EF3               	movlw	-13
 15933  0100E4  50E3               	movf	plusw1,w,c
 15934  0100E6  1001               	iorwf	btemp^0,w,c
 15935  0100E8  A4D8               	btfss	status,2,c
 15936  0100EA  D002               	goto	l12010
 15937  0100EC  0E2B               	movlw	43
 15938  0100EE  D001               	goto	L16
 15939  0100F0                     l12010:
 15940  0100F0  0E2D               	movlw	45
 15941  0100F2                     L16:
 15942  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15943  0100F4  0E00               	movlw	0
 15944  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15945                           
 15946                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 15947  0100F8  0ED2               	movlw	-46
 15948  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15949  010100  0ED3               	movlw	-45
 15950  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15951                           
 15952                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 15953  010108  0ED2               	movlw	-46
 15954  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 15955                           
 15956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15957                           ;stkvar	_n @ sp[(-56)+32]
 15958  010110  0EE8               	movlw	-24
 15959  010112  50E3               	movf	plusw1,w,c
 15960  010114  0F01               	addlw	1
 15961  010116  6E01               	movwf	btemp^0,c
 15962  010118  0EE8               	movlw	-24
 15963  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15964  010120  6A01               	clrf	btemp^0,c
 15965  010122  0EE9               	movlw	-23
 15966  010124  50E3               	movf	plusw1,w,c
 15967  010126  2001               	addwfc	btemp^0,w,c
 15968  010128  6E01               	movwf	btemp^0,c
 15969  01012A  0EE9               	movlw	-23
 15970  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15971                           
 15972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15973                           ;stkvar	_w @ sp[(-56)+38]
 15974  010132  50E1               	movf	fsr1l,w,c
 15975  010134  0FEE               	addlw	-18
 15976  010136  6ED9               	movwf	fsr2l,c
 15977  010138  50E2               	movf	fsr1h,w,c
 15978  01013A  6EDA               	movwf	fsr2h,c
 15979  01013C  0EFF               	movlw	255
 15980  01013E  22DA               	addwfc	fsr2h,f,c
 15981  010140  06DE               	decf	postinc2,f,c
 15982  010142  0E00               	movlw	0
 15983  010144  5ADD               	subwfb	postdec2,f,c
 15984  010146                     l12018:
 15985                           
 15986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15987                           ;stkvar	_g @ sp[(-56)+16]
 15988  010146  0ED8               	movlw	-40
 15989  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15990  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15991  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  010160  ECD3  F0C4         	call	___fpclassifyf	;wreg free
 15994  010164  0401               	decf	btemp^0,w,c
 15995  010166  1002               	iorwf	(btemp+1)^0,w,c
 15996  010168  A4D8               	btfss	status,2,c
 15997  01016A  D076               	goto	l12036
 15998  01016C  0EBF               	movlw	191
 15999  01016E  6E0B               	movwf	(btemp+10)^0,c
 16000  010170  0EFF               	movlw	255
 16001  010172  6E0C               	movwf	(btemp+11)^0,c
 16002                           
 16003                           ;stkvar	_c @ sp[(-56)+-7]
 16004  010174  0EC1               	movlw	-63
 16005  010176  50E3               	movf	plusw1,w,c
 16006  010178  6E09               	movwf	(btemp+8)^0,c
 16007  01017A  6A0A               	clrf	(btemp+9)^0,c
 16008  01017C  500B               	movf	(btemp+10)^0,w,c
 16009  01017E  2609               	addwf	(btemp+8)^0,f,c
 16010  010180  500C               	movf	(btemp+11)^0,w,c
 16011  010182  220A               	addwfc	(btemp+9)^0,f,c
 16012  010184  500A               	movf	(btemp+9)^0,w,c
 16013  010186  E106               	bnz	u11140
 16014  010188  0E1A               	movlw	26
 16015  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16016  01018C  B0D8               	btfsc	status,0,c
 16017  01018E  D002               	goto	u11140
 16018  010190  0E01               	movlw	1
 16019  010192  D001               	goto	u11150
 16020  010194                     u11140:
 16021  010194  0E00               	movlw	0
 16022  010196                     u11150:
 16023  010196  6E0B               	movwf	(btemp+10)^0,c
 16024  010198  6A0C               	clrf	(btemp+11)^0,c
 16025                           
 16026                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16027  01019A  0ED0               	movlw	-48
 16028  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16029  0101A2  0ED1               	movlw	-47
 16030  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16031                           
 16032                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16033  0101AA  0ED0               	movlw	-48
 16034  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16035  0101B2  0ED1               	movlw	-47
 16036  0101B4  50E3               	movf	plusw1,w,c
 16037  0101B6  1001               	iorwf	btemp^0,w,c
 16038  0101B8  B4D8               	btfsc	status,2,c
 16039  0101BA  D017               	goto	l12028
 16040                           
 16041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16042  0101BC  0ED7               	movlw	low STR_65
 16043  0101BE  6EE6               	movwf	postinc1,c
 16044  0101C0  0EFF               	movlw	high STR_65
 16045  0101C2  6EE6               	movwf	postinc1,c
 16046                           
 16047                           ;stkvar	_n @ sp[(-58)+32]
 16048  0101C4  0E97               	movlw	low _dbuf
 16049  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16050  0101C8  0E02               	movlw	high _dbuf
 16051  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16052  0101CC  0EE6               	movlw	-26
 16053  0101CE  50E3               	movf	plusw1,w,c
 16054  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16055  0101D2  0EE7               	movlw	-25
 16056  0101D4  50E3               	movf	plusw1,w,c
 16057  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16058  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16059  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16060  0101E4  ECBB  F0D1         	call	_strcpy	;wreg free
 16061                           
 16062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16063  0101E8  D016               	goto	l12030
 16064  0101EA                     l12028:
 16065                           
 16066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16067  0101EA  0EDF               	movlw	low STR_66
 16068  0101EC  6EE6               	movwf	postinc1,c
 16069  0101EE  0EFF               	movlw	high STR_66
 16070  0101F0  6EE6               	movwf	postinc1,c
 16071                           
 16072                           ;stkvar	_n @ sp[(-58)+32]
 16073  0101F2  0E97               	movlw	low _dbuf
 16074  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16075  0101F6  0E02               	movlw	high _dbuf
 16076  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16077  0101FA  0EE6               	movlw	-26
 16078  0101FC  50E3               	movf	plusw1,w,c
 16079  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16080  010200  0EE7               	movlw	-25
 16081  010202  50E3               	movf	plusw1,w,c
 16082  010204  220C               	addwfc	(btemp+11)^0,f,c
 16083  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16084  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16085  010212  ECBB  F0D1         	call	_strcpy	;wreg free
 16086  010216                     l12030:
 16087                           
 16088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16089                           ;stkvar	_w @ sp[(-56)+38]
 16090  010216  50E1               	movf	fsr1l,w,c
 16091  010218  0FEE               	addlw	-18
 16092  01021A  6ED9               	movwf	fsr2l,c
 16093  01021C  50E2               	movf	fsr1h,w,c
 16094  01021E  6EDA               	movwf	fsr2h,c
 16095  010220  0EFF               	movlw	255
 16096  010222  22DA               	addwfc	fsr2h,f,c
 16097  010224  0EFD               	movlw	253
 16098  010226  26DE               	addwf	postinc2,f,c
 16099  010228  0EFF               	movlw	255
 16100  01022A  22DD               	addwfc	postdec2,f,c
 16101  01022C                     l12032:
 16102                           
 16103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16104                           ;stkvar	_w @ sp[(-56)+38]
 16105  01022C  0EEE               	movlw	-18
 16106  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16107  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16108  01023A  0E97               	movlw	low _dbuf
 16109  01023C  6EE6               	movwf	postinc1,c
 16110  01023E  0E02               	movlw	high _dbuf
 16111  010240  6EE6               	movwf	postinc1,c
 16112                           
 16113                           ;stkvar	_fp @ sp[(-60)+-2]
 16114  010242  0EC2               	movlw	-62
 16115  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16116  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16117  010250  EC67  F0CD         	call	_pad	;wreg free
 16118  010254  EF1D  F089         	goto	l2194
 16119  010258                     l12036:
 16120                           
 16121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16122                           ;stkvar	_g @ sp[(-56)+16]
 16123  010258  0ED8               	movlw	-40
 16124  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16125  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16126  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16127  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16128  010272  ECD3  F0C4         	call	___fpclassifyf	;wreg free
 16129  010276  5001               	movf	btemp^0,w,c
 16130  010278  1002               	iorwf	(btemp+1)^0,w,c
 16131  01027A  A4D8               	btfss	status,2,c
 16132  01027C  D056               	goto	l12054
 16133  01027E  0EBF               	movlw	191
 16134  010280  6E0B               	movwf	(btemp+10)^0,c
 16135  010282  0EFF               	movlw	255
 16136  010284  6E0C               	movwf	(btemp+11)^0,c
 16137                           
 16138                           ;stkvar	_c @ sp[(-56)+-7]
 16139  010286  0EC1               	movlw	-63
 16140  010288  50E3               	movf	plusw1,w,c
 16141  01028A  6E09               	movwf	(btemp+8)^0,c
 16142  01028C  6A0A               	clrf	(btemp+9)^0,c
 16143  01028E  500B               	movf	(btemp+10)^0,w,c
 16144  010290  2609               	addwf	(btemp+8)^0,f,c
 16145  010292  500C               	movf	(btemp+11)^0,w,c
 16146  010294  220A               	addwfc	(btemp+9)^0,f,c
 16147  010296  500A               	movf	(btemp+9)^0,w,c
 16148  010298  E106               	bnz	u11180
 16149  01029A  0E1A               	movlw	26
 16150  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16151  01029E  B0D8               	btfsc	status,0,c
 16152  0102A0  D002               	goto	u11180
 16153  0102A2  0E01               	movlw	1
 16154  0102A4  D001               	goto	u11190
 16155  0102A6                     u11180:
 16156  0102A6  0E00               	movlw	0
 16157  0102A8                     u11190:
 16158  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16159  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16160                           
 16161                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16162  0102AC  0ECE               	movlw	-50
 16163  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16164  0102B4  0ECF               	movlw	-49
 16165  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16166                           
 16167                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16168  0102BC  0ECE               	movlw	-50
 16169  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16170  0102C4  0ECF               	movlw	-49
 16171  0102C6  50E3               	movf	plusw1,w,c
 16172  0102C8  1001               	iorwf	btemp^0,w,c
 16173  0102CA  B4D8               	btfsc	status,2,c
 16174  0102CC  D017               	goto	l12046
 16175                           
 16176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16177  0102CE  0EDB               	movlw	low STR_69
 16178  0102D0  6EE6               	movwf	postinc1,c
 16179  0102D2  0EFF               	movlw	high STR_69
 16180  0102D4  6EE6               	movwf	postinc1,c
 16181                           
 16182                           ;stkvar	_n @ sp[(-58)+32]
 16183  0102D6  0E97               	movlw	low _dbuf
 16184  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16185  0102DA  0E02               	movlw	high _dbuf
 16186  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16187  0102DE  0EE6               	movlw	-26
 16188  0102E0  50E3               	movf	plusw1,w,c
 16189  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16190  0102E4  0EE7               	movlw	-25
 16191  0102E6  50E3               	movf	plusw1,w,c
 16192  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16193  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16194  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16195  0102F6  ECBB  F0D1         	call	_strcpy	;wreg free
 16196                           
 16197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16198  0102FA  D78D               	goto	l12030
 16199  0102FC                     l12046:
 16200                           
 16201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16202  0102FC  0EE3               	movlw	low STR_70
 16203  0102FE  6EE6               	movwf	postinc1,c
 16204  010300  0EFF               	movlw	high STR_70
 16205  010302  6EE6               	movwf	postinc1,c
 16206                           
 16207                           ;stkvar	_n @ sp[(-58)+32]
 16208  010304  0E97               	movlw	low _dbuf
 16209  010306  6E0B               	movwf	(btemp+10)^0,c
 16210  010308  0E02               	movlw	high _dbuf
 16211  01030A  6E0C               	movwf	(btemp+11)^0,c
 16212  01030C  0EE6               	movlw	-26
 16213  01030E  50E3               	movf	plusw1,w,c
 16214  010310  260B               	addwf	(btemp+10)^0,f,c
 16215  010312  0EE7               	movlw	-25
 16216  010314  50E3               	movf	plusw1,w,c
 16217  010316  220C               	addwfc	(btemp+11)^0,f,c
 16218  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16219  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16220  010324  ECBB  F0D1         	call	_strcpy	;wreg free
 16221  010328  D776               	goto	l12030
 16222  01032A                     l12054:
 16223                           
 16224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16225  01032A  0E00               	movlw	0
 16226  01032C  6E09               	movwf	(btemp+8)^0,c
 16227  01032E  0E00               	movlw	0
 16228  010330  6E0A               	movwf	(btemp+9)^0,c
 16229  010332  0E80               	movlw	128
 16230  010334  6E0B               	movwf	(btemp+10)^0,c
 16231  010336  0E3F               	movlw	63
 16232  010338  6E0C               	movwf	(btemp+11)^0,c
 16233                           
 16234                           ;stkvar	_u @ sp[(-56)+12]
 16235  01033A  0ED4               	movlw	-44
 16236  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16237  010342  0ED5               	movlw	-43
 16238  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16239  01034A  0ED6               	movlw	-42
 16240  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16241  010352  0ED7               	movlw	-41
 16242  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16243                           
 16244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16245                           ;stkvar	_e @ sp[(-56)+34]
 16246  01035A  0EEA               	movlw	-22
 16247  01035C  6AE3               	clrf	plusw1,c
 16248  01035E  0EEB               	movlw	-21
 16249  010360  6AE3               	clrf	plusw1,c
 16250                           
 16251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16252  010362  0E00               	movlw	0
 16253  010364  6EE6               	movwf	postinc1,c
 16254  010366  0E00               	movlw	0
 16255  010368  6EE6               	movwf	postinc1,c
 16256  01036A  0E00               	movlw	0
 16257  01036C  6EE6               	movwf	postinc1,c
 16258  01036E  0E00               	movlw	0
 16259  010370  6EE6               	movwf	postinc1,c
 16260                           
 16261                           ;stkvar	_g @ sp[(-60)+16]
 16262  010372  0ED4               	movlw	-44
 16263  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16264  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16265  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16266  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16267  01038C  EC25  F0D2         	call	___fleq	;wreg free
 16268  010390  A001               	btfss	btemp& (0+255),0,c
 16269  010392  D039               	goto	l12066
 16270  010394  D0BC               	goto	u11230
 16271  010396                     l12062:
 16272                           
 16273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16274  010396  0E00               	movlw	0
 16275  010398  6EE6               	movwf	postinc1,c
 16276  01039A  0E00               	movlw	0
 16277  01039C  6EE6               	movwf	postinc1,c
 16278  01039E  0E20               	movlw	32
 16279  0103A0  6EE6               	movwf	postinc1,c
 16280  0103A2  0E41               	movlw	65
 16281  0103A4  6EE6               	movwf	postinc1,c
 16282                           
 16283                           ;stkvar	_u @ sp[(-60)+12]
 16284  0103A6  0ED0               	movlw	-48
 16285  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16286  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16287  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16288  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16289  0103C0  ECA7  F09E         	call	___flmul	;wreg free
 16290                           
 16291                           ;stkvar	_u @ sp[(-56)+12]
 16292  0103C4  0ED4               	movlw	-44
 16293  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16294  0103CC  0ED5               	movlw	-43
 16295  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16296  0103D4  0ED6               	movlw	-42
 16297  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16298  0103DC  0ED7               	movlw	-41
 16299  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16300                           
 16301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16302                           ;stkvar	_e @ sp[(-56)+34]
 16303  0103E4  0EEA               	movlw	-22
 16304  0103E6  50E3               	movf	plusw1,w,c
 16305  0103E8  0F01               	addlw	1
 16306  0103EA  6E01               	movwf	btemp^0,c
 16307  0103EC  0EEA               	movlw	-22
 16308  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16309  0103F4  6A01               	clrf	btemp^0,c
 16310  0103F6  0EEB               	movlw	-21
 16311  0103F8  50E3               	movf	plusw1,w,c
 16312  0103FA  2001               	addwfc	btemp^0,w,c
 16313  0103FC  6E01               	movwf	btemp^0,c
 16314  0103FE  0EEB               	movlw	-21
 16315  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16316  010406                     l12066:
 16317                           
 16318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16319  010406  0E00               	movlw	0
 16320  010408  6EE6               	movwf	postinc1,c
 16321  01040A  0E00               	movlw	0
 16322  01040C  6EE6               	movwf	postinc1,c
 16323  01040E  0E20               	movlw	32
 16324  010410  6EE6               	movwf	postinc1,c
 16325  010412  0E41               	movlw	65
 16326  010414  6EE6               	movwf	postinc1,c
 16327                           
 16328                           ;stkvar	_u @ sp[(-60)+12]
 16329  010416  0ED0               	movlw	-48
 16330  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16331  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16332  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16333  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16334  010430  ECA7  F09E         	call	___flmul	;wreg free
 16335  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16336  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16337  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16338  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16339                           
 16340                           ;stkvar	_g @ sp[(-60)+16]
 16341  01044C  0ED4               	movlw	-44
 16342  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16343  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16344  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16345  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16346  010466  ECDA  F0C7         	call	___flge	;wreg free
 16347  01046A  A001               	btfss	btemp& (0+255),0,c
 16348  01046C  D032               	goto	l12072
 16349  01046E  D793               	goto	l12062
 16350  010470                     l12068:
 16351                           
 16352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16353  010470  0E00               	movlw	0
 16354  010472  6EE6               	movwf	postinc1,c
 16355  010474  0E00               	movlw	0
 16356  010476  6EE6               	movwf	postinc1,c
 16357  010478  0E20               	movlw	32
 16358  01047A  6EE6               	movwf	postinc1,c
 16359  01047C  0E41               	movlw	65
 16360  01047E  6EE6               	movwf	postinc1,c
 16361                           
 16362                           ;stkvar	_u @ sp[(-60)+12]
 16363  010480  0ED0               	movlw	-48
 16364  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16366  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16367  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16368  01049A  EC9A  F0A6         	call	___fldiv	;wreg free
 16369                           
 16370                           ;stkvar	_u @ sp[(-56)+12]
 16371  01049E  0ED4               	movlw	-44
 16372  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16373  0104A6  0ED5               	movlw	-43
 16374  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16375  0104AE  0ED6               	movlw	-42
 16376  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16377  0104B6  0ED7               	movlw	-41
 16378  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16379                           
 16380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16381                           ;stkvar	_e @ sp[(-56)+34]
 16382  0104BE  50E1               	movf	fsr1l,w,c
 16383  0104C0  0FEA               	addlw	-22
 16384  0104C2  6ED9               	movwf	fsr2l,c
 16385  0104C4  50E2               	movf	fsr1h,w,c
 16386  0104C6  6EDA               	movwf	fsr2h,c
 16387  0104C8  0EFF               	movlw	255
 16388  0104CA  22DA               	addwfc	fsr2h,f,c
 16389  0104CC  06DE               	decf	postinc2,f,c
 16390  0104CE  0E00               	movlw	0
 16391  0104D0  5ADD               	subwfb	postdec2,f,c
 16392  0104D2                     l12072:
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16395                           ;stkvar	_u @ sp[(-56)+12]
 16396  0104D2  0ED4               	movlw	-44
 16397  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16401                           
 16402                           ;stkvar	_g @ sp[(-60)+16]
 16403  0104EC  0ED4               	movlw	-44
 16404  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16405  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16406  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16407  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16408  010506  ECDA  F0C7         	call	___flge	;wreg free
 16409  01050A  A001               	btfss	btemp& (0+255),0,c
 16410  01050C  D7B1               	goto	l12068
 16411  01050E                     u11230:
 16412                           
 16413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16414                           ;stkvar	_c @ sp[(-56)+-7]
 16415  01050E  0EC1               	movlw	-63
 16416  010510  50E3               	movf	plusw1,w,c
 16417  010512  6EE6               	movwf	postinc1,c
 16418  010514  0E00               	movlw	0
 16419  010516  6EE6               	movwf	postinc1,c
 16420  010518  EC89  F0D6         	call	_tolower	;wreg free
 16421                           
 16422                           ;stkvar	_mode @ sp[(-56)+54]
 16423  01051C  0EFE               	movlw	-2
 16424  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16425                           
 16426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16427                           ;stkvar	_mode @ sp[(-56)+54]
 16428                           ;stkvar	_nmode @ sp[(-56)+55]
 16429  010524  0EFE               	movlw	-2
 16430  010526  006F FF8C  F001    	movff	plusw1,btemp
 16431  01052C  0EFF               	movlw	-1
 16432  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16433                           
 16434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16435                           ;stkvar	_mode @ sp[(-56)+54]
 16436  010534  0EFE               	movlw	-2
 16437  010536  006F FF8C  F001    	movff	plusw1,btemp
 16438  01053C  0E67               	movlw	103
 16439  01053E  1801               	xorwf	btemp^0,w,c
 16440  010540  A4D8               	btfss	status,2,c
 16441  010542  D025               	goto	l12090
 16442                           
 16443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16444  010544  503C               	movf	_prec^0,w,c
 16445  010546  103D               	iorwf	(_prec+1)^0,w,c
 16446  010548  A4D8               	btfss	status,2,c
 16447  01054A  D004               	goto	l12084
 16448                           
 16449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16450  01054C  0E00               	movlw	0
 16451  01054E  6E3D               	movwf	(_prec+1)^0,c
 16452  010550  0E01               	movlw	1
 16453  010552  6E3C               	movwf	_prec^0,c
 16454  010554                     l12084:
 16455                           
 16456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16457  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16458  010556  D005               	goto	u11260
 16459  010558  503D               	movf	(_prec+1)^0,w,c
 16460  01055A  E110               	bnz	l12088
 16461  01055C  043C               	decf	_prec^0,w,c
 16462  01055E  B0D8               	btfsc	status,0,c
 16463  010560  D00D               	goto	l12088
 16464  010562                     u11260:
 16465  010562  0E06               	movlw	6
 16466  010564  6E0B               	movwf	(btemp+10)^0,c
 16467  010566  0E00               	movlw	0
 16468  010568  6E0C               	movwf	(btemp+11)^0,c
 16469                           
 16470                           ;stkvar	_p @ sp[(-56)+40]
 16471  01056A  0EF0               	movlw	-16
 16472  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16473  010572  0EF1               	movlw	-15
 16474  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16475  01057A  D00C               	goto	l12096
 16476  01057C                     l12088:
 16477                           
 16478                           ;stkvar	_p @ sp[(-56)+40]
 16479  01057C  0EF0               	movlw	-16
 16480  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16481  010584  0EF1               	movlw	-15
 16482  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16483  01058C  D003               	goto	l12096
 16484  01058E                     l12090:
 16485                           
 16486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16487  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16488  010590  D7F5               	goto	l12088
 16489  010592  D7E7               	goto	u11260
 16490  010594                     l12096:
 16491                           
 16492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16493                           ;stkvar	_mode @ sp[(-56)+54]
 16494  010594  0EFE               	movlw	-2
 16495  010596  006F FF8C  F001    	movff	plusw1,btemp
 16496  01059C  0E67               	movlw	103
 16497  01059E  1801               	xorwf	btemp^0,w,c
 16498  0105A0  A4D8               	btfss	status,2,c
 16499  0105A2  D02F               	goto	l12106
 16500                           
 16501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16502                           ;stkvar	_e @ sp[(-56)+34]
 16503  0105A4  0EEB               	movlw	-21
 16504  0105A6  AEE3               	btfss	plusw1,7,c
 16505  0105A8  D00E               	goto	u11290
 16506  0105AA  0EEA               	movlw	-22
 16507  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16508  0105B2  0EFC               	movlw	252
 16509  0105B4  5E01               	subwf	btemp^0,f,c
 16510  0105B6  0EEB               	movlw	-21
 16511  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16512  0105BE  0EFF               	movlw	255
 16513  0105C0  5A01               	subwfb	btemp^0,f,c
 16514  0105C2  A0D8               	btfss	status,0,c
 16515  0105C4  D018               	goto	l12104
 16516  0105C6                     u11290:
 16517                           
 16518                           ;stkvar	_e @ sp[(-56)+34]
 16519                           ;stkvar	_p @ sp[(-56)+40]
 16520  0105C6  0EF0               	movlw	-16
 16521  0105C8  50E3               	movf	plusw1,w,c
 16522  0105CA  0FFF               	addlw	255
 16523  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16524  0105CE  0EF1               	movlw	-15
 16525  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16526  0105D6  0EFF               	movlw	255
 16527  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16528  0105DA  0EEA               	movlw	-22
 16529  0105DC  50E3               	movf	plusw1,w,c
 16530  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16531  0105E0  500C               	movf	(btemp+11)^0,w,c
 16532  0105E2  0A80               	xorlw	128
 16533  0105E4  6E01               	movwf	btemp^0,c
 16534  0105E6  0EEB               	movlw	-21
 16535  0105E8  50E3               	movf	plusw1,w,c
 16536  0105EA  0A80               	xorlw	128
 16537  0105EC  5801               	subwfb	btemp^0,w,c
 16538  0105EE  A0D8               	btfss	status,0,c
 16539  0105F0  D002               	goto	l12104
 16540                           
 16541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16542  0105F2  0E66               	movlw	102
 16543  0105F4  D001               	goto	L17
 16544  0105F6                     l12104:
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16547  0105F6  0E65               	movlw	101
 16548  0105F8                     L17:
 16549  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16550                           
 16551                           ;stkvar	_nmode @ sp[(-56)+55]
 16552  0105FA  0EFF               	movlw	-1
 16553  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16554  010602                     l12106:
 16555                           
 16556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16557                           ;stkvar	_p @ sp[(-56)+40]
 16558                           ;stkvar	_m @ sp[(-56)+48]
 16559  010602  0EF0               	movlw	-16
 16560  010604  006F FF8C  F001    	movff	plusw1,btemp
 16561  01060A  0EF8               	movlw	-8
 16562  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16563  010612  0EF1               	movlw	-15
 16564  010614  006F FF8C  F001    	movff	plusw1,btemp
 16565  01061A  0EF9               	movlw	-7
 16566  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16567                           
 16568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16569                           ;stkvar	_mode @ sp[(-56)+54]
 16570  010622  0EFE               	movlw	-2
 16571  010624  006F FF8C  F001    	movff	plusw1,btemp
 16572  01062A  0E67               	movlw	103
 16573  01062C  1801               	xorwf	btemp^0,w,c
 16574  01062E  A4D8               	btfss	status,2,c
 16575  010630  D00B               	goto	u11330
 16576                           
 16577                           ;stkvar	_nmode @ sp[(-56)+55]
 16578  010632  0EFF               	movlw	-1
 16579  010634  006F FF8C  F001    	movff	plusw1,btemp
 16580  01063A  0E66               	movlw	102
 16581  01063C  1801               	xorwf	btemp^0,w,c
 16582  01063E  A4D8               	btfss	status,2,c
 16583  010640  D014               	goto	l2223
 16584                           
 16585                           ;stkvar	_e @ sp[(-56)+34]
 16586  010642  0EEB               	movlw	-21
 16587  010644  AEE3               	btfss	plusw1,7,c
 16588  010646  D011               	goto	l2223
 16589  010648                     u11330:
 16590                           
 16591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16592                           ;stkvar	_m @ sp[(-56)+48]
 16593  010648  0EF8               	movlw	-8
 16594  01064A  50E3               	movf	plusw1,w,c
 16595  01064C  0F01               	addlw	1
 16596  01064E  6E01               	movwf	btemp^0,c
 16597  010650  0EF8               	movlw	-8
 16598  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16599  010658  6A01               	clrf	btemp^0,c
 16600  01065A  0EF9               	movlw	-7
 16601  01065C  50E3               	movf	plusw1,w,c
 16602  01065E  2001               	addwfc	btemp^0,w,c
 16603  010660  6E01               	movwf	btemp^0,c
 16604  010662  0EF9               	movlw	-7
 16605  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16606  01066A                     l2223:
 16607                           
 16608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16609                           ;stkvar	_nmode @ sp[(-56)+55]
 16610  01066A  0EFF               	movlw	-1
 16611  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16612  010672  0E66               	movlw	102
 16613  010674  1801               	xorwf	btemp^0,w,c
 16614  010676  A4D8               	btfss	status,2,c
 16615  010678  D03B               	goto	l12126
 16616                           
 16617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16618                           ;stkvar	_e @ sp[(-56)+34]
 16619  01067A  0EEB               	movlw	-21
 16620  01067C  AEE3               	btfss	plusw1,7,c
 16621  01067E  D01C               	goto	l12122
 16622                           
 16623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16624  010680  0E00               	movlw	0
 16625  010682  6E09               	movwf	(btemp+8)^0,c
 16626  010684  0E00               	movlw	0
 16627  010686  6E0A               	movwf	(btemp+9)^0,c
 16628  010688  0E80               	movlw	128
 16629  01068A  6E0B               	movwf	(btemp+10)^0,c
 16630  01068C  0E3F               	movlw	63
 16631  01068E  6E0C               	movwf	(btemp+11)^0,c
 16632                           
 16633                           ;stkvar	_u @ sp[(-56)+12]
 16634  010690  0ED4               	movlw	-44
 16635  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16636  010698  0ED5               	movlw	-43
 16637  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16638  0106A0  0ED6               	movlw	-42
 16639  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16640  0106A8  0ED7               	movlw	-41
 16641  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16642                           
 16643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16644                           ;stkvar	_e @ sp[(-56)+34]
 16645  0106B0  0EEA               	movlw	-22
 16646  0106B2  6AE3               	clrf	plusw1,c
 16647  0106B4  0EEB               	movlw	-21
 16648  0106B6  6AE3               	clrf	plusw1,c
 16649  0106B8                     l12122:
 16650                           
 16651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16652                           ;stkvar	_mode @ sp[(-56)+54]
 16653  0106B8  0EFE               	movlw	-2
 16654  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16655  0106C0  0E67               	movlw	103
 16656  0106C2  1801               	xorwf	btemp^0,w,c
 16657  0106C4  B4D8               	btfsc	status,2,c
 16658  0106C6  D014               	goto	l12126
 16659                           
 16660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16661                           ;stkvar	_e @ sp[(-56)+34]
 16662                           ;stkvar	_m @ sp[(-56)+48]
 16663  0106C8  0EF8               	movlw	-8
 16664  0106CA  50E3               	movf	plusw1,w,c
 16665  0106CC  6E01               	movwf	btemp^0,c
 16666  0106CE  0EEA               	movlw	-22
 16667  0106D0  50E3               	movf	plusw1,w,c
 16668  0106D2  2601               	addwf	btemp^0,f,c
 16669  0106D4  0EF8               	movlw	-8
 16670  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16671  0106DC  0EF9               	movlw	-7
 16672  0106DE  50E3               	movf	plusw1,w,c
 16673  0106E0  6E01               	movwf	btemp^0,c
 16674  0106E2  0EEB               	movlw	-21
 16675  0106E4  50E3               	movf	plusw1,w,c
 16676  0106E6  2201               	addwfc	btemp^0,f,c
 16677  0106E8  0EF9               	movlw	-7
 16678  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16679  0106F0                     l12126:
 16680                           
 16681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16682                           ;stkvar	_i @ sp[(-56)+36]
 16683  0106F0  0EEC               	movlw	-20
 16684  0106F2  6AE3               	clrf	plusw1,c
 16685  0106F4  0EED               	movlw	-19
 16686  0106F6  6AE3               	clrf	plusw1,c
 16687                           
 16688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16689                           ;stkvar	_g @ sp[(-56)+16]
 16690  0106F8  0ED8               	movlw	-40
 16691  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16692  010700  0ED9               	movlw	-39
 16693  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16694  010708  0EDA               	movlw	-38
 16695  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16696  010710  0EDB               	movlw	-37
 16697  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16698                           
 16699                           ;stkvar	_h @ sp[(-56)+24]
 16700  010718  0EE0               	movlw	-32
 16701  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16702  010720  0EE1               	movlw	-31
 16703  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16704  010728  0EE2               	movlw	-30
 16705  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16706  010730  0EE3               	movlw	-29
 16707  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16708                           
 16709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16710                           ;stkvar	_u @ sp[(-56)+12]
 16711  010738  0ED4               	movlw	-44
 16712  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16713  010740  0ED5               	movlw	-43
 16714  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16715  010748  0ED6               	movlw	-42
 16716  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16717  010750  0ED7               	movlw	-41
 16718  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16719                           
 16720                           ;stkvar	_ou @ sp[(-56)+28]
 16721  010758  0EE4               	movlw	-28
 16722  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16723  010760  0EE5               	movlw	-27
 16724  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16725  010768  0EE6               	movlw	-26
 16726  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16727  010770  0EE7               	movlw	-25
 16728  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16731  010778  D0D6               	goto	l12142
 16732  01077A                     l12132:
 16733                           
 16734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16735                           ;stkvar	_u @ sp[(-56)+12]
 16736  01077A  0ED4               	movlw	-44
 16737  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16738  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16739  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16740  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16741                           
 16742                           ;stkvar	_h @ sp[(-60)+24]
 16743  010794  0EDC               	movlw	-36
 16744  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16745  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16746  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16747  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16748  0107AE  EC9A  F0A6         	call	___fldiv	;wreg free
 16749  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16750  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16751  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16752  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16753  0107CA  EC24  F0B2         	call	_floorf	;wreg free
 16754                           
 16755                           ;stkvar	_l @ sp[(-56)+20]
 16756  0107CE  0EDC               	movlw	-36
 16757  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16758  0107D6  0EDD               	movlw	-35
 16759  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16760  0107DE  0EDE               	movlw	-34
 16761  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16762  0107E6  0EDF               	movlw	-33
 16763  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16764                           
 16765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16766                           ;stkvar	_l @ sp[(-56)+20]
 16767  0107EE  0EDC               	movlw	-36
 16768  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16769  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16770  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16771  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16772  010808  EC21  F0C7         	call	___fltol	;wreg free
 16773  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16774  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16775                           
 16776                           ;stkvar	_d @ sp[(-56)+44]
 16777  010818  0EF4               	movlw	-12
 16778  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16779  010820  0EF5               	movlw	-11
 16780  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16781                           
 16782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16783                           ;stkvar	_u @ sp[(-56)+12]
 16784  010828  0ED4               	movlw	-44
 16785  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16786  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16787  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16788  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16789                           
 16790                           ;stkvar	_l @ sp[(-60)+20]
 16791  010842  0ED8               	movlw	-40
 16792  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16793  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16795  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16796  01085C  ECA7  F09E         	call	___flmul	;wreg free
 16797  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16798  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16799  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16800  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16801                           
 16802                           ;stkvar	_h @ sp[(-60)+24]
 16803  010878  0EDC               	movlw	-36
 16804  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16805  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16806  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16807  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16808  010892  ECDB  F0DA         	call	___flsub	;wreg free
 16809                           
 16810                           ;stkvar	_h @ sp[(-56)+24]
 16811  010896  0EE0               	movlw	-32
 16812  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16813  01089E  0EE1               	movlw	-31
 16814  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16815  0108A6  0EE2               	movlw	-30
 16816  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16817  0108AE  0EE3               	movlw	-29
 16818  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16819                           
 16820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16821  0108B6  0E00               	movlw	0
 16822  0108B8  6EE6               	movwf	postinc1,c
 16823  0108BA  0E00               	movlw	0
 16824  0108BC  6EE6               	movwf	postinc1,c
 16825  0108BE  0E20               	movlw	32
 16826  0108C0  6EE6               	movwf	postinc1,c
 16827  0108C2  0E41               	movlw	65
 16828  0108C4  6EE6               	movwf	postinc1,c
 16829                           
 16830                           ;stkvar	_u @ sp[(-60)+12]
 16831  0108C6  0ED0               	movlw	-48
 16832  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16833  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16834  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16835  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16836  0108E0  EC9A  F0A6         	call	___fldiv	;wreg free
 16837                           
 16838                           ;stkvar	_u @ sp[(-56)+12]
 16839  0108E4  0ED4               	movlw	-44
 16840  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16841  0108EC  0ED5               	movlw	-43
 16842  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16843  0108F4  0ED6               	movlw	-42
 16844  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16845  0108FC  0ED7               	movlw	-41
 16846  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16847                           
 16848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16849                           ;stkvar	_i @ sp[(-56)+36]
 16850  010904  0EEC               	movlw	-20
 16851  010906  50E3               	movf	plusw1,w,c
 16852  010908  0F01               	addlw	1
 16853  01090A  6E01               	movwf	btemp^0,c
 16854  01090C  0EEC               	movlw	-20
 16855  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16856  010914  6A01               	clrf	btemp^0,c
 16857  010916  0EED               	movlw	-19
 16858  010918  50E3               	movf	plusw1,w,c
 16859  01091A  2001               	addwfc	btemp^0,w,c
 16860  01091C  6E01               	movwf	btemp^0,c
 16861  01091E  0EED               	movlw	-19
 16862  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16863  010926                     l12142:
 16864                           
 16865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16866                           ;stkvar	_m @ sp[(-56)+48]
 16867                           ;stkvar	_i @ sp[(-56)+36]
 16868  010926  50E1               	movf	fsr1l,w,c
 16869  010928  0FEC               	addlw	-20
 16870  01092A  6ED9               	movwf	fsr2l,c
 16871  01092C  50E2               	movf	fsr1h,w,c
 16872  01092E  6EDA               	movwf	fsr2h,c
 16873  010930  0EFF               	movlw	255
 16874  010932  22DA               	addwfc	fsr2h,f,c
 16875  010934  0EF8               	movlw	-8
 16876  010936  50E3               	movf	plusw1,w,c
 16877  010938  5CDE               	subwf	postinc2,w,c
 16878  01093A  50DE               	movf	postinc2,w,c
 16879  01093C  0A80               	xorlw	128
 16880  01093E  6E01               	movwf	btemp^0,c
 16881  010940  0EF9               	movlw	-7
 16882  010942  50E3               	movf	plusw1,w,c
 16883  010944  0A80               	xorlw	128
 16884  010946  5801               	subwfb	btemp^0,w,c
 16885  010948  A0D8               	btfss	status,0,c
 16886  01094A  D717               	goto	l12132
 16887                           
 16888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16889  01094C  0E00               	movlw	0
 16890  01094E  6EE6               	movwf	postinc1,c
 16891  010950  0E00               	movlw	0
 16892  010952  6EE6               	movwf	postinc1,c
 16893  010954  0EA0               	movlw	160
 16894  010956  6EE6               	movwf	postinc1,c
 16895  010958  0E40               	movlw	64
 16896  01095A  6EE6               	movwf	postinc1,c
 16897                           
 16898                           ;stkvar	_u @ sp[(-60)+12]
 16899  01095C  0ED0               	movlw	-48
 16900  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16901  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16902  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16903  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16904  010976  ECA7  F09E         	call	___flmul	;wreg free
 16905                           
 16906                           ;stkvar	_l @ sp[(-56)+20]
 16907  01097A  0EDC               	movlw	-36
 16908  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16909  010982  0EDD               	movlw	-35
 16910  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16911  01098A  0EDE               	movlw	-34
 16912  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16913  010992  0EDF               	movlw	-33
 16914  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16915                           
 16916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16917                           ;stkvar	_l @ sp[(-56)+20]
 16918  01099A  0EDC               	movlw	-36
 16919  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16920  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16921  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16922  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16923                           
 16924                           ;stkvar	_h @ sp[(-60)+24]
 16925  0109B4  0EDC               	movlw	-36
 16926  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16927  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16928  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16929  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16930  0109CE  ECDA  F0C7         	call	___flge	;wreg free
 16931  0109D2  A001               	btfss	btemp& (0+255),0,c
 16932  0109D4  D021               	goto	u11400
 16933                           
 16934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16935                           ;stkvar	_l @ sp[(-56)+20]
 16936                           
 16937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16938                           
 16939                           ;stkvar	_l @ sp[(-56)+20]
 16940                           
 16941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16942  0109D6  0EDC               	movlw	-36
 16943  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16944  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16945  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16946  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16947                           
 16948                           ;stkvar	_h @ sp[(-60)+24]
 16949  0109F0  0EDC               	movlw	-36
 16950  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16951  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16952  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16953  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16954  010A0A  EC25  F0D2         	call	___fleq	;wreg free
 16955  010A0E  A001               	btfss	btemp& (0+255),0,c
 16956  010A10  D01B               	goto	l12156
 16957                           
 16958                           ;stkvar	_d @ sp[(-56)+44]
 16959  010A12  0EF4               	movlw	-12
 16960  010A14  B0E3               	btfsc	plusw1,0,c
 16961  010A16  D018               	goto	l12156
 16962  010A18                     u11400:
 16963                           
 16964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16965  010A18  0E00               	movlw	0
 16966  010A1A  6E09               	movwf	(btemp+8)^0,c
 16967  010A1C  0E00               	movlw	0
 16968  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16969  010A20  0E00               	movlw	0
 16970  010A22  6E0B               	movwf	(btemp+10)^0,c
 16971  010A24  0E00               	movlw	0
 16972  010A26  6E0C               	movwf	(btemp+11)^0,c
 16973                           
 16974                           ;stkvar	_l @ sp[(-56)+20]
 16975  010A28  0EDC               	movlw	-36
 16976  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16977  010A30  0EDD               	movlw	-35
 16978  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16979  010A38  0EDE               	movlw	-34
 16980  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16981  010A40  0EDF               	movlw	-33
 16982  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16983  010A48                     l12156:
 16984                           
 16985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16986                           ;stkvar	_l @ sp[(-56)+20]
 16987  010A48  0EDC               	movlw	-36
 16988  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16989  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16990  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16991  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16992                           
 16993                           ;stkvar	_g @ sp[(-60)+16]
 16994  010A62  0ED4               	movlw	-44
 16995  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16996  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16997  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16998  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16999  010A7C  ECBC  F0A2         	call	___fladd	;wreg free
 17000                           
 17001                           ;stkvar	_h @ sp[(-56)+24]
 17002  010A80  0EE0               	movlw	-32
 17003  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17004  010A88  0EE1               	movlw	-31
 17005  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17006  010A90  0EE2               	movlw	-30
 17007  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17008  010A98  0EE3               	movlw	-29
 17009  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17012                           ;stkvar	_ou @ sp[(-56)+28]
 17013  010AA0  0EE4               	movlw	-28
 17014  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17015  010AA8  0EE5               	movlw	-27
 17016  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17017  010AB0  0EE6               	movlw	-26
 17018  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17019  010AB8  0EE7               	movlw	-25
 17020  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17021                           
 17022                           ;stkvar	_u @ sp[(-56)+12]
 17023  010AC0  0ED4               	movlw	-44
 17024  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17025  010AC8  0ED5               	movlw	-43
 17026  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17027  010AD0  0ED6               	movlw	-42
 17028  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17029  010AD8  0ED7               	movlw	-41
 17030  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17031                           
 17032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17033                           ;stkvar	_nmode @ sp[(-56)+55]
 17034  010AE0  0EFF               	movlw	-1
 17035  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17036  010AE8  0E65               	movlw	101
 17037  010AEA  1801               	xorwf	btemp^0,w,c
 17038  010AEC  B4D8               	btfsc	status,2,c
 17039  010AEE  D011               	goto	l12164
 17040                           
 17041                           ;stkvar	_e @ sp[(-56)+34]
 17042                           ;stkvar	_ne @ sp[(-56)+46]
 17043  010AF0  0EEA               	movlw	-22
 17044  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17045  010AF8  0EF6               	movlw	-10
 17046  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17047  010B00  0EEB               	movlw	-21
 17048  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17049  010B08  0EF7               	movlw	-9
 17050  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17051  010B10  D004               	goto	l2238
 17052  010B12                     l12164:
 17053                           
 17054                           ;stkvar	_ne @ sp[(-56)+46]
 17055  010B12  0EF6               	movlw	-10
 17056  010B14  6AE3               	clrf	plusw1,c
 17057  010B16  0EF7               	movlw	-9
 17058  010B18  6AE3               	clrf	plusw1,c
 17059  010B1A                     l2238:
 17060                           
 17061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17062                           ;stkvar	_pp @ sp[(-56)+50]
 17063  010B1A  0EFA               	movlw	-6
 17064  010B1C  6AE3               	clrf	plusw1,c
 17065  010B1E  0EFB               	movlw	-5
 17066  010B20  6AE3               	clrf	plusw1,c
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17069                           ;stkvar	_t @ sp[(-56)+52]
 17070  010B22  0EFC               	movlw	-4
 17071  010B24  6AE3               	clrf	plusw1,c
 17072  010B26  0EFD               	movlw	-3
 17073  010B28  6AE3               	clrf	plusw1,c
 17074                           
 17075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17076                           ;stkvar	_i @ sp[(-56)+36]
 17077  010B2A  0EEC               	movlw	-20
 17078  010B2C  6AE3               	clrf	plusw1,c
 17079  010B2E  0EED               	movlw	-19
 17080  010B30  6AE3               	clrf	plusw1,c
 17081                           
 17082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17083  010B32  D1B7               	goto	l12216
 17084  010B34                     l12166:
 17085                           
 17086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17087                           ;stkvar	_u @ sp[(-56)+12]
 17088  010B34  0ED4               	movlw	-44
 17089  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17090  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17091  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17092  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17093                           
 17094                           ;stkvar	_h @ sp[(-60)+24]
 17095  010B4E  0EDC               	movlw	-36
 17096  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17097  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17098  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17099  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17100  010B68  EC9A  F0A6         	call	___fldiv	;wreg free
 17101  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17102  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17103  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17104  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17105  010B84  EC24  F0B2         	call	_floorf	;wreg free
 17106                           
 17107                           ;stkvar	_l @ sp[(-56)+20]
 17108  010B88  0EDC               	movlw	-36
 17109  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17110  010B90  0EDD               	movlw	-35
 17111  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17112  010B98  0EDE               	movlw	-34
 17113  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17114  010BA0  0EDF               	movlw	-33
 17115  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17116                           
 17117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17118                           ;stkvar	_l @ sp[(-56)+20]
 17119  010BA8  0EDC               	movlw	-36
 17120  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17121  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17122  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17123  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17124  010BC2  EC21  F0C7         	call	___fltol	;wreg free
 17125  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17126  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17127                           
 17128                           ;stkvar	_d @ sp[(-56)+44]
 17129  010BD2  0EF4               	movlw	-12
 17130  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17131  010BDA  0EF5               	movlw	-11
 17132  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17133                           
 17134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17135  010BE2  B83E               	btfsc	_flags^0,4,c
 17136  010BE4  D026               	goto	l12180
 17137                           
 17138                           ;stkvar	_d @ sp[(-56)+44]
 17139  010BE6  0EF4               	movlw	-12
 17140  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17141  010BEE  0EF5               	movlw	-11
 17142  010BF0  50E3               	movf	plusw1,w,c
 17143  010BF2  1001               	iorwf	btemp^0,w,c
 17144  010BF4  A4D8               	btfss	status,2,c
 17145  010BF6  D01D               	goto	l12180
 17146                           
 17147                           ;stkvar	_mode @ sp[(-56)+54]
 17148  010BF8  0EFE               	movlw	-2
 17149  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17150  010C00  0E67               	movlw	103
 17151  010C02  1801               	xorwf	btemp^0,w,c
 17152  010C04  A4D8               	btfss	status,2,c
 17153  010C06  D015               	goto	l12180
 17154                           
 17155                           ;stkvar	_ne @ sp[(-56)+46]
 17156  010C08  0EF7               	movlw	-9
 17157  010C0A  AEE3               	btfss	plusw1,7,c
 17158  010C0C  D012               	goto	l12180
 17159                           
 17160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17161                           ;stkvar	_t @ sp[(-56)+52]
 17162  010C0E  0EFC               	movlw	-4
 17163  010C10  50E3               	movf	plusw1,w,c
 17164  010C12  0F01               	addlw	1
 17165  010C14  6E01               	movwf	btemp^0,c
 17166  010C16  0EFC               	movlw	-4
 17167  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17168  010C1E  6A01               	clrf	btemp^0,c
 17169  010C20  0EFD               	movlw	-3
 17170  010C22  50E3               	movf	plusw1,w,c
 17171  010C24  2001               	addwfc	btemp^0,w,c
 17172  010C26  6E01               	movwf	btemp^0,c
 17173  010C28  0EFD               	movlw	-3
 17174  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17175                           
 17176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17177  010C30  D0AF               	goto	l12208
 17178  010C32                     l12180:
 17179                           
 17180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17181                           ;stkvar	_pp @ sp[(-56)+50]
 17182  010C32  0EFA               	movlw	-6
 17183  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17184  010C3A  0EFB               	movlw	-5
 17185  010C3C  50E3               	movf	plusw1,w,c
 17186  010C3E  1001               	iorwf	btemp^0,w,c
 17187  010C40  A4D8               	btfss	status,2,c
 17188  010C42  D070               	goto	l12200
 17189                           
 17190                           ;stkvar	_ne @ sp[(-56)+46]
 17191  010C44  0EF7               	movlw	-9
 17192  010C46  AEE3               	btfss	plusw1,7,c
 17193  010C48  D06D               	goto	l12200
 17194                           
 17195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17196                           ;stkvar	_n @ sp[(-56)+32]
 17197  010C4A  0EE8               	movlw	-24
 17198  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17199  010C52  0EE9               	movlw	-23
 17200  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17201  010C5A  0E97               	movlw	low _dbuf
 17202  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17203  010C5E  6ED9               	movwf	fsr2l,c
 17204  010C60  0E02               	movlw	high _dbuf
 17205  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17206  010C64  6EDA               	movwf	fsr2h,c
 17207  010C66  0E2E               	movlw	46
 17208  010C68  6EDF               	movwf	indf2,c
 17209                           
 17210                           ;stkvar	_n @ sp[(-56)+32]
 17211  010C6A  0EE8               	movlw	-24
 17212  010C6C  50E3               	movf	plusw1,w,c
 17213  010C6E  0F01               	addlw	1
 17214  010C70  6E01               	movwf	btemp^0,c
 17215  010C72  0EE8               	movlw	-24
 17216  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17217  010C7A  6A01               	clrf	btemp^0,c
 17218  010C7C  0EE9               	movlw	-23
 17219  010C7E  50E3               	movf	plusw1,w,c
 17220  010C80  2001               	addwfc	btemp^0,w,c
 17221  010C82  6E01               	movwf	btemp^0,c
 17222  010C84  0EE9               	movlw	-23
 17223  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17224                           
 17225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17226                           ;stkvar	_w @ sp[(-56)+38]
 17227  010C8C  50E1               	movf	fsr1l,w,c
 17228  010C8E  0FEE               	addlw	-18
 17229  010C90  6ED9               	movwf	fsr2l,c
 17230  010C92  50E2               	movf	fsr1h,w,c
 17231  010C94  6EDA               	movwf	fsr2h,c
 17232  010C96  0EFF               	movlw	255
 17233  010C98  22DA               	addwfc	fsr2h,f,c
 17234  010C9A  06DE               	decf	postinc2,f,c
 17235  010C9C  0E00               	movlw	0
 17236  010C9E  5ADD               	subwfb	postdec2,f,c
 17237                           
 17238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17239  010CA0  0E01               	movlw	1
 17240  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17241  010CA4  0E00               	movlw	0
 17242  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17243                           
 17244                           ;stkvar	_pp @ sp[(-56)+50]
 17245  010CA8  0EFA               	movlw	-6
 17246  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17247  010CB0  0EFB               	movlw	-5
 17248  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17249  010CB8  D035               	goto	l12200
 17250  010CBA                     l12192:
 17251                           
 17252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17253                           ;stkvar	_n @ sp[(-56)+32]
 17254  010CBA  0EE8               	movlw	-24
 17255  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17256  010CC2  0EE9               	movlw	-23
 17257  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17258  010CCA  0E97               	movlw	low _dbuf
 17259  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17260  010CCE  6ED9               	movwf	fsr2l,c
 17261  010CD0  0E02               	movlw	high _dbuf
 17262  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17263  010CD4  6EDA               	movwf	fsr2h,c
 17264  010CD6  0E30               	movlw	48
 17265  010CD8  6EDF               	movwf	indf2,c
 17266                           
 17267                           ;stkvar	_n @ sp[(-56)+32]
 17268  010CDA  0EE8               	movlw	-24
 17269  010CDC  50E3               	movf	plusw1,w,c
 17270  010CDE  0F01               	addlw	1
 17271  010CE0  6E01               	movwf	btemp^0,c
 17272  010CE2  0EE8               	movlw	-24
 17273  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17274  010CEA  6A01               	clrf	btemp^0,c
 17275  010CEC  0EE9               	movlw	-23
 17276  010CEE  50E3               	movf	plusw1,w,c
 17277  010CF0  2001               	addwfc	btemp^0,w,c
 17278  010CF2  6E01               	movwf	btemp^0,c
 17279  010CF4  0EE9               	movlw	-23
 17280  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17281                           
 17282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17283                           ;stkvar	_w @ sp[(-56)+38]
 17284  010CFC  50E1               	movf	fsr1l,w,c
 17285  010CFE  0FEE               	addlw	-18
 17286  010D00  6ED9               	movwf	fsr2l,c
 17287  010D02  50E2               	movf	fsr1h,w,c
 17288  010D04  6EDA               	movwf	fsr2h,c
 17289  010D06  0EFF               	movlw	255
 17290  010D08  22DA               	addwfc	fsr2h,f,c
 17291  010D0A  06DE               	decf	postinc2,f,c
 17292  010D0C  0E00               	movlw	0
 17293  010D0E  5ADD               	subwfb	postdec2,f,c
 17294                           
 17295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17296                           ;stkvar	_t @ sp[(-56)+52]
 17297  010D10  50E1               	movf	fsr1l,w,c
 17298  010D12  0FFC               	addlw	-4
 17299  010D14  6ED9               	movwf	fsr2l,c
 17300  010D16  50E2               	movf	fsr1h,w,c
 17301  010D18  6EDA               	movwf	fsr2h,c
 17302  010D1A  0EFF               	movlw	255
 17303  010D1C  22DA               	addwfc	fsr2h,f,c
 17304  010D1E  06DE               	decf	postinc2,f,c
 17305  010D20  0E00               	movlw	0
 17306  010D22  5ADD               	subwfb	postdec2,f,c
 17307  010D24                     l12200:
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17310                           ;stkvar	_t @ sp[(-56)+52]
 17311  010D24  0EFC               	movlw	-4
 17312  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17313  010D2C  0EFD               	movlw	-3
 17314  010D2E  50E3               	movf	plusw1,w,c
 17315  010D30  1001               	iorwf	btemp^0,w,c
 17316  010D32  A4D8               	btfss	status,2,c
 17317  010D34  D7C2               	goto	l12192
 17318                           
 17319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17320                           ;stkvar	_n @ sp[(-56)+32]
 17321  010D36  0EE8               	movlw	-24
 17322  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17323  010D3E  0EE9               	movlw	-23
 17324  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17325  010D46  0E97               	movlw	low _dbuf
 17326  010D48  240B               	addwf	(btemp+10)^0,w,c
 17327  010D4A  6ED9               	movwf	fsr2l,c
 17328  010D4C  0E02               	movlw	high _dbuf
 17329  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17330  010D50  6EDA               	movwf	fsr2h,c
 17331                           
 17332                           ;stkvar	_d @ sp[(-56)+44]
 17333  010D52  0EF4               	movlw	-12
 17334  010D54  50E3               	movf	plusw1,w,c
 17335  010D56  0F30               	addlw	48
 17336  010D58  6EDF               	movwf	indf2,c
 17337                           
 17338                           ;stkvar	_n @ sp[(-56)+32]
 17339  010D5A  0EE8               	movlw	-24
 17340  010D5C  50E3               	movf	plusw1,w,c
 17341  010D5E  0F01               	addlw	1
 17342  010D60  6E01               	movwf	btemp^0,c
 17343  010D62  0EE8               	movlw	-24
 17344  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17345  010D6A  6A01               	clrf	btemp^0,c
 17346  010D6C  0EE9               	movlw	-23
 17347  010D6E  50E3               	movf	plusw1,w,c
 17348  010D70  2001               	addwfc	btemp^0,w,c
 17349  010D72  6E01               	movwf	btemp^0,c
 17350  010D74  0EE9               	movlw	-23
 17351  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17352                           
 17353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17354                           ;stkvar	_w @ sp[(-56)+38]
 17355  010D7C  50E1               	movf	fsr1l,w,c
 17356  010D7E  0FEE               	addlw	-18
 17357  010D80  6ED9               	movwf	fsr2l,c
 17358  010D82  50E2               	movf	fsr1h,w,c
 17359  010D84  6EDA               	movwf	fsr2h,c
 17360  010D86  0EFF               	movlw	255
 17361  010D88  22DA               	addwfc	fsr2h,f,c
 17362  010D8A  06DE               	decf	postinc2,f,c
 17363  010D8C  0E00               	movlw	0
 17364  010D8E  5ADD               	subwfb	postdec2,f,c
 17365  010D90                     l12208:
 17366                           
 17367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17368                           ;stkvar	_u @ sp[(-56)+12]
 17369  010D90  0ED4               	movlw	-44
 17370  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17371  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17372  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17373  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17374                           
 17375                           ;stkvar	_l @ sp[(-60)+20]
 17376  010DAA  0ED8               	movlw	-40
 17377  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17378  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17379  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17380  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17381  010DC4  ECA7  F09E         	call	___flmul	;wreg free
 17382  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17383  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17384  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17385  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17386                           
 17387                           ;stkvar	_h @ sp[(-60)+24]
 17388  010DE0  0EDC               	movlw	-36
 17389  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17390  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17391  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17392  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17393  010DFA  ECDB  F0DA         	call	___flsub	;wreg free
 17394                           
 17395                           ;stkvar	_h @ sp[(-56)+24]
 17396  010DFE  0EE0               	movlw	-32
 17397  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17398  010E06  0EE1               	movlw	-31
 17399  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17400  010E0E  0EE2               	movlw	-30
 17401  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17402  010E16  0EE3               	movlw	-29
 17403  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17404                           
 17405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17406  010E1E  0E00               	movlw	0
 17407  010E20  6EE6               	movwf	postinc1,c
 17408  010E22  0E00               	movlw	0
 17409  010E24  6EE6               	movwf	postinc1,c
 17410  010E26  0E20               	movlw	32
 17411  010E28  6EE6               	movwf	postinc1,c
 17412  010E2A  0E41               	movlw	65
 17413  010E2C  6EE6               	movwf	postinc1,c
 17414                           
 17415                           ;stkvar	_u @ sp[(-60)+12]
 17416  010E2E  0ED0               	movlw	-48
 17417  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17418  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17419  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17420  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17421  010E48  EC9A  F0A6         	call	___fldiv	;wreg free
 17422                           
 17423                           ;stkvar	_u @ sp[(-56)+12]
 17424  010E4C  0ED4               	movlw	-44
 17425  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17426  010E54  0ED5               	movlw	-43
 17427  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17428  010E5C  0ED6               	movlw	-42
 17429  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17430  010E64  0ED7               	movlw	-41
 17431  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17432                           
 17433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17434                           ;stkvar	_ne @ sp[(-56)+46]
 17435  010E6C  50E1               	movf	fsr1l,w,c
 17436  010E6E  0FF6               	addlw	-10
 17437  010E70  6ED9               	movwf	fsr2l,c
 17438  010E72  50E2               	movf	fsr1h,w,c
 17439  010E74  6EDA               	movwf	fsr2h,c
 17440  010E76  0EFF               	movlw	255
 17441  010E78  22DA               	addwfc	fsr2h,f,c
 17442  010E7A  06DE               	decf	postinc2,f,c
 17443  010E7C  0E00               	movlw	0
 17444  010E7E  5ADD               	subwfb	postdec2,f,c
 17445                           
 17446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17447                           ;stkvar	_i @ sp[(-56)+36]
 17448  010E80  0EEC               	movlw	-20
 17449  010E82  50E3               	movf	plusw1,w,c
 17450  010E84  0F01               	addlw	1
 17451  010E86  6E01               	movwf	btemp^0,c
 17452  010E88  0EEC               	movlw	-20
 17453  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17454  010E90  6A01               	clrf	btemp^0,c
 17455  010E92  0EED               	movlw	-19
 17456  010E94  50E3               	movf	plusw1,w,c
 17457  010E96  2001               	addwfc	btemp^0,w,c
 17458  010E98  6E01               	movwf	btemp^0,c
 17459  010E9A  0EED               	movlw	-19
 17460  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17461  010EA2                     l12216:
 17462                           
 17463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17464                           ;stkvar	_m @ sp[(-56)+48]
 17465                           ;stkvar	_i @ sp[(-56)+36]
 17466  010EA2  50E1               	movf	fsr1l,w,c
 17467  010EA4  0FEC               	addlw	-20
 17468  010EA6  6ED9               	movwf	fsr2l,c
 17469  010EA8  50E2               	movf	fsr1h,w,c
 17470  010EAA  6EDA               	movwf	fsr2h,c
 17471  010EAC  0EFF               	movlw	255
 17472  010EAE  22DA               	addwfc	fsr2h,f,c
 17473  010EB0  0EF8               	movlw	-8
 17474  010EB2  50E3               	movf	plusw1,w,c
 17475  010EB4  5CDE               	subwf	postinc2,w,c
 17476  010EB6  50DE               	movf	postinc2,w,c
 17477  010EB8  0A80               	xorlw	128
 17478  010EBA  6E01               	movwf	btemp^0,c
 17479  010EBC  0EF9               	movlw	-7
 17480  010EBE  50E3               	movf	plusw1,w,c
 17481  010EC0  0A80               	xorlw	128
 17482  010EC2  5801               	subwfb	btemp^0,w,c
 17483  010EC4  B0D8               	btfsc	status,0,c
 17484  010EC6  D00E               	goto	u11500
 17485                           
 17486                           ;stkvar	_n @ sp[(-56)+32]
 17487  010EC8  0EE9               	movlw	-23
 17488  010ECA  BEE3               	btfsc	plusw1,7,c
 17489  010ECC  D633               	goto	l12166
 17490  010ECE  0EE9               	movlw	-23
 17491  010ED0  50E3               	movf	plusw1,w,c
 17492  010ED2  E108               	bnz	u11500
 17493  010ED4  0EE8               	movlw	-24
 17494  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17495  010EDC  0E4B               	movlw	75
 17496  010EDE  5E01               	subwf	btemp^0,f,c
 17497  010EE0  A0D8               	btfss	status,0,c
 17498  010EE2  D628               	goto	l12166
 17499  010EE4                     u11500:
 17500                           
 17501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17502                           ;stkvar	_pp @ sp[(-56)+50]
 17503  010EE4  0EFA               	movlw	-6
 17504  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17505  010EEC  0EFB               	movlw	-5
 17506  010EEE  50E3               	movf	plusw1,w,c
 17507  010EF0  1001               	iorwf	btemp^0,w,c
 17508  010EF2  B4D8               	btfsc	status,2,c
 17509  010EF4  A83E               	btfss	_flags^0,4,c
 17510  010EF6  D021               	goto	l12228
 17511                           
 17512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17513                           ;stkvar	_n @ sp[(-56)+32]
 17514  010EF8  0EE8               	movlw	-24
 17515  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17516  010F00  0EE9               	movlw	-23
 17517  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17518  010F08  0E97               	movlw	low _dbuf
 17519  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17520  010F0C  6ED9               	movwf	fsr2l,c
 17521  010F0E  0E02               	movlw	high _dbuf
 17522  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17523  010F12  6EDA               	movwf	fsr2h,c
 17524  010F14  0E2E               	movlw	46
 17525  010F16  6EDF               	movwf	indf2,c
 17526                           
 17527                           ;stkvar	_n @ sp[(-56)+32]
 17528  010F18  0EE8               	movlw	-24
 17529  010F1A  50E3               	movf	plusw1,w,c
 17530  010F1C  0F01               	addlw	1
 17531  010F1E  6E01               	movwf	btemp^0,c
 17532  010F20  0EE8               	movlw	-24
 17533  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17534  010F28  6A01               	clrf	btemp^0,c
 17535  010F2A  0EE9               	movlw	-23
 17536  010F2C  50E3               	movf	plusw1,w,c
 17537  010F2E  2001               	addwfc	btemp^0,w,c
 17538  010F30  6E01               	movwf	btemp^0,c
 17539  010F32  0EE9               	movlw	-23
 17540  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17541  010F3A                     l12228:
 17542                           
 17543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17544                           ;stkvar	_n @ sp[(-56)+32]
 17545  010F3A  0EE8               	movlw	-24
 17546  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17547  010F42  0EE9               	movlw	-23
 17548  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17549  010F4A  0E97               	movlw	low _dbuf
 17550  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17551  010F4E  6ED9               	movwf	fsr2l,c
 17552  010F50  0E02               	movlw	high _dbuf
 17553  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17554  010F54  6EDA               	movwf	fsr2h,c
 17555  010F56  0E00               	movlw	0
 17556  010F58  6EDF               	movwf	indf2,c
 17557                           
 17558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17559                           ;stkvar	_nmode @ sp[(-56)+55]
 17560  010F5A  0EFF               	movlw	-1
 17561  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17562  010F62  0E65               	movlw	101
 17563  010F64  1801               	xorwf	btemp^0,w,c
 17564  010F66  A4D8               	btfss	status,2,c
 17565  010F68  EF16  F081         	goto	l12032
 17566                           
 17567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17568  010F6C  0E4F               	movlw	79
 17569  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17570  010F70  0E00               	movlw	0
 17571  010F72  6E0C               	movwf	(btemp+11)^0,c
 17572                           
 17573                           ;stkvar	_i @ sp[(-56)+36]
 17574  010F74  0EEC               	movlw	-20
 17575  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17576  010F7C  0EED               	movlw	-19
 17577  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17578                           
 17579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17580                           ;stkvar	_i @ sp[(-56)+36]
 17581  010F84  0EEC               	movlw	-20
 17582  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17583  010F8C  0EED               	movlw	-19
 17584  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17585  010F94  0E97               	movlw	low _dbuf
 17586  010F96  240B               	addwf	(btemp+10)^0,w,c
 17587  010F98  6ED9               	movwf	fsr2l,c
 17588  010F9A  0E02               	movlw	high _dbuf
 17589  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17590  010F9E  6EDA               	movwf	fsr2h,c
 17591  010FA0  0E00               	movlw	0
 17592  010FA2  6EDF               	movwf	indf2,c
 17593                           
 17594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17595                           ;stkvar	_sign @ sp[(-56)+42]
 17596  010FA4  0EF2               	movlw	-14
 17597  010FA6  6AE3               	clrf	plusw1,c
 17598  010FA8  0EF3               	movlw	-13
 17599  010FAA  6AE3               	clrf	plusw1,c
 17600                           
 17601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17602                           ;stkvar	_e @ sp[(-56)+34]
 17603  010FAC  0EEB               	movlw	-21
 17604  010FAE  AEE3               	btfss	plusw1,7,c
 17605  010FB0  D012               	goto	l12242
 17606                           
 17607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17608  010FB2  0E01               	movlw	1
 17609  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17610  010FB6  0E00               	movlw	0
 17611  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17612                           
 17613                           ;stkvar	_sign @ sp[(-56)+42]
 17614  010FBA  0EF2               	movlw	-14
 17615  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17616  010FC2  0EF3               	movlw	-13
 17617  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17618                           
 17619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17620                           ;stkvar	_e @ sp[(-56)+34]
 17621                           ;stkvar	_e @ sp[(-56)+34]
 17622  010FCA  0EEA               	movlw	-22
 17623  010FCC  6CE3               	negf	plusw1,c
 17624  010FCE  0EEB               	movlw	-21
 17625  010FD0  1EE3               	comf	plusw1,f,c
 17626  010FD2  B0D8               	btfsc	status,0,c
 17627  010FD4  2AE3               	incf	plusw1,f,c
 17628  010FD6                     l12242:
 17629                           
 17630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17631  010FD6  0E02               	movlw	2
 17632  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17633  010FDA  0E00               	movlw	0
 17634  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17635                           
 17636                           ;stkvar	_p @ sp[(-56)+40]
 17637  010FDE  0EF0               	movlw	-16
 17638  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17639  010FE6  0EF1               	movlw	-15
 17640  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17641                           
 17642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17643  010FEE  D051               	goto	l12254
 17644  010FF0                     l12244:
 17645                           
 17646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17647                           ;stkvar	_i @ sp[(-56)+36]
 17648  010FF0  50E1               	movf	fsr1l,w,c
 17649  010FF2  0FEC               	addlw	-20
 17650  010FF4  6ED9               	movwf	fsr2l,c
 17651  010FF6  50E2               	movf	fsr1h,w,c
 17652  010FF8  6EDA               	movwf	fsr2h,c
 17653  010FFA  0EFF               	movlw	255
 17654  010FFC  22DA               	addwfc	fsr2h,f,c
 17655  010FFE  06DE               	decf	postinc2,f,c
 17656  011000  0E00               	movlw	0
 17657  011002  5ADD               	subwfb	postdec2,f,c
 17658                           
 17659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17660                           ;stkvar	_i @ sp[(-56)+36]
 17661  011004  0EEC               	movlw	-20
 17662  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17663  01100C  0EED               	movlw	-19
 17664  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17665  011014  0E97               	movlw	low _dbuf
 17666  011016  240B               	addwf	(btemp+10)^0,w,c
 17667  011018  6ED9               	movwf	fsr2l,c
 17668  01101A  0E02               	movlw	high _dbuf
 17669  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17670  01101E  6EDA               	movwf	fsr2h,c
 17671  011020  0E0A               	movlw	10
 17672  011022  6EE6               	movwf	postinc1,c
 17673  011024  0E00               	movlw	0
 17674  011026  6EE6               	movwf	postinc1,c
 17675                           
 17676                           ;stkvar	_e @ sp[(-58)+34]
 17677  011028  0EE8               	movlw	-24
 17678  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17679  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17680  011036  ECDB  F0CC         	call	___awmod	;wreg free
 17681  01103A  5001               	movf	btemp^0,w,c
 17682  01103C  0F30               	addlw	48
 17683  01103E  6EDF               	movwf	indf2,c
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17686  011040  0E0A               	movlw	10
 17687  011042  6EE6               	movwf	postinc1,c
 17688  011044  0E00               	movlw	0
 17689  011046  6EE6               	movwf	postinc1,c
 17690                           
 17691                           ;stkvar	_e @ sp[(-58)+34]
 17692  011048  0EE8               	movlw	-24
 17693  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17694  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17695  011056  EC3D  F0C9         	call	___awdiv	;wreg free
 17696                           
 17697                           ;stkvar	_e @ sp[(-56)+34]
 17698  01105A  0EEA               	movlw	-22
 17699  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17700  011062  0EEB               	movlw	-21
 17701  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17702                           
 17703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17704                           ;stkvar	_p @ sp[(-56)+40]
 17705  01106A  50E1               	movf	fsr1l,w,c
 17706  01106C  0FF0               	addlw	-16
 17707  01106E  6ED9               	movwf	fsr2l,c
 17708  011070  50E2               	movf	fsr1h,w,c
 17709  011072  6EDA               	movwf	fsr2h,c
 17710  011074  0EFF               	movlw	255
 17711  011076  22DA               	addwfc	fsr2h,f,c
 17712  011078  06DE               	decf	postinc2,f,c
 17713  01107A  0E00               	movlw	0
 17714  01107C  5ADD               	subwfb	postdec2,f,c
 17715                           
 17716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17717                           ;stkvar	_w @ sp[(-56)+38]
 17718  01107E  50E1               	movf	fsr1l,w,c
 17719  011080  0FEE               	addlw	-18
 17720  011082  6ED9               	movwf	fsr2l,c
 17721  011084  50E2               	movf	fsr1h,w,c
 17722  011086  6EDA               	movwf	fsr2h,c
 17723  011088  0EFF               	movlw	255
 17724  01108A  22DA               	addwfc	fsr2h,f,c
 17725  01108C  06DE               	decf	postinc2,f,c
 17726  01108E  0E00               	movlw	0
 17727  011090  5ADD               	subwfb	postdec2,f,c
 17728  011092                     l12254:
 17729                           
 17730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17731                           ;stkvar	_e @ sp[(-56)+34]
 17732  011092  0EEA               	movlw	-22
 17733  011094  006F FF8C  F001    	movff	plusw1,btemp
 17734  01109A  0EEB               	movlw	-21
 17735  01109C  50E3               	movf	plusw1,w,c
 17736  01109E  1001               	iorwf	btemp^0,w,c
 17737  0110A0  A4D8               	btfss	status,2,c
 17738  0110A2  D7A6               	goto	l12244
 17739                           
 17740                           ;stkvar	_p @ sp[(-56)+40]
 17741  0110A4  0EF1               	movlw	-15
 17742  0110A6  BEE3               	btfsc	plusw1,7,c
 17743  0110A8  D007               	goto	u11560
 17744  0110AA  0EF1               	movlw	-15
 17745  0110AC  50E3               	movf	plusw1,w,c
 17746  0110AE  E1A0               	bnz	l12244
 17747  0110B0  0EF0               	movlw	-16
 17748  0110B2  04E3               	decf	plusw1,w,c
 17749  0110B4  B0D8               	btfsc	status,0,c
 17750  0110B6  D79C               	goto	l12244
 17751  0110B8                     u11560:
 17752                           
 17753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17754                           ;stkvar	_i @ sp[(-56)+36]
 17755  0110B8  50E1               	movf	fsr1l,w,c
 17756  0110BA  0FEC               	addlw	-20
 17757  0110BC  6ED9               	movwf	fsr2l,c
 17758  0110BE  50E2               	movf	fsr1h,w,c
 17759  0110C0  6EDA               	movwf	fsr2h,c
 17760  0110C2  0EFF               	movlw	255
 17761  0110C4  22DA               	addwfc	fsr2h,f,c
 17762  0110C6  06DE               	decf	postinc2,f,c
 17763  0110C8  0E00               	movlw	0
 17764  0110CA  5ADD               	subwfb	postdec2,f,c
 17765                           
 17766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17767                           ;stkvar	_sign @ sp[(-56)+42]
 17768  0110CC  0EF2               	movlw	-14
 17769  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17770  0110D4  0EF3               	movlw	-13
 17771  0110D6  50E3               	movf	plusw1,w,c
 17772  0110D8  1001               	iorwf	btemp^0,w,c
 17773  0110DA  A4D8               	btfss	status,2,c
 17774  0110DC  D002               	goto	l12264
 17775  0110DE  0E2B               	movlw	43
 17776  0110E0  D001               	goto	L18
 17777  0110E2                     l12264:
 17778  0110E2  0E2D               	movlw	45
 17779  0110E4                     L18:
 17780  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17781  0110E6  0E00               	movlw	0
 17782  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17783                           
 17784                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17785  0110EA  0ECC               	movlw	-52
 17786  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17787  0110F2  0ECD               	movlw	-51
 17788  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17789                           
 17790                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17791                           ;stkvar	_i @ sp[(-56)+36]
 17792  0110FA  0EEC               	movlw	-20
 17793  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17794  011102  0EED               	movlw	-19
 17795  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17796  01110A  0E97               	movlw	low _dbuf
 17797  01110C  240B               	addwf	(btemp+10)^0,w,c
 17798  01110E  6ED9               	movwf	fsr2l,c
 17799  011110  0E02               	movlw	high _dbuf
 17800  011112  200C               	addwfc	(btemp+11)^0,w,c
 17801  011114  6EDA               	movwf	fsr2h,c
 17802  011116  0ECC               	movlw	-52
 17803  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17804                           
 17805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17806                           ;stkvar	_w @ sp[(-56)+38]
 17807  01111E  50E1               	movf	fsr1l,w,c
 17808  011120  0FEE               	addlw	-18
 17809  011122  6ED9               	movwf	fsr2l,c
 17810  011124  50E2               	movf	fsr1h,w,c
 17811  011126  6EDA               	movwf	fsr2h,c
 17812  011128  0EFF               	movlw	255
 17813  01112A  22DA               	addwfc	fsr2h,f,c
 17814  01112C  06DE               	decf	postinc2,f,c
 17815  01112E  0E00               	movlw	0
 17816  011130  5ADD               	subwfb	postdec2,f,c
 17817                           
 17818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17819                           ;stkvar	_i @ sp[(-56)+36]
 17820  011132  50E1               	movf	fsr1l,w,c
 17821  011134  0FEC               	addlw	-20
 17822  011136  6ED9               	movwf	fsr2l,c
 17823  011138  50E2               	movf	fsr1h,w,c
 17824  01113A  6EDA               	movwf	fsr2h,c
 17825  01113C  0EFF               	movlw	255
 17826  01113E  22DA               	addwfc	fsr2h,f,c
 17827  011140  06DE               	decf	postinc2,f,c
 17828  011142  0E00               	movlw	0
 17829  011144  5ADD               	subwfb	postdec2,f,c
 17830  011146  0EBF               	movlw	191
 17831  011148  6E0B               	movwf	(btemp+10)^0,c
 17832  01114A  0EFF               	movlw	255
 17833  01114C  6E0C               	movwf	(btemp+11)^0,c
 17834                           
 17835                           ;stkvar	_c @ sp[(-56)+-7]
 17836  01114E  0EC1               	movlw	-63
 17837  011150  50E3               	movf	plusw1,w,c
 17838  011152  6E09               	movwf	(btemp+8)^0,c
 17839  011154  6A0A               	clrf	(btemp+9)^0,c
 17840  011156  500B               	movf	(btemp+10)^0,w,c
 17841  011158  2609               	addwf	(btemp+8)^0,f,c
 17842  01115A  500C               	movf	(btemp+11)^0,w,c
 17843  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17844  01115E  500A               	movf	(btemp+9)^0,w,c
 17845  011160  E106               	bnz	u11580
 17846  011162  0E1A               	movlw	26
 17847  011164  5C09               	subwf	(btemp+8)^0,w,c
 17848  011166  B0D8               	btfsc	status,0,c
 17849  011168  D002               	goto	u11580
 17850  01116A  0E01               	movlw	1
 17851  01116C  D001               	goto	u11590
 17852  01116E                     u11580:
 17853  01116E  0E00               	movlw	0
 17854  011170                     u11590:
 17855  011170  6E0B               	movwf	(btemp+10)^0,c
 17856  011172  6A0C               	clrf	(btemp+11)^0,c
 17857                           
 17858                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17859  011174  0EC8               	movlw	-56
 17860  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17861  01117C  0EC9               	movlw	-55
 17862  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17863                           
 17864                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17865  011184  0EC8               	movlw	-56
 17866  011186  006F FF8C  F001    	movff	plusw1,btemp
 17867  01118C  0EC9               	movlw	-55
 17868  01118E  50E3               	movf	plusw1,w,c
 17869  011190  1001               	iorwf	btemp^0,w,c
 17870  011192  A4D8               	btfss	status,2,c
 17871  011194  D002               	goto	l12280
 17872  011196  0E65               	movlw	101
 17873  011198  D001               	goto	L19
 17874  01119A                     l12280:
 17875  01119A  0E45               	movlw	69
 17876  01119C                     L19:
 17877  01119C  6E0B               	movwf	(btemp+10)^0,c
 17878  01119E  0E00               	movlw	0
 17879  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17880                           
 17881                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17882  0111A2  0ECA               	movlw	-54
 17883  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17884  0111AA  0ECB               	movlw	-53
 17885  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17886                           
 17887                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17888                           ;stkvar	_i @ sp[(-56)+36]
 17889  0111B2  0EEC               	movlw	-20
 17890  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17891  0111BA  0EED               	movlw	-19
 17892  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17893  0111C2  0E97               	movlw	low _dbuf
 17894  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17895  0111C6  6ED9               	movwf	fsr2l,c
 17896  0111C8  0E02               	movlw	high _dbuf
 17897  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17898  0111CC  6EDA               	movwf	fsr2h,c
 17899  0111CE  0ECA               	movlw	-54
 17900  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17901                           
 17902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17903                           ;stkvar	_w @ sp[(-56)+38]
 17904  0111D6  50E1               	movf	fsr1l,w,c
 17905  0111D8  0FEE               	addlw	-18
 17906  0111DA  6ED9               	movwf	fsr2l,c
 17907  0111DC  50E2               	movf	fsr1h,w,c
 17908  0111DE  6EDA               	movwf	fsr2h,c
 17909  0111E0  0EFF               	movlw	255
 17910  0111E2  22DA               	addwfc	fsr2h,f,c
 17911  0111E4  06DE               	decf	postinc2,f,c
 17912  0111E6  0E00               	movlw	0
 17913  0111E8  5ADD               	subwfb	postdec2,f,c
 17914                           
 17915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17916                           ;stkvar	_i @ sp[(-56)+36]
 17917  0111EA  0EEC               	movlw	-20
 17918  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17919  0111F2  0EED               	movlw	-19
 17920  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17921  0111FA  0E97               	movlw	low _dbuf
 17922  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17923  0111FE  6E09               	movwf	(btemp+8)^0,c
 17924  011200  0E02               	movlw	high _dbuf
 17925  011202  200C               	addwfc	(btemp+11)^0,w,c
 17926  011204  6E0A               	movwf	(btemp+9)^0,c
 17927  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17928  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17929                           
 17930                           ;stkvar	_n @ sp[(-58)+32]
 17931  011212  0E97               	movlw	low _dbuf
 17932  011214  6E0B               	movwf	(btemp+10)^0,c
 17933  011216  0E02               	movlw	high _dbuf
 17934  011218  6E0C               	movwf	(btemp+11)^0,c
 17935  01121A  0EE6               	movlw	-26
 17936  01121C  50E3               	movf	plusw1,w,c
 17937  01121E  260B               	addwf	(btemp+10)^0,f,c
 17938  011220  0EE7               	movlw	-25
 17939  011222  50E3               	movf	plusw1,w,c
 17940  011224  220C               	addwfc	(btemp+11)^0,f,c
 17941  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17942  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17943  011232  ECBB  F0D1         	call	_strcpy	;wreg free
 17944  011236  EF16  F081         	goto	l12032
 17945  01123A                     l2194:
 17946                           
 17947                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17948  01123A  0EC1               	movlw	193
 17949  01123C  26E1               	addwf	fsr1l,f,c
 17950  01123E  0EFF               	movlw	255
 17951  011240  22E2               	addwfc	fsr1h,f,c
 17952  011242  0012               	return		;funcret
 17953  011244                     __end_of_efgtoa:
 17954                           	opt callstack 0
 17955                           
 17956 ;; *************** function _tolower *****************
 17957 ;; Defined at:
 17958 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17959 ;; Parameters:    Size  Location     Type
 17960 ;;  c               2  [STACK] int 
 17961 ;; Auto vars:     Size  Location     Type
 17962 ;;		None
 17963 ;; Return value:  Size  Location     Type
 17964 ;;                  2  [STACK] int 
 17965 ;; Registers used:
 17966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17967 ;; Tracked objects:
 17968 ;;		On entry : 0/0
 17969 ;;		On exit  : 0/0
 17970 ;;		Unchanged: 0/0
 17971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17976 ;;Total ram usage:        0 bytes
 17977 ;; Hardware stack levels used:    1
 17978 ;; Hardware stack levels required when called:   16
 17979 ;; This function calls:
 17980 ;;		_isupper
 17981 ;; This function is called by:
 17982 ;;		_efgtoa
 17983 ;;		_vfpfcnvrt
 17984 ;; This function uses a reentrant model
 17985 ;;
 17986                           
 17987                           	psect	text58
 17988  01AD12                     __ptext58:
 17989                           	opt callstack 0
 17990  01AD12                     _tolower:
 17991                           	opt callstack 0
 17992                           
 17993                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17994  01AD12  52E6               	movf	postinc1,f,c
 17995  01AD14  52E6               	movf	postinc1,f,c
 17996                           
 17997                           ;stkvar	_c @ sp[(-2)+-2]
 17998                           
 17999                           ;incstack = 0
 18000 ;; hardware stack exceeded
 18001  01AD16  0EFC               	movlw	-4
 18002  01AD18  50E3               	movf	plusw1,w,c
 18003  01AD1A  0FBF               	addlw	191
 18004  01AD1C  6E0B               	movwf	(btemp+10)^0,c
 18005  01AD1E  0EFD               	movlw	-3
 18006  01AD20  006F FF8C  F00C    	movff	plusw1,btemp+11
 18007  01AD26  0EFF               	movlw	255
 18008  01AD28  220C               	addwfc	(btemp+11)^0,f,c
 18009  01AD2A  500C               	movf	(btemp+11)^0,w,c
 18010  01AD2C  E106               	bnz	u6100
 18011  01AD2E  0E1A               	movlw	26
 18012  01AD30  5C0B               	subwf	(btemp+10)^0,w,c
 18013  01AD32  B0D8               	btfsc	status,0,c
 18014  01AD34  D002               	goto	u6100
 18015  01AD36  0E01               	movlw	1
 18016  01AD38  D001               	goto	u6110
 18017  01AD3A                     u6100:
 18018  01AD3A  0E00               	movlw	0
 18019  01AD3C                     u6110:
 18020  01AD3C  6E0B               	movwf	(btemp+10)^0,c
 18021  01AD3E  6A0C               	clrf	(btemp+11)^0,c
 18022                           
 18023                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18024  01AD40  0EFE               	movlw	-2
 18025  01AD42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18026  01AD48  0EFF               	movlw	-1
 18027  01AD4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18028                           
 18029                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18030  01AD50  0EFE               	movlw	-2
 18031  01AD52  006F FF8C  F001    	movff	plusw1,btemp
 18032  01AD58  0EFF               	movlw	-1
 18033  01AD5A  50E3               	movf	plusw1,w,c
 18034  01AD5C  1001               	iorwf	btemp^0,w,c
 18035  01AD5E  B4D8               	btfsc	status,2,c
 18036  01AD60  D00D               	goto	l8042
 18037                           
 18038                           ;stkvar	_c @ sp[(-2)+-2]
 18039  01AD62  0EFC               	movlw	-4
 18040  01AD64  006F FF8C  F001    	movff	plusw1,btemp
 18041  01AD6A  0EFD               	movlw	-3
 18042  01AD6C  006F FF8C  F002    	movff	plusw1,btemp+1
 18043  01AD72  0E20               	movlw	32
 18044  01AD74  1201               	iorwf	btemp^0,f,c
 18045  01AD76  0E00               	movlw	0
 18046  01AD78  1202               	iorwf	(btemp+1)^0,f,c
 18047  01AD7A  D008               	goto	l3466
 18048  01AD7C                     l8042:
 18049                           
 18050                           ;stkvar	_c @ sp[(-2)+-2]
 18051  01AD7C  0EFC               	movlw	-4
 18052  01AD7E  006F FF8C  F001    	movff	plusw1,btemp
 18053  01AD84  0EFD               	movlw	-3
 18054  01AD86  006F FF8C  F002    	movff	plusw1,btemp+1
 18055  01AD8C                     l3466:
 18056                           
 18057                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18058  01AD8C  52E5               	movf	postdec1,f,c
 18059  01AD8E  52E5               	movf	postdec1,f,c
 18060  01AD90  52E5               	movf	postdec1,f,c
 18061  01AD92  52E5               	movf	postdec1,f,c
 18062  01AD94  0012               	return		;funcret
 18063  01AD96                     __end_of_tolower:
 18064                           	opt callstack 0
 18065                           
 18066 ;; *************** function _isupper *****************
 18067 ;; Defined at:
 18068 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;  c               2  [STACK] int 
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;		None
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  2  [STACK] int 
 18075 ;; Registers used:
 18076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18086 ;;Total ram usage:        0 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:   15
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		_efgtoa
 18093 ;;		_xtoa
 18094 ;;		_vfpfcnvrt
 18095 ;;		_tolower
 18096 ;; This function uses a reentrant model
 18097 ;;
 18098                           
 18099                           	psect	text59
 18100  01B9EA                     __ptext59:
 18101                           	opt callstack 0
 18102  01B9EA                     _isupper:
 18103                           	opt callstack 0
 18104                           
 18105                           ;stkvar	_c @ sp[(0)+-2]
 18106                           
 18107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18108                           ;incstack = 0
 18109 ;; hardware stack exceeded
 18110  01B9EA  0EFE               	movlw	-2
 18111  01B9EC  50E3               	movf	plusw1,w,c
 18112  01B9EE  0FBF               	addlw	191
 18113  01B9F0  6E0B               	movwf	(btemp+10)^0,c
 18114  01B9F2  0EFF               	movlw	-1
 18115  01B9F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18116  01B9FA  0EFF               	movlw	255
 18117  01B9FC  220C               	addwfc	(btemp+11)^0,f,c
 18118  01B9FE  500C               	movf	(btemp+11)^0,w,c
 18119  01BA00  E106               	bnz	u5450
 18120  01BA02  0E1A               	movlw	26
 18121  01BA04  5C0B               	subwf	(btemp+10)^0,w,c
 18122  01BA06  B0D8               	btfsc	status,0,c
 18123  01BA08  D002               	goto	u5450
 18124  01BA0A  0E01               	movlw	1
 18125  01BA0C  D001               	goto	u5460
 18126  01BA0E                     u5450:
 18127  01BA0E  0E00               	movlw	0
 18128  01BA10                     u5460:
 18129  01BA10  6E01               	movwf	btemp^0,c
 18130  01BA12  6A02               	clrf	(btemp+1)^0,c
 18131                           
 18132                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18133  01BA14  52E5               	movf	postdec1,f,c
 18134  01BA16  52E5               	movf	postdec1,f,c
 18135  01BA18  0012               	return		;funcret
 18136  01BA1A                     __end_of_isupper:
 18137                           	opt callstack 0
 18138                           
 18139 ;; *************** function _strcpy *****************
 18140 ;; Defined at:
 18141 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18142 ;; Parameters:    Size  Location     Type
 18143 ;;  dest            2  [STACK] PTR unsigned char 
 18144 ;;		 -> dbuf(80), 
 18145 ;;  src             2  [STACK] PTR const unsigned char 
 18146 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18147 ;;		 -> dbuf(80), 
 18148 ;; Auto vars:     Size  Location     Type
 18149 ;;  d               2  [STACK] PTR unsigned char 
 18150 ;;		 -> dbuf(80), 
 18151 ;;  s               2  [STACK] PTR const unsigned char 
 18152 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18153 ;;		 -> dbuf(80), 
 18154 ;; Return value:  Size  Location     Type
 18155 ;;                  2  [STACK] PTR unsigned char 
 18156 ;; Registers used:
 18157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/0
 18160 ;;		On exit  : 0/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18167 ;;Total ram usage:        0 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; Hardware stack levels required when called:   15
 18170 ;; This function calls:
 18171 ;;		Nothing
 18172 ;; This function is called by:
 18173 ;;		_efgtoa
 18174 ;; This function uses a reentrant model
 18175 ;;
 18176                           
 18177                           	psect	text60
 18178  01A376                     __ptext60:
 18179                           	opt callstack 0
 18180  01A376                     _strcpy:
 18181                           	opt callstack 0
 18182                           
 18183                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18184  01A376  52E6               	movf	postinc1,f,c
 18185  01A378  52E6               	movf	postinc1,f,c
 18186  01A37A  52E6               	movf	postinc1,f,c
 18187  01A37C  52E6               	movf	postinc1,f,c
 18188                           
 18189                           ;stkvar	_src @ sp[(-4)+-4]
 18190                           
 18191                           ;incstack = 0
 18192 ;; hardware stack exceeded
 18193  01A37E  0EF8               	movlw	-8
 18194  01A380  006F FF8C  F00B    	movff	plusw1,btemp+10
 18195  01A386  0EF9               	movlw	-7
 18196  01A388  006F FF8C  F00C    	movff	plusw1,btemp+11
 18197                           
 18198                           ;stkvar	_s @ sp[(-4)+2]
 18199  01A38E  0EFF               	movlw	-1
 18200  01A390  0060  F033  FFE3   	movff	btemp+11,plusw1
 18201  01A396  0EFE               	movlw	-2
 18202  01A398  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18203                           
 18204                           ;stkvar	_dest @ sp[(-4)+-2]
 18205  01A39E  0EFA               	movlw	-6
 18206  01A3A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18207  01A3A6  0EFB               	movlw	-5
 18208  01A3A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18209                           
 18210                           ;stkvar	_d @ sp[(-4)+0]
 18211  01A3AE  0EFD               	movlw	-3
 18212  01A3B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18213  01A3B6  0EFC               	movlw	-4
 18214  01A3B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18215  01A3BE                     l11894:
 18216                           
 18217                           ;stkvar	_s @ sp[(-4)+2]
 18218  01A3BE  50E1               	movf	fsr1l,w,c
 18219  01A3C0  0FFE               	addlw	-2
 18220  01A3C2  6ED9               	movwf	fsr2l,c
 18221  01A3C4  50E2               	movf	fsr1h,w,c
 18222  01A3C6  6EDA               	movwf	fsr2h,c
 18223  01A3C8  0EFF               	movlw	255
 18224  01A3CA  22DA               	addwfc	fsr2h,f,c
 18225  01A3CC  006F FF7C  F00B    	movff	indf2,btemp+10
 18226  01A3D2  0E01               	movlw	1
 18227  01A3D4  26DE               	addwf	postinc2,f,c
 18228  01A3D6  006F FF7C  F00C    	movff	indf2,btemp+11
 18229  01A3DC  0E00               	movlw	0
 18230  01A3DE  22DD               	addwfc	postdec2,f,c
 18231  01A3E0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18232  01A3E6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18233  01A3EC  0E00               	movlw	low (__mediumconst shr (0+16))
 18234  01A3EE  6EF8               	movwf	tblptru,c
 18235                           
 18236                           ;stkvar	_d @ sp[(-4)+0]
 18237  01A3F0  50E1               	movf	fsr1l,w,c
 18238  01A3F2  0FFC               	addlw	-4
 18239  01A3F4  6ED9               	movwf	fsr2l,c
 18240  01A3F6  50E2               	movf	fsr1h,w,c
 18241  01A3F8  6EDA               	movwf	fsr2h,c
 18242  01A3FA  0EFF               	movlw	255
 18243  01A3FC  22DA               	addwfc	fsr2h,f,c
 18244  01A3FE  006F FF7C  F00B    	movff	indf2,btemp+10
 18245  01A404  0E01               	movlw	1
 18246  01A406  26DE               	addwf	postinc2,f,c
 18247  01A408  006F FF7C  F00C    	movff	indf2,btemp+11
 18248  01A40E  0E00               	movlw	0
 18249  01A410  22DD               	addwfc	postdec2,f,c
 18250  01A412  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18251  01A418  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18252  01A41E  0E1F               	movlw	(high __ramtop+-1)
 18253  01A420  64F7               	cpfsgt	tblptrh,c
 18254  01A422  D003               	bra	u10887
 18255  01A424  0008               	tblrd		*
 18256  01A426  50F5               	movf	tablat,w,c
 18257  01A428  D007               	bra	u10880
 18258  01A42A                     u10887:
 18259  01A42A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18260  01A430  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18261  01A436  50EF               	movf	indf0,w,c
 18262  01A438                     u10880:
 18263  01A438  6EDF               	movwf	indf2,c
 18264  01A43A  50DF               	movf	indf2,w,c
 18265  01A43C  A4D8               	btfss	status,2,c
 18266  01A43E  D7BF               	goto	l11894
 18267                           
 18268                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18269  01A440  0EF8               	movlw	248
 18270  01A442  26E1               	addwf	fsr1l,f,c
 18271  01A444  0EFF               	movlw	255
 18272  01A446  22E2               	addwfc	fsr1h,f,c
 18273  01A448  0012               	return		;funcret
 18274  01A44A                     __end_of_strcpy:
 18275                           	opt callstack 0
 18276                           
 18277 ;; *************** function _floorf *****************
 18278 ;; Defined at:
 18279 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;  x               4  [STACK] float 
 18282 ;; Auto vars:     Size  Location     Type
 18283 ;;  u               4  [STACK] struct .
 18284 ;;  m               4  [STACK] unsigned long 
 18285 ;;  e               2  [STACK] int 
 18286 ;; Return value:  Size  Location     Type
 18287 ;;                  4  [STACK] float 
 18288 ;; Registers used:
 18289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18290 ;; Tracked objects:
 18291 ;;		On entry : 0/0
 18292 ;;		On exit  : 0/0
 18293 ;;		Unchanged: 0/0
 18294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18299 ;;Total ram usage:        0 bytes
 18300 ;; Hardware stack levels used:    1
 18301 ;; Hardware stack levels required when called:   15
 18302 ;; This function calls:
 18303 ;;		Nothing
 18304 ;; This function is called by:
 18305 ;;		_efgtoa
 18306 ;; This function uses a reentrant model
 18307 ;;
 18308                           
 18309                           	psect	text61
 18310  016448                     __ptext61:
 18311                           	opt callstack 0
 18312  016448                     _floorf:
 18313                           	opt callstack 0
 18314                           
 18315                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18316  016448  0E0A               	movlw	10
 18317  01644A  26E1               	addwf	fsr1l,f,c
 18318  01644C  0E00               	movlw	0
 18319  01644E  22E2               	addwfc	fsr1h,f,c
 18320                           
 18321                           ;incstack = 0
 18322 ;; hardware stack exceeded
 18323  016450  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18324  016456  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18325  01645C  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18326  016462  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18327                           
 18328                           ;stkvar	_u @ sp[(-10)+0]
 18329  016468  0EF6               	movlw	-10
 18330  01646A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18331  016470  0EF7               	movlw	-9
 18332  016472  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18333  016478  0EF8               	movlw	-8
 18334  01647A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18335  016480  0EF9               	movlw	-7
 18336  016482  0060  F033  FFE3   	movff	btemp+11,plusw1
 18337                           
 18338                           ;stkvar	_x @ sp[(-10)+-4]
 18339  016488  0EF2               	movlw	-14
 18340  01648A  006F FF8C  F009    	movff	plusw1,btemp+8
 18341  016490  0EF3               	movlw	-13
 18342  016492  006F FF8C  F00A    	movff	plusw1,btemp+9
 18343  016498  0EF4               	movlw	-12
 18344  01649A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18345  0164A0  0EF5               	movlw	-11
 18346  0164A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18347                           
 18348                           ;stkvar	_u @ sp[(-10)+0]
 18349  0164A8  0EF6               	movlw	-10
 18350  0164AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 18351  0164B0  0EF7               	movlw	-9
 18352  0164B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18353  0164B8  0EF8               	movlw	-8
 18354  0164BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18355  0164C0  0EF9               	movlw	-7
 18356  0164C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18357  0164C8  0E81               	movlw	129
 18358  0164CA  6E0B               	movwf	(btemp+10)^0,c
 18359  0164CC  0EFF               	movlw	255
 18360  0164CE  6E0C               	movwf	(btemp+11)^0,c
 18361                           
 18362                           ;stkvar	_u @ sp[(-10)+0]
 18363  0164D0  0EF6               	movlw	-10
 18364  0164D2  006F FF8C  F005    	movff	plusw1,btemp+4
 18365  0164D8  0EF7               	movlw	-9
 18366  0164DA  006F FF8C  F006    	movff	plusw1,btemp+5
 18367  0164E0  0EF8               	movlw	-8
 18368  0164E2  006F FF8C  F007    	movff	plusw1,btemp+6
 18369  0164E8  0EF9               	movlw	-7
 18370  0164EA  006F FF8C  F008    	movff	plusw1,btemp+7
 18371  0164F0  0E18               	movlw	24
 18372  0164F2  D005               	goto	u6130
 18373  0164F4                     u6135:
 18374  0164F4  90D8               	bcf	status,0,c
 18375  0164F6  3208               	rrcf	(btemp+7)^0,f,c
 18376  0164F8  3207               	rrcf	(btemp+6)^0,f,c
 18377  0164FA  3206               	rrcf	(btemp+5)^0,f,c
 18378  0164FC  3205               	rrcf	(btemp+4)^0,f,c
 18379  0164FE                     u6130:
 18380  0164FE  2EE8               	decfsz	wreg,f,c
 18381  016500  D7F9               	goto	u6135
 18382  016502  0060  F014  F009   	movff	btemp+4,btemp+8
 18383  016508  0060  F018  F00A   	movff	btemp+5,btemp+9
 18384  01650E  0EFF               	movlw	255
 18385  016510  1609               	andwf	(btemp+8)^0,f,c
 18386  016512  0E00               	movlw	0
 18387  016514  160A               	andwf	(btemp+9)^0,f,c
 18388  016516  500B               	movf	(btemp+10)^0,w,c
 18389  016518  2609               	addwf	(btemp+8)^0,f,c
 18390  01651A  500C               	movf	(btemp+11)^0,w,c
 18391  01651C  220A               	addwfc	(btemp+9)^0,f,c
 18392                           
 18393                           ;stkvar	_e @ sp[(-10)+8]
 18394  01651E  0EFE               	movlw	-2
 18395  016520  0060  F027  FFE3   	movff	btemp+8,plusw1
 18396  016526  0EFF               	movlw	-1
 18397  016528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18398                           
 18399                           ;stkvar	_e @ sp[(-10)+8]
 18400  01652E  0EFF               	movlw	-1
 18401  016530  BEE3               	btfsc	plusw1,7,c
 18402  016532  D019               	goto	l8056
 18403  016534  0EFF               	movlw	-1
 18404  016536  50E3               	movf	plusw1,w,c
 18405  016538  E108               	bnz	u6140
 18406  01653A  0EFE               	movlw	-2
 18407  01653C  006F FF8C  F001    	movff	plusw1,btemp
 18408  016542  0E17               	movlw	23
 18409  016544  5E01               	subwf	btemp^0,f,c
 18410  016546  A0D8               	btfss	status,0,c
 18411  016548  D00E               	goto	l8056
 18412  01654A                     u6140:
 18413                           
 18414                           ;stkvar	_x @ sp[(-10)+-4]
 18415  01654A  0EF2               	movlw	-14
 18416  01654C  006F FF8C  F001    	movff	plusw1,btemp
 18417  016552  0EF3               	movlw	-13
 18418  016554  006F FF8C  F002    	movff	plusw1,btemp+1
 18419  01655A  0EF4               	movlw	-12
 18420  01655C  006F FF8C  F003    	movff	plusw1,btemp+2
 18421  016562  0EF5               	movlw	-11
 18422  016564  D11F               	goto	L20
 18423  016566                     l8056:
 18424                           
 18425                           ;stkvar	_e @ sp[(-10)+8]
 18426  016566  0EFF               	movlw	-1
 18427  016568  BEE3               	btfsc	plusw1,7,c
 18428  01656A  D0B4               	goto	l8072
 18429                           
 18430                           ;stkvar	_e @ sp[(-10)+8]
 18431  01656C  0EFE               	movlw	-2
 18432  01656E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18433  016574  0EFF               	movlw	255
 18434  016576  6E05               	movwf	(btemp+4)^0,c
 18435  016578  0EFF               	movlw	255
 18436  01657A  6E06               	movwf	(btemp+5)^0,c
 18437  01657C  0E7F               	movlw	127
 18438  01657E  6E07               	movwf	(btemp+6)^0,c
 18439  016580  0E00               	movlw	0
 18440  016582  6E08               	movwf	(btemp+7)^0,c
 18441  016584                     u6165:
 18442  016584  660C               	tstfsz	(btemp+11)^0,c
 18443  016586  D001               	goto	u6166
 18444  016588  D007               	goto	u6167
 18445  01658A                     u6166:
 18446  01658A  3408               	rlcf	(btemp+7)^0,w,c
 18447  01658C  3208               	rrcf	(btemp+7)^0,f,c
 18448  01658E  3207               	rrcf	(btemp+6)^0,f,c
 18449  016590  3206               	rrcf	(btemp+5)^0,f,c
 18450  016592  3205               	rrcf	(btemp+4)^0,f,c
 18451  016594  2E0C               	decfsz	(btemp+11)^0,f,c
 18452  016596  D7F6               	goto	u6165
 18453  016598                     u6167:
 18454                           
 18455                           ;stkvar	_m @ sp[(-10)+4]
 18456  016598  0EFA               	movlw	-6
 18457  01659A  0060  F017  FFE3   	movff	btemp+4,plusw1
 18458  0165A0  0EFB               	movlw	-5
 18459  0165A2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18460  0165A8  0EFC               	movlw	-4
 18461  0165AA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18462  0165B0  0EFD               	movlw	-3
 18463  0165B2  0060  F023  FFE3   	movff	btemp+7,plusw1
 18464                           
 18465                           ;stkvar	_m @ sp[(-10)+4]
 18466                           ;stkvar	_u @ sp[(-10)+0]
 18467  0165B8  0EF6               	movlw	-10
 18468  0165BA  006F FF8C  F009    	movff	plusw1,btemp+8
 18469  0165C0  0EF7               	movlw	-9
 18470  0165C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18471  0165C8  0EF8               	movlw	-8
 18472  0165CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18473  0165D0  0EF9               	movlw	-7
 18474  0165D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18475  0165D8  0EFA               	movlw	-6
 18476  0165DA  50E3               	movf	plusw1,w,c
 18477  0165DC  1609               	andwf	(btemp+8)^0,f,c
 18478  0165DE  0EFB               	movlw	-5
 18479  0165E0  50E3               	movf	plusw1,w,c
 18480  0165E2  160A               	andwf	(btemp+9)^0,f,c
 18481  0165E4  0EFC               	movlw	-4
 18482  0165E6  50E3               	movf	plusw1,w,c
 18483  0165E8  160B               	andwf	(btemp+10)^0,f,c
 18484  0165EA  0EFD               	movlw	-3
 18485  0165EC  50E3               	movf	plusw1,w,c
 18486  0165EE  160C               	andwf	(btemp+11)^0,f,c
 18487  0165F0  5009               	movf	(btemp+8)^0,w,c
 18488  0165F2  100A               	iorwf	(btemp+9)^0,w,c
 18489  0165F4  100B               	iorwf	(btemp+10)^0,w,c
 18490  0165F6  100C               	iorwf	(btemp+11)^0,w,c
 18491  0165F8  B4D8               	btfsc	status,2,c
 18492  0165FA  D7A7               	goto	u6140
 18493                           
 18494                           ;stkvar	_u @ sp[(-10)+0]
 18495  0165FC  0EF6               	movlw	-10
 18496  0165FE  006F FF8C  F009    	movff	plusw1,btemp+8
 18497  016604  0EF7               	movlw	-9
 18498  016606  006F FF8C  F00A    	movff	plusw1,btemp+9
 18499  01660C  0EF8               	movlw	-8
 18500  01660E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18501  016614  0EF9               	movlw	-7
 18502  016616  006F FF8C  F00C    	movff	plusw1,btemp+11
 18503  01661C  0E20               	movlw	32
 18504  01661E  D005               	goto	u6180
 18505  016620                     u6185:
 18506  016620  90D8               	bcf	status,0,c
 18507  016622  320C               	rrcf	(btemp+11)^0,f,c
 18508  016624  320B               	rrcf	(btemp+10)^0,f,c
 18509  016626  320A               	rrcf	(btemp+9)^0,f,c
 18510  016628  3209               	rrcf	(btemp+8)^0,f,c
 18511  01662A                     u6180:
 18512  01662A  2EE8               	decfsz	wreg,f,c
 18513  01662C  D7F9               	goto	u6185
 18514  01662E  5009               	movf	(btemp+8)^0,w,c
 18515  016630  B4D8               	btfsc	status,2,c
 18516  016632  D028               	goto	l8070
 18517                           
 18518                           ;stkvar	_m @ sp[(-10)+4]
 18519                           ;stkvar	_u @ sp[(-10)+0]
 18520  016634  0EF6               	movlw	-10
 18521  016636  50E3               	movf	plusw1,w,c
 18522  016638  6E01               	movwf	btemp^0,c
 18523  01663A  0EFA               	movlw	-6
 18524  01663C  50E3               	movf	plusw1,w,c
 18525  01663E  2601               	addwf	btemp^0,f,c
 18526  016640  0EF6               	movlw	-10
 18527  016642  0060  F007  FFE3   	movff	btemp,plusw1
 18528  016648  0EF7               	movlw	-9
 18529  01664A  50E3               	movf	plusw1,w,c
 18530  01664C  6E01               	movwf	btemp^0,c
 18531  01664E  0EFB               	movlw	-5
 18532  016650  50E3               	movf	plusw1,w,c
 18533  016652  2201               	addwfc	btemp^0,f,c
 18534  016654  0EF7               	movlw	-9
 18535  016656  0060  F007  FFE3   	movff	btemp,plusw1
 18536  01665C  0EF8               	movlw	-8
 18537  01665E  50E3               	movf	plusw1,w,c
 18538  016660  6E01               	movwf	btemp^0,c
 18539  016662  0EFC               	movlw	-4
 18540  016664  50E3               	movf	plusw1,w,c
 18541  016666  2201               	addwfc	btemp^0,f,c
 18542  016668  0EF8               	movlw	-8
 18543  01666A  0060  F007  FFE3   	movff	btemp,plusw1
 18544  016670  0EF9               	movlw	-7
 18545  016672  50E3               	movf	plusw1,w,c
 18546  016674  6E01               	movwf	btemp^0,c
 18547  016676  0EFD               	movlw	-3
 18548  016678  50E3               	movf	plusw1,w,c
 18549  01667A  2201               	addwfc	btemp^0,f,c
 18550  01667C  0EF9               	movlw	-7
 18551  01667E  0060  F007  FFE3   	movff	btemp,plusw1
 18552  016684                     l8070:
 18553                           
 18554                           ;stkvar	_m @ sp[(-10)+4]
 18555  016684  0EFA               	movlw	-6
 18556  016686  006F FF8C  F009    	movff	plusw1,btemp+8
 18557  01668C  0EFB               	movlw	-5
 18558  01668E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18559  016694  0EFC               	movlw	-4
 18560  016696  006F FF8C  F00B    	movff	plusw1,btemp+10
 18561  01669C  0EFD               	movlw	-3
 18562  01669E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18563  0166A4  1C09               	comf	(btemp+8)^0,w,c
 18564  0166A6  6E05               	movwf	(btemp+4)^0,c
 18565  0166A8  1C0A               	comf	(btemp+9)^0,w,c
 18566  0166AA  6E06               	movwf	(btemp+5)^0,c
 18567  0166AC  1C0B               	comf	(btemp+10)^0,w,c
 18568  0166AE  6E07               	movwf	(btemp+6)^0,c
 18569  0166B0  1C0C               	comf	(btemp+11)^0,w,c
 18570  0166B2  6E08               	movwf	(btemp+7)^0,c
 18571                           
 18572                           ;stkvar	_u @ sp[(-10)+0]
 18573  0166B4  50E1               	movf	fsr1l,w,c
 18574  0166B6  0FF6               	addlw	-10
 18575  0166B8  6ED9               	movwf	fsr2l,c
 18576  0166BA  50E2               	movf	fsr1h,w,c
 18577  0166BC  6EDA               	movwf	fsr2h,c
 18578  0166BE  0EFF               	movlw	255
 18579  0166C0  22DA               	addwfc	fsr2h,f,c
 18580  0166C2  5005               	movf	(btemp+4)^0,w,c
 18581  0166C4  16DE               	andwf	postinc2,f,c
 18582  0166C6  5006               	movf	(btemp+5)^0,w,c
 18583  0166C8  16DE               	andwf	postinc2,f,c
 18584  0166CA  5007               	movf	(btemp+6)^0,w,c
 18585  0166CC  16DE               	andwf	postinc2,f,c
 18586  0166CE  5008               	movf	(btemp+7)^0,w,c
 18587  0166D0  16DE               	andwf	postinc2,f,c
 18588  0166D2  D05B               	goto	l8080
 18589  0166D4                     l8072:
 18590                           
 18591                           ;stkvar	_u @ sp[(-10)+0]
 18592  0166D4  0EF6               	movlw	-10
 18593  0166D6  006F FF8C  F009    	movff	plusw1,btemp+8
 18594  0166DC  0EF7               	movlw	-9
 18595  0166DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18596  0166E4  0EF8               	movlw	-8
 18597  0166E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18598  0166EC  0EF9               	movlw	-7
 18599  0166EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18600  0166F4  0E20               	movlw	32
 18601  0166F6  D005               	goto	u6200
 18602  0166F8                     u6205:
 18603  0166F8  90D8               	bcf	status,0,c
 18604  0166FA  320C               	rrcf	(btemp+11)^0,f,c
 18605  0166FC  320B               	rrcf	(btemp+10)^0,f,c
 18606  0166FE  320A               	rrcf	(btemp+9)^0,f,c
 18607  016700  3209               	rrcf	(btemp+8)^0,f,c
 18608  016702                     u6200:
 18609  016702  2EE8               	decfsz	wreg,f,c
 18610  016704  D7F9               	goto	u6205
 18611  016706  6609               	tstfsz	(btemp+8)^0,c
 18612  016708  D009               	goto	l8076
 18613                           
 18614                           ;stkvar	_u @ sp[(-10)+0]
 18615  01670A  0EF6               	movlw	-10
 18616  01670C  6AE3               	clrf	plusw1,c
 18617  01670E  0EF7               	movlw	-9
 18618  016710  6AE3               	clrf	plusw1,c
 18619  016712  0EF8               	movlw	-8
 18620  016714  6AE3               	clrf	plusw1,c
 18621  016716  0EF9               	movlw	-7
 18622  016718  6AE3               	clrf	plusw1,c
 18623  01671A  D037               	goto	l8080
 18624  01671C                     l8076:
 18625                           
 18626                           ;stkvar	_u @ sp[(-10)+0]
 18627  01671C  0EF6               	movlw	-10
 18628  01671E  006F FF8C  F009    	movff	plusw1,btemp+8
 18629  016724  0EF7               	movlw	-9
 18630  016726  006F FF8C  F00A    	movff	plusw1,btemp+9
 18631  01672C  0EF8               	movlw	-8
 18632  01672E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18633  016734  0EF9               	movlw	-7
 18634  016736  006F FF8C  F00C    	movff	plusw1,btemp+11
 18635  01673C  90D8               	bcf	status,0,c
 18636  01673E  3409               	rlcf	(btemp+8)^0,w,c
 18637  016740  6E05               	movwf	(btemp+4)^0,c
 18638  016742  340A               	rlcf	(btemp+9)^0,w,c
 18639  016744  6E06               	movwf	(btemp+5)^0,c
 18640  016746  340B               	rlcf	(btemp+10)^0,w,c
 18641  016748  6E07               	movwf	(btemp+6)^0,c
 18642  01674A  340C               	rlcf	(btemp+11)^0,w,c
 18643  01674C  6E08               	movwf	(btemp+7)^0,c
 18644  01674E  5005               	movf	(btemp+4)^0,w,c
 18645  016750  1006               	iorwf	(btemp+5)^0,w,c
 18646  016752  1007               	iorwf	(btemp+6)^0,w,c
 18647  016754  1008               	iorwf	(btemp+7)^0,w,c
 18648  016756  B4D8               	btfsc	status,2,c
 18649  016758  D018               	goto	l8080
 18650  01675A  0E00               	movlw	0
 18651  01675C  6E09               	movwf	(btemp+8)^0,c
 18652  01675E  0E00               	movlw	0
 18653  016760  6E0A               	movwf	(btemp+9)^0,c
 18654  016762  0E80               	movlw	128
 18655  016764  6E0B               	movwf	(btemp+10)^0,c
 18656  016766  0EBF               	movlw	191
 18657  016768  6E0C               	movwf	(btemp+11)^0,c
 18658                           
 18659                           ;stkvar	_u @ sp[(-10)+0]
 18660  01676A  0EF6               	movlw	-10
 18661  01676C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18662  016772  0EF7               	movlw	-9
 18663  016774  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18664  01677A  0EF8               	movlw	-8
 18665  01677C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18666  016782  0EF9               	movlw	-7
 18667  016784  0060  F033  FFE3   	movff	btemp+11,plusw1
 18668  01678A                     l8080:
 18669                           
 18670                           ;stkvar	_u @ sp[(-10)+0]
 18671  01678A  0EF6               	movlw	-10
 18672  01678C  006F FF8C  F001    	movff	plusw1,btemp
 18673  016792  0EF7               	movlw	-9
 18674  016794  006F FF8C  F002    	movff	plusw1,btemp+1
 18675  01679A  0EF8               	movlw	-8
 18676  01679C  006F FF8C  F003    	movff	plusw1,btemp+2
 18677  0167A2  0EF9               	movlw	-7
 18678  0167A4                     L20:
 18679  0167A4  006F FF8C  F004    	movff	plusw1,btemp+3
 18680                           
 18681                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18682  0167AA  0EF2               	movlw	242
 18683  0167AC  26E1               	addwf	fsr1l,f,c
 18684  0167AE  0EFF               	movlw	255
 18685  0167B0  22E2               	addwfc	fsr1h,f,c
 18686  0167B2  0012               	return		;funcret
 18687  0167B4                     __end_of_floorf:
 18688                           	opt callstack 0
 18689                           
 18690 ;; *************** function ___fpclassifyf *****************
 18691 ;; Defined at:
 18692 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18693 ;; Parameters:    Size  Location     Type
 18694 ;;  x               4  [STACK] float 
 18695 ;; Auto vars:     Size  Location     Type
 18696 ;;  u               4  [STACK] struct .
 18697 ;;  e               2  [STACK] int 
 18698 ;; Return value:  Size  Location     Type
 18699 ;;                  2  [STACK] int 
 18700 ;; Registers used:
 18701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18702 ;; Tracked objects:
 18703 ;;		On entry : 0/0
 18704 ;;		On exit  : 0/0
 18705 ;;		Unchanged: 0/0
 18706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18711 ;;Total ram usage:        0 bytes
 18712 ;; Hardware stack levels used:    1
 18713 ;; Hardware stack levels required when called:   15
 18714 ;; This function calls:
 18715 ;;		Nothing
 18716 ;; This function is called by:
 18717 ;;		_efgtoa
 18718 ;; This function uses a reentrant model
 18719 ;;
 18720                           
 18721                           	psect	text62
 18722  0189A6                     __ptext62:
 18723                           	opt callstack 0
 18724  0189A6                     ___fpclassifyf:
 18725                           	opt callstack 0
 18726                           
 18727                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18728  0189A6  0E06               	movlw	6
 18729  0189A8  26E1               	addwf	fsr1l,f,c
 18730  0189AA  0E00               	movlw	0
 18731  0189AC  22E2               	addwfc	fsr1h,f,c
 18732                           
 18733                           ;incstack = 0
 18734 ;; hardware stack exceeded
 18735  0189AE  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18736  0189B4  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18737  0189BA  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18738  0189C0  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18739                           
 18740                           ;stkvar	_u @ sp[(-6)+0]
 18741  0189C6  0EFA               	movlw	-6
 18742  0189C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18743  0189CE  0EFB               	movlw	-5
 18744  0189D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18745  0189D6  0EFC               	movlw	-4
 18746  0189D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18747  0189DE  0EFD               	movlw	-3
 18748  0189E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18749                           
 18750                           ;stkvar	_x @ sp[(-6)+-4]
 18751  0189E6  0EF6               	movlw	-10
 18752  0189E8  006F FF8C  F009    	movff	plusw1,btemp+8
 18753  0189EE  0EF7               	movlw	-9
 18754  0189F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18755  0189F6  0EF8               	movlw	-8
 18756  0189F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18757  0189FE  0EF9               	movlw	-7
 18758  018A00  006F FF8C  F00C    	movff	plusw1,btemp+11
 18759                           
 18760                           ;stkvar	_u @ sp[(-6)+0]
 18761  018A06  0EFA               	movlw	-6
 18762  018A08  0060  F027  FFE3   	movff	btemp+8,plusw1
 18763  018A0E  0EFB               	movlw	-5
 18764  018A10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18765  018A16  0EFC               	movlw	-4
 18766  018A18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18767  018A1E  0EFD               	movlw	-3
 18768  018A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 18769                           
 18770                           ;stkvar	_u @ sp[(-6)+0]
 18771  018A26  0EFA               	movlw	-6
 18772  018A28  006F FF8C  F009    	movff	plusw1,btemp+8
 18773  018A2E  0EFB               	movlw	-5
 18774  018A30  006F FF8C  F00A    	movff	plusw1,btemp+9
 18775  018A36  0EFC               	movlw	-4
 18776  018A38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18777  018A3E  0EFD               	movlw	-3
 18778  018A40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18779  018A46  0E18               	movlw	24
 18780  018A48  D005               	goto	u6010
 18781  018A4A                     u6015:
 18782  018A4A  90D8               	bcf	status,0,c
 18783  018A4C  320C               	rrcf	(btemp+11)^0,f,c
 18784  018A4E  320B               	rrcf	(btemp+10)^0,f,c
 18785  018A50  320A               	rrcf	(btemp+9)^0,f,c
 18786  018A52  3209               	rrcf	(btemp+8)^0,f,c
 18787  018A54                     u6010:
 18788  018A54  2EE8               	decfsz	wreg,f,c
 18789  018A56  D7F9               	goto	u6015
 18790  018A58  0060  F024  F007   	movff	btemp+8,btemp+6
 18791  018A5E  0060  F028  F008   	movff	btemp+9,btemp+7
 18792  018A64  0EFF               	movlw	255
 18793  018A66  1607               	andwf	(btemp+6)^0,f,c
 18794  018A68  0E00               	movlw	0
 18795  018A6A  1608               	andwf	(btemp+7)^0,f,c
 18796                           
 18797                           ;stkvar	_e @ sp[(-6)+4]
 18798  018A6C  0EFE               	movlw	-2
 18799  018A6E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18800  018A74  0EFF               	movlw	-1
 18801  018A76  0060  F023  FFE3   	movff	btemp+7,plusw1
 18802                           
 18803                           ;stkvar	_e @ sp[(-6)+4]
 18804  018A7C  0EFE               	movlw	-2
 18805  018A7E  006F FF8C  F001    	movff	plusw1,btemp
 18806  018A84  0EFF               	movlw	-1
 18807  018A86  50E3               	movf	plusw1,w,c
 18808  018A88  1001               	iorwf	btemp^0,w,c
 18809  018A8A  A4D8               	btfss	status,2,c
 18810  018A8C  D023               	goto	l8018
 18811                           
 18812                           ;stkvar	_u @ sp[(-6)+0]
 18813  018A8E  0EFA               	movlw	-6
 18814  018A90  006F FF8C  F009    	movff	plusw1,btemp+8
 18815  018A96  0EFB               	movlw	-5
 18816  018A98  006F FF8C  F00A    	movff	plusw1,btemp+9
 18817  018A9E  0EFC               	movlw	-4
 18818  018AA0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18819  018AA6  0EFD               	movlw	-3
 18820  018AA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18821  018AAE  90D8               	bcf	status,0,c
 18822  018AB0  3409               	rlcf	(btemp+8)^0,w,c
 18823  018AB2  6E05               	movwf	(btemp+4)^0,c
 18824  018AB4  340A               	rlcf	(btemp+9)^0,w,c
 18825  018AB6  6E06               	movwf	(btemp+5)^0,c
 18826  018AB8  340B               	rlcf	(btemp+10)^0,w,c
 18827  018ABA  6E07               	movwf	(btemp+6)^0,c
 18828  018ABC  340C               	rlcf	(btemp+11)^0,w,c
 18829  018ABE  6E08               	movwf	(btemp+7)^0,c
 18830  018AC0  5005               	movf	(btemp+4)^0,w,c
 18831  018AC2  1006               	iorwf	(btemp+5)^0,w,c
 18832  018AC4  1007               	iorwf	(btemp+6)^0,w,c
 18833  018AC6  1008               	iorwf	(btemp+7)^0,w,c
 18834  018AC8  A4D8               	btfss	status,2,c
 18835  018ACA  D002               	goto	l8014
 18836  018ACC  0E02               	movlw	2
 18837  018ACE  D02E               	goto	L21
 18838  018AD0                     l8014:
 18839  018AD0  0E03               	movlw	3
 18840  018AD2  D02C               	goto	L21
 18841  018AD4                     l8018:
 18842                           
 18843                           ;stkvar	_e @ sp[(-6)+4]
 18844  018AD4  0EFE               	movlw	-2
 18845  018AD6  28E3               	incf	plusw1,w,c
 18846  018AD8  E128               	bnz	l8024
 18847  018ADA  0EFF               	movlw	-1
 18848  018ADC  50E3               	movf	plusw1,w,c
 18849  018ADE  A4D8               	btfss	status,2,c
 18850  018AE0  D024               	goto	l8024
 18851                           
 18852                           ;stkvar	_u @ sp[(-6)+0]
 18853  018AE2  0EFA               	movlw	-6
 18854  018AE4  006F FF8C  F009    	movff	plusw1,btemp+8
 18855  018AEA  0EFB               	movlw	-5
 18856  018AEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18857  018AF2  0EFC               	movlw	-4
 18858  018AF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18859  018AFA  0EFD               	movlw	-3
 18860  018AFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18861  018B02  0E09               	movlw	9
 18862  018B04                     u6055:
 18863  018B04  90D8               	bcf	status,0,c
 18864  018B06  3609               	rlcf	(btemp+8)^0,f,c
 18865  018B08  360A               	rlcf	(btemp+9)^0,f,c
 18866  018B0A  360B               	rlcf	(btemp+10)^0,f,c
 18867  018B0C  360C               	rlcf	(btemp+11)^0,f,c
 18868  018B0E  2EE8               	decfsz	wreg,f,c
 18869  018B10  D7F9               	goto	u6055
 18870  018B12  5009               	movf	(btemp+8)^0,w,c
 18871  018B14  100A               	iorwf	(btemp+9)^0,w,c
 18872  018B16  100B               	iorwf	(btemp+10)^0,w,c
 18873  018B18  100C               	iorwf	(btemp+11)^0,w,c
 18874  018B1A  A4D8               	btfss	status,2,c
 18875  018B1C  D002               	goto	u6060
 18876  018B1E  0E01               	movlw	1
 18877  018B20  D001               	goto	u6070
 18878  018B22                     u6060:
 18879  018B22  0E00               	movlw	0
 18880  018B24                     u6070:
 18881  018B24  6E01               	movwf	btemp^0,c
 18882  018B26  6A02               	clrf	(btemp+1)^0,c
 18883  018B28  D004               	goto	l3076
 18884  018B2A                     l8024:
 18885  018B2A  0E04               	movlw	4
 18886  018B2C                     L21:
 18887  018B2C  6E01               	movwf	btemp^0,c
 18888  018B2E  0E00               	movlw	0
 18889  018B30  6E02               	movwf	(btemp+1)^0,c
 18890  018B32                     l3076:
 18891                           
 18892                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18893  018B32  0EF6               	movlw	246
 18894  018B34  26E1               	addwf	fsr1l,f,c
 18895  018B36  0EFF               	movlw	255
 18896  018B38  22E2               	addwfc	fsr1h,f,c
 18897  018B3A  0012               	return		;funcret
 18898  018B3C                     __end_of___fpclassifyf:
 18899                           	opt callstack 0
 18900                           
 18901 ;; *************** function ___fltol *****************
 18902 ;; Defined at:
 18903 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;  f1              4  [STACK] int 
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;  exp1            1  [STACK] unsigned char 
 18908 ;;  sign1           1  [STACK] unsigned char 
 18909 ;; Return value:  Size  Location     Type
 18910 ;;                  4  [STACK] long 
 18911 ;; Registers used:
 18912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18913 ;; Tracked objects:
 18914 ;;		On entry : 0/0
 18915 ;;		On exit  : 0/0
 18916 ;;		Unchanged: 0/0
 18917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18922 ;;Total ram usage:        0 bytes
 18923 ;; Hardware stack levels used:    1
 18924 ;; Hardware stack levels required when called:   15
 18925 ;; This function calls:
 18926 ;;		Nothing
 18927 ;; This function is called by:
 18928 ;;		_main
 18929 ;;		_calc_bsoc
 18930 ;;		_init_bsoc
 18931 ;;		_Volts_to_SOC
 18932 ;;		_efgtoa
 18933 ;; This function uses a reentrant model
 18934 ;;
 18935                           
 18936                           	psect	text63
 18937  018E42                     __ptext63:
 18938                           	opt callstack 0
 18939  018E42                     ___fltol:
 18940                           	opt callstack 0
 18941                           
 18942                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18943  018E42  52E6               	movf	postinc1,f,c
 18944  018E44  52E6               	movf	postinc1,f,c
 18945                           
 18946                           ;stkvar	_f1 @ sp[(-2)+-4]
 18947                           
 18948                           ;incstack = 0
 18949 ;; hardware stack exceeded
 18950  018E46  0EFA               	movlw	-6
 18951  018E48  006F FF8C  F009    	movff	plusw1,btemp+8
 18952  018E4E  0EFB               	movlw	-5
 18953  018E50  006F FF8C  F00A    	movff	plusw1,btemp+9
 18954  018E56  0EFC               	movlw	-4
 18955  018E58  006F FF8C  F00B    	movff	plusw1,btemp+10
 18956  018E5E  0EFD               	movlw	-3
 18957  018E60  006F FF8C  F00C    	movff	plusw1,btemp+11
 18958  018E66  0E18               	movlw	24
 18959  018E68  D005               	goto	u7220
 18960  018E6A                     u7225:
 18961  018E6A  90D8               	bcf	status,0,c
 18962  018E6C  320C               	rrcf	(btemp+11)^0,f,c
 18963  018E6E  320B               	rrcf	(btemp+10)^0,f,c
 18964  018E70  320A               	rrcf	(btemp+9)^0,f,c
 18965  018E72  3209               	rrcf	(btemp+8)^0,f,c
 18966  018E74                     u7220:
 18967  018E74  2EE8               	decfsz	wreg,f,c
 18968  018E76  D7F9               	goto	u7225
 18969                           
 18970                           ;stkvar	_exp1 @ sp[(-2)+0]
 18971  018E78  0EFE               	movlw	-2
 18972  018E7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18973  018E80  0EFE               	movlw	-2
 18974  018E82  50E3               	movf	plusw1,w,c
 18975  018E84  A4D8               	btfss	status,2,c
 18976  018E86  D006               	goto	l8644
 18977  018E88                     u7230:
 18978  018E88  0E00               	movlw	0
 18979  018E8A  6E01               	movwf	btemp^0,c
 18980  018E8C  6A02               	clrf	(btemp+1)^0,c
 18981  018E8E  6A03               	clrf	(btemp+2)^0,c
 18982  018E90  6A04               	clrf	(btemp+3)^0,c
 18983  018E92  D08B               	goto	l2692
 18984  018E94                     l8644:
 18985                           
 18986                           ;stkvar	_f1 @ sp[(-2)+-4]
 18987  018E94  0EFA               	movlw	-6
 18988  018E96  006F FF8C  F009    	movff	plusw1,btemp+8
 18989  018E9C  0EFB               	movlw	-5
 18990  018E9E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18991  018EA4  0EFC               	movlw	-4
 18992  018EA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18993  018EAC  0EFD               	movlw	-3
 18994  018EAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18995  018EB4  0E20               	movlw	32
 18996  018EB6  D005               	goto	u7240
 18997  018EB8                     u7245:
 18998  018EB8  90D8               	bcf	status,0,c
 18999  018EBA  320C               	rrcf	(btemp+11)^0,f,c
 19000  018EBC  320B               	rrcf	(btemp+10)^0,f,c
 19001  018EBE  320A               	rrcf	(btemp+9)^0,f,c
 19002  018EC0  3209               	rrcf	(btemp+8)^0,f,c
 19003  018EC2                     u7240:
 19004  018EC2  2EE8               	decfsz	wreg,f,c
 19005  018EC4  D7F9               	goto	u7245
 19006                           
 19007                           ;stkvar	_sign1 @ sp[(-2)+1]
 19008  018EC6  0EFF               	movlw	-1
 19009  018EC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19010                           
 19011                           ;stkvar	_f1 @ sp[(-2)+-4]
 19012  018ECE  0EFC               	movlw	-4
 19013  018ED0  8EE3               	bsf	plusw1,7,c
 19014                           
 19015                           ;stkvar	_f1 @ sp[(-2)+-4]
 19016  018ED2  50E1               	movf	fsr1l,w,c
 19017  018ED4  0FFA               	addlw	-6
 19018  018ED6  6ED9               	movwf	fsr2l,c
 19019  018ED8  50E2               	movf	fsr1h,w,c
 19020  018EDA  6EDA               	movwf	fsr2h,c
 19021  018EDC  0EFF               	movlw	255
 19022  018EDE  22DA               	addwfc	fsr2h,f,c
 19023  018EE0  0EFF               	movlw	255
 19024  018EE2  16DE               	andwf	postinc2,f,c
 19025  018EE4  0EFF               	movlw	255
 19026  018EE6  16DE               	andwf	postinc2,f,c
 19027  018EE8  0EFF               	movlw	255
 19028  018EEA  16DE               	andwf	postinc2,f,c
 19029  018EEC  0E00               	movlw	0
 19030  018EEE  16DE               	andwf	postinc2,f,c
 19031                           
 19032                           ;stkvar	_exp1 @ sp[(-2)+0]
 19033  018EF0  0EFE               	movlw	-2
 19034  018EF2  006F FF8C  F001    	movff	plusw1,btemp
 19035  018EF8  0E96               	movlw	150
 19036  018EFA  5E01               	subwf	btemp^0,f,c
 19037  018EFC  0EFE               	movlw	-2
 19038  018EFE  0060  F007  FFE3   	movff	btemp,plusw1
 19039                           
 19040                           ;stkvar	_exp1 @ sp[(-2)+0]
 19041  018F04  0EFE               	movlw	-2
 19042  018F06  AEE3               	btfss	plusw1,7,c
 19043  018F08  D014               	goto	l8662
 19044                           
 19045                           ;stkvar	_exp1 @ sp[(-2)+0]
 19046  018F0A  0EFE               	movlw	-2
 19047  018F0C  50E3               	movf	plusw1,w,c
 19048  018F0E  0A80               	xorlw	128
 19049  018F10  0F97               	addlw	151
 19050  018F12  A0D8               	btfss	status,0,c
 19051  018F14  D7B9               	goto	u7230
 19052  018F16                     l8660:
 19053                           
 19054                           ;stkvar	_f1 @ sp[(-2)+-4]
 19055  018F16  90D8               	bcf	status,0,c
 19056  018F18  0EFD               	movlw	-3
 19057  018F1A  32E3               	rrcf	plusw1,f,c
 19058  018F1C  0EFC               	movlw	-4
 19059  018F1E  32E3               	rrcf	plusw1,f,c
 19060  018F20  0EFB               	movlw	-5
 19061  018F22  32E3               	rrcf	plusw1,f,c
 19062  018F24  0EFA               	movlw	-6
 19063  018F26  32E3               	rrcf	plusw1,f,c
 19064                           
 19065                           ;stkvar	_exp1 @ sp[(-2)+0]
 19066  018F28  0EFE               	movlw	-2
 19067  018F2A  2AE3               	incf	plusw1,f,c
 19068  018F2C  B4D8               	btfsc	status,2,c
 19069  018F2E  D018               	goto	u7290
 19070  018F30  D7F2               	goto	l8660
 19071  018F32                     l8662:
 19072                           
 19073                           ;stkvar	_exp1 @ sp[(-2)+0]
 19074  018F32  0EFE               	movlw	-2
 19075  018F34  006F FF8C  F001    	movff	plusw1,btemp
 19076  018F3A  0E1F               	movlw	31
 19077  018F3C  6401               	cpfsgt	btemp^0,c
 19078  018F3E  D00C               	goto	l8670
 19079  018F40  D7A3               	goto	u7230
 19080  018F42                     l8668:
 19081                           
 19082                           ;stkvar	_f1 @ sp[(-2)+-4]
 19083  018F42  90D8               	bcf	status,0,c
 19084  018F44  0EFA               	movlw	-6
 19085  018F46  36E3               	rlcf	plusw1,f,c
 19086  018F48  0EFB               	movlw	-5
 19087  018F4A  36E3               	rlcf	plusw1,f,c
 19088  018F4C  0EFC               	movlw	-4
 19089  018F4E  36E3               	rlcf	plusw1,f,c
 19090  018F50  0EFD               	movlw	-3
 19091  018F52  36E3               	rlcf	plusw1,f,c
 19092                           
 19093                           ;stkvar	_exp1 @ sp[(-2)+0]
 19094  018F54  0EFE               	movlw	-2
 19095  018F56  06E3               	decf	plusw1,f,c
 19096  018F58                     l8670:
 19097                           
 19098                           ;stkvar	_exp1 @ sp[(-2)+0]
 19099  018F58  0EFE               	movlw	-2
 19100  018F5A  50E3               	movf	plusw1,w,c
 19101  018F5C  A4D8               	btfss	status,2,c
 19102  018F5E  D7F1               	goto	l8668
 19103  018F60                     u7290:
 19104                           
 19105                           ;stkvar	_sign1 @ sp[(-2)+1]
 19106  018F60  0EFF               	movlw	-1
 19107  018F62  50E3               	movf	plusw1,w,c
 19108  018F64  B4D8               	btfsc	status,2,c
 19109  018F66  D011               	goto	u7310
 19110                           
 19111                           ;stkvar	_f1 @ sp[(-2)+-4]
 19112                           ;stkvar	_f1 @ sp[(-2)+-4]
 19113  018F68  0EFA               	movlw	-6
 19114  018F6A  6CE3               	negf	plusw1,c
 19115  018F6C  0EFB               	movlw	-5
 19116  018F6E  1EE3               	comf	plusw1,f,c
 19117  018F70  0EFC               	movlw	-4
 19118  018F72  1EE3               	comf	plusw1,f,c
 19119  018F74  0EFD               	movlw	-3
 19120  018F76  1EE3               	comf	plusw1,f,c
 19121  018F78  E308               	bnc	u7310
 19122  018F7A  0EFB               	movlw	-5
 19123  018F7C  2AE3               	incf	plusw1,f,c
 19124  018F7E  E305               	bnc	u7310
 19125  018F80  0EFC               	movlw	-4
 19126  018F82  2AE3               	incf	plusw1,f,c
 19127  018F84  E302               	bnc	u7310
 19128  018F86  0EFD               	movlw	-3
 19129  018F88  2AE3               	incf	plusw1,f,c
 19130  018F8A                     u7310:
 19131                           
 19132                           ;stkvar	_f1 @ sp[(-2)+-4]
 19133  018F8A  0EFA               	movlw	-6
 19134  018F8C  006F FF8C  F001    	movff	plusw1,btemp
 19135  018F92  0EFB               	movlw	-5
 19136  018F94  006F FF8C  F002    	movff	plusw1,btemp+1
 19137  018F9A  0EFC               	movlw	-4
 19138  018F9C  006F FF8C  F003    	movff	plusw1,btemp+2
 19139  018FA2  0EFD               	movlw	-3
 19140  018FA4  006F FF8C  F004    	movff	plusw1,btemp+3
 19141  018FAA                     l2692:
 19142                           
 19143                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19144  018FAA  0EFA               	movlw	250
 19145  018FAC  26E1               	addwf	fsr1l,f,c
 19146  018FAE  0EFF               	movlw	255
 19147  018FB0  22E2               	addwfc	fsr1h,f,c
 19148  018FB2  0012               	return		;funcret
 19149  018FB4                     __end_of___fltol:
 19150                           	opt callstack 0
 19151                           
 19152 ;; *************** function ___flneg *****************
 19153 ;; Defined at:
 19154 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19155 ;; Parameters:    Size  Location     Type
 19156 ;;  f1              4  [STACK] long 
 19157 ;; Auto vars:     Size  Location     Type
 19158 ;;		None
 19159 ;; Return value:  Size  Location     Type
 19160 ;;                  4  [STACK] long 
 19161 ;; Registers used:
 19162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19163 ;; Tracked objects:
 19164 ;;		On entry : 0/0
 19165 ;;		On exit  : 0/0
 19166 ;;		Unchanged: 0/0
 19167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19172 ;;Total ram usage:        0 bytes
 19173 ;; Hardware stack levels used:    1
 19174 ;; Hardware stack levels required when called:   15
 19175 ;; This function calls:
 19176 ;;		Nothing
 19177 ;; This function is called by:
 19178 ;;		_calc_bsoc
 19179 ;;		_efgtoa
 19180 ;; This function uses a reentrant model
 19181 ;;
 19182                           
 19183                           	psect	text64
 19184  01B450                     __ptext64:
 19185                           	opt callstack 0
 19186  01B450                     ___flneg:
 19187                           	opt callstack 0
 19188                           
 19189                           ;stkvar	_f1 @ sp[(0)+-4]
 19190                           
 19191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19192                           ;incstack = 0
 19193 ;; hardware stack exceeded
 19194  01B450  0EFC               	movlw	-4
 19195  01B452  50E3               	movf	plusw1,w,c
 19196  01B454  E10A               	bnz	u7210
 19197  01B456  0EFD               	movlw	-3
 19198  01B458  50E3               	movf	plusw1,w,c
 19199  01B45A  E107               	bnz	u7210
 19200  01B45C  0EFE               	movlw	-2
 19201  01B45E  50E3               	movf	plusw1,w,c
 19202  01B460  E104               	bnz	u7210
 19203  01B462  0EFF               	movlw	-1
 19204  01B464  50E3               	movf	plusw1,w,c
 19205  01B466  B4D8               	btfsc	status,2,c
 19206  01B468  D002               	goto	l8634
 19207  01B46A                     u7210:
 19208                           
 19209                           ;stkvar	_f1 @ sp[(0)+-4]
 19210  01B46A  0EFF               	movlw	-1
 19211  01B46C  7EE3               	btg	plusw1,7,c
 19212  01B46E                     l8634:
 19213                           
 19214                           ;stkvar	_f1 @ sp[(0)+-4]
 19215  01B46E  0EFC               	movlw	-4
 19216  01B470  006F FF8C  F001    	movff	plusw1,btemp
 19217  01B476  0EFD               	movlw	-3
 19218  01B478  006F FF8C  F002    	movff	plusw1,btemp+1
 19219  01B47E  0EFE               	movlw	-2
 19220  01B480  006F FF8C  F003    	movff	plusw1,btemp+2
 19221  01B486  0EFF               	movlw	-1
 19222  01B488  006F FF8C  F004    	movff	plusw1,btemp+3
 19223                           
 19224                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19225  01B48E  52E5               	movf	postdec1,f,c
 19226  01B490  52E5               	movf	postdec1,f,c
 19227  01B492  52E5               	movf	postdec1,f,c
 19228  01B494  52E5               	movf	postdec1,f,c
 19229  01B496  0012               	return		;funcret
 19230  01B498                     __end_of___flneg:
 19231                           	opt callstack 0
 19232                           
 19233 ;; *************** function ___fleq *****************
 19234 ;; Defined at:
 19235 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;  ff1             4  [STACK] long 
 19238 ;;  ff2             4  [STACK] long 
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;		None
 19241 ;; Return value:  Size  Location     Type
 19242 ;;		None               void
 19243 ;; Registers used:
 19244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19254 ;;Total ram usage:        0 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:   15
 19257 ;; This function calls:
 19258 ;;		Nothing
 19259 ;; This function is called by:
 19260 ;;		_efgtoa
 19261 ;; This function uses a reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text65
 19265  01A44A                     __ptext65:
 19266                           	opt callstack 0
 19267  01A44A                     ___fleq:
 19268                           	opt callstack 0
 19269                           
 19270                           ;stkvar	_ff1 @ sp[(0)+-4]
 19271                           
 19272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19273                           ;incstack = 0
 19274 ;; hardware stack exceeded
 19275  01A44A  50E1               	movf	fsr1l,w,c
 19276  01A44C  0FFC               	addlw	-4
 19277  01A44E  6ED9               	movwf	fsr2l,c
 19278  01A450  50E2               	movf	fsr1h,w,c
 19279  01A452  6EDA               	movwf	fsr2h,c
 19280  01A454  0EFF               	movlw	255
 19281  01A456  22DA               	addwfc	fsr2h,f,c
 19282  01A458  0E00               	movlw	0
 19283  01A45A  14DE               	andwf	postinc2,w,c
 19284  01A45C  6E09               	movwf	(btemp+8)^0,c
 19285  01A45E  0E00               	movlw	0
 19286  01A460  14DE               	andwf	postinc2,w,c
 19287  01A462  6E0A               	movwf	(btemp+9)^0,c
 19288  01A464  0E80               	movlw	128
 19289  01A466  14DE               	andwf	postinc2,w,c
 19290  01A468  6E0B               	movwf	(btemp+10)^0,c
 19291  01A46A  0E7F               	movlw	127
 19292  01A46C  14DE               	andwf	postinc2,w,c
 19293  01A46E  6E0C               	movwf	(btemp+11)^0,c
 19294  01A470  5009               	movf	(btemp+8)^0,w,c
 19295  01A472  100A               	iorwf	(btemp+9)^0,w,c
 19296  01A474  100B               	iorwf	(btemp+10)^0,w,c
 19297  01A476  100C               	iorwf	(btemp+11)^0,w,c
 19298  01A478  A4D8               	btfss	status,2,c
 19299  01A47A  D008               	goto	l8592
 19300                           
 19301                           ;stkvar	_ff1 @ sp[(0)+-4]
 19302  01A47C  0EFC               	movlw	-4
 19303  01A47E  6AE3               	clrf	plusw1,c
 19304  01A480  0EFD               	movlw	-3
 19305  01A482  6AE3               	clrf	plusw1,c
 19306  01A484  0EFE               	movlw	-2
 19307  01A486  6AE3               	clrf	plusw1,c
 19308  01A488  0EFF               	movlw	-1
 19309  01A48A  6AE3               	clrf	plusw1,c
 19310  01A48C                     l8592:
 19311                           
 19312                           ;stkvar	_ff2 @ sp[(0)+-8]
 19313  01A48C  50E1               	movf	fsr1l,w,c
 19314  01A48E  0FF8               	addlw	-8
 19315  01A490  6ED9               	movwf	fsr2l,c
 19316  01A492  50E2               	movf	fsr1h,w,c
 19317  01A494  6EDA               	movwf	fsr2h,c
 19318  01A496  0EFF               	movlw	255
 19319  01A498  22DA               	addwfc	fsr2h,f,c
 19320  01A49A  0E00               	movlw	0
 19321  01A49C  14DE               	andwf	postinc2,w,c
 19322  01A49E  6E09               	movwf	(btemp+8)^0,c
 19323  01A4A0  0E00               	movlw	0
 19324  01A4A2  14DE               	andwf	postinc2,w,c
 19325  01A4A4  6E0A               	movwf	(btemp+9)^0,c
 19326  01A4A6  0E80               	movlw	128
 19327  01A4A8  14DE               	andwf	postinc2,w,c
 19328  01A4AA  6E0B               	movwf	(btemp+10)^0,c
 19329  01A4AC  0E7F               	movlw	127
 19330  01A4AE  14DE               	andwf	postinc2,w,c
 19331  01A4B0  6E0C               	movwf	(btemp+11)^0,c
 19332  01A4B2  5009               	movf	(btemp+8)^0,w,c
 19333  01A4B4  100A               	iorwf	(btemp+9)^0,w,c
 19334  01A4B6  100B               	iorwf	(btemp+10)^0,w,c
 19335  01A4B8  100C               	iorwf	(btemp+11)^0,w,c
 19336  01A4BA  A4D8               	btfss	status,2,c
 19337  01A4BC  D008               	goto	l8596
 19338                           
 19339                           ;stkvar	_ff2 @ sp[(0)+-8]
 19340  01A4BE  0EF8               	movlw	-8
 19341  01A4C0  6AE3               	clrf	plusw1,c
 19342  01A4C2  0EF9               	movlw	-7
 19343  01A4C4  6AE3               	clrf	plusw1,c
 19344  01A4C6  0EFA               	movlw	-6
 19345  01A4C8  6AE3               	clrf	plusw1,c
 19346  01A4CA  0EFB               	movlw	-5
 19347  01A4CC  6AE3               	clrf	plusw1,c
 19348  01A4CE                     l8596:
 19349                           
 19350                           ;stkvar	_ff2 @ sp[(0)+-8]
 19351                           ;stkvar	_ff1 @ sp[(0)+-4]
 19352  01A4CE  50E1               	movf	fsr1l,w,c
 19353  01A4D0  0FFC               	addlw	-4
 19354  01A4D2  6ED9               	movwf	fsr2l,c
 19355  01A4D4  50E2               	movf	fsr1h,w,c
 19356  01A4D6  6EDA               	movwf	fsr2h,c
 19357  01A4D8  0EFF               	movlw	255
 19358  01A4DA  22DA               	addwfc	fsr2h,f,c
 19359  01A4DC  0EF8               	movlw	-8
 19360  01A4DE  50E3               	movf	plusw1,w,c
 19361  01A4E0  18DE               	xorwf	postinc2,w,c
 19362  01A4E2  E10D               	bnz	u7150
 19363  01A4E4  0EF9               	movlw	-7
 19364  01A4E6  50E3               	movf	plusw1,w,c
 19365  01A4E8  18DE               	xorwf	postinc2,w,c
 19366  01A4EA  E109               	bnz	u7150
 19367  01A4EC  0EFA               	movlw	-6
 19368  01A4EE  50E3               	movf	plusw1,w,c
 19369  01A4F0  18DE               	xorwf	postinc2,w,c
 19370  01A4F2  E105               	bnz	u7150
 19371  01A4F4  0EFB               	movlw	-5
 19372  01A4F6  50E3               	movf	plusw1,w,c
 19373  01A4F8  18DE               	xorwf	postinc2,w,c
 19374  01A4FA  B4D8               	btfsc	status,2,c
 19375  01A4FC  D002               	goto	l8600
 19376  01A4FE                     u7150:
 19377  01A4FE  9001               	bcf	btemp& (0+255),0,c
 19378  01A500  D001               	goto	l2654
 19379  01A502                     l8600:
 19380  01A502  8001               	bsf	btemp& (0+255),0,c
 19381  01A504                     l2654:
 19382                           
 19383                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19384  01A504  0EF8               	movlw	248
 19385  01A506  26E1               	addwf	fsr1l,f,c
 19386  01A508  0EFF               	movlw	255
 19387  01A50A  22E2               	addwfc	fsr1h,f,c
 19388  01A50C  0012               	return		;funcret
 19389  01A50E                     __end_of___fleq:
 19390                           	opt callstack 0
 19391                           
 19392 ;; *************** function ___awmod *****************
 19393 ;; Defined at:
 19394 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19395 ;; Parameters:    Size  Location     Type
 19396 ;;  dividend        2  [STACK] int 
 19397 ;;  divisor         2  [STACK] int 
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  sign            1  [STACK] unsigned char 
 19400 ;;  counter         1  [STACK] unsigned char 
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  2  [STACK] int 
 19403 ;; Registers used:
 19404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19405 ;; Tracked objects:
 19406 ;;		On entry : 0/0
 19407 ;;		On exit  : 0/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19414 ;;Total ram usage:        0 bytes
 19415 ;; Hardware stack levels used:    1
 19416 ;; Hardware stack levels required when called:   15
 19417 ;; This function calls:
 19418 ;;		Nothing
 19419 ;; This function is called by:
 19420 ;;		_efgtoa
 19421 ;; This function uses a reentrant model
 19422 ;;
 19423                           
 19424                           	psect	text66
 19425  0199B6                     __ptext66:
 19426                           	opt callstack 0
 19427  0199B6                     ___awmod:
 19428                           	opt callstack 0
 19429                           
 19430                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19431  0199B6  52E6               	movf	postinc1,f,c
 19432  0199B8  52E6               	movf	postinc1,f,c
 19433                           
 19434                           ;stkvar	_sign @ sp[(-2)+0]
 19435                           
 19436                           ;incstack = 0
 19437 ;; hardware stack exceeded
 19438  0199BA  0EFE               	movlw	-2
 19439  0199BC  6AE3               	clrf	plusw1,c
 19440                           
 19441                           ;stkvar	_dividend @ sp[(-2)+-2]
 19442  0199BE  0EFD               	movlw	-3
 19443  0199C0  AEE3               	btfss	plusw1,7,c
 19444  0199C2  D009               	goto	l8558
 19445                           
 19446                           ;stkvar	_dividend @ sp[(-2)+-2]
 19447                           ;stkvar	_dividend @ sp[(-2)+-2]
 19448  0199C4  0EFC               	movlw	-4
 19449  0199C6  6CE3               	negf	plusw1,c
 19450  0199C8  0EFD               	movlw	-3
 19451  0199CA  1EE3               	comf	plusw1,f,c
 19452  0199CC  B0D8               	btfsc	status,0,c
 19453  0199CE  2AE3               	incf	plusw1,f,c
 19454                           
 19455                           ;stkvar	_sign @ sp[(-2)+0]
 19456  0199D0  0EFE               	movlw	-2
 19457  0199D2  6AE3               	clrf	plusw1,c
 19458  0199D4  2AE3               	incf	plusw1,f,c
 19459  0199D6                     l8558:
 19460                           
 19461                           ;stkvar	_divisor @ sp[(-2)+-4]
 19462  0199D6  0EFB               	movlw	-5
 19463  0199D8  AEE3               	btfss	plusw1,7,c
 19464  0199DA  D006               	goto	l8562
 19465                           
 19466                           ;stkvar	_divisor @ sp[(-2)+-4]
 19467                           ;stkvar	_divisor @ sp[(-2)+-4]
 19468  0199DC  0EFA               	movlw	-6
 19469  0199DE  6CE3               	negf	plusw1,c
 19470  0199E0  0EFB               	movlw	-5
 19471  0199E2  1EE3               	comf	plusw1,f,c
 19472  0199E4  B0D8               	btfsc	status,0,c
 19473  0199E6  2AE3               	incf	plusw1,f,c
 19474  0199E8                     l8562:
 19475                           
 19476                           ;stkvar	_divisor @ sp[(-2)+-4]
 19477  0199E8  0EFA               	movlw	-6
 19478  0199EA  006F FF8C  F001    	movff	plusw1,btemp
 19479  0199F0  0EFB               	movlw	-5
 19480  0199F2  50E3               	movf	plusw1,w,c
 19481  0199F4  1001               	iorwf	btemp^0,w,c
 19482  0199F6  B4D8               	btfsc	status,2,c
 19483  0199F8  D053               	goto	u7110
 19484                           
 19485                           ;stkvar	_counter @ sp[(-2)+1]
 19486  0199FA  0EFF               	movlw	-1
 19487  0199FC  6AE3               	clrf	plusw1,c
 19488  0199FE  D012               	goto	L22
 19489  019A00                     l8566:
 19490                           
 19491                           ;stkvar	_divisor @ sp[(-2)+-4]
 19492  019A00  0EFA               	movlw	-6
 19493  019A02  50E3               	movf	plusw1,w,c
 19494  019A04  90D8               	bcf	status,0,c
 19495  019A06  34E8               	rlcf	wreg,w,c
 19496  019A08  6E01               	movwf	btemp^0,c
 19497  019A0A  0EFA               	movlw	-6
 19498  019A0C  0060  F007  FFE3   	movff	btemp,plusw1
 19499  019A12  0EFB               	movlw	-5
 19500  019A14  50E3               	movf	plusw1,w,c
 19501  019A16  34E8               	rlcf	wreg,w,c
 19502  019A18  6E01               	movwf	btemp^0,c
 19503  019A1A  0EFB               	movlw	-5
 19504  019A1C  0060  F007  FFE3   	movff	btemp,plusw1
 19505                           
 19506                           ;stkvar	_counter @ sp[(-2)+1]
 19507  019A22  0EFF               	movlw	-1
 19508  019A24                     L22:
 19509  019A24  2AE3               	incf	plusw1,f,c
 19510                           
 19511                           ;stkvar	_divisor @ sp[(-2)+-4]
 19512  019A26  0EFB               	movlw	-5
 19513  019A28  AEE3               	btfss	plusw1,7,c
 19514  019A2A  D7EA               	goto	l8566
 19515  019A2C                     u7090:
 19516                           
 19517                           ;stkvar	_divisor @ sp[(-2)+-4]
 19518  019A2C  0EFA               	movlw	-6
 19519  019A2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19520  019A34  0EFB               	movlw	-5
 19521  019A36  006F FF8C  F00C    	movff	plusw1,btemp+11
 19522                           
 19523                           ;stkvar	_dividend @ sp[(-2)+-2]
 19524  019A3C  0EFC               	movlw	-4
 19525  019A3E  006F FF8C  F009    	movff	plusw1,btemp+8
 19526  019A44  0EFD               	movlw	-3
 19527  019A46  006F FF8C  F00A    	movff	plusw1,btemp+9
 19528  019A4C  500B               	movf	(btemp+10)^0,w,c
 19529  019A4E  5C09               	subwf	(btemp+8)^0,w,c
 19530  019A50  500C               	movf	(btemp+11)^0,w,c
 19531  019A52  580A               	subwfb	(btemp+9)^0,w,c
 19532  019A54  A0D8               	btfss	status,0,c
 19533  019A56  D014               	goto	l8576
 19534                           
 19535                           ;stkvar	_divisor @ sp[(-2)+-4]
 19536                           ;stkvar	_dividend @ sp[(-2)+-2]
 19537  019A58  0EFC               	movlw	-4
 19538  019A5A  50E3               	movf	plusw1,w,c
 19539  019A5C  6E01               	movwf	btemp^0,c
 19540  019A5E  0EFA               	movlw	-6
 19541  019A60  50E3               	movf	plusw1,w,c
 19542  019A62  5E01               	subwf	btemp^0,f,c
 19543  019A64  0EFC               	movlw	-4
 19544  019A66  0060  F007  FFE3   	movff	btemp,plusw1
 19545  019A6C  0EFD               	movlw	-3
 19546  019A6E  50E3               	movf	plusw1,w,c
 19547  019A70  6E01               	movwf	btemp^0,c
 19548  019A72  0EFB               	movlw	-5
 19549  019A74  50E3               	movf	plusw1,w,c
 19550  019A76  5A01               	subwfb	btemp^0,f,c
 19551  019A78  0EFD               	movlw	-3
 19552  019A7A  0060  F007  FFE3   	movff	btemp,plusw1
 19553  019A80                     l8576:
 19554                           
 19555                           ;stkvar	_divisor @ sp[(-2)+-4]
 19556  019A80  90D8               	bcf	status,0,c
 19557  019A82  0EFB               	movlw	-5
 19558  019A84  32E3               	rrcf	plusw1,f,c
 19559  019A86  0EFA               	movlw	-6
 19560  019A88  32E3               	rrcf	plusw1,f,c
 19561                           
 19562                           ;stkvar	_counter @ sp[(-2)+1]
 19563  019A8A  0EFF               	movlw	-1
 19564  019A8C  50E3               	movf	plusw1,w,c
 19565  019A8E  6E01               	movwf	btemp^0,c
 19566  019A90  0E01               	movlw	1
 19567  019A92  5E01               	subwf	btemp^0,f,c
 19568  019A94  0EFF               	movlw	-1
 19569  019A96  0060  F007  FFE3   	movff	btemp,plusw1
 19570  019A9C  A4D8               	btfss	status,2,c
 19571  019A9E  D7C6               	goto	u7090
 19572  019AA0                     u7110:
 19573                           
 19574                           ;stkvar	_sign @ sp[(-2)+0]
 19575  019AA0  0EFE               	movlw	-2
 19576  019AA2  50E3               	movf	plusw1,w,c
 19577  019AA4  B4D8               	btfsc	status,2,c
 19578  019AA6  D006               	goto	l8584
 19579                           
 19580                           ;stkvar	_dividend @ sp[(-2)+-2]
 19581                           ;stkvar	_dividend @ sp[(-2)+-2]
 19582  019AA8  0EFC               	movlw	-4
 19583  019AAA  6CE3               	negf	plusw1,c
 19584  019AAC  0EFD               	movlw	-3
 19585  019AAE  1EE3               	comf	plusw1,f,c
 19586  019AB0  B0D8               	btfsc	status,0,c
 19587  019AB2  2AE3               	incf	plusw1,f,c
 19588  019AB4                     l8584:
 19589                           
 19590                           ;stkvar	_dividend @ sp[(-2)+-2]
 19591  019AB4  0EFC               	movlw	-4
 19592  019AB6  006F FF8C  F001    	movff	plusw1,btemp
 19593  019ABC  0EFD               	movlw	-3
 19594  019ABE  006F FF8C  F002    	movff	plusw1,btemp+1
 19595                           
 19596                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19597  019AC4  0EFA               	movlw	250
 19598  019AC6  26E1               	addwf	fsr1l,f,c
 19599  019AC8  0EFF               	movlw	255
 19600  019ACA  22E2               	addwfc	fsr1h,f,c
 19601  019ACC  0012               	return		;funcret
 19602  019ACE                     __end_of___awmod:
 19603                           	opt callstack 0
 19604                           
 19605 ;; *************** function ___awdiv *****************
 19606 ;; Defined at:
 19607 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19608 ;; Parameters:    Size  Location     Type
 19609 ;;  dividend        2  [STACK] int 
 19610 ;;  divisor         2  [STACK] int 
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;  quotient        2  [STACK] int 
 19613 ;;  sign            1  [STACK] unsigned char 
 19614 ;;  counter         1  [STACK] unsigned char 
 19615 ;; Return value:  Size  Location     Type
 19616 ;;                  2  [STACK] int 
 19617 ;; Registers used:
 19618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19619 ;; Tracked objects:
 19620 ;;		On entry : 0/0
 19621 ;;		On exit  : 0/0
 19622 ;;		Unchanged: 0/0
 19623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19628 ;;Total ram usage:        0 bytes
 19629 ;; Hardware stack levels used:    1
 19630 ;; Hardware stack levels required when called:   15
 19631 ;; This function calls:
 19632 ;;		Nothing
 19633 ;; This function is called by:
 19634 ;;		_efgtoa
 19635 ;; This function uses a reentrant model
 19636 ;;
 19637                           
 19638                           	psect	text67
 19639  01927A                     __ptext67:
 19640                           	opt callstack 0
 19641  01927A                     ___awdiv:
 19642                           	opt callstack 0
 19643                           
 19644                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19645  01927A  52E6               	movf	postinc1,f,c
 19646  01927C  52E6               	movf	postinc1,f,c
 19647  01927E  52E6               	movf	postinc1,f,c
 19648  019280  52E6               	movf	postinc1,f,c
 19649                           
 19650                           ;stkvar	_sign @ sp[(-4)+2]
 19651                           
 19652                           ;incstack = 0
 19653 ;; hardware stack exceeded
 19654  019282  0EFE               	movlw	-2
 19655  019284  6AE3               	clrf	plusw1,c
 19656                           
 19657                           ;stkvar	_divisor @ sp[(-4)+-4]
 19658  019286  0EF9               	movlw	-7
 19659  019288  AEE3               	btfss	plusw1,7,c
 19660  01928A  D009               	goto	l8512
 19661                           
 19662                           ;stkvar	_divisor @ sp[(-4)+-4]
 19663                           ;stkvar	_divisor @ sp[(-4)+-4]
 19664  01928C  0EF8               	movlw	-8
 19665  01928E  6CE3               	negf	plusw1,c
 19666  019290  0EF9               	movlw	-7
 19667  019292  1EE3               	comf	plusw1,f,c
 19668  019294  B0D8               	btfsc	status,0,c
 19669  019296  2AE3               	incf	plusw1,f,c
 19670                           
 19671                           ;stkvar	_sign @ sp[(-4)+2]
 19672  019298  0EFE               	movlw	-2
 19673  01929A  6AE3               	clrf	plusw1,c
 19674  01929C  2AE3               	incf	plusw1,f,c
 19675  01929E                     l8512:
 19676                           
 19677                           ;stkvar	_dividend @ sp[(-4)+-2]
 19678  01929E  0EFB               	movlw	-5
 19679  0192A0  AEE3               	btfss	plusw1,7,c
 19680  0192A2  D008               	goto	l8518
 19681                           
 19682                           ;stkvar	_dividend @ sp[(-4)+-2]
 19683                           ;stkvar	_dividend @ sp[(-4)+-2]
 19684  0192A4  0EFA               	movlw	-6
 19685  0192A6  6CE3               	negf	plusw1,c
 19686  0192A8  0EFB               	movlw	-5
 19687  0192AA  1EE3               	comf	plusw1,f,c
 19688  0192AC  B0D8               	btfsc	status,0,c
 19689  0192AE  2AE3               	incf	plusw1,f,c
 19690                           
 19691                           ;stkvar	_sign @ sp[(-4)+2]
 19692  0192B0  0EFE               	movlw	-2
 19693  0192B2  70E3               	btg	plusw1,0,c
 19694  0192B4                     l8518:
 19695                           
 19696                           ;stkvar	_quotient @ sp[(-4)+0]
 19697  0192B4  0EFC               	movlw	-4
 19698  0192B6  6AE3               	clrf	plusw1,c
 19699  0192B8  0EFD               	movlw	-3
 19700  0192BA  6AE3               	clrf	plusw1,c
 19701                           
 19702                           ;stkvar	_divisor @ sp[(-4)+-4]
 19703  0192BC  0EF8               	movlw	-8
 19704  0192BE  006F FF8C  F001    	movff	plusw1,btemp
 19705  0192C4  0EF9               	movlw	-7
 19706  0192C6  50E3               	movf	plusw1,w,c
 19707  0192C8  1001               	iorwf	btemp^0,w,c
 19708  0192CA  B4D8               	btfsc	status,2,c
 19709  0192CC  D066               	goto	u7040
 19710                           
 19711                           ;stkvar	_counter @ sp[(-4)+3]
 19712  0192CE  0EFF               	movlw	-1
 19713  0192D0  6AE3               	clrf	plusw1,c
 19714  0192D2  D012               	goto	L23
 19715  0192D4                     l8524:
 19716                           
 19717                           ;stkvar	_divisor @ sp[(-4)+-4]
 19718  0192D4  0EF8               	movlw	-8
 19719  0192D6  50E3               	movf	plusw1,w,c
 19720  0192D8  90D8               	bcf	status,0,c
 19721  0192DA  34E8               	rlcf	wreg,w,c
 19722  0192DC  6E01               	movwf	btemp^0,c
 19723  0192DE  0EF8               	movlw	-8
 19724  0192E0  0060  F007  FFE3   	movff	btemp,plusw1
 19725  0192E6  0EF9               	movlw	-7
 19726  0192E8  50E3               	movf	plusw1,w,c
 19727  0192EA  34E8               	rlcf	wreg,w,c
 19728  0192EC  6E01               	movwf	btemp^0,c
 19729  0192EE  0EF9               	movlw	-7
 19730  0192F0  0060  F007  FFE3   	movff	btemp,plusw1
 19731                           
 19732                           ;stkvar	_counter @ sp[(-4)+3]
 19733  0192F6  0EFF               	movlw	-1
 19734  0192F8                     L23:
 19735  0192F8  2AE3               	incf	plusw1,f,c
 19736                           
 19737                           ;stkvar	_divisor @ sp[(-4)+-4]
 19738  0192FA  0EF9               	movlw	-7
 19739  0192FC  AEE3               	btfss	plusw1,7,c
 19740  0192FE  D7EA               	goto	l8524
 19741  019300                     u7020:
 19742                           
 19743                           ;stkvar	_quotient @ sp[(-4)+0]
 19744  019300  0EFC               	movlw	-4
 19745  019302  50E3               	movf	plusw1,w,c
 19746  019304  90D8               	bcf	status,0,c
 19747  019306  34E8               	rlcf	wreg,w,c
 19748  019308  6E01               	movwf	btemp^0,c
 19749  01930A  0EFC               	movlw	-4
 19750  01930C  0060  F007  FFE3   	movff	btemp,plusw1
 19751  019312  0EFD               	movlw	-3
 19752  019314  50E3               	movf	plusw1,w,c
 19753  019316  34E8               	rlcf	wreg,w,c
 19754  019318  6E01               	movwf	btemp^0,c
 19755  01931A  0EFD               	movlw	-3
 19756  01931C  0060  F007  FFE3   	movff	btemp,plusw1
 19757                           
 19758                           ;stkvar	_divisor @ sp[(-4)+-4]
 19759  019322  0EF8               	movlw	-8
 19760  019324  006F FF8C  F00B    	movff	plusw1,btemp+10
 19761  01932A  0EF9               	movlw	-7
 19762  01932C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19763                           
 19764                           ;stkvar	_dividend @ sp[(-4)+-2]
 19765  019332  0EFA               	movlw	-6
 19766  019334  006F FF8C  F009    	movff	plusw1,btemp+8
 19767  01933A  0EFB               	movlw	-5
 19768  01933C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19769  019342  500B               	movf	(btemp+10)^0,w,c
 19770  019344  5C09               	subwf	(btemp+8)^0,w,c
 19771  019346  500C               	movf	(btemp+11)^0,w,c
 19772  019348  580A               	subwfb	(btemp+9)^0,w,c
 19773  01934A  A0D8               	btfss	status,0,c
 19774  01934C  D016               	goto	l8538
 19775                           
 19776                           ;stkvar	_divisor @ sp[(-4)+-4]
 19777                           ;stkvar	_dividend @ sp[(-4)+-2]
 19778  01934E  0EFA               	movlw	-6
 19779  019350  50E3               	movf	plusw1,w,c
 19780  019352  6E01               	movwf	btemp^0,c
 19781  019354  0EF8               	movlw	-8
 19782  019356  50E3               	movf	plusw1,w,c
 19783  019358  5E01               	subwf	btemp^0,f,c
 19784  01935A  0EFA               	movlw	-6
 19785  01935C  0060  F007  FFE3   	movff	btemp,plusw1
 19786  019362  0EFB               	movlw	-5
 19787  019364  50E3               	movf	plusw1,w,c
 19788  019366  6E01               	movwf	btemp^0,c
 19789  019368  0EF9               	movlw	-7
 19790  01936A  50E3               	movf	plusw1,w,c
 19791  01936C  5A01               	subwfb	btemp^0,f,c
 19792  01936E  0EFB               	movlw	-5
 19793  019370  0060  F007  FFE3   	movff	btemp,plusw1
 19794                           
 19795                           ;stkvar	_quotient @ sp[(-4)+0]
 19796  019376  0EFC               	movlw	-4
 19797  019378  80E3               	bsf	plusw1,0,c
 19798  01937A                     l8538:
 19799                           
 19800                           ;stkvar	_divisor @ sp[(-4)+-4]
 19801  01937A  90D8               	bcf	status,0,c
 19802  01937C  0EF9               	movlw	-7
 19803  01937E  32E3               	rrcf	plusw1,f,c
 19804  019380  0EF8               	movlw	-8
 19805  019382  32E3               	rrcf	plusw1,f,c
 19806                           
 19807                           ;stkvar	_counter @ sp[(-4)+3]
 19808  019384  0EFF               	movlw	-1
 19809  019386  50E3               	movf	plusw1,w,c
 19810  019388  6E01               	movwf	btemp^0,c
 19811  01938A  0E01               	movlw	1
 19812  01938C  5E01               	subwf	btemp^0,f,c
 19813  01938E  0EFF               	movlw	-1
 19814  019390  0060  F007  FFE3   	movff	btemp,plusw1
 19815  019396  A4D8               	btfss	status,2,c
 19816  019398  D7B3               	goto	u7020
 19817  01939A                     u7040:
 19818                           
 19819                           ;stkvar	_sign @ sp[(-4)+2]
 19820  01939A  0EFE               	movlw	-2
 19821  01939C  50E3               	movf	plusw1,w,c
 19822  01939E  B4D8               	btfsc	status,2,c
 19823  0193A0  D006               	goto	l8546
 19824                           
 19825                           ;stkvar	_quotient @ sp[(-4)+0]
 19826                           ;stkvar	_quotient @ sp[(-4)+0]
 19827  0193A2  0EFC               	movlw	-4
 19828  0193A4  6CE3               	negf	plusw1,c
 19829  0193A6  0EFD               	movlw	-3
 19830  0193A8  1EE3               	comf	plusw1,f,c
 19831  0193AA  B0D8               	btfsc	status,0,c
 19832  0193AC  2AE3               	incf	plusw1,f,c
 19833  0193AE                     l8546:
 19834                           
 19835                           ;stkvar	_quotient @ sp[(-4)+0]
 19836  0193AE  0EFC               	movlw	-4
 19837  0193B0  006F FF8C  F001    	movff	plusw1,btemp
 19838  0193B6  0EFD               	movlw	-3
 19839  0193B8  006F FF8C  F002    	movff	plusw1,btemp+1
 19840                           
 19841                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19842  0193BE  0EF8               	movlw	248
 19843  0193C0  26E1               	addwf	fsr1l,f,c
 19844  0193C2  0EFF               	movlw	255
 19845  0193C4  22E2               	addwfc	fsr1h,f,c
 19846  0193C6  0012               	return		;funcret
 19847  0193C8                     __end_of___awdiv:
 19848                           	opt callstack 0
 19849                           
 19850 ;; *************** function _dtoa *****************
 19851 ;; Defined at:
 19852 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19853 ;; Parameters:    Size  Location     Type
 19854 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19855 ;;		 -> f(6), NULL(0), 
 19856 ;;  d               8  [STACK] long long 
 19857 ;; Auto vars:     Size  Location     Type
 19858 ;;  n               8  [STACK] long long 
 19859 ;;  i               2  [STACK] int 
 19860 ;;  s               2  [STACK] int 
 19861 ;;  w               2  [STACK] int 
 19862 ;;  p               2  [STACK] int 
 19863 ;; Return value:  Size  Location     Type
 19864 ;;                  2  [STACK] int 
 19865 ;; Registers used:
 19866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19867 ;; Tracked objects:
 19868 ;;		On entry : 0/0
 19869 ;;		On exit  : 0/0
 19870 ;;		Unchanged: 0/0
 19871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19876 ;;Total ram usage:        0 bytes
 19877 ;; Hardware stack levels used:    1
 19878 ;; Hardware stack levels required when called:   20
 19879 ;; This function calls:
 19880 ;;		___aodiv
 19881 ;;		___aomod
 19882 ;;		_abs
 19883 ;;		_pad
 19884 ;; This function is called by:
 19885 ;;		_vfpfcnvrt
 19886 ;; This function uses a reentrant model
 19887 ;;
 19888                           
 19889                           	psect	text68
 19890  0157C2                     __ptext68:
 19891                           	opt callstack 0
 19892  0157C2                     _dtoa:
 19893                           	opt callstack 0
 19894                           
 19895                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19896  0157C2  0E12               	movlw	18
 19897  0157C4  26E1               	addwf	fsr1l,f,c
 19898  0157C6  0E00               	movlw	0
 19899  0157C8  22E2               	addwfc	fsr1h,f,c
 19900                           
 19901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19902                           ;stkvar	_d @ sp[(-18)+-10]
 19903                           
 19904                           ;incstack = 0
 19905 ;; hardware stack exceeded
 19906  0157CA  0EE4               	movlw	228
 19907  0157CC  24E1               	addwf	fsr1l,w,c
 19908  0157CE  6ED9               	movwf	fsr2l,c
 19909  0157D0  0EFF               	movlw	255
 19910  0157D2  20E2               	addwfc	fsr1h,w,c
 19911  0157D4  6EDA               	movwf	fsr2h,c
 19912                           
 19913                           ;stkvar	_n @ sp[(-18)+2]
 19914  0157D6  0E08               	movlw	8
 19915  0157D8  6E01               	movwf	btemp^0,c
 19916  0157DA  0EF0               	movlw	-16
 19917  0157DC                     us1092999:
 19918  0157DC  006F FF7B FFE3     	movff	postinc2,plusw1
 19919  0157E2  28E8               	incf	wreg,w,c
 19920  0157E4  2E01               	decfsz	btemp^0,f,c
 19921  0157E6  D7FA               	bra	us1092999
 19922                           
 19923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19924                           ;stkvar	_n @ sp[(-18)+2]
 19925  0157E8  0EF7               	movlw	-9
 19926  0157EA  AEE3               	btfss	plusw1,7,c
 19927  0157EC  D002               	goto	u10930
 19928  0157EE  0E01               	movlw	1
 19929  0157F0  D001               	goto	u10940
 19930  0157F2                     u10930:
 19931  0157F2  0E00               	movlw	0
 19932  0157F4                     u10940:
 19933  0157F4  6E0B               	movwf	(btemp+10)^0,c
 19934  0157F6  6A0C               	clrf	(btemp+11)^0,c
 19935                           
 19936                           ;stkvar	_s @ sp[(-18)+12]
 19937  0157F8  0EFA               	movlw	-6
 19938  0157FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19939  015800  0EFB               	movlw	-5
 19940  015802  0060  F033  FFE3   	movff	btemp+11,plusw1
 19941                           
 19942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19943                           ;stkvar	_s @ sp[(-18)+12]
 19944  015808  0EFA               	movlw	-6
 19945  01580A  006F FF8C  F001    	movff	plusw1,btemp
 19946  015810  0EFB               	movlw	-5
 19947  015812  50E3               	movf	plusw1,w,c
 19948  015814  1001               	iorwf	btemp^0,w,c
 19949  015816  B4D8               	btfsc	status,2,c
 19950  015818  D025               	goto	u10960
 19951                           
 19952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19953                           ;stkvar	_n @ sp[(-18)+2]
 19954                           ;stkvar	_n @ sp[(-18)+2]
 19955  01581A  0EF0               	movlw	-16
 19956  01581C  6CE3               	negf	plusw1,c
 19957  01581E  0EF1               	movlw	-15
 19958  015820  1EE3               	comf	plusw1,f,c
 19959  015822  0EF2               	movlw	-14
 19960  015824  1EE3               	comf	plusw1,f,c
 19961  015826  0EF3               	movlw	-13
 19962  015828  1EE3               	comf	plusw1,f,c
 19963  01582A  0EF4               	movlw	-12
 19964  01582C  1EE3               	comf	plusw1,f,c
 19965  01582E  0EF5               	movlw	-11
 19966  015830  1EE3               	comf	plusw1,f,c
 19967  015832  0EF6               	movlw	-10
 19968  015834  1EE3               	comf	plusw1,f,c
 19969  015836  0EF7               	movlw	-9
 19970  015838  1EE3               	comf	plusw1,f,c
 19971  01583A  E314               	bnc	u10960
 19972  01583C  0EF1               	movlw	-15
 19973  01583E  2AE3               	incf	plusw1,f,c
 19974  015840  E311               	bnc	u10960
 19975  015842  0EF2               	movlw	-14
 19976  015844  2AE3               	incf	plusw1,f,c
 19977  015846  E30E               	bnc	u10960
 19978  015848  0EF3               	movlw	-13
 19979  01584A  2AE3               	incf	plusw1,f,c
 19980  01584C  E30B               	bnc	u10960
 19981  01584E  0EF4               	movlw	-12
 19982  015850  2AE3               	incf	plusw1,f,c
 19983  015852  E308               	bnc	u10960
 19984  015854  0EF5               	movlw	-11
 19985  015856  2AE3               	incf	plusw1,f,c
 19986  015858  E305               	bnc	u10960
 19987  01585A  0EF6               	movlw	-10
 19988  01585C  2AE3               	incf	plusw1,f,c
 19989  01585E  E302               	bnc	u10960
 19990  015860  0EF7               	movlw	-9
 19991  015862  2AE3               	incf	plusw1,f,c
 19992  015864                     u10960:
 19993                           
 19994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19995  015864  AE3D               	btfss	(_prec+1)^0,7,c
 19996                           
 19997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19998  015866  923E               	bcf	_flags^0,1,c
 19999                           
 20000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20001  015868  BE3D               	btfsc	(_prec+1)^0,7,c
 20002  01586A  D005               	goto	u10980
 20003  01586C  503D               	movf	(_prec+1)^0,w,c
 20004  01586E  E110               	bnz	l11938
 20005  015870  043C               	decf	_prec^0,w,c
 20006  015872  B0D8               	btfsc	status,0,c
 20007  015874  D00D               	goto	l11938
 20008  015876                     u10980:
 20009  015876  0E01               	movlw	1
 20010  015878  6E0B               	movwf	(btemp+10)^0,c
 20011  01587A  0E00               	movlw	0
 20012  01587C  6E0C               	movwf	(btemp+11)^0,c
 20013                           
 20014                           ;stkvar	_p @ sp[(-18)+16]
 20015  01587E  0EFE               	movlw	-2
 20016  015880  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20017  015886  0EFF               	movlw	-1
 20018  015888  0060  F033  FFE3   	movff	btemp+11,plusw1
 20019  01588E  D008               	goto	l2158
 20020  015890                     l11938:
 20021                           
 20022                           ;stkvar	_p @ sp[(-18)+16]
 20023  015890  0EFE               	movlw	-2
 20024  015892  0060  F0F3  FFE3   	movff	_prec,plusw1
 20025  015898  0EFF               	movlw	-1
 20026  01589A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20027  0158A0                     l2158:
 20028                           
 20029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20030                           ;stkvar	_w @ sp[(-18)+14]
 20031  0158A0  0EFC               	movlw	-4
 20032  0158A2  0060  F0EB  FFE3   	movff	_width,plusw1
 20033  0158A8  0EFD               	movlw	-3
 20034  0158AA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20035                           
 20036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20037                           ;stkvar	_s @ sp[(-18)+12]
 20038  0158B0  0EFA               	movlw	-6
 20039  0158B2  006F FF8C  F001    	movff	plusw1,btemp
 20040  0158B8  0EFB               	movlw	-5
 20041  0158BA  50E3               	movf	plusw1,w,c
 20042  0158BC  1001               	iorwf	btemp^0,w,c
 20043  0158BE  A4D8               	btfss	status,2,c
 20044  0158C0  D002               	goto	u11000
 20045  0158C2  A43E               	btfss	_flags^0,2,c
 20046  0158C4  D00A               	goto	l11946
 20047  0158C6                     u11000:
 20048                           
 20049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20050                           ;stkvar	_w @ sp[(-18)+14]
 20051  0158C6  50E1               	movf	fsr1l,w,c
 20052  0158C8  0FFC               	addlw	-4
 20053  0158CA  6ED9               	movwf	fsr2l,c
 20054  0158CC  50E2               	movf	fsr1h,w,c
 20055  0158CE  6EDA               	movwf	fsr2h,c
 20056  0158D0  0EFF               	movlw	255
 20057  0158D2  22DA               	addwfc	fsr2h,f,c
 20058  0158D4  06DE               	decf	postinc2,f,c
 20059  0158D6  0E00               	movlw	0
 20060  0158D8  5ADD               	subwfb	postdec2,f,c
 20061  0158DA                     l11946:
 20062                           
 20063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20064  0158DA  0E4F               	movlw	79
 20065  0158DC  6E0B               	movwf	(btemp+10)^0,c
 20066  0158DE  0E00               	movlw	0
 20067  0158E0  6E0C               	movwf	(btemp+11)^0,c
 20068                           
 20069                           ;stkvar	_i @ sp[(-18)+10]
 20070  0158E2  0EF8               	movlw	-8
 20071  0158E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20072  0158EA  0EF9               	movlw	-7
 20073  0158EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20074                           
 20075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20076  0158F2  0102               	movlb	2	; () banked
 20077  0158F4  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20078                           
 20079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20080  0158F6  D109               	goto	l11960
 20081  0158F8                     l11950:
 20082                           
 20083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20084                           ;stkvar	_i @ sp[(-18)+10]
 20085  0158F8  50E1               	movf	fsr1l,w,c
 20086  0158FA  0FF8               	addlw	-8
 20087  0158FC  6ED9               	movwf	fsr2l,c
 20088  0158FE  50E2               	movf	fsr1h,w,c
 20089  015900  6EDA               	movwf	fsr2h,c
 20090  015902  0EFF               	movlw	255
 20091  015904  22DA               	addwfc	fsr2h,f,c
 20092  015906  06DE               	decf	postinc2,f,c
 20093  015908  0E00               	movlw	0
 20094  01590A  5ADD               	subwfb	postdec2,f,c
 20095                           
 20096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20097  01590C  0E0A               	movlw	10
 20098  01590E  6EE6               	movwf	postinc1,c
 20099  015910  0E00               	movlw	0
 20100  015912  6EE6               	movwf	postinc1,c
 20101  015914  0E00               	movlw	0
 20102  015916  6EE6               	movwf	postinc1,c
 20103  015918  0E00               	movlw	0
 20104  01591A  6EE6               	movwf	postinc1,c
 20105  01591C  0E00               	movlw	0
 20106  01591E  6EE6               	movwf	postinc1,c
 20107  015920  0E00               	movlw	0
 20108  015922  6EE6               	movwf	postinc1,c
 20109  015924  0E00               	movlw	0
 20110  015926  6EE6               	movwf	postinc1,c
 20111  015928  0E00               	movlw	0
 20112  01592A  6EE6               	movwf	postinc1,c
 20113                           
 20114                           ;stkvar	_n @ sp[(-26)+2]
 20115  01592C  50E1               	movf	fsr1l,w,c
 20116  01592E  0FE8               	addlw	-24
 20117  015930  6ED9               	movwf	fsr2l,c
 20118  015932  50E2               	movf	fsr1h,w,c
 20119  015934  6EDA               	movwf	fsr2h,c
 20120  015936  0EFF               	movlw	255
 20121  015938  22DA               	addwfc	fsr2h,f,c
 20122  01593A  006F FF7B FFE6     	movff	postinc2,postinc1
 20123  015940  006F FF7B FFE6     	movff	postinc2,postinc1
 20124  015946  006F FF7B FFE6     	movff	postinc2,postinc1
 20125  01594C  006F FF7B FFE6     	movff	postinc2,postinc1
 20126  015952  006F FF7B FFE6     	movff	postinc2,postinc1
 20127  015958  006F FF7B FFE6     	movff	postinc2,postinc1
 20128  01595E  006F FF7B FFE6     	movff	postinc2,postinc1
 20129  015964  006F FF7B FFE6     	movff	postinc2,postinc1
 20130  01596A  ECEA  F0BE         	call	___aomod	;wreg free
 20131  01596E  52E5               	movf	postdec1,f,c
 20132  015970  006F FF9C  F018    	movff	indf1,btemp+23
 20133  015976  52E5               	movf	postdec1,f,c
 20134  015978  006F FF9C  F017    	movff	indf1,btemp+22
 20135  01597E  52E5               	movf	postdec1,f,c
 20136  015980  006F FF9C  F016    	movff	indf1,btemp+21
 20137  015986  52E5               	movf	postdec1,f,c
 20138  015988  006F FF9C  F015    	movff	indf1,btemp+20
 20139  01598E  52E5               	movf	postdec1,f,c
 20140  015990  006F FF9C  F014    	movff	indf1,btemp+19
 20141  015996  52E5               	movf	postdec1,f,c
 20142  015998  006F FF9C  F013    	movff	indf1,btemp+18
 20143  01599E  52E5               	movf	postdec1,f,c
 20144  0159A0  006F FF9C  F012    	movff	indf1,btemp+17
 20145  0159A6  52E5               	movf	postdec1,f,c
 20146  0159A8  006F FF9C  F011    	movff	indf1,btemp+16
 20147  0159AE  0EF8               	movlw	248
 20148  0159B0  26E1               	addwf	fsr1l,f,c
 20149  0159B2  0EFF               	movlw	255
 20150  0159B4  22E2               	addwfc	fsr1h,f,c
 20151  0159B6  0060  F044  F00B   	movff	btemp+16,btemp+10
 20152  0159BC  0060  F048  F00C   	movff	btemp+17,btemp+11
 20153  0159C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20154  0159C8  0060  F033  FFE6   	movff	btemp+11,postinc1
 20155  0159CE  ECB8  F0DA         	call	_abs	;wreg free
 20156  0159D2  0E30               	movlw	48
 20157  0159D4  2601               	addwf	btemp^0,f,c
 20158                           
 20159                           ;stkvar	_i @ sp[(-18)+10]
 20160  0159D6  0EF8               	movlw	-8
 20161  0159D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20162  0159DE  0EF9               	movlw	-7
 20163  0159E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20164  0159E6  0E97               	movlw	low _dbuf
 20165  0159E8  240B               	addwf	(btemp+10)^0,w,c
 20166  0159EA  6ED9               	movwf	fsr2l,c
 20167  0159EC  0E02               	movlw	high _dbuf
 20168  0159EE  200C               	addwfc	(btemp+11)^0,w,c
 20169  0159F0  6EDA               	movwf	fsr2h,c
 20170  0159F2  0060  F007  FFDF   	movff	btemp,indf2
 20171                           
 20172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20173                           ;stkvar	_p @ sp[(-18)+16]
 20174  0159F8  50E1               	movf	fsr1l,w,c
 20175  0159FA  0FFE               	addlw	-2
 20176  0159FC  6ED9               	movwf	fsr2l,c
 20177  0159FE  50E2               	movf	fsr1h,w,c
 20178  015A00  6EDA               	movwf	fsr2h,c
 20179  015A02  0EFF               	movlw	255
 20180  015A04  22DA               	addwfc	fsr2h,f,c
 20181  015A06  06DE               	decf	postinc2,f,c
 20182  015A08  0E00               	movlw	0
 20183  015A0A  5ADD               	subwfb	postdec2,f,c
 20184                           
 20185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20186                           ;stkvar	_w @ sp[(-18)+14]
 20187  015A0C  50E1               	movf	fsr1l,w,c
 20188  015A0E  0FFC               	addlw	-4
 20189  015A10  6ED9               	movwf	fsr2l,c
 20190  015A12  50E2               	movf	fsr1h,w,c
 20191  015A14  6EDA               	movwf	fsr2h,c
 20192  015A16  0EFF               	movlw	255
 20193  015A18  22DA               	addwfc	fsr2h,f,c
 20194  015A1A  06DE               	decf	postinc2,f,c
 20195  015A1C  0E00               	movlw	0
 20196  015A1E  5ADD               	subwfb	postdec2,f,c
 20197                           
 20198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20199  015A20  0E0A               	movlw	10
 20200  015A22  6EE6               	movwf	postinc1,c
 20201  015A24  0E00               	movlw	0
 20202  015A26  6EE6               	movwf	postinc1,c
 20203  015A28  0E00               	movlw	0
 20204  015A2A  6EE6               	movwf	postinc1,c
 20205  015A2C  0E00               	movlw	0
 20206  015A2E  6EE6               	movwf	postinc1,c
 20207  015A30  0E00               	movlw	0
 20208  015A32  6EE6               	movwf	postinc1,c
 20209  015A34  0E00               	movlw	0
 20210  015A36  6EE6               	movwf	postinc1,c
 20211  015A38  0E00               	movlw	0
 20212  015A3A  6EE6               	movwf	postinc1,c
 20213  015A3C  0E00               	movlw	0
 20214  015A3E  6EE6               	movwf	postinc1,c
 20215                           
 20216                           ;stkvar	_n @ sp[(-26)+2]
 20217  015A40  50E1               	movf	fsr1l,w,c
 20218  015A42  0FE8               	addlw	-24
 20219  015A44  6ED9               	movwf	fsr2l,c
 20220  015A46  50E2               	movf	fsr1h,w,c
 20221  015A48  6EDA               	movwf	fsr2h,c
 20222  015A4A  0EFF               	movlw	255
 20223  015A4C  22DA               	addwfc	fsr2h,f,c
 20224  015A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 20225  015A54  006F FF7B FFE6     	movff	postinc2,postinc1
 20226  015A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 20227  015A60  006F FF7B FFE6     	movff	postinc2,postinc1
 20228  015A66  006F FF7B FFE6     	movff	postinc2,postinc1
 20229  015A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 20230  015A72  006F FF7B FFE6     	movff	postinc2,postinc1
 20231  015A78  006F FF7B FFE6     	movff	postinc2,postinc1
 20232  015A7E  EC4D  F0BB         	call	___aodiv	;wreg free
 20233  015A82  52E5               	movf	postdec1,f,c
 20234  015A84  006F FF9C  F018    	movff	indf1,btemp+23
 20235  015A8A  52E5               	movf	postdec1,f,c
 20236  015A8C  006F FF9C  F017    	movff	indf1,btemp+22
 20237  015A92  52E5               	movf	postdec1,f,c
 20238  015A94  006F FF9C  F016    	movff	indf1,btemp+21
 20239  015A9A  52E5               	movf	postdec1,f,c
 20240  015A9C  006F FF9C  F015    	movff	indf1,btemp+20
 20241  015AA2  52E5               	movf	postdec1,f,c
 20242  015AA4  006F FF9C  F014    	movff	indf1,btemp+19
 20243  015AAA  52E5               	movf	postdec1,f,c
 20244  015AAC  006F FF9C  F013    	movff	indf1,btemp+18
 20245  015AB2  52E5               	movf	postdec1,f,c
 20246  015AB4  006F FF9C  F012    	movff	indf1,btemp+17
 20247  015ABA  52E5               	movf	postdec1,f,c
 20248  015ABC  006F FF9C  F011    	movff	indf1,btemp+16
 20249  015AC2  0EF8               	movlw	248
 20250  015AC4  26E1               	addwf	fsr1l,f,c
 20251  015AC6  0EFF               	movlw	255
 20252  015AC8  22E2               	addwfc	fsr1h,f,c
 20253                           
 20254                           ;stkvar	_n @ sp[(-18)+2]
 20255  015ACA  0EF0               	movlw	-16
 20256  015ACC  0060  F047  FFE3   	movff	btemp+16,plusw1
 20257  015AD2  0EF1               	movlw	-15
 20258  015AD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20259  015ADA  0EF2               	movlw	-14
 20260  015ADC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20261  015AE2  0EF3               	movlw	-13
 20262  015AE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 20263  015AEA  0EF4               	movlw	-12
 20264  015AEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 20265  015AF2  0EF5               	movlw	-11
 20266  015AF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20267  015AFA  0EF6               	movlw	-10
 20268  015AFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20269  015B02  0EF7               	movlw	-9
 20270  015B04  0060  F063  FFE3   	movff	btemp+23,plusw1
 20271  015B0A                     l11960:
 20272                           
 20273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20274                           ;stkvar	_i @ sp[(-18)+10]
 20275  015B0A  0EF9               	movlw	-7
 20276  015B0C  BEE3               	btfsc	plusw1,7,c
 20277  015B0E  D036               	goto	u11050
 20278  015B10  0EF9               	movlw	-7
 20279  015B12  50E3               	movf	plusw1,w,c
 20280  015B14  E104               	bnz	u11010
 20281  015B16  0EF8               	movlw	-8
 20282  015B18  04E3               	decf	plusw1,w,c
 20283  015B1A  A0D8               	btfss	status,0,c
 20284  015B1C  D02F               	goto	u11050
 20285  015B1E                     u11010:
 20286                           
 20287                           ;stkvar	_n @ sp[(-18)+2]
 20288  015B1E  0EF0               	movlw	-16
 20289  015B20  50E3               	movf	plusw1,w,c
 20290  015B22  E115               	bnz	u11021
 20291  015B24  0EF1               	movlw	-15
 20292  015B26  50E3               	movf	plusw1,w,c
 20293  015B28  E112               	bnz	u11021
 20294  015B2A  0EF2               	movlw	-14
 20295  015B2C  50E3               	movf	plusw1,w,c
 20296  015B2E  E10F               	bnz	u11021
 20297  015B30  0EF3               	movlw	-13
 20298  015B32  50E3               	movf	plusw1,w,c
 20299  015B34  E10C               	bnz	u11021
 20300  015B36  0EF4               	movlw	-12
 20301  015B38  50E3               	movf	plusw1,w,c
 20302  015B3A  E109               	bnz	u11021
 20303  015B3C  0EF5               	movlw	-11
 20304  015B3E  50E3               	movf	plusw1,w,c
 20305  015B40  E106               	bnz	u11021
 20306  015B42  0EF6               	movlw	-10
 20307  015B44  50E3               	movf	plusw1,w,c
 20308  015B46  E103               	bnz	u11021
 20309  015B48  0EF7               	movlw	-9
 20310  015B4A  50E3               	movf	plusw1,w,c
 20311  015B4C  A4D8               	btfss	status,2,c
 20312  015B4E                     u11021:
 20313  015B4E  D6D4               	goto	l11950
 20314                           
 20315                           ;stkvar	_p @ sp[(-18)+16]
 20316  015B50  0EFF               	movlw	-1
 20317  015B52  BEE3               	btfsc	plusw1,7,c
 20318  015B54  D007               	goto	u11030
 20319  015B56  0EFF               	movlw	-1
 20320  015B58  50E3               	movf	plusw1,w,c
 20321  015B5A  E103               	bnz	u11031
 20322  015B5C  0EFE               	movlw	-2
 20323  015B5E  04E3               	decf	plusw1,w,c
 20324  015B60  B0D8               	btfsc	status,0,c
 20325  015B62                     u11031:
 20326  015B62  D6CA               	goto	l11950
 20327  015B64                     u11030:
 20328                           
 20329                           ;stkvar	_w @ sp[(-18)+14]
 20330  015B64  0EFD               	movlw	-3
 20331  015B66  BEE3               	btfsc	plusw1,7,c
 20332  015B68  D009               	goto	u11050
 20333  015B6A  0EFD               	movlw	-3
 20334  015B6C  50E3               	movf	plusw1,w,c
 20335  015B6E  E104               	bnz	u11040
 20336  015B70  0EFC               	movlw	-4
 20337  015B72  04E3               	decf	plusw1,w,c
 20338  015B74  A0D8               	btfss	status,0,c
 20339  015B76  D002               	goto	u11050
 20340  015B78                     u11040:
 20341  015B78  B23E               	btfsc	_flags^0,1,c
 20342  015B7A  D6BE               	goto	l11950
 20343  015B7C                     u11050:
 20344                           
 20345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20346                           ;stkvar	_s @ sp[(-18)+12]
 20347  015B7C  0EFA               	movlw	-6
 20348  015B7E  006F FF8C  F001    	movff	plusw1,btemp
 20349  015B84  0EFB               	movlw	-5
 20350  015B86  50E3               	movf	plusw1,w,c
 20351  015B88  1001               	iorwf	btemp^0,w,c
 20352  015B8A  A4D8               	btfss	status,2,c
 20353  015B8C  D002               	goto	u11070
 20354  015B8E  A43E               	btfss	_flags^0,2,c
 20355  015B90  D033               	goto	l11984
 20356  015B92                     u11070:
 20357                           
 20358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20359                           ;stkvar	_i @ sp[(-18)+10]
 20360  015B92  50E1               	movf	fsr1l,w,c
 20361  015B94  0FF8               	addlw	-8
 20362  015B96  6ED9               	movwf	fsr2l,c
 20363  015B98  50E2               	movf	fsr1h,w,c
 20364  015B9A  6EDA               	movwf	fsr2h,c
 20365  015B9C  0EFF               	movlw	255
 20366  015B9E  22DA               	addwfc	fsr2h,f,c
 20367  015BA0  06DE               	decf	postinc2,f,c
 20368  015BA2  0E00               	movlw	0
 20369  015BA4  5ADD               	subwfb	postdec2,f,c
 20370                           
 20371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20372                           ;stkvar	_s @ sp[(-18)+12]
 20373  015BA6  0EFA               	movlw	-6
 20374  015BA8  006F FF8C  F001    	movff	plusw1,btemp
 20375  015BAE  0EFB               	movlw	-5
 20376  015BB0  50E3               	movf	plusw1,w,c
 20377  015BB2  1001               	iorwf	btemp^0,w,c
 20378  015BB4  A4D8               	btfss	status,2,c
 20379  015BB6  D002               	goto	l11980
 20380  015BB8  0E2B               	movlw	43
 20381  015BBA  D001               	goto	L24
 20382  015BBC                     l11980:
 20383  015BBC  0E2D               	movlw	45
 20384  015BBE                     L24:
 20385  015BBE  6E0B               	movwf	(btemp+10)^0,c
 20386  015BC0  0E00               	movlw	0
 20387  015BC2  6E0C               	movwf	(btemp+11)^0,c
 20388                           
 20389                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20390  015BC4  0EEE               	movlw	-18
 20391  015BC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20392  015BCC  0EEF               	movlw	-17
 20393  015BCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 20394                           
 20395                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20396                           ;stkvar	_i @ sp[(-18)+10]
 20397  015BD4  0EF8               	movlw	-8
 20398  015BD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20399  015BDC  0EF9               	movlw	-7
 20400  015BDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20401  015BE4  0E97               	movlw	low _dbuf
 20402  015BE6  240B               	addwf	(btemp+10)^0,w,c
 20403  015BE8  6ED9               	movwf	fsr2l,c
 20404  015BEA  0E02               	movlw	high _dbuf
 20405  015BEC  200C               	addwfc	(btemp+11)^0,w,c
 20406  015BEE  6EDA               	movwf	fsr2h,c
 20407  015BF0  0EEE               	movlw	-18
 20408  015BF2  006F FF8F FFDF     	movff	plusw1,indf2
 20409  015BF8                     l11984:
 20410                           
 20411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20412                           ;stkvar	_w @ sp[(-18)+14]
 20413  015BF8  0EFC               	movlw	-4
 20414  015BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 20415  015C00  006F FF8F FFE6     	movff	plusw1,postinc1
 20416                           
 20417                           ;stkvar	_i @ sp[(-20)+10]
 20418  015C06  0E97               	movlw	low _dbuf
 20419  015C08  6E0B               	movwf	(btemp+10)^0,c
 20420  015C0A  0E02               	movlw	high _dbuf
 20421  015C0C  6E0C               	movwf	(btemp+11)^0,c
 20422  015C0E  0EF6               	movlw	-10
 20423  015C10  50E3               	movf	plusw1,w,c
 20424  015C12  260B               	addwf	(btemp+10)^0,f,c
 20425  015C14  0EF7               	movlw	-9
 20426  015C16  50E3               	movf	plusw1,w,c
 20427  015C18  220C               	addwfc	(btemp+11)^0,f,c
 20428  015C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20429  015C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 20430                           
 20431                           ;stkvar	_fp @ sp[(-22)+-2]
 20432  015C26  0EE8               	movlw	-24
 20433  015C28  006F FF8F FFE6     	movff	plusw1,postinc1
 20434  015C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20435  015C34  EC67  F0CD         	call	_pad	;wreg free
 20436                           
 20437                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20438  015C38  0EE4               	movlw	228
 20439  015C3A  26E1               	addwf	fsr1l,f,c
 20440  015C3C  0EFF               	movlw	255
 20441  015C3E  22E2               	addwfc	fsr1h,f,c
 20442  015C40  0012               	return		;funcret
 20443  015C42                     __end_of_dtoa:
 20444                           	opt callstack 0
 20445                           
 20446 ;; *************** function _abs *****************
 20447 ;; Defined at:
 20448 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  a               2  [STACK] int 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  2  [STACK] int 
 20455 ;; Registers used:
 20456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/2
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:   15
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_dtoa
 20473 ;; This function uses a reentrant model
 20474 ;;
 20475                           
 20476                           	psect	text69
 20477  01B570                     __ptext69:
 20478                           	opt callstack 0
 20479  01B570                     _abs:
 20480                           	opt callstack 0
 20481                           
 20482                           ;stkvar	_a @ sp[(0)+-2]
 20483                           
 20484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20485                           ;incstack = 0
 20486 ;; hardware stack exceeded
 20487  01B570  0EFF               	movlw	-1
 20488  01B572  BEE3               	btfsc	plusw1,7,c
 20489  01B574  D007               	goto	u6000
 20490  01B576  0EFF               	movlw	-1
 20491  01B578  50E3               	movf	plusw1,w,c
 20492  01B57A  E112               	bnz	l8000
 20493  01B57C  0EFE               	movlw	-2
 20494  01B57E  04E3               	decf	plusw1,w,c
 20495  01B580  B0D8               	btfsc	status,0,c
 20496  01B582  D00E               	goto	l8000
 20497  01B584                     u6000:
 20498                           
 20499                           ;stkvar	_a @ sp[(0)+-2]
 20500  01B584  0EFE               	movlw	-2
 20501  01B586  006F FF8C  F001    	movff	plusw1,btemp
 20502  01B58C  1E01               	comf	btemp^0,f,c
 20503  01B58E  0EFF               	movlw	-1
 20504  01B590  006F FF8C  F002    	movff	plusw1,btemp+1
 20505  01B596  1E02               	comf	(btemp+1)^0,f,c
 20506  01B598  2A01               	incf	btemp^0,f,c
 20507  01B59A  B4D8               	btfsc	status,2,c
 20508  01B59C  2A02               	incf	(btemp+1)^0,f,c
 20509  01B59E  D008               	goto	l3084
 20510  01B5A0                     l8000:
 20511                           
 20512                           ;stkvar	_a @ sp[(0)+-2]
 20513  01B5A0  0EFE               	movlw	-2
 20514  01B5A2  006F FF8C  F001    	movff	plusw1,btemp
 20515  01B5A8  0EFF               	movlw	-1
 20516  01B5AA  006F FF8C  F002    	movff	plusw1,btemp+1
 20517  01B5B0                     l3084:
 20518                           
 20519                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20520  01B5B0  52E5               	movf	postdec1,f,c
 20521  01B5B2  52E5               	movf	postdec1,f,c
 20522  01B5B4  0012               	return		;funcret
 20523  01B5B6                     __end_of_abs:
 20524                           	opt callstack 0
 20525                           
 20526 ;; *************** function ___aomod *****************
 20527 ;; Defined at:
 20528 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20529 ;; Parameters:    Size  Location     Type
 20530 ;;  dividend        8  [STACK] long long 
 20531 ;;  divisor         8  [STACK] long long 
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;  sign            1  [STACK] unsigned char 
 20534 ;;  counter         1  [STACK] unsigned char 
 20535 ;; Return value:  Size  Location     Type
 20536 ;;                  8  [STACK] long long 
 20537 ;; Registers used:
 20538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20539 ;; Tracked objects:
 20540 ;;		On entry : 0/2
 20541 ;;		On exit  : 0/0
 20542 ;;		Unchanged: 0/0
 20543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20548 ;;Total ram usage:        0 bytes
 20549 ;; Hardware stack levels used:    1
 20550 ;; Hardware stack levels required when called:   15
 20551 ;; This function calls:
 20552 ;;		Nothing
 20553 ;; This function is called by:
 20554 ;;		_dtoa
 20555 ;; This function uses a reentrant model
 20556 ;;
 20557                           
 20558                           	psect	text70
 20559  017DD4                     __ptext70:
 20560                           	opt callstack 0
 20561  017DD4                     ___aomod:
 20562                           	opt callstack 0
 20563                           
 20564                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20565  017DD4  52E6               	movf	postinc1,f,c
 20566  017DD6  52E6               	movf	postinc1,f,c
 20567                           
 20568                           ;stkvar	_sign @ sp[(-2)+0]
 20569                           
 20570                           ;incstack = 0
 20571 ;; hardware stack exceeded
 20572  017DD8  0EFE               	movlw	-2
 20573  017DDA  6AE3               	clrf	plusw1,c
 20574                           
 20575                           ;stkvar	_dividend @ sp[(-2)+-8]
 20576  017DDC  0EFD               	movlw	-3
 20577  017DDE  AEE3               	btfss	plusw1,7,c
 20578  017DE0  D028               	goto	l8158
 20579                           
 20580                           ;stkvar	_dividend @ sp[(-2)+-8]
 20581                           ;stkvar	_dividend @ sp[(-2)+-8]
 20582  017DE2  0EF6               	movlw	-10
 20583  017DE4  6CE3               	negf	plusw1,c
 20584  017DE6  0EF7               	movlw	-9
 20585  017DE8  1EE3               	comf	plusw1,f,c
 20586  017DEA  0EF8               	movlw	-8
 20587  017DEC  1EE3               	comf	plusw1,f,c
 20588  017DEE  0EF9               	movlw	-7
 20589  017DF0  1EE3               	comf	plusw1,f,c
 20590  017DF2  0EFA               	movlw	-6
 20591  017DF4  1EE3               	comf	plusw1,f,c
 20592  017DF6  0EFB               	movlw	-5
 20593  017DF8  1EE3               	comf	plusw1,f,c
 20594  017DFA  0EFC               	movlw	-4
 20595  017DFC  1EE3               	comf	plusw1,f,c
 20596  017DFE  0EFD               	movlw	-3
 20597  017E00  1EE3               	comf	plusw1,f,c
 20598  017E02  E314               	bnc	u6430
 20599  017E04  0EF7               	movlw	-9
 20600  017E06  2AE3               	incf	plusw1,f,c
 20601  017E08  E311               	bnc	u6430
 20602  017E0A  0EF8               	movlw	-8
 20603  017E0C  2AE3               	incf	plusw1,f,c
 20604  017E0E  E30E               	bnc	u6430
 20605  017E10  0EF9               	movlw	-7
 20606  017E12  2AE3               	incf	plusw1,f,c
 20607  017E14  E30B               	bnc	u6430
 20608  017E16  0EFA               	movlw	-6
 20609  017E18  2AE3               	incf	plusw1,f,c
 20610  017E1A  E308               	bnc	u6430
 20611  017E1C  0EFB               	movlw	-5
 20612  017E1E  2AE3               	incf	plusw1,f,c
 20613  017E20  E305               	bnc	u6430
 20614  017E22  0EFC               	movlw	-4
 20615  017E24  2AE3               	incf	plusw1,f,c
 20616  017E26  E302               	bnc	u6430
 20617  017E28  0EFD               	movlw	-3
 20618  017E2A  2AE3               	incf	plusw1,f,c
 20619  017E2C                     u6430:
 20620                           
 20621                           ;stkvar	_sign @ sp[(-2)+0]
 20622  017E2C  0EFE               	movlw	-2
 20623  017E2E  6AE3               	clrf	plusw1,c
 20624  017E30  2AE3               	incf	plusw1,f,c
 20625  017E32                     l8158:
 20626                           
 20627                           ;stkvar	_divisor @ sp[(-2)+-16]
 20628  017E32  0EF5               	movlw	-11
 20629  017E34  AEE3               	btfss	plusw1,7,c
 20630  017E36  D025               	goto	u6450
 20631                           
 20632                           ;stkvar	_divisor @ sp[(-2)+-16]
 20633                           ;stkvar	_divisor @ sp[(-2)+-16]
 20634  017E38  0EEE               	movlw	-18
 20635  017E3A  6CE3               	negf	plusw1,c
 20636  017E3C  0EEF               	movlw	-17
 20637  017E3E  1EE3               	comf	plusw1,f,c
 20638  017E40  0EF0               	movlw	-16
 20639  017E42  1EE3               	comf	plusw1,f,c
 20640  017E44  0EF1               	movlw	-15
 20641  017E46  1EE3               	comf	plusw1,f,c
 20642  017E48  0EF2               	movlw	-14
 20643  017E4A  1EE3               	comf	plusw1,f,c
 20644  017E4C  0EF3               	movlw	-13
 20645  017E4E  1EE3               	comf	plusw1,f,c
 20646  017E50  0EF4               	movlw	-12
 20647  017E52  1EE3               	comf	plusw1,f,c
 20648  017E54  0EF5               	movlw	-11
 20649  017E56  1EE3               	comf	plusw1,f,c
 20650  017E58  E314               	bnc	u6450
 20651  017E5A  0EEF               	movlw	-17
 20652  017E5C  2AE3               	incf	plusw1,f,c
 20653  017E5E  E311               	bnc	u6450
 20654  017E60  0EF0               	movlw	-16
 20655  017E62  2AE3               	incf	plusw1,f,c
 20656  017E64  E30E               	bnc	u6450
 20657  017E66  0EF1               	movlw	-15
 20658  017E68  2AE3               	incf	plusw1,f,c
 20659  017E6A  E30B               	bnc	u6450
 20660  017E6C  0EF2               	movlw	-14
 20661  017E6E  2AE3               	incf	plusw1,f,c
 20662  017E70  E308               	bnc	u6450
 20663  017E72  0EF3               	movlw	-13
 20664  017E74  2AE3               	incf	plusw1,f,c
 20665  017E76  E305               	bnc	u6450
 20666  017E78  0EF4               	movlw	-12
 20667  017E7A  2AE3               	incf	plusw1,f,c
 20668  017E7C  E302               	bnc	u6450
 20669  017E7E  0EF5               	movlw	-11
 20670  017E80  2AE3               	incf	plusw1,f,c
 20671  017E82                     u6450:
 20672                           
 20673                           ;stkvar	_divisor @ sp[(-2)+-16]
 20674  017E82  0EEE               	movlw	-18
 20675  017E84  50E3               	movf	plusw1,w,c
 20676  017E86  E116               	bnz	u6460
 20677  017E88  0EEF               	movlw	-17
 20678  017E8A  50E3               	movf	plusw1,w,c
 20679  017E8C  E113               	bnz	u6460
 20680  017E8E  0EF0               	movlw	-16
 20681  017E90  50E3               	movf	plusw1,w,c
 20682  017E92  E110               	bnz	u6460
 20683  017E94  0EF1               	movlw	-15
 20684  017E96  50E3               	movf	plusw1,w,c
 20685  017E98  E10D               	bnz	u6460
 20686  017E9A  0EF2               	movlw	-14
 20687  017E9C  50E3               	movf	plusw1,w,c
 20688  017E9E  E10A               	bnz	u6460
 20689  017EA0  0EF3               	movlw	-13
 20690  017EA2  50E3               	movf	plusw1,w,c
 20691  017EA4  E107               	bnz	u6460
 20692  017EA6  0EF4               	movlw	-12
 20693  017EA8  50E3               	movf	plusw1,w,c
 20694  017EAA  E104               	bnz	u6460
 20695  017EAC  0EF5               	movlw	-11
 20696  017EAE  50E3               	movf	plusw1,w,c
 20697  017EB0  B4D8               	btfsc	status,2,c
 20698  017EB2  D075               	goto	u6490
 20699  017EB4                     u6460:
 20700                           
 20701                           ;stkvar	_counter @ sp[(-2)+1]
 20702  017EB4  0EFF               	movlw	-1
 20703  017EB6  6AE3               	clrf	plusw1,c
 20704  017EB8  D012               	goto	L25
 20705  017EBA                     l8166:
 20706                           
 20707                           ;stkvar	_divisor @ sp[(-2)+-16]
 20708  017EBA  90D8               	bcf	status,0,c
 20709  017EBC  0EEE               	movlw	-18
 20710  017EBE  36E3               	rlcf	plusw1,f,c
 20711  017EC0  0EEF               	movlw	-17
 20712  017EC2  36E3               	rlcf	plusw1,f,c
 20713  017EC4  0EF0               	movlw	-16
 20714  017EC6  36E3               	rlcf	plusw1,f,c
 20715  017EC8  0EF1               	movlw	-15
 20716  017ECA  36E3               	rlcf	plusw1,f,c
 20717  017ECC  0EF2               	movlw	-14
 20718  017ECE  36E3               	rlcf	plusw1,f,c
 20719  017ED0  0EF3               	movlw	-13
 20720  017ED2  36E3               	rlcf	plusw1,f,c
 20721  017ED4  0EF4               	movlw	-12
 20722  017ED6  36E3               	rlcf	plusw1,f,c
 20723  017ED8  0EF5               	movlw	-11
 20724  017EDA  36E3               	rlcf	plusw1,f,c
 20725                           
 20726                           ;stkvar	_counter @ sp[(-2)+1]
 20727  017EDC  0EFF               	movlw	-1
 20728  017EDE                     L25:
 20729  017EDE  2AE3               	incf	plusw1,f,c
 20730                           
 20731                           ;stkvar	_divisor @ sp[(-2)+-16]
 20732  017EE0  0EF5               	movlw	-11
 20733  017EE2  AEE3               	btfss	plusw1,7,c
 20734  017EE4  D7EA               	goto	l8166
 20735  017EE6                     u6470:
 20736                           
 20737                           ;stkvar	_divisor @ sp[(-2)+-16]
 20738                           ;stkvar	_dividend @ sp[(-2)+-8]
 20739  017EE6  50E1               	movf	fsr1l,w,c
 20740  017EE8  0FF6               	addlw	-10
 20741  017EEA  6ED9               	movwf	fsr2l,c
 20742  017EEC  50E2               	movf	fsr1h,w,c
 20743  017EEE  6EDA               	movwf	fsr2h,c
 20744  017EF0  0EFF               	movlw	255
 20745  017EF2  22DA               	addwfc	fsr2h,f,c
 20746  017EF4  0EEE               	movlw	-18
 20747  017EF6  50E3               	movf	plusw1,w,c
 20748  017EF8  5CDE               	subwf	postinc2,w,c
 20749  017EFA  0EEF               	movlw	-17
 20750  017EFC  50E3               	movf	plusw1,w,c
 20751  017EFE  58DE               	subwfb	postinc2,w,c
 20752  017F00  0EF0               	movlw	-16
 20753  017F02  50E3               	movf	plusw1,w,c
 20754  017F04  58DE               	subwfb	postinc2,w,c
 20755  017F06  0EF1               	movlw	-15
 20756  017F08  50E3               	movf	plusw1,w,c
 20757  017F0A  58DE               	subwfb	postinc2,w,c
 20758  017F0C  0EF2               	movlw	-14
 20759  017F0E  50E3               	movf	plusw1,w,c
 20760  017F10  58DE               	subwfb	postinc2,w,c
 20761  017F12  0EF3               	movlw	-13
 20762  017F14  50E3               	movf	plusw1,w,c
 20763  017F16  58DE               	subwfb	postinc2,w,c
 20764  017F18  0EF4               	movlw	-12
 20765  017F1A  50E3               	movf	plusw1,w,c
 20766  017F1C  58DE               	subwfb	postinc2,w,c
 20767  017F1E  0EF5               	movlw	-11
 20768  017F20  50E3               	movf	plusw1,w,c
 20769  017F22  58DE               	subwfb	postinc2,w,c
 20770  017F24  A0D8               	btfss	status,0,c
 20771  017F26  D01F               	goto	l8174
 20772                           
 20773                           ;stkvar	_divisor @ sp[(-2)+-16]
 20774                           ;stkvar	_dividend @ sp[(-2)+-8]
 20775  017F28  50E1               	movf	fsr1l,w,c
 20776  017F2A  0FF6               	addlw	-10
 20777  017F2C  6ED9               	movwf	fsr2l,c
 20778  017F2E  50E2               	movf	fsr1h,w,c
 20779  017F30  6EDA               	movwf	fsr2h,c
 20780  017F32  0EFF               	movlw	255
 20781  017F34  22DA               	addwfc	fsr2h,f,c
 20782  017F36  0EEE               	movlw	-18
 20783  017F38  50E3               	movf	plusw1,w,c
 20784  017F3A  5EDE               	subwf	postinc2,f,c
 20785  017F3C  0EEF               	movlw	-17
 20786  017F3E  50E3               	movf	plusw1,w,c
 20787  017F40  5ADE               	subwfb	postinc2,f,c
 20788  017F42  0EF0               	movlw	-16
 20789  017F44  50E3               	movf	plusw1,w,c
 20790  017F46  5ADE               	subwfb	postinc2,f,c
 20791  017F48  0EF1               	movlw	-15
 20792  017F4A  50E3               	movf	plusw1,w,c
 20793  017F4C  5ADE               	subwfb	postinc2,f,c
 20794  017F4E  0EF2               	movlw	-14
 20795  017F50  50E3               	movf	plusw1,w,c
 20796  017F52  5ADE               	subwfb	postinc2,f,c
 20797  017F54  0EF3               	movlw	-13
 20798  017F56  50E3               	movf	plusw1,w,c
 20799  017F58  5ADE               	subwfb	postinc2,f,c
 20800  017F5A  0EF4               	movlw	-12
 20801  017F5C  50E3               	movf	plusw1,w,c
 20802  017F5E  5ADE               	subwfb	postinc2,f,c
 20803  017F60  0EF5               	movlw	-11
 20804  017F62  50E3               	movf	plusw1,w,c
 20805  017F64  5ADE               	subwfb	postinc2,f,c
 20806  017F66                     l8174:
 20807                           
 20808                           ;stkvar	_divisor @ sp[(-2)+-16]
 20809  017F66  90D8               	bcf	status,0,c
 20810  017F68  0EF5               	movlw	-11
 20811  017F6A  32E3               	rrcf	plusw1,f,c
 20812  017F6C  0EF4               	movlw	-12
 20813  017F6E  32E3               	rrcf	plusw1,f,c
 20814  017F70  0EF3               	movlw	-13
 20815  017F72  32E3               	rrcf	plusw1,f,c
 20816  017F74  0EF2               	movlw	-14
 20817  017F76  32E3               	rrcf	plusw1,f,c
 20818  017F78  0EF1               	movlw	-15
 20819  017F7A  32E3               	rrcf	plusw1,f,c
 20820  017F7C  0EF0               	movlw	-16
 20821  017F7E  32E3               	rrcf	plusw1,f,c
 20822  017F80  0EEF               	movlw	-17
 20823  017F82  32E3               	rrcf	plusw1,f,c
 20824  017F84  0EEE               	movlw	-18
 20825  017F86  32E3               	rrcf	plusw1,f,c
 20826                           
 20827                           ;stkvar	_counter @ sp[(-2)+1]
 20828  017F88  0EFF               	movlw	-1
 20829  017F8A  50E3               	movf	plusw1,w,c
 20830  017F8C  6E01               	movwf	btemp^0,c
 20831  017F8E  0E01               	movlw	1
 20832  017F90  5E01               	subwf	btemp^0,f,c
 20833  017F92  0EFF               	movlw	-1
 20834  017F94  0060  F007  FFE3   	movff	btemp,plusw1
 20835  017F9A  A4D8               	btfss	status,2,c
 20836  017F9C  D7A4               	goto	u6470
 20837  017F9E                     u6490:
 20838                           
 20839                           ;stkvar	_sign @ sp[(-2)+0]
 20840  017F9E  0EFE               	movlw	-2
 20841  017FA0  50E3               	movf	plusw1,w,c
 20842  017FA2  B4D8               	btfsc	status,2,c
 20843  017FA4  D025               	goto	u6510
 20844                           
 20845                           ;stkvar	_dividend @ sp[(-2)+-8]
 20846                           ;stkvar	_dividend @ sp[(-2)+-8]
 20847  017FA6  0EF6               	movlw	-10
 20848  017FA8  6CE3               	negf	plusw1,c
 20849  017FAA  0EF7               	movlw	-9
 20850  017FAC  1EE3               	comf	plusw1,f,c
 20851  017FAE  0EF8               	movlw	-8
 20852  017FB0  1EE3               	comf	plusw1,f,c
 20853  017FB2  0EF9               	movlw	-7
 20854  017FB4  1EE3               	comf	plusw1,f,c
 20855  017FB6  0EFA               	movlw	-6
 20856  017FB8  1EE3               	comf	plusw1,f,c
 20857  017FBA  0EFB               	movlw	-5
 20858  017FBC  1EE3               	comf	plusw1,f,c
 20859  017FBE  0EFC               	movlw	-4
 20860  017FC0  1EE3               	comf	plusw1,f,c
 20861  017FC2  0EFD               	movlw	-3
 20862  017FC4  1EE3               	comf	plusw1,f,c
 20863  017FC6  E314               	bnc	u6510
 20864  017FC8  0EF7               	movlw	-9
 20865  017FCA  2AE3               	incf	plusw1,f,c
 20866  017FCC  E311               	bnc	u6510
 20867  017FCE  0EF8               	movlw	-8
 20868  017FD0  2AE3               	incf	plusw1,f,c
 20869  017FD2  E30E               	bnc	u6510
 20870  017FD4  0EF9               	movlw	-7
 20871  017FD6  2AE3               	incf	plusw1,f,c
 20872  017FD8  E30B               	bnc	u6510
 20873  017FDA  0EFA               	movlw	-6
 20874  017FDC  2AE3               	incf	plusw1,f,c
 20875  017FDE  E308               	bnc	u6510
 20876  017FE0  0EFB               	movlw	-5
 20877  017FE2  2AE3               	incf	plusw1,f,c
 20878  017FE4  E305               	bnc	u6510
 20879  017FE6  0EFC               	movlw	-4
 20880  017FE8  2AE3               	incf	plusw1,f,c
 20881  017FEA  E302               	bnc	u6510
 20882  017FEC  0EFD               	movlw	-3
 20883  017FEE  2AE3               	incf	plusw1,f,c
 20884  017FF0                     u6510:
 20885                           
 20886                           ;stkvar	_dividend @ sp[(-2)+-8]
 20887  017FF0  0EF6               	movlw	246
 20888  017FF2  24E1               	addwf	fsr1l,w,c
 20889  017FF4  6ED9               	movwf	fsr2l,c
 20890  017FF6  0EFF               	movlw	255
 20891  017FF8  20E2               	addwfc	fsr1h,w,c
 20892  017FFA  6EDA               	movwf	fsr2h,c
 20893                           
 20894                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20895  017FFC  0E08               	movlw	8
 20896  017FFE  6E01               	movwf	btemp^0,c
 20897  018000  0EF6               	movlw	-10
 20898  018002                     us652999:
 20899  018002  006F FF7B FFE3     	movff	postinc2,plusw1
 20900  018008  28E8               	incf	wreg,w,c
 20901  01800A  2E01               	decfsz	btemp^0,f,c
 20902  01800C  D7FA               	bra	us652999
 20903                           
 20904                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20905  01800E  52E5               	movf	postdec1,f,c
 20906  018010  52E5               	movf	postdec1,f,c
 20907  018012  0012               	return		;funcret
 20908  018014                     __end_of___aomod:
 20909                           	opt callstack 0
 20910                           
 20911 ;; *************** function ___aodiv *****************
 20912 ;; Defined at:
 20913 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;  dividend        8  [STACK] long long 
 20916 ;;  divisor         8  [STACK] long long 
 20917 ;; Auto vars:     Size  Location     Type
 20918 ;;  quotient        8  [STACK] long long 
 20919 ;;  sign            1  [STACK] unsigned char 
 20920 ;;  counter         1  [STACK] unsigned char 
 20921 ;; Return value:  Size  Location     Type
 20922 ;;                  8  [STACK] long long 
 20923 ;; Registers used:
 20924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20925 ;; Tracked objects:
 20926 ;;		On entry : 0/2
 20927 ;;		On exit  : 0/0
 20928 ;;		Unchanged: 0/0
 20929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20934 ;;Total ram usage:        0 bytes
 20935 ;; Hardware stack levels used:    1
 20936 ;; Hardware stack levels required when called:   15
 20937 ;; This function calls:
 20938 ;;		Nothing
 20939 ;; This function is called by:
 20940 ;;		_dtoa
 20941 ;; This function uses a reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text71
 20945  01769A                     __ptext71:
 20946                           	opt callstack 0
 20947  01769A                     ___aodiv:
 20948                           	opt callstack 0
 20949                           
 20950                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20951  01769A  0E0A               	movlw	10
 20952  01769C  26E1               	addwf	fsr1l,f,c
 20953  01769E  0E00               	movlw	0
 20954  0176A0  22E2               	addwfc	fsr1h,f,c
 20955                           
 20956                           ;stkvar	_sign @ sp[(-10)+8]
 20957                           
 20958                           ;incstack = 0
 20959 ;; hardware stack exceeded
 20960  0176A2  0EFE               	movlw	-2
 20961  0176A4  6AE3               	clrf	plusw1,c
 20962                           
 20963                           ;stkvar	_divisor @ sp[(-10)+-16]
 20964  0176A6  0EED               	movlw	-19
 20965  0176A8  AEE3               	btfss	plusw1,7,c
 20966  0176AA  D028               	goto	l8114
 20967                           
 20968                           ;stkvar	_divisor @ sp[(-10)+-16]
 20969                           ;stkvar	_divisor @ sp[(-10)+-16]
 20970  0176AC  0EE6               	movlw	-26
 20971  0176AE  6CE3               	negf	plusw1,c
 20972  0176B0  0EE7               	movlw	-25
 20973  0176B2  1EE3               	comf	plusw1,f,c
 20974  0176B4  0EE8               	movlw	-24
 20975  0176B6  1EE3               	comf	plusw1,f,c
 20976  0176B8  0EE9               	movlw	-23
 20977  0176BA  1EE3               	comf	plusw1,f,c
 20978  0176BC  0EEA               	movlw	-22
 20979  0176BE  1EE3               	comf	plusw1,f,c
 20980  0176C0  0EEB               	movlw	-21
 20981  0176C2  1EE3               	comf	plusw1,f,c
 20982  0176C4  0EEC               	movlw	-20
 20983  0176C6  1EE3               	comf	plusw1,f,c
 20984  0176C8  0EED               	movlw	-19
 20985  0176CA  1EE3               	comf	plusw1,f,c
 20986  0176CC  E314               	bnc	u6310
 20987  0176CE  0EE7               	movlw	-25
 20988  0176D0  2AE3               	incf	plusw1,f,c
 20989  0176D2  E311               	bnc	u6310
 20990  0176D4  0EE8               	movlw	-24
 20991  0176D6  2AE3               	incf	plusw1,f,c
 20992  0176D8  E30E               	bnc	u6310
 20993  0176DA  0EE9               	movlw	-23
 20994  0176DC  2AE3               	incf	plusw1,f,c
 20995  0176DE  E30B               	bnc	u6310
 20996  0176E0  0EEA               	movlw	-22
 20997  0176E2  2AE3               	incf	plusw1,f,c
 20998  0176E4  E308               	bnc	u6310
 20999  0176E6  0EEB               	movlw	-21
 21000  0176E8  2AE3               	incf	plusw1,f,c
 21001  0176EA  E305               	bnc	u6310
 21002  0176EC  0EEC               	movlw	-20
 21003  0176EE  2AE3               	incf	plusw1,f,c
 21004  0176F0  E302               	bnc	u6310
 21005  0176F2  0EED               	movlw	-19
 21006  0176F4  2AE3               	incf	plusw1,f,c
 21007  0176F6                     u6310:
 21008                           
 21009                           ;stkvar	_sign @ sp[(-10)+8]
 21010  0176F6  0EFE               	movlw	-2
 21011  0176F8  6AE3               	clrf	plusw1,c
 21012  0176FA  2AE3               	incf	plusw1,f,c
 21013  0176FC                     l8114:
 21014                           
 21015                           ;stkvar	_dividend @ sp[(-10)+-8]
 21016  0176FC  0EF5               	movlw	-11
 21017  0176FE  AEE3               	btfss	plusw1,7,c
 21018  017700  D027               	goto	l8120
 21019                           
 21020                           ;stkvar	_dividend @ sp[(-10)+-8]
 21021                           ;stkvar	_dividend @ sp[(-10)+-8]
 21022  017702  0EEE               	movlw	-18
 21023  017704  6CE3               	negf	plusw1,c
 21024  017706  0EEF               	movlw	-17
 21025  017708  1EE3               	comf	plusw1,f,c
 21026  01770A  0EF0               	movlw	-16
 21027  01770C  1EE3               	comf	plusw1,f,c
 21028  01770E  0EF1               	movlw	-15
 21029  017710  1EE3               	comf	plusw1,f,c
 21030  017712  0EF2               	movlw	-14
 21031  017714  1EE3               	comf	plusw1,f,c
 21032  017716  0EF3               	movlw	-13
 21033  017718  1EE3               	comf	plusw1,f,c
 21034  01771A  0EF4               	movlw	-12
 21035  01771C  1EE3               	comf	plusw1,f,c
 21036  01771E  0EF5               	movlw	-11
 21037  017720  1EE3               	comf	plusw1,f,c
 21038  017722  E314               	bnc	u6330
 21039  017724  0EEF               	movlw	-17
 21040  017726  2AE3               	incf	plusw1,f,c
 21041  017728  E311               	bnc	u6330
 21042  01772A  0EF0               	movlw	-16
 21043  01772C  2AE3               	incf	plusw1,f,c
 21044  01772E  E30E               	bnc	u6330
 21045  017730  0EF1               	movlw	-15
 21046  017732  2AE3               	incf	plusw1,f,c
 21047  017734  E30B               	bnc	u6330
 21048  017736  0EF2               	movlw	-14
 21049  017738  2AE3               	incf	plusw1,f,c
 21050  01773A  E308               	bnc	u6330
 21051  01773C  0EF3               	movlw	-13
 21052  01773E  2AE3               	incf	plusw1,f,c
 21053  017740  E305               	bnc	u6330
 21054  017742  0EF4               	movlw	-12
 21055  017744  2AE3               	incf	plusw1,f,c
 21056  017746  E302               	bnc	u6330
 21057  017748  0EF5               	movlw	-11
 21058  01774A  2AE3               	incf	plusw1,f,c
 21059  01774C                     u6330:
 21060                           
 21061                           ;stkvar	_sign @ sp[(-10)+8]
 21062  01774C  0EFE               	movlw	-2
 21063  01774E  70E3               	btg	plusw1,0,c
 21064  017750                     l8120:
 21065                           
 21066                           ;stkvar	_quotient @ sp[(-10)+0]
 21067  017750  0E07               	movlw	7
 21068  017752  6E01               	movwf	btemp^0,c
 21069  017754  0EF6               	movlw	-10
 21070  017756                     u6341:
 21071  017756  6AE3               	clrf	plusw1,c
 21072  017758  2AE8               	incf	wreg,f,c
 21073  01775A  0601               	decf	btemp^0,f,c
 21074  01775C  E2FC               	bc	u6341
 21075                           
 21076                           ;stkvar	_divisor @ sp[(-10)+-16]
 21077  01775E  0EE6               	movlw	-26
 21078  017760  50E3               	movf	plusw1,w,c
 21079  017762  E116               	bnz	u6350
 21080  017764  0EE7               	movlw	-25
 21081  017766  50E3               	movf	plusw1,w,c
 21082  017768  E113               	bnz	u6350
 21083  01776A  0EE8               	movlw	-24
 21084  01776C  50E3               	movf	plusw1,w,c
 21085  01776E  E110               	bnz	u6350
 21086  017770  0EE9               	movlw	-23
 21087  017772  50E3               	movf	plusw1,w,c
 21088  017774  E10D               	bnz	u6350
 21089  017776  0EEA               	movlw	-22
 21090  017778  50E3               	movf	plusw1,w,c
 21091  01777A  E10A               	bnz	u6350
 21092  01777C  0EEB               	movlw	-21
 21093  01777E  50E3               	movf	plusw1,w,c
 21094  017780  E107               	bnz	u6350
 21095  017782  0EEC               	movlw	-20
 21096  017784  50E3               	movf	plusw1,w,c
 21097  017786  E104               	bnz	u6350
 21098  017788  0EED               	movlw	-19
 21099  01778A  50E3               	movf	plusw1,w,c
 21100  01778C  B4D8               	btfsc	status,2,c
 21101  01778E  D088               	goto	u6380
 21102  017790                     u6350:
 21103                           
 21104                           ;stkvar	_counter @ sp[(-10)+9]
 21105  017790  0EFF               	movlw	-1
 21106  017792  6AE3               	clrf	plusw1,c
 21107  017794  D012               	goto	L26
 21108  017796                     l8126:
 21109                           
 21110                           ;stkvar	_divisor @ sp[(-10)+-16]
 21111  017796  90D8               	bcf	status,0,c
 21112  017798  0EE6               	movlw	-26
 21113  01779A  36E3               	rlcf	plusw1,f,c
 21114  01779C  0EE7               	movlw	-25
 21115  01779E  36E3               	rlcf	plusw1,f,c
 21116  0177A0  0EE8               	movlw	-24
 21117  0177A2  36E3               	rlcf	plusw1,f,c
 21118  0177A4  0EE9               	movlw	-23
 21119  0177A6  36E3               	rlcf	plusw1,f,c
 21120  0177A8  0EEA               	movlw	-22
 21121  0177AA  36E3               	rlcf	plusw1,f,c
 21122  0177AC  0EEB               	movlw	-21
 21123  0177AE  36E3               	rlcf	plusw1,f,c
 21124  0177B0  0EEC               	movlw	-20
 21125  0177B2  36E3               	rlcf	plusw1,f,c
 21126  0177B4  0EED               	movlw	-19
 21127  0177B6  36E3               	rlcf	plusw1,f,c
 21128                           
 21129                           ;stkvar	_counter @ sp[(-10)+9]
 21130  0177B8  0EFF               	movlw	-1
 21131  0177BA                     L26:
 21132  0177BA  2AE3               	incf	plusw1,f,c
 21133                           
 21134                           ;stkvar	_divisor @ sp[(-10)+-16]
 21135  0177BC  0EED               	movlw	-19
 21136  0177BE  AEE3               	btfss	plusw1,7,c
 21137  0177C0  D7EA               	goto	l8126
 21138  0177C2                     u6360:
 21139                           
 21140                           ;stkvar	_quotient @ sp[(-10)+0]
 21141  0177C2  90D8               	bcf	status,0,c
 21142  0177C4  0EF6               	movlw	-10
 21143  0177C6  36E3               	rlcf	plusw1,f,c
 21144  0177C8  0EF7               	movlw	-9
 21145  0177CA  36E3               	rlcf	plusw1,f,c
 21146  0177CC  0EF8               	movlw	-8
 21147  0177CE  36E3               	rlcf	plusw1,f,c
 21148  0177D0  0EF9               	movlw	-7
 21149  0177D2  36E3               	rlcf	plusw1,f,c
 21150  0177D4  0EFA               	movlw	-6
 21151  0177D6  36E3               	rlcf	plusw1,f,c
 21152  0177D8  0EFB               	movlw	-5
 21153  0177DA  36E3               	rlcf	plusw1,f,c
 21154  0177DC  0EFC               	movlw	-4
 21155  0177DE  36E3               	rlcf	plusw1,f,c
 21156  0177E0  0EFD               	movlw	-3
 21157  0177E2  36E3               	rlcf	plusw1,f,c
 21158                           
 21159                           ;stkvar	_divisor @ sp[(-10)+-16]
 21160                           ;stkvar	_dividend @ sp[(-10)+-8]
 21161  0177E4  50E1               	movf	fsr1l,w,c
 21162  0177E6  0FEE               	addlw	-18
 21163  0177E8  6ED9               	movwf	fsr2l,c
 21164  0177EA  50E2               	movf	fsr1h,w,c
 21165  0177EC  6EDA               	movwf	fsr2h,c
 21166  0177EE  0EFF               	movlw	255
 21167  0177F0  22DA               	addwfc	fsr2h,f,c
 21168  0177F2  0EE6               	movlw	-26
 21169  0177F4  50E3               	movf	plusw1,w,c
 21170  0177F6  5CDE               	subwf	postinc2,w,c
 21171  0177F8  0EE7               	movlw	-25
 21172  0177FA  50E3               	movf	plusw1,w,c
 21173  0177FC  58DE               	subwfb	postinc2,w,c
 21174  0177FE  0EE8               	movlw	-24
 21175  017800  50E3               	movf	plusw1,w,c
 21176  017802  58DE               	subwfb	postinc2,w,c
 21177  017804  0EE9               	movlw	-23
 21178  017806  50E3               	movf	plusw1,w,c
 21179  017808  58DE               	subwfb	postinc2,w,c
 21180  01780A  0EEA               	movlw	-22
 21181  01780C  50E3               	movf	plusw1,w,c
 21182  01780E  58DE               	subwfb	postinc2,w,c
 21183  017810  0EEB               	movlw	-21
 21184  017812  50E3               	movf	plusw1,w,c
 21185  017814  58DE               	subwfb	postinc2,w,c
 21186  017816  0EEC               	movlw	-20
 21187  017818  50E3               	movf	plusw1,w,c
 21188  01781A  58DE               	subwfb	postinc2,w,c
 21189  01781C  0EED               	movlw	-19
 21190  01781E  50E3               	movf	plusw1,w,c
 21191  017820  58DE               	subwfb	postinc2,w,c
 21192  017822  A0D8               	btfss	status,0,c
 21193  017824  D021               	goto	l8138
 21194                           
 21195                           ;stkvar	_divisor @ sp[(-10)+-16]
 21196                           ;stkvar	_dividend @ sp[(-10)+-8]
 21197  017826  50E1               	movf	fsr1l,w,c
 21198  017828  0FEE               	addlw	-18
 21199  01782A  6ED9               	movwf	fsr2l,c
 21200  01782C  50E2               	movf	fsr1h,w,c
 21201  01782E  6EDA               	movwf	fsr2h,c
 21202  017830  0EFF               	movlw	255
 21203  017832  22DA               	addwfc	fsr2h,f,c
 21204  017834  0EE6               	movlw	-26
 21205  017836  50E3               	movf	plusw1,w,c
 21206  017838  5EDE               	subwf	postinc2,f,c
 21207  01783A  0EE7               	movlw	-25
 21208  01783C  50E3               	movf	plusw1,w,c
 21209  01783E  5ADE               	subwfb	postinc2,f,c
 21210  017840  0EE8               	movlw	-24
 21211  017842  50E3               	movf	plusw1,w,c
 21212  017844  5ADE               	subwfb	postinc2,f,c
 21213  017846  0EE9               	movlw	-23
 21214  017848  50E3               	movf	plusw1,w,c
 21215  01784A  5ADE               	subwfb	postinc2,f,c
 21216  01784C  0EEA               	movlw	-22
 21217  01784E  50E3               	movf	plusw1,w,c
 21218  017850  5ADE               	subwfb	postinc2,f,c
 21219  017852  0EEB               	movlw	-21
 21220  017854  50E3               	movf	plusw1,w,c
 21221  017856  5ADE               	subwfb	postinc2,f,c
 21222  017858  0EEC               	movlw	-20
 21223  01785A  50E3               	movf	plusw1,w,c
 21224  01785C  5ADE               	subwfb	postinc2,f,c
 21225  01785E  0EED               	movlw	-19
 21226  017860  50E3               	movf	plusw1,w,c
 21227  017862  5ADE               	subwfb	postinc2,f,c
 21228                           
 21229                           ;stkvar	_quotient @ sp[(-10)+0]
 21230  017864  0EF6               	movlw	-10
 21231  017866  80E3               	bsf	plusw1,0,c
 21232  017868                     l8138:
 21233                           
 21234                           ;stkvar	_divisor @ sp[(-10)+-16]
 21235  017868  90D8               	bcf	status,0,c
 21236  01786A  0EED               	movlw	-19
 21237  01786C  32E3               	rrcf	plusw1,f,c
 21238  01786E  0EEC               	movlw	-20
 21239  017870  32E3               	rrcf	plusw1,f,c
 21240  017872  0EEB               	movlw	-21
 21241  017874  32E3               	rrcf	plusw1,f,c
 21242  017876  0EEA               	movlw	-22
 21243  017878  32E3               	rrcf	plusw1,f,c
 21244  01787A  0EE9               	movlw	-23
 21245  01787C  32E3               	rrcf	plusw1,f,c
 21246  01787E  0EE8               	movlw	-24
 21247  017880  32E3               	rrcf	plusw1,f,c
 21248  017882  0EE7               	movlw	-25
 21249  017884  32E3               	rrcf	plusw1,f,c
 21250  017886  0EE6               	movlw	-26
 21251  017888  32E3               	rrcf	plusw1,f,c
 21252                           
 21253                           ;stkvar	_counter @ sp[(-10)+9]
 21254  01788A  0EFF               	movlw	-1
 21255  01788C  50E3               	movf	plusw1,w,c
 21256  01788E  6E01               	movwf	btemp^0,c
 21257  017890  0E01               	movlw	1
 21258  017892  5E01               	subwf	btemp^0,f,c
 21259  017894  0EFF               	movlw	-1
 21260  017896  0060  F007  FFE3   	movff	btemp,plusw1
 21261  01789C  A4D8               	btfss	status,2,c
 21262  01789E  D791               	goto	u6360
 21263  0178A0                     u6380:
 21264                           
 21265                           ;stkvar	_sign @ sp[(-10)+8]
 21266  0178A0  0EFE               	movlw	-2
 21267  0178A2  50E3               	movf	plusw1,w,c
 21268  0178A4  B4D8               	btfsc	status,2,c
 21269  0178A6  D025               	goto	u6400
 21270                           
 21271                           ;stkvar	_quotient @ sp[(-10)+0]
 21272                           ;stkvar	_quotient @ sp[(-10)+0]
 21273  0178A8  0EF6               	movlw	-10
 21274  0178AA  6CE3               	negf	plusw1,c
 21275  0178AC  0EF7               	movlw	-9
 21276  0178AE  1EE3               	comf	plusw1,f,c
 21277  0178B0  0EF8               	movlw	-8
 21278  0178B2  1EE3               	comf	plusw1,f,c
 21279  0178B4  0EF9               	movlw	-7
 21280  0178B6  1EE3               	comf	plusw1,f,c
 21281  0178B8  0EFA               	movlw	-6
 21282  0178BA  1EE3               	comf	plusw1,f,c
 21283  0178BC  0EFB               	movlw	-5
 21284  0178BE  1EE3               	comf	plusw1,f,c
 21285  0178C0  0EFC               	movlw	-4
 21286  0178C2  1EE3               	comf	plusw1,f,c
 21287  0178C4  0EFD               	movlw	-3
 21288  0178C6  1EE3               	comf	plusw1,f,c
 21289  0178C8  E314               	bnc	u6400
 21290  0178CA  0EF7               	movlw	-9
 21291  0178CC  2AE3               	incf	plusw1,f,c
 21292  0178CE  E311               	bnc	u6400
 21293  0178D0  0EF8               	movlw	-8
 21294  0178D2  2AE3               	incf	plusw1,f,c
 21295  0178D4  E30E               	bnc	u6400
 21296  0178D6  0EF9               	movlw	-7
 21297  0178D8  2AE3               	incf	plusw1,f,c
 21298  0178DA  E30B               	bnc	u6400
 21299  0178DC  0EFA               	movlw	-6
 21300  0178DE  2AE3               	incf	plusw1,f,c
 21301  0178E0  E308               	bnc	u6400
 21302  0178E2  0EFB               	movlw	-5
 21303  0178E4  2AE3               	incf	plusw1,f,c
 21304  0178E6  E305               	bnc	u6400
 21305  0178E8  0EFC               	movlw	-4
 21306  0178EA  2AE3               	incf	plusw1,f,c
 21307  0178EC  E302               	bnc	u6400
 21308  0178EE  0EFD               	movlw	-3
 21309  0178F0  2AE3               	incf	plusw1,f,c
 21310  0178F2                     u6400:
 21311                           
 21312                           ;stkvar	_quotient @ sp[(-10)+0]
 21313  0178F2  0EF6               	movlw	246
 21314  0178F4  24E1               	addwf	fsr1l,w,c
 21315  0178F6  6ED9               	movwf	fsr2l,c
 21316  0178F8  0EFF               	movlw	255
 21317  0178FA  20E2               	addwfc	fsr1h,w,c
 21318  0178FC  6EDA               	movwf	fsr2h,c
 21319                           
 21320                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21321  0178FE  0E08               	movlw	8
 21322  017900  6E01               	movwf	btemp^0,c
 21323  017902  0EEE               	movlw	-18
 21324  017904                     us641999:
 21325  017904  006F FF7B FFE3     	movff	postinc2,plusw1
 21326  01790A  28E8               	incf	wreg,w,c
 21327  01790C  2E01               	decfsz	btemp^0,f,c
 21328  01790E  D7FA               	bra	us641999
 21329                           
 21330                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21331  017910  0EF6               	movlw	246
 21332  017912  26E1               	addwf	fsr1l,f,c
 21333  017914  0EFF               	movlw	255
 21334  017916  22E2               	addwfc	fsr1h,f,c
 21335  017918  0012               	return		;funcret
 21336  01791A                     __end_of___aodiv:
 21337                           	opt callstack 0
 21338                           
 21339 ;; *************** function _ctoa *****************
 21340 ;; Defined at:
 21341 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21342 ;; Parameters:    Size  Location     Type
 21343 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21344 ;;		 -> f(6), NULL(0), 
 21345 ;;  c               1  [STACK] unsigned char 
 21346 ;; Auto vars:     Size  Location     Type
 21347 ;;  w               2  [STACK] int 
 21348 ;;  l               2    0        int 
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  2  [STACK] int 
 21351 ;; Registers used:
 21352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21353 ;; Tracked objects:
 21354 ;;		On entry : 0/0
 21355 ;;		On exit  : 0/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21362 ;;Total ram usage:        0 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; Hardware stack levels required when called:   20
 21365 ;; This function calls:
 21366 ;;		_pad
 21367 ;; This function is called by:
 21368 ;;		_vfpfcnvrt
 21369 ;; This function uses a reentrant model
 21370 ;;
 21371                           
 21372                           	psect	text72
 21373  01AC06                     __ptext72:
 21374                           	opt callstack 0
 21375  01AC06                     _ctoa:
 21376                           	opt callstack 0
 21377                           
 21378                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21379  01AC06  52E6               	movf	postinc1,f,c
 21380  01AC08  52E6               	movf	postinc1,f,c
 21381                           
 21382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21383                           
 21384                           ;incstack = 0
 21385 ;; hardware stack exceeded
 21386  01AC0A  503A               	movf	_width^0,w,c
 21387  01AC0C  103B               	iorwf	(_width+1)^0,w,c
 21388  01AC0E  A4D8               	btfss	status,2,c
 21389  01AC10  D009               	goto	l11912
 21390                           
 21391                           ;stkvar	_w @ sp[(-2)+0]
 21392  01AC12  0EFE               	movlw	-2
 21393  01AC14  0060  F0EB  FFE3   	movff	_width,plusw1
 21394  01AC1A  0EFF               	movlw	-1
 21395  01AC1C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21396  01AC22  D016               	goto	l11914
 21397  01AC24                     l11912:
 21398  01AC24  0EFF               	movlw	255
 21399  01AC26  6E0B               	movwf	(btemp+10)^0,c
 21400  01AC28  0EFF               	movlw	255
 21401  01AC2A  6E0C               	movwf	(btemp+11)^0,c
 21402  01AC2C  0060  F0E8  F009   	movff	_width,btemp+8
 21403  01AC32  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21404  01AC38  500B               	movf	(btemp+10)^0,w,c
 21405  01AC3A  2609               	addwf	(btemp+8)^0,f,c
 21406  01AC3C  500C               	movf	(btemp+11)^0,w,c
 21407  01AC3E  220A               	addwfc	(btemp+9)^0,f,c
 21408                           
 21409                           ;stkvar	_w @ sp[(-2)+0]
 21410  01AC40  0EFE               	movlw	-2
 21411  01AC42  0060  F027  FFE3   	movff	btemp+8,plusw1
 21412  01AC48  0EFF               	movlw	-1
 21413  01AC4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21414  01AC50                     l11914:
 21415                           
 21416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21417                           ;stkvar	_c @ sp[(-2)+-3]
 21418  01AC50  0EFB               	movlw	-5
 21419  01AC52  006F FF8C  F297    	movff	plusw1,_dbuf
 21420                           
 21421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21422  01AC58  0102               	movlb	2	; () banked
 21423  01AC5A  6B98               	clrf	(_dbuf+1)& (0+255),b
 21424                           
 21425                           ; BSR set to: 2
 21426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21427                           ;stkvar	_w @ sp[(-2)+0]
 21428  01AC5C  0EFE               	movlw	-2
 21429  01AC5E  006F FF8F FFE6     	movff	plusw1,postinc1
 21430  01AC64  006F FF8F FFE6     	movff	plusw1,postinc1
 21431  01AC6A  0E97               	movlw	low _dbuf
 21432  01AC6C  6EE6               	movwf	postinc1,c
 21433  01AC6E  0E02               	movlw	high _dbuf
 21434  01AC70  6EE6               	movwf	postinc1,c
 21435                           
 21436                           ;stkvar	_fp @ sp[(-6)+-2]
 21437  01AC72  0EF8               	movlw	-8
 21438  01AC74  006F FF8F FFE6     	movff	plusw1,postinc1
 21439  01AC7A  006F FF8F FFE6     	movff	plusw1,postinc1
 21440  01AC80  EC67  F0CD         	call	_pad	;wreg free
 21441                           
 21442                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21443  01AC84  0EFB               	movlw	251
 21444  01AC86  26E1               	addwf	fsr1l,f,c
 21445  01AC88  0EFF               	movlw	255
 21446  01AC8A  22E2               	addwfc	fsr1h,f,c
 21447  01AC8C  0012               	return		;funcret
 21448  01AC8E                     __end_of_ctoa:
 21449                           	opt callstack 0
 21450                           
 21451 ;; *************** function _pad *****************
 21452 ;; Defined at:
 21453 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21456 ;;		 -> f(6), NULL(0), 
 21457 ;;  buf             2  [STACK] PTR unsigned char 
 21458 ;;		 -> dbuf(80), 
 21459 ;;  p               2  [STACK] int 
 21460 ;; Auto vars:     Size  Location     Type
 21461 ;;  w               2  [STACK] int 
 21462 ;;  i               2  [STACK] int 
 21463 ;; Return value:  Size  Location     Type
 21464 ;;                  2  [STACK] int 
 21465 ;; Registers used:
 21466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21467 ;; Tracked objects:
 21468 ;;		On entry : 0/2
 21469 ;;		On exit  : 0/0
 21470 ;;		Unchanged: 0/0
 21471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21476 ;;Total ram usage:        0 bytes
 21477 ;; Hardware stack levels used:    1
 21478 ;; Hardware stack levels required when called:   19
 21479 ;; This function calls:
 21480 ;;		_fputc
 21481 ;;		_fputs
 21482 ;;		_strlen
 21483 ;; This function is called by:
 21484 ;;		_ctoa
 21485 ;;		_dtoa
 21486 ;;		_efgtoa
 21487 ;;		_utoa
 21488 ;;		_xtoa
 21489 ;; This function uses a reentrant model
 21490 ;;
 21491                           
 21492                           	psect	text73
 21493  019ACE                     __ptext73:
 21494                           	opt callstack 0
 21495  019ACE                     _pad:
 21496                           	opt callstack 0
 21497                           
 21498                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21499  019ACE  52E6               	movf	postinc1,f,c
 21500  019AD0  52E6               	movf	postinc1,f,c
 21501  019AD2  52E6               	movf	postinc1,f,c
 21502  019AD4  52E6               	movf	postinc1,f,c
 21503                           
 21504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21505                           
 21506                           ;incstack = 0
 21507 ;; hardware stack exceeded
 21508  019AD6  A03E               	btfss	_flags^0,0,c
 21509  019AD8  D010               	goto	l11874
 21510                           
 21511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21512                           ;stkvar	_fp @ sp[(-4)+-2]
 21513  019ADA  0EFA               	movlw	-6
 21514  019ADC  006F FF8F FFE6     	movff	plusw1,postinc1
 21515  019AE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21516                           
 21517                           ;stkvar	_buf @ sp[(-6)+-4]
 21518  019AE8  0EF6               	movlw	-10
 21519  019AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 21520  019AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 21521  019AF6  ECDD  F0D4         	call	_fputs	;wreg free
 21522  019AFA                     l11874:
 21523                           
 21524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21525                           ;stkvar	_p @ sp[(-4)+-6]
 21526  019AFA  0EF7               	movlw	-9
 21527  019AFC  BEE3               	btfsc	plusw1,7,c
 21528  019AFE  D011               	goto	l11878
 21529                           
 21530                           ;stkvar	_p @ sp[(-4)+-6]
 21531                           ;stkvar	_w @ sp[(-4)+0]
 21532  019B00  0EF6               	movlw	-10
 21533  019B02  006F FF8C  F001    	movff	plusw1,btemp
 21534  019B08  0EFC               	movlw	-4
 21535  019B0A  0060  F007  FFE3   	movff	btemp,plusw1
 21536  019B10  0EF7               	movlw	-9
 21537  019B12  006F FF8C  F001    	movff	plusw1,btemp
 21538  019B18  0EFD               	movlw	-3
 21539  019B1A  0060  F007  FFE3   	movff	btemp,plusw1
 21540  019B20  D004               	goto	l2138
 21541  019B22                     l11878:
 21542                           
 21543                           ;stkvar	_w @ sp[(-4)+0]
 21544  019B22  0EFC               	movlw	-4
 21545  019B24  6AE3               	clrf	plusw1,c
 21546  019B26  0EFD               	movlw	-3
 21547  019B28  6AE3               	clrf	plusw1,c
 21548  019B2A                     l2138:
 21549                           
 21550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21551                           ;stkvar	_i @ sp[(-4)+2]
 21552  019B2A  0EFE               	movlw	-2
 21553  019B2C  6AE3               	clrf	plusw1,c
 21554  019B2E  0EFF               	movlw	-1
 21555  019B30  6AE3               	clrf	plusw1,c
 21556                           
 21557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21558  019B32  D01E               	goto	l11884
 21559  019B34                     l11880:
 21560                           
 21561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21562                           ;stkvar	_fp @ sp[(-4)+-2]
 21563  019B34  0EFA               	movlw	-6
 21564  019B36  006F FF8F FFE6     	movff	plusw1,postinc1
 21565  019B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 21566  019B42  0E20               	movlw	32
 21567  019B44  6EE6               	movwf	postinc1,c
 21568  019B46  0E00               	movlw	0
 21569  019B48  6EE6               	movwf	postinc1,c
 21570  019B4A  ECBC  F0CB         	call	_fputc	;wreg free
 21571                           
 21572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21573                           ;stkvar	_i @ sp[(-4)+2]
 21574  019B4E  0EFE               	movlw	-2
 21575  019B50  50E3               	movf	plusw1,w,c
 21576  019B52  0F01               	addlw	1
 21577  019B54  6E01               	movwf	btemp^0,c
 21578  019B56  0EFE               	movlw	-2
 21579  019B58  0060  F007  FFE3   	movff	btemp,plusw1
 21580  019B5E  6A01               	clrf	btemp^0,c
 21581  019B60  0EFF               	movlw	-1
 21582  019B62  50E3               	movf	plusw1,w,c
 21583  019B64  2001               	addwfc	btemp^0,w,c
 21584  019B66  6E01               	movwf	btemp^0,c
 21585  019B68  0EFF               	movlw	-1
 21586  019B6A  0060  F007  FFE3   	movff	btemp,plusw1
 21587  019B70                     l11884:
 21588                           
 21589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21590                           ;stkvar	_w @ sp[(-4)+0]
 21591                           ;stkvar	_i @ sp[(-4)+2]
 21592  019B70  50E1               	movf	fsr1l,w,c
 21593  019B72  0FFE               	addlw	-2
 21594  019B74  6ED9               	movwf	fsr2l,c
 21595  019B76  50E2               	movf	fsr1h,w,c
 21596  019B78  6EDA               	movwf	fsr2h,c
 21597  019B7A  0EFF               	movlw	255
 21598  019B7C  22DA               	addwfc	fsr2h,f,c
 21599  019B7E  0EFC               	movlw	-4
 21600  019B80  50E3               	movf	plusw1,w,c
 21601  019B82  5CDE               	subwf	postinc2,w,c
 21602  019B84  50DE               	movf	postinc2,w,c
 21603  019B86  0A80               	xorlw	128
 21604  019B88  6E01               	movwf	btemp^0,c
 21605  019B8A  0EFD               	movlw	-3
 21606  019B8C  50E3               	movf	plusw1,w,c
 21607  019B8E  0A80               	xorlw	128
 21608  019B90  5801               	subwfb	btemp^0,w,c
 21609  019B92  A0D8               	btfss	status,0,c
 21610  019B94  D7CF               	goto	l11880
 21611                           
 21612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21613  019B96  B03E               	btfsc	_flags^0,0,c
 21614  019B98  D010               	goto	l11888
 21615                           
 21616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21617                           ;stkvar	_fp @ sp[(-4)+-2]
 21618  019B9A  0EFA               	movlw	-6
 21619  019B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 21620  019BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 21621                           
 21622                           ;stkvar	_buf @ sp[(-6)+-4]
 21623  019BA8  0EF6               	movlw	-10
 21624  019BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21625  019BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 21626  019BB6  ECDD  F0D4         	call	_fputs	;wreg free
 21627  019BBA                     l11888:
 21628                           
 21629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21630                           ;stkvar	_w @ sp[(-4)+0]
 21631                           ;stkvar	_buf @ sp[(-4)+-4]
 21632  019BBA  0EF8               	movlw	-8
 21633  019BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 21634  019BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 21635  019BC8  EC8C  F0D4         	call	_strlen	;wreg free
 21636  019BCC  0EFC               	movlw	-4
 21637  019BCE  50E3               	movf	plusw1,w,c
 21638  019BD0  2601               	addwf	btemp^0,f,c
 21639  019BD2  0EFD               	movlw	-3
 21640  019BD4  50E3               	movf	plusw1,w,c
 21641  019BD6  2202               	addwfc	(btemp+1)^0,f,c
 21642                           
 21643                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21644  019BD8  0EF6               	movlw	246
 21645  019BDA  26E1               	addwf	fsr1l,f,c
 21646  019BDC  0EFF               	movlw	255
 21647  019BDE  22E2               	addwfc	fsr1h,f,c
 21648  019BE0  0012               	return		;funcret
 21649  019BE2                     __end_of_pad:
 21650                           	opt callstack 0
 21651                           
 21652 ;; *************** function _strlen *****************
 21653 ;; Defined at:
 21654 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21655 ;; Parameters:    Size  Location     Type
 21656 ;;  s               2  [STACK] PTR const unsigned char 
 21657 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21658 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21659 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21660 ;;		 -> V(191), 
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;  a               2  [STACK] PTR const unsigned char 
 21663 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21664 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21665 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21666 ;;		 -> V(191), 
 21667 ;; Return value:  Size  Location     Type
 21668 ;;                  2  [STACK] unsigned int 
 21669 ;; Registers used:
 21670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21671 ;; Tracked objects:
 21672 ;;		On entry : 0/0
 21673 ;;		On exit  : 0/0
 21674 ;;		Unchanged: 0/0
 21675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;Total ram usage:        0 bytes
 21681 ;; Hardware stack levels used:    1
 21682 ;; Hardware stack levels required when called:   15
 21683 ;; This function calls:
 21684 ;;		Nothing
 21685 ;; This function is called by:
 21686 ;;		_eaDogM_WriteString
 21687 ;;		_spinners
 21688 ;;		_calc_bsoc
 21689 ;;		_pad
 21690 ;;		_stoa
 21691 ;; This function uses a reentrant model
 21692 ;;
 21693                           
 21694                           	psect	text74
 21695  01A918                     __ptext74:
 21696                           	opt callstack 0
 21697  01A918                     _strlen:
 21698                           	opt callstack 0
 21699                           
 21700                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21701  01A918  52E6               	movf	postinc1,f,c
 21702  01A91A  52E6               	movf	postinc1,f,c
 21703                           
 21704                           ;stkvar	_s @ sp[(-2)+-2]
 21705                           
 21706                           ;incstack = 0
 21707 ;; hardware stack exceeded
 21708  01A91C  0EFC               	movlw	-4
 21709  01A91E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21710  01A924  0EFD               	movlw	-3
 21711  01A926  006F FF8C  F00C    	movff	plusw1,btemp+11
 21712                           
 21713                           ;stkvar	_a @ sp[(-2)+0]
 21714  01A92C  0EFF               	movlw	-1
 21715  01A92E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21716  01A934  0EFE               	movlw	-2
 21717  01A936  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21718  01A93C  D011               	goto	l7690
 21719  01A93E                     l7688:
 21720                           
 21721                           ;stkvar	_s @ sp[(-2)+-2]
 21722  01A93E  0EFC               	movlw	-4
 21723  01A940  50E3               	movf	plusw1,w,c
 21724  01A942  0F01               	addlw	1
 21725  01A944  6E01               	movwf	btemp^0,c
 21726  01A946  0EFC               	movlw	-4
 21727  01A948  0060  F007  FFE3   	movff	btemp,plusw1
 21728  01A94E  6A01               	clrf	btemp^0,c
 21729  01A950  0EFD               	movlw	-3
 21730  01A952  50E3               	movf	plusw1,w,c
 21731  01A954  2001               	addwfc	btemp^0,w,c
 21732  01A956  6E01               	movwf	btemp^0,c
 21733  01A958  0EFD               	movlw	-3
 21734  01A95A  0060  F007  FFE3   	movff	btemp,plusw1
 21735  01A960                     l7690:
 21736                           
 21737                           ;stkvar	_s @ sp[(-2)+-2]
 21738  01A960  0EFC               	movlw	-4
 21739  01A962  006F FF8F FFF6     	movff	plusw1,tblptrl
 21740  01A968  0EFD               	movlw	-3
 21741  01A96A  006F FF8F FFF7     	movff	plusw1,tblptrh
 21742  01A970  0E00               	movlw	low (__mediumconst shr (0+16))
 21743  01A972  6EF8               	movwf	tblptru,c
 21744  01A974  0E1F               	movlw	(high __ramtop+-1)
 21745  01A976  64F7               	cpfsgt	tblptrh,c
 21746  01A978  D003               	bra	u5427
 21747  01A97A  0008               	tblrd		*
 21748  01A97C  50F5               	movf	tablat,w,c
 21749  01A97E  D007               	bra	u5420
 21750  01A980                     u5427:
 21751  01A980  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21752  01A986  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21753  01A98C  50EF               	movf	indf0,w,c
 21754  01A98E                     u5420:
 21755  01A98E  0900               	iorlw	0
 21756  01A990  A4D8               	btfss	status,2,c
 21757  01A992  D7D5               	goto	l7688
 21758                           
 21759                           ;stkvar	_a @ sp[(-2)+0]
 21760                           ;stkvar	_s @ sp[(-2)+-2]
 21761  01A994  0EFC               	movlw	-4
 21762  01A996  006F FF8C  F001    	movff	plusw1,btemp
 21763  01A99C  0EFD               	movlw	-3
 21764  01A99E  006F FF8C  F002    	movff	plusw1,btemp+1
 21765  01A9A4  0EFE               	movlw	-2
 21766  01A9A6  50E3               	movf	plusw1,w,c
 21767  01A9A8  5E01               	subwf	btemp^0,f,c
 21768  01A9AA  0EFF               	movlw	-1
 21769  01A9AC  50E3               	movf	plusw1,w,c
 21770  01A9AE  5A02               	subwfb	(btemp+1)^0,f,c
 21771                           
 21772                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21773  01A9B0  52E5               	movf	postdec1,f,c
 21774  01A9B2  52E5               	movf	postdec1,f,c
 21775  01A9B4  52E5               	movf	postdec1,f,c
 21776  01A9B6  52E5               	movf	postdec1,f,c
 21777  01A9B8  0012               	return		;funcret
 21778  01A9BA                     __end_of_strlen:
 21779                           	opt callstack 0
 21780                           
 21781 ;; *************** function _fputs *****************
 21782 ;; Defined at:
 21783 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21784 ;; Parameters:    Size  Location     Type
 21785 ;;  s               2  [STACK] PTR const unsigned char 
 21786 ;;		 -> dbuf(80), 
 21787 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21788 ;;		 -> f(6), NULL(0), 
 21789 ;; Auto vars:     Size  Location     Type
 21790 ;;  i               2  [STACK] int 
 21791 ;;  c               1  [STACK] unsigned char 
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  2  [STACK] int 
 21794 ;; Registers used:
 21795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/2
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21805 ;;Total ram usage:        0 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:   18
 21808 ;; This function calls:
 21809 ;;		_fputc
 21810 ;; This function is called by:
 21811 ;;		_pad
 21812 ;; This function uses a reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text75
 21816  01A9BA                     __ptext75:
 21817                           	opt callstack 0
 21818  01A9BA                     _fputs:
 21819                           	opt callstack 0
 21820                           
 21821                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21822  01A9BA  52E6               	movf	postinc1,f,c
 21823  01A9BC  52E6               	movf	postinc1,f,c
 21824  01A9BE  52E6               	movf	postinc1,f,c
 21825                           
 21826                           ;stkvar	_i @ sp[(-3)+0]
 21827                           
 21828                           ;incstack = 0
 21829 ;; hardware stack exceeded
 21830  01A9C0  0EFD               	movlw	-3
 21831  01A9C2  6AE3               	clrf	plusw1,c
 21832  01A9C4  0EFE               	movlw	-2
 21833  01A9C6  6AE3               	clrf	plusw1,c
 21834  01A9C8  D01F               	goto	l11826
 21835  01A9CA                     l11822:
 21836                           
 21837                           ;stkvar	_fp @ sp[(-3)+-4]
 21838  01A9CA  0EF9               	movlw	-7
 21839  01A9CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21840  01A9D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21841                           
 21842                           ;stkvar	_c @ sp[(-5)+2]
 21843  01A9D8  0EFD               	movlw	-3
 21844  01A9DA  50E3               	movf	plusw1,w,c
 21845  01A9DC  6EE6               	movwf	postinc1,c
 21846  01A9DE  0E00               	movlw	0
 21847  01A9E0  6EE6               	movwf	postinc1,c
 21848  01A9E2  ECBC  F0CB         	call	_fputc	;wreg free
 21849                           
 21850                           ;stkvar	_i @ sp[(-3)+0]
 21851  01A9E6  0EFD               	movlw	-3
 21852  01A9E8  50E3               	movf	plusw1,w,c
 21853  01A9EA  0F01               	addlw	1
 21854  01A9EC  6E01               	movwf	btemp^0,c
 21855  01A9EE  0EFD               	movlw	-3
 21856  01A9F0  0060  F007  FFE3   	movff	btemp,plusw1
 21857  01A9F6  6A01               	clrf	btemp^0,c
 21858  01A9F8  0EFE               	movlw	-2
 21859  01A9FA  50E3               	movf	plusw1,w,c
 21860  01A9FC  2001               	addwfc	btemp^0,w,c
 21861  01A9FE  6E01               	movwf	btemp^0,c
 21862  01AA00  0EFE               	movlw	-2
 21863  01AA02  0060  F007  FFE3   	movff	btemp,plusw1
 21864  01AA08                     l11826:
 21865                           
 21866                           ;stkvar	_i @ sp[(-3)+0]
 21867  01AA08  0EFD               	movlw	-3
 21868  01AA0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21869  01AA10  0EFE               	movlw	-2
 21870  01AA12  006F FF8C  F00C    	movff	plusw1,btemp+11
 21871                           
 21872                           ;stkvar	_s @ sp[(-3)+-2]
 21873  01AA18  0EFB               	movlw	-5
 21874  01AA1A  006F FF8C  F009    	movff	plusw1,btemp+8
 21875  01AA20  0EFC               	movlw	-4
 21876  01AA22  006F FF8C  F00A    	movff	plusw1,btemp+9
 21877  01AA28  500B               	movf	(btemp+10)^0,w,c
 21878  01AA2A  2409               	addwf	(btemp+8)^0,w,c
 21879  01AA2C  6ED9               	movwf	fsr2l,c
 21880  01AA2E  500C               	movf	(btemp+11)^0,w,c
 21881  01AA30  200A               	addwfc	(btemp+9)^0,w,c
 21882  01AA32  6EDA               	movwf	fsr2h,c
 21883  01AA34  50DF               	movf	indf2,w,c
 21884  01AA36  6E0C               	movwf	(btemp+11)^0,c
 21885                           
 21886                           ;stkvar	_c @ sp[(-3)+2]
 21887  01AA38  0EFF               	movlw	-1
 21888  01AA3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21889  01AA40  0EFF               	movlw	-1
 21890  01AA42  50E3               	movf	plusw1,w,c
 21891  01AA44  A4D8               	btfss	status,2,c
 21892  01AA46  D7C1               	goto	l11822
 21893                           
 21894                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21895  01AA48  0EF9               	movlw	249
 21896  01AA4A  26E1               	addwf	fsr1l,f,c
 21897  01AA4C  0EFF               	movlw	255
 21898  01AA4E  22E2               	addwfc	fsr1h,f,c
 21899  01AA50  0012               	return		;funcret
 21900  01AA52                     __end_of_fputs:
 21901                           	opt callstack 0
 21902                           
 21903 ;; *************** function _fputc *****************
 21904 ;; Defined at:
 21905 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21906 ;; Parameters:    Size  Location     Type
 21907 ;;  c               2  [STACK] int 
 21908 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21909 ;;		 -> f(6), NULL(0), 
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;		None
 21912 ;; Return value:  Size  Location     Type
 21913 ;;                  2  [STACK] int 
 21914 ;; Registers used:
 21915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21916 ;; Tracked objects:
 21917 ;;		On entry : 0/0
 21918 ;;		On exit  : 0/0
 21919 ;;		Unchanged: 0/0
 21920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21925 ;;Total ram usage:        0 bytes
 21926 ;; Hardware stack levels used:    1
 21927 ;; Hardware stack levels required when called:   17
 21928 ;; This function calls:
 21929 ;;		_putch
 21930 ;; This function is called by:
 21931 ;;		_pad
 21932 ;;		_stoa
 21933 ;;		_vfpfcnvrt
 21934 ;;		_fputs
 21935 ;; This function uses a reentrant model
 21936 ;;
 21937                           
 21938                           	psect	text76
 21939  019778                     __ptext76:
 21940                           	opt callstack 0
 21941  019778                     _fputc:
 21942                           	opt callstack 0
 21943                           
 21944                           ;stkvar	_fp @ sp[(0)+-4]
 21945                           
 21946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21947                           ;incstack = 0
 21948 ;; hardware stack exceeded
 21949  019778  0EFC               	movlw	-4
 21950  01977A  006F FF8C  F001    	movff	plusw1,btemp
 21951  019780  0EFD               	movlw	-3
 21952  019782  50E3               	movf	plusw1,w,c
 21953  019784  1001               	iorwf	btemp^0,w,c
 21954  019786  B4D8               	btfsc	status,2,c
 21955  019788  D009               	goto	u10750
 21956                           
 21957                           ;stkvar	_fp @ sp[(0)+-4]
 21958  01978A  0EFC               	movlw	-4
 21959  01978C  006F FF8C  F001    	movff	plusw1,btemp
 21960  019792  0EFD               	movlw	-3
 21961  019794  50E3               	movf	plusw1,w,c
 21962  019796  1001               	iorwf	btemp^0,w,c
 21963  019798  A4D8               	btfss	status,2,c
 21964  01979A  D006               	goto	l11810
 21965  01979C                     u10750:
 21966                           
 21967                           ;stkvar	_c @ sp[(0)+-2]
 21968  01979C  0EFE               	movlw	-2
 21969  01979E  50E3               	movf	plusw1,w,c
 21970  0197A0  6EE6               	movwf	postinc1,c
 21971  0197A2  ECD9  F0DF         	call	_putch	;wreg free
 21972  0197A6  D075               	goto	l3184
 21973  0197A8                     l11810:
 21974                           
 21975                           ;stkvar	_fp @ sp[(0)+-4]
 21976  0197A8  0EFC               	movlw	-4
 21977  0197AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21978  0197B0  0EFD               	movlw	-3
 21979  0197B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21980  0197B8  0E04               	movlw	4
 21981  0197BA  240B               	addwf	(btemp+10)^0,w,c
 21982  0197BC  6ED9               	movwf	fsr2l,c
 21983  0197BE  0E00               	movlw	0
 21984  0197C0  200C               	addwfc	(btemp+11)^0,w,c
 21985  0197C2  6EDA               	movwf	fsr2h,c
 21986  0197C4  50DE               	movf	postinc2,w,c
 21987  0197C6  10DE               	iorwf	postinc2,w,c
 21988  0197C8  B4D8               	btfsc	status,2,c
 21989  0197CA  D026               	goto	u10770
 21990                           
 21991                           ;stkvar	_fp @ sp[(0)+-4]
 21992  0197CC  0EFC               	movlw	-4
 21993  0197CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 21994  0197D4  0EFD               	movlw	-3
 21995  0197D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21996  0197DC  0E04               	movlw	4
 21997  0197DE  240B               	addwf	(btemp+10)^0,w,c
 21998  0197E0  6ED9               	movwf	fsr2l,c
 21999  0197E2  0E00               	movlw	0
 22000  0197E4  200C               	addwfc	(btemp+11)^0,w,c
 22001  0197E6  6EDA               	movwf	fsr2h,c
 22002                           
 22003                           ;stkvar	_fp @ sp[(0)+-4]
 22004  0197E8  0EFC               	movlw	-4
 22005  0197EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22006  0197F0  0EFD               	movlw	-3
 22007  0197F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22008  0197F8  0E02               	movlw	2
 22009  0197FA  240B               	addwf	(btemp+10)^0,w,c
 22010  0197FC  6EE9               	movwf	fsr0l,c
 22011  0197FE  0E00               	movlw	0
 22012  019800  200C               	addwfc	(btemp+11)^0,w,c
 22013  019802  6EEA               	movwf	fsr0h,c
 22014  019804  50DE               	movf	postinc2,w,c
 22015  019806  5CEE               	subwf	postinc0,w,c
 22016  019808  50EE               	movf	postinc0,w,c
 22017  01980A  0A80               	xorlw	128
 22018  01980C  6E01               	movwf	btemp^0,c
 22019  01980E  50DE               	movf	postinc2,w,c
 22020  019810  0A80               	xorlw	128
 22021  019812  5801               	subwfb	btemp^0,w,c
 22022  019814  B0D8               	btfsc	status,0,c
 22023  019816  D03D               	goto	l3184
 22024  019818                     u10770:
 22025                           
 22026                           ;stkvar	_c @ sp[(0)+-2]
 22027                           ;stkvar	_fp @ sp[(0)+-4]
 22028  019818  0EFC               	movlw	-4
 22029  01981A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22030  019820  0EFD               	movlw	-3
 22031  019822  006F FF8C  F00C    	movff	plusw1,btemp+11
 22032  019828  0E02               	movlw	2
 22033  01982A  240B               	addwf	(btemp+10)^0,w,c
 22034  01982C  6ED9               	movwf	fsr2l,c
 22035  01982E  0E00               	movlw	0
 22036  019830  200C               	addwfc	(btemp+11)^0,w,c
 22037  019832  6EDA               	movwf	fsr2h,c
 22038  019834  006F FF78  F00B    	movff	postinc2,btemp+10
 22039  01983A  006F FF74  F00C    	movff	postdec2,btemp+11
 22040                           
 22041                           ;stkvar	_fp @ sp[(0)+-4]
 22042  019840  0EFC               	movlw	-4
 22043  019842  006F FF8F FFD9     	movff	plusw1,fsr2l
 22044  019848  0EFD               	movlw	-3
 22045  01984A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22046  019850  006F FF78  F009    	movff	postinc2,btemp+8
 22047  019856  006F FF74  F00A    	movff	postdec2,btemp+9
 22048  01985C  500B               	movf	(btemp+10)^0,w,c
 22049  01985E  2409               	addwf	(btemp+8)^0,w,c
 22050  019860  6ED9               	movwf	fsr2l,c
 22051  019862  500C               	movf	(btemp+11)^0,w,c
 22052  019864  200A               	addwfc	(btemp+9)^0,w,c
 22053  019866  6EDA               	movwf	fsr2h,c
 22054  019868  0EFE               	movlw	-2
 22055  01986A  006F FF8F FFDF     	movff	plusw1,indf2
 22056                           
 22057                           ;stkvar	_fp @ sp[(0)+-4]
 22058  019870  0EFC               	movlw	-4
 22059  019872  006F FF8C  F00B    	movff	plusw1,btemp+10
 22060  019878  0EFD               	movlw	-3
 22061  01987A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22062  019880  0E02               	movlw	2
 22063  019882  240B               	addwf	(btemp+10)^0,w,c
 22064  019884  6ED9               	movwf	fsr2l,c
 22065  019886  0E00               	movlw	0
 22066  019888  200C               	addwfc	(btemp+11)^0,w,c
 22067  01988A  6EDA               	movwf	fsr2h,c
 22068  01988C  2ADE               	incf	postinc2,f,c
 22069  01988E  0E00               	movlw	0
 22070  019890  22DD               	addwfc	postdec2,f,c
 22071  019892                     l3184:
 22072                           
 22073                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22074  019892  52E5               	movf	postdec1,f,c
 22075  019894  52E5               	movf	postdec1,f,c
 22076  019896  52E5               	movf	postdec1,f,c
 22077  019898  52E5               	movf	postdec1,f,c
 22078  01989A  0012               	return		;funcret
 22079  01989C                     __end_of_fputc:
 22080                           	opt callstack 0
 22081                           
 22082 ;; *************** function _putch *****************
 22083 ;; Defined at:
 22084 ;;		line 421 in file "eadog.c"
 22085 ;; Parameters:    Size  Location     Type
 22086 ;;  c               1  [STACK] unsigned char 
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;		None
 22089 ;; Return value:  Size  Location     Type
 22090 ;;                  1  [STACK] void 
 22091 ;; Registers used:
 22092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22093 ;; Tracked objects:
 22094 ;;		On entry : 0/0
 22095 ;;		On exit  : 0/0
 22096 ;;		Unchanged: 0/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22102 ;;Total ram usage:        0 bytes
 22103 ;; Hardware stack levels used:    1
 22104 ;; Hardware stack levels required when called:   16
 22105 ;; This function calls:
 22106 ;;		_ringBufS_put_dma
 22107 ;; This function is called by:
 22108 ;;		_fputc
 22109 ;; This function uses a reentrant model
 22110 ;;
 22111                           
 22112                           	psect	text77
 22113  01BFB2                     __ptext77:
 22114                           	opt callstack 0
 22115  01BFB2                     _putch:
 22116                           	opt callstack 0
 22117                           
 22118                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22119                           ;stkvar	_c @ sp[(0)+-1]
 22120                           
 22121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22122                           ;incstack = 0
 22123 ;; hardware stack exceeded
 22124  01BFB2  0EFF               	movlw	-1
 22125  01BFB4  50E3               	movf	plusw1,w,c
 22126  01BFB6  6EE6               	movwf	postinc1,c
 22127  01BFB8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 22128  01BFBE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 22129  01BFC4  EC90  F0D3         	call	_ringBufS_put_dma	;wreg free
 22130                           
 22131                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22132  01BFC8  52E5               	movf	postdec1,f,c
 22133  01BFCA  0012               	return		;funcret
 22134  01BFCC                     __end_of_putch:
 22135                           	opt callstack 0
 22136                           
 22137 ;; *************** function _ringBufS_put_dma *****************
 22138 ;; Defined at:
 22139 ;;		line 67 in file "ringbufs.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22142 ;;		 -> ring_buf1(67), 
 22143 ;;  c               1  [STACK] const unsigned char 
 22144 ;; Auto vars:     Size  Location     Type
 22145 ;;		None
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  1  [STACK] void 
 22148 ;; Registers used:
 22149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22159 ;;Total ram usage:        0 bytes
 22160 ;; Hardware stack levels used:    1
 22161 ;; Hardware stack levels required when called:   15
 22162 ;; This function calls:
 22163 ;;		Nothing
 22164 ;; This function is called by:
 22165 ;;		_putch
 22166 ;; This function uses a reentrant model
 22167 ;;
 22168                           
 22169                           	psect	text78
 22170  01A720                     __ptext78:
 22171                           	opt callstack 0
 22172  01A720                     _ringBufS_put_dma:
 22173                           	opt callstack 0
 22174                           
 22175                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22176                           ;stkvar	__this @ sp[(0)+-2]
 22177                           
 22178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22179                           ;incstack = 0
 22180 ;; hardware stack exceeded
 22181  01A720  0EFE               	movlw	-2
 22182  01A722  006F FF8C  F00B    	movff	plusw1,btemp+10
 22183  01A728  0EFF               	movlw	-1
 22184  01A72A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22185  01A730  0E42               	movlw	66
 22186  01A732  240B               	addwf	(btemp+10)^0,w,c
 22187  01A734  6ED9               	movwf	fsr2l,c
 22188  01A736  0E00               	movlw	0
 22189  01A738  200C               	addwfc	(btemp+11)^0,w,c
 22190  01A73A  6EDA               	movwf	fsr2h,c
 22191  01A73C  0E40               	movlw	64
 22192  01A73E  60DF               	cpfslt	indf2,c
 22193  01A740  D040               	goto	l1584
 22194                           
 22195                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22196                           ;stkvar	_c @ sp[(0)+-3]
 22197                           ;stkvar	__this @ sp[(0)+-2]
 22198  01A742  0EFE               	movlw	-2
 22199  01A744  006F FF8C  F00B    	movff	plusw1,btemp+10
 22200  01A74A  0EFF               	movlw	-1
 22201  01A74C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22202  01A752  0E40               	movlw	64
 22203  01A754  240B               	addwf	(btemp+10)^0,w,c
 22204  01A756  6ED9               	movwf	fsr2l,c
 22205  01A758  0E00               	movlw	0
 22206  01A75A  200C               	addwfc	(btemp+11)^0,w,c
 22207  01A75C  6EDA               	movwf	fsr2h,c
 22208  01A75E  50DF               	movf	indf2,w,c
 22209  01A760  6E0C               	movwf	(btemp+11)^0,c
 22210                           
 22211                           ;stkvar	__this @ sp[(0)+-2]
 22212  01A762  0EFE               	movlw	-2
 22213  01A764  006F FF8C  F009    	movff	plusw1,btemp+8
 22214  01A76A  0EFF               	movlw	-1
 22215  01A76C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22216  01A772  500C               	movf	(btemp+11)^0,w,c
 22217  01A774  2409               	addwf	(btemp+8)^0,w,c
 22218  01A776  6ED9               	movwf	fsr2l,c
 22219  01A778  0E00               	movlw	0
 22220  01A77A  200A               	addwfc	(btemp+9)^0,w,c
 22221  01A77C  6EDA               	movwf	fsr2h,c
 22222  01A77E  0EFD               	movlw	-3
 22223  01A780  006F FF8F FFDF     	movff	plusw1,indf2
 22224                           
 22225                           ;ringbufs.c: 71:   ++_this->head;
 22226                           ;stkvar	__this @ sp[(0)+-2]
 22227  01A786  0EFE               	movlw	-2
 22228  01A788  006F FF8C  F00B    	movff	plusw1,btemp+10
 22229  01A78E  0EFF               	movlw	-1
 22230  01A790  006F FF8C  F00C    	movff	plusw1,btemp+11
 22231  01A796  0E40               	movlw	64
 22232  01A798  240B               	addwf	(btemp+10)^0,w,c
 22233  01A79A  6ED9               	movwf	fsr2l,c
 22234  01A79C  0E00               	movlw	0
 22235  01A79E  200C               	addwfc	(btemp+11)^0,w,c
 22236  01A7A0  6EDA               	movwf	fsr2h,c
 22237  01A7A2  2ADF               	incf	indf2,f,c
 22238                           
 22239                           ;ringbufs.c: 72:   ++_this->count;
 22240                           ;stkvar	__this @ sp[(0)+-2]
 22241  01A7A4  0EFE               	movlw	-2
 22242  01A7A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22243  01A7AC  0EFF               	movlw	-1
 22244  01A7AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22245  01A7B4  0E42               	movlw	66
 22246  01A7B6  240B               	addwf	(btemp+10)^0,w,c
 22247  01A7B8  6ED9               	movwf	fsr2l,c
 22248  01A7BA  0E00               	movlw	0
 22249  01A7BC  200C               	addwfc	(btemp+11)^0,w,c
 22250  01A7BE  6EDA               	movwf	fsr2h,c
 22251  01A7C0  2ADF               	incf	indf2,f,c
 22252  01A7C2                     l1584:
 22253                           
 22254                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22255  01A7C2  52E5               	movf	postdec1,f,c
 22256  01A7C4  52E5               	movf	postdec1,f,c
 22257  01A7C6  52E5               	movf	postdec1,f,c
 22258  01A7C8  0012               	return		;funcret
 22259  01A7CA                     __end_of_ringBufS_put_dma:
 22260                           	opt callstack 0
 22261                           
 22262 ;; *************** function _atoi *****************
 22263 ;; Defined at:
 22264 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  s               2  [STACK] PTR const unsigned char 
 22267 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22268 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22269 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22270 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22271 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 22272 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 22273 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 22274 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 22275 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 22276 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 22277 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22278 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22279 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22280 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22281 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22282 ;; Auto vars:     Size  Location     Type
 22283 ;;  n               2  [STACK] int 
 22284 ;;  neg             2  [STACK] int 
 22285 ;; Return value:  Size  Location     Type
 22286 ;;                  2  [STACK] int 
 22287 ;; Registers used:
 22288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22289 ;; Tracked objects:
 22290 ;;		On entry : 0/0
 22291 ;;		On exit  : 0/0
 22292 ;;		Unchanged: 0/0
 22293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22298 ;;Total ram usage:        0 bytes
 22299 ;; Hardware stack levels used:    1
 22300 ;; Hardware stack levels required when called:   16
 22301 ;; This function calls:
 22302 ;;		_isdigit
 22303 ;;		_isspace
 22304 ;; This function is called by:
 22305 ;;		_vfpfcnvrt
 22306 ;; This function uses a reentrant model
 22307 ;;
 22308                           
 22309                           	psect	text79
 22310  01791A                     __ptext79:
 22311                           	opt callstack 0
 22312  01791A                     _atoi:
 22313                           	opt callstack 0
 22314                           
 22315                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22316  01791A  0E09               	movlw	9
 22317  01791C  26E1               	addwf	fsr1l,f,c
 22318  01791E  0E00               	movlw	0
 22319  017920  22E2               	addwfc	fsr1h,f,c
 22320                           
 22321                           ;stkvar	_n @ sp[(-9)+5]
 22322                           
 22323                           ;incstack = 0
 22324 ;; hardware stack exceeded
 22325  017922  0EFC               	movlw	-4
 22326  017924  6AE3               	clrf	plusw1,c
 22327  017926  0EFD               	movlw	-3
 22328  017928  6AE3               	clrf	plusw1,c
 22329                           
 22330                           ;stkvar	_neg @ sp[(-9)+7]
 22331  01792A  0EFE               	movlw	-2
 22332  01792C  6AE3               	clrf	plusw1,c
 22333  01792E  0EFF               	movlw	-1
 22334  017930  6AE3               	clrf	plusw1,c
 22335  017932  D011               	goto	l9314
 22336  017934                     l9312:
 22337                           
 22338                           ;stkvar	_s @ sp[(-9)+-2]
 22339  017934  0EF5               	movlw	-11
 22340  017936  50E3               	movf	plusw1,w,c
 22341  017938  0F01               	addlw	1
 22342  01793A  6E01               	movwf	btemp^0,c
 22343  01793C  0EF5               	movlw	-11
 22344  01793E  0060  F007  FFE3   	movff	btemp,plusw1
 22345  017944  6A01               	clrf	btemp^0,c
 22346  017946  0EF6               	movlw	-10
 22347  017948  50E3               	movf	plusw1,w,c
 22348  01794A  2001               	addwfc	btemp^0,w,c
 22349  01794C  6E01               	movwf	btemp^0,c
 22350  01794E  0EF6               	movlw	-10
 22351  017950  0060  F007  FFE3   	movff	btemp,plusw1
 22352  017956                     l9314:
 22353                           
 22354                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22355  017956  0EFB               	movlw	-5
 22356  017958  6AE3               	clrf	plusw1,c
 22357  01795A  2AE3               	incf	plusw1,f,c
 22358                           
 22359                           ;stkvar	_s @ sp[(-9)+-2]
 22360  01795C  50E1               	movf	fsr1l,w,c
 22361  01795E  0FF5               	addlw	-11
 22362  017960  6ED9               	movwf	fsr2l,c
 22363  017962  50E2               	movf	fsr1h,w,c
 22364  017964  6EDA               	movwf	fsr2h,c
 22365  017966  0EFF               	movlw	255
 22366  017968  22DA               	addwfc	fsr2h,f,c
 22367  01796A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22368  017970  006F FF77 FFF7     	movff	postdec2,tblptrh
 22369  017976                     	if	0	;tblptru may be non-zero
 22370  017976                     	endif
 22371  017976                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22372  017976  0E00               	movlw	low (__mediumconst shr (0+16))
 22373  017978  6EF8               	movwf	tblptru,c
 22374  01797A                     	endif
 22375  01797A  0008               	tblrd		*
 22376  01797C  50F5               	movf	tablat,w,c
 22377  01797E  0A20               	xorlw	32
 22378  017980  B4D8               	btfsc	status,2,c
 22379  017982  D023               	goto	l9322
 22380  017984  0EF7               	movlw	247
 22381  017986  6E0B               	movwf	(btemp+10)^0,c
 22382  017988  0EFF               	movlw	255
 22383  01798A  6E0C               	movwf	(btemp+11)^0,c
 22384                           
 22385                           ;stkvar	_s @ sp[(-9)+-2]
 22386  01798C  50E1               	movf	fsr1l,w,c
 22387  01798E  0FF5               	addlw	-11
 22388  017990  6ED9               	movwf	fsr2l,c
 22389  017992  50E2               	movf	fsr1h,w,c
 22390  017994  6EDA               	movwf	fsr2h,c
 22391  017996  0EFF               	movlw	255
 22392  017998  22DA               	addwfc	fsr2h,f,c
 22393  01799A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22394  0179A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22395  0179A6                     	if	0	;tblptru may be non-zero
 22396  0179A6                     	endif
 22397  0179A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22398  0179A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22399  0179A8  6EF8               	movwf	tblptru,c
 22400  0179AA                     	endif
 22401  0179AA  0008               	tblrd		*
 22402  0179AC  50F5               	movf	tablat,w,c
 22403  0179AE  6E09               	movwf	(btemp+8)^0,c
 22404  0179B0  6A0A               	clrf	(btemp+9)^0,c
 22405  0179B2  500B               	movf	(btemp+10)^0,w,c
 22406  0179B4  2609               	addwf	(btemp+8)^0,f,c
 22407  0179B6  500C               	movf	(btemp+11)^0,w,c
 22408  0179B8  220A               	addwfc	(btemp+9)^0,f,c
 22409  0179BA  500A               	movf	(btemp+9)^0,w,c
 22410  0179BC  E104               	bnz	u8540
 22411  0179BE  0E05               	movlw	5
 22412  0179C0  5C09               	subwf	(btemp+8)^0,w,c
 22413  0179C2  A0D8               	btfss	status,0,c
 22414  0179C4  D002               	goto	l9322
 22415  0179C6                     u8540:
 22416                           
 22417                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22418  0179C6  0EFB               	movlw	-5
 22419  0179C8  6AE3               	clrf	plusw1,c
 22420  0179CA                     l9322:
 22421                           
 22422                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22423  0179CA  0EFB               	movlw	-5
 22424  0179CC  50E3               	movf	plusw1,w,c
 22425  0179CE  6E0B               	movwf	(btemp+10)^0,c
 22426  0179D0  6A0C               	clrf	(btemp+11)^0,c
 22427                           
 22428                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22429  0179D2  0EF9               	movlw	-7
 22430  0179D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22431  0179DA  0EFA               	movlw	-6
 22432  0179DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22433                           
 22434                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22435  0179E2  0EF9               	movlw	-7
 22436  0179E4  006F FF8C  F001    	movff	plusw1,btemp
 22437  0179EA  0EFA               	movlw	-6
 22438  0179EC  50E3               	movf	plusw1,w,c
 22439  0179EE  1001               	iorwf	btemp^0,w,c
 22440  0179F0  B4D8               	btfsc	status,2,c
 22441  0179F2  D01F               	goto	l9332
 22442  0179F4  D79F               	goto	l9312
 22443  0179F6                     l9328:
 22444  0179F6  0E01               	movlw	1
 22445  0179F8  6E0B               	movwf	(btemp+10)^0,c
 22446  0179FA  0E00               	movlw	0
 22447  0179FC  6E0C               	movwf	(btemp+11)^0,c
 22448                           
 22449                           ;stkvar	_neg @ sp[(-9)+7]
 22450  0179FE  0EFE               	movlw	-2
 22451  017A00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22452  017A06  0EFF               	movlw	-1
 22453  017A08  0060  F033  FFE3   	movff	btemp+11,plusw1
 22454  017A0E                     l9330:
 22455                           
 22456                           ;stkvar	_s @ sp[(-9)+-2]
 22457  017A0E  0EF5               	movlw	-11
 22458  017A10  50E3               	movf	plusw1,w,c
 22459  017A12  0F01               	addlw	1
 22460  017A14  6E01               	movwf	btemp^0,c
 22461  017A16  0EF5               	movlw	-11
 22462  017A18  0060  F007  FFE3   	movff	btemp,plusw1
 22463  017A1E  6A01               	clrf	btemp^0,c
 22464  017A20  0EF6               	movlw	-10
 22465  017A22  50E3               	movf	plusw1,w,c
 22466  017A24  2001               	addwfc	btemp^0,w,c
 22467  017A26  6E01               	movwf	btemp^0,c
 22468  017A28  0EF6               	movlw	-10
 22469  017A2A  0060  F007  FFE3   	movff	btemp,plusw1
 22470  017A30  D053               	goto	l9338
 22471  017A32                     l9332:
 22472                           
 22473                           ;stkvar	_s @ sp[(-9)+-2]
 22474  017A32  50E1               	movf	fsr1l,w,c
 22475  017A34  0FF5               	addlw	-11
 22476  017A36  6ED9               	movwf	fsr2l,c
 22477  017A38  50E2               	movf	fsr1h,w,c
 22478  017A3A  6EDA               	movwf	fsr2h,c
 22479  017A3C  0EFF               	movlw	255
 22480  017A3E  22DA               	addwfc	fsr2h,f,c
 22481  017A40  006F FF7B FFF6     	movff	postinc2,tblptrl
 22482  017A46  006F FF77 FFF7     	movff	postdec2,tblptrh
 22483  017A4C                     	if	0	;tblptru may be non-zero
 22484  017A4C                     	endif
 22485  017A4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22486  017A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 22487  017A4E  6EF8               	movwf	tblptru,c
 22488  017A50                     	endif
 22489  017A50  0008               	tblrd		*
 22490  017A52  50F5               	movf	tablat,w,c
 22491  017A54  6E0B               	movwf	(btemp+10)^0,c
 22492  017A56  6A0C               	clrf	(btemp+11)^0,c
 22493                           
 22494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22495                           ; Switch size 1, requested type "simple"
 22496                           ; Number of cases is 1, Range of values is 0 to 0
 22497                           ; switch strategies available:
 22498                           ; Name         Instructions Cycles
 22499                           ; simple_byte            4     3 (average)
 22500                           ;	Chosen strategy is simple_byte
 22501  017A58  500C               	movf	(btemp+11)^0,w,c
 22502  017A5A  0A00               	xorlw	0	; case 0
 22503  017A5C  A4D8               	btfss	status,2,c
 22504  017A5E  D03C               	goto	l9338
 22505                           
 22506                           ; Switch size 1, requested type "simple"
 22507                           ; Number of cases is 2, Range of values is 43 to 45
 22508                           ; switch strategies available:
 22509                           ; Name         Instructions Cycles
 22510                           ; simple_byte            7     4 (average)
 22511                           ;	Chosen strategy is simple_byte
 22512  017A60  500B               	movf	(btemp+10)^0,w,c
 22513  017A62  0A2B               	xorlw	43	; case 43
 22514  017A64  B4D8               	btfsc	status,2,c
 22515  017A66  D7D3               	goto	l9330
 22516  017A68  0A06               	xorlw	6	; case 45
 22517  017A6A  B4D8               	btfsc	status,2,c
 22518  017A6C  D7C4               	goto	l9328
 22519  017A6E  D034               	goto	l9338
 22520  017A70                     l9334:
 22521                           
 22522                           ;stkvar	_n @ sp[(-9)+5]
 22523  017A70  0EFC               	movlw	-4
 22524  017A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 22525  017A78  0EFD               	movlw	-3
 22526  017A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22527  017A80  0E0A               	movlw	10
 22528  017A82  020B               	mulwf	(btemp+10)^0,c
 22529  017A84  006F FFCC  F009    	movff	prodl,btemp+8
 22530  017A8A  006F FFD0  F00A    	movff	prodh,btemp+9
 22531  017A90  020C               	mulwf	(btemp+11)^0,c
 22532  017A92  50F3               	movf	prodl,w,c
 22533  017A94  260A               	addwf	(btemp+9)^0,f,c
 22534                           
 22535                           ;stkvar	_s @ sp[(-9)+-2]
 22536  017A96  50E1               	movf	fsr1l,w,c
 22537  017A98  0FF5               	addlw	-11
 22538  017A9A  6ED9               	movwf	fsr2l,c
 22539  017A9C  50E2               	movf	fsr1h,w,c
 22540  017A9E  6EDA               	movwf	fsr2h,c
 22541  017AA0  0EFF               	movlw	255
 22542  017AA2  22DA               	addwfc	fsr2h,f,c
 22543  017AA4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22544  017AAA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22545  017AB0                     	if	0	;tblptru may be non-zero
 22546  017AB0                     	endif
 22547  017AB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22548  017AB0  0E00               	movlw	low (__mediumconst shr (0+16))
 22549  017AB2  6EF8               	movwf	tblptru,c
 22550  017AB4                     	endif
 22551  017AB4  0008               	tblrd		*
 22552  017AB6  50F5               	movf	tablat,w,c
 22553  017AB8  5E09               	subwf	(btemp+8)^0,f,c
 22554  017ABA  0E00               	movlw	0
 22555  017ABC  5A0A               	subwfb	(btemp+9)^0,f,c
 22556  017ABE  0E30               	movlw	48
 22557  017AC0  2609               	addwf	(btemp+8)^0,f,c
 22558  017AC2  0E00               	movlw	0
 22559  017AC4  220A               	addwfc	(btemp+9)^0,f,c
 22560                           
 22561                           ;stkvar	_n @ sp[(-9)+5]
 22562  017AC6  0EFC               	movlw	-4
 22563  017AC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22564  017ACE  0EFD               	movlw	-3
 22565  017AD0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22566  017AD6  D79B               	goto	l9330
 22567  017AD8                     l9338:
 22568  017AD8  0ED0               	movlw	208
 22569  017ADA  6E0B               	movwf	(btemp+10)^0,c
 22570  017ADC  0EFF               	movlw	255
 22571  017ADE  6E0C               	movwf	(btemp+11)^0,c
 22572                           
 22573                           ;stkvar	_s @ sp[(-9)+-2]
 22574  017AE0  50E1               	movf	fsr1l,w,c
 22575  017AE2  0FF5               	addlw	-11
 22576  017AE4  6ED9               	movwf	fsr2l,c
 22577  017AE6  50E2               	movf	fsr1h,w,c
 22578  017AE8  6EDA               	movwf	fsr2h,c
 22579  017AEA  0EFF               	movlw	255
 22580  017AEC  22DA               	addwfc	fsr2h,f,c
 22581  017AEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22582  017AF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22583  017AFA                     	if	0	;tblptru may be non-zero
 22584  017AFA                     	endif
 22585  017AFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22586  017AFA  0E00               	movlw	low (__mediumconst shr (0+16))
 22587  017AFC  6EF8               	movwf	tblptru,c
 22588  017AFE                     	endif
 22589  017AFE  0008               	tblrd		*
 22590  017B00  50F5               	movf	tablat,w,c
 22591  017B02  6E09               	movwf	(btemp+8)^0,c
 22592  017B04  6A0A               	clrf	(btemp+9)^0,c
 22593  017B06  500B               	movf	(btemp+10)^0,w,c
 22594  017B08  2609               	addwf	(btemp+8)^0,f,c
 22595  017B0A  500C               	movf	(btemp+11)^0,w,c
 22596  017B0C  220A               	addwfc	(btemp+9)^0,f,c
 22597  017B0E  500A               	movf	(btemp+9)^0,w,c
 22598  017B10  E106               	bnz	u8560
 22599  017B12  0E0A               	movlw	10
 22600  017B14  5C09               	subwf	(btemp+8)^0,w,c
 22601  017B16  B0D8               	btfsc	status,0,c
 22602  017B18  D002               	goto	u8560
 22603  017B1A  0E01               	movlw	1
 22604  017B1C  D001               	goto	u8570
 22605  017B1E                     u8560:
 22606  017B1E  0E00               	movlw	0
 22607  017B20                     u8570:
 22608  017B20  6E0B               	movwf	(btemp+10)^0,c
 22609  017B22  6A0C               	clrf	(btemp+11)^0,c
 22610                           
 22611                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22612  017B24  0EF7               	movlw	-9
 22613  017B26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22614  017B2C  0EF8               	movlw	-8
 22615  017B2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22616                           
 22617                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22618  017B34  0EF7               	movlw	-9
 22619  017B36  006F FF8C  F001    	movff	plusw1,btemp
 22620  017B3C  0EF8               	movlw	-8
 22621  017B3E  50E3               	movf	plusw1,w,c
 22622  017B40  1001               	iorwf	btemp^0,w,c
 22623  017B42  A4D8               	btfss	status,2,c
 22624  017B44  D795               	goto	l9334
 22625                           
 22626                           ;stkvar	_neg @ sp[(-9)+7]
 22627  017B46  0EFE               	movlw	-2
 22628  017B48  006F FF8C  F001    	movff	plusw1,btemp
 22629  017B4E  0EFF               	movlw	-1
 22630  017B50  50E3               	movf	plusw1,w,c
 22631  017B52  1001               	iorwf	btemp^0,w,c
 22632  017B54  A4D8               	btfss	status,2,c
 22633  017B56  D00E               	goto	l9348
 22634                           
 22635                           ;stkvar	_n @ sp[(-9)+5]
 22636  017B58  0EFC               	movlw	-4
 22637  017B5A  006F FF8C  F001    	movff	plusw1,btemp
 22638  017B60  1E01               	comf	btemp^0,f,c
 22639  017B62  0EFD               	movlw	-3
 22640  017B64  006F FF8C  F002    	movff	plusw1,btemp+1
 22641  017B6A  1E02               	comf	(btemp+1)^0,f,c
 22642  017B6C  2A01               	incf	btemp^0,f,c
 22643  017B6E  B4D8               	btfsc	status,2,c
 22644  017B70  2A02               	incf	(btemp+1)^0,f,c
 22645  017B72  D008               	goto	l3115
 22646  017B74                     l9348:
 22647                           
 22648                           ;stkvar	_n @ sp[(-9)+5]
 22649  017B74  0EFC               	movlw	-4
 22650  017B76  006F FF8C  F001    	movff	plusw1,btemp
 22651  017B7C  0EFD               	movlw	-3
 22652  017B7E  006F FF8C  F002    	movff	plusw1,btemp+1
 22653  017B84                     l3115:
 22654                           
 22655                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22656  017B84  0EF5               	movlw	245
 22657  017B86  26E1               	addwf	fsr1l,f,c
 22658  017B88  0EFF               	movlw	255
 22659  017B8A  22E2               	addwfc	fsr1h,f,c
 22660  017B8C  0012               	return		;funcret
 22661  017B8E                     __end_of_atoi:
 22662                           	opt callstack 0
 22663                           
 22664 ;; *************** function _isspace *****************
 22665 ;; Defined at:
 22666 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22667 ;; Parameters:    Size  Location     Type
 22668 ;;  c               2  [STACK] int 
 22669 ;; Auto vars:     Size  Location     Type
 22670 ;;		None
 22671 ;; Return value:  Size  Location     Type
 22672 ;;                  2  [STACK] int 
 22673 ;; Registers used:
 22674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22675 ;; Tracked objects:
 22676 ;;		On entry : 0/0
 22677 ;;		On exit  : 0/0
 22678 ;;		Unchanged: 0/0
 22679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22684 ;;Total ram usage:        0 bytes
 22685 ;; Hardware stack levels used:    1
 22686 ;; Hardware stack levels required when called:   15
 22687 ;; This function calls:
 22688 ;;		Nothing
 22689 ;; This function is called by:
 22690 ;;		_atoi
 22691 ;; This function uses a reentrant model
 22692 ;;
 22693                           
 22694                           	psect	text80
 22695  01B2CA                     __ptext80:
 22696                           	opt callstack 0
 22697  01B2CA                     _isspace:
 22698                           	opt callstack 0
 22699                           
 22700                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22701  01B2CA  52E6               	movf	postinc1,f,c
 22702                           
 22703                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22704                           
 22705                           ;incstack = 0
 22706 ;; hardware stack exceeded
 22707  01B2CC  0EFF               	movlw	-1
 22708  01B2CE  6AE3               	clrf	plusw1,c
 22709  01B2D0  2AE3               	incf	plusw1,f,c
 22710                           
 22711                           ;stkvar	_c @ sp[(-1)+-2]
 22712  01B2D2  0EFD               	movlw	-3
 22713  01B2D4  006F FF8C  F001    	movff	plusw1,btemp
 22714  01B2DA  0E20               	movlw	32
 22715  01B2DC  1801               	xorwf	btemp^0,w,c
 22716  01B2DE  E104               	bnz	u7430
 22717  01B2E0  0EFE               	movlw	-2
 22718  01B2E2  50E3               	movf	plusw1,w,c
 22719  01B2E4  B4D8               	btfsc	status,2,c
 22720  01B2E6  D012               	goto	l8732
 22721  01B2E8                     u7430:
 22722                           
 22723                           ;stkvar	_c @ sp[(-1)+-2]
 22724  01B2E8  0EFD               	movlw	-3
 22725  01B2EA  50E3               	movf	plusw1,w,c
 22726  01B2EC  0FF7               	addlw	247
 22727  01B2EE  6E0B               	movwf	(btemp+10)^0,c
 22728  01B2F0  0EFE               	movlw	-2
 22729  01B2F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22730  01B2F8  0EFF               	movlw	255
 22731  01B2FA  220C               	addwfc	(btemp+11)^0,f,c
 22732  01B2FC  500C               	movf	(btemp+11)^0,w,c
 22733  01B2FE  E104               	bnz	u7440
 22734  01B300  0E05               	movlw	5
 22735  01B302  5C0B               	subwf	(btemp+10)^0,w,c
 22736  01B304  A0D8               	btfss	status,0,c
 22737  01B306  D002               	goto	l8732
 22738  01B308                     u7440:
 22739                           
 22740                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22741  01B308  0EFF               	movlw	-1
 22742  01B30A  6AE3               	clrf	plusw1,c
 22743  01B30C                     l8732:
 22744                           
 22745                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22746  01B30C  0EFF               	movlw	-1
 22747  01B30E  50E3               	movf	plusw1,w,c
 22748  01B310  6E01               	movwf	btemp^0,c
 22749  01B312  6A02               	clrf	(btemp+1)^0,c
 22750                           
 22751                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22752  01B314  52E5               	movf	postdec1,f,c
 22753  01B316  52E5               	movf	postdec1,f,c
 22754  01B318  52E5               	movf	postdec1,f,c
 22755  01B31A  0012               	return		;funcret
 22756  01B31C                     __end_of_isspace:
 22757                           	opt callstack 0
 22758                           
 22759 ;; *************** function _isdigit *****************
 22760 ;; Defined at:
 22761 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22762 ;; Parameters:    Size  Location     Type
 22763 ;;  c               2  [STACK] int 
 22764 ;; Auto vars:     Size  Location     Type
 22765 ;;		None
 22766 ;; Return value:  Size  Location     Type
 22767 ;;                  2  [STACK] int 
 22768 ;; Registers used:
 22769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22770 ;; Tracked objects:
 22771 ;;		On entry : 0/0
 22772 ;;		On exit  : 0/0
 22773 ;;		Unchanged: 0/0
 22774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;Total ram usage:        0 bytes
 22780 ;; Hardware stack levels used:    1
 22781 ;; Hardware stack levels required when called:   15
 22782 ;; This function calls:
 22783 ;;		Nothing
 22784 ;; This function is called by:
 22785 ;;		_vfpfcnvrt
 22786 ;;		_atoi
 22787 ;; This function uses a reentrant model
 22788 ;;
 22789                           
 22790                           	psect	text81
 22791  01BA1A                     __ptext81:
 22792                           	opt callstack 0
 22793  01BA1A                     _isdigit:
 22794                           	opt callstack 0
 22795                           
 22796                           ;stkvar	_c @ sp[(0)+-2]
 22797                           
 22798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22799                           ;incstack = 0
 22800 ;; hardware stack exceeded
 22801  01BA1A  0EFE               	movlw	-2
 22802  01BA1C  50E3               	movf	plusw1,w,c
 22803  01BA1E  0FD0               	addlw	208
 22804  01BA20  6E0B               	movwf	(btemp+10)^0,c
 22805  01BA22  0EFF               	movlw	-1
 22806  01BA24  006F FF8C  F00C    	movff	plusw1,btemp+11
 22807  01BA2A  0EFF               	movlw	255
 22808  01BA2C  220C               	addwfc	(btemp+11)^0,f,c
 22809  01BA2E  500C               	movf	(btemp+11)^0,w,c
 22810  01BA30  E106               	bnz	u6280
 22811  01BA32  0E0A               	movlw	10
 22812  01BA34  5C0B               	subwf	(btemp+10)^0,w,c
 22813  01BA36  B0D8               	btfsc	status,0,c
 22814  01BA38  D002               	goto	u6280
 22815  01BA3A  0E01               	movlw	1
 22816  01BA3C  D001               	goto	u6290
 22817  01BA3E                     u6280:
 22818  01BA3E  0E00               	movlw	0
 22819  01BA40                     u6290:
 22820  01BA40  6E01               	movwf	btemp^0,c
 22821  01BA42  6A02               	clrf	(btemp+1)^0,c
 22822                           
 22823                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22824  01BA44  52E5               	movf	postdec1,f,c
 22825  01BA46  52E5               	movf	postdec1,f,c
 22826  01BA48  0012               	return		;funcret
 22827  01BA4A                     __end_of_isdigit:
 22828                           	opt callstack 0
 22829                           
 22830 ;; *************** function _set_vterm *****************
 22831 ;; Defined at:
 22832 ;;		line 107 in file "mconfig.c"
 22833 ;; Parameters:    Size  Location     Type
 22834 ;;  vterm           1  [STACK] const unsigned char 
 22835 ;; Auto vars:     Size  Location     Type
 22836 ;;		None
 22837 ;; Return value:  Size  Location     Type
 22838 ;;                  1  [STACK] unsigned char 
 22839 ;; Registers used:
 22840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22841 ;; Tracked objects:
 22842 ;;		On entry : 0/0
 22843 ;;		On exit  : 0/0
 22844 ;;		Unchanged: 0/0
 22845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22850 ;;Total ram usage:        0 bytes
 22851 ;; Hardware stack levels used:    1
 22852 ;; Hardware stack levels required when called:   15
 22853 ;; This function calls:
 22854 ;;		Nothing
 22855 ;; This function is called by:
 22856 ;;		_main
 22857 ;;		_check_help
 22858 ;; This function uses a reentrant model
 22859 ;;
 22860                           
 22861                           	psect	text82
 22862  01BF3C                     __ptext82:
 22863                           	opt callstack 0
 22864  01BF3C                     _set_vterm:
 22865                           	opt callstack 15
 22866                           
 22867                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22868                           ;stkvar	_vterm @ sp[(0)+-1]
 22869                           
 22870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22871                           ;incstack = 0
 22872  01BF3C  0EFF               	movlw	-1
 22873  01BF3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22874  01BF44  0E03               	movlw	3
 22875  01BF46  160C               	andwf	(btemp+11)^0,f,c
 22876  01BF48  EE22  F20A         	lfsr	2,_D+480
 22877  01BF4C  50DF               	movf	223,w,c
 22878  01BF4E  180C               	xorwf	(btemp+11)^0,w,c
 22879  01BF50  0BFE               	andlw	-2
 22880  01BF52  180C               	xorwf	(btemp+11)^0,w,c
 22881  01BF54  6EDF               	movwf	223,c
 22882                           
 22883                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22884  01BF56  52E5               	movf	postdec1,f,c
 22885  01BF58  0012               	return		;funcret
 22886  01BF5A                     __end_of_set_vterm:
 22887                           	opt callstack 0
 22888                           
 22889 ;; *************** function _set_temp_display_help *****************
 22890 ;; Defined at:
 22891 ;;		line 211 in file "mconfig.c"
 22892 ;; Parameters:    Size  Location     Type
 22893 ;;  new_response    1  [STACK] const enum E16509
 22894 ;; Auto vars:     Size  Location     Type
 22895 ;;		None
 22896 ;; Return value:  Size  Location     Type
 22897 ;;                  1  [STACK] enum E16509
 22898 ;; Registers used:
 22899 ;;		wreg, fsr1l, fsr1h
 22900 ;; Tracked objects:
 22901 ;;		On entry : 0/1
 22902 ;;		On exit  : 3F/1
 22903 ;;		Unchanged: 0/0
 22904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22909 ;;Total ram usage:        0 bytes
 22910 ;; Hardware stack levels used:    1
 22911 ;; Hardware stack levels required when called:   15
 22912 ;; This function calls:
 22913 ;;		Nothing
 22914 ;; This function is called by:
 22915 ;;		_check_help
 22916 ;; This function uses a reentrant model
 22917 ;;
 22918                           
 22919                           	psect	text83
 22920  01C09E                     __ptext83:
 22921                           	opt callstack 0
 22922  01C09E                     _set_temp_display_help:
 22923                           	opt callstack 14
 22924                           
 22925                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22926                           
 22927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22928                           ;incstack = 0
 22929  01C09E  0101               	movlb	1	; () banked
 22930  01C0A0  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22934                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22935  01C0A2  0EFF               	movlw	-1
 22936  01C0A4  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22937                           
 22938                           ; BSR set to: 1
 22939                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22940  01C0AA  52E5               	movf	postdec1,f,c
 22941  01C0AC  0012               	return		;funcret
 22942  01C0AE                     __end_of_set_temp_display_help:
 22943                           	opt callstack 0
 22944                           
 22945 ;; *************** function _set_display_info *****************
 22946 ;; Defined at:
 22947 ;;		line 200 in file "mconfig.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;  new_response    1  [STACK] const enum E16509
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;		None
 22952 ;; Return value:  Size  Location     Type
 22953 ;;                  1  [STACK] enum E16994
 22954 ;; Registers used:
 22955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22956 ;; Tracked objects:
 22957 ;;		On entry : 0/1
 22958 ;;		On exit  : 0/0
 22959 ;;		Unchanged: 0/0
 22960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22965 ;;Total ram usage:        0 bytes
 22966 ;; Hardware stack levels used:    1
 22967 ;; Hardware stack levels required when called:   16
 22968 ;; This function calls:
 22969 ;;		_TimerDone
 22970 ;; This function is called by:
 22971 ;;		_main
 22972 ;;		_check_help
 22973 ;; This function uses a reentrant model
 22974 ;;
 22975                           
 22976                           	psect	text84
 22977  01BF5A                     __ptext84:
 22978                           	opt callstack 0
 22979  01BF5A                     _set_display_info:
 22980                           	opt callstack 14
 22981                           
 22982                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22983                           
 22984                           ; BSR set to: 1
 22985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22986                           ;incstack = 0
 22987  01BF5A  0E07               	movlw	7
 22988  01BF5C  6EE6               	movwf	postinc1,c
 22989  01BF5E  ECA7  F0DD         	call	_TimerDone	;wreg free
 22990  01BF62  5001               	movf	btemp^0,w,c
 22991  01BF64  B4D8               	btfsc	status,2,c
 22992  01BF66  D006               	goto	l1719
 22993                           
 22994                           ;mconfig.c: 205:   old_info = V.response.info;
 22995  01BF68  0101               	movlb	1	; () banked
 22996  01BF6A  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 22997                           
 22998                           ; BSR set to: 1
 22999                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23000                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23001  01BF6C  0EFF               	movlw	-1
 23002  01BF6E  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 23003  01BF74                     l1719:
 23004                           
 23005                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23006  01BF74  52E5               	movf	postdec1,f,c
 23007  01BF76  0012               	return		;funcret
 23008  01BF78                     __end_of_set_display_info:
 23009                           	opt callstack 0
 23010                           
 23011 ;; *************** function _mode_lamp_dim *****************
 23012 ;; Defined at:
 23013 ;;		line 13 in file "mconfig.c"
 23014 ;; Parameters:    Size  Location     Type
 23015 ;;  level           2  [STACK] const unsigned short 
 23016 ;; Auto vars:     Size  Location     Type
 23017 ;;		None
 23018 ;; Return value:  Size  Location     Type
 23019 ;;                  1  [STACK] void 
 23020 ;; Registers used:
 23021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23022 ;; Tracked objects:
 23023 ;;		On entry : 0/1
 23024 ;;		On exit  : 0/0
 23025 ;;		Unchanged: 0/0
 23026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;Total ram usage:        0 bytes
 23032 ;; Hardware stack levels used:    1
 23033 ;; Hardware stack levels required when called:   16
 23034 ;; This function calls:
 23035 ;;		_PWM8_LoadDutyValue
 23036 ;; This function is called by:
 23037 ;;		_main
 23038 ;;		_check_help
 23039 ;; This function uses a reentrant model
 23040 ;;
 23041                           
 23042                           	psect	text85
 23043  01BFE6                     __ptext85:
 23044                           	opt callstack 0
 23045  01BFE6                     _mode_lamp_dim:
 23046                           	opt callstack 14
 23047                           
 23048                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23049                           ;stkvar	_level @ sp[(0)+-2]
 23050                           
 23051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23052                           ;incstack = 0
 23053  01BFE6  0EFE               	movlw	-2
 23054  01BFE8  006F FF8F FFE6     	movff	plusw1,postinc1
 23055  01BFEE  006F FF8F FFE6     	movff	plusw1,postinc1
 23056  01BFF4  EC20  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23057                           
 23058                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23059  01BFF8  52E5               	movf	postdec1,f,c
 23060  01BFFA  52E5               	movf	postdec1,f,c
 23061  01BFFC  0012               	return		;funcret
 23062  01BFFE                     __end_of_mode_lamp_dim:
 23063                           	opt callstack 0
 23064                           
 23065 ;; *************** function _mode_lamp_bright *****************
 23066 ;; Defined at:
 23067 ;;		line 18 in file "mconfig.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;		None
 23070 ;; Auto vars:     Size  Location     Type
 23071 ;;		None
 23072 ;; Return value:  Size  Location     Type
 23073 ;;                  1  [STACK] void 
 23074 ;; Registers used:
 23075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23076 ;; Tracked objects:
 23077 ;;		On entry : 0/0
 23078 ;;		On exit  : 0/0
 23079 ;;		Unchanged: 0/0
 23080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;Total ram usage:        0 bytes
 23086 ;; Hardware stack levels used:    1
 23087 ;; Hardware stack levels required when called:   16
 23088 ;; This function calls:
 23089 ;;		_PWM8_LoadDutyValue
 23090 ;; This function is called by:
 23091 ;;		_check_help
 23092 ;; This function uses a reentrant model
 23093 ;;
 23094                           
 23095                           	psect	text86
 23096  01C0DA                     __ptext86:
 23097                           	opt callstack 0
 23098  01C0DA                     _mode_lamp_bright:
 23099                           	opt callstack 13
 23100                           
 23101                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23102                           
 23103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23104                           ;incstack = 0
 23105  01C0DA  0E2C               	movlw	44
 23106  01C0DC  6EE6               	movwf	postinc1,c
 23107  01C0DE  0E01               	movlw	1
 23108  01C0E0  6EE6               	movwf	postinc1,c
 23109  01C0E2  EC20  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23110                           
 23111                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23112  01C0E6  0012               	return		;funcret
 23113  01C0E8                     __end_of_mode_lamp_bright:
 23114                           	opt callstack 0
 23115                           
 23116 ;; *************** function _PWM8_LoadDutyValue *****************
 23117 ;; Defined at:
 23118 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  dutyValue       2  [STACK] unsigned short 
 23121 ;; Auto vars:     Size  Location     Type
 23122 ;;		None
 23123 ;; Return value:  Size  Location     Type
 23124 ;;                  1  [STACK] void 
 23125 ;; Registers used:
 23126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23127 ;; Tracked objects:
 23128 ;;		On entry : 0/1
 23129 ;;		On exit  : 0/0
 23130 ;;		Unchanged: 0/0
 23131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23136 ;;Total ram usage:        0 bytes
 23137 ;; Hardware stack levels used:    1
 23138 ;; Hardware stack levels required when called:   15
 23139 ;; This function calls:
 23140 ;;		Nothing
 23141 ;; This function is called by:
 23142 ;;		_mode_lamp_dim
 23143 ;;		_mode_lamp_bright
 23144 ;; This function uses a reentrant model
 23145 ;;
 23146                           
 23147                           	psect	text87
 23148  01B640                     __ptext87:
 23149                           	opt callstack 0
 23150  01B640                     _PWM8_LoadDutyValue:
 23151                           	opt callstack 14
 23152                           
 23153                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23154                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23155                           
 23156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23157                           ;incstack = 0
 23158  01B640  0EFE               	movlw	-2
 23159  01B642  006F FF8C  F00B    	movff	plusw1,btemp+10
 23160  01B648  0EFF               	movlw	-1
 23161  01B64A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23162  01B650  90D8               	bcf	status,0,c
 23163  01B652  320C               	rrcf	(btemp+11)^0,f,c
 23164  01B654  320B               	rrcf	(btemp+10)^0,f,c
 23165  01B656  90D8               	bcf	status,0,c
 23166  01B658  320C               	rrcf	(btemp+11)^0,f,c
 23167  01B65A  320B               	rrcf	(btemp+10)^0,f,c
 23168  01B65C  500B               	movf	(btemp+10)^0,w,c
 23169  01B65E  6E61               	movwf	97,c	;volatile
 23170                           
 23171                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23172                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23173  01B660  0EFE               	movlw	-2
 23174  01B662  006F FF8C  F00C    	movff	plusw1,btemp+11
 23175  01B668  0E03               	movlw	3
 23176  01B66A  160C               	andwf	(btemp+11)^0,f,c
 23177  01B66C  0E06               	movlw	6
 23178  01B66E  6E01               	movwf	btemp^0,c
 23179  01B670                     u9375:
 23180  01B670  90D8               	bcf	status,0,c
 23181  01B672  360C               	rlcf	(btemp+11)^0,f,c
 23182  01B674  2E01               	decfsz	btemp^0,f,c
 23183  01B676  D7FC               	goto	u9375
 23184  01B678  500C               	movf	(btemp+11)^0,w,c
 23185  01B67A  6E60               	movwf	96,c	;volatile
 23186                           
 23187                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23188  01B67C  52E5               	movf	postdec1,f,c
 23189  01B67E  52E5               	movf	postdec1,f,c
 23190  01B680  0012               	return		;funcret
 23191  01B682                     __end_of_PWM8_LoadDutyValue:
 23192                           	opt callstack 0
 23193                           
 23194 ;; *************** function _help_button *****************
 23195 ;; Defined at:
 23196 ;;		line 26 in file "mconfig.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;		None
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  1  [STACK] _Bool 
 23203 ;; Registers used:
 23204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/1
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:   16
 23217 ;; This function calls:
 23218 ;;		_StartTimer
 23219 ;;		_TimerDone
 23220 ;; This function is called by:
 23221 ;;		_check_help
 23222 ;; This function uses a reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text88
 23226  01B87C                     __ptext88:
 23227                           	opt callstack 0
 23228  01B87C                     _help_button:
 23229                           	opt callstack 13
 23230                           
 23231                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23232                           
 23233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23234                           ;incstack = 0
 23235  01B87C  B0CB               	btfsc	203,0,c	;volatile
 23236  01B87E  D00C               	goto	l1662
 23237                           
 23238                           ;mconfig.c: 29:   V.help = 1;
 23239  01B880  0101               	movlb	1	; () banked
 23240  01B882  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 23241                           
 23242                           ; BSR set to: 1
 23243                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23244  01B884  0E08               	movlw	8
 23245  01B886  6EE6               	movwf	postinc1,c
 23246  01B888  ECA7  F0DD         	call	_TimerDone	;wreg free
 23247  01B88C  5001               	movf	btemp^0,w,c
 23248  01B88E  B4D8               	btfsc	status,2,c
 23249  01B890  D003               	goto	l1662
 23250                           
 23251                           ;mconfig.c: 31:    return 1;
 23252  01B892  0E01               	movlw	1
 23253  01B894  6E01               	movwf	btemp^0,c
 23254  01B896  0012               	return	
 23255  01B898                     l1662:
 23256                           
 23257                           ;mconfig.c: 34:  if (!V.help)
 23258  01B898  0101               	movlb	1	; () banked
 23259  01B89A  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23260  01B89C  D008               	goto	l10460
 23261                           
 23262                           ; BSR set to: 1
 23263                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23264  01B89E  0E2C               	movlw	44
 23265  01B8A0  6EE6               	movwf	postinc1,c
 23266  01B8A2  0E01               	movlw	1
 23267  01B8A4  6EE6               	movwf	postinc1,c
 23268  01B8A6  0E08               	movlw	8
 23269  01B8A8  6EE6               	movwf	postinc1,c
 23270  01B8AA  EC81  F0DB         	call	_StartTimer	;wreg free
 23271  01B8AE                     l10460:
 23272                           
 23273                           ;mconfig.c: 37:  return 0;
 23274  01B8AE  0E00               	movlw	0
 23275  01B8B0  6E01               	movwf	btemp^0,c
 23276                           
 23277                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23278  01B8B2  0012               	return		;funcret
 23279  01B8B4                     __end_of_help_button:
 23280                           	opt callstack 0
 23281                           
 23282 ;; *************** function _TimerDone *****************
 23283 ;; Defined at:
 23284 ;;		line 20 in file "timers.c"
 23285 ;; Parameters:    Size  Location     Type
 23286 ;;  timer           1  [STACK] const unsigned char 
 23287 ;; Auto vars:     Size  Location     Type
 23288 ;;		None
 23289 ;; Return value:  Size  Location     Type
 23290 ;;                  1  [STACK] _Bool 
 23291 ;; Registers used:
 23292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23293 ;; Tracked objects:
 23294 ;;		On entry : 0/1
 23295 ;;		On exit  : 0/0
 23296 ;;		Unchanged: 0/0
 23297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23302 ;;Total ram usage:        0 bytes
 23303 ;; Hardware stack levels used:    1
 23304 ;; Hardware stack levels required when called:   15
 23305 ;; This function calls:
 23306 ;;		Nothing
 23307 ;; This function is called by:
 23308 ;;		_main
 23309 ;;		_WaitMs
 23310 ;;		_help_button
 23311 ;;		_check_help
 23312 ;;		_set_display_info
 23313 ;;		_update_adc_result
 23314 ;;		_esr_check
 23315 ;; This function uses a reentrant model
 23316 ;;
 23317                           
 23318                           	psect	text89
 23319  01BB4E                     __ptext89:
 23320                           	opt callstack 0
 23321  01BB4E                     _TimerDone:
 23322                           	opt callstack 14
 23323                           
 23324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23325                           ;incstack = 0
 23326  01BB4E  0004               	clrwdt		;# 
 23327                           
 23328                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23329                           ;stkvar	_timer @ sp[(0)+-1]
 23330  01BB50  0EFF               	movlw	-1
 23331  01BB52  50E3               	movf	plusw1,w,c
 23332  01BB54  0D02               	mullw	2
 23333  01BB56  0E7D               	movlw	low _tickCount
 23334  01BB58  24F3               	addwf	243,w,c
 23335  01BB5A  6ED9               	movwf	fsr2l,c
 23336  01BB5C  0E02               	movlw	high _tickCount
 23337  01BB5E  20F4               	addwfc	prodh,w,c
 23338  01BB60  6EDA               	movwf	fsr2h,c
 23339  01BB62  50DE               	movf	postinc2,w,c
 23340  01BB64  10DE               	iorwf	postinc2,w,c
 23341  01BB66  A4D8               	btfss	status,2,c
 23342  01BB68  D002               	goto	l9746
 23343                           
 23344                           ;timers.c: 24:   return 1;
 23345  01BB6A  0E01               	movlw	1
 23346  01BB6C  D001               	goto	L27
 23347  01BB6E                     l9746:
 23348                           
 23349                           ;timers.c: 26:  return 0;
 23350  01BB6E  0E00               	movlw	0
 23351  01BB70                     L27:
 23352  01BB70  6E01               	movwf	btemp^0,c
 23353                           
 23354                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23355  01BB72  52E5               	movf	postdec1,f,c
 23356  01BB74  0012               	return		;funcret
 23357  01BB76                     __end_of_TimerDone:
 23358                           	opt callstack 0
 23359                           
 23360 ;; *************** function _StartTimer *****************
 23361 ;; Defined at:
 23362 ;;		line 12 in file "timers.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;  timer           1  [STACK] const unsigned char 
 23365 ;;  count           2  [STACK] const unsigned short 
 23366 ;; Auto vars:     Size  Location     Type
 23367 ;;		None
 23368 ;; Return value:  Size  Location     Type
 23369 ;;                  1  [STACK] void 
 23370 ;; Registers used:
 23371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23372 ;; Tracked objects:
 23373 ;;		On entry : 0/0
 23374 ;;		On exit  : 0/0
 23375 ;;		Unchanged: 0/0
 23376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23381 ;;Total ram usage:        0 bytes
 23382 ;; Hardware stack levels used:    1
 23383 ;; Hardware stack levels required when called:   15
 23384 ;; This function calls:
 23385 ;;		Nothing
 23386 ;; This function is called by:
 23387 ;;		_main
 23388 ;;		_WaitMs
 23389 ;;		_help_button
 23390 ;;		_check_help
 23391 ;;		_update_adc_result
 23392 ;;		_calc_bsoc
 23393 ;;		_esr_check
 23394 ;; This function uses a reentrant model
 23395 ;;
 23396                           
 23397                           	psect	text90
 23398  01B702                     __ptext90:
 23399                           	opt callstack 0
 23400  01B702                     _StartTimer:
 23401                           	opt callstack 0
 23402                           
 23403                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23404                           ;stkvar	_count @ sp[(0)+-3]
 23405                           
 23406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23407                           ;incstack = 0
 23408 ;; hardware stack exceeded
 23409  01B702  0EFD               	movlw	-3
 23410  01B704  006F FF8C  F00B    	movff	plusw1,btemp+10
 23411  01B70A  0EFE               	movlw	-2
 23412  01B70C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23413  01B712  90D8               	bcf	status,0,c
 23414  01B714  340B               	rlcf	(btemp+10)^0,w,c
 23415  01B716  6E09               	movwf	(btemp+8)^0,c
 23416  01B718  340C               	rlcf	(btemp+11)^0,w,c
 23417  01B71A  6E0A               	movwf	(btemp+9)^0,c
 23418                           
 23419                           ;stkvar	_timer @ sp[(0)+-1]
 23420  01B71C  0EFF               	movlw	-1
 23421  01B71E  50E3               	movf	plusw1,w,c
 23422  01B720  0D02               	mullw	2
 23423  01B722  0E7D               	movlw	low _tickCount
 23424  01B724  24F3               	addwf	243,w,c
 23425  01B726  6ED9               	movwf	fsr2l,c
 23426  01B728  0E02               	movlw	high _tickCount
 23427  01B72A  20F4               	addwfc	prodh,w,c
 23428  01B72C  6EDA               	movwf	fsr2h,c
 23429  01B72E  0060  F027  FFDE   	movff	btemp+8,postinc2
 23430  01B734  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23431                           
 23432                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23433  01B73A  52E5               	movf	postdec1,f,c
 23434  01B73C  52E5               	movf	postdec1,f,c
 23435  01B73E  52E5               	movf	postdec1,f,c
 23436  01B740  0012               	return		;funcret
 23437  01B742                     __end_of_StartTimer:
 23438                           	opt callstack 0
 23439                           
 23440 ;; *************** function _display_info *****************
 23441 ;; Defined at:
 23442 ;;		line 190 in file "mconfig.c"
 23443 ;; Parameters:    Size  Location     Type
 23444 ;;		None
 23445 ;; Auto vars:     Size  Location     Type
 23446 ;;		None
 23447 ;; Return value:  Size  Location     Type
 23448 ;;                  1  [STACK] enum E16509
 23449 ;; Registers used:
 23450 ;;		btemp
 23451 ;; Tracked objects:
 23452 ;;		On entry : 0/1
 23453 ;;		On exit  : 0/0
 23454 ;;		Unchanged: 0/0
 23455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23460 ;;Total ram usage:        0 bytes
 23461 ;; Hardware stack levels used:    1
 23462 ;; Hardware stack levels required when called:   15
 23463 ;; This function calls:
 23464 ;;		Nothing
 23465 ;; This function is called by:
 23466 ;;		_check_help
 23467 ;; This function uses a reentrant model
 23468 ;;
 23469                           
 23470                           	psect	text91
 23471  01C15E                     __ptext91:
 23472                           	opt callstack 0
 23473  01C15E                     _display_info:
 23474                           	opt callstack 14
 23475                           
 23476                           ;mconfig.c: 192:  return V.response.info;
 23477                           
 23478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23479                           ;incstack = 0
 23480  01C15E  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23481                           
 23482                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23483  01C164  0012               	return		;funcret
 23484  01C166                     __end_of_display_info:
 23485                           	opt callstack 0
 23486                           
 23487 ;; *************** function _display_help *****************
 23488 ;; Defined at:
 23489 ;;		line 195 in file "mconfig.c"
 23490 ;; Parameters:    Size  Location     Type
 23491 ;;		None
 23492 ;; Auto vars:     Size  Location     Type
 23493 ;;		None
 23494 ;; Return value:  Size  Location     Type
 23495 ;;                  1  [STACK] enum E16509
 23496 ;; Registers used:
 23497 ;;		btemp
 23498 ;; Tracked objects:
 23499 ;;		On entry : 3F/1
 23500 ;;		On exit  : 0/0
 23501 ;;		Unchanged: 0/0
 23502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;Total ram usage:        0 bytes
 23508 ;; Hardware stack levels used:    1
 23509 ;; Hardware stack levels required when called:   15
 23510 ;; This function calls:
 23511 ;;		Nothing
 23512 ;; This function is called by:
 23513 ;;		_check_help
 23514 ;; This function uses a reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text92
 23518  01C166                     __ptext92:
 23519                           	opt callstack 0
 23520  01C166                     _display_help:
 23521                           	opt callstack 14
 23522                           
 23523                           ;mconfig.c: 197:  return V.response.help_temp;
 23524                           
 23525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23526                           ;incstack = 0
 23527  01C166  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23528                           
 23529                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23530  01C16C  0012               	return		;funcret
 23531  01C16E                     __end_of_display_help:
 23532                           	opt callstack 0
 23533                           
 23534 ;; *************** function _check_enter_button *****************
 23535 ;; Defined at:
 23536 ;;		line 42 in file "hid.c"
 23537 ;; Parameters:    Size  Location     Type
 23538 ;;  h               1  [STACK] PTR struct H_data
 23539 ;;		 -> H(7), 
 23540 ;; Auto vars:     Size  Location     Type
 23541 ;;		None
 23542 ;; Return value:  Size  Location     Type
 23543 ;;                  1  [STACK] _Bool 
 23544 ;; Registers used:
 23545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23546 ;; Tracked objects:
 23547 ;;		On entry : 0/0
 23548 ;;		On exit  : 0/0
 23549 ;;		Unchanged: 0/0
 23550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23555 ;;Total ram usage:        0 bytes
 23556 ;; Hardware stack levels used:    1
 23557 ;; Hardware stack levels required when called:   15
 23558 ;; This function calls:
 23559 ;;		Nothing
 23560 ;; This function is called by:
 23561 ;;		_main
 23562 ;; This function uses a reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text93
 23566  01B742                     __ptext93:
 23567                           	opt callstack 0
 23568  01B742                     _check_enter_button:
 23569                           	opt callstack 15
 23570                           
 23571                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23572                           ;stkvar	_h @ sp[(0)+-1]
 23573                           
 23574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23575                           ;incstack = 0
 23576  01B742  0EFF               	movlw	-1
 23577  01B744  50E3               	movf	plusw1,w,c
 23578  01B746  6ED9               	movwf	fsr2l,c
 23579  01B748  6ADA               	clrf	fsr2h,c
 23580  01B74A  0E04               	movlw	4
 23581  01B74C  26D9               	addwf	fsr2l,f,c
 23582  01B74E  50DF               	movf	indf2,w,c
 23583  01B750  A4D8               	btfss	status,2,c
 23584  01B752  D013               	goto	l11088
 23585                           
 23586                           ;stkvar	_h @ sp[(0)+-1]
 23587  01B754  0EFF               	movlw	-1
 23588  01B756  50E3               	movf	plusw1,w,c
 23589  01B758  6ED9               	movwf	fsr2l,c
 23590  01B75A  6ADA               	clrf	fsr2h,c
 23591  01B75C  0E05               	movlw	5
 23592  01B75E  26D9               	addwf	fsr2l,f,c
 23593  01B760  50DF               	movf	indf2,w,c
 23594  01B762  A4D8               	btfss	status,2,c
 23595  01B764  D00A               	goto	l11088
 23596                           
 23597                           ;hid.c: 45:   h->wait_enter = 1;
 23598                           ;stkvar	_h @ sp[(0)+-1]
 23599  01B766  0EFF               	movlw	-1
 23600  01B768  50E3               	movf	plusw1,w,c
 23601  01B76A  6ED9               	movwf	fsr2l,c
 23602  01B76C  6ADA               	clrf	fsr2h,c
 23603  01B76E  0E04               	movlw	4
 23604  01B770  26D9               	addwf	fsr2l,f,c
 23605  01B772  0E01               	movlw	1
 23606  01B774  6EDF               	movwf	indf2,c
 23607                           
 23608                           ;hid.c: 46:   return 1;
 23609  01B776  0E01               	movlw	1
 23610  01B778  D001               	goto	L28
 23611  01B77A                     l11088:
 23612                           
 23613                           ;hid.c: 48:  return 0;
 23614  01B77A  0E00               	movlw	0
 23615  01B77C                     L28:
 23616  01B77C  6E01               	movwf	btemp^0,c
 23617                           
 23618                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23619  01B77E  52E5               	movf	postdec1,f,c
 23620  01B780  0012               	return		;funcret
 23621  01B782                     __end_of_check_enter_button:
 23622                           	opt callstack 0
 23623                           
 23624 ;; *************** function _calc_ror_data *****************
 23625 ;; Defined at:
 23626 ;;		line 102 in file "mbmc.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;		None
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;		None
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  1  [STACK] void 
 23633 ;; Registers used:
 23634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23635 ;; Tracked objects:
 23636 ;;		On entry : 0/39
 23637 ;;		On exit  : 0/0
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;Total ram usage:        0 bytes
 23645 ;; Hardware stack levels used:    1
 23646 ;; Hardware stack levels required when called:   18
 23647 ;; This function calls:
 23648 ;;		___flge
 23649 ;;		___flsub
 23650 ;;		_conv_raw_result
 23651 ;;		_fabsf
 23652 ;; This function is called by:
 23653 ;;		_main
 23654 ;; This function uses a reentrant model
 23655 ;;
 23656                           
 23657                           	psect	text94
 23658  018B3C                     __ptext94:
 23659                           	opt callstack 0
 23660  018B3C                     _calc_ror_data:
 23661                           	opt callstack 12
 23662                           
 23663                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23664                           
 23665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23666                           ;incstack = 0
 23667  018B3C  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23668  018B42  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23669  018B48  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23670  018B4E  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23671  018B54  0E00               	movlw	0
 23672  018B56  6EE6               	movwf	postinc1,c
 23673  018B58  0E00               	movlw	0
 23674  018B5A  6EE6               	movwf	postinc1,c
 23675  018B5C  EC57  F0A9         	call	_conv_raw_result	;wreg free
 23676  018B60  0060  F007  FFE6   	movff	btemp,postinc1
 23677  018B66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23678  018B6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23679  018B72  0060  F013  FFE6   	movff	btemp+3,postinc1
 23680  018B78  ECDB  F0DA         	call	___flsub	;wreg free
 23681  018B7C  0060  F007  FFE6   	movff	btemp,postinc1
 23682  018B82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23683  018B88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23684  018B8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23685  018B94  ECE3  F0D2         	call	_fabsf	;wreg free
 23686  018B98  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23687  018B9E  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23688  018BA4  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23689  018BAA  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23690                           
 23691                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23692  018BB0  0E00               	movlw	0
 23693  018BB2  6EE6               	movwf	postinc1,c
 23694  018BB4  0E00               	movlw	0
 23695  018BB6  6EE6               	movwf	postinc1,c
 23696  018BB8  EC57  F0A9         	call	_conv_raw_result	;wreg free
 23697  018BBC  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23698  018BC2  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23699  018BC8  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23700  018BCE  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23701                           
 23702                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23703  018BD4  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23704  018BDA  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23705  018BE0  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23706  018BE6  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23707  018BEC  0E00               	movlw	0
 23708  018BEE  6EE6               	movwf	postinc1,c
 23709  018BF0  0E04               	movlw	4
 23710  018BF2  6EE6               	movwf	postinc1,c
 23711  018BF4  EC57  F0A9         	call	_conv_raw_result	;wreg free
 23712  018BF8  0060  F007  FFE6   	movff	btemp,postinc1
 23713  018BFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23714  018C04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23715  018C0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23716  018C10  ECDB  F0DA         	call	___flsub	;wreg free
 23717  018C14  0060  F007  FFE6   	movff	btemp,postinc1
 23718  018C1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23719  018C20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23720  018C26  0060  F013  FFE6   	movff	btemp+3,postinc1
 23721  018C2C  ECE3  F0D2         	call	_fabsf	;wreg free
 23722  018C30  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23723  018C36  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23724  018C3C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23725  018C42  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23726                           
 23727                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23728  018C48  0EE7               	movlw	231
 23729  018C4A  6EE6               	movwf	postinc1,c
 23730  018C4C  0E1D               	movlw	29
 23731  018C4E  6EE6               	movwf	postinc1,c
 23732  018C50  0EA7               	movlw	167
 23733  018C52  6EE6               	movwf	postinc1,c
 23734  018C54  0E3B               	movlw	59
 23735  018C56  6EE6               	movwf	postinc1,c
 23736  018C58  EE21  F36B         	lfsr	2,_C+108	;volatile
 23737  018C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 23738  018C62  006F FF7B FFE6     	movff	postinc2,postinc1
 23739  018C68  006F FF7B FFE6     	movff	postinc2,postinc1
 23740  018C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 23741  018C74  ECDA  F0C7         	call	___flge	;wreg free
 23742  018C78  B001               	btfsc	btemp& (0+255),0,c
 23743  018C7A  D010               	goto	l10878
 23744                           
 23745                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23746  018C7C  0EB0               	movlw	176
 23747  018C7E  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23748  018C84  0E03               	movlw	3
 23749  018C86  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23750  018C8C  0E67               	movlw	103
 23751  018C8E  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23752  018C94  0E3C               	movlw	60
 23753  018C96  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23754  018C9C                     l10878:
 23755                           
 23756                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23757  018C9C  0E00               	movlw	0
 23758  018C9E  6EE6               	movwf	postinc1,c
 23759  018CA0  0E04               	movlw	4
 23760  018CA2  6EE6               	movwf	postinc1,c
 23761  018CA4  EC57  F0A9         	call	_conv_raw_result	;wreg free
 23762  018CA8  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23763  018CAE  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23764  018CB4  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23765  018CBA  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23766                           
 23767                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23768  018CC0  0012               	return		;funcret
 23769  018CC2                     __end_of_calc_ror_data:
 23770                           	opt callstack 0
 23771                           
 23772 ;; *************** function _fabsf *****************
 23773 ;; Defined at:
 23774 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23775 ;; Parameters:    Size  Location     Type
 23776 ;;  x               4  [STACK] float 
 23777 ;; Auto vars:     Size  Location     Type
 23778 ;;  u               4  [STACK] struct .
 23779 ;; Return value:  Size  Location     Type
 23780 ;;                  4  [STACK] float 
 23781 ;; Registers used:
 23782 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23783 ;; Tracked objects:
 23784 ;;		On entry : 0/0
 23785 ;;		On exit  : 0/0
 23786 ;;		Unchanged: 0/0
 23787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23792 ;;Total ram usage:        0 bytes
 23793 ;; Hardware stack levels used:    1
 23794 ;; Hardware stack levels required when called:   15
 23795 ;; This function calls:
 23796 ;;		Nothing
 23797 ;; This function is called by:
 23798 ;;		_main
 23799 ;;		_calc_ror_data
 23800 ;;		_calc_bsoc
 23801 ;;		_esr_check
 23802 ;; This function uses a reentrant model
 23803 ;;
 23804                           
 23805                           	psect	text95
 23806  01A5C6                     __ptext95:
 23807                           	opt callstack 0
 23808  01A5C6                     _fabsf:
 23809                           	opt callstack 0
 23810                           
 23811                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23812  01A5C6  52E6               	movf	postinc1,f,c
 23813  01A5C8  52E6               	movf	postinc1,f,c
 23814  01A5CA  52E6               	movf	postinc1,f,c
 23815  01A5CC  52E6               	movf	postinc1,f,c
 23816                           
 23817                           ;incstack = 0
 23818 ;; hardware stack exceeded
 23819  01A5CE  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23820  01A5D4  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23821  01A5DA  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23822  01A5E0  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23823                           
 23824                           ;stkvar	_u @ sp[(-4)+0]
 23825  01A5E6  0EFC               	movlw	-4
 23826  01A5E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23827  01A5EE  0EFD               	movlw	-3
 23828  01A5F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23829  01A5F6  0EFE               	movlw	-2
 23830  01A5F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23831  01A5FE  0EFF               	movlw	-1
 23832  01A600  0060  F033  FFE3   	movff	btemp+11,plusw1
 23833                           
 23834                           ;stkvar	_x @ sp[(-4)+-4]
 23835  01A606  0EF8               	movlw	-8
 23836  01A608  006F FF8C  F009    	movff	plusw1,btemp+8
 23837  01A60E  0EF9               	movlw	-7
 23838  01A610  006F FF8C  F00A    	movff	plusw1,btemp+9
 23839  01A616  0EFA               	movlw	-6
 23840  01A618  006F FF8C  F00B    	movff	plusw1,btemp+10
 23841  01A61E  0EFB               	movlw	-5
 23842  01A620  006F FF8C  F00C    	movff	plusw1,btemp+11
 23843                           
 23844                           ;stkvar	_u @ sp[(-4)+0]
 23845  01A626  0EFC               	movlw	-4
 23846  01A628  0060  F027  FFE3   	movff	btemp+8,plusw1
 23847  01A62E  0EFD               	movlw	-3
 23848  01A630  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23849  01A636  0EFE               	movlw	-2
 23850  01A638  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23851  01A63E  0EFF               	movlw	-1
 23852  01A640  0060  F033  FFE3   	movff	btemp+11,plusw1
 23853                           
 23854                           ;stkvar	_u @ sp[(-4)+0]
 23855  01A646  0EFF               	movlw	-1
 23856  01A648  9EE3               	bcf	plusw1,7,c
 23857                           
 23858                           ;stkvar	_u @ sp[(-4)+0]
 23859  01A64A  0EFC               	movlw	-4
 23860  01A64C  006F FF8C  F001    	movff	plusw1,btemp
 23861  01A652  0EFD               	movlw	-3
 23862  01A654  006F FF8C  F002    	movff	plusw1,btemp+1
 23863  01A65A  0EFE               	movlw	-2
 23864  01A65C  006F FF8C  F003    	movff	plusw1,btemp+2
 23865  01A662  0EFF               	movlw	-1
 23866  01A664  006F FF8C  F004    	movff	plusw1,btemp+3
 23867                           
 23868                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23869  01A66A  0EF8               	movlw	248
 23870  01A66C  26E1               	addwf	fsr1l,f,c
 23871  01A66E  0EFF               	movlw	255
 23872  01A670  22E2               	addwfc	fsr1h,f,c
 23873  01A672  0012               	return		;funcret
 23874  01A674                     __end_of_fabsf:
 23875                           	opt callstack 0
 23876                           
 23877 ;; *************** function _conv_raw_result *****************
 23878 ;; Defined at:
 23879 ;;		line 98 in file "daq.c"
 23880 ;; Parameters:    Size  Location     Type
 23881 ;;  chan            1  [STACK] const enum E16582
 23882 ;;  to_what         1  [STACK] const enum E16644
 23883 ;; Auto vars:     Size  Location     Type
 23884 ;;		None
 23885 ;; Return value:  Size  Location     Type
 23886 ;;                  4  [STACK] float 
 23887 ;; Registers used:
 23888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/39
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;Total ram usage:        0 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:   17
 23901 ;; This function calls:
 23902 ;;		___fladd
 23903 ;;		___fldiv
 23904 ;;		___flmul
 23905 ;;		___flsub
 23906 ;;		___xxtofl
 23907 ;;		_get_raw_result
 23908 ;;		_nanf
 23909 ;; This function is called by:
 23910 ;;		_main
 23911 ;;		_convert_adc_data
 23912 ;;		_calc_ror_data
 23913 ;;		_check_day_time
 23914 ;;		_init_bsoc
 23915 ;;		_esr_check
 23916 ;; This function uses a reentrant model
 23917 ;;
 23918                           
 23919                           	psect	text96
 23920  0152AE                     __ptext96:
 23921                           	opt callstack 0
 23922  0152AE                     _conv_raw_result:
 23923                           	opt callstack 0
 23924                           
 23925                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23926                           
 23927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23928                           ;incstack = 0
 23929 ;; hardware stack exceeded
 23930  0152AE  D276               	goto	l9728
 23931  0152B0                     l9674:
 23932                           
 23933                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23934                           ;stkvar	_chan @ sp[(0)+-1]
 23935  0152B0  0EFF               	movlw	-1
 23936  0152B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23937  0152B8  0E77               	movlw	119
 23938  0152BA  6E09               	movwf	(btemp+8)^0,c
 23939  0152BC  0E3C               	movlw	60
 23940  0152BE  6E0A               	movwf	(btemp+9)^0,c
 23941  0152C0  2A0C               	incf	(btemp+11)^0,f,c
 23942  0152C2  D003               	goto	u9094
 23943  0152C4                     u9095:
 23944  0152C4  340A               	rlcf	(btemp+9)^0,w,c
 23945  0152C6  320A               	rrcf	(btemp+9)^0,f,c
 23946  0152C8  3209               	rrcf	(btemp+8)^0,f,c
 23947  0152CA                     u9094:
 23948  0152CA  2E0C               	decfsz	(btemp+11)^0,f,c
 23949  0152CC  D7FB               	goto	u9095
 23950  0152CE  B009               	btfsc	(btemp+8)^0,0,c
 23951  0152D0  D007               	goto	l9680
 23952                           
 23953                           ;daq.c: 104:    return nanf("");
 23954  0152D2  0E99               	movlw	low (STR_64+120)
 23955  0152D4  6EE6               	movwf	postinc1,c
 23956  0152D6  0EFC               	movlw	high (STR_64+120)
 23957  0152D8  6EE6               	movwf	postinc1,c
 23958  0152DA  EC7D  F0D8         	call	_nanf	;wreg free
 23959  0152DE  D26E               	goto	l1781
 23960  0152E0                     l9680:
 23961                           
 23962                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 23963                           ;stkvar	_chan @ sp[(0)+-1]
 23964  0152E0  0EFF               	movlw	-1
 23965  0152E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23966  0152E8  0E03               	movlw	3
 23967  0152EA  6E09               	movwf	(btemp+8)^0,c
 23968  0152EC  0E00               	movlw	0
 23969  0152EE  6E0A               	movwf	(btemp+9)^0,c
 23970  0152F0  2A0C               	incf	(btemp+11)^0,f,c
 23971  0152F2  D003               	goto	u9114
 23972  0152F4                     u9115:
 23973  0152F4  340A               	rlcf	(btemp+9)^0,w,c
 23974  0152F6  320A               	rrcf	(btemp+9)^0,f,c
 23975  0152F8  3209               	rrcf	(btemp+8)^0,f,c
 23976  0152FA                     u9114:
 23977  0152FA  2E0C               	decfsz	(btemp+11)^0,f,c
 23978  0152FC  D7FB               	goto	u9115
 23979  0152FE  A009               	btfss	(btemp+8)^0,0,c
 23980  015300  D11F               	goto	l9694
 23981                           
 23982                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 23983                           ;stkvar	_chan @ sp[(0)+-1]
 23984  015302  0EFF               	movlw	-1
 23985  015304  006F FF8C  F00C    	movff	plusw1,btemp+11
 23986  01530A  0E01               	movlw	1
 23987  01530C  6E09               	movwf	(btemp+8)^0,c
 23988  01530E  0E00               	movlw	0
 23989  015310  6E0A               	movwf	(btemp+9)^0,c
 23990  015312  2A0C               	incf	(btemp+11)^0,f,c
 23991  015314  D003               	goto	u9134
 23992  015316                     u9135:
 23993  015316  340A               	rlcf	(btemp+9)^0,w,c
 23994  015318  320A               	rrcf	(btemp+9)^0,f,c
 23995  01531A  3209               	rrcf	(btemp+8)^0,f,c
 23996  01531C                     u9134:
 23997  01531C  2E0C               	decfsz	(btemp+11)^0,f,c
 23998  01531E  D7FB               	goto	u9135
 23999  015320  A009               	btfss	(btemp+8)^0,0,c
 24000  015322  D087               	goto	l9690
 24001                           
 24002                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24003  015324  0060  F493  FFE6   	movff	_R+36,postinc1
 24004  01532A  0060  F497  FFE6   	movff	_R+37,postinc1
 24005  015330  0060  F49B  FFE6   	movff	_R+38,postinc1
 24006  015336  0060  F49F  FFE6   	movff	_R+39,postinc1
 24007  01533C  0E7B               	movlw	123
 24008  01533E  6EE6               	movwf	postinc1,c
 24009  015340  0E14               	movlw	20
 24010  015342  6EE6               	movwf	postinc1,c
 24011  015344  0EAE               	movlw	174
 24012  015346  6EE6               	movwf	postinc1,c
 24013  015348  0E3D               	movlw	61
 24014  01534A  6EE6               	movwf	postinc1,c
 24015  01534C  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 24016  015352  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 24017  015358  0E00               	movlw	0
 24018  01535A  BE0A               	btfsc	(btemp+9)^0,7,c
 24019  01535C  0EFF               	movlw	255
 24020  01535E  6E0B               	movwf	(btemp+10)^0,c
 24021  015360  6E0C               	movwf	(btemp+11)^0,c
 24022  015362  0060  F027  FFE6   	movff	btemp+8,postinc1
 24023  015368  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24024  01536E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24025  015374  0060  F033  FFE6   	movff	btemp+11,postinc1
 24026  01537A  0E01               	movlw	1
 24027  01537C  6EE6               	movwf	postinc1,c
 24028  01537E  EC23  F0C2         	call	___xxtofl	;wreg free
 24029  015382  0060  F007  FFE6   	movff	btemp,postinc1
 24030  015388  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24031  01538E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24032  015394  0060  F013  FFE6   	movff	btemp+3,postinc1
 24033                           
 24034                           ;stkvar	_chan @ sp[(-12)+-1]
 24035  01539A  0EF3               	movlw	-13
 24036  01539C  50E3               	movf	plusw1,w,c
 24037  01539E  6EE6               	movwf	postinc1,c
 24038  0153A0  EC3E  F0DF         	call	_get_raw_result	;wreg free
 24039  0153A4  0060  F004  F00B   	movff	btemp,btemp+10
 24040  0153AA  0060  F008  F00C   	movff	btemp+1,btemp+11
 24041  0153B0  500B               	movf	(btemp+10)^0,w,c
 24042  0153B2  6E05               	movwf	(btemp+4)^0,c
 24043  0153B4  500C               	movf	(btemp+11)^0,w,c
 24044  0153B6  6E06               	movwf	(btemp+5)^0,c
 24045  0153B8  6A07               	clrf	(btemp+6)^0,c
 24046  0153BA  6A08               	clrf	(btemp+7)^0,c
 24047  0153BC  0060  F017  FFE6   	movff	btemp+4,postinc1
 24048  0153C2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24049  0153C8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24050  0153CE  0060  F023  FFE6   	movff	btemp+7,postinc1
 24051  0153D4  0E00               	movlw	0
 24052  0153D6  6EE6               	movwf	postinc1,c
 24053  0153D8  EC23  F0C2         	call	___xxtofl	;wreg free
 24054  0153DC  0060  F007  FFE6   	movff	btemp,postinc1
 24055  0153E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24056  0153E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24057  0153EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24058  0153F4  ECDB  F0DA         	call	___flsub	;wreg free
 24059  0153F8  0060  F007  FFE6   	movff	btemp,postinc1
 24060  0153FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24061  015404  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24062  01540A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24063  015410  ECA7  F09E         	call	___flmul	;wreg free
 24064  015414  0060  F007  FFE6   	movff	btemp,postinc1
 24065  01541A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24066  015420  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24067  015426  0060  F013  FFE6   	movff	btemp+3,postinc1
 24068  01542C  ECBC  F0A2         	call	___fladd	;wreg free
 24069  015430  D1C5               	goto	l1781
 24070  015432                     l9690:
 24071                           
 24072                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24073  015432  0060  F4A3  FFE6   	movff	_R+40,postinc1
 24074  015438  0060  F4A7  FFE6   	movff	_R+41,postinc1
 24075  01543E  0060  F4AB  FFE6   	movff	_R+42,postinc1
 24076  015444  0060  F4AF  FFE6   	movff	_R+43,postinc1
 24077  01544A  0E29               	movlw	41
 24078  01544C  6EE6               	movwf	postinc1,c
 24079  01544E  0E5C               	movlw	92
 24080  015450  6EE6               	movwf	postinc1,c
 24081  015452  0E0F               	movlw	15
 24082  015454  6EE6               	movwf	postinc1,c
 24083  015456  0E3D               	movlw	61
 24084  015458  6EE6               	movwf	postinc1,c
 24085  01545A  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 24086  015460  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 24087  015466  0E00               	movlw	0
 24088  015468  BE0A               	btfsc	(btemp+9)^0,7,c
 24089  01546A  0EFF               	movlw	255
 24090  01546C  6E0B               	movwf	(btemp+10)^0,c
 24091  01546E  6E0C               	movwf	(btemp+11)^0,c
 24092  015470  0060  F027  FFE6   	movff	btemp+8,postinc1
 24093  015476  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24094  01547C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24095  015482  0060  F033  FFE6   	movff	btemp+11,postinc1
 24096  015488  0E01               	movlw	1
 24097  01548A  6EE6               	movwf	postinc1,c
 24098  01548C  EC23  F0C2         	call	___xxtofl	;wreg free
 24099  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24100  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24101  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24102  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24103                           
 24104                           ;stkvar	_chan @ sp[(-12)+-1]
 24105  0154A8  0EF3               	movlw	-13
 24106  0154AA  50E3               	movf	plusw1,w,c
 24107  0154AC  6EE6               	movwf	postinc1,c
 24108  0154AE  EC3E  F0DF         	call	_get_raw_result	;wreg free
 24109  0154B2  0060  F004  F00B   	movff	btemp,btemp+10
 24110  0154B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 24111  0154BE  500B               	movf	(btemp+10)^0,w,c
 24112  0154C0  6E05               	movwf	(btemp+4)^0,c
 24113  0154C2  500C               	movf	(btemp+11)^0,w,c
 24114  0154C4  6E06               	movwf	(btemp+5)^0,c
 24115  0154C6  6A07               	clrf	(btemp+6)^0,c
 24116  0154C8  6A08               	clrf	(btemp+7)^0,c
 24117  0154CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 24118  0154D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24119  0154D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24120  0154DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 24121  0154E2  0E00               	movlw	0
 24122  0154E4  6EE6               	movwf	postinc1,c
 24123  0154E6  EC23  F0C2         	call	___xxtofl	;wreg free
 24124  0154EA  0060  F007  FFE6   	movff	btemp,postinc1
 24125  0154F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24126  0154F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24127  0154FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24128  015502  ECDB  F0DA         	call	___flsub	;wreg free
 24129  015506  0060  F007  FFE6   	movff	btemp,postinc1
 24130  01550C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24131  015512  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24132  015518  0060  F013  FFE6   	movff	btemp+3,postinc1
 24133  01551E  ECA7  F09E         	call	___flmul	;wreg free
 24134  015522  0060  F007  FFE6   	movff	btemp,postinc1
 24135  015528  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24136  01552E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24137  015534  0060  F013  FFE6   	movff	btemp+3,postinc1
 24138  01553A  ECBC  F0A2         	call	___fladd	;wreg free
 24139  01553E  D13E               	goto	l1781
 24140  015540                     l9694:
 24141                           
 24142                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 24143                           ;stkvar	_chan @ sp[(0)+-1]
 24144  015540  0EFF               	movlw	-1
 24145  015542  006F FF8C  F00C    	movff	plusw1,btemp+11
 24146  015548  0E00               	movlw	0
 24147  01554A  6E09               	movwf	(btemp+8)^0,c
 24148  01554C  0E08               	movlw	8
 24149  01554E  6E0A               	movwf	(btemp+9)^0,c
 24150  015550  2A0C               	incf	(btemp+11)^0,f,c
 24151  015552  D003               	goto	u9154
 24152  015554                     u9155:
 24153  015554  340A               	rlcf	(btemp+9)^0,w,c
 24154  015556  320A               	rrcf	(btemp+9)^0,f,c
 24155  015558  3209               	rrcf	(btemp+8)^0,f,c
 24156  01555A                     u9154:
 24157  01555A  2E0C               	decfsz	(btemp+11)^0,f,c
 24158  01555C  D7FB               	goto	u9155
 24159  01555E  A009               	btfss	(btemp+8)^0,0,c
 24160  015560  D008               	goto	l9702
 24161                           
 24162                           ;daq.c: 114:     return 25.0;
 24163  015562  0E00               	movlw	0
 24164  015564  6E01               	movwf	btemp^0,c
 24165  015566  0E00               	movlw	0
 24166  015568  6E02               	movwf	(btemp+1)^0,c
 24167  01556A  0EC8               	movlw	200
 24168  01556C  6E03               	movwf	(btemp+2)^0,c
 24169  01556E  0E41               	movlw	65
 24170  015570  D113               	goto	L29
 24171  015572                     l9702:
 24172                           
 24173                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24174  015572  0E00               	movlw	0
 24175  015574  6EE6               	movwf	postinc1,c
 24176  015576  0E00               	movlw	0
 24177  015578  6EE6               	movwf	postinc1,c
 24178  01557A  0E7A               	movlw	122
 24179  01557C  6EE6               	movwf	postinc1,c
 24180  01557E  0E44               	movlw	68
 24181  015580  6EE6               	movwf	postinc1,c
 24182  015582  0E61               	movlw	97
 24183  015584  6EE6               	movwf	postinc1,c
 24184  015586  0E03               	movlw	3
 24185  015588  6EE6               	movwf	postinc1,c
 24186  01558A  0E84               	movlw	132
 24187  01558C  6EE6               	movwf	postinc1,c
 24188  01558E  0E40               	movlw	64
 24189  015590  6EE6               	movwf	postinc1,c
 24190                           
 24191                           ;stkvar	_chan @ sp[(-8)+-1]
 24192  015592  0EF7               	movlw	-9
 24193  015594  50E3               	movf	plusw1,w,c
 24194  015596  6EE6               	movwf	postinc1,c
 24195  015598  EC3E  F0DF         	call	_get_raw_result	;wreg free
 24196  01559C  0060  F004  F00B   	movff	btemp,btemp+10
 24197  0155A2  0060  F008  F00C   	movff	btemp+1,btemp+11
 24198  0155A8  500B               	movf	(btemp+10)^0,w,c
 24199  0155AA  6E05               	movwf	(btemp+4)^0,c
 24200  0155AC  500C               	movf	(btemp+11)^0,w,c
 24201  0155AE  6E06               	movwf	(btemp+5)^0,c
 24202  0155B0  6A07               	clrf	(btemp+6)^0,c
 24203  0155B2  6A08               	clrf	(btemp+7)^0,c
 24204  0155B4  0060  F017  FFE6   	movff	btemp+4,postinc1
 24205  0155BA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24206  0155C0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24207  0155C6  0060  F023  FFE6   	movff	btemp+7,postinc1
 24208  0155CC  0E00               	movlw	0
 24209  0155CE  6EE6               	movwf	postinc1,c
 24210  0155D0  EC23  F0C2         	call	___xxtofl	;wreg free
 24211  0155D4  0060  F007  FFE6   	movff	btemp,postinc1
 24212  0155DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24213  0155E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24214  0155E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24215  0155EC  ECA7  F09E         	call	___flmul	;wreg free
 24216  0155F0  0060  F007  FFE6   	movff	btemp,postinc1
 24217  0155F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24218  0155FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24219  015602  0060  F013  FFE6   	movff	btemp+3,postinc1
 24220  015608  EC9A  F0A6         	call	___fldiv	;wreg free
 24221  01560C  D0D7               	goto	l1781
 24222  01560E                     l9706:
 24223                           
 24224                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24225                           ;stkvar	_chan @ sp[(0)+-1]
 24226  01560E  0EFF               	movlw	-1
 24227  015610  006F FF8C  F00C    	movff	plusw1,btemp+11
 24228  015616  0E03               	movlw	3
 24229  015618  6E09               	movwf	(btemp+8)^0,c
 24230  01561A  0E00               	movlw	0
 24231  01561C  6E0A               	movwf	(btemp+9)^0,c
 24232  01561E  2A0C               	incf	(btemp+11)^0,f,c
 24233  015620  D003               	goto	u9174
 24234  015622                     u9175:
 24235  015622  340A               	rlcf	(btemp+9)^0,w,c
 24236  015624  320A               	rrcf	(btemp+9)^0,f,c
 24237  015626  3209               	rrcf	(btemp+8)^0,f,c
 24238  015628                     u9174:
 24239  015628  2E0C               	decfsz	(btemp+11)^0,f,c
 24240  01562A  D7FB               	goto	u9175
 24241  01562C  B009               	btfsc	(btemp+8)^0,0,c
 24242  01562E  D011               	goto	u9200
 24243                           
 24244                           ;stkvar	_chan @ sp[(0)+-1]
 24245  015630  0EFF               	movlw	-1
 24246  015632  006F FF8C  F00C    	movff	plusw1,btemp+11
 24247  015638  0E00               	movlw	0
 24248  01563A  6E09               	movwf	(btemp+8)^0,c
 24249  01563C  0E08               	movlw	8
 24250  01563E  6E0A               	movwf	(btemp+9)^0,c
 24251  015640  2A0C               	incf	(btemp+11)^0,f,c
 24252  015642  D003               	goto	u9194
 24253  015644                     u9195:
 24254  015644  340A               	rlcf	(btemp+9)^0,w,c
 24255  015646  320A               	rrcf	(btemp+9)^0,f,c
 24256  015648  3209               	rrcf	(btemp+8)^0,f,c
 24257  01564A                     u9194:
 24258  01564A  2E0C               	decfsz	(btemp+11)^0,f,c
 24259  01564C  D7FB               	goto	u9195
 24260  01564E  A009               	btfss	(btemp+8)^0,0,c
 24261  015650  D04E               	goto	l9714
 24262  015652                     u9200:
 24263                           
 24264                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24265  015652  0E00               	movlw	0
 24266  015654  6EE6               	movwf	postinc1,c
 24267  015656  0E00               	movlw	0
 24268  015658  6EE6               	movwf	postinc1,c
 24269  01565A  0E7A               	movlw	122
 24270  01565C  6EE6               	movwf	postinc1,c
 24271  01565E  0E44               	movlw	68
 24272  015660  6EE6               	movwf	postinc1,c
 24273  015662  0E00               	movlw	0
 24274  015664  6EE6               	movwf	postinc1,c
 24275  015666  0E00               	movlw	0
 24276  015668  6EE6               	movwf	postinc1,c
 24277  01566A  0E20               	movlw	32
 24278  01566C  6EE6               	movwf	postinc1,c
 24279  01566E  0E3F               	movlw	63
 24280  015670  6EE6               	movwf	postinc1,c
 24281                           
 24282                           ;stkvar	_chan @ sp[(-8)+-1]
 24283  015672  0EF7               	movlw	-9
 24284  015674  50E3               	movf	plusw1,w,c
 24285  015676  6EE6               	movwf	postinc1,c
 24286  015678  EC3E  F0DF         	call	_get_raw_result	;wreg free
 24287  01567C  0060  F004  F00B   	movff	btemp,btemp+10
 24288  015682  0060  F008  F00C   	movff	btemp+1,btemp+11
 24289  015688  500B               	movf	(btemp+10)^0,w,c
 24290  01568A  6E05               	movwf	(btemp+4)^0,c
 24291  01568C  500C               	movf	(btemp+11)^0,w,c
 24292  01568E  6E06               	movwf	(btemp+5)^0,c
 24293  015690  6A07               	clrf	(btemp+6)^0,c
 24294  015692  6A08               	clrf	(btemp+7)^0,c
 24295  015694  0060  F017  FFE6   	movff	btemp+4,postinc1
 24296  01569A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24297  0156A0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24298  0156A6  0060  F023  FFE6   	movff	btemp+7,postinc1
 24299  0156AC  0E00               	movlw	0
 24300  0156AE  6EE6               	movwf	postinc1,c
 24301  0156B0  EC23  F0C2         	call	___xxtofl	;wreg free
 24302  0156B4  0060  F007  FFE6   	movff	btemp,postinc1
 24303  0156BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24304  0156C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24305  0156C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24306  0156CC  ECA7  F09E         	call	___flmul	;wreg free
 24307  0156D0  0060  F007  FFE6   	movff	btemp,postinc1
 24308  0156D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24309  0156DC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24310  0156E2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24311  0156E8  EC9A  F0A6         	call	___fldiv	;wreg free
 24312  0156EC  D067               	goto	l1781
 24313  0156EE                     l9714:
 24314                           
 24315                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24316  0156EE  0E00               	movlw	0
 24317  0156F0  6EE6               	movwf	postinc1,c
 24318  0156F2  0E00               	movlw	0
 24319  0156F4  6EE6               	movwf	postinc1,c
 24320  0156F6  0E7A               	movlw	122
 24321  0156F8  6EE6               	movwf	postinc1,c
 24322  0156FA  0E44               	movlw	68
 24323  0156FC  6EE6               	movwf	postinc1,c
 24324  0156FE  0E61               	movlw	97
 24325  015700  6EE6               	movwf	postinc1,c
 24326  015702  0E03               	movlw	3
 24327  015704  6EE6               	movwf	postinc1,c
 24328  015706  0E84               	movlw	132
 24329  015708  6EE6               	movwf	postinc1,c
 24330  01570A  0E40               	movlw	64
 24331  01570C  6EE6               	movwf	postinc1,c
 24332                           
 24333                           ;stkvar	_chan @ sp[(-8)+-1]
 24334  01570E  0EF7               	movlw	-9
 24335  015710  50E3               	movf	plusw1,w,c
 24336  015712  6EE6               	movwf	postinc1,c
 24337  015714  EC3E  F0DF         	call	_get_raw_result	;wreg free
 24338  015718  0060  F004  F00B   	movff	btemp,btemp+10
 24339  01571E  0060  F008  F00C   	movff	btemp+1,btemp+11
 24340  015724  500B               	movf	(btemp+10)^0,w,c
 24341  015726  6E05               	movwf	(btemp+4)^0,c
 24342  015728  500C               	movf	(btemp+11)^0,w,c
 24343  01572A  6E06               	movwf	(btemp+5)^0,c
 24344  01572C  6A07               	clrf	(btemp+6)^0,c
 24345  01572E  6A08               	clrf	(btemp+7)^0,c
 24346  015730  0060  F017  FFE6   	movff	btemp+4,postinc1
 24347  015736  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24348  01573C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24349  015742  0060  F023  FFE6   	movff	btemp+7,postinc1
 24350  015748  0E00               	movlw	0
 24351  01574A  6EE6               	movwf	postinc1,c
 24352  01574C  EC23  F0C2         	call	___xxtofl	;wreg free
 24353  015750  0060  F007  FFE6   	movff	btemp,postinc1
 24354  015756  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24355  01575C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24356  015762  0060  F013  FFE6   	movff	btemp+3,postinc1
 24357  015768  ECA7  F09E         	call	___flmul	;wreg free
 24358  01576C  0060  F007  FFE6   	movff	btemp,postinc1
 24359  015772  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24360  015778  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24361  01577E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24362  015784  EC9A  F0A6         	call	___fldiv	;wreg free
 24363  015788  D019               	goto	l1781
 24364  01578A                     l9720:
 24365                           
 24366                           ;daq.c: 127:   return 0.0;
 24367  01578A  0E00               	movlw	0
 24368  01578C  6E01               	movwf	btemp^0,c
 24369  01578E  0E00               	movlw	0
 24370  015790  6E02               	movwf	(btemp+1)^0,c
 24371  015792  0E00               	movlw	0
 24372  015794  6E03               	movwf	(btemp+2)^0,c
 24373  015796  0E00               	movlw	0
 24374  015798                     L29:
 24375  015798  6E04               	movwf	(btemp+3)^0,c
 24376  01579A  D010               	goto	l1781
 24377  01579C                     l9728:
 24378                           
 24379                           ;stkvar	_to_what @ sp[(0)+-2]
 24380  01579C  0EFE               	movlw	-2
 24381  01579E  50E3               	movf	plusw1,w,c
 24382  0157A0  6E0B               	movwf	(btemp+10)^0,c
 24383  0157A2  6A0C               	clrf	(btemp+11)^0,c
 24384                           
 24385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24386                           ; Switch size 1, requested type "simple"
 24387                           ; Number of cases is 1, Range of values is 0 to 0
 24388                           ; switch strategies available:
 24389                           ; Name         Instructions Cycles
 24390                           ; simple_byte            4     3 (average)
 24391                           ;	Chosen strategy is simple_byte
 24392  0157A4  500C               	movf	(btemp+11)^0,w,c
 24393  0157A6  0A00               	xorlw	0	; case 0
 24394  0157A8  A4D8               	btfss	status,2,c
 24395  0157AA  D7EF               	goto	l9720
 24396                           
 24397                           ; Switch size 1, requested type "simple"
 24398                           ; Number of cases is 2, Range of values is 0 to 1
 24399                           ; switch strategies available:
 24400                           ; Name         Instructions Cycles
 24401                           ; simple_byte            7     4 (average)
 24402                           ;	Chosen strategy is simple_byte
 24403  0157AC  500B               	movf	(btemp+10)^0,w,c
 24404  0157AE  0A00               	xorlw	0	; case 0
 24405  0157B0  B4D8               	btfsc	status,2,c
 24406  0157B2  D57E               	goto	l9674
 24407  0157B4  0A01               	xorlw	1	; case 1
 24408  0157B6  B4D8               	btfsc	status,2,c
 24409  0157B8  D72A               	goto	l9706
 24410  0157BA  D7E7               	goto	l9720
 24411  0157BC                     l1781:
 24412                           
 24413                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24414  0157BC  52E5               	movf	postdec1,f,c
 24415  0157BE  52E5               	movf	postdec1,f,c
 24416  0157C0  0012               	return		;funcret
 24417  0157C2                     __end_of_conv_raw_result:
 24418                           	opt callstack 0
 24419                           
 24420 ;; *************** function _nanf *****************
 24421 ;; Defined at:
 24422 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24423 ;; Parameters:    Size  Location     Type
 24424 ;;  s               2  [STACK] PTR const unsigned char 
 24425 ;;		 -> STR_101(1), STR_63(1), 
 24426 ;; Auto vars:     Size  Location     Type
 24427 ;;  u               4  [STACK] struct .
 24428 ;; Return value:  Size  Location     Type
 24429 ;;                  4  [STACK] float 
 24430 ;; Registers used:
 24431 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24432 ;; Tracked objects:
 24433 ;;		On entry : 0/39
 24434 ;;		On exit  : 0/0
 24435 ;;		Unchanged: 0/0
 24436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24441 ;;Total ram usage:        0 bytes
 24442 ;; Hardware stack levels used:    1
 24443 ;; Hardware stack levels required when called:   15
 24444 ;; This function calls:
 24445 ;;		Nothing
 24446 ;; This function is called by:
 24447 ;;		_conv_raw_result
 24448 ;; This function uses a reentrant model
 24449 ;;
 24450                           
 24451                           	psect	text97
 24452  01B0FA                     __ptext97:
 24453                           	opt callstack 0
 24454  01B0FA                     _nanf:
 24455                           	opt callstack 0
 24456                           
 24457                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24458  01B0FA  52E6               	movf	postinc1,f,c
 24459  01B0FC  52E6               	movf	postinc1,f,c
 24460  01B0FE  52E6               	movf	postinc1,f,c
 24461  01B100  52E6               	movf	postinc1,f,c
 24462                           
 24463                           ;incstack = 0
 24464 ;; hardware stack exceeded
 24465  01B102  0EFF               	movlw	255
 24466  01B104  6E09               	movwf	(btemp+8)^0,c
 24467  01B106  0EFF               	movlw	255
 24468  01B108  6E0A               	movwf	(btemp+9)^0,c
 24469  01B10A  0EFF               	movlw	255
 24470  01B10C  6E0B               	movwf	(btemp+10)^0,c
 24471  01B10E  0E7F               	movlw	127
 24472  01B110  6E0C               	movwf	(btemp+11)^0,c
 24473                           
 24474                           ;stkvar	_u @ sp[(-4)+0]
 24475  01B112  0EFC               	movlw	-4
 24476  01B114  0060  F027  FFE3   	movff	btemp+8,plusw1
 24477  01B11A  0EFD               	movlw	-3
 24478  01B11C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24479  01B122  0EFE               	movlw	-2
 24480  01B124  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24481  01B12A  0EFF               	movlw	-1
 24482  01B12C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24483                           
 24484                           ;stkvar	_u @ sp[(-4)+0]
 24485  01B132  0EFC               	movlw	-4
 24486  01B134  006F FF8C  F001    	movff	plusw1,btemp
 24487  01B13A  0EFD               	movlw	-3
 24488  01B13C  006F FF8C  F002    	movff	plusw1,btemp+1
 24489  01B142  0EFE               	movlw	-2
 24490  01B144  006F FF8C  F003    	movff	plusw1,btemp+2
 24491  01B14A  0EFF               	movlw	-1
 24492  01B14C  006F FF8C  F004    	movff	plusw1,btemp+3
 24493                           
 24494                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24495  01B152  0EFA               	movlw	250
 24496  01B154  26E1               	addwf	fsr1l,f,c
 24497  01B156  0EFF               	movlw	255
 24498  01B158  22E2               	addwfc	fsr1h,f,c
 24499  01B15A  0012               	return		;funcret
 24500  01B15C                     __end_of_nanf:
 24501                           	opt callstack 0
 24502                           
 24503 ;; *************** function _get_raw_result *****************
 24504 ;; Defined at:
 24505 ;;		line 90 in file "daq.c"
 24506 ;; Parameters:    Size  Location     Type
 24507 ;;  index           1  [STACK] const enum E16582
 24508 ;; Auto vars:     Size  Location     Type
 24509 ;;		None
 24510 ;; Return value:  Size  Location     Type
 24511 ;;                  2  [STACK] unsigned short 
 24512 ;; Registers used:
 24513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24514 ;; Tracked objects:
 24515 ;;		On entry : 0/1
 24516 ;;		On exit  : 0/0
 24517 ;;		Unchanged: 0/0
 24518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24523 ;;Total ram usage:        0 bytes
 24524 ;; Hardware stack levels used:    1
 24525 ;; Hardware stack levels required when called:   15
 24526 ;; This function calls:
 24527 ;;		Nothing
 24528 ;; This function is called by:
 24529 ;;		_main
 24530 ;;		_conv_raw_result
 24531 ;; This function uses a reentrant model
 24532 ;;
 24533                           
 24534                           	psect	text98
 24535  01BE7C                     __ptext98:
 24536                           	opt callstack 0
 24537  01BE7C                     _get_raw_result:
 24538                           	opt callstack 0
 24539                           
 24540                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24541                           ;stkvar	_index @ sp[(0)+-1]
 24542                           
 24543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24544                           ;incstack = 0
 24545 ;; hardware stack exceeded
 24546  01BE7C  0EFF               	movlw	-1
 24547  01BE7E  50E3               	movf	plusw1,w,c
 24548  01BE80  0D02               	mullw	2
 24549  01BE82  0E00               	movlw	low _R
 24550  01BE84  24F3               	addwf	243,w,c
 24551  01BE86  6ED9               	movwf	fsr2l,c
 24552  01BE88  0E01               	movlw	high _R
 24553  01BE8A  20F4               	addwfc	prodh,w,c
 24554  01BE8C  6EDA               	movwf	fsr2h,c
 24555  01BE8E  006F FF78  F001    	movff	postinc2,btemp
 24556  01BE94  006F FF74  F002    	movff	postdec2,btemp+1
 24557                           
 24558                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24559  01BE9A  52E5               	movf	postdec1,f,c
 24560  01BE9C  0012               	return		;funcret
 24561  01BE9E                     __end_of_get_raw_result:
 24562                           	opt callstack 0
 24563                           
 24564 ;; *************** function ___xxtofl *****************
 24565 ;; Defined at:
 24566 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;  sign            1  [STACK] unsigned char 
 24569 ;;  val             4  [STACK] long 
 24570 ;; Auto vars:     Size  Location     Type
 24571 ;;  arg             4  [STACK] unsigned long 
 24572 ;;  exp             1  [STACK] unsigned char 
 24573 ;; Return value:  Size  Location     Type
 24574 ;;                  4  [STACK] unsigned char 
 24575 ;; Registers used:
 24576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24577 ;; Tracked objects:
 24578 ;;		On entry : 0/1
 24579 ;;		On exit  : 0/0
 24580 ;;		Unchanged: 0/0
 24581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;Total ram usage:        0 bytes
 24587 ;; Hardware stack levels used:    1
 24588 ;; Hardware stack levels required when called:   15
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		_conv_raw_result
 24593 ;;		_init_bsoc
 24594 ;;		_Volts_to_SOC
 24595 ;; This function uses a reentrant model
 24596 ;;
 24597                           
 24598                           	psect	text99
 24599  018446                     __ptext99:
 24600                           	opt callstack 0
 24601  018446                     ___xxtofl:
 24602                           	opt callstack 0
 24603                           
 24604                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24605  018446  0E05               	movlw	5
 24606  018448  26E1               	addwf	fsr1l,f,c
 24607  01844A  0E00               	movlw	0
 24608  01844C  22E2               	addwfc	fsr1h,f,c
 24609                           
 24610                           ;stkvar	_sign @ sp[(-5)+-1]
 24611                           
 24612                           ;incstack = 0
 24613 ;; hardware stack exceeded
 24614  01844E  0EFA               	movlw	-6
 24615  018450  50E3               	movf	plusw1,w,c
 24616  018452  B4D8               	btfsc	status,2,c
 24617  018454  D01D               	goto	l9622
 24618                           
 24619                           ;stkvar	_val @ sp[(-5)+-5]
 24620  018456  0EF9               	movlw	-7
 24621  018458  AEE3               	btfss	plusw1,7,c
 24622  01845A  D01A               	goto	l9622
 24623                           
 24624                           ;stkvar	_val @ sp[(-5)+-5]
 24625  01845C  0EF6               	movlw	-10
 24626  01845E  006F FF8C  F009    	movff	plusw1,btemp+8
 24627  018464  0EF7               	movlw	-9
 24628  018466  006F FF8C  F00A    	movff	plusw1,btemp+9
 24629  01846C  0EF8               	movlw	-8
 24630  01846E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24631  018474  0EF9               	movlw	-7
 24632  018476  006F FF8C  F00C    	movff	plusw1,btemp+11
 24633  01847C  1E09               	comf	(btemp+8)^0,f,c
 24634  01847E  1E0A               	comf	(btemp+9)^0,f,c
 24635  018480  1E0B               	comf	(btemp+10)^0,f,c
 24636  018482  1E0C               	comf	(btemp+11)^0,f,c
 24637  018484  2A09               	incf	(btemp+8)^0,f,c
 24638  018486  0E00               	movlw	0
 24639  018488  220A               	addwfc	(btemp+9)^0,f,c
 24640  01848A  220B               	addwfc	(btemp+10)^0,f,c
 24641  01848C  220C               	addwfc	(btemp+11)^0,f,c
 24642  01848E  D010               	goto	L30
 24643  018490                     l9622:
 24644                           
 24645                           ;stkvar	_val @ sp[(-5)+-5]
 24646  018490  0EF6               	movlw	-10
 24647  018492  006F FF8C  F009    	movff	plusw1,btemp+8
 24648  018498  0EF7               	movlw	-9
 24649  01849A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24650  0184A0  0EF8               	movlw	-8
 24651  0184A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24652  0184A8  0EF9               	movlw	-7
 24653  0184AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24654  0184B0                     L30:
 24655                           
 24656                           ;stkvar	_arg @ sp[(-5)+0]
 24657  0184B0  0EFB               	movlw	-5
 24658  0184B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24659  0184B8  0EFC               	movlw	-4
 24660  0184BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24661  0184C0  0EFD               	movlw	-3
 24662  0184C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24663  0184C8  0EFE               	movlw	-2
 24664  0184CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24665                           
 24666                           ;stkvar	_val @ sp[(-5)+-5]
 24667  0184D0  0EF6               	movlw	-10
 24668  0184D2  50E3               	movf	plusw1,w,c
 24669  0184D4  E113               	bnz	l9630
 24670  0184D6  0EF7               	movlw	-9
 24671  0184D8  50E3               	movf	plusw1,w,c
 24672  0184DA  E110               	bnz	l9630
 24673  0184DC  0EF8               	movlw	-8
 24674  0184DE  50E3               	movf	plusw1,w,c
 24675  0184E0  E10D               	bnz	l9630
 24676  0184E2  0EF9               	movlw	-7
 24677  0184E4  50E3               	movf	plusw1,w,c
 24678  0184E6  A4D8               	btfss	status,2,c
 24679  0184E8  D009               	goto	l9630
 24680  0184EA  0E00               	movlw	0
 24681  0184EC  6E01               	movwf	btemp^0,c
 24682  0184EE  0E00               	movlw	0
 24683  0184F0  6E02               	movwf	(btemp+1)^0,c
 24684  0184F2  0E00               	movlw	0
 24685  0184F4  6E03               	movwf	(btemp+2)^0,c
 24686  0184F6  0E00               	movlw	0
 24687  0184F8  6E04               	movwf	(btemp+3)^0,c
 24688  0184FA  D0A2               	goto	l3053
 24689  0184FC                     l9630:
 24690  0184FC  0E96               	movlw	150
 24691  0184FE  6E0C               	movwf	(btemp+11)^0,c
 24692                           
 24693                           ;stkvar	_exp @ sp[(-5)+4]
 24694  018500  0EFF               	movlw	-1
 24695  018502  0060  F033  FFE3   	movff	btemp+11,plusw1
 24696  018508  D00B               	goto	l9634
 24697  01850A                     l9632:
 24698                           
 24699                           ;stkvar	_exp @ sp[(-5)+4]
 24700  01850A  0EFF               	movlw	-1
 24701  01850C  2AE3               	incf	plusw1,f,c
 24702                           
 24703                           ;stkvar	_arg @ sp[(-5)+0]
 24704  01850E  90D8               	bcf	status,0,c
 24705  018510  0EFE               	movlw	-2
 24706  018512  32E3               	rrcf	plusw1,f,c
 24707  018514  0EFD               	movlw	-3
 24708  018516  32E3               	rrcf	plusw1,f,c
 24709  018518  0EFC               	movlw	-4
 24710  01851A  32E3               	rrcf	plusw1,f,c
 24711  01851C  0EFB               	movlw	-5
 24712  01851E  32E3               	rrcf	plusw1,f,c
 24713  018520                     l9634:
 24714                           
 24715                           ;stkvar	_arg @ sp[(-5)+0]
 24716  018520  50E1               	movf	fsr1l,w,c
 24717  018522  0FFB               	addlw	-5
 24718  018524  6ED9               	movwf	fsr2l,c
 24719  018526  50E2               	movf	fsr1h,w,c
 24720  018528  6EDA               	movwf	fsr2h,c
 24721  01852A  0EFF               	movlw	255
 24722  01852C  22DA               	addwfc	fsr2h,f,c
 24723  01852E  52DE               	movf	postinc2,f,c
 24724  018530  52DE               	movf	postinc2,f,c
 24725  018532  52DE               	movf	postinc2,f,c
 24726  018534  0EFE               	movlw	254
 24727  018536  14DD               	andwf	postdec2,w,c
 24728  018538  B4D8               	btfsc	status,2,c
 24729  01853A  D018               	goto	l9642
 24730  01853C  D7E6               	goto	l9632
 24731  01853E                     l9636:
 24732                           
 24733                           ;stkvar	_exp @ sp[(-5)+4]
 24734  01853E  0EFF               	movlw	-1
 24735  018540  2AE3               	incf	plusw1,f,c
 24736                           
 24737                           ;stkvar	_arg @ sp[(-5)+0]
 24738  018542  50E1               	movf	fsr1l,w,c
 24739  018544  0FFB               	addlw	-5
 24740  018546  6ED9               	movwf	fsr2l,c
 24741  018548  50E2               	movf	fsr1h,w,c
 24742  01854A  6EDA               	movwf	fsr2h,c
 24743  01854C  0EFF               	movlw	255
 24744  01854E  22DA               	addwfc	fsr2h,f,c
 24745  018550  2ADE               	incf	postinc2,f,c
 24746  018552  0E00               	movlw	0
 24747  018554  22DE               	addwfc	postinc2,f,c
 24748  018556  22DE               	addwfc	postinc2,f,c
 24749  018558  22DE               	addwfc	postinc2,f,c
 24750                           
 24751                           ;stkvar	_arg @ sp[(-5)+0]
 24752  01855A  90D8               	bcf	status,0,c
 24753  01855C  0EFE               	movlw	-2
 24754  01855E  32E3               	rrcf	plusw1,f,c
 24755  018560  0EFD               	movlw	-3
 24756  018562  32E3               	rrcf	plusw1,f,c
 24757  018564  0EFC               	movlw	-4
 24758  018566  32E3               	rrcf	plusw1,f,c
 24759  018568  0EFB               	movlw	-5
 24760  01856A  32E3               	rrcf	plusw1,f,c
 24761  01856C                     l9642:
 24762                           
 24763                           ;stkvar	_arg @ sp[(-5)+0]
 24764  01856C  50E1               	movf	fsr1l,w,c
 24765  01856E  0FFB               	addlw	-5
 24766  018570  6ED9               	movwf	fsr2l,c
 24767  018572  50E2               	movf	fsr1h,w,c
 24768  018574  6EDA               	movwf	fsr2h,c
 24769  018576  0EFF               	movlw	255
 24770  018578  22DA               	addwfc	fsr2h,f,c
 24771  01857A  52DE               	movf	postinc2,f,c
 24772  01857C  52DE               	movf	postinc2,f,c
 24773  01857E  52DE               	movf	postinc2,f,c
 24774  018580  0EFF               	movlw	255
 24775  018582  14DD               	andwf	postdec2,w,c
 24776  018584  B4D8               	btfsc	status,2,c
 24777  018586  D00C               	goto	l9646
 24778  018588  D7DA               	goto	l9636
 24779  01858A                     l9644:
 24780                           
 24781                           ;stkvar	_exp @ sp[(-5)+4]
 24782  01858A  0EFF               	movlw	-1
 24783  01858C  06E3               	decf	plusw1,f,c
 24784                           
 24785                           ;stkvar	_arg @ sp[(-5)+0]
 24786  01858E  90D8               	bcf	status,0,c
 24787  018590  0EFB               	movlw	-5
 24788  018592  36E3               	rlcf	plusw1,f,c
 24789  018594  0EFC               	movlw	-4
 24790  018596  36E3               	rlcf	plusw1,f,c
 24791  018598  0EFD               	movlw	-3
 24792  01859A  36E3               	rlcf	plusw1,f,c
 24793  01859C  0EFE               	movlw	-2
 24794  01859E  36E3               	rlcf	plusw1,f,c
 24795  0185A0                     l9646:
 24796                           
 24797                           ;stkvar	_arg @ sp[(-5)+0]
 24798  0185A0  0EFD               	movlw	-3
 24799  0185A2  BEE3               	btfsc	plusw1,7,c
 24800  0185A4  D007               	goto	u9050
 24801                           
 24802                           ;stkvar	_exp @ sp[(-5)+4]
 24803  0185A6  0EFF               	movlw	-1
 24804  0185A8  006F FF8C  F001    	movff	plusw1,btemp
 24805  0185AE  0E02               	movlw	2
 24806  0185B0  6001               	cpfslt	btemp^0,c
 24807  0185B2  D7EB               	goto	l9644
 24808  0185B4                     u9050:
 24809                           
 24810                           ;stkvar	_exp @ sp[(-5)+4]
 24811  0185B4  0EFF               	movlw	-1
 24812  0185B6  B0E3               	btfsc	plusw1,0,c
 24813  0185B8  D002               	goto	l9654
 24814                           
 24815                           ;stkvar	_arg @ sp[(-5)+0]
 24816  0185BA  0EFD               	movlw	-3
 24817  0185BC  9EE3               	bcf	plusw1,7,c
 24818  0185BE                     l9654:
 24819                           
 24820                           ;stkvar	_exp @ sp[(-5)+4]
 24821  0185BE  50E1               	movf	fsr1l,w,c
 24822  0185C0  0FFF               	addlw	-1
 24823  0185C2  6ED9               	movwf	fsr2l,c
 24824  0185C4  50E2               	movf	fsr1h,w,c
 24825  0185C6  6EDA               	movwf	fsr2h,c
 24826  0185C8  0EFF               	movlw	255
 24827  0185CA  22DA               	addwfc	fsr2h,f,c
 24828  0185CC  90D8               	bcf	status,0,c
 24829  0185CE  32DF               	rrcf	indf2,f,c
 24830                           
 24831                           ;stkvar	_exp @ sp[(-5)+4]
 24832  0185D0  0EFF               	movlw	-1
 24833  0185D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24834  0185D8  0060  F030  F005   	movff	btemp+11,btemp+4
 24835  0185DE  6A06               	clrf	(btemp+5)^0,c
 24836  0185E0  6A07               	clrf	(btemp+6)^0,c
 24837  0185E2  6A08               	clrf	(btemp+7)^0,c
 24838  0185E4  0060  F014  F008   	movff	btemp+4,btemp+7
 24839  0185EA  6A07               	clrf	(btemp+6)^0,c
 24840  0185EC  6A06               	clrf	(btemp+5)^0,c
 24841  0185EE  6A05               	clrf	(btemp+4)^0,c
 24842                           
 24843                           ;stkvar	_arg @ sp[(-5)+0]
 24844  0185F0  50E1               	movf	fsr1l,w,c
 24845  0185F2  0FFB               	addlw	-5
 24846  0185F4  6ED9               	movwf	fsr2l,c
 24847  0185F6  50E2               	movf	fsr1h,w,c
 24848  0185F8  6EDA               	movwf	fsr2h,c
 24849  0185FA  0EFF               	movlw	255
 24850  0185FC  22DA               	addwfc	fsr2h,f,c
 24851  0185FE  5005               	movf	(btemp+4)^0,w,c
 24852  018600  12DE               	iorwf	postinc2,f,c
 24853  018602  5006               	movf	(btemp+5)^0,w,c
 24854  018604  12DE               	iorwf	postinc2,f,c
 24855  018606  5007               	movf	(btemp+6)^0,w,c
 24856  018608  12DE               	iorwf	postinc2,f,c
 24857  01860A  5008               	movf	(btemp+7)^0,w,c
 24858  01860C  12DE               	iorwf	postinc2,f,c
 24859                           
 24860                           ;stkvar	_sign @ sp[(-5)+-1]
 24861  01860E  0EFA               	movlw	-6
 24862  018610  50E3               	movf	plusw1,w,c
 24863  018612  B4D8               	btfsc	status,2,c
 24864  018614  D005               	goto	l9664
 24865                           
 24866                           ;stkvar	_val @ sp[(-5)+-5]
 24867  018616  0EF9               	movlw	-7
 24868  018618  AEE3               	btfss	plusw1,7,c
 24869  01861A  D002               	goto	l9664
 24870                           
 24871                           ;stkvar	_arg @ sp[(-5)+0]
 24872  01861C  0EFE               	movlw	-2
 24873  01861E  8EE3               	bsf	plusw1,7,c
 24874  018620                     l9664:
 24875                           
 24876                           ;stkvar	_arg @ sp[(-5)+0]
 24877  018620  0EFB               	movlw	-5
 24878  018622  006F FF8C  F001    	movff	plusw1,btemp
 24879  018628  0EFC               	movlw	-4
 24880  01862A  006F FF8C  F002    	movff	plusw1,btemp+1
 24881  018630  0EFD               	movlw	-3
 24882  018632  006F FF8C  F003    	movff	plusw1,btemp+2
 24883  018638  0EFE               	movlw	-2
 24884  01863A  006F FF8C  F004    	movff	plusw1,btemp+3
 24885  018640                     l3053:
 24886                           
 24887                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24888  018640  0EF6               	movlw	246
 24889  018642  26E1               	addwf	fsr1l,f,c
 24890  018644  0EFF               	movlw	255
 24891  018646  22E2               	addwfc	fsr1h,f,c
 24892  018648  0012               	return		;funcret
 24893  01864A                     __end_of___xxtofl:
 24894                           	opt callstack 0
 24895                           
 24896 ;; *************** function ___fldiv *****************
 24897 ;; Defined at:
 24898 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;  b               4  [STACK] unsigned char 
 24901 ;;  a               4  [STACK] unsigned char 
 24902 ;; Auto vars:     Size  Location     Type
 24903 ;;  grs             4  [STACK] unsigned long 
 24904 ;;  rem             4  [STACK] unsigned long 
 24905 ;;  new_exp         2  [STACK] short 
 24906 ;;  aexp            1  [STACK] unsigned char 
 24907 ;;  bexp            1  [STACK] unsigned char 
 24908 ;;  sign            1  [STACK] unsigned char 
 24909 ;; Return value:  Size  Location     Type
 24910 ;;                  4  [STACK] unsigned char 
 24911 ;; Registers used:
 24912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24913 ;; Tracked objects:
 24914 ;;		On entry : 0/1
 24915 ;;		On exit  : 0/0
 24916 ;;		Unchanged: 0/0
 24917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;Total ram usage:        0 bytes
 24923 ;; Hardware stack levels used:    1
 24924 ;; Hardware stack levels required when called:   15
 24925 ;; This function calls:
 24926 ;;		Nothing
 24927 ;; This function is called by:
 24928 ;;		_conv_raw_result
 24929 ;;		_calc_bsoc
 24930 ;;		_init_bsoc
 24931 ;;		_esr_check
 24932 ;;		_efgtoa
 24933 ;; This function uses a reentrant model
 24934 ;;
 24935                           
 24936                           	psect	text100
 24937  014D34                     __ptext100:
 24938                           	opt callstack 0
 24939  014D34                     ___fldiv:
 24940                           	opt callstack 0
 24941                           
 24942                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24943  014D34  0E0D               	movlw	13
 24944  014D36  26E1               	addwf	fsr1l,f,c
 24945  014D38  0E00               	movlw	0
 24946  014D3A  22E2               	addwfc	fsr1h,f,c
 24947                           
 24948                           ;stkvar	_b @ sp[(-13)+-4]
 24949                           
 24950                           ;incstack = 0
 24951 ;; hardware stack exceeded
 24952  014D3C  0EF2               	movlw	242
 24953  014D3E  24E1               	addwf	fsr1l,w,c
 24954  014D40  6ED9               	movwf	fsr2l,c
 24955  014D42  0EFF               	movlw	255
 24956  014D44  20E2               	addwfc	fsr1h,w,c
 24957  014D46  6EDA               	movwf	fsr2h,c
 24958  014D48  50DF               	movf	indf2,w,c
 24959  014D4A  6E0C               	movwf	(btemp+11)^0,c
 24960  014D4C  0E80               	movlw	128
 24961  014D4E  160C               	andwf	(btemp+11)^0,f,c
 24962                           
 24963                           ;stkvar	_sign @ sp[(-13)+12]
 24964  014D50  0EFF               	movlw	-1
 24965  014D52  0060  F033  FFE3   	movff	btemp+11,plusw1
 24966                           
 24967                           ;stkvar	_b @ sp[(-13)+-4]
 24968  014D58  0EF2               	movlw	242
 24969  014D5A  24E1               	addwf	fsr1l,w,c
 24970  014D5C  6ED9               	movwf	fsr2l,c
 24971  014D5E  0EFF               	movlw	255
 24972  014D60  20E2               	addwfc	fsr1h,w,c
 24973  014D62  6EDA               	movwf	fsr2h,c
 24974  014D64  50DF               	movf	indf2,w,c
 24975  014D66  6E0C               	movwf	(btemp+11)^0,c
 24976  014D68  90D8               	bcf	status,0,c
 24977  014D6A  340C               	rlcf	(btemp+11)^0,w,c
 24978  014D6C  6E0B               	movwf	(btemp+10)^0,c
 24979                           
 24980                           ;stkvar	_bexp @ sp[(-13)+11]
 24981  014D6E  0EFE               	movlw	-2
 24982  014D70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24983                           
 24984                           ;stkvar	_b @ sp[(-13)+-4]
 24985  014D76  0EF1               	movlw	241
 24986  014D78  24E1               	addwf	fsr1l,w,c
 24987  014D7A  6ED9               	movwf	fsr2l,c
 24988  014D7C  0EFF               	movlw	255
 24989  014D7E  20E2               	addwfc	fsr1h,w,c
 24990  014D80  6EDA               	movwf	fsr2h,c
 24991  014D82  AEDF               	btfss	indf2,7,c
 24992  014D84  D002               	goto	l8194
 24993                           
 24994                           ;stkvar	_bexp @ sp[(-13)+11]
 24995  014D86  0EFE               	movlw	-2
 24996  014D88  80E3               	bsf	plusw1,0,c
 24997  014D8A                     l8194:
 24998                           
 24999                           ;stkvar	_bexp @ sp[(-13)+11]
 25000  014D8A  0EFE               	movlw	-2
 25001  014D8C  50E3               	movf	plusw1,w,c
 25002  014D8E  B4D8               	btfsc	status,2,c
 25003  014D90  D027               	goto	l8204
 25004                           
 25005                           ;stkvar	_bexp @ sp[(-13)+11]
 25006  014D92  0EFE               	movlw	-2
 25007  014D94  28E3               	incf	plusw1,w,c
 25008  014D96  A4D8               	btfss	status,2,c
 25009  014D98  D018               	goto	l8200
 25010  014D9A  0E00               	movlw	0
 25011  014D9C  6E09               	movwf	(btemp+8)^0,c
 25012  014D9E  0E00               	movlw	0
 25013  014DA0  6E0A               	movwf	(btemp+9)^0,c
 25014  014DA2  0E00               	movlw	0
 25015  014DA4  6E0B               	movwf	(btemp+10)^0,c
 25016  014DA6  0E00               	movlw	0
 25017  014DA8  6E0C               	movwf	(btemp+11)^0,c
 25018                           
 25019                           ;stkvar	_b @ sp[(-13)+-4]
 25020  014DAA  0EEF               	movlw	-17
 25021  014DAC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25022  014DB2  0EF0               	movlw	-16
 25023  014DB4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25024  014DBA  0EF1               	movlw	-15
 25025  014DBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25026  014DC2  0EF2               	movlw	-14
 25027  014DC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25028  014DCA                     l8200:
 25029                           
 25030                           ;stkvar	_b @ sp[(-13)+-4]
 25031  014DCA  0EF1               	movlw	-15
 25032  014DCC  8EE3               	bsf	plusw1,7,c
 25033                           
 25034                           ;stkvar	_b @ sp[(-13)+-4]
 25035  014DCE  0EF2               	movlw	242
 25036  014DD0  24E1               	addwf	fsr1l,w,c
 25037  014DD2  6ED9               	movwf	fsr2l,c
 25038  014DD4  0EFF               	movlw	255
 25039  014DD6  20E2               	addwfc	fsr1h,w,c
 25040  014DD8  6EDA               	movwf	fsr2h,c
 25041  014DDA  0E00               	movlw	0
 25042  014DDC  6EDF               	movwf	indf2,c
 25043  014DDE  D018               	goto	l8206
 25044  014DE0                     l8204:
 25045  014DE0  0E00               	movlw	0
 25046  014DE2  6E09               	movwf	(btemp+8)^0,c
 25047  014DE4  0E00               	movlw	0
 25048  014DE6  6E0A               	movwf	(btemp+9)^0,c
 25049  014DE8  0E00               	movlw	0
 25050  014DEA  6E0B               	movwf	(btemp+10)^0,c
 25051  014DEC  0E00               	movlw	0
 25052  014DEE  6E0C               	movwf	(btemp+11)^0,c
 25053                           
 25054                           ;stkvar	_b @ sp[(-13)+-4]
 25055  014DF0  0EEF               	movlw	-17
 25056  014DF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25057  014DF8  0EF0               	movlw	-16
 25058  014DFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25059  014E00  0EF1               	movlw	-15
 25060  014E02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25061  014E08  0EF2               	movlw	-14
 25062  014E0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25063  014E10                     l8206:
 25064                           
 25065                           ;stkvar	_a @ sp[(-13)+-8]
 25066  014E10  0EEE               	movlw	238
 25067  014E12  24E1               	addwf	fsr1l,w,c
 25068  014E14  6ED9               	movwf	fsr2l,c
 25069  014E16  0EFF               	movlw	255
 25070  014E18  20E2               	addwfc	fsr1h,w,c
 25071  014E1A  6EDA               	movwf	fsr2h,c
 25072  014E1C  50DF               	movf	indf2,w,c
 25073  014E1E  6E0C               	movwf	(btemp+11)^0,c
 25074  014E20  0E80               	movlw	128
 25075  014E22  160C               	andwf	(btemp+11)^0,f,c
 25076                           
 25077                           ;stkvar	_sign @ sp[(-13)+12]
 25078  014E24  50E1               	movf	fsr1l,w,c
 25079  014E26  0FFF               	addlw	-1
 25080  014E28  6ED9               	movwf	fsr2l,c
 25081  014E2A  50E2               	movf	fsr1h,w,c
 25082  014E2C  6EDA               	movwf	fsr2h,c
 25083  014E2E  0EFF               	movlw	255
 25084  014E30  22DA               	addwfc	fsr2h,f,c
 25085  014E32  500C               	movf	(btemp+11)^0,w,c
 25086  014E34  1ADF               	xorwf	indf2,f,c
 25087                           
 25088                           ;stkvar	_a @ sp[(-13)+-8]
 25089  014E36  0EEE               	movlw	238
 25090  014E38  24E1               	addwf	fsr1l,w,c
 25091  014E3A  6ED9               	movwf	fsr2l,c
 25092  014E3C  0EFF               	movlw	255
 25093  014E3E  20E2               	addwfc	fsr1h,w,c
 25094  014E40  6EDA               	movwf	fsr2h,c
 25095  014E42  50DF               	movf	indf2,w,c
 25096  014E44  6E0C               	movwf	(btemp+11)^0,c
 25097  014E46  90D8               	bcf	status,0,c
 25098  014E48  340C               	rlcf	(btemp+11)^0,w,c
 25099  014E4A  6E0B               	movwf	(btemp+10)^0,c
 25100                           
 25101                           ;stkvar	_aexp @ sp[(-13)+10]
 25102  014E4C  0EFD               	movlw	-3
 25103  014E4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25104                           
 25105                           ;stkvar	_a @ sp[(-13)+-8]
 25106  014E54  0EED               	movlw	237
 25107  014E56  24E1               	addwf	fsr1l,w,c
 25108  014E58  6ED9               	movwf	fsr2l,c
 25109  014E5A  0EFF               	movlw	255
 25110  014E5C  20E2               	addwfc	fsr1h,w,c
 25111  014E5E  6EDA               	movwf	fsr2h,c
 25112  014E60  AEDF               	btfss	indf2,7,c
 25113  014E62  D002               	goto	l8214
 25114                           
 25115                           ;stkvar	_aexp @ sp[(-13)+10]
 25116  014E64  0EFD               	movlw	-3
 25117  014E66  80E3               	bsf	plusw1,0,c
 25118  014E68                     l8214:
 25119                           
 25120                           ;stkvar	_aexp @ sp[(-13)+10]
 25121  014E68  0EFD               	movlw	-3
 25122  014E6A  50E3               	movf	plusw1,w,c
 25123  014E6C  B4D8               	btfsc	status,2,c
 25124  014E6E  D027               	goto	l8224
 25125                           
 25126                           ;stkvar	_aexp @ sp[(-13)+10]
 25127  014E70  0EFD               	movlw	-3
 25128  014E72  28E3               	incf	plusw1,w,c
 25129  014E74  A4D8               	btfss	status,2,c
 25130  014E76  D018               	goto	l8220
 25131  014E78  0E00               	movlw	0
 25132  014E7A  6E09               	movwf	(btemp+8)^0,c
 25133  014E7C  0E00               	movlw	0
 25134  014E7E  6E0A               	movwf	(btemp+9)^0,c
 25135  014E80  0E00               	movlw	0
 25136  014E82  6E0B               	movwf	(btemp+10)^0,c
 25137  014E84  0E00               	movlw	0
 25138  014E86  6E0C               	movwf	(btemp+11)^0,c
 25139                           
 25140                           ;stkvar	_a @ sp[(-13)+-8]
 25141  014E88  0EEB               	movlw	-21
 25142  014E8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25143  014E90  0EEC               	movlw	-20
 25144  014E92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25145  014E98  0EED               	movlw	-19
 25146  014E9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25147  014EA0  0EEE               	movlw	-18
 25148  014EA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25149  014EA8                     l8220:
 25150                           
 25151                           ;stkvar	_a @ sp[(-13)+-8]
 25152  014EA8  0EED               	movlw	-19
 25153  014EAA  8EE3               	bsf	plusw1,7,c
 25154                           
 25155                           ;stkvar	_a @ sp[(-13)+-8]
 25156  014EAC  0EEE               	movlw	238
 25157  014EAE  24E1               	addwf	fsr1l,w,c
 25158  014EB0  6ED9               	movwf	fsr2l,c
 25159  014EB2  0EFF               	movlw	255
 25160  014EB4  20E2               	addwfc	fsr1h,w,c
 25161  014EB6  6EDA               	movwf	fsr2h,c
 25162  014EB8  0E00               	movlw	0
 25163  014EBA  6EDF               	movwf	indf2,c
 25164  014EBC  D018               	goto	l8226
 25165  014EBE                     l8224:
 25166  014EBE  0E00               	movlw	0
 25167  014EC0  6E09               	movwf	(btemp+8)^0,c
 25168  014EC2  0E00               	movlw	0
 25169  014EC4  6E0A               	movwf	(btemp+9)^0,c
 25170  014EC6  0E00               	movlw	0
 25171  014EC8  6E0B               	movwf	(btemp+10)^0,c
 25172  014ECA  0E00               	movlw	0
 25173  014ECC  6E0C               	movwf	(btemp+11)^0,c
 25174                           
 25175                           ;stkvar	_a @ sp[(-13)+-8]
 25176  014ECE  0EEB               	movlw	-21
 25177  014ED0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25178  014ED6  0EEC               	movlw	-20
 25179  014ED8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25180  014EDE  0EED               	movlw	-19
 25181  014EE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25182  014EE6  0EEE               	movlw	-18
 25183  014EE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25184  014EEE                     l8226:
 25185                           
 25186                           ;stkvar	_a @ sp[(-13)+-8]
 25187  014EEE  0EEB               	movlw	-21
 25188  014EF0  50E3               	movf	plusw1,w,c
 25189  014EF2  E139               	bnz	l8238
 25190  014EF4  0EEC               	movlw	-20
 25191  014EF6  50E3               	movf	plusw1,w,c
 25192  014EF8  E136               	bnz	l8238
 25193  014EFA  0EED               	movlw	-19
 25194  014EFC  50E3               	movf	plusw1,w,c
 25195  014EFE  E133               	bnz	l8238
 25196  014F00  0EEE               	movlw	-18
 25197  014F02  50E3               	movf	plusw1,w,c
 25198  014F04  A4D8               	btfss	status,2,c
 25199  014F06  D02F               	goto	l8238
 25200                           
 25201                           ;stkvar	_b @ sp[(-13)+-4]
 25202  014F08  0EEF               	movlw	-17
 25203  014F0A  6AE3               	clrf	plusw1,c
 25204  014F0C  0EF0               	movlw	-16
 25205  014F0E  6AE3               	clrf	plusw1,c
 25206  014F10  0EF1               	movlw	-15
 25207  014F12  6AE3               	clrf	plusw1,c
 25208  014F14  0EF2               	movlw	-14
 25209  014F16  6AE3               	clrf	plusw1,c
 25210                           
 25211                           ;stkvar	_b @ sp[(-13)+-4]
 25212  014F18  0EF1               	movlw	241
 25213  014F1A  24E1               	addwf	fsr1l,w,c
 25214  014F1C  6ED9               	movwf	fsr2l,c
 25215  014F1E  0EFF               	movlw	255
 25216  014F20  20E2               	addwfc	fsr1h,w,c
 25217  014F22  6EDA               	movwf	fsr2h,c
 25218  014F24  0E80               	movlw	128
 25219  014F26  12DE               	iorwf	postinc2,f,c
 25220  014F28  0E7F               	movlw	127
 25221  014F2A  12DD               	iorwf	postdec2,f,c
 25222  014F2C                     l8232:
 25223                           
 25224                           ;stkvar	_sign @ sp[(-13)+12]
 25225  014F2C  0EFF               	movlw	-1
 25226  014F2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25227                           
 25228                           ;stkvar	_b @ sp[(-13)+-4]
 25229  014F34  0EF2               	movlw	242
 25230  014F36  24E1               	addwf	fsr1l,w,c
 25231  014F38  6ED9               	movwf	fsr2l,c
 25232  014F3A  0EFF               	movlw	255
 25233  014F3C  20E2               	addwfc	fsr1h,w,c
 25234  014F3E  6EDA               	movwf	fsr2h,c
 25235  014F40  500C               	movf	(btemp+11)^0,w,c
 25236  014F42  12DF               	iorwf	indf2,f,c
 25237                           
 25238                           ;stkvar	_b @ sp[(-13)+-4]
 25239  014F44  0EEF               	movlw	-17
 25240  014F46  006F FF8C  F001    	movff	plusw1,btemp
 25241  014F4C  0EF0               	movlw	-16
 25242  014F4E  006F FF8C  F002    	movff	plusw1,btemp+1
 25243  014F54  0EF1               	movlw	-15
 25244  014F56  006F FF8C  F003    	movff	plusw1,btemp+2
 25245  014F5C  0EF2               	movlw	-14
 25246  014F5E  006F FF8C  F004    	movff	plusw1,btemp+3
 25247  014F64  D19F               	goto	l2977
 25248  014F66                     l8238:
 25249                           
 25250                           ;stkvar	_bexp @ sp[(-13)+11]
 25251  014F66  0EFE               	movlw	-2
 25252  014F68  50E3               	movf	plusw1,w,c
 25253  014F6A  A4D8               	btfss	status,2,c
 25254  014F6C  D009               	goto	l8246
 25255  014F6E  0E00               	movlw	0
 25256  014F70  6E01               	movwf	btemp^0,c
 25257  014F72  0E00               	movlw	0
 25258  014F74  6E02               	movwf	(btemp+1)^0,c
 25259  014F76  0E00               	movlw	0
 25260  014F78  6E03               	movwf	(btemp+2)^0,c
 25261  014F7A  0E00               	movlw	0
 25262  014F7C  6E04               	movwf	(btemp+3)^0,c
 25263  014F7E  D192               	goto	l2977
 25264  014F80                     l8246:
 25265                           
 25266                           ;stkvar	_bexp @ sp[(-13)+11]
 25267  014F80  0EFE               	movlw	-2
 25268  014F82  50E3               	movf	plusw1,w,c
 25269  014F84  6E0B               	movwf	(btemp+10)^0,c
 25270  014F86  6A0C               	clrf	(btemp+11)^0,c
 25271                           
 25272                           ;stkvar	_aexp @ sp[(-13)+10]
 25273  014F88  0EFD               	movlw	-3
 25274  014F8A  50E3               	movf	plusw1,w,c
 25275  014F8C  5E0B               	subwf	(btemp+10)^0,f,c
 25276  014F8E  0E00               	movlw	0
 25277  014F90  5A0C               	subwfb	(btemp+11)^0,f,c
 25278  014F92  0E7F               	movlw	127
 25279  014F94  260B               	addwf	(btemp+10)^0,f,c
 25280  014F96  0E00               	movlw	0
 25281  014F98  220C               	addwfc	(btemp+11)^0,f,c
 25282                           
 25283                           ;stkvar	_new_exp @ sp[(-13)+8]
 25284  014F9A  0EFB               	movlw	-5
 25285  014F9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25286  014FA2  0EFC               	movlw	-4
 25287  014FA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25288                           
 25289                           ;stkvar	_b @ sp[(-13)+-4]
 25290  014FAA  0EEF               	movlw	-17
 25291  014FAC  006F FF8C  F009    	movff	plusw1,btemp+8
 25292  014FB2  0EF0               	movlw	-16
 25293  014FB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 25294  014FBA  0EF1               	movlw	-15
 25295  014FBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 25296  014FC2  0EF2               	movlw	-14
 25297  014FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25298                           
 25299                           ;stkvar	_rem @ sp[(-13)+4]
 25300  014FCA  0EF7               	movlw	-9
 25301  014FCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25302  014FD2  0EF8               	movlw	-8
 25303  014FD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25304  014FDA  0EF9               	movlw	-7
 25305  014FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25306  014FE2  0EFA               	movlw	-6
 25307  014FE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25308                           
 25309                           ;stkvar	_b @ sp[(-13)+-4]
 25310  014FEA  0EEF               	movlw	-17
 25311  014FEC  6AE3               	clrf	plusw1,c
 25312  014FEE  0EF0               	movlw	-16
 25313  014FF0  6AE3               	clrf	plusw1,c
 25314  014FF2  0EF1               	movlw	-15
 25315  014FF4  6AE3               	clrf	plusw1,c
 25316  014FF6  0EF2               	movlw	-14
 25317  014FF8  6AE3               	clrf	plusw1,c
 25318                           
 25319                           ;stkvar	_grs @ sp[(-13)+0]
 25320  014FFA  0EF3               	movlw	-13
 25321  014FFC  6AE3               	clrf	plusw1,c
 25322  014FFE  0EF4               	movlw	-12
 25323  015000  6AE3               	clrf	plusw1,c
 25324  015002  0EF5               	movlw	-11
 25325  015004  6AE3               	clrf	plusw1,c
 25326  015006  0EF6               	movlw	-10
 25327  015008  6AE3               	clrf	plusw1,c
 25328                           
 25329                           ;stkvar	_aexp @ sp[(-13)+10]
 25330  01500A  0EFD               	movlw	-3
 25331  01500C  6AE3               	clrf	plusw1,c
 25332  01500E  D050               	goto	l8274
 25333  015010                     l8256:
 25334                           
 25335                           ;stkvar	_aexp @ sp[(-13)+10]
 25336  015010  0EFD               	movlw	-3
 25337  015012  50E3               	movf	plusw1,w,c
 25338  015014  B4D8               	btfsc	status,2,c
 25339  015016  D020               	goto	l8266
 25340                           
 25341                           ;stkvar	_rem @ sp[(-13)+4]
 25342  015018  90D8               	bcf	status,0,c
 25343  01501A  0EF7               	movlw	-9
 25344  01501C  36E3               	rlcf	plusw1,f,c
 25345  01501E  0EF8               	movlw	-8
 25346  015020  36E3               	rlcf	plusw1,f,c
 25347  015022  0EF9               	movlw	-7
 25348  015024  36E3               	rlcf	plusw1,f,c
 25349  015026  0EFA               	movlw	-6
 25350  015028  36E3               	rlcf	plusw1,f,c
 25351                           
 25352                           ;stkvar	_b @ sp[(-13)+-4]
 25353  01502A  90D8               	bcf	status,0,c
 25354  01502C  0EEF               	movlw	-17
 25355  01502E  36E3               	rlcf	plusw1,f,c
 25356  015030  0EF0               	movlw	-16
 25357  015032  36E3               	rlcf	plusw1,f,c
 25358  015034  0EF1               	movlw	-15
 25359  015036  36E3               	rlcf	plusw1,f,c
 25360  015038  0EF2               	movlw	-14
 25361  01503A  36E3               	rlcf	plusw1,f,c
 25362                           
 25363                           ;stkvar	_grs @ sp[(-13)+0]
 25364  01503C  0EF6               	movlw	-10
 25365  01503E  AEE3               	btfss	plusw1,7,c
 25366  015040  D002               	goto	l8264
 25367                           
 25368                           ;stkvar	_b @ sp[(-13)+-4]
 25369  015042  0EEF               	movlw	-17
 25370  015044  80E3               	bsf	plusw1,0,c
 25371  015046                     l8264:
 25372                           
 25373                           ;stkvar	_grs @ sp[(-13)+0]
 25374  015046  90D8               	bcf	status,0,c
 25375  015048  0EF3               	movlw	-13
 25376  01504A  36E3               	rlcf	plusw1,f,c
 25377  01504C  0EF4               	movlw	-12
 25378  01504E  36E3               	rlcf	plusw1,f,c
 25379  015050  0EF5               	movlw	-11
 25380  015052  36E3               	rlcf	plusw1,f,c
 25381  015054  0EF6               	movlw	-10
 25382  015056  36E3               	rlcf	plusw1,f,c
 25383  015058                     l8266:
 25384                           
 25385                           ;stkvar	_a @ sp[(-13)+-8]
 25386                           ;stkvar	_rem @ sp[(-13)+4]
 25387  015058  50E1               	movf	fsr1l,w,c
 25388  01505A  0FF7               	addlw	-9
 25389  01505C  6ED9               	movwf	fsr2l,c
 25390  01505E  50E2               	movf	fsr1h,w,c
 25391  015060  6EDA               	movwf	fsr2h,c
 25392  015062  0EFF               	movlw	255
 25393  015064  22DA               	addwfc	fsr2h,f,c
 25394  015066  0EEB               	movlw	-21
 25395  015068  50E3               	movf	plusw1,w,c
 25396  01506A  5CDE               	subwf	postinc2,w,c
 25397  01506C  0EEC               	movlw	-20
 25398  01506E  50E3               	movf	plusw1,w,c
 25399  015070  58DE               	subwfb	postinc2,w,c
 25400  015072  0EED               	movlw	-19
 25401  015074  50E3               	movf	plusw1,w,c
 25402  015076  58DE               	subwfb	postinc2,w,c
 25403  015078  0EEE               	movlw	-18
 25404  01507A  50E3               	movf	plusw1,w,c
 25405  01507C  58DE               	subwfb	postinc2,w,c
 25406  01507E  A0D8               	btfss	status,0,c
 25407  015080  D015               	goto	l8272
 25408                           
 25409                           ;stkvar	_grs @ sp[(-13)+0]
 25410  015082  0EF6               	movlw	-10
 25411  015084  8CE3               	bsf	plusw1,6,c
 25412                           
 25413                           ;stkvar	_a @ sp[(-13)+-8]
 25414                           ;stkvar	_rem @ sp[(-13)+4]
 25415  015086  50E1               	movf	fsr1l,w,c
 25416  015088  0FF7               	addlw	-9
 25417  01508A  6ED9               	movwf	fsr2l,c
 25418  01508C  50E2               	movf	fsr1h,w,c
 25419  01508E  6EDA               	movwf	fsr2h,c
 25420  015090  0EFF               	movlw	255
 25421  015092  22DA               	addwfc	fsr2h,f,c
 25422  015094  0EEB               	movlw	-21
 25423  015096  50E3               	movf	plusw1,w,c
 25424  015098  5EDE               	subwf	postinc2,f,c
 25425  01509A  0EEC               	movlw	-20
 25426  01509C  50E3               	movf	plusw1,w,c
 25427  01509E  5ADE               	subwfb	postinc2,f,c
 25428  0150A0  0EED               	movlw	-19
 25429  0150A2  50E3               	movf	plusw1,w,c
 25430  0150A4  5ADE               	subwfb	postinc2,f,c
 25431  0150A6  0EEE               	movlw	-18
 25432  0150A8  50E3               	movf	plusw1,w,c
 25433  0150AA  5ADE               	subwfb	postinc2,f,c
 25434  0150AC                     l8272:
 25435                           
 25436                           ;stkvar	_aexp @ sp[(-13)+10]
 25437  0150AC  0EFD               	movlw	-3
 25438  0150AE  2AE3               	incf	plusw1,f,c
 25439  0150B0                     l8274:
 25440                           
 25441                           ;stkvar	_aexp @ sp[(-13)+10]
 25442  0150B0  0EFD               	movlw	-3
 25443  0150B2  006F FF8C  F001    	movff	plusw1,btemp
 25444  0150B8  0E19               	movlw	25
 25445  0150BA  6401               	cpfsgt	btemp^0,c
 25446  0150BC  D7A9               	goto	l8256
 25447                           
 25448                           ;stkvar	_rem @ sp[(-13)+4]
 25449  0150BE  0EF7               	movlw	-9
 25450  0150C0  50E3               	movf	plusw1,w,c
 25451  0150C2  E10A               	bnz	u6650
 25452  0150C4  0EF8               	movlw	-8
 25453  0150C6  50E3               	movf	plusw1,w,c
 25454  0150C8  E107               	bnz	u6650
 25455  0150CA  0EF9               	movlw	-7
 25456  0150CC  50E3               	movf	plusw1,w,c
 25457  0150CE  E104               	bnz	u6650
 25458  0150D0  0EFA               	movlw	-6
 25459  0150D2  50E3               	movf	plusw1,w,c
 25460  0150D4  B4D8               	btfsc	status,2,c
 25461  0150D6  D024               	goto	l8290
 25462  0150D8                     u6650:
 25463                           
 25464                           ;stkvar	_grs @ sp[(-13)+0]
 25465  0150D8  0EF3               	movlw	-13
 25466  0150DA  80E3               	bsf	plusw1,0,c
 25467  0150DC  D021               	goto	l8290
 25468  0150DE                     l8280:
 25469                           
 25470                           ;stkvar	_b @ sp[(-13)+-4]
 25471  0150DE  90D8               	bcf	status,0,c
 25472  0150E0  0EEF               	movlw	-17
 25473  0150E2  36E3               	rlcf	plusw1,f,c
 25474  0150E4  0EF0               	movlw	-16
 25475  0150E6  36E3               	rlcf	plusw1,f,c
 25476  0150E8  0EF1               	movlw	-15
 25477  0150EA  36E3               	rlcf	plusw1,f,c
 25478  0150EC  0EF2               	movlw	-14
 25479  0150EE  36E3               	rlcf	plusw1,f,c
 25480                           
 25481                           ;stkvar	_grs @ sp[(-13)+0]
 25482  0150F0  0EF6               	movlw	-10
 25483  0150F2  AEE3               	btfss	plusw1,7,c
 25484  0150F4  D002               	goto	l8286
 25485                           
 25486                           ;stkvar	_b @ sp[(-13)+-4]
 25487  0150F6  0EEF               	movlw	-17
 25488  0150F8  80E3               	bsf	plusw1,0,c
 25489  0150FA                     l8286:
 25490                           
 25491                           ;stkvar	_grs @ sp[(-13)+0]
 25492  0150FA  90D8               	bcf	status,0,c
 25493  0150FC  0EF3               	movlw	-13
 25494  0150FE  36E3               	rlcf	plusw1,f,c
 25495  015100  0EF4               	movlw	-12
 25496  015102  36E3               	rlcf	plusw1,f,c
 25497  015104  0EF5               	movlw	-11
 25498  015106  36E3               	rlcf	plusw1,f,c
 25499  015108  0EF6               	movlw	-10
 25500  01510A  36E3               	rlcf	plusw1,f,c
 25501                           
 25502                           ;stkvar	_new_exp @ sp[(-13)+8]
 25503  01510C  50E1               	movf	fsr1l,w,c
 25504  01510E  0FFB               	addlw	-5
 25505  015110  6ED9               	movwf	fsr2l,c
 25506  015112  50E2               	movf	fsr1h,w,c
 25507  015114  6EDA               	movwf	fsr2h,c
 25508  015116  0EFF               	movlw	255
 25509  015118  22DA               	addwfc	fsr2h,f,c
 25510  01511A  06DE               	decf	postinc2,f,c
 25511  01511C  0E00               	movlw	0
 25512  01511E  5ADD               	subwfb	postdec2,f,c
 25513  015120                     l8290:
 25514                           
 25515                           ;stkvar	_b @ sp[(-13)+-4]
 25516  015120  0EF1               	movlw	-15
 25517  015122  AEE3               	btfss	plusw1,7,c
 25518  015124  D7DC               	goto	l8280
 25519                           
 25520                           ;stkvar	_aexp @ sp[(-13)+10]
 25521  015126  0EFD               	movlw	-3
 25522  015128  6AE3               	clrf	plusw1,c
 25523                           
 25524                           ;stkvar	_grs @ sp[(-13)+0]
 25525  01512A  0EF6               	movlw	-10
 25526  01512C  AEE3               	btfss	plusw1,7,c
 25527  01512E  D020               	goto	l8304
 25528                           
 25529                           ;stkvar	_grs @ sp[(-13)+0]
 25530  015130  50E1               	movf	fsr1l,w,c
 25531  015132  0FF3               	addlw	-13
 25532  015134  6ED9               	movwf	fsr2l,c
 25533  015136  50E2               	movf	fsr1h,w,c
 25534  015138  6EDA               	movwf	fsr2h,c
 25535  01513A  0EFF               	movlw	255
 25536  01513C  22DA               	addwfc	fsr2h,f,c
 25537  01513E  0EFF               	movlw	255
 25538  015140  14DE               	andwf	postinc2,w,c
 25539  015142  6E09               	movwf	(btemp+8)^0,c
 25540  015144  0EFF               	movlw	255
 25541  015146  14DE               	andwf	postinc2,w,c
 25542  015148  6E0A               	movwf	(btemp+9)^0,c
 25543  01514A  0EFF               	movlw	255
 25544  01514C  14DE               	andwf	postinc2,w,c
 25545  01514E  6E0B               	movwf	(btemp+10)^0,c
 25546  015150  0E7F               	movlw	127
 25547  015152  14DE               	andwf	postinc2,w,c
 25548  015154  6E0C               	movwf	(btemp+11)^0,c
 25549  015156  5009               	movf	(btemp+8)^0,w,c
 25550  015158  100A               	iorwf	(btemp+9)^0,w,c
 25551  01515A  100B               	iorwf	(btemp+10)^0,w,c
 25552  01515C  100C               	iorwf	(btemp+11)^0,w,c
 25553  01515E  B4D8               	btfsc	status,2,c
 25554  015160  D004               	goto	l8300
 25555  015162                     u6690:
 25556                           
 25557                           ;stkvar	_aexp @ sp[(-13)+10]
 25558  015162  0EFD               	movlw	-3
 25559  015164  6AE3               	clrf	plusw1,c
 25560  015166  2AE3               	incf	plusw1,f,c
 25561  015168  D003               	goto	l8304
 25562  01516A                     l8300:
 25563                           
 25564                           ;stkvar	_b @ sp[(-13)+-4]
 25565  01516A  0EEF               	movlw	-17
 25566  01516C  B0E3               	btfsc	plusw1,0,c
 25567  01516E  D7F9               	goto	u6690
 25568  015170                     l8304:
 25569                           
 25570                           ;stkvar	_aexp @ sp[(-13)+10]
 25571  015170  0EFD               	movlw	-3
 25572  015172  50E3               	movf	plusw1,w,c
 25573  015174  B4D8               	btfsc	status,2,c
 25574  015176  D036               	goto	l8314
 25575                           
 25576                           ;stkvar	_b @ sp[(-13)+-4]
 25577  015178  50E1               	movf	fsr1l,w,c
 25578  01517A  0FEF               	addlw	-17
 25579  01517C  6ED9               	movwf	fsr2l,c
 25580  01517E  50E2               	movf	fsr1h,w,c
 25581  015180  6EDA               	movwf	fsr2h,c
 25582  015182  0EFF               	movlw	255
 25583  015184  22DA               	addwfc	fsr2h,f,c
 25584  015186  2ADE               	incf	postinc2,f,c
 25585  015188  0E00               	movlw	0
 25586  01518A  22DE               	addwfc	postinc2,f,c
 25587  01518C  22DE               	addwfc	postinc2,f,c
 25588  01518E  22DE               	addwfc	postinc2,f,c
 25589                           
 25590                           ;stkvar	_b @ sp[(-13)+-4]
 25591  015190  0EF2               	movlw	-14
 25592  015192  A0E3               	btfss	plusw1,0,c
 25593  015194  D027               	goto	l8314
 25594  015196  0E01               	movlw	1
 25595  015198  6E0C               	movwf	(btemp+11)^0,c
 25596                           
 25597                           ;stkvar	_b @ sp[(-13)+-4]
 25598  01519A  50E1               	movf	fsr1l,w,c
 25599  01519C  0FEF               	addlw	-17
 25600  01519E  6ED9               	movwf	fsr2l,c
 25601  0151A0  50E2               	movf	fsr1h,w,c
 25602  0151A2  6EDA               	movwf	fsr2h,c
 25603  0151A4  0EFF               	movlw	255
 25604  0151A6  22DA               	addwfc	fsr2h,f,c
 25605  0151A8  280C               	incf	(btemp+11)^0,w,c
 25606  0151AA  52DE               	movf	postinc2,f,c
 25607  0151AC  D008               	goto	u6730
 25608  0151AE                     u6735:
 25609  0151AE  52DE               	movf	postinc2,f,c
 25610  0151B0  90D8               	bcf	status,0,c
 25611  0151B2  BEDC               	btfsc	preinc2,7,c
 25612  0151B4  80D8               	bsf	status,0,c
 25613  0151B6  32DD               	rrcf	postdec2,f,c
 25614  0151B8  32DD               	rrcf	postdec2,f,c
 25615  0151BA  32DD               	rrcf	postdec2,f,c
 25616  0151BC  32DE               	rrcf	postinc2,f,c
 25617  0151BE                     u6730:
 25618  0151BE  2EE8               	decfsz	wreg,f,c
 25619  0151C0  D7F6               	goto	u6735
 25620                           
 25621                           ;stkvar	_new_exp @ sp[(-13)+8]
 25622  0151C2  0EFB               	movlw	-5
 25623  0151C4  50E3               	movf	plusw1,w,c
 25624  0151C6  0F01               	addlw	1
 25625  0151C8  6E01               	movwf	btemp^0,c
 25626  0151CA  0EFB               	movlw	-5
 25627  0151CC  0060  F007  FFE3   	movff	btemp,plusw1
 25628  0151D2  6A01               	clrf	btemp^0,c
 25629  0151D4  0EFC               	movlw	-4
 25630  0151D6  50E3               	movf	plusw1,w,c
 25631  0151D8  2001               	addwfc	btemp^0,w,c
 25632  0151DA  6E01               	movwf	btemp^0,c
 25633  0151DC  0EFC               	movlw	-4
 25634  0151DE  0060  F007  FFE3   	movff	btemp,plusw1
 25635  0151E4                     l8314:
 25636                           
 25637                           ;stkvar	_new_exp @ sp[(-13)+8]
 25638  0151E4  0EFC               	movlw	-4
 25639  0151E6  BEE3               	btfsc	plusw1,7,c
 25640  0151E8  D01B               	goto	l8320
 25641  0151EA  0EFC               	movlw	-4
 25642  0151EC  50E3               	movf	plusw1,w,c
 25643  0151EE  E104               	bnz	u6740
 25644  0151F0  0EFB               	movlw	-5
 25645  0151F2  28E3               	incf	plusw1,w,c
 25646  0151F4  A0D8               	btfss	status,0,c
 25647  0151F6  D014               	goto	l8320
 25648  0151F8                     u6740:
 25649  0151F8  0EFF               	movlw	255
 25650  0151FA  6E0B               	movwf	(btemp+10)^0,c
 25651  0151FC  0E00               	movlw	0
 25652  0151FE  6E0C               	movwf	(btemp+11)^0,c
 25653                           
 25654                           ;stkvar	_new_exp @ sp[(-13)+8]
 25655  015200  0EFB               	movlw	-5
 25656  015202  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25657  015208  0EFC               	movlw	-4
 25658  01520A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25659                           
 25660                           ;stkvar	_b @ sp[(-13)+-4]
 25661  015210  0EEF               	movlw	-17
 25662  015212  6AE3               	clrf	plusw1,c
 25663  015214  0EF0               	movlw	-16
 25664  015216  6AE3               	clrf	plusw1,c
 25665  015218  0EF1               	movlw	-15
 25666  01521A  6AE3               	clrf	plusw1,c
 25667  01521C  0EF2               	movlw	-14
 25668  01521E  6AE3               	clrf	plusw1,c
 25669  015220                     l8320:
 25670                           
 25671                           ;stkvar	_new_exp @ sp[(-13)+8]
 25672  015220  0EFC               	movlw	-4
 25673  015222  BEE3               	btfsc	plusw1,7,c
 25674  015224  D007               	goto	u6750
 25675  015226  0EFC               	movlw	-4
 25676  015228  50E3               	movf	plusw1,w,c
 25677  01522A  E112               	bnz	l8326
 25678  01522C  0EFB               	movlw	-5
 25679  01522E  04E3               	decf	plusw1,w,c
 25680  015230  B0D8               	btfsc	status,0,c
 25681  015232  D00E               	goto	l8326
 25682  015234                     u6750:
 25683                           
 25684                           ;stkvar	_new_exp @ sp[(-13)+8]
 25685  015234  0EFB               	movlw	-5
 25686  015236  6AE3               	clrf	plusw1,c
 25687  015238  0EFC               	movlw	-4
 25688  01523A  6AE3               	clrf	plusw1,c
 25689                           
 25690                           ;stkvar	_b @ sp[(-13)+-4]
 25691  01523C  0EEF               	movlw	-17
 25692  01523E  6AE3               	clrf	plusw1,c
 25693  015240  0EF0               	movlw	-16
 25694  015242  6AE3               	clrf	plusw1,c
 25695  015244  0EF1               	movlw	-15
 25696  015246  6AE3               	clrf	plusw1,c
 25697  015248  0EF2               	movlw	-14
 25698  01524A  6AE3               	clrf	plusw1,c
 25699                           
 25700                           ;stkvar	_sign @ sp[(-13)+12]
 25701  01524C  0EFF               	movlw	-1
 25702  01524E  6AE3               	clrf	plusw1,c
 25703  015250                     l8326:
 25704                           
 25705                           ;stkvar	_new_exp @ sp[(-13)+8]
 25706                           ;stkvar	_bexp @ sp[(-13)+11]
 25707  015250  0EFB               	movlw	-5
 25708  015252  006F FF8C  F001    	movff	plusw1,btemp
 25709  015258  0EFE               	movlw	-2
 25710  01525A  0060  F007  FFE3   	movff	btemp,plusw1
 25711                           
 25712                           ;stkvar	_bexp @ sp[(-13)+11]
 25713  015260  0EFE               	movlw	-2
 25714  015262  A0E3               	btfss	plusw1,0,c
 25715  015264  D009               	goto	l8332
 25716                           
 25717                           ;stkvar	_b @ sp[(-13)+-4]
 25718  015266  0EF1               	movlw	241
 25719  015268  24E1               	addwf	fsr1l,w,c
 25720  01526A  6ED9               	movwf	fsr2l,c
 25721  01526C  0EFF               	movlw	255
 25722  01526E  20E2               	addwfc	fsr1h,w,c
 25723  015270  6EDA               	movwf	fsr2h,c
 25724  015272  0E00               	movlw	0
 25725  015274  8EDB               	bsf	plusw2,7,c
 25726  015276  D008               	goto	l8334
 25727  015278                     l8332:
 25728                           
 25729                           ;stkvar	_b @ sp[(-13)+-4]
 25730  015278  0EF1               	movlw	241
 25731  01527A  24E1               	addwf	fsr1l,w,c
 25732  01527C  6ED9               	movwf	fsr2l,c
 25733  01527E  0EFF               	movlw	255
 25734  015280  20E2               	addwfc	fsr1h,w,c
 25735  015282  6EDA               	movwf	fsr2h,c
 25736  015284  0E7F               	movlw	127
 25737  015286  16DF               	andwf	indf2,f,c
 25738  015288                     l8334:
 25739                           
 25740                           ;stkvar	_b @ sp[(-13)+-4]
 25741  015288  0EF2               	movlw	242
 25742  01528A  24E1               	addwf	fsr1l,w,c
 25743  01528C  6ED9               	movwf	fsr2l,c
 25744  01528E  0EFF               	movlw	255
 25745  015290  20E2               	addwfc	fsr1h,w,c
 25746  015292  6EDA               	movwf	fsr2h,c
 25747                           
 25748                           ;stkvar	_bexp @ sp[(-13)+11]
 25749  015294  0EFE               	movlw	-2
 25750  015296  006F FF8C  F00C    	movff	plusw1,btemp+11
 25751  01529C  90D8               	bcf	status,0,c
 25752  01529E  300C               	rrcf	(btemp+11)^0,w,c
 25753  0152A0  6EDF               	movwf	indf2,c
 25754  0152A2  D644               	goto	l8232
 25755  0152A4                     l2977:
 25756                           
 25757                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25758  0152A4  0EEB               	movlw	235
 25759  0152A6  26E1               	addwf	fsr1l,f,c
 25760  0152A8  0EFF               	movlw	255
 25761  0152AA  22E2               	addwfc	fsr1h,f,c
 25762  0152AC  0012               	return		;funcret
 25763  0152AE                     __end_of___fldiv:
 25764                           	opt callstack 0
 25765                           
 25766 ;; *************** function ___flge *****************
 25767 ;; Defined at:
 25768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25769 ;; Parameters:    Size  Location     Type
 25770 ;;  ff1             4  [STACK] unsigned char 
 25771 ;;  ff2             4  [STACK] unsigned char 
 25772 ;; Auto vars:     Size  Location     Type
 25773 ;;		None
 25774 ;; Return value:  Size  Location     Type
 25775 ;;		None               void
 25776 ;; Registers used:
 25777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25778 ;; Tracked objects:
 25779 ;;		On entry : 0/1
 25780 ;;		On exit  : 0/0
 25781 ;;		Unchanged: 0/0
 25782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;Total ram usage:        0 bytes
 25788 ;; Hardware stack levels used:    1
 25789 ;; Hardware stack levels required when called:   15
 25790 ;; This function calls:
 25791 ;;		Nothing
 25792 ;; This function is called by:
 25793 ;;		_main
 25794 ;;		_calc_ror_data
 25795 ;;		_check_day_time
 25796 ;;		_calc_bsoc
 25797 ;;		_efgtoa
 25798 ;; This function uses a reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text101
 25802  018FB4                     __ptext101:
 25803                           	opt callstack 0
 25804  018FB4                     ___flge:
 25805                           	opt callstack 0
 25806                           
 25807                           ;stkvar	_ff1 @ sp[(0)+-4]
 25808                           
 25809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25810                           ;incstack = 0
 25811 ;; hardware stack exceeded
 25812  018FB4  50E1               	movf	fsr1l,w,c
 25813  018FB6  0FFC               	addlw	-4
 25814  018FB8  6ED9               	movwf	fsr2l,c
 25815  018FBA  50E2               	movf	fsr1h,w,c
 25816  018FBC  6EDA               	movwf	fsr2h,c
 25817  018FBE  0EFF               	movlw	255
 25818  018FC0  22DA               	addwfc	fsr2h,f,c
 25819  018FC2  0E00               	movlw	0
 25820  018FC4  14DE               	andwf	postinc2,w,c
 25821  018FC6  6E09               	movwf	(btemp+8)^0,c
 25822  018FC8  0E00               	movlw	0
 25823  018FCA  14DE               	andwf	postinc2,w,c
 25824  018FCC  6E0A               	movwf	(btemp+9)^0,c
 25825  018FCE  0E80               	movlw	128
 25826  018FD0  14DE               	andwf	postinc2,w,c
 25827  018FD2  6E0B               	movwf	(btemp+10)^0,c
 25828  018FD4  0E7F               	movlw	127
 25829  018FD6  14DE               	andwf	postinc2,w,c
 25830  018FD8  6E0C               	movwf	(btemp+11)^0,c
 25831  018FDA  5009               	movf	(btemp+8)^0,w,c
 25832  018FDC  100A               	iorwf	(btemp+9)^0,w,c
 25833  018FDE  100B               	iorwf	(btemp+10)^0,w,c
 25834  018FE0  100C               	iorwf	(btemp+11)^0,w,c
 25835  018FE2  A4D8               	btfss	status,2,c
 25836  018FE4  D008               	goto	l8608
 25837                           
 25838                           ;stkvar	_ff1 @ sp[(0)+-4]
 25839  018FE6  0EFC               	movlw	-4
 25840  018FE8  6AE3               	clrf	plusw1,c
 25841  018FEA  0EFD               	movlw	-3
 25842  018FEC  6AE3               	clrf	plusw1,c
 25843  018FEE  0EFE               	movlw	-2
 25844  018FF0  6AE3               	clrf	plusw1,c
 25845  018FF2  0EFF               	movlw	-1
 25846  018FF4  6AE3               	clrf	plusw1,c
 25847  018FF6                     l8608:
 25848                           
 25849                           ;stkvar	_ff2 @ sp[(0)+-8]
 25850  018FF6  50E1               	movf	fsr1l,w,c
 25851  018FF8  0FF8               	addlw	-8
 25852  018FFA  6ED9               	movwf	fsr2l,c
 25853  018FFC  50E2               	movf	fsr1h,w,c
 25854  018FFE  6EDA               	movwf	fsr2h,c
 25855  019000  0EFF               	movlw	255
 25856  019002  22DA               	addwfc	fsr2h,f,c
 25857  019004  0E00               	movlw	0
 25858  019006  14DE               	andwf	postinc2,w,c
 25859  019008  6E09               	movwf	(btemp+8)^0,c
 25860  01900A  0E00               	movlw	0
 25861  01900C  14DE               	andwf	postinc2,w,c
 25862  01900E  6E0A               	movwf	(btemp+9)^0,c
 25863  019010  0E80               	movlw	128
 25864  019012  14DE               	andwf	postinc2,w,c
 25865  019014  6E0B               	movwf	(btemp+10)^0,c
 25866  019016  0E7F               	movlw	127
 25867  019018  14DE               	andwf	postinc2,w,c
 25868  01901A  6E0C               	movwf	(btemp+11)^0,c
 25869  01901C  5009               	movf	(btemp+8)^0,w,c
 25870  01901E  100A               	iorwf	(btemp+9)^0,w,c
 25871  019020  100B               	iorwf	(btemp+10)^0,w,c
 25872  019022  100C               	iorwf	(btemp+11)^0,w,c
 25873  019024  A4D8               	btfss	status,2,c
 25874  019026  D008               	goto	l2658
 25875                           
 25876                           ;stkvar	_ff2 @ sp[(0)+-8]
 25877  019028  0EF8               	movlw	-8
 25878  01902A  6AE3               	clrf	plusw1,c
 25879  01902C  0EF9               	movlw	-7
 25880  01902E  6AE3               	clrf	plusw1,c
 25881  019030  0EFA               	movlw	-6
 25882  019032  6AE3               	clrf	plusw1,c
 25883  019034  0EFB               	movlw	-5
 25884  019036  6AE3               	clrf	plusw1,c
 25885  019038                     l2658:
 25886                           
 25887                           ;stkvar	_ff1 @ sp[(0)+-4]
 25888  019038  0EFF               	movlw	-1
 25889  01903A  AEE3               	btfss	plusw1,7,c
 25890  01903C  D024               	goto	l8614
 25891                           
 25892                           ;stkvar	_ff1 @ sp[(0)+-4]
 25893  01903E  0E00               	movlw	0
 25894  019040  6E09               	movwf	(btemp+8)^0,c
 25895  019042  0E00               	movlw	0
 25896  019044  6E0A               	movwf	(btemp+9)^0,c
 25897  019046  0E00               	movlw	0
 25898  019048  6E0B               	movwf	(btemp+10)^0,c
 25899  01904A  0E80               	movlw	128
 25900  01904C  6E0C               	movwf	(btemp+11)^0,c
 25901  01904E  0EFC               	movlw	-4
 25902  019050  50E3               	movf	plusw1,w,c
 25903  019052  5E09               	subwf	(btemp+8)^0,f,c
 25904  019054  0EFD               	movlw	-3
 25905  019056  50E3               	movf	plusw1,w,c
 25906  019058  5A0A               	subwfb	(btemp+9)^0,f,c
 25907  01905A  0EFE               	movlw	-2
 25908  01905C  50E3               	movf	plusw1,w,c
 25909  01905E  5A0B               	subwfb	(btemp+10)^0,f,c
 25910  019060  0EFF               	movlw	-1
 25911  019062  50E3               	movf	plusw1,w,c
 25912  019064  5A0C               	subwfb	(btemp+11)^0,f,c
 25913                           
 25914                           ;stkvar	_ff1 @ sp[(0)+-4]
 25915  019066  0EFC               	movlw	-4
 25916  019068  0060  F027  FFE3   	movff	btemp+8,plusw1
 25917  01906E  0EFD               	movlw	-3
 25918  019070  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25919  019076  0EFE               	movlw	-2
 25920  019078  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25921  01907E  0EFF               	movlw	-1
 25922  019080  0060  F033  FFE3   	movff	btemp+11,plusw1
 25923  019086                     l8614:
 25924                           
 25925                           ;stkvar	_ff2 @ sp[(0)+-8]
 25926  019086  0EFB               	movlw	-5
 25927  019088  AEE3               	btfss	plusw1,7,c
 25928  01908A  D024               	goto	l8618
 25929                           
 25930                           ;stkvar	_ff2 @ sp[(0)+-8]
 25931  01908C  0E00               	movlw	0
 25932  01908E  6E09               	movwf	(btemp+8)^0,c
 25933  019090  0E00               	movlw	0
 25934  019092  6E0A               	movwf	(btemp+9)^0,c
 25935  019094  0E00               	movlw	0
 25936  019096  6E0B               	movwf	(btemp+10)^0,c
 25937  019098  0E80               	movlw	128
 25938  01909A  6E0C               	movwf	(btemp+11)^0,c
 25939  01909C  0EF8               	movlw	-8
 25940  01909E  50E3               	movf	plusw1,w,c
 25941  0190A0  5E09               	subwf	(btemp+8)^0,f,c
 25942  0190A2  0EF9               	movlw	-7
 25943  0190A4  50E3               	movf	plusw1,w,c
 25944  0190A6  5A0A               	subwfb	(btemp+9)^0,f,c
 25945  0190A8  0EFA               	movlw	-6
 25946  0190AA  50E3               	movf	plusw1,w,c
 25947  0190AC  5A0B               	subwfb	(btemp+10)^0,f,c
 25948  0190AE  0EFB               	movlw	-5
 25949  0190B0  50E3               	movf	plusw1,w,c
 25950  0190B2  5A0C               	subwfb	(btemp+11)^0,f,c
 25951                           
 25952                           ;stkvar	_ff2 @ sp[(0)+-8]
 25953  0190B4  0EF8               	movlw	-8
 25954  0190B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25955  0190BC  0EF9               	movlw	-7
 25956  0190BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25957  0190C4  0EFA               	movlw	-6
 25958  0190C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25959  0190CC  0EFB               	movlw	-5
 25960  0190CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25961  0190D4                     l8618:
 25962                           
 25963                           ;stkvar	_ff1 @ sp[(0)+-4]
 25964  0190D4  0EFF               	movlw	-1
 25965  0190D6  7EE3               	btg	plusw1,7,c
 25966                           
 25967                           ;stkvar	_ff2 @ sp[(0)+-8]
 25968  0190D8  0EFB               	movlw	-5
 25969  0190DA  7EE3               	btg	plusw1,7,c
 25970                           
 25971                           ;stkvar	_ff2 @ sp[(0)+-8]
 25972                           ;stkvar	_ff1 @ sp[(0)+-4]
 25973  0190DC  50E1               	movf	fsr1l,w,c
 25974  0190DE  0FFC               	addlw	-4
 25975  0190E0  6ED9               	movwf	fsr2l,c
 25976  0190E2  50E2               	movf	fsr1h,w,c
 25977  0190E4  6EDA               	movwf	fsr2h,c
 25978  0190E6  0EFF               	movlw	255
 25979  0190E8  22DA               	addwfc	fsr2h,f,c
 25980  0190EA  0EF8               	movlw	-8
 25981  0190EC  50E3               	movf	plusw1,w,c
 25982  0190EE  5CDE               	subwf	postinc2,w,c
 25983  0190F0  0EF9               	movlw	-7
 25984  0190F2  50E3               	movf	plusw1,w,c
 25985  0190F4  58DE               	subwfb	postinc2,w,c
 25986  0190F6  0EFA               	movlw	-6
 25987  0190F8  50E3               	movf	plusw1,w,c
 25988  0190FA  58DE               	subwfb	postinc2,w,c
 25989  0190FC  0EFB               	movlw	-5
 25990  0190FE  50E3               	movf	plusw1,w,c
 25991  019100  58DE               	subwfb	postinc2,w,c
 25992  019102  B0D8               	btfsc	status,0,c
 25993  019104  D002               	goto	l8626
 25994  019106  9001               	bcf	btemp& (0+255),0,c
 25995  019108  D001               	goto	l2665
 25996  01910A                     l8626:
 25997  01910A  8001               	bsf	btemp& (0+255),0,c
 25998  01910C                     l2665:
 25999                           
 26000                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26001  01910C  0EF8               	movlw	248
 26002  01910E  26E1               	addwf	fsr1l,f,c
 26003  019110  0EFF               	movlw	255
 26004  019112  22E2               	addwfc	fsr1h,f,c
 26005  019114  0012               	return		;funcret
 26006  019116                     __end_of___flge:
 26007                           	opt callstack 0
 26008                           
 26009 ;; *************** function _calc_model_data *****************
 26010 ;; Defined at:
 26011 ;;		line 67 in file "mbmc.c"
 26012 ;; Parameters:    Size  Location     Type
 26013 ;;		None
 26014 ;; Auto vars:     Size  Location     Type
 26015 ;;		None
 26016 ;; Return value:  Size  Location     Type
 26017 ;;                  1  [STACK] void 
 26018 ;; Registers used:
 26019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26020 ;; Tracked objects:
 26021 ;;		On entry : 0/1
 26022 ;;		On exit  : 3F/39
 26023 ;;		Unchanged: 0/0
 26024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26029 ;;Total ram usage:        0 bytes
 26030 ;; Hardware stack levels used:    1
 26031 ;; Hardware stack levels required when called:   18
 26032 ;; This function calls:
 26033 ;;		___fladd
 26034 ;;		___flmul
 26035 ;;		___flsub
 26036 ;;		_lp_filter
 26037 ;;		_start_bsoc
 26038 ;;		_stop_bsoc
 26039 ;; This function is called by:
 26040 ;;		_main
 26041 ;; This function uses a reentrant model
 26042 ;;
 26043                           
 26044                           	psect	text102
 26045  015C42                     __ptext102:
 26046                           	opt callstack 0
 26047  015C42                     _calc_model_data:
 26048                           	opt callstack 12
 26049                           
 26050                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26051                           
 26052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26053                           ;incstack = 0
 26054  015C42  ECC4  F0E0         	call	_stop_bsoc	;wreg free
 26055                           
 26056                           ; BSR set to: 57
 26057                           ;mbmc.c: 72:  if (!V.calib) {
 26058  015C46  0101               	movlb	1	; () banked
 26059  015C48  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 26060  015C4A  A4D8               	btfss	status,2,c
 26061  015C4C  D219               	goto	l11042
 26062                           
 26063                           ; BSR set to: 1
 26064                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26065  015C4E  EE21  F2FF         	lfsr	2,_C
 26066  015C52  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26067  015C58  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26068  015C5E  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26069  015C64  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26070                           
 26071                           ; BSR set to: 1
 26072                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26073  015C6A  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 26074  015C70  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26075  015C76  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26076  015C7C  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26077  015C82  EE21  F343         	lfsr	2,_C+68	;volatile
 26078  015C86  006F FF7B FFE6     	movff	postinc2,postinc1
 26079  015C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 26080  015C92  006F FF7B FFE6     	movff	postinc2,postinc1
 26081  015C98  006F FF7B FFE6     	movff	postinc2,postinc1
 26082  015C9E  ECDB  F0DA         	call	___flsub	;wreg free
 26083  015CA2  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26084  015CA8  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26085  015CAE  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26086  015CB4  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26087                           
 26088                           ;mbmc.c: 75:   bcror = C.c_bat;
 26089  015CBA  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 26090  015CBE  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26091  015CC2  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26092  015CC6  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26093                           
 26094                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26095  015CCA  EE21  F303         	lfsr	2,_C+4	;volatile
 26096  015CCE  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26097  015CD4  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26098  015CDA  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26099  015CE0  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26100                           
 26101                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26102  015CE6  EE21  F30F         	lfsr	2,_C+16	;volatile
 26103  015CEA  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26104  015CF0  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26105  015CF6  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26106  015CFC  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26107                           
 26108                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26109  015D02  EE21  F333         	lfsr	2,_C+52	;volatile
 26110  015D06  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26111  015D0C  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26112  015D12  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26113  015D18  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26114                           
 26115                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26116  015D1E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 26117  015D24  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26118  015D2A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26119  015D30  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26120  015D36  EE21  F353         	lfsr	2,_C+84	;volatile
 26121  015D3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26122  015D40  006F FF7B FFE6     	movff	postinc2,postinc1
 26123  015D46  006F FF7B FFE6     	movff	postinc2,postinc1
 26124  015D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 26125  015D52  ECDB  F0DA         	call	___flsub	;wreg free
 26126  015D56  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26127  015D5C  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26128  015D62  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26129  015D68  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26130                           
 26131                           ;mbmc.c: 80:   bvror = C.v_bat;
 26132  015D6E  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 26133  015D72  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26134  015D76  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26135  015D7A  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26136                           
 26137                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26138  015D7E  EE21  F313         	lfsr	2,_C+20	;volatile
 26139  015D82  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26140  015D88  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26141  015D8E  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26142  015D94  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26143                           
 26144                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26145  015D9A  EE21  F307         	lfsr	2,_C+8	;volatile
 26146  015D9E  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26147  015DA4  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26148  015DAA  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26149  015DB0  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26150                           
 26151                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26152  015DB6  EE21  F32F         	lfsr	2,_C+48	;volatile
 26153  015DBA  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26154  015DC0  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26155  015DC6  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26156  015DCC  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26157                           
 26158                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26159  015DD2  0E01               	movlw	1
 26160  015DD4  6EE6               	movwf	postinc1,c
 26161  015DD6  0E10               	movlw	16
 26162  015DD8  6EE6               	movwf	postinc1,c
 26163  015DDA  EE21  F2FF         	lfsr	2,_C
 26164  015DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 26165  015DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 26166  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 26167  015DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 26168  015DF6  EE21  F303         	lfsr	2,_C+4	;volatile
 26169  015DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26170  015E00  006F FF7B FFE6     	movff	postinc2,postinc1
 26171  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 26172  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 26173  015E12  ECDB  F0DA         	call	___flsub	;wreg free
 26174  015E16  0060  F007  FFE6   	movff	btemp,postinc1
 26175  015E1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26176  015E22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26177  015E28  0060  F013  FFE6   	movff	btemp+3,postinc1
 26178  015E2E  EC25  F0C3         	call	_lp_filter	;wreg free
 26179  015E32  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26180  015E38  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26181  015E3E  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26182  015E44  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26183                           
 26184                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26185  015E4A  0E01               	movlw	1
 26186  015E4C  6EE6               	movwf	postinc1,c
 26187  015E4E  0E11               	movlw	17
 26188  015E50  6EE6               	movwf	postinc1,c
 26189  015E52  EE21  F353         	lfsr	2,_C+84	;volatile
 26190  015E56  006F FF7B FFE6     	movff	postinc2,postinc1
 26191  015E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 26192  015E62  006F FF7B FFE6     	movff	postinc2,postinc1
 26193  015E68  006F FF7B FFE6     	movff	postinc2,postinc1
 26194  015E6E  EE21  F33F         	lfsr	2,_C+64	;volatile
 26195  015E72  006F FF7B FFE6     	movff	postinc2,postinc1
 26196  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 26197  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 26198  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 26199  015E8A  ECA7  F09E         	call	___flmul	;wreg free
 26200  015E8E  0060  F007  FFE6   	movff	btemp,postinc1
 26201  015E94  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26202  015E9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26203  015EA0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26204  015EA6  EC25  F0C3         	call	_lp_filter	;wreg free
 26205  015EAA  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26206  015EB0  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26207  015EB6  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26208  015EBC  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26209                           
 26210                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26211  015EC2  0E01               	movlw	1
 26212  015EC4  6EE6               	movwf	postinc1,c
 26213  015EC6  0E12               	movlw	18
 26214  015EC8  6EE6               	movwf	postinc1,c
 26215  015ECA  EE21  F34F         	lfsr	2,_C+80	;volatile
 26216  015ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 26217  015ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 26218  015EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 26219  015EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 26220  015EE6  EE21  F347         	lfsr	2,_C+72	;volatile
 26221  015EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 26222  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 26223  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26224  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26225  015F02  ECA7  F09E         	call	___flmul	;wreg free
 26226  015F06  0060  F007  FFE6   	movff	btemp,postinc1
 26227  015F0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26228  015F12  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26229  015F18  0060  F013  FFE6   	movff	btemp+3,postinc1
 26230  015F1E  EC25  F0C3         	call	_lp_filter	;wreg free
 26231  015F22  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26232  015F28  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26233  015F2E  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26234  015F34  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26235                           
 26236                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26237  015F3A  0E01               	movlw	1
 26238  015F3C  6EE6               	movwf	postinc1,c
 26239  015F3E  0E13               	movlw	19
 26240  015F40  6EE6               	movwf	postinc1,c
 26241  015F42  0E00               	movlw	0
 26242  015F44  6EE6               	movwf	postinc1,c
 26243  015F46  0E00               	movlw	0
 26244  015F48  6EE6               	movwf	postinc1,c
 26245  015F4A  0E60               	movlw	96
 26246  015F4C  6EE6               	movwf	postinc1,c
 26247  015F4E  0EC1               	movlw	193
 26248  015F50  6EE6               	movwf	postinc1,c
 26249  015F52  EE21  F363         	lfsr	2,_C+100	;volatile
 26250  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  015F62  006F FF7B FFE6     	movff	postinc2,postinc1
 26253  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 26254  015F6E  EE21  F33F         	lfsr	2,_C+64	;volatile
 26255  015F72  006F FF7B FFE6     	movff	postinc2,postinc1
 26256  015F78  006F FF7B FFE6     	movff	postinc2,postinc1
 26257  015F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 26258  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 26259  015F8A  ECA7  F09E         	call	___flmul	;wreg free
 26260  015F8E  0060  F007  FFE6   	movff	btemp,postinc1
 26261  015F94  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26262  015F9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26263  015FA0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26264  015FA6  ECBC  F0A2         	call	___fladd	;wreg free
 26265  015FAA  0060  F007  FFE6   	movff	btemp,postinc1
 26266  015FB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26267  015FB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26268  015FBC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26269  015FC2  EC25  F0C3         	call	_lp_filter	;wreg free
 26270  015FC6  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26271  015FCC  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26272  015FD2  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26273  015FD8  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26274                           
 26275                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26276  015FDE  0E01               	movlw	1
 26277  015FE0  6EE6               	movwf	postinc1,c
 26278  015FE2  0E14               	movlw	20
 26279  015FE4  6EE6               	movwf	postinc1,c
 26280  015FE6  EE21  F353         	lfsr	2,_C+84	;volatile
 26281  015FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 26282  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 26283  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26284  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26285  016002  EE21  F343         	lfsr	2,_C+68	;volatile
 26286  016006  006F FF7B FFE6     	movff	postinc2,postinc1
 26287  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 26288  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 26289  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 26290  01601E  ECA7  F09E         	call	___flmul	;wreg free
 26291  016022  0060  F007  FFE6   	movff	btemp,postinc1
 26292  016028  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26293  01602E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26294  016034  0060  F013  FFE6   	movff	btemp+3,postinc1
 26295  01603A  EC25  F0C3         	call	_lp_filter	;wreg free
 26296  01603E  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26297  016044  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26298  01604A  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26299  016050  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26300                           
 26301                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26302  016056  EE21  F377         	lfsr	2,_C+120	;volatile
 26303  01605A  0E03               	movlw	3
 26304  01605C  AEDB               	btfss	plusw2,7,c
 26305  01605E  D010               	goto	l11042
 26306                           
 26307                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26308  016060  0E17               	movlw	23
 26309  016062  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26310  016068  0EB7               	movlw	183
 26311  01606A  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26312  016070  0ED1               	movlw	209
 26313  016072  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26314  016078  0E38               	movlw	56
 26315  01607A  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26316  016080                     l11042:
 26317                           
 26318                           ;mbmc.c: 95:  start_bsoc();
 26319  016080  EC4F  F0DF         	call	_start_bsoc	;wreg free
 26320                           
 26321                           ; BSR set to: 57
 26322                           ;mbmc.c: 96:  C.update = 1;
 26323  016084  0E01               	movlw	1
 26324  016086  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26325                           
 26326                           ; BSR set to: 57
 26327                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26328  01608C  0012               	return		;funcret
 26329  01608E                     __end_of_calc_model_data:
 26330                           	opt callstack 0
 26331                           
 26332 ;; *************** function _stop_bsoc *****************
 26333 ;; Defined at:
 26334 ;;		line 127 in file "bsoc.c"
 26335 ;; Parameters:    Size  Location     Type
 26336 ;;		None
 26337 ;; Auto vars:     Size  Location     Type
 26338 ;;		None
 26339 ;; Return value:  Size  Location     Type
 26340 ;;                  1  [STACK] void 
 26341 ;; Registers used:
 26342 ;;		None
 26343 ;; Tracked objects:
 26344 ;;		On entry : 0/1
 26345 ;;		On exit  : 3F/39
 26346 ;;		Unchanged: 0/0
 26347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26352 ;;Total ram usage:        0 bytes
 26353 ;; Hardware stack levels used:    1
 26354 ;; Hardware stack levels required when called:   15
 26355 ;; This function calls:
 26356 ;;		Nothing
 26357 ;; This function is called by:
 26358 ;;		_calc_model_data
 26359 ;; This function uses a reentrant model
 26360 ;;
 26361                           
 26362                           	psect	text103
 26363  01C188                     __ptext103:
 26364                           	opt callstack 0
 26365  01C188                     _stop_bsoc:
 26366                           	opt callstack 14
 26367                           
 26368                           ;bsoc.c: 130:  PIE6bits.TMR3IE = 0;
 26369                           
 26370                           ; BSR set to: 57
 26371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26372                           ;incstack = 0
 26373  01C188  0139               	movlb	57	; () banked
 26374  01C18A  9D96               	bcf	150,6,b	;volatile
 26375                           
 26376                           ; BSR set to: 57
 26377                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26378  01C18C  0012               	return		;funcret
 26379  01C18E                     __end_of_stop_bsoc:
 26380                           	opt callstack 0
 26381                           
 26382 ;; *************** function _start_bsoc *****************
 26383 ;; Defined at:
 26384 ;;		line 118 in file "bsoc.c"
 26385 ;; Parameters:    Size  Location     Type
 26386 ;;		None
 26387 ;; Auto vars:     Size  Location     Type
 26388 ;;		None
 26389 ;; Return value:  Size  Location     Type
 26390 ;;                  1  [STACK] void 
 26391 ;; Registers used:
 26392 ;;		wreg, status,2, status,0, btemp+11
 26393 ;; Tracked objects:
 26394 ;;		On entry : 0/1
 26395 ;;		On exit  : 3F/39
 26396 ;;		Unchanged: 0/0
 26397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26402 ;;Total ram usage:        0 bytes
 26403 ;; Hardware stack levels used:    1
 26404 ;; Hardware stack levels required when called:   15
 26405 ;; This function calls:
 26406 ;;		Nothing
 26407 ;; This function is called by:
 26408 ;;		_calc_model_data
 26409 ;; This function uses a reentrant model
 26410 ;;
 26411                           
 26412                           	psect	text104
 26413  01BE9E                     __ptext104:
 26414                           	opt callstack 0
 26415  01BE9E                     _start_bsoc:
 26416                           	opt callstack 14
 26417                           
 26418                           ;bsoc.c: 121:  PIE6bits.TMR3IE = 1;
 26419                           
 26420                           ; BSR set to: 57
 26421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26422                           ;incstack = 0
 26423  01BE9E  0139               	movlb	57	; () banked
 26424  01BEA0  8D96               	bsf	150,6,b	;volatile
 26425                           
 26426                           ; BSR set to: 57
 26427  01BEA2  A4BE               	btfss	190,2,c	;volatile
 26428  01BEA4  D002               	goto	u9640
 26429  01BEA6  0E01               	movlw	1
 26430  01BEA8  D001               	goto	u9646
 26431  01BEAA                     u9640:
 26432  01BEAA  0E00               	movlw	0
 26433  01BEAC                     u9646:
 26434  01BEAC  0AFF               	xorlw	255
 26435  01BEAE  6E0C               	movwf	(btemp+11)^0,c
 26436  01BEB0  460C               	rlncf	(btemp+11)^0,f,c
 26437  01BEB2  460C               	rlncf	(btemp+11)^0,f,c
 26438  01BEB4  50BE               	movf	190,w,c	;volatile
 26439  01BEB6  180C               	xorwf	(btemp+11)^0,w,c
 26440  01BEB8  0BFB               	andlw	-5
 26441  01BEBA  180C               	xorwf	(btemp+11)^0,w,c
 26442  01BEBC  6EBE               	movwf	190,c	;volatile
 26443                           
 26444                           ; BSR set to: 57
 26445                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26446  01BEBE  0012               	return		;funcret
 26447  01BEC0                     __end_of_start_bsoc:
 26448                           	opt callstack 0
 26449                           
 26450 ;; *************** function _lp_filter *****************
 26451 ;; Defined at:
 26452 ;;		line 29 in file "mbmc.c"
 26453 ;; Parameters:    Size  Location     Type
 26454 ;;  new             4  [STACK] const float 
 26455 ;;  bn              1  [STACK] const unsigned char 
 26456 ;;  slow            1  [STACK] const char 
 26457 ;; Auto vars:     Size  Location     Type
 26458 ;;  lp_speed        4  [STACK] float 
 26459 ;; Return value:  Size  Location     Type
 26460 ;;                  4  [STACK] float 
 26461 ;; Registers used:
 26462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26463 ;; Tracked objects:
 26464 ;;		On entry : 0/1
 26465 ;;		On exit  : 0/0
 26466 ;;		Unchanged: 0/0
 26467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26472 ;;Total ram usage:        0 bytes
 26473 ;; Hardware stack levels used:    1
 26474 ;; Hardware stack levels required when called:   17
 26475 ;; This function calls:
 26476 ;;		___fladd
 26477 ;;		___flmul
 26478 ;;		___flsub
 26479 ;; This function is called by:
 26480 ;;		_main
 26481 ;;		_convert_adc_data
 26482 ;;		_calc_model_data
 26483 ;; This function uses a reentrant model
 26484 ;;
 26485                           
 26486                           	psect	text105
 26487  01864A                     __ptext105:
 26488                           	opt callstack 0
 26489  01864A                     _lp_filter:
 26490                           	opt callstack 0
 26491                           
 26492                           ; BSR set to: 57
 26493                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26494  01864A  52E6               	movf	postinc1,f,c
 26495  01864C  52E6               	movf	postinc1,f,c
 26496  01864E  52E6               	movf	postinc1,f,c
 26497  018650  52E6               	movf	postinc1,f,c
 26498                           
 26499                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26500                           ;stkvar	_bn @ sp[(-4)+-5]
 26501                           
 26502                           ;incstack = 0
 26503  018652  0EF7               	movlw	-9
 26504  018654  006F FF8C  F001    	movff	plusw1,btemp
 26505  01865A  0E14               	movlw	20
 26506  01865C  6401               	cpfsgt	btemp^0,c
 26507  01865E  D011               	goto	l10410
 26508  018660                     u9550:
 26509                           
 26510                           ;mbmc.c: 35:   return new;
 26511                           ;stkvar	_new @ sp[(-4)+-4]
 26512  018660  0EF8               	movlw	-8
 26513  018662  006F FF8C  F001    	movff	plusw1,btemp
 26514  018668  0EF9               	movlw	-7
 26515  01866A  006F FF8C  F002    	movff	plusw1,btemp+1
 26516  018670  0EFA               	movlw	-6
 26517  018672  006F FF8C  F003    	movff	plusw1,btemp+2
 26518  018678  0EFB               	movlw	-5
 26519  01867A  006F FF8C  F004    	movff	plusw1,btemp+3
 26520  018680  D0BD               	goto	l1832
 26521  018682                     l10410:
 26522                           
 26523                           ;mbmc.c: 37:  if (slow == (-1)) {
 26524                           ;stkvar	_slow @ sp[(-4)+-6]
 26525  018682  0EF6               	movlw	-10
 26526  018684  28E3               	incf	plusw1,w,c
 26527  018686  A4D8               	btfss	status,2,c
 26528  018688  D012               	goto	l10418
 26529                           
 26530                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26531                           ;stkvar	_bn @ sp[(-4)+-5]
 26532  01868A  0EF7               	movlw	-9
 26533  01868C  50E3               	movf	plusw1,w,c
 26534  01868E  0D04               	mullw	4
 26535  018690  0E00               	movlw	low lp_filter@smooth
 26536  018692  24F3               	addwf	243,w,c
 26537  018694  6ED9               	movwf	fsr2l,c
 26538  018696  0E02               	movlw	high lp_filter@smooth
 26539  018698  20F4               	addwfc	prodh,w,c
 26540  01869A  6EDA               	movwf	fsr2h,c
 26541  01869C  0E00               	movlw	0
 26542  01869E  6EDE               	movwf	postinc2,c
 26543  0186A0  0E00               	movlw	0
 26544  0186A2  6EDE               	movwf	postinc2,c
 26545  0186A4  0E00               	movlw	0
 26546  0186A6  6EDE               	movwf	postinc2,c
 26547  0186A8  0E00               	movlw	0
 26548  0186AA  6EDD               	movwf	postdec2,c
 26549  0186AC  D7D9               	goto	u9550
 26550  0186AE                     l10418:
 26551                           
 26552                           ;mbmc.c: 42:  if (slow) {
 26553                           ;stkvar	_slow @ sp[(-4)+-6]
 26554  0186AE  0EF6               	movlw	-10
 26555  0186B0  50E3               	movf	plusw1,w,c
 26556  0186B2  B4D8               	btfsc	status,2,c
 26557  0186B4  D006               	goto	l10422
 26558                           
 26559                           ;mbmc.c: 43:   lp_speed = 0.033;
 26560  0186B6  0E02               	movlw	2
 26561  0186B8  6E09               	movwf	(btemp+8)^0,c
 26562  0186BA  0E2B               	movlw	43
 26563  0186BC  6E0A               	movwf	(btemp+9)^0,c
 26564  0186BE  0E07               	movlw	7
 26565  0186C0  D005               	goto	L31
 26566  0186C2                     l10422:
 26567                           
 26568                           ;mbmc.c: 45:   lp_speed = 0.066;
 26569  0186C2  0E02               	movlw	2
 26570  0186C4  6E09               	movwf	(btemp+8)^0,c
 26571  0186C6  0E2B               	movlw	43
 26572  0186C8  6E0A               	movwf	(btemp+9)^0,c
 26573  0186CA  0E87               	movlw	135
 26574  0186CC                     L31:
 26575  0186CC  6E0B               	movwf	(btemp+10)^0,c
 26576  0186CE  0E3D               	movlw	61
 26577  0186D0  6E0C               	movwf	(btemp+11)^0,c
 26578                           
 26579                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26580  0186D2  0EFC               	movlw	-4
 26581  0186D4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26582  0186DA  0EFD               	movlw	-3
 26583  0186DC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26584  0186E2  0EFE               	movlw	-2
 26585  0186E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26586  0186EA  0EFF               	movlw	-1
 26587  0186EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26588                           
 26589                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26590                           ;stkvar	_bn @ sp[(-4)+-5]
 26591  0186F2  0EF7               	movlw	-9
 26592  0186F4  50E3               	movf	plusw1,w,c
 26593  0186F6  0D04               	mullw	4
 26594  0186F8  0E00               	movlw	low lp_filter@smooth
 26595  0186FA  24F3               	addwf	243,w,c
 26596  0186FC  6ED9               	movwf	fsr2l,c
 26597  0186FE  0E02               	movlw	high lp_filter@smooth
 26598  018700  20F4               	addwfc	prodh,w,c
 26599  018702  6EDA               	movwf	fsr2h,c
 26600  018704  006F FF7B FFE6     	movff	postinc2,postinc1
 26601  01870A  006F FF7B FFE6     	movff	postinc2,postinc1
 26602  018710  006F FF7B FFE6     	movff	postinc2,postinc1
 26603  018716  006F FF7B FFE6     	movff	postinc2,postinc1
 26604                           
 26605                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26606  01871C  0EF8               	movlw	-8
 26607  01871E  006F FF8F FFE6     	movff	plusw1,postinc1
 26608  018724  006F FF8F FFE6     	movff	plusw1,postinc1
 26609  01872A  006F FF8F FFE6     	movff	plusw1,postinc1
 26610  018730  006F FF8F FFE6     	movff	plusw1,postinc1
 26611                           
 26612                           ;stkvar	_bn @ sp[(-12)+-5]
 26613  018736  0EEF               	movlw	-17
 26614  018738  50E3               	movf	plusw1,w,c
 26615  01873A  0D04               	mullw	4
 26616  01873C  0E00               	movlw	low lp_filter@smooth
 26617  01873E  24F3               	addwf	243,w,c
 26618  018740  6ED9               	movwf	fsr2l,c
 26619  018742  0E02               	movlw	high lp_filter@smooth
 26620  018744  20F4               	addwfc	prodh,w,c
 26621  018746  6EDA               	movwf	fsr2h,c
 26622  018748  006F FF7B FFE6     	movff	postinc2,postinc1
 26623  01874E  006F FF7B FFE6     	movff	postinc2,postinc1
 26624  018754  006F FF7B FFE6     	movff	postinc2,postinc1
 26625  01875A  006F FF7B FFE6     	movff	postinc2,postinc1
 26626                           
 26627                           ;stkvar	_new @ sp[(-16)+-4]
 26628  018760  0EEC               	movlw	-20
 26629  018762  006F FF8F FFE6     	movff	plusw1,postinc1
 26630  018768  006F FF8F FFE6     	movff	plusw1,postinc1
 26631  01876E  006F FF8F FFE6     	movff	plusw1,postinc1
 26632  018774  006F FF8F FFE6     	movff	plusw1,postinc1
 26633  01877A  ECDB  F0DA         	call	___flsub	;wreg free
 26634  01877E  0060  F007  FFE6   	movff	btemp,postinc1
 26635  018784  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26636  01878A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26637  018790  0060  F013  FFE6   	movff	btemp+3,postinc1
 26638  018796  ECA7  F09E         	call	___flmul	;wreg free
 26639  01879A  0060  F007  FFE6   	movff	btemp,postinc1
 26640  0187A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26641  0187A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26642  0187AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26643  0187B2  ECBC  F0A2         	call	___fladd	;wreg free
 26644                           
 26645                           ;stkvar	_bn @ sp[(-4)+-5]
 26646  0187B6  0EF7               	movlw	-9
 26647  0187B8  50E3               	movf	plusw1,w,c
 26648  0187BA  0D04               	mullw	4
 26649  0187BC  0E00               	movlw	low lp_filter@smooth
 26650  0187BE  24F3               	addwf	243,w,c
 26651  0187C0  6ED9               	movwf	fsr2l,c
 26652  0187C2  0E02               	movlw	high lp_filter@smooth
 26653  0187C4  20F4               	addwfc	prodh,w,c
 26654  0187C6  6EDA               	movwf	fsr2h,c
 26655  0187C8  0060  F007  FFDE   	movff	btemp,postinc2
 26656  0187CE  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26657  0187D4  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26658  0187DA  0060  F013  FFDD   	movff	btemp+3,postdec2
 26659  0187E0  52DD               	movf	postdec2,f,c
 26660  0187E2  52DD               	movf	postdec2,f,c
 26661  0187E4  006F FF78  F001    	movff	postinc2,btemp
 26662  0187EA  006F FF78  F002    	movff	postinc2,btemp+1
 26663  0187F0  006F FF78  F003    	movff	postinc2,btemp+2
 26664  0187F6  006F FF78  F004    	movff	postinc2,btemp+3
 26665  0187FC                     l1832:
 26666                           
 26667                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26668  0187FC  0EF6               	movlw	246
 26669  0187FE  26E1               	addwf	fsr1l,f,c
 26670  018800  0EFF               	movlw	255
 26671  018802  22E2               	addwfc	fsr1h,f,c
 26672  018804  0012               	return		;funcret
 26673  018806                     __end_of_lp_filter:
 26674                           	opt callstack 0
 26675                           
 26676 ;; *************** function ___flsub *****************
 26677 ;; Defined at:
 26678 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26679 ;; Parameters:    Size  Location     Type
 26680 ;;  b               4  [STACK] float 
 26681 ;;  a               4  [STACK] float 
 26682 ;; Auto vars:     Size  Location     Type
 26683 ;;		None
 26684 ;; Return value:  Size  Location     Type
 26685 ;;                  4  [STACK] float 
 26686 ;; Registers used:
 26687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26688 ;; Tracked objects:
 26689 ;;		On entry : 0/0
 26690 ;;		On exit  : 0/0
 26691 ;;		Unchanged: 0/0
 26692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26697 ;;Total ram usage:        0 bytes
 26698 ;; Hardware stack levels used:    1
 26699 ;; Hardware stack levels required when called:   16
 26700 ;; This function calls:
 26701 ;;		___fladd
 26702 ;; This function is called by:
 26703 ;;		_conv_raw_result
 26704 ;;		_lp_filter
 26705 ;;		_calc_model_data
 26706 ;;		_calc_ror_data
 26707 ;;		_esr_check
 26708 ;;		_efgtoa
 26709 ;; This function uses a reentrant model
 26710 ;;
 26711                           
 26712                           	psect	text106
 26713  01B5B6                     __ptext106:
 26714                           	opt callstack 0
 26715  01B5B6                     ___flsub:
 26716                           	opt callstack 0
 26717                           
 26718                           ;stkvar	_a @ sp[(0)+-8]
 26719                           
 26720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26721                           ;incstack = 0
 26722 ;; hardware stack exceeded
 26723  01B5B6  0EFB               	movlw	-5
 26724  01B5B8  7EE3               	btg	plusw1,7,c
 26725                           
 26726                           ;stkvar	_a @ sp[(0)+-8]
 26727  01B5BA  0EF8               	movlw	-8
 26728  01B5BC  006F FF8F FFE6     	movff	plusw1,postinc1
 26729  01B5C2  006F FF8F FFE6     	movff	plusw1,postinc1
 26730  01B5C8  006F FF8F FFE6     	movff	plusw1,postinc1
 26731  01B5CE  006F FF8F FFE6     	movff	plusw1,postinc1
 26732                           
 26733                           ;stkvar	_b @ sp[(-4)+-4]
 26734  01B5D4  0EF8               	movlw	-8
 26735  01B5D6  006F FF8F FFE6     	movff	plusw1,postinc1
 26736  01B5DC  006F FF8F FFE6     	movff	plusw1,postinc1
 26737  01B5E2  006F FF8F FFE6     	movff	plusw1,postinc1
 26738  01B5E8  006F FF8F FFE6     	movff	plusw1,postinc1
 26739  01B5EE  ECBC  F0A2         	call	___fladd	;wreg free
 26740                           
 26741                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26742  01B5F2  0EF8               	movlw	248
 26743  01B5F4  26E1               	addwf	fsr1l,f,c
 26744  01B5F6  0EFF               	movlw	255
 26745  01B5F8  22E2               	addwfc	fsr1h,f,c
 26746  01B5FA  0012               	return		;funcret
 26747  01B5FC                     __end_of___flsub:
 26748                           	opt callstack 0
 26749                           
 26750 ;; *************** function ___fladd *****************
 26751 ;; Defined at:
 26752 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26753 ;; Parameters:    Size  Location     Type
 26754 ;;  b               4  [STACK] float 
 26755 ;;  a               4  [STACK] float 
 26756 ;; Auto vars:     Size  Location     Type
 26757 ;;  grs             1  [STACK] unsigned char 
 26758 ;;  bexp            1  [STACK] unsigned char 
 26759 ;;  aexp            1  [STACK] unsigned char 
 26760 ;;  signs           1  [STACK] unsigned char 
 26761 ;; Return value:  Size  Location     Type
 26762 ;;                  4  [STACK] unsigned char 
 26763 ;; Registers used:
 26764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26765 ;; Tracked objects:
 26766 ;;		On entry : 0/0
 26767 ;;		On exit  : 0/0
 26768 ;;		Unchanged: 0/0
 26769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26774 ;;Total ram usage:        0 bytes
 26775 ;; Hardware stack levels used:    1
 26776 ;; Hardware stack levels required when called:   15
 26777 ;; This function calls:
 26778 ;;		Nothing
 26779 ;; This function is called by:
 26780 ;;		_main
 26781 ;;		_conv_raw_result
 26782 ;;		_lp_filter
 26783 ;;		_calc_model_data
 26784 ;;		_efgtoa
 26785 ;;		___asfladd
 26786 ;;		___flsub
 26787 ;; This function uses a reentrant model
 26788 ;;
 26789                           
 26790                           	psect	text107
 26791  014578                     __ptext107:
 26792                           	opt callstack 0
 26793  014578                     ___fladd:
 26794                           	opt callstack 0
 26795                           
 26796                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26797  014578  52E6               	movf	postinc1,f,c
 26798  01457A  52E6               	movf	postinc1,f,c
 26799  01457C  52E6               	movf	postinc1,f,c
 26800  01457E  52E6               	movf	postinc1,f,c
 26801                           
 26802                           ;stkvar	_b @ sp[(-4)+-4]
 26803                           
 26804                           ;incstack = 0
 26805 ;; hardware stack exceeded
 26806  014580  0EFB               	movlw	251
 26807  014582  24E1               	addwf	fsr1l,w,c
 26808  014584  6ED9               	movwf	fsr2l,c
 26809  014586  0EFF               	movlw	255
 26810  014588  20E2               	addwfc	fsr1h,w,c
 26811  01458A  6EDA               	movwf	fsr2h,c
 26812  01458C  50DF               	movf	indf2,w,c
 26813  01458E  6E0C               	movwf	(btemp+11)^0,c
 26814  014590  0E80               	movlw	128
 26815  014592  160C               	andwf	(btemp+11)^0,f,c
 26816                           
 26817                           ;stkvar	_signs @ sp[(-4)+3]
 26818  014594  0EFF               	movlw	-1
 26819  014596  0060  F033  FFE3   	movff	btemp+11,plusw1
 26820                           
 26821                           ;stkvar	_b @ sp[(-4)+-4]
 26822  01459C  0EFB               	movlw	251
 26823  01459E  24E1               	addwf	fsr1l,w,c
 26824  0145A0  6ED9               	movwf	fsr2l,c
 26825  0145A2  0EFF               	movlw	255
 26826  0145A4  20E2               	addwfc	fsr1h,w,c
 26827  0145A6  6EDA               	movwf	fsr2h,c
 26828  0145A8  50DF               	movf	indf2,w,c
 26829  0145AA  6E0C               	movwf	(btemp+11)^0,c
 26830  0145AC  90D8               	bcf	status,0,c
 26831  0145AE  340C               	rlcf	(btemp+11)^0,w,c
 26832  0145B0  6E0B               	movwf	(btemp+10)^0,c
 26833                           
 26834                           ;stkvar	_bexp @ sp[(-4)+1]
 26835  0145B2  0EFD               	movlw	-3
 26836  0145B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26837                           
 26838                           ;stkvar	_b @ sp[(-4)+-4]
 26839  0145BA  0EFA               	movlw	250
 26840  0145BC  24E1               	addwf	fsr1l,w,c
 26841  0145BE  6ED9               	movwf	fsr2l,c
 26842  0145C0  0EFF               	movlw	255
 26843  0145C2  20E2               	addwfc	fsr1h,w,c
 26844  0145C4  6EDA               	movwf	fsr2h,c
 26845  0145C6  AEDF               	btfss	indf2,7,c
 26846  0145C8  D002               	goto	l7716
 26847                           
 26848                           ;stkvar	_bexp @ sp[(-4)+1]
 26849  0145CA  0EFD               	movlw	-3
 26850  0145CC  80E3               	bsf	plusw1,0,c
 26851  0145CE                     l7716:
 26852                           
 26853                           ;stkvar	_bexp @ sp[(-4)+1]
 26854  0145CE  0EFD               	movlw	-3
 26855  0145D0  50E3               	movf	plusw1,w,c
 26856  0145D2  B4D8               	btfsc	status,2,c
 26857  0145D4  D027               	goto	l7726
 26858                           
 26859                           ;stkvar	_bexp @ sp[(-4)+1]
 26860  0145D6  0EFD               	movlw	-3
 26861  0145D8  28E3               	incf	plusw1,w,c
 26862  0145DA  A4D8               	btfss	status,2,c
 26863  0145DC  D018               	goto	l7722
 26864  0145DE  0E00               	movlw	0
 26865  0145E0  6E09               	movwf	(btemp+8)^0,c
 26866  0145E2  0E00               	movlw	0
 26867  0145E4  6E0A               	movwf	(btemp+9)^0,c
 26868  0145E6  0E00               	movlw	0
 26869  0145E8  6E0B               	movwf	(btemp+10)^0,c
 26870  0145EA  0E00               	movlw	0
 26871  0145EC  6E0C               	movwf	(btemp+11)^0,c
 26872                           
 26873                           ;stkvar	_b @ sp[(-4)+-4]
 26874  0145EE  0EF8               	movlw	-8
 26875  0145F0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26876  0145F6  0EF9               	movlw	-7
 26877  0145F8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26878  0145FE  0EFA               	movlw	-6
 26879  014600  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26880  014606  0EFB               	movlw	-5
 26881  014608  0060  F033  FFE3   	movff	btemp+11,plusw1
 26882  01460E                     l7722:
 26883                           
 26884                           ;stkvar	_b @ sp[(-4)+-4]
 26885  01460E  0EFA               	movlw	-6
 26886  014610  8EE3               	bsf	plusw1,7,c
 26887                           
 26888                           ;stkvar	_b @ sp[(-4)+-4]
 26889  014612  0EFB               	movlw	251
 26890  014614  24E1               	addwf	fsr1l,w,c
 26891  014616  6ED9               	movwf	fsr2l,c
 26892  014618  0EFF               	movlw	255
 26893  01461A  20E2               	addwfc	fsr1h,w,c
 26894  01461C  6EDA               	movwf	fsr2h,c
 26895  01461E  0E00               	movlw	0
 26896  014620  6EDF               	movwf	indf2,c
 26897  014622  D018               	goto	l7728
 26898  014624                     l7726:
 26899  014624  0E00               	movlw	0
 26900  014626  6E09               	movwf	(btemp+8)^0,c
 26901  014628  0E00               	movlw	0
 26902  01462A  6E0A               	movwf	(btemp+9)^0,c
 26903  01462C  0E00               	movlw	0
 26904  01462E  6E0B               	movwf	(btemp+10)^0,c
 26905  014630  0E00               	movlw	0
 26906  014632  6E0C               	movwf	(btemp+11)^0,c
 26907                           
 26908                           ;stkvar	_b @ sp[(-4)+-4]
 26909  014634  0EF8               	movlw	-8
 26910  014636  0060  F027  FFE3   	movff	btemp+8,plusw1
 26911  01463C  0EF9               	movlw	-7
 26912  01463E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26913  014644  0EFA               	movlw	-6
 26914  014646  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26915  01464C  0EFB               	movlw	-5
 26916  01464E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26917  014654                     l7728:
 26918                           
 26919                           ;stkvar	_a @ sp[(-4)+-8]
 26920  014654  0EF7               	movlw	247
 26921  014656  24E1               	addwf	fsr1l,w,c
 26922  014658  6ED9               	movwf	fsr2l,c
 26923  01465A  0EFF               	movlw	255
 26924  01465C  20E2               	addwfc	fsr1h,w,c
 26925  01465E  6EDA               	movwf	fsr2h,c
 26926  014660  50DF               	movf	indf2,w,c
 26927  014662  6E0C               	movwf	(btemp+11)^0,c
 26928  014664  0E80               	movlw	128
 26929  014666  160C               	andwf	(btemp+11)^0,f,c
 26930                           
 26931                           ;stkvar	_aexp @ sp[(-4)+2]
 26932  014668  0EFE               	movlw	-2
 26933  01466A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26934                           
 26935                           ;stkvar	_signs @ sp[(-4)+3]
 26936                           ;stkvar	_aexp @ sp[(-4)+2]
 26937  014670  50E1               	movf	fsr1l,w,c
 26938  014672  0FFE               	addlw	-2
 26939  014674  6ED9               	movwf	fsr2l,c
 26940  014676  50E2               	movf	fsr1h,w,c
 26941  014678  6EDA               	movwf	fsr2h,c
 26942  01467A  0EFF               	movlw	255
 26943  01467C  22DA               	addwfc	fsr2h,f,c
 26944  01467E  0EFF               	movlw	-1
 26945  014680  50E3               	movf	plusw1,w,c
 26946  014682  18DE               	xorwf	postinc2,w,c
 26947  014684  B4D8               	btfsc	status,2,c
 26948  014686  D002               	goto	l7734
 26949                           
 26950                           ;stkvar	_signs @ sp[(-4)+3]
 26951  014688  0EFF               	movlw	-1
 26952  01468A  8CE3               	bsf	plusw1,6,c
 26953  01468C                     l7734:
 26954                           
 26955                           ;stkvar	_a @ sp[(-4)+-8]
 26956  01468C  0EF7               	movlw	247
 26957  01468E  24E1               	addwf	fsr1l,w,c
 26958  014690  6ED9               	movwf	fsr2l,c
 26959  014692  0EFF               	movlw	255
 26960  014694  20E2               	addwfc	fsr1h,w,c
 26961  014696  6EDA               	movwf	fsr2h,c
 26962  014698  50DF               	movf	indf2,w,c
 26963  01469A  6E0C               	movwf	(btemp+11)^0,c
 26964  01469C  90D8               	bcf	status,0,c
 26965  01469E  340C               	rlcf	(btemp+11)^0,w,c
 26966  0146A0  6E0B               	movwf	(btemp+10)^0,c
 26967                           
 26968                           ;stkvar	_aexp @ sp[(-4)+2]
 26969  0146A2  0EFE               	movlw	-2
 26970  0146A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26971                           
 26972                           ;stkvar	_a @ sp[(-4)+-8]
 26973  0146AA  0EF6               	movlw	246
 26974  0146AC  24E1               	addwf	fsr1l,w,c
 26975  0146AE  6ED9               	movwf	fsr2l,c
 26976  0146B0  0EFF               	movlw	255
 26977  0146B2  20E2               	addwfc	fsr1h,w,c
 26978  0146B4  6EDA               	movwf	fsr2h,c
 26979  0146B6  AEDF               	btfss	indf2,7,c
 26980  0146B8  D002               	goto	l7740
 26981                           
 26982                           ;stkvar	_aexp @ sp[(-4)+2]
 26983  0146BA  0EFE               	movlw	-2
 26984  0146BC  80E3               	bsf	plusw1,0,c
 26985  0146BE                     l7740:
 26986                           
 26987                           ;stkvar	_aexp @ sp[(-4)+2]
 26988  0146BE  0EFE               	movlw	-2
 26989  0146C0  50E3               	movf	plusw1,w,c
 26990  0146C2  B4D8               	btfsc	status,2,c
 26991  0146C4  D027               	goto	l7750
 26992                           
 26993                           ;stkvar	_aexp @ sp[(-4)+2]
 26994  0146C6  0EFE               	movlw	-2
 26995  0146C8  28E3               	incf	plusw1,w,c
 26996  0146CA  A4D8               	btfss	status,2,c
 26997  0146CC  D018               	goto	l7746
 26998  0146CE  0E00               	movlw	0
 26999  0146D0  6E09               	movwf	(btemp+8)^0,c
 27000  0146D2  0E00               	movlw	0
 27001  0146D4  6E0A               	movwf	(btemp+9)^0,c
 27002  0146D6  0E00               	movlw	0
 27003  0146D8  6E0B               	movwf	(btemp+10)^0,c
 27004  0146DA  0E00               	movlw	0
 27005  0146DC  6E0C               	movwf	(btemp+11)^0,c
 27006                           
 27007                           ;stkvar	_a @ sp[(-4)+-8]
 27008  0146DE  0EF4               	movlw	-12
 27009  0146E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 27010  0146E6  0EF5               	movlw	-11
 27011  0146E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27012  0146EE  0EF6               	movlw	-10
 27013  0146F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27014  0146F6  0EF7               	movlw	-9
 27015  0146F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27016  0146FE                     l7746:
 27017                           
 27018                           ;stkvar	_a @ sp[(-4)+-8]
 27019  0146FE  0EF6               	movlw	-10
 27020  014700  8EE3               	bsf	plusw1,7,c
 27021                           
 27022                           ;stkvar	_a @ sp[(-4)+-8]
 27023  014702  0EF7               	movlw	247
 27024  014704  24E1               	addwf	fsr1l,w,c
 27025  014706  6ED9               	movwf	fsr2l,c
 27026  014708  0EFF               	movlw	255
 27027  01470A  20E2               	addwfc	fsr1h,w,c
 27028  01470C  6EDA               	movwf	fsr2h,c
 27029  01470E  0E00               	movlw	0
 27030  014710  6EDF               	movwf	indf2,c
 27031  014712  D018               	goto	l7752
 27032  014714                     l7750:
 27033  014714  0E00               	movlw	0
 27034  014716  6E09               	movwf	(btemp+8)^0,c
 27035  014718  0E00               	movlw	0
 27036  01471A  6E0A               	movwf	(btemp+9)^0,c
 27037  01471C  0E00               	movlw	0
 27038  01471E  6E0B               	movwf	(btemp+10)^0,c
 27039  014720  0E00               	movlw	0
 27040  014722  6E0C               	movwf	(btemp+11)^0,c
 27041                           
 27042                           ;stkvar	_a @ sp[(-4)+-8]
 27043  014724  0EF4               	movlw	-12
 27044  014726  0060  F027  FFE3   	movff	btemp+8,plusw1
 27045  01472C  0EF5               	movlw	-11
 27046  01472E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27047  014734  0EF6               	movlw	-10
 27048  014736  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27049  01473C  0EF7               	movlw	-9
 27050  01473E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27051  014744                     l7752:
 27052                           
 27053                           ;stkvar	_bexp @ sp[(-4)+1]
 27054                           ;stkvar	_aexp @ sp[(-4)+2]
 27055  014744  50E1               	movf	fsr1l,w,c
 27056  014746  0FFE               	addlw	-2
 27057  014748  6ED9               	movwf	fsr2l,c
 27058  01474A  50E2               	movf	fsr1h,w,c
 27059  01474C  6EDA               	movwf	fsr2h,c
 27060  01474E  0EFF               	movlw	255
 27061  014750  22DA               	addwfc	fsr2h,f,c
 27062  014752  0EFD               	movlw	-3
 27063  014754  50E3               	movf	plusw1,w,c
 27064  014756  5CDE               	subwf	postinc2,w,c
 27065  014758  B0D8               	btfsc	status,0,c
 27066  01475A  D0A4               	goto	l7788
 27067                           
 27068                           ;stkvar	_signs @ sp[(-4)+3]
 27069  01475C  0EFF               	movlw	-1
 27070  01475E  ACE3               	btfss	plusw1,6,c
 27071  014760  D002               	goto	l7758
 27072                           
 27073                           ;stkvar	_signs @ sp[(-4)+3]
 27074  014762  0EFF               	movlw	-1
 27075  014764  7EE3               	btg	plusw1,7,c
 27076  014766                     l7758:
 27077                           
 27078                           ;stkvar	_bexp @ sp[(-4)+1]
 27079                           ;stkvar	_grs @ sp[(-4)+0]
 27080  014766  0EFD               	movlw	-3
 27081  014768  006F FF8C  F001    	movff	plusw1,btemp
 27082  01476E  0EFC               	movlw	-4
 27083  014770  0060  F007  FFE3   	movff	btemp,plusw1
 27084                           
 27085                           ;stkvar	_aexp @ sp[(-4)+2]
 27086                           ;stkvar	_bexp @ sp[(-4)+1]
 27087  014776  0EFE               	movlw	-2
 27088  014778  006F FF8C  F001    	movff	plusw1,btemp
 27089  01477E  0EFD               	movlw	-3
 27090  014780  0060  F007  FFE3   	movff	btemp,plusw1
 27091                           
 27092                           ;stkvar	_grs @ sp[(-4)+0]
 27093                           ;stkvar	_aexp @ sp[(-4)+2]
 27094  014786  0EFC               	movlw	-4
 27095  014788  006F FF8C  F001    	movff	plusw1,btemp
 27096  01478E  0EFE               	movlw	-2
 27097  014790  0060  F007  FFE3   	movff	btemp,plusw1
 27098                           
 27099                           ;stkvar	_b @ sp[(-4)+-4]
 27100                           ;stkvar	_grs @ sp[(-4)+0]
 27101  014796  0EF8               	movlw	-8
 27102  014798  006F FF8C  F001    	movff	plusw1,btemp
 27103  01479E  0EFC               	movlw	-4
 27104  0147A0  0060  F007  FFE3   	movff	btemp,plusw1
 27105                           
 27106                           ;stkvar	_a @ sp[(-4)+-8]
 27107                           ;stkvar	_b @ sp[(-4)+-4]
 27108  0147A6  0EF4               	movlw	-12
 27109  0147A8  006F FF8C  F001    	movff	plusw1,btemp
 27110  0147AE  0EF8               	movlw	-8
 27111  0147B0  0060  F007  FFE3   	movff	btemp,plusw1
 27112                           
 27113                           ;stkvar	_grs @ sp[(-4)+0]
 27114                           ;stkvar	_a @ sp[(-4)+-8]
 27115  0147B6  0EFC               	movlw	-4
 27116  0147B8  006F FF8C  F001    	movff	plusw1,btemp
 27117  0147BE  0EF4               	movlw	-12
 27118  0147C0  0060  F007  FFE3   	movff	btemp,plusw1
 27119                           
 27120                           ;stkvar	_b @ sp[(-4)+-4]
 27121  0147C6  0EF9               	movlw	249
 27122  0147C8  24E1               	addwf	fsr1l,w,c
 27123  0147CA  6ED9               	movwf	fsr2l,c
 27124  0147CC  0EFF               	movlw	255
 27125  0147CE  20E2               	addwfc	fsr1h,w,c
 27126  0147D0  6EDA               	movwf	fsr2h,c
 27127  0147D2  50DF               	movf	indf2,w,c
 27128  0147D4  6E0C               	movwf	(btemp+11)^0,c
 27129                           
 27130                           ;stkvar	_grs @ sp[(-4)+0]
 27131  0147D6  0EFC               	movlw	-4
 27132  0147D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27133                           
 27134                           ;stkvar	_a @ sp[(-4)+-8]
 27135  0147DE  0EF5               	movlw	245
 27136  0147E0  24E1               	addwf	fsr1l,w,c
 27137  0147E2  6ED9               	movwf	fsr2l,c
 27138  0147E4  0EFF               	movlw	255
 27139  0147E6  20E2               	addwfc	fsr1h,w,c
 27140  0147E8  6EDA               	movwf	fsr2h,c
 27141                           
 27142                           ;stkvar	_b @ sp[(-4)+-4]
 27143  0147EA  0EF9               	movlw	249
 27144  0147EC  24E1               	addwf	fsr1l,w,c
 27145  0147EE  6EE9               	movwf	fsr0l,c
 27146  0147F0  0EFF               	movlw	255
 27147  0147F2  20E2               	addwfc	fsr1h,w,c
 27148  0147F4  6EEA               	movwf	fsr0h,c
 27149  0147F6  006F FF7F FFEF     	movff	indf2,indf0
 27150                           
 27151                           ;stkvar	_grs @ sp[(-4)+0]
 27152                           ;stkvar	_a @ sp[(-4)+-8]
 27153  0147FC  0EF5               	movlw	245
 27154  0147FE  24E1               	addwf	fsr1l,w,c
 27155  014800  6ED9               	movwf	fsr2l,c
 27156  014802  0EFF               	movlw	255
 27157  014804  20E2               	addwfc	fsr1h,w,c
 27158  014806  6EDA               	movwf	fsr2h,c
 27159  014808  0EFC               	movlw	-4
 27160  01480A  006F FF8F FFDF     	movff	plusw1,indf2
 27161                           
 27162                           ;stkvar	_b @ sp[(-4)+-4]
 27163  014810  0EFA               	movlw	250
 27164  014812  24E1               	addwf	fsr1l,w,c
 27165  014814  6ED9               	movwf	fsr2l,c
 27166  014816  0EFF               	movlw	255
 27167  014818  20E2               	addwfc	fsr1h,w,c
 27168  01481A  6EDA               	movwf	fsr2h,c
 27169  01481C  50DF               	movf	indf2,w,c
 27170  01481E  6E0C               	movwf	(btemp+11)^0,c
 27171                           
 27172                           ;stkvar	_grs @ sp[(-4)+0]
 27173  014820  0EFC               	movlw	-4
 27174  014822  0060  F033  FFE3   	movff	btemp+11,plusw1
 27175                           
 27176                           ;stkvar	_a @ sp[(-4)+-8]
 27177  014828  0EF6               	movlw	246
 27178  01482A  24E1               	addwf	fsr1l,w,c
 27179  01482C  6ED9               	movwf	fsr2l,c
 27180  01482E  0EFF               	movlw	255
 27181  014830  20E2               	addwfc	fsr1h,w,c
 27182  014832  6EDA               	movwf	fsr2h,c
 27183                           
 27184                           ;stkvar	_b @ sp[(-4)+-4]
 27185  014834  0EFA               	movlw	250
 27186  014836  24E1               	addwf	fsr1l,w,c
 27187  014838  6EE9               	movwf	fsr0l,c
 27188  01483A  0EFF               	movlw	255
 27189  01483C  20E2               	addwfc	fsr1h,w,c
 27190  01483E  6EEA               	movwf	fsr0h,c
 27191  014840  006F FF7F FFEF     	movff	indf2,indf0
 27192                           
 27193                           ;stkvar	_grs @ sp[(-4)+0]
 27194                           ;stkvar	_a @ sp[(-4)+-8]
 27195  014846  0EF6               	movlw	246
 27196  014848  24E1               	addwf	fsr1l,w,c
 27197  01484A  6ED9               	movwf	fsr2l,c
 27198  01484C  0EFF               	movlw	255
 27199  01484E  20E2               	addwfc	fsr1h,w,c
 27200  014850  6EDA               	movwf	fsr2h,c
 27201  014852  0EFC               	movlw	-4
 27202  014854  006F FF8F FFDF     	movff	plusw1,indf2
 27203                           
 27204                           ;stkvar	_b @ sp[(-4)+-4]
 27205  01485A  0EFB               	movlw	251
 27206  01485C  24E1               	addwf	fsr1l,w,c
 27207  01485E  6ED9               	movwf	fsr2l,c
 27208  014860  0EFF               	movlw	255
 27209  014862  20E2               	addwfc	fsr1h,w,c
 27210  014864  6EDA               	movwf	fsr2h,c
 27211  014866  50DF               	movf	indf2,w,c
 27212  014868  6E0C               	movwf	(btemp+11)^0,c
 27213                           
 27214                           ;stkvar	_grs @ sp[(-4)+0]
 27215  01486A  0EFC               	movlw	-4
 27216  01486C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27217                           
 27218                           ;stkvar	_a @ sp[(-4)+-8]
 27219  014872  0EF7               	movlw	247
 27220  014874  24E1               	addwf	fsr1l,w,c
 27221  014876  6ED9               	movwf	fsr2l,c
 27222  014878  0EFF               	movlw	255
 27223  01487A  20E2               	addwfc	fsr1h,w,c
 27224  01487C  6EDA               	movwf	fsr2h,c
 27225                           
 27226                           ;stkvar	_b @ sp[(-4)+-4]
 27227  01487E  0EFB               	movlw	251
 27228  014880  24E1               	addwf	fsr1l,w,c
 27229  014882  6EE9               	movwf	fsr0l,c
 27230  014884  0EFF               	movlw	255
 27231  014886  20E2               	addwfc	fsr1h,w,c
 27232  014888  6EEA               	movwf	fsr0h,c
 27233  01488A  006F FF7F FFEF     	movff	indf2,indf0
 27234                           
 27235                           ;stkvar	_grs @ sp[(-4)+0]
 27236                           ;stkvar	_a @ sp[(-4)+-8]
 27237  014890  0EF7               	movlw	247
 27238  014892  24E1               	addwf	fsr1l,w,c
 27239  014894  6ED9               	movwf	fsr2l,c
 27240  014896  0EFF               	movlw	255
 27241  014898  20E2               	addwfc	fsr1h,w,c
 27242  01489A  6EDA               	movwf	fsr2h,c
 27243  01489C  0EFC               	movlw	-4
 27244  01489E  006F FF8F FFDF     	movff	plusw1,indf2
 27245  0148A4                     l7788:
 27246                           
 27247                           ;stkvar	_grs @ sp[(-4)+0]
 27248  0148A4  0EFC               	movlw	-4
 27249  0148A6  6AE3               	clrf	plusw1,c
 27250                           
 27251                           ;stkvar	_aexp @ sp[(-4)+2]
 27252  0148A8  0EFE               	movlw	-2
 27253  0148AA  50E3               	movf	plusw1,w,c
 27254  0148AC  6E0B               	movwf	(btemp+10)^0,c
 27255  0148AE  6A0C               	clrf	(btemp+11)^0,c
 27256                           
 27257                           ;stkvar	_bexp @ sp[(-4)+1]
 27258  0148B0  0EFD               	movlw	-3
 27259  0148B2  50E3               	movf	plusw1,w,c
 27260  0148B4  5E0B               	subwf	(btemp+10)^0,f,c
 27261  0148B6  0E00               	movlw	0
 27262  0148B8  5A0C               	subwfb	(btemp+11)^0,f,c
 27263  0148BA  BE0C               	btfsc	(btemp+11)^0,7,c
 27264  0148BC  D062               	goto	l7812
 27265  0148BE  500C               	movf	(btemp+11)^0,w,c
 27266  0148C0  E104               	bnz	u5560
 27267  0148C2  0E1A               	movlw	26
 27268  0148C4  5C0B               	subwf	(btemp+10)^0,w,c
 27269  0148C6  A0D8               	btfss	status,0,c
 27270  0148C8  D05C               	goto	l7812
 27271  0148CA                     u5560:
 27272                           
 27273                           ;stkvar	_b @ sp[(-4)+-4]
 27274  0148CA  0EF8               	movlw	-8
 27275  0148CC  50E3               	movf	plusw1,w,c
 27276  0148CE  E10A               	bnz	u5571
 27277  0148D0  0EF9               	movlw	-7
 27278  0148D2  50E3               	movf	plusw1,w,c
 27279  0148D4  E107               	bnz	u5571
 27280  0148D6  0EFA               	movlw	-6
 27281  0148D8  50E3               	movf	plusw1,w,c
 27282  0148DA  E104               	bnz	u5571
 27283  0148DC  0EFB               	movlw	-5
 27284  0148DE  50E3               	movf	plusw1,w,c
 27285  0148E0  B4D8               	btfsc	status,2,c
 27286  0148E2  D003               	goto	u5570
 27287  0148E4                     u5571:
 27288  0148E4  6A0C               	clrf	(btemp+11)^0,c
 27289  0148E6  2A0C               	incf	(btemp+11)^0,f,c
 27290  0148E8  D001               	goto	u5588
 27291  0148EA                     u5570:
 27292  0148EA  6A0C               	clrf	(btemp+11)^0,c
 27293  0148EC                     u5588:
 27294                           
 27295                           ;stkvar	_grs @ sp[(-4)+0]
 27296  0148EC  0EFC               	movlw	-4
 27297  0148EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27298                           
 27299                           ;stkvar	_b @ sp[(-4)+-4]
 27300  0148F4  0EF8               	movlw	-8
 27301  0148F6  6AE3               	clrf	plusw1,c
 27302  0148F8  0EF9               	movlw	-7
 27303  0148FA  6AE3               	clrf	plusw1,c
 27304  0148FC  0EFA               	movlw	-6
 27305  0148FE  6AE3               	clrf	plusw1,c
 27306  014900  0EFB               	movlw	-5
 27307  014902  6AE3               	clrf	plusw1,c
 27308                           
 27309                           ;stkvar	_aexp @ sp[(-4)+2]
 27310                           ;stkvar	_bexp @ sp[(-4)+1]
 27311  014904  0EFE               	movlw	-2
 27312  014906  006F FF8C  F001    	movff	plusw1,btemp
 27313  01490C  0EFD               	movlw	-3
 27314  01490E  0060  F007  FFE3   	movff	btemp,plusw1
 27315  014914  D042               	goto	u5620
 27316  014916                     l7798:
 27317                           
 27318                           ;stkvar	_grs @ sp[(-4)+0]
 27319  014916  0EFC               	movlw	-4
 27320  014918  A0E3               	btfss	plusw1,0,c
 27321  01491A  D00D               	goto	l7802
 27322                           
 27323                           ;stkvar	_grs @ sp[(-4)+0]
 27324  01491C  0EFC               	movlw	-4
 27325  01491E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27326  014924  90D8               	bcf	status,0,c
 27327  014926  320C               	rrcf	(btemp+11)^0,f,c
 27328  014928  0E01               	movlw	1
 27329  01492A  120C               	iorwf	(btemp+11)^0,f,c
 27330                           
 27331                           ;stkvar	_grs @ sp[(-4)+0]
 27332  01492C  0EFC               	movlw	-4
 27333  01492E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27334  014934  D009               	goto	l7804
 27335  014936                     l7802:
 27336                           
 27337                           ;stkvar	_grs @ sp[(-4)+0]
 27338  014936  50E1               	movf	fsr1l,w,c
 27339  014938  0FFC               	addlw	-4
 27340  01493A  6ED9               	movwf	fsr2l,c
 27341  01493C  50E2               	movf	fsr1h,w,c
 27342  01493E  6EDA               	movwf	fsr2h,c
 27343  014940  0EFF               	movlw	255
 27344  014942  22DA               	addwfc	fsr2h,f,c
 27345  014944  90D8               	bcf	status,0,c
 27346  014946  32DF               	rrcf	indf2,f,c
 27347  014948                     l7804:
 27348                           
 27349                           ;stkvar	_b @ sp[(-4)+-4]
 27350  014948  0EF8               	movlw	-8
 27351  01494A  A0E3               	btfss	plusw1,0,c
 27352  01494C  D002               	goto	l7808
 27353                           
 27354                           ;stkvar	_grs @ sp[(-4)+0]
 27355  01494E  0EFC               	movlw	-4
 27356  014950  8EE3               	bsf	plusw1,7,c
 27357  014952                     l7808:
 27358  014952  0E01               	movlw	1
 27359  014954  6E0C               	movwf	(btemp+11)^0,c
 27360                           
 27361                           ;stkvar	_b @ sp[(-4)+-4]
 27362  014956  50E1               	movf	fsr1l,w,c
 27363  014958  0FF8               	addlw	-8
 27364  01495A  6ED9               	movwf	fsr2l,c
 27365  01495C  50E2               	movf	fsr1h,w,c
 27366  01495E  6EDA               	movwf	fsr2h,c
 27367  014960  0EFF               	movlw	255
 27368  014962  22DA               	addwfc	fsr2h,f,c
 27369  014964  280C               	incf	(btemp+11)^0,w,c
 27370  014966  52DE               	movf	postinc2,f,c
 27371  014968  D008               	goto	u5610
 27372  01496A                     u5615:
 27373  01496A  52DE               	movf	postinc2,f,c
 27374  01496C  90D8               	bcf	status,0,c
 27375  01496E  BEDC               	btfsc	preinc2,7,c
 27376  014970  80D8               	bsf	status,0,c
 27377  014972  32DD               	rrcf	postdec2,f,c
 27378  014974  32DD               	rrcf	postdec2,f,c
 27379  014976  32DD               	rrcf	postdec2,f,c
 27380  014978  32DE               	rrcf	postinc2,f,c
 27381  01497A                     u5610:
 27382  01497A  2EE8               	decfsz	wreg,f,c
 27383  01497C  D7F6               	goto	u5615
 27384                           
 27385                           ;stkvar	_bexp @ sp[(-4)+1]
 27386  01497E  0EFD               	movlw	-3
 27387  014980  2AE3               	incf	plusw1,f,c
 27388  014982                     l7812:
 27389                           
 27390                           ;stkvar	_aexp @ sp[(-4)+2]
 27391                           ;stkvar	_bexp @ sp[(-4)+1]
 27392  014982  50E1               	movf	fsr1l,w,c
 27393  014984  0FFD               	addlw	-3
 27394  014986  6ED9               	movwf	fsr2l,c
 27395  014988  50E2               	movf	fsr1h,w,c
 27396  01498A  6EDA               	movwf	fsr2h,c
 27397  01498C  0EFF               	movlw	255
 27398  01498E  22DA               	addwfc	fsr2h,f,c
 27399  014990  0EFE               	movlw	-2
 27400  014992  50E3               	movf	plusw1,w,c
 27401  014994  5CDE               	subwf	postinc2,w,c
 27402  014996  A0D8               	btfss	status,0,c
 27403  014998  D7BE               	goto	l7798
 27404  01499A                     u5620:
 27405                           
 27406                           ;stkvar	_signs @ sp[(-4)+3]
 27407  01499A  0EFF               	movlw	-1
 27408  01499C  BCE3               	btfsc	plusw1,6,c
 27409  01499E  D066               	goto	l7840
 27410                           
 27411                           ;stkvar	_bexp @ sp[(-4)+1]
 27412  0149A0  0EFD               	movlw	-3
 27413  0149A2  50E3               	movf	plusw1,w,c
 27414  0149A4  B4D8               	btfsc	status,2,c
 27415  0149A6  D0F2               	goto	u5720
 27416                           
 27417                           ;stkvar	_a @ sp[(-4)+-8]
 27418                           ;stkvar	_b @ sp[(-4)+-4]
 27419  0149A8  0EF8               	movlw	-8
 27420  0149AA  50E3               	movf	plusw1,w,c
 27421  0149AC  6E01               	movwf	btemp^0,c
 27422  0149AE  0EF4               	movlw	-12
 27423  0149B0  50E3               	movf	plusw1,w,c
 27424  0149B2  2601               	addwf	btemp^0,f,c
 27425  0149B4  0EF8               	movlw	-8
 27426  0149B6  0060  F007  FFE3   	movff	btemp,plusw1
 27427  0149BC  0EF9               	movlw	-7
 27428  0149BE  50E3               	movf	plusw1,w,c
 27429  0149C0  6E01               	movwf	btemp^0,c
 27430  0149C2  0EF5               	movlw	-11
 27431  0149C4  50E3               	movf	plusw1,w,c
 27432  0149C6  2201               	addwfc	btemp^0,f,c
 27433  0149C8  0EF9               	movlw	-7
 27434  0149CA  0060  F007  FFE3   	movff	btemp,plusw1
 27435  0149D0  0EFA               	movlw	-6
 27436  0149D2  50E3               	movf	plusw1,w,c
 27437  0149D4  6E01               	movwf	btemp^0,c
 27438  0149D6  0EF6               	movlw	-10
 27439  0149D8  50E3               	movf	plusw1,w,c
 27440  0149DA  2201               	addwfc	btemp^0,f,c
 27441  0149DC  0EFA               	movlw	-6
 27442  0149DE  0060  F007  FFE3   	movff	btemp,plusw1
 27443  0149E4  0EFB               	movlw	-5
 27444  0149E6  50E3               	movf	plusw1,w,c
 27445  0149E8  6E01               	movwf	btemp^0,c
 27446  0149EA  0EF7               	movlw	-9
 27447  0149EC  50E3               	movf	plusw1,w,c
 27448  0149EE  2201               	addwfc	btemp^0,f,c
 27449  0149F0  0EFB               	movlw	-5
 27450  0149F2  0060  F007  FFE3   	movff	btemp,plusw1
 27451                           
 27452                           ;stkvar	_b @ sp[(-4)+-4]
 27453  0149F8  0EFB               	movlw	-5
 27454  0149FA  A0E3               	btfss	plusw1,0,c
 27455  0149FC  D101               	goto	u5760
 27456                           
 27457                           ;stkvar	_grs @ sp[(-4)+0]
 27458  0149FE  0EFC               	movlw	-4
 27459  014A00  A0E3               	btfss	plusw1,0,c
 27460  014A02  D00D               	goto	l7830
 27461                           
 27462                           ;stkvar	_grs @ sp[(-4)+0]
 27463  014A04  0EFC               	movlw	-4
 27464  014A06  006F FF8C  F00C    	movff	plusw1,btemp+11
 27465  014A0C  90D8               	bcf	status,0,c
 27466  014A0E  320C               	rrcf	(btemp+11)^0,f,c
 27467  014A10  0E01               	movlw	1
 27468  014A12  120C               	iorwf	(btemp+11)^0,f,c
 27469                           
 27470                           ;stkvar	_grs @ sp[(-4)+0]
 27471  014A14  0EFC               	movlw	-4
 27472  014A16  0060  F033  FFE3   	movff	btemp+11,plusw1
 27473  014A1C  D009               	goto	l7832
 27474  014A1E                     l7830:
 27475                           
 27476                           ;stkvar	_grs @ sp[(-4)+0]
 27477  014A1E  50E1               	movf	fsr1l,w,c
 27478  014A20  0FFC               	addlw	-4
 27479  014A22  6ED9               	movwf	fsr2l,c
 27480  014A24  50E2               	movf	fsr1h,w,c
 27481  014A26  6EDA               	movwf	fsr2h,c
 27482  014A28  0EFF               	movlw	255
 27483  014A2A  22DA               	addwfc	fsr2h,f,c
 27484  014A2C  90D8               	bcf	status,0,c
 27485  014A2E  32DF               	rrcf	indf2,f,c
 27486  014A30                     l7832:
 27487                           
 27488                           ;stkvar	_b @ sp[(-4)+-4]
 27489  014A30  0EF8               	movlw	-8
 27490  014A32  A0E3               	btfss	plusw1,0,c
 27491  014A34  D002               	goto	l7836
 27492                           
 27493                           ;stkvar	_grs @ sp[(-4)+0]
 27494  014A36  0EFC               	movlw	-4
 27495  014A38  8EE3               	bsf	plusw1,7,c
 27496  014A3A                     l7836:
 27497  014A3A  0E01               	movlw	1
 27498  014A3C  6E0C               	movwf	(btemp+11)^0,c
 27499                           
 27500                           ;stkvar	_b @ sp[(-4)+-4]
 27501  014A3E  50E1               	movf	fsr1l,w,c
 27502  014A40  0FF8               	addlw	-8
 27503  014A42  6ED9               	movwf	fsr2l,c
 27504  014A44  50E2               	movf	fsr1h,w,c
 27505  014A46  6EDA               	movwf	fsr2h,c
 27506  014A48  0EFF               	movlw	255
 27507  014A4A  22DA               	addwfc	fsr2h,f,c
 27508  014A4C  280C               	incf	(btemp+11)^0,w,c
 27509  014A4E  52DE               	movf	postinc2,f,c
 27510  014A50  D008               	goto	u5680
 27511  014A52                     u5685:
 27512  014A52  52DE               	movf	postinc2,f,c
 27513  014A54  90D8               	bcf	status,0,c
 27514  014A56  BEDC               	btfsc	preinc2,7,c
 27515  014A58  80D8               	bsf	status,0,c
 27516  014A5A  32DD               	rrcf	postdec2,f,c
 27517  014A5C  32DD               	rrcf	postdec2,f,c
 27518  014A5E  32DD               	rrcf	postdec2,f,c
 27519  014A60  32DE               	rrcf	postinc2,f,c
 27520  014A62                     u5680:
 27521  014A62  2EE8               	decfsz	wreg,f,c
 27522  014A64  D7F6               	goto	u5685
 27523                           
 27524                           ;stkvar	_bexp @ sp[(-4)+1]
 27525  014A66  0EFD               	movlw	-3
 27526  014A68  2AE3               	incf	plusw1,f,c
 27527  014A6A  D0CA               	goto	u5760
 27528  014A6C                     l7840:
 27529                           
 27530                           ;stkvar	_a @ sp[(-4)+-8]
 27531                           ;stkvar	_b @ sp[(-4)+-4]
 27532  014A6C  50E1               	movf	fsr1l,w,c
 27533  014A6E  0FF8               	addlw	-8
 27534  014A70  6ED9               	movwf	fsr2l,c
 27535  014A72  50E2               	movf	fsr1h,w,c
 27536  014A74  6EDA               	movwf	fsr2h,c
 27537  014A76  0EFF               	movlw	255
 27538  014A78  22DA               	addwfc	fsr2h,f,c
 27539  014A7A  0EF4               	movlw	-12
 27540  014A7C  50E3               	movf	plusw1,w,c
 27541  014A7E  5CDE               	subwf	postinc2,w,c
 27542  014A80  0EF5               	movlw	-11
 27543  014A82  50E3               	movf	plusw1,w,c
 27544  014A84  58DE               	subwfb	postinc2,w,c
 27545  014A86  0EF6               	movlw	-10
 27546  014A88  50E3               	movf	plusw1,w,c
 27547  014A8A  58DE               	subwfb	postinc2,w,c
 27548  014A8C  50DE               	movf	postinc2,w,c
 27549  014A8E  0A80               	xorlw	128
 27550  014A90  6E01               	movwf	btemp^0,c
 27551  014A92  0EF7               	movlw	-9
 27552  014A94  50E3               	movf	plusw1,w,c
 27553  014A96  0A80               	xorlw	128
 27554  014A98  5801               	subwfb	btemp^0,w,c
 27555  014A9A  B0D8               	btfsc	status,0,c
 27556  014A9C  D053               	goto	l7852
 27557                           
 27558                           ;stkvar	_b @ sp[(-4)+-4]
 27559                           ;stkvar	_a @ sp[(-4)+-8]
 27560  014A9E  0EF4               	movlw	-12
 27561  014AA0  006F FF8C  F009    	movff	plusw1,btemp+8
 27562  014AA6  0EF5               	movlw	-11
 27563  014AA8  006F FF8C  F00A    	movff	plusw1,btemp+9
 27564  014AAE  0EF6               	movlw	-10
 27565  014AB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27566  014AB6  0EF7               	movlw	-9
 27567  014AB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27568  014ABE  0EF8               	movlw	-8
 27569  014AC0  50E3               	movf	plusw1,w,c
 27570  014AC2  5E09               	subwf	(btemp+8)^0,f,c
 27571  014AC4  0EF9               	movlw	-7
 27572  014AC6  50E3               	movf	plusw1,w,c
 27573  014AC8  5A0A               	subwfb	(btemp+9)^0,f,c
 27574  014ACA  0EFA               	movlw	-6
 27575  014ACC  50E3               	movf	plusw1,w,c
 27576  014ACE  5A0B               	subwfb	(btemp+10)^0,f,c
 27577  014AD0  0EFB               	movlw	-5
 27578  014AD2  50E3               	movf	plusw1,w,c
 27579  014AD4  5A0C               	subwfb	(btemp+11)^0,f,c
 27580  014AD6  0EFF               	movlw	255
 27581  014AD8  2409               	addwf	(btemp+8)^0,w,c
 27582  014ADA  6E05               	movwf	(btemp+4)^0,c
 27583  014ADC  0EFF               	movlw	255
 27584  014ADE  200A               	addwfc	(btemp+9)^0,w,c
 27585  014AE0  6E06               	movwf	(btemp+5)^0,c
 27586  014AE2  0EFF               	movlw	255
 27587  014AE4  200B               	addwfc	(btemp+10)^0,w,c
 27588  014AE6  6E07               	movwf	(btemp+6)^0,c
 27589  014AE8  0EFF               	movlw	255
 27590  014AEA  200C               	addwfc	(btemp+11)^0,w,c
 27591  014AEC  6E08               	movwf	(btemp+7)^0,c
 27592                           
 27593                           ;stkvar	_b @ sp[(-4)+-4]
 27594  014AEE  0EF8               	movlw	-8
 27595  014AF0  0060  F017  FFE3   	movff	btemp+4,plusw1
 27596  014AF6  0EF9               	movlw	-7
 27597  014AF8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27598  014AFE  0EFA               	movlw	-6
 27599  014B00  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27600  014B06  0EFB               	movlw	-5
 27601  014B08  0060  F023  FFE3   	movff	btemp+7,plusw1
 27602                           
 27603                           ;stkvar	_signs @ sp[(-4)+3]
 27604  014B0E  0EFF               	movlw	-1
 27605  014B10  7EE3               	btg	plusw1,7,c
 27606                           
 27607                           ;stkvar	_grs @ sp[(-4)+0]
 27608  014B12  0EFC               	movlw	-4
 27609  014B14  50E3               	movf	plusw1,w,c
 27610  014B16  0800               	sublw	0
 27611  014B18  6E0C               	movwf	(btemp+11)^0,c
 27612                           
 27613                           ;stkvar	_grs @ sp[(-4)+0]
 27614  014B1A  0EFC               	movlw	-4
 27615  014B1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27616                           
 27617                           ;stkvar	_grs @ sp[(-4)+0]
 27618  014B22  0EFC               	movlw	-4
 27619  014B24  50E3               	movf	plusw1,w,c
 27620  014B26  A4D8               	btfss	status,2,c
 27621  014B28  D020               	goto	l7854
 27622                           
 27623                           ;stkvar	_b @ sp[(-4)+-4]
 27624  014B2A  50E1               	movf	fsr1l,w,c
 27625  014B2C  0FF8               	addlw	-8
 27626  014B2E  6ED9               	movwf	fsr2l,c
 27627  014B30  50E2               	movf	fsr1h,w,c
 27628  014B32  6EDA               	movwf	fsr2h,c
 27629  014B34  0EFF               	movlw	255
 27630  014B36  22DA               	addwfc	fsr2h,f,c
 27631  014B38  2ADE               	incf	postinc2,f,c
 27632  014B3A  0E00               	movlw	0
 27633  014B3C  22DE               	addwfc	postinc2,f,c
 27634  014B3E  22DE               	addwfc	postinc2,f,c
 27635  014B40  22DE               	addwfc	postinc2,f,c
 27636  014B42  D013               	goto	l7854
 27637  014B44                     l7852:
 27638                           
 27639                           ;stkvar	_a @ sp[(-4)+-8]
 27640                           ;stkvar	_b @ sp[(-4)+-4]
 27641  014B44  50E1               	movf	fsr1l,w,c
 27642  014B46  0FF8               	addlw	-8
 27643  014B48  6ED9               	movwf	fsr2l,c
 27644  014B4A  50E2               	movf	fsr1h,w,c
 27645  014B4C  6EDA               	movwf	fsr2h,c
 27646  014B4E  0EFF               	movlw	255
 27647  014B50  22DA               	addwfc	fsr2h,f,c
 27648  014B52  0EF4               	movlw	-12
 27649  014B54  50E3               	movf	plusw1,w,c
 27650  014B56  5EDE               	subwf	postinc2,f,c
 27651  014B58  0EF5               	movlw	-11
 27652  014B5A  50E3               	movf	plusw1,w,c
 27653  014B5C  5ADE               	subwfb	postinc2,f,c
 27654  014B5E  0EF6               	movlw	-10
 27655  014B60  50E3               	movf	plusw1,w,c
 27656  014B62  5ADE               	subwfb	postinc2,f,c
 27657  014B64  0EF7               	movlw	-9
 27658  014B66  50E3               	movf	plusw1,w,c
 27659  014B68  5ADE               	subwfb	postinc2,f,c
 27660  014B6A                     l7854:
 27661                           
 27662                           ;stkvar	_b @ sp[(-4)+-4]
 27663  014B6A  0EF8               	movlw	-8
 27664  014B6C  50E3               	movf	plusw1,w,c
 27665  014B6E  E145               	bnz	l7876
 27666  014B70  0EF9               	movlw	-7
 27667  014B72  50E3               	movf	plusw1,w,c
 27668  014B74  E142               	bnz	l7876
 27669  014B76  0EFA               	movlw	-6
 27670  014B78  50E3               	movf	plusw1,w,c
 27671  014B7A  E13F               	bnz	l7876
 27672  014B7C  0EFB               	movlw	-5
 27673  014B7E  50E3               	movf	plusw1,w,c
 27674  014B80  A4D8               	btfss	status,2,c
 27675  014B82  D03B               	goto	l7876
 27676                           
 27677                           ;stkvar	_grs @ sp[(-4)+0]
 27678  014B84  0EFC               	movlw	-4
 27679  014B86  50E3               	movf	plusw1,w,c
 27680  014B88  A4D8               	btfss	status,2,c
 27681  014B8A  D037               	goto	l7876
 27682  014B8C                     u5720:
 27683  014B8C  0E00               	movlw	0
 27684  014B8E  6E01               	movwf	btemp^0,c
 27685  014B90  0E00               	movlw	0
 27686  014B92  6E02               	movwf	(btemp+1)^0,c
 27687  014B94  0E00               	movlw	0
 27688  014B96  6E03               	movwf	(btemp+2)^0,c
 27689  014B98  0E00               	movlw	0
 27690  014B9A  6E04               	movwf	(btemp+3)^0,c
 27691  014B9C  D0C6               	goto	l2932
 27692  014B9E                     l7862:
 27693                           
 27694                           ;stkvar	_b @ sp[(-4)+-4]
 27695  014B9E  90D8               	bcf	status,0,c
 27696  014BA0  0EF8               	movlw	-8
 27697  014BA2  36E3               	rlcf	plusw1,f,c
 27698  014BA4  0EF9               	movlw	-7
 27699  014BA6  36E3               	rlcf	plusw1,f,c
 27700  014BA8  0EFA               	movlw	-6
 27701  014BAA  36E3               	rlcf	plusw1,f,c
 27702  014BAC  0EFB               	movlw	-5
 27703  014BAE  36E3               	rlcf	plusw1,f,c
 27704                           
 27705                           ;stkvar	_grs @ sp[(-4)+0]
 27706  014BB0  0EFC               	movlw	-4
 27707  014BB2  AEE3               	btfss	plusw1,7,c
 27708  014BB4  D002               	goto	l2944
 27709                           
 27710                           ;stkvar	_b @ sp[(-4)+-4]
 27711  014BB6  0EF8               	movlw	-8
 27712  014BB8  80E3               	bsf	plusw1,0,c
 27713  014BBA                     l2944:
 27714                           
 27715                           ;stkvar	_grs @ sp[(-4)+0]
 27716  014BBA  0EFC               	movlw	-4
 27717  014BBC  A0E3               	btfss	plusw1,0,c
 27718  014BBE  D00E               	goto	l7870
 27719                           
 27720                           ;stkvar	_grs @ sp[(-4)+0]
 27721  014BC0  0EFC               	movlw	-4
 27722  014BC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27723  014BC8  90D8               	bcf	status,0,c
 27724  014BCA  340C               	rlcf	(btemp+11)^0,w,c
 27725  014BCC  6E0B               	movwf	(btemp+10)^0,c
 27726  014BCE  0E01               	movlw	1
 27727  014BD0  120B               	iorwf	(btemp+10)^0,f,c
 27728                           
 27729                           ;stkvar	_grs @ sp[(-4)+0]
 27730  014BD2  0EFC               	movlw	-4
 27731  014BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27732  014BDA  D009               	goto	l7872
 27733  014BDC                     l7870:
 27734                           
 27735                           ;stkvar	_grs @ sp[(-4)+0]
 27736  014BDC  50E1               	movf	fsr1l,w,c
 27737  014BDE  0FFC               	addlw	-4
 27738  014BE0  6ED9               	movwf	fsr2l,c
 27739  014BE2  50E2               	movf	fsr1h,w,c
 27740  014BE4  6EDA               	movwf	fsr2h,c
 27741  014BE6  0EFF               	movlw	255
 27742  014BE8  22DA               	addwfc	fsr2h,f,c
 27743  014BEA  90D8               	bcf	status,0,c
 27744  014BEC  36DF               	rlcf	indf2,f,c
 27745  014BEE                     l7872:
 27746                           
 27747                           ;stkvar	_bexp @ sp[(-4)+1]
 27748  014BEE  0EFD               	movlw	-3
 27749  014BF0  50E3               	movf	plusw1,w,c
 27750  014BF2  B4D8               	btfsc	status,2,c
 27751  014BF4  D002               	goto	l7876
 27752                           
 27753                           ;stkvar	_bexp @ sp[(-4)+1]
 27754  014BF6  0EFD               	movlw	-3
 27755  014BF8  06E3               	decf	plusw1,f,c
 27756  014BFA                     l7876:
 27757                           
 27758                           ;stkvar	_b @ sp[(-4)+-4]
 27759  014BFA  0EFA               	movlw	-6
 27760  014BFC  AEE3               	btfss	plusw1,7,c
 27761  014BFE  D7CF               	goto	l7862
 27762  014C00                     u5760:
 27763                           
 27764                           ;stkvar	_aexp @ sp[(-4)+2]
 27765  014C00  0EFE               	movlw	-2
 27766  014C02  6AE3               	clrf	plusw1,c
 27767                           
 27768                           ;stkvar	_grs @ sp[(-4)+0]
 27769  014C04  0EFC               	movlw	-4
 27770  014C06  AEE3               	btfss	plusw1,7,c
 27771  014C08  D00F               	goto	l7890
 27772                           
 27773                           ;stkvar	_grs @ sp[(-4)+0]
 27774  014C0A  0EFC               	movlw	-4
 27775  014C0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27776  014C12  0E7F               	movlw	127
 27777  014C14  160C               	andwf	(btemp+11)^0,f,c
 27778  014C16  B4D8               	btfsc	status,2,c
 27779  014C18  D004               	goto	l7886
 27780  014C1A                     u5780:
 27781                           
 27782                           ;stkvar	_aexp @ sp[(-4)+2]
 27783  014C1A  0EFE               	movlw	-2
 27784  014C1C  6AE3               	clrf	plusw1,c
 27785  014C1E  2AE3               	incf	plusw1,f,c
 27786  014C20  D003               	goto	l7890
 27787  014C22                     l7886:
 27788                           
 27789                           ;stkvar	_b @ sp[(-4)+-4]
 27790  014C22  0EF8               	movlw	-8
 27791  014C24  B0E3               	btfsc	plusw1,0,c
 27792  014C26  D7F9               	goto	u5780
 27793  014C28                     l7890:
 27794                           
 27795                           ;stkvar	_aexp @ sp[(-4)+2]
 27796  014C28  0EFE               	movlw	-2
 27797  014C2A  50E3               	movf	plusw1,w,c
 27798  014C2C  B4D8               	btfsc	status,2,c
 27799  014C2E  D02B               	goto	l7902
 27800                           
 27801                           ;stkvar	_b @ sp[(-4)+-4]
 27802  014C30  50E1               	movf	fsr1l,w,c
 27803  014C32  0FF8               	addlw	-8
 27804  014C34  6ED9               	movwf	fsr2l,c
 27805  014C36  50E2               	movf	fsr1h,w,c
 27806  014C38  6EDA               	movwf	fsr2h,c
 27807  014C3A  0EFF               	movlw	255
 27808  014C3C  22DA               	addwfc	fsr2h,f,c
 27809  014C3E  2ADE               	incf	postinc2,f,c
 27810  014C40  0E00               	movlw	0
 27811  014C42  22DE               	addwfc	postinc2,f,c
 27812  014C44  22DE               	addwfc	postinc2,f,c
 27813  014C46  22DE               	addwfc	postinc2,f,c
 27814                           
 27815                           ;stkvar	_b @ sp[(-4)+-4]
 27816  014C48  0EFB               	movlw	-5
 27817  014C4A  A0E3               	btfss	plusw1,0,c
 27818  014C4C  D01C               	goto	l7902
 27819  014C4E  0E01               	movlw	1
 27820  014C50  6E0C               	movwf	(btemp+11)^0,c
 27821                           
 27822                           ;stkvar	_b @ sp[(-4)+-4]
 27823  014C52  50E1               	movf	fsr1l,w,c
 27824  014C54  0FF8               	addlw	-8
 27825  014C56  6ED9               	movwf	fsr2l,c
 27826  014C58  50E2               	movf	fsr1h,w,c
 27827  014C5A  6EDA               	movwf	fsr2h,c
 27828  014C5C  0EFF               	movlw	255
 27829  014C5E  22DA               	addwfc	fsr2h,f,c
 27830  014C60  280C               	incf	(btemp+11)^0,w,c
 27831  014C62  52DE               	movf	postinc2,f,c
 27832  014C64  D008               	goto	u5820
 27833  014C66                     u5825:
 27834  014C66  52DE               	movf	postinc2,f,c
 27835  014C68  90D8               	bcf	status,0,c
 27836  014C6A  BEDC               	btfsc	preinc2,7,c
 27837  014C6C  80D8               	bsf	status,0,c
 27838  014C6E  32DD               	rrcf	postdec2,f,c
 27839  014C70  32DD               	rrcf	postdec2,f,c
 27840  014C72  32DD               	rrcf	postdec2,f,c
 27841  014C74  32DE               	rrcf	postinc2,f,c
 27842  014C76                     u5820:
 27843  014C76  2EE8               	decfsz	wreg,f,c
 27844  014C78  D7F6               	goto	u5825
 27845                           
 27846                           ;stkvar	_bexp @ sp[(-4)+1]
 27847  014C7A  0EFD               	movlw	-3
 27848  014C7C  28E3               	incf	plusw1,w,c
 27849  014C7E  B4D8               	btfsc	status,2,c
 27850  014C80  D002               	goto	l7902
 27851                           
 27852                           ;stkvar	_bexp @ sp[(-4)+1]
 27853  014C82  0EFD               	movlw	-3
 27854  014C84  2AE3               	incf	plusw1,f,c
 27855  014C86                     l7902:
 27856                           
 27857                           ;stkvar	_bexp @ sp[(-4)+1]
 27858  014C86  0EFD               	movlw	-3
 27859  014C88  28E3               	incf	plusw1,w,c
 27860  014C8A  B4D8               	btfsc	status,2,c
 27861  014C8C  D004               	goto	u5850
 27862                           
 27863                           ;stkvar	_bexp @ sp[(-4)+1]
 27864  014C8E  0EFD               	movlw	-3
 27865  014C90  50E3               	movf	plusw1,w,c
 27866  014C92  A4D8               	btfss	status,2,c
 27867  014C94  D00E               	goto	l7912
 27868  014C96                     u5850:
 27869                           
 27870                           ;stkvar	_b @ sp[(-4)+-4]
 27871  014C96  0EF8               	movlw	-8
 27872  014C98  6AE3               	clrf	plusw1,c
 27873  014C9A  0EF9               	movlw	-7
 27874  014C9C  6AE3               	clrf	plusw1,c
 27875  014C9E  0EFA               	movlw	-6
 27876  014CA0  6AE3               	clrf	plusw1,c
 27877  014CA2  0EFB               	movlw	-5
 27878  014CA4  6AE3               	clrf	plusw1,c
 27879                           
 27880                           ;stkvar	_bexp @ sp[(-4)+1]
 27881  014CA6  0EFD               	movlw	-3
 27882  014CA8  50E3               	movf	plusw1,w,c
 27883  014CAA  A4D8               	btfss	status,2,c
 27884  014CAC  D002               	goto	l7912
 27885                           
 27886                           ;stkvar	_signs @ sp[(-4)+3]
 27887  014CAE  0EFF               	movlw	-1
 27888  014CB0  6AE3               	clrf	plusw1,c
 27889  014CB2                     l7912:
 27890                           
 27891                           ;stkvar	_bexp @ sp[(-4)+1]
 27892  014CB2  0EFD               	movlw	-3
 27893  014CB4  A0E3               	btfss	plusw1,0,c
 27894  014CB6  D009               	goto	l7916
 27895                           
 27896                           ;stkvar	_b @ sp[(-4)+-4]
 27897  014CB8  0EFA               	movlw	250
 27898  014CBA  24E1               	addwf	fsr1l,w,c
 27899  014CBC  6ED9               	movwf	fsr2l,c
 27900  014CBE  0EFF               	movlw	255
 27901  014CC0  20E2               	addwfc	fsr1h,w,c
 27902  014CC2  6EDA               	movwf	fsr2h,c
 27903  014CC4  0E00               	movlw	0
 27904  014CC6  8EDB               	bsf	plusw2,7,c
 27905  014CC8  D008               	goto	l7918
 27906  014CCA                     l7916:
 27907                           
 27908                           ;stkvar	_b @ sp[(-4)+-4]
 27909  014CCA  0EFA               	movlw	250
 27910  014CCC  24E1               	addwf	fsr1l,w,c
 27911  014CCE  6ED9               	movwf	fsr2l,c
 27912  014CD0  0EFF               	movlw	255
 27913  014CD2  20E2               	addwfc	fsr1h,w,c
 27914  014CD4  6EDA               	movwf	fsr2h,c
 27915  014CD6  0E7F               	movlw	127
 27916  014CD8  16DF               	andwf	indf2,f,c
 27917  014CDA                     l7918:
 27918                           
 27919                           ;stkvar	_b @ sp[(-4)+-4]
 27920  014CDA  0EFB               	movlw	251
 27921  014CDC  24E1               	addwf	fsr1l,w,c
 27922  014CDE  6ED9               	movwf	fsr2l,c
 27923  014CE0  0EFF               	movlw	255
 27924  014CE2  20E2               	addwfc	fsr1h,w,c
 27925  014CE4  6EDA               	movwf	fsr2h,c
 27926                           
 27927                           ;stkvar	_bexp @ sp[(-4)+1]
 27928  014CE6  0EFD               	movlw	-3
 27929  014CE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27930  014CEE  90D8               	bcf	status,0,c
 27931  014CF0  300C               	rrcf	(btemp+11)^0,w,c
 27932  014CF2  6EDF               	movwf	indf2,c
 27933                           
 27934                           ;stkvar	_signs @ sp[(-4)+3]
 27935  014CF4  0EFF               	movlw	-1
 27936  014CF6  AEE3               	btfss	plusw1,7,c
 27937  014CF8  D008               	goto	l7924
 27938                           
 27939                           ;stkvar	_b @ sp[(-4)+-4]
 27940  014CFA  0EFB               	movlw	251
 27941  014CFC  24E1               	addwf	fsr1l,w,c
 27942  014CFE  6ED9               	movwf	fsr2l,c
 27943  014D00  0EFF               	movlw	255
 27944  014D02  20E2               	addwfc	fsr1h,w,c
 27945  014D04  6EDA               	movwf	fsr2h,c
 27946  014D06  0E00               	movlw	0
 27947  014D08  8EDB               	bsf	plusw2,7,c
 27948  014D0A                     l7924:
 27949                           
 27950                           ;stkvar	_b @ sp[(-4)+-4]
 27951  014D0A  0EF8               	movlw	-8
 27952  014D0C  006F FF8C  F001    	movff	plusw1,btemp
 27953  014D12  0EF9               	movlw	-7
 27954  014D14  006F FF8C  F002    	movff	plusw1,btemp+1
 27955  014D1A  0EFA               	movlw	-6
 27956  014D1C  006F FF8C  F003    	movff	plusw1,btemp+2
 27957  014D22  0EFB               	movlw	-5
 27958  014D24  006F FF8C  F004    	movff	plusw1,btemp+3
 27959  014D2A                     l2932:
 27960                           
 27961                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27962  014D2A  0EF4               	movlw	244
 27963  014D2C  26E1               	addwf	fsr1l,f,c
 27964  014D2E  0EFF               	movlw	255
 27965  014D30  22E2               	addwfc	fsr1h,f,c
 27966  014D32  0012               	return		;funcret
 27967  014D34                     __end_of___fladd:
 27968                           	opt callstack 0
 27969                           
 27970 ;; *************** function ___flmul *****************
 27971 ;; Defined at:
 27972 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27973 ;; Parameters:    Size  Location     Type
 27974 ;;  b               4  [STACK] unsigned char 
 27975 ;;  a               4  [STACK] unsigned char 
 27976 ;; Auto vars:     Size  Location     Type
 27977 ;;  prod            4  [STACK] struct .
 27978 ;;  grs             4  [STACK] unsigned long 
 27979 ;;  temp            2  [STACK] struct .
 27980 ;;  bexp            1  [STACK] unsigned char 
 27981 ;;  aexp            1  [STACK] unsigned char 
 27982 ;;  sign            1  [STACK] unsigned char 
 27983 ;; Return value:  Size  Location     Type
 27984 ;;                  4  [STACK] unsigned char 
 27985 ;; Registers used:
 27986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27987 ;; Tracked objects:
 27988 ;;		On entry : 0/1
 27989 ;;		On exit  : 0/0
 27990 ;;		Unchanged: 0/0
 27991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27996 ;;Total ram usage:        0 bytes
 27997 ;; Hardware stack levels used:    1
 27998 ;; Hardware stack levels required when called:   15
 27999 ;; This function calls:
 28000 ;;		Nothing
 28001 ;; This function is called by:
 28002 ;;		_conv_raw_result
 28003 ;;		_lp_filter
 28004 ;;		_calc_model_data
 28005 ;;		_calc_bsoc
 28006 ;;		_init_bsoc
 28007 ;;		_efgtoa
 28008 ;; This function uses a reentrant model
 28009 ;;
 28010                           
 28011                           	psect	text108
 28012  013D4E                     __ptext108:
 28013                           	opt callstack 0
 28014  013D4E                     ___flmul:
 28015                           	opt callstack 0
 28016                           
 28017                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28018  013D4E  0E0D               	movlw	13
 28019  013D50  26E1               	addwf	fsr1l,f,c
 28020  013D52  0E00               	movlw	0
 28021  013D54  22E2               	addwfc	fsr1h,f,c
 28022                           
 28023                           ;stkvar	_b @ sp[(-13)+-4]
 28024                           
 28025                           ;incstack = 0
 28026 ;; hardware stack exceeded
 28027  013D56  0EF2               	movlw	242
 28028  013D58  24E1               	addwf	fsr1l,w,c
 28029  013D5A  6ED9               	movwf	fsr2l,c
 28030  013D5C  0EFF               	movlw	255
 28031  013D5E  20E2               	addwfc	fsr1h,w,c
 28032  013D60  6EDA               	movwf	fsr2h,c
 28033  013D62  50DF               	movf	indf2,w,c
 28034  013D64  6E0C               	movwf	(btemp+11)^0,c
 28035  013D66  0E80               	movlw	128
 28036  013D68  160C               	andwf	(btemp+11)^0,f,c
 28037                           
 28038                           ;stkvar	_sign @ sp[(-13)+12]
 28039  013D6A  0EFF               	movlw	-1
 28040  013D6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28041                           
 28042                           ;stkvar	_b @ sp[(-13)+-4]
 28043  013D72  0EF2               	movlw	242
 28044  013D74  24E1               	addwf	fsr1l,w,c
 28045  013D76  6ED9               	movwf	fsr2l,c
 28046  013D78  0EFF               	movlw	255
 28047  013D7A  20E2               	addwfc	fsr1h,w,c
 28048  013D7C  6EDA               	movwf	fsr2h,c
 28049  013D7E  50DF               	movf	indf2,w,c
 28050  013D80  6E0C               	movwf	(btemp+11)^0,c
 28051  013D82  90D8               	bcf	status,0,c
 28052  013D84  340C               	rlcf	(btemp+11)^0,w,c
 28053  013D86  6E0B               	movwf	(btemp+10)^0,c
 28054                           
 28055                           ;stkvar	_bexp @ sp[(-13)+10]
 28056  013D88  0EFD               	movlw	-3
 28057  013D8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28058                           
 28059                           ;stkvar	_b @ sp[(-13)+-4]
 28060  013D90  0EF1               	movlw	241
 28061  013D92  24E1               	addwf	fsr1l,w,c
 28062  013D94  6ED9               	movwf	fsr2l,c
 28063  013D96  0EFF               	movlw	255
 28064  013D98  20E2               	addwfc	fsr1h,w,c
 28065  013D9A  6EDA               	movwf	fsr2h,c
 28066  013D9C  AEDF               	btfss	indf2,7,c
 28067  013D9E  D002               	goto	l8350
 28068                           
 28069                           ;stkvar	_bexp @ sp[(-13)+10]
 28070  013DA0  0EFD               	movlw	-3
 28071  013DA2  80E3               	bsf	plusw1,0,c
 28072  013DA4                     l8350:
 28073                           
 28074                           ;stkvar	_bexp @ sp[(-13)+10]
 28075  013DA4  0EFD               	movlw	-3
 28076  013DA6  50E3               	movf	plusw1,w,c
 28077  013DA8  B4D8               	btfsc	status,2,c
 28078  013DAA  D01F               	goto	l8358
 28079                           
 28080                           ;stkvar	_bexp @ sp[(-13)+10]
 28081  013DAC  0EFD               	movlw	-3
 28082  013DAE  28E3               	incf	plusw1,w,c
 28083  013DB0  A4D8               	btfss	status,2,c
 28084  013DB2  D018               	goto	l8356
 28085  013DB4  0E00               	movlw	0
 28086  013DB6  6E09               	movwf	(btemp+8)^0,c
 28087  013DB8  0E00               	movlw	0
 28088  013DBA  6E0A               	movwf	(btemp+9)^0,c
 28089  013DBC  0E00               	movlw	0
 28090  013DBE  6E0B               	movwf	(btemp+10)^0,c
 28091  013DC0  0E00               	movlw	0
 28092  013DC2  6E0C               	movwf	(btemp+11)^0,c
 28093                           
 28094                           ;stkvar	_b @ sp[(-13)+-4]
 28095  013DC4  0EEF               	movlw	-17
 28096  013DC6  0060  F027  FFE3   	movff	btemp+8,plusw1
 28097  013DCC  0EF0               	movlw	-16
 28098  013DCE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28099  013DD4  0EF1               	movlw	-15
 28100  013DD6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28101  013DDC  0EF2               	movlw	-14
 28102  013DDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 28103  013DE4                     l8356:
 28104                           
 28105                           ;stkvar	_b @ sp[(-13)+-4]
 28106  013DE4  0EF1               	movlw	-15
 28107  013DE6  8EE3               	bsf	plusw1,7,c
 28108  013DE8  D018               	goto	l8360
 28109  013DEA                     l8358:
 28110  013DEA  0E00               	movlw	0
 28111  013DEC  6E09               	movwf	(btemp+8)^0,c
 28112  013DEE  0E00               	movlw	0
 28113  013DF0  6E0A               	movwf	(btemp+9)^0,c
 28114  013DF2  0E00               	movlw	0
 28115  013DF4  6E0B               	movwf	(btemp+10)^0,c
 28116  013DF6  0E00               	movlw	0
 28117  013DF8  6E0C               	movwf	(btemp+11)^0,c
 28118                           
 28119                           ;stkvar	_b @ sp[(-13)+-4]
 28120  013DFA  0EEF               	movlw	-17
 28121  013DFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 28122  013E02  0EF0               	movlw	-16
 28123  013E04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28124  013E0A  0EF1               	movlw	-15
 28125  013E0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28126  013E12  0EF2               	movlw	-14
 28127  013E14  0060  F033  FFE3   	movff	btemp+11,plusw1
 28128  013E1A                     l8360:
 28129                           
 28130                           ;stkvar	_a @ sp[(-13)+-8]
 28131  013E1A  0EEE               	movlw	238
 28132  013E1C  24E1               	addwf	fsr1l,w,c
 28133  013E1E  6ED9               	movwf	fsr2l,c
 28134  013E20  0EFF               	movlw	255
 28135  013E22  20E2               	addwfc	fsr1h,w,c
 28136  013E24  6EDA               	movwf	fsr2h,c
 28137  013E26  50DF               	movf	indf2,w,c
 28138  013E28  6E0C               	movwf	(btemp+11)^0,c
 28139  013E2A  0E80               	movlw	128
 28140  013E2C  160C               	andwf	(btemp+11)^0,f,c
 28141                           
 28142                           ;stkvar	_sign @ sp[(-13)+12]
 28143  013E2E  50E1               	movf	fsr1l,w,c
 28144  013E30  0FFF               	addlw	-1
 28145  013E32  6ED9               	movwf	fsr2l,c
 28146  013E34  50E2               	movf	fsr1h,w,c
 28147  013E36  6EDA               	movwf	fsr2h,c
 28148  013E38  0EFF               	movlw	255
 28149  013E3A  22DA               	addwfc	fsr2h,f,c
 28150  013E3C  500C               	movf	(btemp+11)^0,w,c
 28151  013E3E  1ADF               	xorwf	indf2,f,c
 28152                           
 28153                           ;stkvar	_a @ sp[(-13)+-8]
 28154  013E40  0EEE               	movlw	238
 28155  013E42  24E1               	addwf	fsr1l,w,c
 28156  013E44  6ED9               	movwf	fsr2l,c
 28157  013E46  0EFF               	movlw	255
 28158  013E48  20E2               	addwfc	fsr1h,w,c
 28159  013E4A  6EDA               	movwf	fsr2h,c
 28160  013E4C  50DF               	movf	indf2,w,c
 28161  013E4E  6E0C               	movwf	(btemp+11)^0,c
 28162  013E50  90D8               	bcf	status,0,c
 28163  013E52  340C               	rlcf	(btemp+11)^0,w,c
 28164  013E54  6E0B               	movwf	(btemp+10)^0,c
 28165                           
 28166                           ;stkvar	_aexp @ sp[(-13)+11]
 28167  013E56  0EFE               	movlw	-2
 28168  013E58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28169                           
 28170                           ;stkvar	_a @ sp[(-13)+-8]
 28171  013E5E  0EED               	movlw	237
 28172  013E60  24E1               	addwf	fsr1l,w,c
 28173  013E62  6ED9               	movwf	fsr2l,c
 28174  013E64  0EFF               	movlw	255
 28175  013E66  20E2               	addwfc	fsr1h,w,c
 28176  013E68  6EDA               	movwf	fsr2h,c
 28177  013E6A  AEDF               	btfss	indf2,7,c
 28178  013E6C  D002               	goto	l8368
 28179                           
 28180                           ;stkvar	_aexp @ sp[(-13)+11]
 28181  013E6E  0EFE               	movlw	-2
 28182  013E70  80E3               	bsf	plusw1,0,c
 28183  013E72                     l8368:
 28184                           
 28185                           ;stkvar	_aexp @ sp[(-13)+11]
 28186  013E72  0EFE               	movlw	-2
 28187  013E74  50E3               	movf	plusw1,w,c
 28188  013E76  B4D8               	btfsc	status,2,c
 28189  013E78  D01F               	goto	l8376
 28190                           
 28191                           ;stkvar	_aexp @ sp[(-13)+11]
 28192  013E7A  0EFE               	movlw	-2
 28193  013E7C  28E3               	incf	plusw1,w,c
 28194  013E7E  A4D8               	btfss	status,2,c
 28195  013E80  D018               	goto	l8374
 28196  013E82  0E00               	movlw	0
 28197  013E84  6E09               	movwf	(btemp+8)^0,c
 28198  013E86  0E00               	movlw	0
 28199  013E88  6E0A               	movwf	(btemp+9)^0,c
 28200  013E8A  0E00               	movlw	0
 28201  013E8C  6E0B               	movwf	(btemp+10)^0,c
 28202  013E8E  0E00               	movlw	0
 28203  013E90  6E0C               	movwf	(btemp+11)^0,c
 28204                           
 28205                           ;stkvar	_a @ sp[(-13)+-8]
 28206  013E92  0EEB               	movlw	-21
 28207  013E94  0060  F027  FFE3   	movff	btemp+8,plusw1
 28208  013E9A  0EEC               	movlw	-20
 28209  013E9C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28210  013EA2  0EED               	movlw	-19
 28211  013EA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28212  013EAA  0EEE               	movlw	-18
 28213  013EAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28214  013EB2                     l8374:
 28215                           
 28216                           ;stkvar	_a @ sp[(-13)+-8]
 28217  013EB2  0EED               	movlw	-19
 28218  013EB4  8EE3               	bsf	plusw1,7,c
 28219  013EB6  D018               	goto	l8378
 28220  013EB8                     l8376:
 28221  013EB8  0E00               	movlw	0
 28222  013EBA  6E09               	movwf	(btemp+8)^0,c
 28223  013EBC  0E00               	movlw	0
 28224  013EBE  6E0A               	movwf	(btemp+9)^0,c
 28225  013EC0  0E00               	movlw	0
 28226  013EC2  6E0B               	movwf	(btemp+10)^0,c
 28227  013EC4  0E00               	movlw	0
 28228  013EC6  6E0C               	movwf	(btemp+11)^0,c
 28229                           
 28230                           ;stkvar	_a @ sp[(-13)+-8]
 28231  013EC8  0EEB               	movlw	-21
 28232  013ECA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28233  013ED0  0EEC               	movlw	-20
 28234  013ED2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28235  013ED8  0EED               	movlw	-19
 28236  013EDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28237  013EE0  0EEE               	movlw	-18
 28238  013EE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28239  013EE8                     l8378:
 28240                           
 28241                           ;stkvar	_aexp @ sp[(-13)+11]
 28242  013EE8  0EFE               	movlw	-2
 28243  013EEA  50E3               	movf	plusw1,w,c
 28244  013EEC  B4D8               	btfsc	status,2,c
 28245  013EEE  D004               	goto	u6840
 28246                           
 28247                           ;stkvar	_bexp @ sp[(-13)+10]
 28248  013EF0  0EFD               	movlw	-3
 28249  013EF2  50E3               	movf	plusw1,w,c
 28250  013EF4  A4D8               	btfss	status,2,c
 28251  013EF6  D009               	goto	l8386
 28252  013EF8                     u6840:
 28253  013EF8  0E00               	movlw	0
 28254  013EFA  6E01               	movwf	btemp^0,c
 28255  013EFC  0E00               	movlw	0
 28256  013EFE  6E02               	movwf	(btemp+1)^0,c
 28257  013F00  0E00               	movlw	0
 28258  013F02  6E03               	movwf	(btemp+2)^0,c
 28259  013F04  0E00               	movlw	0
 28260  013F06  6E04               	movwf	(btemp+3)^0,c
 28261  013F08  D332               	goto	l3013
 28262  013F0A                     l8386:
 28263                           
 28264                           ;stkvar	_b @ sp[(-13)+-4]
 28265  013F0A  0EEF               	movlw	-17
 28266  013F0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28267                           
 28268                           ;stkvar	_a @ sp[(-13)+-8]
 28269  013F12  0EED               	movlw	237
 28270  013F14  24E1               	addwf	fsr1l,w,c
 28271  013F16  6ED9               	movwf	fsr2l,c
 28272  013F18  0EFF               	movlw	255
 28273  013F1A  20E2               	addwfc	fsr1h,w,c
 28274  013F1C  6EDA               	movwf	fsr2h,c
 28275  013F1E  50DF               	movf	indf2,w,c
 28276  013F20  020C               	mulwf	(btemp+11)^0,c
 28277                           
 28278                           ;stkvar	_temp @ sp[(-13)+8]
 28279  013F22  0EFB               	movlw	-5
 28280  013F24  006F FFCF FFE3     	movff	prodl,plusw1
 28281  013F2A  0EFC               	movlw	-4
 28282  013F2C  006F FFD3 FFE3     	movff	prodh,plusw1
 28283                           
 28284                           ;stkvar	_temp @ sp[(-13)+8]
 28285  013F32  0EFB               	movlw	-5
 28286  013F34  006F FF8C  F00C    	movff	plusw1,btemp+11
 28287  013F3A  0060  F030  F005   	movff	btemp+11,btemp+4
 28288  013F40  6A06               	clrf	(btemp+5)^0,c
 28289  013F42  6A07               	clrf	(btemp+6)^0,c
 28290  013F44  6A08               	clrf	(btemp+7)^0,c
 28291                           
 28292                           ;stkvar	_grs @ sp[(-13)+4]
 28293  013F46  0EF7               	movlw	-9
 28294  013F48  0060  F017  FFE3   	movff	btemp+4,plusw1
 28295  013F4E  0EF8               	movlw	-8
 28296  013F50  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28297  013F56  0EF9               	movlw	-7
 28298  013F58  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28299  013F5E  0EFA               	movlw	-6
 28300  013F60  0060  F023  FFE3   	movff	btemp+7,plusw1
 28301                           
 28302                           ;stkvar	_temp @ sp[(-13)+8]
 28303  013F66  0EFC               	movlw	252
 28304  013F68  24E1               	addwf	fsr1l,w,c
 28305  013F6A  6ED9               	movwf	fsr2l,c
 28306  013F6C  0EFF               	movlw	255
 28307  013F6E  20E2               	addwfc	fsr1h,w,c
 28308  013F70  6EDA               	movwf	fsr2h,c
 28309  013F72  50DF               	movf	indf2,w,c
 28310  013F74  6E0C               	movwf	(btemp+11)^0,c
 28311  013F76  0060  F030  F005   	movff	btemp+11,btemp+4
 28312  013F7C  6A06               	clrf	(btemp+5)^0,c
 28313  013F7E  6A07               	clrf	(btemp+6)^0,c
 28314  013F80  6A08               	clrf	(btemp+7)^0,c
 28315                           
 28316                           ;stkvar	_prod @ sp[(-13)+0]
 28317  013F82  0EF3               	movlw	-13
 28318  013F84  0060  F017  FFE3   	movff	btemp+4,plusw1
 28319  013F8A  0EF4               	movlw	-12
 28320  013F8C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28321  013F92  0EF5               	movlw	-11
 28322  013F94  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28323  013F9A  0EF6               	movlw	-10
 28324  013F9C  0060  F023  FFE3   	movff	btemp+7,plusw1
 28325                           
 28326                           ;stkvar	_b @ sp[(-13)+-4]
 28327  013FA2  0EF0               	movlw	240
 28328  013FA4  24E1               	addwf	fsr1l,w,c
 28329  013FA6  6ED9               	movwf	fsr2l,c
 28330  013FA8  0EFF               	movlw	255
 28331  013FAA  20E2               	addwfc	fsr1h,w,c
 28332  013FAC  6EDA               	movwf	fsr2h,c
 28333  013FAE  50DF               	movf	indf2,w,c
 28334  013FB0  6E0C               	movwf	(btemp+11)^0,c
 28335                           
 28336                           ;stkvar	_a @ sp[(-13)+-8]
 28337  013FB2  0EEC               	movlw	236
 28338  013FB4  24E1               	addwf	fsr1l,w,c
 28339  013FB6  6ED9               	movwf	fsr2l,c
 28340  013FB8  0EFF               	movlw	255
 28341  013FBA  20E2               	addwfc	fsr1h,w,c
 28342  013FBC  6EDA               	movwf	fsr2h,c
 28343  013FBE  50DF               	movf	indf2,w,c
 28344  013FC0  020C               	mulwf	(btemp+11)^0,c
 28345                           
 28346                           ;stkvar	_temp @ sp[(-13)+8]
 28347  013FC2  0EFB               	movlw	-5
 28348  013FC4  006F FFCF FFE3     	movff	prodl,plusw1
 28349  013FCA  0EFC               	movlw	-4
 28350  013FCC  006F FFD3 FFE3     	movff	prodh,plusw1
 28351                           
 28352                           ;stkvar	_grs @ sp[(-13)+4]
 28353  013FD2  50E1               	movf	fsr1l,w,c
 28354  013FD4  0FF7               	addlw	-9
 28355  013FD6  6ED9               	movwf	fsr2l,c
 28356  013FD8  50E2               	movf	fsr1h,w,c
 28357  013FDA  6EDA               	movwf	fsr2h,c
 28358  013FDC  0EFF               	movlw	255
 28359  013FDE  22DA               	addwfc	fsr2h,f,c
 28360                           
 28361                           ;stkvar	_temp @ sp[(-13)+8]
 28362  013FE0  0EFB               	movlw	-5
 28363  013FE2  50E3               	movf	plusw1,w,c
 28364  013FE4  26DE               	addwf	postinc2,f,c
 28365  013FE6  0E00               	movlw	0
 28366  013FE8  22DE               	addwfc	postinc2,f,c
 28367  013FEA  22DE               	addwfc	postinc2,f,c
 28368  013FEC  22DE               	addwfc	postinc2,f,c
 28369                           
 28370                           ;stkvar	_prod @ sp[(-13)+0]
 28371  013FEE  50E1               	movf	fsr1l,w,c
 28372  013FF0  0FF3               	addlw	-13
 28373  013FF2  6ED9               	movwf	fsr2l,c
 28374  013FF4  50E2               	movf	fsr1h,w,c
 28375  013FF6  6EDA               	movwf	fsr2h,c
 28376  013FF8  0EFF               	movlw	255
 28377  013FFA  22DA               	addwfc	fsr2h,f,c
 28378                           
 28379                           ;stkvar	_temp @ sp[(-13)+8]
 28380  013FFC  0EFC               	movlw	252
 28381  013FFE  24E1               	addwf	fsr1l,w,c
 28382  014000  6EE9               	movwf	fsr0l,c
 28383  014002  0EFF               	movlw	255
 28384  014004  20E2               	addwfc	fsr1h,w,c
 28385  014006  6EEA               	movwf	fsr0h,c
 28386  014008  50EF               	movf	indf0,w,c
 28387  01400A  26DE               	addwf	postinc2,f,c
 28388  01400C  0E00               	movlw	0
 28389  01400E  22DE               	addwfc	postinc2,f,c
 28390  014010  22DE               	addwfc	postinc2,f,c
 28391  014012  22DE               	addwfc	postinc2,f,c
 28392                           
 28393                           ;stkvar	_b @ sp[(-13)+-4]
 28394  014014  0EF1               	movlw	241
 28395  014016  24E1               	addwf	fsr1l,w,c
 28396  014018  6ED9               	movwf	fsr2l,c
 28397  01401A  0EFF               	movlw	255
 28398  01401C  20E2               	addwfc	fsr1h,w,c
 28399  01401E  6EDA               	movwf	fsr2h,c
 28400  014020  50DF               	movf	indf2,w,c
 28401  014022  6E0C               	movwf	(btemp+11)^0,c
 28402                           
 28403                           ;stkvar	_a @ sp[(-13)+-8]
 28404  014024  0EEB               	movlw	-21
 28405  014026  50E3               	movf	plusw1,w,c
 28406  014028  020C               	mulwf	(btemp+11)^0,c
 28407                           
 28408                           ;stkvar	_temp @ sp[(-13)+8]
 28409  01402A  0EFB               	movlw	-5
 28410  01402C  006F FFCF FFE3     	movff	prodl,plusw1
 28411  014032  0EFC               	movlw	-4
 28412  014034  006F FFD3 FFE3     	movff	prodh,plusw1
 28413                           
 28414                           ;stkvar	_grs @ sp[(-13)+4]
 28415  01403A  50E1               	movf	fsr1l,w,c
 28416  01403C  0FF7               	addlw	-9
 28417  01403E  6ED9               	movwf	fsr2l,c
 28418  014040  50E2               	movf	fsr1h,w,c
 28419  014042  6EDA               	movwf	fsr2h,c
 28420  014044  0EFF               	movlw	255
 28421  014046  22DA               	addwfc	fsr2h,f,c
 28422                           
 28423                           ;stkvar	_temp @ sp[(-13)+8]
 28424  014048  0EFB               	movlw	-5
 28425  01404A  50E3               	movf	plusw1,w,c
 28426  01404C  26DE               	addwf	postinc2,f,c
 28427  01404E  0E00               	movlw	0
 28428  014050  22DE               	addwfc	postinc2,f,c
 28429  014052  22DE               	addwfc	postinc2,f,c
 28430  014054  22DE               	addwfc	postinc2,f,c
 28431                           
 28432                           ;stkvar	_prod @ sp[(-13)+0]
 28433  014056  50E1               	movf	fsr1l,w,c
 28434  014058  0FF3               	addlw	-13
 28435  01405A  6ED9               	movwf	fsr2l,c
 28436  01405C  50E2               	movf	fsr1h,w,c
 28437  01405E  6EDA               	movwf	fsr2h,c
 28438  014060  0EFF               	movlw	255
 28439  014062  22DA               	addwfc	fsr2h,f,c
 28440                           
 28441                           ;stkvar	_temp @ sp[(-13)+8]
 28442  014064  0EFC               	movlw	252
 28443  014066  24E1               	addwf	fsr1l,w,c
 28444  014068  6EE9               	movwf	fsr0l,c
 28445  01406A  0EFF               	movlw	255
 28446  01406C  20E2               	addwfc	fsr1h,w,c
 28447  01406E  6EEA               	movwf	fsr0h,c
 28448  014070  50EF               	movf	indf0,w,c
 28449  014072  26DE               	addwf	postinc2,f,c
 28450  014074  0E00               	movlw	0
 28451  014076  22DE               	addwfc	postinc2,f,c
 28452  014078  22DE               	addwfc	postinc2,f,c
 28453  01407A  22DE               	addwfc	postinc2,f,c
 28454                           
 28455                           ;stkvar	_grs @ sp[(-13)+4]
 28456  01407C  50E1               	movf	fsr1l,w,c
 28457  01407E  0FF7               	addlw	-9
 28458  014080  6ED9               	movwf	fsr2l,c
 28459  014082  50E2               	movf	fsr1h,w,c
 28460  014084  6EDA               	movwf	fsr2h,c
 28461  014086  0EFF               	movlw	255
 28462  014088  22DA               	addwfc	fsr2h,f,c
 28463  01408A  0E08               	movlw	8
 28464  01408C                     u6855:
 28465  01408C  90D8               	bcf	status,0,c
 28466  01408E  36DE               	rlcf	postinc2,f,c
 28467  014090  36DE               	rlcf	postinc2,f,c
 28468  014092  36DE               	rlcf	postinc2,f,c
 28469  014094  36DD               	rlcf	postdec2,f,c
 28470  014096  52DD               	movf	postdec2,f,c
 28471  014098  52DD               	movf	postdec2,f,c
 28472  01409A  2EE8               	decfsz	wreg,f,c
 28473  01409C  D7F7               	goto	u6855
 28474                           
 28475                           ;stkvar	_b @ sp[(-13)+-4]
 28476  01409E  0EF0               	movlw	240
 28477  0140A0  24E1               	addwf	fsr1l,w,c
 28478  0140A2  6ED9               	movwf	fsr2l,c
 28479  0140A4  0EFF               	movlw	255
 28480  0140A6  20E2               	addwfc	fsr1h,w,c
 28481  0140A8  6EDA               	movwf	fsr2h,c
 28482  0140AA  50DF               	movf	indf2,w,c
 28483  0140AC  6E0C               	movwf	(btemp+11)^0,c
 28484                           
 28485                           ;stkvar	_a @ sp[(-13)+-8]
 28486  0140AE  0EEB               	movlw	-21
 28487  0140B0  50E3               	movf	plusw1,w,c
 28488  0140B2  020C               	mulwf	(btemp+11)^0,c
 28489                           
 28490                           ;stkvar	_temp @ sp[(-13)+8]
 28491  0140B4  0EFB               	movlw	-5
 28492  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 28493  0140BC  0EFC               	movlw	-4
 28494  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 28495                           
 28496                           ;stkvar	_temp @ sp[(-13)+8]
 28497  0140C4  0EFB               	movlw	-5
 28498  0140C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28499  0140CC  0EFC               	movlw	-4
 28500  0140CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28501                           
 28502                           ;stkvar	_grs @ sp[(-13)+4]
 28503  0140D4  50E1               	movf	fsr1l,w,c
 28504  0140D6  0FF7               	addlw	-9
 28505  0140D8  6ED9               	movwf	fsr2l,c
 28506  0140DA  50E2               	movf	fsr1h,w,c
 28507  0140DC  6EDA               	movwf	fsr2h,c
 28508  0140DE  0EFF               	movlw	255
 28509  0140E0  22DA               	addwfc	fsr2h,f,c
 28510  0140E2  500B               	movf	(btemp+10)^0,w,c
 28511  0140E4  26DE               	addwf	postinc2,f,c
 28512  0140E6  500C               	movf	(btemp+11)^0,w,c
 28513  0140E8  22DE               	addwfc	postinc2,f,c
 28514  0140EA  0E00               	movlw	0
 28515  0140EC  22DE               	addwfc	postinc2,f,c
 28516  0140EE  22DE               	addwfc	postinc2,f,c
 28517                           
 28518                           ;stkvar	_b @ sp[(-13)+-4]
 28519  0140F0  0EEF               	movlw	-17
 28520  0140F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28521                           
 28522                           ;stkvar	_a @ sp[(-13)+-8]
 28523  0140F8  0EEC               	movlw	236
 28524  0140FA  24E1               	addwf	fsr1l,w,c
 28525  0140FC  6ED9               	movwf	fsr2l,c
 28526  0140FE  0EFF               	movlw	255
 28527  014100  20E2               	addwfc	fsr1h,w,c
 28528  014102  6EDA               	movwf	fsr2h,c
 28529  014104  50DF               	movf	indf2,w,c
 28530  014106  020C               	mulwf	(btemp+11)^0,c
 28531                           
 28532                           ;stkvar	_temp @ sp[(-13)+8]
 28533  014108  0EFB               	movlw	-5
 28534  01410A  006F FFCF FFE3     	movff	prodl,plusw1
 28535  014110  0EFC               	movlw	-4
 28536  014112  006F FFD3 FFE3     	movff	prodh,plusw1
 28537                           
 28538                           ;stkvar	_temp @ sp[(-13)+8]
 28539  014118  0EFB               	movlw	-5
 28540  01411A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28541  014120  0EFC               	movlw	-4
 28542  014122  006F FF8C  F00C    	movff	plusw1,btemp+11
 28543                           
 28544                           ;stkvar	_grs @ sp[(-13)+4]
 28545  014128  50E1               	movf	fsr1l,w,c
 28546  01412A  0FF7               	addlw	-9
 28547  01412C  6ED9               	movwf	fsr2l,c
 28548  01412E  50E2               	movf	fsr1h,w,c
 28549  014130  6EDA               	movwf	fsr2h,c
 28550  014132  0EFF               	movlw	255
 28551  014134  22DA               	addwfc	fsr2h,f,c
 28552  014136  500B               	movf	(btemp+10)^0,w,c
 28553  014138  26DE               	addwf	postinc2,f,c
 28554  01413A  500C               	movf	(btemp+11)^0,w,c
 28555  01413C  22DE               	addwfc	postinc2,f,c
 28556  01413E  0E00               	movlw	0
 28557  014140  22DE               	addwfc	postinc2,f,c
 28558  014142  22DE               	addwfc	postinc2,f,c
 28559                           
 28560                           ;stkvar	_grs @ sp[(-13)+4]
 28561  014144  50E1               	movf	fsr1l,w,c
 28562  014146  0FF7               	addlw	-9
 28563  014148  6ED9               	movwf	fsr2l,c
 28564  01414A  50E2               	movf	fsr1h,w,c
 28565  01414C  6EDA               	movwf	fsr2h,c
 28566  01414E  0EFF               	movlw	255
 28567  014150  22DA               	addwfc	fsr2h,f,c
 28568  014152  0E08               	movlw	8
 28569  014154                     u6865:
 28570  014154  90D8               	bcf	status,0,c
 28571  014156  36DE               	rlcf	postinc2,f,c
 28572  014158  36DE               	rlcf	postinc2,f,c
 28573  01415A  36DE               	rlcf	postinc2,f,c
 28574  01415C  36DD               	rlcf	postdec2,f,c
 28575  01415E  52DD               	movf	postdec2,f,c
 28576  014160  52DD               	movf	postdec2,f,c
 28577  014162  2EE8               	decfsz	wreg,f,c
 28578  014164  D7F7               	goto	u6865
 28579                           
 28580                           ;stkvar	_b @ sp[(-13)+-4]
 28581  014166  0EEF               	movlw	-17
 28582  014168  006F FF8C  F00C    	movff	plusw1,btemp+11
 28583                           
 28584                           ;stkvar	_a @ sp[(-13)+-8]
 28585  01416E  0EEB               	movlw	-21
 28586  014170  50E3               	movf	plusw1,w,c
 28587  014172  020C               	mulwf	(btemp+11)^0,c
 28588                           
 28589                           ;stkvar	_temp @ sp[(-13)+8]
 28590  014174  0EFB               	movlw	-5
 28591  014176  006F FFCF FFE3     	movff	prodl,plusw1
 28592  01417C  0EFC               	movlw	-4
 28593  01417E  006F FFD3 FFE3     	movff	prodh,plusw1
 28594                           
 28595                           ;stkvar	_temp @ sp[(-13)+8]
 28596  014184  0EFB               	movlw	-5
 28597  014186  006F FF8C  F00B    	movff	plusw1,btemp+10
 28598  01418C  0EFC               	movlw	-4
 28599  01418E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28600                           
 28601                           ;stkvar	_grs @ sp[(-13)+4]
 28602  014194  50E1               	movf	fsr1l,w,c
 28603  014196  0FF7               	addlw	-9
 28604  014198  6ED9               	movwf	fsr2l,c
 28605  01419A  50E2               	movf	fsr1h,w,c
 28606  01419C  6EDA               	movwf	fsr2h,c
 28607  01419E  0EFF               	movlw	255
 28608  0141A0  22DA               	addwfc	fsr2h,f,c
 28609  0141A2  500B               	movf	(btemp+10)^0,w,c
 28610  0141A4  26DE               	addwf	postinc2,f,c
 28611  0141A6  500C               	movf	(btemp+11)^0,w,c
 28612  0141A8  22DE               	addwfc	postinc2,f,c
 28613  0141AA  0E00               	movlw	0
 28614  0141AC  22DE               	addwfc	postinc2,f,c
 28615  0141AE  22DE               	addwfc	postinc2,f,c
 28616                           
 28617                           ;stkvar	_b @ sp[(-13)+-4]
 28618  0141B0  0EF0               	movlw	240
 28619  0141B2  24E1               	addwf	fsr1l,w,c
 28620  0141B4  6ED9               	movwf	fsr2l,c
 28621  0141B6  0EFF               	movlw	255
 28622  0141B8  20E2               	addwfc	fsr1h,w,c
 28623  0141BA  6EDA               	movwf	fsr2h,c
 28624  0141BC  50DF               	movf	indf2,w,c
 28625  0141BE  6E0C               	movwf	(btemp+11)^0,c
 28626                           
 28627                           ;stkvar	_a @ sp[(-13)+-8]
 28628  0141C0  0EED               	movlw	237
 28629  0141C2  24E1               	addwf	fsr1l,w,c
 28630  0141C4  6ED9               	movwf	fsr2l,c
 28631  0141C6  0EFF               	movlw	255
 28632  0141C8  20E2               	addwfc	fsr1h,w,c
 28633  0141CA  6EDA               	movwf	fsr2h,c
 28634  0141CC  50DF               	movf	indf2,w,c
 28635  0141CE  020C               	mulwf	(btemp+11)^0,c
 28636                           
 28637                           ;stkvar	_temp @ sp[(-13)+8]
 28638  0141D0  0EFB               	movlw	-5
 28639  0141D2  006F FFCF FFE3     	movff	prodl,plusw1
 28640  0141D8  0EFC               	movlw	-4
 28641  0141DA  006F FFD3 FFE3     	movff	prodh,plusw1
 28642                           
 28643                           ;stkvar	_temp @ sp[(-13)+8]
 28644  0141E0  0EFB               	movlw	-5
 28645  0141E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28646  0141E8  0EFC               	movlw	-4
 28647  0141EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28648                           
 28649                           ;stkvar	_prod @ sp[(-13)+0]
 28650  0141F0  50E1               	movf	fsr1l,w,c
 28651  0141F2  0FF3               	addlw	-13
 28652  0141F4  6ED9               	movwf	fsr2l,c
 28653  0141F6  50E2               	movf	fsr1h,w,c
 28654  0141F8  6EDA               	movwf	fsr2h,c
 28655  0141FA  0EFF               	movlw	255
 28656  0141FC  22DA               	addwfc	fsr2h,f,c
 28657  0141FE  500B               	movf	(btemp+10)^0,w,c
 28658  014200  26DE               	addwf	postinc2,f,c
 28659  014202  500C               	movf	(btemp+11)^0,w,c
 28660  014204  22DE               	addwfc	postinc2,f,c
 28661  014206  0E00               	movlw	0
 28662  014208  22DE               	addwfc	postinc2,f,c
 28663  01420A  22DE               	addwfc	postinc2,f,c
 28664                           
 28665                           ;stkvar	_b @ sp[(-13)+-4]
 28666  01420C  0EF1               	movlw	241
 28667  01420E  24E1               	addwf	fsr1l,w,c
 28668  014210  6ED9               	movwf	fsr2l,c
 28669  014212  0EFF               	movlw	255
 28670  014214  20E2               	addwfc	fsr1h,w,c
 28671  014216  6EDA               	movwf	fsr2h,c
 28672  014218  50DF               	movf	indf2,w,c
 28673  01421A  6E0C               	movwf	(btemp+11)^0,c
 28674                           
 28675                           ;stkvar	_a @ sp[(-13)+-8]
 28676  01421C  0EEC               	movlw	236
 28677  01421E  24E1               	addwf	fsr1l,w,c
 28678  014220  6ED9               	movwf	fsr2l,c
 28679  014222  0EFF               	movlw	255
 28680  014224  20E2               	addwfc	fsr1h,w,c
 28681  014226  6EDA               	movwf	fsr2h,c
 28682  014228  50DF               	movf	indf2,w,c
 28683  01422A  020C               	mulwf	(btemp+11)^0,c
 28684                           
 28685                           ;stkvar	_temp @ sp[(-13)+8]
 28686  01422C  0EFB               	movlw	-5
 28687  01422E  006F FFCF FFE3     	movff	prodl,plusw1
 28688  014234  0EFC               	movlw	-4
 28689  014236  006F FFD3 FFE3     	movff	prodh,plusw1
 28690                           
 28691                           ;stkvar	_temp @ sp[(-13)+8]
 28692  01423C  0EFB               	movlw	-5
 28693  01423E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28694  014244  0EFC               	movlw	-4
 28695  014246  006F FF8C  F00C    	movff	plusw1,btemp+11
 28696                           
 28697                           ;stkvar	_prod @ sp[(-13)+0]
 28698  01424C  50E1               	movf	fsr1l,w,c
 28699  01424E  0FF3               	addlw	-13
 28700  014250  6ED9               	movwf	fsr2l,c
 28701  014252  50E2               	movf	fsr1h,w,c
 28702  014254  6EDA               	movwf	fsr2h,c
 28703  014256  0EFF               	movlw	255
 28704  014258  22DA               	addwfc	fsr2h,f,c
 28705  01425A  500B               	movf	(btemp+10)^0,w,c
 28706  01425C  26DE               	addwf	postinc2,f,c
 28707  01425E  500C               	movf	(btemp+11)^0,w,c
 28708  014260  22DE               	addwfc	postinc2,f,c
 28709  014262  0E00               	movlw	0
 28710  014264  22DE               	addwfc	postinc2,f,c
 28711  014266  22DE               	addwfc	postinc2,f,c
 28712                           
 28713                           ;stkvar	_b @ sp[(-13)+-4]
 28714  014268  0EF1               	movlw	241
 28715  01426A  24E1               	addwf	fsr1l,w,c
 28716  01426C  6ED9               	movwf	fsr2l,c
 28717  01426E  0EFF               	movlw	255
 28718  014270  20E2               	addwfc	fsr1h,w,c
 28719  014272  6EDA               	movwf	fsr2h,c
 28720  014274  50DF               	movf	indf2,w,c
 28721  014276  6E0C               	movwf	(btemp+11)^0,c
 28722                           
 28723                           ;stkvar	_a @ sp[(-13)+-8]
 28724  014278  0EED               	movlw	237
 28725  01427A  24E1               	addwf	fsr1l,w,c
 28726  01427C  6ED9               	movwf	fsr2l,c
 28727  01427E  0EFF               	movlw	255
 28728  014280  20E2               	addwfc	fsr1h,w,c
 28729  014282  6EDA               	movwf	fsr2h,c
 28730  014284  50DF               	movf	indf2,w,c
 28731  014286  020C               	mulwf	(btemp+11)^0,c
 28732                           
 28733                           ;stkvar	_temp @ sp[(-13)+8]
 28734  014288  0EFB               	movlw	-5
 28735  01428A  006F FFCF FFE3     	movff	prodl,plusw1
 28736  014290  0EFC               	movlw	-4
 28737  014292  006F FFD3 FFE3     	movff	prodh,plusw1
 28738                           
 28739                           ;stkvar	_temp @ sp[(-13)+8]
 28740  014298  0EFB               	movlw	-5
 28741  01429A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28742  0142A0  0EFC               	movlw	-4
 28743  0142A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28744  0142A8  500B               	movf	(btemp+10)^0,w,c
 28745  0142AA  6E05               	movwf	(btemp+4)^0,c
 28746  0142AC  500C               	movf	(btemp+11)^0,w,c
 28747  0142AE  6E06               	movwf	(btemp+5)^0,c
 28748  0142B0  6A07               	clrf	(btemp+6)^0,c
 28749  0142B2  6A08               	clrf	(btemp+7)^0,c
 28750  0142B4  0060  F01C  F008   	movff	btemp+6,btemp+7
 28751  0142BA  0060  F018  F007   	movff	btemp+5,btemp+6
 28752  0142C0  0060  F014  F006   	movff	btemp+4,btemp+5
 28753  0142C6  6A05               	clrf	(btemp+4)^0,c
 28754                           
 28755                           ;stkvar	_prod @ sp[(-13)+0]
 28756  0142C8  50E1               	movf	fsr1l,w,c
 28757  0142CA  0FF3               	addlw	-13
 28758  0142CC  6ED9               	movwf	fsr2l,c
 28759  0142CE  50E2               	movf	fsr1h,w,c
 28760  0142D0  6EDA               	movwf	fsr2h,c
 28761  0142D2  0EFF               	movlw	255
 28762  0142D4  22DA               	addwfc	fsr2h,f,c
 28763  0142D6  5005               	movf	(btemp+4)^0,w,c
 28764  0142D8  26DE               	addwf	postinc2,f,c
 28765  0142DA  5006               	movf	(btemp+5)^0,w,c
 28766  0142DC  22DE               	addwfc	postinc2,f,c
 28767  0142DE  5007               	movf	(btemp+6)^0,w,c
 28768  0142E0  22DE               	addwfc	postinc2,f,c
 28769  0142E2  5008               	movf	(btemp+7)^0,w,c
 28770  0142E4  22DE               	addwfc	postinc2,f,c
 28771                           
 28772                           ;stkvar	_prod @ sp[(-13)+0]
 28773  0142E6  50E1               	movf	fsr1l,w,c
 28774  0142E8  0FF3               	addlw	-13
 28775  0142EA  6ED9               	movwf	fsr2l,c
 28776  0142EC  50E2               	movf	fsr1h,w,c
 28777  0142EE  6EDA               	movwf	fsr2h,c
 28778  0142F0  0EFF               	movlw	255
 28779  0142F2  22DA               	addwfc	fsr2h,f,c
 28780                           
 28781                           ;stkvar	_grs @ sp[(-13)+4]
 28782  0142F4  0EFA               	movlw	250
 28783  0142F6  24E1               	addwf	fsr1l,w,c
 28784  0142F8  6EE9               	movwf	fsr0l,c
 28785  0142FA  0EFF               	movlw	255
 28786  0142FC  20E2               	addwfc	fsr1h,w,c
 28787  0142FE  6EEA               	movwf	fsr0h,c
 28788  014300  50EF               	movf	indf0,w,c
 28789  014302  26DE               	addwf	postinc2,f,c
 28790  014304  0E00               	movlw	0
 28791  014306  22DE               	addwfc	postinc2,f,c
 28792  014308  22DE               	addwfc	postinc2,f,c
 28793  01430A  22DE               	addwfc	postinc2,f,c
 28794                           
 28795                           ;stkvar	_grs @ sp[(-13)+4]
 28796  01430C  50E1               	movf	fsr1l,w,c
 28797  01430E  0FF7               	addlw	-9
 28798  014310  6ED9               	movwf	fsr2l,c
 28799  014312  50E2               	movf	fsr1h,w,c
 28800  014314  6EDA               	movwf	fsr2h,c
 28801  014316  0EFF               	movlw	255
 28802  014318  22DA               	addwfc	fsr2h,f,c
 28803  01431A  0E08               	movlw	8
 28804  01431C                     u6875:
 28805  01431C  90D8               	bcf	status,0,c
 28806  01431E  36DE               	rlcf	postinc2,f,c
 28807  014320  36DE               	rlcf	postinc2,f,c
 28808  014322  36DE               	rlcf	postinc2,f,c
 28809  014324  36DD               	rlcf	postdec2,f,c
 28810  014326  52DD               	movf	postdec2,f,c
 28811  014328  52DD               	movf	postdec2,f,c
 28812  01432A  2EE8               	decfsz	wreg,f,c
 28813  01432C  D7F7               	goto	u6875
 28814  01432E  0E82               	movlw	130
 28815  014330  6E0B               	movwf	(btemp+10)^0,c
 28816  014332  0EFF               	movlw	255
 28817  014334  6E0C               	movwf	(btemp+11)^0,c
 28818                           
 28819                           ;stkvar	_bexp @ sp[(-13)+10]
 28820  014336  0EFD               	movlw	-3
 28821  014338  50E3               	movf	plusw1,w,c
 28822  01433A  6E09               	movwf	(btemp+8)^0,c
 28823  01433C  6A0A               	clrf	(btemp+9)^0,c
 28824                           
 28825                           ;stkvar	_aexp @ sp[(-13)+11]
 28826  01433E  0EFE               	movlw	-2
 28827  014340  50E3               	movf	plusw1,w,c
 28828  014342  2609               	addwf	(btemp+8)^0,f,c
 28829  014344  0E00               	movlw	0
 28830  014346  220A               	addwfc	(btemp+9)^0,f,c
 28831  014348  500B               	movf	(btemp+10)^0,w,c
 28832  01434A  2609               	addwf	(btemp+8)^0,f,c
 28833  01434C  500C               	movf	(btemp+11)^0,w,c
 28834  01434E  220A               	addwfc	(btemp+9)^0,f,c
 28835                           
 28836                           ;stkvar	_temp @ sp[(-13)+8]
 28837  014350  0EFB               	movlw	-5
 28838  014352  0060  F027  FFE3   	movff	btemp+8,plusw1
 28839  014358  0EFC               	movlw	-4
 28840  01435A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28841  014360  D021               	goto	l8448
 28842  014362                     l8438:
 28843                           
 28844                           ;stkvar	_prod @ sp[(-13)+0]
 28845  014362  90D8               	bcf	status,0,c
 28846  014364  0EF3               	movlw	-13
 28847  014366  36E3               	rlcf	plusw1,f,c
 28848  014368  0EF4               	movlw	-12
 28849  01436A  36E3               	rlcf	plusw1,f,c
 28850  01436C  0EF5               	movlw	-11
 28851  01436E  36E3               	rlcf	plusw1,f,c
 28852  014370  0EF6               	movlw	-10
 28853  014372  36E3               	rlcf	plusw1,f,c
 28854                           
 28855                           ;stkvar	_grs @ sp[(-13)+4]
 28856  014374  0EFA               	movlw	-6
 28857  014376  AEE3               	btfss	plusw1,7,c
 28858  014378  D002               	goto	l8444
 28859                           
 28860                           ;stkvar	_prod @ sp[(-13)+0]
 28861  01437A  0EF3               	movlw	-13
 28862  01437C  80E3               	bsf	plusw1,0,c
 28863  01437E                     l8444:
 28864                           
 28865                           ;stkvar	_grs @ sp[(-13)+4]
 28866  01437E  90D8               	bcf	status,0,c
 28867  014380  0EF7               	movlw	-9
 28868  014382  36E3               	rlcf	plusw1,f,c
 28869  014384  0EF8               	movlw	-8
 28870  014386  36E3               	rlcf	plusw1,f,c
 28871  014388  0EF9               	movlw	-7
 28872  01438A  36E3               	rlcf	plusw1,f,c
 28873  01438C  0EFA               	movlw	-6
 28874  01438E  36E3               	rlcf	plusw1,f,c
 28875                           
 28876                           ;stkvar	_temp @ sp[(-13)+8]
 28877  014390  50E1               	movf	fsr1l,w,c
 28878  014392  0FFB               	addlw	-5
 28879  014394  6ED9               	movwf	fsr2l,c
 28880  014396  50E2               	movf	fsr1h,w,c
 28881  014398  6EDA               	movwf	fsr2h,c
 28882  01439A  0EFF               	movlw	255
 28883  01439C  22DA               	addwfc	fsr2h,f,c
 28884  01439E  06DE               	decf	postinc2,f,c
 28885  0143A0  0E00               	movlw	0
 28886  0143A2  5ADD               	subwfb	postdec2,f,c
 28887  0143A4                     l8448:
 28888                           
 28889                           ;stkvar	_prod @ sp[(-13)+0]
 28890  0143A4  0EF5               	movlw	-11
 28891  0143A6  AEE3               	btfss	plusw1,7,c
 28892  0143A8  D7DC               	goto	l8438
 28893                           
 28894                           ;stkvar	_aexp @ sp[(-13)+11]
 28895  0143AA  0EFE               	movlw	-2
 28896  0143AC  6AE3               	clrf	plusw1,c
 28897                           
 28898                           ;stkvar	_grs @ sp[(-13)+4]
 28899  0143AE  0EFA               	movlw	-6
 28900  0143B0  AEE3               	btfss	plusw1,7,c
 28901  0143B2  D020               	goto	l8462
 28902                           
 28903                           ;stkvar	_grs @ sp[(-13)+4]
 28904  0143B4  50E1               	movf	fsr1l,w,c
 28905  0143B6  0FF7               	addlw	-9
 28906  0143B8  6ED9               	movwf	fsr2l,c
 28907  0143BA  50E2               	movf	fsr1h,w,c
 28908  0143BC  6EDA               	movwf	fsr2h,c
 28909  0143BE  0EFF               	movlw	255
 28910  0143C0  22DA               	addwfc	fsr2h,f,c
 28911  0143C2  0EFF               	movlw	255
 28912  0143C4  14DE               	andwf	postinc2,w,c
 28913  0143C6  6E09               	movwf	(btemp+8)^0,c
 28914  0143C8  0EFF               	movlw	255
 28915  0143CA  14DE               	andwf	postinc2,w,c
 28916  0143CC  6E0A               	movwf	(btemp+9)^0,c
 28917  0143CE  0EFF               	movlw	255
 28918  0143D0  14DE               	andwf	postinc2,w,c
 28919  0143D2  6E0B               	movwf	(btemp+10)^0,c
 28920  0143D4  0E7F               	movlw	127
 28921  0143D6  14DE               	andwf	postinc2,w,c
 28922  0143D8  6E0C               	movwf	(btemp+11)^0,c
 28923  0143DA  5009               	movf	(btemp+8)^0,w,c
 28924  0143DC  100A               	iorwf	(btemp+9)^0,w,c
 28925  0143DE  100B               	iorwf	(btemp+10)^0,w,c
 28926  0143E0  100C               	iorwf	(btemp+11)^0,w,c
 28927  0143E2  B4D8               	btfsc	status,2,c
 28928  0143E4  D004               	goto	l8458
 28929  0143E6                     u6910:
 28930                           
 28931                           ;stkvar	_aexp @ sp[(-13)+11]
 28932  0143E6  0EFE               	movlw	-2
 28933  0143E8  6AE3               	clrf	plusw1,c
 28934  0143EA  2AE3               	incf	plusw1,f,c
 28935  0143EC  D003               	goto	l8462
 28936  0143EE                     l8458:
 28937                           
 28938                           ;stkvar	_prod @ sp[(-13)+0]
 28939  0143EE  0EF3               	movlw	-13
 28940  0143F0  B0E3               	btfsc	plusw1,0,c
 28941  0143F2  D7F9               	goto	u6910
 28942  0143F4                     l8462:
 28943                           
 28944                           ;stkvar	_aexp @ sp[(-13)+11]
 28945  0143F4  0EFE               	movlw	-2
 28946  0143F6  50E3               	movf	plusw1,w,c
 28947  0143F8  B4D8               	btfsc	status,2,c
 28948  0143FA  D036               	goto	l8472
 28949                           
 28950                           ;stkvar	_prod @ sp[(-13)+0]
 28951  0143FC  50E1               	movf	fsr1l,w,c
 28952  0143FE  0FF3               	addlw	-13
 28953  014400  6ED9               	movwf	fsr2l,c
 28954  014402  50E2               	movf	fsr1h,w,c
 28955  014404  6EDA               	movwf	fsr2h,c
 28956  014406  0EFF               	movlw	255
 28957  014408  22DA               	addwfc	fsr2h,f,c
 28958  01440A  2ADE               	incf	postinc2,f,c
 28959  01440C  0E00               	movlw	0
 28960  01440E  22DE               	addwfc	postinc2,f,c
 28961  014410  22DE               	addwfc	postinc2,f,c
 28962  014412  22DE               	addwfc	postinc2,f,c
 28963                           
 28964                           ;stkvar	_prod @ sp[(-13)+0]
 28965  014414  0EF6               	movlw	-10
 28966  014416  A0E3               	btfss	plusw1,0,c
 28967  014418  D027               	goto	l8472
 28968  01441A  0E01               	movlw	1
 28969  01441C  6E0C               	movwf	(btemp+11)^0,c
 28970                           
 28971                           ;stkvar	_prod @ sp[(-13)+0]
 28972  01441E  50E1               	movf	fsr1l,w,c
 28973  014420  0FF3               	addlw	-13
 28974  014422  6ED9               	movwf	fsr2l,c
 28975  014424  50E2               	movf	fsr1h,w,c
 28976  014426  6EDA               	movwf	fsr2h,c
 28977  014428  0EFF               	movlw	255
 28978  01442A  22DA               	addwfc	fsr2h,f,c
 28979  01442C  280C               	incf	(btemp+11)^0,w,c
 28980  01442E  52DE               	movf	postinc2,f,c
 28981  014430  D008               	goto	u6950
 28982  014432                     u6955:
 28983  014432  52DE               	movf	postinc2,f,c
 28984  014434  90D8               	bcf	status,0,c
 28985  014436  BEDC               	btfsc	preinc2,7,c
 28986  014438  80D8               	bsf	status,0,c
 28987  01443A  32DD               	rrcf	postdec2,f,c
 28988  01443C  32DD               	rrcf	postdec2,f,c
 28989  01443E  32DD               	rrcf	postdec2,f,c
 28990  014440  32DE               	rrcf	postinc2,f,c
 28991  014442                     u6950:
 28992  014442  2EE8               	decfsz	wreg,f,c
 28993  014444  D7F6               	goto	u6955
 28994                           
 28995                           ;stkvar	_temp @ sp[(-13)+8]
 28996  014446  0EFB               	movlw	-5
 28997  014448  50E3               	movf	plusw1,w,c
 28998  01444A  0F01               	addlw	1
 28999  01444C  6E01               	movwf	btemp^0,c
 29000  01444E  0EFB               	movlw	-5
 29001  014450  0060  F007  FFE3   	movff	btemp,plusw1
 29002  014456  6A01               	clrf	btemp^0,c
 29003  014458  0EFC               	movlw	-4
 29004  01445A  50E3               	movf	plusw1,w,c
 29005  01445C  2001               	addwfc	btemp^0,w,c
 29006  01445E  6E01               	movwf	btemp^0,c
 29007  014460  0EFC               	movlw	-4
 29008  014462  0060  F007  FFE3   	movff	btemp,plusw1
 29009  014468                     l8472:
 29010                           
 29011                           ;stkvar	_temp @ sp[(-13)+8]
 29012  014468  0EFC               	movlw	-4
 29013  01446A  BEE3               	btfsc	plusw1,7,c
 29014  01446C  D020               	goto	l8476
 29015  01446E  0EFC               	movlw	-4
 29016  014470  50E3               	movf	plusw1,w,c
 29017  014472  E104               	bnz	u6960
 29018  014474  0EFB               	movlw	-5
 29019  014476  28E3               	incf	plusw1,w,c
 29020  014478  A0D8               	btfss	status,0,c
 29021  01447A  D019               	goto	l8476
 29022  01447C                     u6960:
 29023  01447C  0E00               	movlw	0
 29024  01447E  6E09               	movwf	(btemp+8)^0,c
 29025  014480  0E00               	movlw	0
 29026  014482  6E0A               	movwf	(btemp+9)^0,c
 29027  014484  0E80               	movlw	128
 29028  014486  6E0B               	movwf	(btemp+10)^0,c
 29029  014488  0E7F               	movlw	127
 29030  01448A  6E0C               	movwf	(btemp+11)^0,c
 29031                           
 29032                           ;stkvar	_prod @ sp[(-13)+0]
 29033  01448C  0EF3               	movlw	-13
 29034  01448E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29035  014494  0EF4               	movlw	-12
 29036  014496  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29037  01449C  0EF5               	movlw	-11
 29038  01449E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29039  0144A4  0EF6               	movlw	-10
 29040  0144A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 29041  0144AC  D044               	goto	l8492
 29042  0144AE                     l8476:
 29043                           
 29044                           ;stkvar	_temp @ sp[(-13)+8]
 29045  0144AE  0EFC               	movlw	-4
 29046  0144B0  BEE3               	btfsc	plusw1,7,c
 29047  0144B2  D007               	goto	u6970
 29048  0144B4  0EFC               	movlw	-4
 29049  0144B6  50E3               	movf	plusw1,w,c
 29050  0144B8  E10F               	bnz	l8482
 29051  0144BA  0EFB               	movlw	-5
 29052  0144BC  04E3               	decf	plusw1,w,c
 29053  0144BE  B0D8               	btfsc	status,0,c
 29054  0144C0  D00B               	goto	l8482
 29055  0144C2                     u6970:
 29056                           
 29057                           ;stkvar	_prod @ sp[(-13)+0]
 29058  0144C2  0EF3               	movlw	-13
 29059  0144C4  6AE3               	clrf	plusw1,c
 29060  0144C6  0EF4               	movlw	-12
 29061  0144C8  6AE3               	clrf	plusw1,c
 29062  0144CA  0EF5               	movlw	-11
 29063  0144CC  6AE3               	clrf	plusw1,c
 29064  0144CE  0EF6               	movlw	-10
 29065  0144D0  6AE3               	clrf	plusw1,c
 29066                           
 29067                           ;stkvar	_sign @ sp[(-13)+12]
 29068  0144D2  0EFF               	movlw	-1
 29069  0144D4  6AE3               	clrf	plusw1,c
 29070  0144D6  D02F               	goto	l8492
 29071  0144D8                     l8482:
 29072                           
 29073                           ;stkvar	_temp @ sp[(-13)+8]
 29074                           ;stkvar	_bexp @ sp[(-13)+10]
 29075  0144D8  0EFB               	movlw	-5
 29076  0144DA  006F FF8C  F001    	movff	plusw1,btemp
 29077  0144E0  0EFD               	movlw	-3
 29078  0144E2  0060  F007  FFE3   	movff	btemp,plusw1
 29079                           
 29080                           ;stkvar	_prod @ sp[(-13)+0]
 29081  0144E8  50E1               	movf	fsr1l,w,c
 29082  0144EA  0FF3               	addlw	-13
 29083  0144EC  6ED9               	movwf	fsr2l,c
 29084  0144EE  50E2               	movf	fsr1h,w,c
 29085  0144F0  6EDA               	movwf	fsr2h,c
 29086  0144F2  0EFF               	movlw	255
 29087  0144F4  22DA               	addwfc	fsr2h,f,c
 29088  0144F6  0EFF               	movlw	255
 29089  0144F8  16DE               	andwf	postinc2,f,c
 29090  0144FA  0EFF               	movlw	255
 29091  0144FC  16DE               	andwf	postinc2,f,c
 29092  0144FE  0E7F               	movlw	127
 29093  014500  16DE               	andwf	postinc2,f,c
 29094  014502  0E00               	movlw	0
 29095  014504  16DE               	andwf	postinc2,f,c
 29096                           
 29097                           ;stkvar	_bexp @ sp[(-13)+10]
 29098  014506  0EFD               	movlw	-3
 29099  014508  A0E3               	btfss	plusw1,0,c
 29100  01450A  D008               	goto	l8490
 29101                           
 29102                           ;stkvar	_prod @ sp[(-13)+0]
 29103  01450C  0EF5               	movlw	245
 29104  01450E  24E1               	addwf	fsr1l,w,c
 29105  014510  6ED9               	movwf	fsr2l,c
 29106  014512  0EFF               	movlw	255
 29107  014514  20E2               	addwfc	fsr1h,w,c
 29108  014516  6EDA               	movwf	fsr2h,c
 29109  014518  0E00               	movlw	0
 29110  01451A  8EDB               	bsf	plusw2,7,c
 29111  01451C                     l8490:
 29112                           
 29113                           ;stkvar	_prod @ sp[(-13)+0]
 29114  01451C  0EF6               	movlw	246
 29115  01451E  24E1               	addwf	fsr1l,w,c
 29116  014520  6ED9               	movwf	fsr2l,c
 29117  014522  0EFF               	movlw	255
 29118  014524  20E2               	addwfc	fsr1h,w,c
 29119  014526  6EDA               	movwf	fsr2h,c
 29120                           
 29121                           ;stkvar	_bexp @ sp[(-13)+10]
 29122  014528  0EFD               	movlw	-3
 29123  01452A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29124  014530  90D8               	bcf	status,0,c
 29125  014532  300C               	rrcf	(btemp+11)^0,w,c
 29126  014534  6EDF               	movwf	indf2,c
 29127  014536                     l8492:
 29128                           
 29129                           ;stkvar	_sign @ sp[(-13)+12]
 29130  014536  0EFF               	movlw	-1
 29131  014538  006F FF8C  F00C    	movff	plusw1,btemp+11
 29132                           
 29133                           ;stkvar	_prod @ sp[(-13)+0]
 29134  01453E  0EF6               	movlw	246
 29135  014540  24E1               	addwf	fsr1l,w,c
 29136  014542  6ED9               	movwf	fsr2l,c
 29137  014544  0EFF               	movlw	255
 29138  014546  20E2               	addwfc	fsr1h,w,c
 29139  014548  6EDA               	movwf	fsr2h,c
 29140  01454A  500C               	movf	(btemp+11)^0,w,c
 29141  01454C  12DF               	iorwf	indf2,f,c
 29142                           
 29143                           ;stkvar	_prod @ sp[(-13)+0]
 29144  01454E  0EF3               	movlw	-13
 29145  014550  006F FF8C  F001    	movff	plusw1,btemp
 29146  014556  0EF4               	movlw	-12
 29147  014558  006F FF8C  F002    	movff	plusw1,btemp+1
 29148  01455E  0EF5               	movlw	-11
 29149  014560  006F FF8C  F003    	movff	plusw1,btemp+2
 29150  014566  0EF6               	movlw	-10
 29151  014568  006F FF8C  F004    	movff	plusw1,btemp+3
 29152  01456E                     l3013:
 29153                           
 29154                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29155  01456E  0EEB               	movlw	235
 29156  014570  26E1               	addwf	fsr1l,f,c
 29157  014572  0EFF               	movlw	255
 29158  014574  22E2               	addwfc	fsr1h,f,c
 29159  014576  0012               	return		;funcret
 29160  014578                     __end_of___flmul:
 29161                           	opt callstack 0
 29162                           
 29163 ;; *************** function _SYSTEM_Initialize *****************
 29164 ;; Defined at:
 29165 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29166 ;; Parameters:    Size  Location     Type
 29167 ;;		None
 29168 ;; Auto vars:     Size  Location     Type
 29169 ;;		None
 29170 ;; Return value:  Size  Location     Type
 29171 ;;                  1  [STACK] void 
 29172 ;; Registers used:
 29173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29174 ;; Tracked objects:
 29175 ;;		On entry : 0/0
 29176 ;;		On exit  : 3F/3C
 29177 ;;		Unchanged: 0/0
 29178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29183 ;;Total ram usage:        0 bytes
 29184 ;; Hardware stack levels used:    1
 29185 ;; Hardware stack levels required when called:   17
 29186 ;; This function calls:
 29187 ;;		_ADCC_Initialize
 29188 ;;		_CLKREF_Initialize
 29189 ;;		_DMA1_Initialize
 29190 ;;		_DMA2_Initialize
 29191 ;;		_EXT_INT_Initialize
 29192 ;;		_FVR_Initialize
 29193 ;;		_INTERRUPT_Initialize
 29194 ;;		_OSCILLATOR_Initialize
 29195 ;;		_PIN_MANAGER_Initialize
 29196 ;;		_PMD_Initialize
 29197 ;;		_PWM8_Initialize
 29198 ;;		_SPI1_Initialize
 29199 ;;		_TMR2_Initialize
 29200 ;;		_TMR3_Initialize
 29201 ;;		_TMR5_Initialize
 29202 ;;		_TMR6_Initialize
 29203 ;;		_UART1_Initialize
 29204 ;;		_UART2_Initialize
 29205 ;; This function is called by:
 29206 ;;		_main
 29207 ;; This function uses a reentrant model
 29208 ;;
 29209                           
 29210                           	psect	text109
 29211  01B406                     __ptext109:
 29212                           	opt callstack 0
 29213  01B406                     _SYSTEM_Initialize:
 29214                           	opt callstack 13
 29215                           
 29216                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29217                           
 29218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29219                           ;incstack = 0
 29220  01B406  ECE7  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 29221                           
 29222                           ; BSR set to: 57
 29223                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29224  01B40A  EC2C  F0E0         	call	_PMD_Initialize	;wreg free
 29225                           
 29226                           ; BSR set to: 57
 29227                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29228  01B40E  EC72  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 29229                           
 29230                           ; BSR set to: 58
 29231                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29232  01B412  EC21  F0E0         	call	_OSCILLATOR_Initialize	;wreg free
 29233                           
 29234                           ; BSR set to: 57
 29235                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29236  01B416  ECB7  F0E0         	call	_FVR_Initialize	;wreg free
 29237                           
 29238                           ; BSR set to: 62
 29239                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29240  01B41A  EC7D  F0D7         	call	_ADCC_Initialize	;wreg free
 29241                           
 29242                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 29243  01B41E  EC16  F0E0         	call	_PWM8_Initialize	;wreg free
 29244                           
 29245                           ; BSR set to: 63
 29246                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 29247  01B422  ECFF  F0DF         	call	_TMR2_Initialize	;wreg free
 29248                           
 29249                           ; BSR set to: 57
 29250                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29251  01B426  ECAB  F0DC         	call	_EXT_INT_Initialize	;wreg free
 29252                           
 29253                           ; BSR set to: 57
 29254                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29255  01B42A  EC7E  F0DD         	call	_TMR6_Initialize	;wreg free
 29256                           
 29257                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29258  01B42E  EC94  F0DA         	call	_TMR3_Initialize	;wreg free
 29259                           
 29260                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29261  01B432  EC70  F0DA         	call	_TMR5_Initialize	;wreg free
 29262                           
 29263                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29264  01B436  EC4C  F0DA         	call	_UART1_Initialize	;wreg free
 29265                           
 29266                           ; BSR set to: 57
 29267                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29268  01B43A  ECAE  F0D8         	call	_UART2_Initialize	;wreg free
 29269                           
 29270                           ; BSR set to: 57
 29271                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29272  01B43E  EC0B  F0E0         	call	_SPI1_Initialize	;wreg free
 29273                           
 29274                           ; BSR set to: 61
 29275                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29276  01B442  EC38  F0D9         	call	_DMA2_Initialize	;wreg free
 29277                           
 29278                           ; BSR set to: 59
 29279                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29280  01B446  EC48  F0D7         	call	_DMA1_Initialize	;wreg free
 29281                           
 29282                           ; BSR set to: 59
 29283                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29284  01B44A  EC8B  F0E0         	call	_CLKREF_Initialize	;wreg free
 29285                           
 29286                           ; BSR set to: 60
 29287                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29288  01B44E  0012               	return		;funcret
 29289  01B450                     __end_of_SYSTEM_Initialize:
 29290                           	opt callstack 0
 29291                           
 29292 ;; *************** function _UART2_Initialize *****************
 29293 ;; Defined at:
 29294 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29295 ;; Parameters:    Size  Location     Type
 29296 ;;		None
 29297 ;; Auto vars:     Size  Location     Type
 29298 ;;		None
 29299 ;; Return value:  Size  Location     Type
 29300 ;;                  1  [STACK] void 
 29301 ;; Registers used:
 29302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29303 ;; Tracked objects:
 29304 ;;		On entry : 3F/39
 29305 ;;		On exit  : 3F/39
 29306 ;;		Unchanged: 0/0
 29307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29312 ;;Total ram usage:        0 bytes
 29313 ;; Hardware stack levels used:    1
 29314 ;; Hardware stack levels required when called:   16
 29315 ;; This function calls:
 29316 ;;		_UART2_SetRxInterruptHandler
 29317 ;;		_UART2_SetTxInterruptHandler
 29318 ;; This function is called by:
 29319 ;;		_SYSTEM_Initialize
 29320 ;; This function uses a reentrant model
 29321 ;;
 29322                           
 29323                           	psect	text110
 29324  01B15C                     __ptext110:
 29325                           	opt callstack 0
 29326  01B15C                     _UART2_Initialize:
 29327                           	opt callstack 13
 29328                           
 29329                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29330                           
 29331                           ; BSR set to: 60
 29332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29333                           ;incstack = 0
 29334  01B15C  0139               	movlb	57	; () banked
 29335  01B15E  9596               	bcf	150,2,b	;volatile
 29336                           
 29337                           ; BSR set to: 57
 29338                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29339  01B160  0EE0               	movlw	low _UART2_Receive_ISR
 29340  01B162  6EE6               	movwf	postinc1,c
 29341  01B164  0EBE               	movlw	high _UART2_Receive_ISR
 29342  01B166  6EE6               	movwf	postinc1,c
 29343  01B168  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29344  01B16A  6EE6               	movwf	postinc1,c
 29345  01B16C  ECCF  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29346                           
 29347                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29348  01B170  0139               	movlb	57	; () banked
 29349  01B172  9796               	bcf	150,3,b	;volatile
 29350                           
 29351                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29352  01B174  0ED0               	movlw	low _UART2_Transmit_ISR
 29353  01B176  6EE6               	movwf	postinc1,c
 29354  01B178  0EBA               	movlw	high _UART2_Transmit_ISR
 29355  01B17A  6EE6               	movwf	postinc1,c
 29356  01B17C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29357  01B17E  6EE6               	movwf	postinc1,c
 29358  01B180  ECBB  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29359                           
 29360                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29361  01B184  013D               	movlb	61	; () banked
 29362  01B186  6BD4               	clrf	212,b	;volatile
 29363                           
 29364                           ; BSR set to: 61
 29365                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29366  01B188  6BD6               	clrf	214,b	;volatile
 29367                           
 29368                           ; BSR set to: 61
 29369                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29370  01B18A  6BD8               	clrf	216,b	;volatile
 29371                           
 29372                           ; BSR set to: 61
 29373                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29374  01B18C  0EB0               	movlw	176
 29375  01B18E  6FDA               	movwf	218,b	;volatile
 29376                           
 29377                           ; BSR set to: 61
 29378                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29379  01B190  0E80               	movlw	128
 29380  01B192  6FDB               	movwf	219,b	;volatile
 29381                           
 29382                           ; BSR set to: 61
 29383                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29384  01B194  6BDC               	clrf	220,b	;volatile
 29385                           
 29386                           ; BSR set to: 61
 29387                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29388  01B196  0E82               	movlw	130
 29389  01B198  6FDD               	movwf	221,b	;volatile
 29390                           
 29391                           ; BSR set to: 61
 29392                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29393  01B19A  0E06               	movlw	6
 29394  01B19C  6FDE               	movwf	222,b	;volatile
 29395                           
 29396                           ; BSR set to: 61
 29397                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29398  01B19E  6BDF               	clrf	223,b	;volatile
 29399                           
 29400                           ; BSR set to: 61
 29401                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29402  01B1A0  6BE0               	clrf	224,b	;volatile
 29403                           
 29404                           ; BSR set to: 61
 29405                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29406  01B1A2  6BE1               	clrf	225,b	;volatile
 29407                           
 29408                           ; BSR set to: 61
 29409                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29410  01B1A4  6BE2               	clrf	226,b	;volatile
 29411                           
 29412                           ; BSR set to: 61
 29413                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29414  01B1A6  0100               	movlb	0	; () banked
 29415  01B1A8  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29416                           
 29417                           ; BSR set to: 0
 29418                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29419  01B1AA  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29423  01B1AC  0E40               	movlw	64
 29424  01B1AE  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29425                           
 29426                           ; BSR set to: 0
 29427                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29428  01B1B0  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29429                           
 29430                           ; BSR set to: 0
 29431                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29432  01B1B2  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29433                           
 29434                           ; BSR set to: 0
 29435                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29436  01B1B4  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29440  01B1B6  0139               	movlb	57	; () banked
 29441  01B1B8  8596               	bsf	150,2,b	;volatile
 29442                           
 29443                           ; BSR set to: 57
 29444                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29445  01B1BA  0012               	return		;funcret
 29446  01B1BC                     __end_of_UART2_Initialize:
 29447                           	opt callstack 0
 29448                           
 29449 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29450 ;; Defined at:
 29451 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29452 ;; Parameters:    Size  Location     Type
 29453 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29454 ;;		 -> UART2_Transmit_ISR(1), 
 29455 ;; Auto vars:     Size  Location     Type
 29456 ;;		None
 29457 ;; Return value:  Size  Location     Type
 29458 ;;                  1  [STACK] void 
 29459 ;; Registers used:
 29460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29461 ;; Tracked objects:
 29462 ;;		On entry : 3F/39
 29463 ;;		On exit  : 0/0
 29464 ;;		Unchanged: 0/0
 29465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29470 ;;Total ram usage:        0 bytes
 29471 ;; Hardware stack levels used:    1
 29472 ;; Hardware stack levels required when called:   15
 29473 ;; This function calls:
 29474 ;;		Nothing
 29475 ;; This function is called by:
 29476 ;;		_UART2_Initialize
 29477 ;; This function uses a reentrant model
 29478 ;;
 29479                           
 29480                           	psect	text111
 29481  01BB76                     __ptext111:
 29482                           	opt callstack 0
 29483  01BB76                     _UART2_SetTxInterruptHandler:
 29484                           	opt callstack 13
 29485                           
 29486                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29487                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29488                           
 29489                           ; BSR set to: 57
 29490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29491                           ;incstack = 0
 29492  01BB76  50E1               	movf	fsr1l,w,c
 29493  01BB78  0FFD               	addlw	-3
 29494  01BB7A  6ED9               	movwf	fsr2l,c
 29495  01BB7C  50E2               	movf	fsr1h,w,c
 29496  01BB7E  6EDA               	movwf	fsr2h,c
 29497  01BB80  0EFF               	movlw	255
 29498  01BB82  22DA               	addwfc	fsr2h,f,c
 29499  01BB84  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29500  01BB8A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29501  01BB90  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29502                           
 29503                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29504  01BB96  52E5               	movf	postdec1,f,c
 29505  01BB98  52E5               	movf	postdec1,f,c
 29506  01BB9A  52E5               	movf	postdec1,f,c
 29507  01BB9C  0012               	return		;funcret
 29508  01BB9E                     __end_of_UART2_SetTxInterruptHandler:
 29509                           	opt callstack 0
 29510                           
 29511 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29512 ;; Defined at:
 29513 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29514 ;; Parameters:    Size  Location     Type
 29515 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29516 ;;		 -> UART2_Receive_ISR(1), 
 29517 ;; Auto vars:     Size  Location     Type
 29518 ;;		None
 29519 ;; Return value:  Size  Location     Type
 29520 ;;                  1  [STACK] void 
 29521 ;; Registers used:
 29522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29523 ;; Tracked objects:
 29524 ;;		On entry : 3F/39
 29525 ;;		On exit  : 0/0
 29526 ;;		Unchanged: 0/0
 29527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29532 ;;Total ram usage:        0 bytes
 29533 ;; Hardware stack levels used:    1
 29534 ;; Hardware stack levels required when called:   15
 29535 ;; This function calls:
 29536 ;;		Nothing
 29537 ;; This function is called by:
 29538 ;;		_UART2_Initialize
 29539 ;; This function uses a reentrant model
 29540 ;;
 29541                           
 29542                           	psect	text112
 29543  01BB9E                     __ptext112:
 29544                           	opt callstack 0
 29545  01BB9E                     _UART2_SetRxInterruptHandler:
 29546                           	opt callstack 13
 29547                           
 29548                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29549                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29550                           
 29551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29552                           ;incstack = 0
 29553  01BB9E  50E1               	movf	fsr1l,w,c
 29554  01BBA0  0FFD               	addlw	-3
 29555  01BBA2  6ED9               	movwf	fsr2l,c
 29556  01BBA4  50E2               	movf	fsr1h,w,c
 29557  01BBA6  6EDA               	movwf	fsr2h,c
 29558  01BBA8  0EFF               	movlw	255
 29559  01BBAA  22DA               	addwfc	fsr2h,f,c
 29560  01BBAC  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29561  01BBB2  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29562  01BBB8  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29563                           
 29564                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29565  01BBBE  52E5               	movf	postdec1,f,c
 29566  01BBC0  52E5               	movf	postdec1,f,c
 29567  01BBC2  52E5               	movf	postdec1,f,c
 29568  01BBC4  0012               	return		;funcret
 29569  01BBC6                     __end_of_UART2_SetRxInterruptHandler:
 29570                           	opt callstack 0
 29571                           
 29572 ;; *************** function _UART1_Initialize *****************
 29573 ;; Defined at:
 29574 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;		None
 29577 ;; Auto vars:     Size  Location     Type
 29578 ;;		None
 29579 ;; Return value:  Size  Location     Type
 29580 ;;                  1  [STACK] void 
 29581 ;; Registers used:
 29582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29583 ;; Tracked objects:
 29584 ;;		On entry : 0/39
 29585 ;;		On exit  : 3F/39
 29586 ;;		Unchanged: 0/0
 29587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29592 ;;Total ram usage:        0 bytes
 29593 ;; Hardware stack levels used:    1
 29594 ;; Hardware stack levels required when called:   16
 29595 ;; This function calls:
 29596 ;;		_UART1_SetRxInterruptHandler
 29597 ;; This function is called by:
 29598 ;;		_SYSTEM_Initialize
 29599 ;; This function uses a reentrant model
 29600 ;;
 29601                           
 29602                           	psect	text113
 29603  01B498                     __ptext113:
 29604                           	opt callstack 0
 29605  01B498                     _UART1_Initialize:
 29606                           	opt callstack 13
 29607                           
 29608                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29609                           
 29610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29611                           ;incstack = 0
 29612  01B498  0139               	movlb	57	; () banked
 29613  01B49A  9793               	bcf	147,3,b	;volatile
 29614                           
 29615                           ; BSR set to: 57
 29616                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29617  01B49C  0E78               	movlw	low _UART1_Receive_ISR
 29618  01B49E  6EE6               	movwf	postinc1,c
 29619  01B4A0  0EBF               	movlw	high _UART1_Receive_ISR
 29620  01B4A2  6EE6               	movwf	postinc1,c
 29621  01B4A4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29622  01B4A6  6EE6               	movwf	postinc1,c
 29623  01B4A8  ECE3  F0DD         	call	_UART1_SetRxInterruptHandler	;wreg free
 29624                           
 29625                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29626  01B4AC  013D               	movlb	61	; () banked
 29627  01B4AE  6BEC               	clrf	236,b	;volatile
 29628                           
 29629                           ; BSR set to: 61
 29630                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29631  01B4B0  6BED               	clrf	237,b	;volatile
 29632                           
 29633                           ; BSR set to: 61
 29634                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29635  01B4B2  6BEE               	clrf	238,b	;volatile
 29636                           
 29637                           ; BSR set to: 61
 29638                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29639  01B4B4  6BEF               	clrf	239,b	;volatile
 29640                           
 29641                           ; BSR set to: 61
 29642                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29643  01B4B6  6BF0               	clrf	240,b	;volatile
 29644                           
 29645                           ; BSR set to: 61
 29646                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29647  01B4B8  6BF1               	clrf	241,b	;volatile
 29648                           
 29649                           ; BSR set to: 61
 29650                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29651  01B4BA  0EB0               	movlw	176
 29652  01B4BC  6FF2               	movwf	242,b	;volatile
 29653                           
 29654                           ; BSR set to: 61
 29655                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29656  01B4BE  0E80               	movlw	128
 29657  01B4C0  6FF3               	movwf	243,b	;volatile
 29658                           
 29659                           ; BSR set to: 61
 29660                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29661  01B4C2  6BF4               	clrf	244,b	;volatile
 29662                           
 29663                           ; BSR set to: 61
 29664                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29665  01B4C4  0E8A               	movlw	138
 29666  01B4C6  6FF5               	movwf	245,b	;volatile
 29667                           
 29668                           ; BSR set to: 61
 29669                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29670  01B4C8  6BF6               	clrf	246,b	;volatile
 29671                           
 29672                           ; BSR set to: 61
 29673                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29674  01B4CA  6BF7               	clrf	247,b	;volatile
 29675                           
 29676                           ; BSR set to: 61
 29677                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29678  01B4CC  6BF8               	clrf	248,b	;volatile
 29679                           
 29680                           ; BSR set to: 61
 29681                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29682  01B4CE  6BF9               	clrf	249,b	;volatile
 29683                           
 29684                           ; BSR set to: 61
 29685                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29686  01B4D0  6BFA               	clrf	250,b	;volatile
 29687                           
 29688                           ; BSR set to: 61
 29689                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29690  01B4D2  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29691                           
 29692                           ; BSR set to: 61
 29693                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29694  01B4D4  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29695                           
 29696                           ; BSR set to: 61
 29697                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29698  01B4D6  0100               	movlb	0	; () banked
 29699  01B4D8  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29700                           
 29701                           ; BSR set to: 0
 29702                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29703  01B4DA  0139               	movlb	57	; () banked
 29704  01B4DC  8793               	bsf	147,3,b	;volatile
 29705                           
 29706                           ; BSR set to: 57
 29707                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29708  01B4DE  0012               	return		;funcret
 29709  01B4E0                     __end_of_UART1_Initialize:
 29710                           	opt callstack 0
 29711                           
 29712 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29713 ;; Defined at:
 29714 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29717 ;;		 -> UART1_Receive_ISR(1), 
 29718 ;; Auto vars:     Size  Location     Type
 29719 ;;		None
 29720 ;; Return value:  Size  Location     Type
 29721 ;;                  1  [STACK] void 
 29722 ;; Registers used:
 29723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29724 ;; Tracked objects:
 29725 ;;		On entry : 3F/39
 29726 ;;		On exit  : 0/0
 29727 ;;		Unchanged: 0/0
 29728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29733 ;;Total ram usage:        0 bytes
 29734 ;; Hardware stack levels used:    1
 29735 ;; Hardware stack levels required when called:   15
 29736 ;; This function calls:
 29737 ;;		Nothing
 29738 ;; This function is called by:
 29739 ;;		_UART1_Initialize
 29740 ;; This function uses a reentrant model
 29741 ;;
 29742                           
 29743                           	psect	text114
 29744  01BBC6                     __ptext114:
 29745                           	opt callstack 0
 29746  01BBC6                     _UART1_SetRxInterruptHandler:
 29747                           	opt callstack 13
 29748                           
 29749                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29750                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29751                           
 29752                           ; BSR set to: 57
 29753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29754                           ;incstack = 0
 29755  01BBC6  50E1               	movf	fsr1l,w,c
 29756  01BBC8  0FFD               	addlw	-3
 29757  01BBCA  6ED9               	movwf	fsr2l,c
 29758  01BBCC  50E2               	movf	fsr1h,w,c
 29759  01BBCE  6EDA               	movwf	fsr2h,c
 29760  01BBD0  0EFF               	movlw	255
 29761  01BBD2  22DA               	addwfc	fsr2h,f,c
 29762  01BBD4  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29763  01BBDA  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29764  01BBE0  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29765                           
 29766                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29767  01BBE6  52E5               	movf	postdec1,f,c
 29768  01BBE8  52E5               	movf	postdec1,f,c
 29769  01BBEA  52E5               	movf	postdec1,f,c
 29770  01BBEC  0012               	return		;funcret
 29771  01BBEE                     __end_of_UART1_SetRxInterruptHandler:
 29772                           	opt callstack 0
 29773                           
 29774 ;; *************** function _TMR6_Initialize *****************
 29775 ;; Defined at:
 29776 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29777 ;; Parameters:    Size  Location     Type
 29778 ;;		None
 29779 ;; Auto vars:     Size  Location     Type
 29780 ;;		None
 29781 ;; Return value:  Size  Location     Type
 29782 ;;                  1  [STACK] void 
 29783 ;; Registers used:
 29784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29785 ;; Tracked objects:
 29786 ;;		On entry : 3F/39
 29787 ;;		On exit  : 0/0
 29788 ;;		Unchanged: 0/0
 29789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29794 ;;Total ram usage:        0 bytes
 29795 ;; Hardware stack levels used:    1
 29796 ;; Hardware stack levels required when called:   16
 29797 ;; This function calls:
 29798 ;;		_TMR6_SetInterruptHandler
 29799 ;; This function is called by:
 29800 ;;		_SYSTEM_Initialize
 29801 ;; This function uses a reentrant model
 29802 ;;
 29803                           
 29804                           	psect	text115
 29805  01BAFC                     __ptext115:
 29806                           	opt callstack 0
 29807  01BAFC                     _TMR6_Initialize:
 29808                           	opt callstack 13
 29809                           
 29810                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29811                           
 29812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29813                           ;incstack = 0
 29814  01BAFC  0E01               	movlw	1
 29815  01BAFE  6E96               	movwf	150,c	;volatile
 29816                           
 29817                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29818  01BB00  6A95               	clrf	149,c	;volatile
 29819                           
 29820                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29821  01BB02  6A97               	clrf	151,c	;volatile
 29822                           
 29823                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29824  01BB04  0E7C               	movlw	124
 29825  01BB06  6E93               	movwf	147,c	;volatile
 29826                           
 29827                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29828  01BB08  6A92               	clrf	146,c	;volatile
 29829                           
 29830                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29831  01BB0A  0139               	movlb	57	; () banked
 29832  01BB0C  91A9               	bcf	169,0,b	;volatile
 29833                           
 29834                           ; BSR set to: 57
 29835                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29836  01BB0E  8199               	bsf	153,0,b	;volatile
 29837                           
 29838                           ; BSR set to: 57
 29839                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29840  01BB10  0E6E               	movlw	low _TMR6_DefaultInterruptHandler
 29841  01BB12  6EE6               	movwf	postinc1,c
 29842  01BB14  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29843  01BB16  6EE6               	movwf	postinc1,c
 29844  01BB18  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29845  01BB1A  6EE6               	movwf	postinc1,c
 29846  01BB1C  ECF7  F0DD         	call	_TMR6_SetInterruptHandler	;wreg free
 29847                           
 29848                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29849  01BB20  0EE0               	movlw	224
 29850  01BB22  6E94               	movwf	148,c	;volatile
 29851                           
 29852                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29853  01BB24  0012               	return		;funcret
 29854  01BB26                     __end_of_TMR6_Initialize:
 29855                           	opt callstack 0
 29856                           
 29857 ;; *************** function _TMR6_SetInterruptHandler *****************
 29858 ;; Defined at:
 29859 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29860 ;; Parameters:    Size  Location     Type
 29861 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29862 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29863 ;; Auto vars:     Size  Location     Type
 29864 ;;		None
 29865 ;; Return value:  Size  Location     Type
 29866 ;;                  1  [STACK] void 
 29867 ;; Registers used:
 29868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29869 ;; Tracked objects:
 29870 ;;		On entry : 3F/39
 29871 ;;		On exit  : 0/0
 29872 ;;		Unchanged: 0/0
 29873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29878 ;;Total ram usage:        0 bytes
 29879 ;; Hardware stack levels used:    1
 29880 ;; Hardware stack levels required when called:   15
 29881 ;; This function calls:
 29882 ;;		Nothing
 29883 ;; This function is called by:
 29884 ;;		_TMR6_Initialize
 29885 ;; This function uses a reentrant model
 29886 ;;
 29887                           
 29888                           	psect	text116
 29889  01BBEE                     __ptext116:
 29890                           	opt callstack 0
 29891  01BBEE                     _TMR6_SetInterruptHandler:
 29892                           	opt callstack 13
 29893                           
 29894                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29895                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29896                           
 29897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29898                           ;incstack = 0
 29899  01BBEE  50E1               	movf	fsr1l,w,c
 29900  01BBF0  0FFD               	addlw	-3
 29901  01BBF2  6ED9               	movwf	fsr2l,c
 29902  01BBF4  50E2               	movf	fsr1h,w,c
 29903  01BBF6  6EDA               	movwf	fsr2h,c
 29904  01BBF8  0EFF               	movlw	255
 29905  01BBFA  22DA               	addwfc	fsr2h,f,c
 29906  01BBFC  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29907  01BC02  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29908  01BC08  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29909                           
 29910                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29911  01BC0E  52E5               	movf	postdec1,f,c
 29912  01BC10  52E5               	movf	postdec1,f,c
 29913  01BC12  52E5               	movf	postdec1,f,c
 29914  01BC14  0012               	return		;funcret
 29915  01BC16                     __end_of_TMR6_SetInterruptHandler:
 29916                           	opt callstack 0
 29917                           
 29918 ;; *************** function _TMR5_Initialize *****************
 29919 ;; Defined at:
 29920 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29921 ;; Parameters:    Size  Location     Type
 29922 ;;		None
 29923 ;; Auto vars:     Size  Location     Type
 29924 ;;		None
 29925 ;; Return value:  Size  Location     Type
 29926 ;;                  1  [STACK] void 
 29927 ;; Registers used:
 29928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29929 ;; Tracked objects:
 29930 ;;		On entry : 0/39
 29931 ;;		On exit  : 0/0
 29932 ;;		Unchanged: 0/0
 29933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29938 ;;Total ram usage:        0 bytes
 29939 ;; Hardware stack levels used:    1
 29940 ;; Hardware stack levels required when called:   16
 29941 ;; This function calls:
 29942 ;;		_TMR5_SetInterruptHandler
 29943 ;; This function is called by:
 29944 ;;		_SYSTEM_Initialize
 29945 ;; This function uses a reentrant model
 29946 ;;
 29947                           
 29948                           	psect	text117
 29949  01B4E0                     __ptext117:
 29950                           	opt callstack 0
 29951  01B4E0                     _TMR5_Initialize:
 29952                           	opt callstack 13
 29953                           
 29954                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29955                           
 29956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29957                           ;incstack = 0
 29958  01B4E0  6A9B               	clrf	155,c	;volatile
 29959                           
 29960                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29961  01B4E2  6A9C               	clrf	156,c	;volatile
 29962                           
 29963                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29964  01B4E4  0E01               	movlw	1
 29965  01B4E6  6E9D               	movwf	157,c	;volatile
 29966                           
 29967                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29968  01B4E8  0E63               	movlw	99
 29969  01B4EA  6E99               	movwf	153,c	;volatile
 29970                           
 29971                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29972  01B4EC  0EC0               	movlw	192
 29973  01B4EE  6E98               	movwf	152,c	;volatile
 29974                           
 29975                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29976  01B4F0  5098               	movf	152,w,c	;volatile
 29977  01B4F2  006F FE64  F001    	movff	16281,btemp	;volatile
 29978  01B4F8  6A02               	clrf	(btemp+1)^0,c
 29979  01B4FA  0060  F004  F002   	movff	btemp,btemp+1
 29980  01B500  6A01               	clrf	btemp^0,c
 29981  01B502  1001               	iorwf	btemp^0,w,c
 29982  01B504  0100               	movlb	0	; () banked
 29983  01B506  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29984  01B508  5002               	movf	(btemp+1)^0,w,c
 29985  01B50A  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29986                           
 29987                           ; BSR set to: 0
 29988                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29989  01B50C  0139               	movlb	57	; () banked
 29990  01B50E  9DA8               	bcf	168,6,b	;volatile
 29991                           
 29992                           ; BSR set to: 57
 29993                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29994  01B510  8D98               	bsf	152,6,b	;volatile
 29995                           
 29996                           ; BSR set to: 57
 29997                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29998  01B512  0EB4               	movlw	low _TMR5_DefaultInterruptHandler
 29999  01B514  6EE6               	movwf	postinc1,c
 30000  01B516  0EB8               	movlw	high _TMR5_DefaultInterruptHandler
 30001  01B518  6EE6               	movwf	postinc1,c
 30002  01B51A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30003  01B51C  6EE6               	movwf	postinc1,c
 30004  01B51E  EC0B  F0DE         	call	_TMR5_SetInterruptHandler	;wreg free
 30005                           
 30006                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30007  01B522  0E31               	movlw	49
 30008  01B524  6E9A               	movwf	154,c	;volatile
 30009                           
 30010                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30011  01B526  0012               	return		;funcret
 30012  01B528                     __end_of_TMR5_Initialize:
 30013                           	opt callstack 0
 30014                           
 30015 ;; *************** function _TMR5_SetInterruptHandler *****************
 30016 ;; Defined at:
 30017 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30018 ;; Parameters:    Size  Location     Type
 30019 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30020 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30021 ;; Auto vars:     Size  Location     Type
 30022 ;;		None
 30023 ;; Return value:  Size  Location     Type
 30024 ;;                  1  [STACK] void 
 30025 ;; Registers used:
 30026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30027 ;; Tracked objects:
 30028 ;;		On entry : 3F/39
 30029 ;;		On exit  : 0/0
 30030 ;;		Unchanged: 0/0
 30031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30036 ;;Total ram usage:        0 bytes
 30037 ;; Hardware stack levels used:    1
 30038 ;; Hardware stack levels required when called:   15
 30039 ;; This function calls:
 30040 ;;		Nothing
 30041 ;; This function is called by:
 30042 ;;		_TMR5_Initialize
 30043 ;; This function uses a reentrant model
 30044 ;;
 30045                           
 30046                           	psect	text118
 30047  01BC16                     __ptext118:
 30048                           	opt callstack 0
 30049  01BC16                     _TMR5_SetInterruptHandler:
 30050                           	opt callstack 13
 30051                           
 30052                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30053                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30054                           
 30055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30056                           ;incstack = 0
 30057  01BC16  50E1               	movf	fsr1l,w,c
 30058  01BC18  0FFD               	addlw	-3
 30059  01BC1A  6ED9               	movwf	fsr2l,c
 30060  01BC1C  50E2               	movf	fsr1h,w,c
 30061  01BC1E  6EDA               	movwf	fsr2h,c
 30062  01BC20  0EFF               	movlw	255
 30063  01BC22  22DA               	addwfc	fsr2h,f,c
 30064  01BC24  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 30065  01BC2A  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 30066  01BC30  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 30067                           
 30068                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30069  01BC36  52E5               	movf	postdec1,f,c
 30070  01BC38  52E5               	movf	postdec1,f,c
 30071  01BC3A  52E5               	movf	postdec1,f,c
 30072  01BC3C  0012               	return		;funcret
 30073  01BC3E                     __end_of_TMR5_SetInterruptHandler:
 30074                           	opt callstack 0
 30075                           
 30076 ;; *************** function _TMR3_Initialize *****************
 30077 ;; Defined at:
 30078 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30079 ;; Parameters:    Size  Location     Type
 30080 ;;		None
 30081 ;; Auto vars:     Size  Location     Type
 30082 ;;		None
 30083 ;; Return value:  Size  Location     Type
 30084 ;;                  1  [STACK] void 
 30085 ;; Registers used:
 30086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30087 ;; Tracked objects:
 30088 ;;		On entry : 0/39
 30089 ;;		On exit  : 0/0
 30090 ;;		Unchanged: 0/0
 30091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30096 ;;Total ram usage:        0 bytes
 30097 ;; Hardware stack levels used:    1
 30098 ;; Hardware stack levels required when called:   16
 30099 ;; This function calls:
 30100 ;;		_TMR3_SetInterruptHandler
 30101 ;; This function is called by:
 30102 ;;		_SYSTEM_Initialize
 30103 ;; This function uses a reentrant model
 30104 ;;
 30105                           
 30106                           	psect	text119
 30107  01B528                     __ptext119:
 30108                           	opt callstack 0
 30109  01B528                     _TMR3_Initialize:
 30110                           	opt callstack 13
 30111                           
 30112                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30113                           
 30114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30115                           ;incstack = 0
 30116  01B528  6AA7               	clrf	167,c	;volatile
 30117                           
 30118                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30119  01B52A  6AA8               	clrf	168,c	;volatile
 30120                           
 30121                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30122  01B52C  0E01               	movlw	1
 30123  01B52E  6EA9               	movwf	169,c	;volatile
 30124                           
 30125                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30126  01B530  0E3C               	movlw	60
 30127  01B532  6EA5               	movwf	165,c	;volatile
 30128                           
 30129                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30130  01B534  0EB0               	movlw	176
 30131  01B536  6EA4               	movwf	164,c	;volatile
 30132                           
 30133                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30134  01B538  50A4               	movf	164,w,c	;volatile
 30135  01B53A  006F FE94  F001    	movff	16293,btemp	;volatile
 30136  01B540  6A02               	clrf	(btemp+1)^0,c
 30137  01B542  0060  F004  F002   	movff	btemp,btemp+1
 30138  01B548  6A01               	clrf	btemp^0,c
 30139  01B54A  1001               	iorwf	btemp^0,w,c
 30140  01B54C  0100               	movlb	0	; () banked
 30141  01B54E  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30142  01B550  5002               	movf	(btemp+1)^0,w,c
 30143  01B552  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30147  01B554  0139               	movlb	57	; () banked
 30148  01B556  9DA6               	bcf	166,6,b	;volatile
 30149                           
 30150                           ; BSR set to: 57
 30151                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30152  01B558  8D96               	bsf	150,6,b	;volatile
 30153                           
 30154                           ; BSR set to: 57
 30155                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30156  01B55A  0E98               	movlw	low _TMR3_DefaultInterruptHandler
 30157  01B55C  6EE6               	movwf	postinc1,c
 30158  01B55E  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 30159  01B560  6EE6               	movwf	postinc1,c
 30160  01B562  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30161  01B564  6EE6               	movwf	postinc1,c
 30162  01B566  EC1F  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
 30163                           
 30164                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30165  01B56A  0E31               	movlw	49
 30166  01B56C  6EA6               	movwf	166,c	;volatile
 30167                           
 30168                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30169  01B56E  0012               	return		;funcret
 30170  01B570                     __end_of_TMR3_Initialize:
 30171                           	opt callstack 0
 30172                           
 30173 ;; *************** function _TMR3_SetInterruptHandler *****************
 30174 ;; Defined at:
 30175 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30176 ;; Parameters:    Size  Location     Type
 30177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30178 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30179 ;; Auto vars:     Size  Location     Type
 30180 ;;		None
 30181 ;; Return value:  Size  Location     Type
 30182 ;;                  1  [STACK] void 
 30183 ;; Registers used:
 30184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30185 ;; Tracked objects:
 30186 ;;		On entry : 0/1
 30187 ;;		On exit  : 0/0
 30188 ;;		Unchanged: 0/0
 30189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30194 ;;Total ram usage:        0 bytes
 30195 ;; Hardware stack levels used:    1
 30196 ;; Hardware stack levels required when called:   15
 30197 ;; This function calls:
 30198 ;;		Nothing
 30199 ;; This function is called by:
 30200 ;;		_TMR3_Initialize
 30201 ;;		_init_bsoc
 30202 ;; This function uses a reentrant model
 30203 ;;
 30204                           
 30205                           	psect	text120
 30206  01BC3E                     __ptext120:
 30207                           	opt callstack 0
 30208  01BC3E                     _TMR3_SetInterruptHandler:
 30209                           	opt callstack 14
 30210                           
 30211                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30212                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30213                           
 30214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30215                           ;incstack = 0
 30216  01BC3E  50E1               	movf	fsr1l,w,c
 30217  01BC40  0FFD               	addlw	-3
 30218  01BC42  6ED9               	movwf	fsr2l,c
 30219  01BC44  50E2               	movf	fsr1h,w,c
 30220  01BC46  6EDA               	movwf	fsr2h,c
 30221  01BC48  0EFF               	movlw	255
 30222  01BC4A  22DA               	addwfc	fsr2h,f,c
 30223  01BC4C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 30224  01BC52  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 30225  01BC58  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 30226                           
 30227                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30228  01BC5E  52E5               	movf	postdec1,f,c
 30229  01BC60  52E5               	movf	postdec1,f,c
 30230  01BC62  52E5               	movf	postdec1,f,c
 30231  01BC64  0012               	return		;funcret
 30232  01BC66                     __end_of_TMR3_SetInterruptHandler:
 30233                           	opt callstack 0
 30234                           
 30235 ;; *************** function _TMR2_Initialize *****************
 30236 ;; Defined at:
 30237 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30238 ;; Parameters:    Size  Location     Type
 30239 ;;		None
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;		None
 30242 ;; Return value:  Size  Location     Type
 30243 ;;                  1  [STACK] void 
 30244 ;; Registers used:
 30245 ;;		wreg, status,2
 30246 ;; Tracked objects:
 30247 ;;		On entry : 3F/3F
 30248 ;;		On exit  : 3F/39
 30249 ;;		Unchanged: 0/0
 30250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30255 ;;Total ram usage:        0 bytes
 30256 ;; Hardware stack levels used:    1
 30257 ;; Hardware stack levels required when called:   15
 30258 ;; This function calls:
 30259 ;;		Nothing
 30260 ;; This function is called by:
 30261 ;;		_SYSTEM_Initialize
 30262 ;; This function uses a reentrant model
 30263 ;;
 30264                           
 30265                           	psect	text121
 30266  01BFFE                     __ptext121:
 30267                           	opt callstack 0
 30268  01BFFE                     _TMR2_Initialize:
 30269                           	opt callstack 14
 30270                           
 30271                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30272                           
 30273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30274                           ;incstack = 0
 30275  01BFFE  0E01               	movlw	1
 30276  01C000  6EAE               	movwf	174,c	;volatile
 30277                           
 30278                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30279  01C002  6AAD               	clrf	173,c	;volatile
 30280                           
 30281                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30282  01C004  6AAF               	clrf	175,c	;volatile
 30283                           
 30284                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30285  01C006  0E63               	movlw	99
 30286  01C008  6EAB               	movwf	171,c	;volatile
 30287                           
 30288                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30289  01C00A  6AAA               	clrf	170,c	;volatile
 30290                           
 30291                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30292  01C00C  0139               	movlb	57	; () banked
 30293  01C00E  95A4               	bcf	164,2,b	;volatile
 30294                           
 30295                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30296  01C010  0EC0               	movlw	192
 30297  01C012  6EAC               	movwf	172,c	;volatile
 30298                           
 30299                           ; BSR set to: 57
 30300                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30301  01C014  0012               	return		;funcret
 30302  01C016                     __end_of_TMR2_Initialize:
 30303                           	opt callstack 0
 30304                           
 30305 ;; *************** function _SPI1_Initialize *****************
 30306 ;; Defined at:
 30307 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30308 ;; Parameters:    Size  Location     Type
 30309 ;;		None
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;		None
 30312 ;; Return value:  Size  Location     Type
 30313 ;;                  1  [STACK] void 
 30314 ;; Registers used:
 30315 ;;		wreg, status,2
 30316 ;; Tracked objects:
 30317 ;;		On entry : 3F/39
 30318 ;;		On exit  : 3F/3D
 30319 ;;		Unchanged: 0/0
 30320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30325 ;;Total ram usage:        0 bytes
 30326 ;; Hardware stack levels used:    1
 30327 ;; Hardware stack levels required when called:   15
 30328 ;; This function calls:
 30329 ;;		Nothing
 30330 ;; This function is called by:
 30331 ;;		_SYSTEM_Initialize
 30332 ;; This function uses a reentrant model
 30333 ;;
 30334                           
 30335                           	psect	text122
 30336  01C016                     __ptext122:
 30337                           	opt callstack 0
 30338  01C016                     _SPI1_Initialize:
 30339                           	opt callstack 14
 30340                           
 30341                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30342                           
 30343                           ; BSR set to: 57
 30344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30345                           ;incstack = 0
 30346  01C016  0E40               	movlw	64
 30347  01C018  013D               	movlb	61	; () banked
 30348  01C01A  6F15               	movwf	21,b	;volatile
 30349                           
 30350                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30351  01C01C  0E03               	movlw	3
 30352  01C01E  6F16               	movwf	22,b	;volatile
 30353                           
 30354                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30355  01C020  0E4F               	movlw	79
 30356  01C022  6F19               	movwf	25,b	;volatile
 30357                           
 30358                           ; BSR set to: 61
 30359                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30360  01C024  6B1C               	clrf	28,b	;volatile
 30361                           
 30362                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30363  01C026  0E83               	movlw	131
 30364  01C028  6F14               	movwf	20,b	;volatile
 30365                           
 30366                           ; BSR set to: 61
 30367                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30368  01C02A  0012               	return		;funcret
 30369  01C02C                     __end_of_SPI1_Initialize:
 30370                           	opt callstack 0
 30371                           
 30372 ;; *************** function _PWM8_Initialize *****************
 30373 ;; Defined at:
 30374 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;		None
 30377 ;; Auto vars:     Size  Location     Type
 30378 ;;		None
 30379 ;; Return value:  Size  Location     Type
 30380 ;;                  1  [STACK] void 
 30381 ;; Registers used:
 30382 ;;		wreg, status,2
 30383 ;; Tracked objects:
 30384 ;;		On entry : 0/3E
 30385 ;;		On exit  : 3F/3F
 30386 ;;		Unchanged: 0/0
 30387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;Total ram usage:        0 bytes
 30393 ;; Hardware stack levels used:    1
 30394 ;; Hardware stack levels required when called:   15
 30395 ;; This function calls:
 30396 ;;		Nothing
 30397 ;; This function is called by:
 30398 ;;		_SYSTEM_Initialize
 30399 ;; This function uses a reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text123
 30403  01C02C                     __ptext123:
 30404                           	opt callstack 0
 30405  01C02C                     _PWM8_Initialize:
 30406                           	opt callstack 14
 30407                           
 30408                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30409                           
 30410                           ; BSR set to: 61
 30411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30412                           ;incstack = 0
 30413  01C02C  0E80               	movlw	128
 30414  01C02E  6E62               	movwf	98,c	;volatile
 30415                           
 30416                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30417  01C030  6A61               	clrf	97,c	;volatile
 30418                           
 30419                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30420  01C032  0E40               	movlw	64
 30421  01C034  6E60               	movwf	96,c	;volatile
 30422                           
 30423                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30424  01C036  013F               	movlb	63	; () banked
 30425  01C038  515F               	movf	95,w,b	;volatile
 30426  01C03A  0B3F               	andlw	-193
 30427  01C03C  0940               	iorlw	64
 30428  01C03E  6F5F               	movwf	95,b	;volatile
 30429                           
 30430                           ; BSR set to: 63
 30431                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30432  01C040  0012               	return		;funcret
 30433  01C042                     __end_of_PWM8_Initialize:
 30434                           	opt callstack 0
 30435                           
 30436 ;; *************** function _PMD_Initialize *****************
 30437 ;; Defined at:
 30438 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;		None
 30441 ;; Auto vars:     Size  Location     Type
 30442 ;;		None
 30443 ;; Return value:  Size  Location     Type
 30444 ;;                  1  [STACK] void 
 30445 ;; Registers used:
 30446 ;;		None
 30447 ;; Tracked objects:
 30448 ;;		On entry : 3F/39
 30449 ;;		On exit  : 3F/39
 30450 ;;		Unchanged: 0/0
 30451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30456 ;;Total ram usage:        0 bytes
 30457 ;; Hardware stack levels used:    1
 30458 ;; Hardware stack levels required when called:   15
 30459 ;; This function calls:
 30460 ;;		Nothing
 30461 ;; This function is called by:
 30462 ;;		_SYSTEM_Initialize
 30463 ;; This function uses a reentrant model
 30464 ;;
 30465                           
 30466                           	psect	text124
 30467  01C058                     __ptext124:
 30468                           	opt callstack 0
 30469  01C058                     _PMD_Initialize:
 30470                           	opt callstack 14
 30471                           
 30472                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30473                           
 30474                           ; BSR set to: 63
 30475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30476                           ;incstack = 0
 30477  01C058  0139               	movlb	57	; () banked
 30478  01C05A  6BC0               	clrf	192,b	;volatile
 30479                           
 30480                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30481  01C05C  6BC1               	clrf	193,b	;volatile
 30482                           
 30483                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30484  01C05E  6BC2               	clrf	194,b	;volatile
 30485                           
 30486                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30487  01C060  6BC3               	clrf	195,b	;volatile
 30488                           
 30489                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30490  01C062  6BC4               	clrf	196,b	;volatile
 30491                           
 30492                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30493  01C064  6BC5               	clrf	197,b	;volatile
 30494                           
 30495                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30496  01C066  6BC6               	clrf	198,b	;volatile
 30497                           
 30498                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30499  01C068  6BC7               	clrf	199,b	;volatile
 30500                           
 30501                           ; BSR set to: 57
 30502                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30503  01C06A  0012               	return		;funcret
 30504  01C06C                     __end_of_PMD_Initialize:
 30505                           	opt callstack 0
 30506                           
 30507 ;; *************** function _PIN_MANAGER_Initialize *****************
 30508 ;; Defined at:
 30509 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30510 ;; Parameters:    Size  Location     Type
 30511 ;;		None
 30512 ;; Auto vars:     Size  Location     Type
 30513 ;;		None
 30514 ;; Return value:  Size  Location     Type
 30515 ;;                  1  [STACK] void 
 30516 ;; Registers used:
 30517 ;;		wreg, status,2
 30518 ;; Tracked objects:
 30519 ;;		On entry : 3F/39
 30520 ;;		On exit  : 3F/3A
 30521 ;;		Unchanged: 0/0
 30522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30527 ;;Total ram usage:        0 bytes
 30528 ;; Hardware stack levels used:    1
 30529 ;; Hardware stack levels required when called:   15
 30530 ;; This function calls:
 30531 ;;		Nothing
 30532 ;; This function is called by:
 30533 ;;		_SYSTEM_Initialize
 30534 ;; This function uses a reentrant model
 30535 ;;
 30536                           
 30537                           	psect	text125
 30538  01AAE4                     __ptext125:
 30539                           	opt callstack 0
 30540  01AAE4                     _PIN_MANAGER_Initialize:
 30541                           	opt callstack 14
 30542                           
 30543                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30544                           
 30545                           ; BSR set to: 57
 30546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30547                           ;incstack = 0
 30548  01AAE4  0E07               	movlw	7
 30549  01AAE6  6EBE               	movwf	190,c	;volatile
 30550                           
 30551                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 30552  01AAE8  6ABD               	clrf	189,c	;volatile
 30553                           
 30554                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30555  01AAEA  6ABA               	clrf	186,c	;volatile
 30556                           
 30557                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30558  01AAEC  0E20               	movlw	32
 30559  01AAEE  6EBF               	movwf	191,c	;volatile
 30560                           
 30561                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30562  01AAF0  6ABB               	clrf	187,c	;volatile
 30563                           
 30564                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30565  01AAF2  0E07               	movlw	7
 30566  01AAF4  6EBC               	movwf	188,c	;volatile
 30567                           
 30568                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30569  01AAF6  6AC6               	clrf	198,c	;volatile
 30570                           
 30571                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30572  01AAF8  0E0F               	movlw	15
 30573  01AAFA  6EC7               	movwf	199,c	;volatile
 30574                           
 30575                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30576  01AAFC  68C2               	setf	194,c	;volatile
 30577                           
 30578                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30579  01AAFE  0EBF               	movlw	191
 30580  01AB00  6EC3               	movwf	195,c	;volatile
 30581                           
 30582                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30583  01AB02  0E90               	movlw	144
 30584  01AB04  6EC4               	movwf	196,c	;volatile
 30585                           
 30586                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30587  01AB06  0E0C               	movlw	12
 30588  01AB08  6EC5               	movwf	197,c	;volatile
 30589                           
 30590                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30591  01AB0A  013A               	movlb	58	; () banked
 30592  01AB0C  6B70               	clrf	112,b	;volatile
 30593                           
 30594                           ; BSR set to: 58
 30595                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30596  01AB0E  6B60               	clrf	96,b	;volatile
 30597                           
 30598                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30599  01AB10  0E3C               	movlw	60
 30600  01AB12  6F50               	movwf	80,b	;volatile
 30601                           
 30602                           ; BSR set to: 58
 30603                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30604  01AB14  6B80               	clrf	128,b	;volatile
 30605                           
 30606                           ; BSR set to: 58
 30607                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30608  01AB16  6B90               	clrf	144,b	;volatile
 30609                           
 30610                           ; BSR set to: 58
 30611                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30612  01AB18  6940               	setf	64,b	;volatile
 30613                           
 30614                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30615  01AB1A  0E0C               	movlw	12
 30616  01AB1C  6F71               	movwf	113,b	;volatile
 30617                           
 30618                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30619  01AB1E  0E0F               	movlw	15
 30620  01AB20  6F91               	movwf	145,b	;volatile
 30621                           
 30622                           ; BSR set to: 58
 30623                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30624  01AB22  6B81               	clrf	129,b	;volatile
 30625                           
 30626                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30627  01AB24  0E83               	movlw	131
 30628  01AB26  6F51               	movwf	81,b	;volatile
 30629                           
 30630                           ; BSR set to: 58
 30631                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30632  01AB28  6B41               	clrf	65,b	;volatile
 30633                           
 30634                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30635  01AB2A  0E97               	movlw	151
 30636  01AB2C  6F61               	movwf	97,b	;volatile
 30637                           
 30638                           ; BSR set to: 58
 30639                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30640  01AB2E  6B82               	clrf	130,b	;volatile
 30641                           
 30642                           ; BSR set to: 58
 30643                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30644  01AB30  6B92               	clrf	146,b	;volatile
 30645                           
 30646                           ; BSR set to: 58
 30647                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30648  01AB32  6B42               	clrf	66,b	;volatile
 30649                           
 30650                           ; BSR set to: 58
 30651                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30652  01AB34  6B52               	clrf	82,b	;volatile
 30653                           
 30654                           ; BSR set to: 58
 30655                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30656  01AB36  6B62               	clrf	98,b	;volatile
 30657                           
 30658                           ; BSR set to: 58
 30659                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30660  01AB38  6B72               	clrf	114,b	;volatile
 30661                           
 30662                           ; BSR set to: 58
 30663                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30664  01AB3A  6943               	setf	67,b	;volatile
 30665                           
 30666                           ; BSR set to: 58
 30667                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30668  01AB3C  6953               	setf	83,b	;volatile
 30669                           
 30670                           ; BSR set to: 58
 30671                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30672  01AB3E  6963               	setf	99,b	;volatile
 30673                           
 30674                           ; BSR set to: 58
 30675                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30676  01AB40  6973               	setf	115,b	;volatile
 30677                           
 30678                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30679  01AB42  0E07               	movlw	7
 30680  01AB44  6F83               	movwf	131,b	;volatile
 30681                           
 30682                           ; BSR set to: 58
 30683                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30684  01AB46  6993               	setf	147,b	;volatile
 30685                           
 30686                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30687  01AB48  0E0F               	movlw	15
 30688  01AB4A  6FE8               	movwf	232,b	;volatile
 30689                           
 30690                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30691  01AB4C  0E13               	movlw	19
 30692  01AB4E  6FDE               	movwf	222,b	;volatile
 30693                           
 30694                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30695  01AB50  0E16               	movlw	22
 30696  01AB52  6F0E               	movwf	14,b	;volatile
 30697                           
 30698                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30699  01AB54  0E1E               	movlw	30
 30700  01AB56  6F13               	movwf	19,b	;volatile
 30701                           
 30702                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30703  01AB58  0E08               	movlw	8
 30704  01AB5A  6FC0               	movwf	192,b	;volatile
 30705                           
 30706                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30707  01AB5C  0E10               	movlw	16
 30708  01AB5E  6F19               	movwf	25,b	;volatile
 30709                           
 30710                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30711  01AB60  0E09               	movlw	9
 30712  01AB62  6FC1               	movwf	193,b	;volatile
 30713                           
 30714                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30715  01AB64  0E1F               	movlw	31
 30716  01AB66  6F15               	movwf	21,b	;volatile
 30717                           
 30718                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30719  01AB68  0E13               	movlw	19
 30720  01AB6A  6F16               	movwf	22,b	;volatile
 30721                           
 30722                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30723  01AB6C  0E17               	movlw	23
 30724  01AB6E  6FE5               	movwf	229,b	;volatile
 30725                           
 30726                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30727  01AB70  0E14               	movlw	20
 30728  01AB72  6FDF               	movwf	223,b	;volatile
 30729                           
 30730                           ; BSR set to: 58
 30731                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30732  01AB74  0012               	return		;funcret
 30733  01AB76                     __end_of_PIN_MANAGER_Initialize:
 30734                           	opt callstack 0
 30735                           
 30736 ;; *************** function _OSCILLATOR_Initialize *****************
 30737 ;; Defined at:
 30738 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30739 ;; Parameters:    Size  Location     Type
 30740 ;;		None
 30741 ;; Auto vars:     Size  Location     Type
 30742 ;;		None
 30743 ;; Return value:  Size  Location     Type
 30744 ;;                  1  [STACK] void 
 30745 ;; Registers used:
 30746 ;;		wreg, status,2
 30747 ;; Tracked objects:
 30748 ;;		On entry : 3F/3A
 30749 ;;		On exit  : 3F/39
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30756 ;;Total ram usage:        0 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; Hardware stack levels required when called:   15
 30759 ;; This function calls:
 30760 ;;		Nothing
 30761 ;; This function is called by:
 30762 ;;		_SYSTEM_Initialize
 30763 ;; This function uses a reentrant model
 30764 ;;
 30765                           
 30766                           	psect	text126
 30767  01C042                     __ptext126:
 30768                           	opt callstack 0
 30769  01C042                     _OSCILLATOR_Initialize:
 30770                           	opt callstack 14
 30771                           
 30772                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30773                           
 30774                           ; BSR set to: 58
 30775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30776                           ;incstack = 0
 30777  01C042  0E20               	movlw	32
 30778  01C044  0139               	movlb	57	; () banked
 30779  01C046  6FD9               	movwf	217,b	;volatile
 30780                           
 30781                           ; BSR set to: 57
 30782                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30783  01C048  6BDB               	clrf	219,b	;volatile
 30784                           
 30785                           ; BSR set to: 57
 30786                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30787  01C04A  6BDD               	clrf	221,b	;volatile
 30788                           
 30789                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30790  01C04C  0E02               	movlw	2
 30791  01C04E  6FDF               	movwf	223,b	;volatile
 30792                           
 30793                           ; BSR set to: 57
 30794                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30795  01C050  6BDE               	clrf	222,b	;volatile
 30796  01C052                     l169:
 30797                           
 30798                           ; BSR set to: 57
 30799                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30800  01C052  B1DC               	btfsc	220,0,b	;volatile
 30801  01C054  0012               	return	
 30802  01C056  D7FD               	goto	l169
 30803  01C058                     __end_of_OSCILLATOR_Initialize:
 30804                           	opt callstack 0
 30805                           
 30806 ;; *************** function _INTERRUPT_Initialize *****************
 30807 ;; Defined at:
 30808 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30809 ;; Parameters:    Size  Location     Type
 30810 ;;		None
 30811 ;; Auto vars:     Size  Location     Type
 30812 ;;  state           1  [STACK] _Bool 
 30813 ;; Return value:  Size  Location     Type
 30814 ;;                  1  [STACK] void 
 30815 ;; Registers used:
 30816 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30817 ;; Tracked objects:
 30818 ;;		On entry : 0/0
 30819 ;;		On exit  : 3F/39
 30820 ;;		Unchanged: 0/0
 30821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30826 ;;Total ram usage:        0 bytes
 30827 ;; Hardware stack levels used:    1
 30828 ;; Hardware stack levels required when called:   15
 30829 ;; This function calls:
 30830 ;;		Nothing
 30831 ;; This function is called by:
 30832 ;;		_SYSTEM_Initialize
 30833 ;; This function uses a reentrant model
 30834 ;;
 30835                           
 30836                           	psect	text127
 30837  01AFCE                     __ptext127:
 30838                           	opt callstack 0
 30839  01AFCE                     _INTERRUPT_Initialize:
 30840                           	opt callstack 0
 30841                           
 30842                           ; BSR set to: 57
 30843                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30844  01AFCE  52E6               	movf	postinc1,f,c
 30845                           
 30846                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30847                           
 30848                           ;incstack = 0
 30849  01AFD0  8AD2               	bsf	210,5,c	;volatile
 30850                           
 30851                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30852  01AFD2  AED2               	btfss	16338,7,c	;volatile
 30853  01AFD4  D003               	goto	u9430
 30854  01AFD6  6A0C               	clrf	(btemp+11)^0,c
 30855  01AFD8  2A0C               	incf	(btemp+11)^0,f,c
 30856  01AFDA  D001               	goto	u9448
 30857  01AFDC                     u9430:
 30858  01AFDC  6A0C               	clrf	(btemp+11)^0,c
 30859  01AFDE                     u9448:
 30860                           
 30861                           ;stkvar	_state @ sp[(-1)+0]
 30862  01AFDE  0EFF               	movlw	-1
 30863  01AFE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30864                           
 30865                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30866  01AFE6  9ED2               	bcf	16338,7,c	;volatile
 30867                           
 30868                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30869  01AFE8  0E55               	movlw	85
 30870  01AFEA  6ED4               	movwf	212,c	;volatile
 30871                           
 30872                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30873  01AFEC  0EAA               	movlw	170
 30874  01AFEE  6ED4               	movwf	212,c	;volatile
 30875                           
 30876                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30877  01AFF0  90D4               	bcf	212,0,c	;volatile
 30878                           
 30879                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30880  01AFF2  0138               	movlb	56	; () banked
 30881  01AFF4  6B9F               	clrf	159,b	;volatile
 30882                           
 30883                           ; BSR set to: 56
 30884                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30885  01AFF6  6B9E               	clrf	158,b	;volatile
 30886                           
 30887                           ; BSR set to: 56
 30888                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30889  01AFF8  0E08               	movlw	8
 30890  01AFFA  6F9D               	movwf	157,b	;volatile
 30891                           
 30892                           ; BSR set to: 56
 30893                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30894  01AFFC  0E55               	movlw	85
 30895  01AFFE  6ED4               	movwf	212,c	;volatile
 30896                           
 30897                           ; BSR set to: 56
 30898                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30899  01B000  0EAA               	movlw	170
 30900  01B002  6ED4               	movwf	212,c	;volatile
 30901                           
 30902                           ; BSR set to: 56
 30903                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30904  01B004  80D4               	bsf	212,0,c	;volatile
 30905                           
 30906                           ; BSR set to: 56
 30907                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30908                           ;stkvar	_state @ sp[(-1)+0]
 30909  01B006  0EFF               	movlw	-1
 30910  01B008  B0E3               	btfsc	plusw1,0,c
 30911  01B00A  D002               	bra	u9455
 30912  01B00C  9ED2               	bcf	16338,7,c	;volatile
 30913  01B00E  D001               	bra	u9456
 30914  01B010                     u9455:
 30915  01B010  8ED2               	bsf	16338,7,c	;volatile
 30916  01B012                     u9456:
 30917                           
 30918                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30919  01B012  0139               	movlb	57	; () banked
 30920  01B014  8782               	bsf	130,3,b	;volatile
 30921                           
 30922                           ; BSR set to: 57
 30923                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30924  01B016  8382               	bsf	130,1,b	;volatile
 30925                           
 30926                           ; BSR set to: 57
 30927                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30928  01B018  8182               	bsf	130,0,b	;volatile
 30929                           
 30930                           ; BSR set to: 57
 30931                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30932  01B01A  8582               	bsf	130,2,b	;volatile
 30933                           
 30934                           ; BSR set to: 57
 30935                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30936  01B01C  8786               	bsf	134,3,b	;volatile
 30937                           
 30938                           ; BSR set to: 57
 30939                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30940  01B01E  8586               	bsf	134,2,b	;volatile
 30941                           
 30942                           ; BSR set to: 57
 30943                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30944  01B020  8783               	bsf	131,3,b	;volatile
 30945                           
 30946                           ; BSR set to: 57
 30947                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30948  01B022  8181               	bsf	129,0,b	;volatile
 30949                           
 30950                           ; BSR set to: 57
 30951                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30952  01B024  9185               	bcf	133,0,b	;volatile
 30953                           
 30954                           ; BSR set to: 57
 30955                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30956  01B026  8189               	bsf	137,0,b	;volatile
 30957                           
 30958                           ; BSR set to: 57
 30959                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30960  01B028  9D88               	bcf	136,6,b	;volatile
 30961                           
 30962                           ; BSR set to: 57
 30963                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30964  01B02A  8581               	bsf	129,2,b	;volatile
 30965                           
 30966                           ; BSR set to: 57
 30967                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30968  01B02C  8781               	bsf	129,3,b	;volatile
 30969                           
 30970                           ; BSR set to: 57
 30971                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30972  01B02E  9D86               	bcf	134,6,b	;volatile
 30973                           
 30974                           ; BSR set to: 57
 30975                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30976  01B030  52E5               	movf	postdec1,f,c
 30977  01B032  0012               	return		;funcret
 30978  01B034                     __end_of_INTERRUPT_Initialize:
 30979                           	opt callstack 0
 30980                           
 30981 ;; *************** function _FVR_Initialize *****************
 30982 ;; Defined at:
 30983 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30984 ;; Parameters:    Size  Location     Type
 30985 ;;		None
 30986 ;; Auto vars:     Size  Location     Type
 30987 ;;		None
 30988 ;; Return value:  Size  Location     Type
 30989 ;;                  1  [STACK] void 
 30990 ;; Registers used:
 30991 ;;		wreg, status,2
 30992 ;; Tracked objects:
 30993 ;;		On entry : 3F/39
 30994 ;;		On exit  : 3F/3E
 30995 ;;		Unchanged: 0/0
 30996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31001 ;;Total ram usage:        0 bytes
 31002 ;; Hardware stack levels used:    1
 31003 ;; Hardware stack levels required when called:   15
 31004 ;; This function calls:
 31005 ;;		Nothing
 31006 ;; This function is called by:
 31007 ;;		_SYSTEM_Initialize
 31008 ;; This function uses a reentrant model
 31009 ;;
 31010                           
 31011                           	psect	text128
 31012  01C16E                     __ptext128:
 31013                           	opt callstack 0
 31014  01C16E                     _FVR_Initialize:
 31015                           	opt callstack 14
 31016                           
 31017                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31018                           
 31019                           ; BSR set to: 57
 31020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31021                           ;incstack = 0
 31022  01C16E  0EAF               	movlw	175
 31023  01C170  013E               	movlb	62	; () banked
 31024  01C172  6FC1               	movwf	193,b	;volatile
 31025                           
 31026                           ; BSR set to: 62
 31027                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31028  01C174  0012               	return		;funcret
 31029  01C176                     __end_of_FVR_Initialize:
 31030                           	opt callstack 0
 31031                           
 31032 ;; *************** function _EXT_INT_Initialize *****************
 31033 ;; Defined at:
 31034 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31035 ;; Parameters:    Size  Location     Type
 31036 ;;		None
 31037 ;; Auto vars:     Size  Location     Type
 31038 ;;		None
 31039 ;; Return value:  Size  Location     Type
 31040 ;;                  1  [STACK] void 
 31041 ;; Registers used:
 31042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31043 ;; Tracked objects:
 31044 ;;		On entry : 3F/39
 31045 ;;		On exit  : 3F/39
 31046 ;;		Unchanged: 0/0
 31047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31052 ;;Total ram usage:        0 bytes
 31053 ;; Hardware stack levels used:    1
 31054 ;; Hardware stack levels required when called:   16
 31055 ;; This function calls:
 31056 ;;		_INT0_SetInterruptHandler
 31057 ;;		_INT1_SetInterruptHandler
 31058 ;; This function is called by:
 31059 ;;		_SYSTEM_Initialize
 31060 ;; This function uses a reentrant model
 31061 ;;
 31062                           
 31063                           	psect	text129
 31064  01B956                     __ptext129:
 31065                           	opt callstack 0
 31066  01B956                     _EXT_INT_Initialize:
 31067                           	opt callstack 13
 31068                           
 31069                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31070                           
 31071                           ; BSR set to: 62
 31072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31073                           ;incstack = 0
 31074  01B956  0139               	movlb	57	; () banked
 31075  01B958  91A1               	bcf	161,0,b	;volatile
 31076                           
 31077                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31078  01B95A  90D2               	bcf	210,0,c	;volatile
 31079                           
 31080                           ; BSR set to: 57
 31081                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31082  01B95C  0E9A               	movlw	low _INT0_DefaultInterruptHandler
 31083  01B95E  6EE6               	movwf	postinc1,c
 31084  01B960  0EC1               	movlw	high _INT0_DefaultInterruptHandler
 31085  01B962  6EE6               	movwf	postinc1,c
 31086  01B964  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31087  01B966  6EE6               	movwf	postinc1,c
 31088  01B968  EC47  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 31089                           
 31090                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31091  01B96C  0139               	movlb	57	; () banked
 31092  01B96E  8191               	bsf	145,0,b	;volatile
 31093                           
 31094                           ; BSR set to: 57
 31095                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31096  01B970  91A5               	bcf	165,0,b	;volatile
 31097                           
 31098                           ; BSR set to: 57
 31099                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31100  01B972  92D2               	bcf	210,1,c	;volatile
 31101                           
 31102                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31103  01B974  0E96               	movlw	low _INT1_DefaultInterruptHandler
 31104  01B976  6EE6               	movwf	postinc1,c
 31105  01B978  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 31106  01B97A  6EE6               	movwf	postinc1,c
 31107  01B97C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31108  01B97E  6EE6               	movwf	postinc1,c
 31109  01B980  EC33  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
 31110                           
 31111                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31112  01B984  0139               	movlb	57	; () banked
 31113  01B986  8195               	bsf	149,0,b	;volatile
 31114                           
 31115                           ; BSR set to: 57
 31116                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31117  01B988  0012               	return		;funcret
 31118  01B98A                     __end_of_EXT_INT_Initialize:
 31119                           	opt callstack 0
 31120                           
 31121 ;; *************** function _INT1_SetInterruptHandler *****************
 31122 ;; Defined at:
 31123 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31124 ;; Parameters:    Size  Location     Type
 31125 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31126 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31127 ;; Auto vars:     Size  Location     Type
 31128 ;;		None
 31129 ;; Return value:  Size  Location     Type
 31130 ;;                  1  [STACK] void 
 31131 ;; Registers used:
 31132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31133 ;; Tracked objects:
 31134 ;;		On entry : 3F/39
 31135 ;;		On exit  : 0/0
 31136 ;;		Unchanged: 0/0
 31137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31142 ;;Total ram usage:        0 bytes
 31143 ;; Hardware stack levels used:    1
 31144 ;; Hardware stack levels required when called:   15
 31145 ;; This function calls:
 31146 ;;		Nothing
 31147 ;; This function is called by:
 31148 ;;		_EXT_INT_Initialize
 31149 ;;		_start_switch_handler
 31150 ;; This function uses a reentrant model
 31151 ;;
 31152                           
 31153                           	psect	text130
 31154  01BC66                     __ptext130:
 31155                           	opt callstack 0
 31156  01BC66                     _INT1_SetInterruptHandler:
 31157                           	opt callstack 14
 31158                           
 31159                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31160                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31161                           
 31162                           ; BSR set to: 57
 31163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31164                           ;incstack = 0
 31165  01BC66  50E1               	movf	fsr1l,w,c
 31166  01BC68  0FFD               	addlw	-3
 31167  01BC6A  6ED9               	movwf	fsr2l,c
 31168  01BC6C  50E2               	movf	fsr1h,w,c
 31169  01BC6E  6EDA               	movwf	fsr2h,c
 31170  01BC70  0EFF               	movlw	255
 31171  01BC72  22DA               	addwfc	fsr2h,f,c
 31172  01BC74  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 31173  01BC7A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 31174  01BC80  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 31175                           
 31176                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31177  01BC86  52E5               	movf	postdec1,f,c
 31178  01BC88  52E5               	movf	postdec1,f,c
 31179  01BC8A  52E5               	movf	postdec1,f,c
 31180  01BC8C  0012               	return		;funcret
 31181  01BC8E                     __end_of_INT1_SetInterruptHandler:
 31182                           	opt callstack 0
 31183                           
 31184 ;; *************** function _INT0_SetInterruptHandler *****************
 31185 ;; Defined at:
 31186 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31187 ;; Parameters:    Size  Location     Type
 31188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31189 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31190 ;; Auto vars:     Size  Location     Type
 31191 ;;		None
 31192 ;; Return value:  Size  Location     Type
 31193 ;;                  1  [STACK] void 
 31194 ;; Registers used:
 31195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31196 ;; Tracked objects:
 31197 ;;		On entry : 3F/39
 31198 ;;		On exit  : 0/0
 31199 ;;		Unchanged: 0/0
 31200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;Total ram usage:        0 bytes
 31206 ;; Hardware stack levels used:    1
 31207 ;; Hardware stack levels required when called:   15
 31208 ;; This function calls:
 31209 ;;		Nothing
 31210 ;; This function is called by:
 31211 ;;		_EXT_INT_Initialize
 31212 ;; This function uses a reentrant model
 31213 ;;
 31214                           
 31215                           	psect	text131
 31216  01BC8E                     __ptext131:
 31217                           	opt callstack 0
 31218  01BC8E                     _INT0_SetInterruptHandler:
 31219                           	opt callstack 13
 31220                           
 31221                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31222                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31223                           
 31224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31225                           ;incstack = 0
 31226  01BC8E  50E1               	movf	fsr1l,w,c
 31227  01BC90  0FFD               	addlw	-3
 31228  01BC92  6ED9               	movwf	fsr2l,c
 31229  01BC94  50E2               	movf	fsr1h,w,c
 31230  01BC96  6EDA               	movwf	fsr2h,c
 31231  01BC98  0EFF               	movlw	255
 31232  01BC9A  22DA               	addwfc	fsr2h,f,c
 31233  01BC9C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 31234  01BCA2  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 31235  01BCA8  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 31236                           
 31237                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31238  01BCAE  52E5               	movf	postdec1,f,c
 31239  01BCB0  52E5               	movf	postdec1,f,c
 31240  01BCB2  52E5               	movf	postdec1,f,c
 31241  01BCB4  0012               	return		;funcret
 31242  01BCB6                     __end_of_INT0_SetInterruptHandler:
 31243                           	opt callstack 0
 31244                           
 31245 ;; *************** function _DMA2_Initialize *****************
 31246 ;; Defined at:
 31247 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31248 ;; Parameters:    Size  Location     Type
 31249 ;;		None
 31250 ;; Auto vars:     Size  Location     Type
 31251 ;;		None
 31252 ;; Return value:  Size  Location     Type
 31253 ;;                  1  [STACK] void 
 31254 ;; Registers used:
 31255 ;;		wreg, status,2
 31256 ;; Tracked objects:
 31257 ;;		On entry : 3F/3D
 31258 ;;		On exit  : 3F/3B
 31259 ;;		Unchanged: 0/0
 31260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31265 ;;Total ram usage:        0 bytes
 31266 ;; Hardware stack levels used:    1
 31267 ;; Hardware stack levels required when called:   15
 31268 ;; This function calls:
 31269 ;;		Nothing
 31270 ;; This function is called by:
 31271 ;;		_SYSTEM_Initialize
 31272 ;; This function uses a reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text132
 31276  01B270                     __ptext132:
 31277                           	opt callstack 0
 31278  01B270                     _DMA2_Initialize:
 31279                           	opt callstack 14
 31280                           
 31281                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31282                           
 31283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31284                           ;incstack = 0
 31285  01B270  0E00               	movlw	0
 31286  01B272  013B               	movlb	59	; () banked
 31287  01B274  6FD9               	movwf	217,b	;volatile
 31288  01B276  0E10               	movlw	16
 31289  01B278  6FDA               	movwf	218,b	;volatile
 31290  01B27A  0E00               	movlw	0
 31291  01B27C  6FDB               	movwf	219,b	;volatile
 31292                           
 31293                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31294  01B27E  0E3F               	movlw	63
 31295  01B280  6FD1               	movwf	209,b	;volatile
 31296  01B282  0EBB               	movlw	187
 31297  01B284  6FD0               	movwf	208,b	;volatile
 31298                           
 31299                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31300  01B286  0E03               	movlw	3
 31301  01B288  6FDD               	movwf	221,b	;volatile
 31302                           
 31303                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31304  01B28A  0E00               	movlw	0
 31305  01B28C  6FD8               	movwf	216,b	;volatile
 31306  01B28E  0E01               	movlw	1
 31307  01B290  6FD7               	movwf	215,b	;volatile
 31308                           
 31309                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31310  01B292  0E00               	movlw	0
 31311  01B294  6FCF               	movwf	207,b	;volatile
 31312  01B296  0E01               	movlw	1
 31313  01B298  6FCE               	movwf	206,b	;volatile
 31314                           
 31315                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31316  01B29A  0E1C               	movlw	28
 31317  01B29C  6FDF               	movwf	223,b	;volatile
 31318                           
 31319                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31320  01B29E  0E3D               	movlw	61
 31321  01B2A0  6FDE               	movwf	222,b	;volatile
 31322                           
 31323                           ; BSR set to: 59
 31324                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31325  01B2A2  0139               	movlb	57	; () banked
 31326  01B2A4  97A5               	bcf	165,3,b	;volatile
 31327                           
 31328                           ; BSR set to: 57
 31329                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31330  01B2A6  95A5               	bcf	165,2,b	;volatile
 31331                           
 31332                           ; BSR set to: 57
 31333                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31334  01B2A8  9BA5               	bcf	165,5,b	;volatile
 31335                           
 31336                           ; BSR set to: 57
 31337                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31338  01B2AA  99A5               	bcf	165,4,b	;volatile
 31339                           
 31340                           ; BSR set to: 57
 31341                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31342  01B2AC  9795               	bcf	149,3,b	;volatile
 31343                           
 31344                           ; BSR set to: 57
 31345                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31346  01B2AE  9595               	bcf	149,2,b	;volatile
 31347                           
 31348                           ; BSR set to: 57
 31349                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31350  01B2B0  9B95               	bcf	149,5,b	;volatile
 31351                           
 31352                           ; BSR set to: 57
 31353                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31354  01B2B2  9995               	bcf	149,4,b	;volatile
 31355  01B2B4  9ED2               	bcf	16338,7,c	;# 
 31356  01B2B6  0139               	banksel	14831	;# 
 31357  01B2B8  0E55               	movlw	85	;# 
 31358  01B2BA  6FEF               	movwf	14831,b	;# 
 31359  01B2BC  0EAA               	movlw	170	;# 
 31360  01B2BE  6FEF               	movwf	14831,b	;# 
 31361  01B2C0  81EF               	bsf	14831,0,b	;# 
 31362  01B2C2  8ED2               	bsf	16338,7,c	;# 
 31363                           
 31364                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31365  01B2C4  013B               	movlb	59	; () banked
 31366  01B2C6  6BDC               	clrf	220,b	;volatile
 31367                           
 31368                           ; BSR set to: 59
 31369                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31370  01B2C8  0012               	return		;funcret
 31371  01B2CA                     __end_of_DMA2_Initialize:
 31372                           	opt callstack 0
 31373                           
 31374 ;; *************** function _DMA1_Initialize *****************
 31375 ;; Defined at:
 31376 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31377 ;; Parameters:    Size  Location     Type
 31378 ;;		None
 31379 ;; Auto vars:     Size  Location     Type
 31380 ;;		None
 31381 ;; Return value:  Size  Location     Type
 31382 ;;                  1  [STACK] void 
 31383 ;; Registers used:
 31384 ;;		wreg, status,2
 31385 ;; Tracked objects:
 31386 ;;		On entry : 3F/3B
 31387 ;;		On exit  : 3F/3B
 31388 ;;		Unchanged: 0/0
 31389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31394 ;;Total ram usage:        0 bytes
 31395 ;; Hardware stack levels used:    1
 31396 ;; Hardware stack levels required when called:   15
 31397 ;; This function calls:
 31398 ;;		Nothing
 31399 ;; This function is called by:
 31400 ;;		_SYSTEM_Initialize
 31401 ;; This function uses a reentrant model
 31402 ;;
 31403                           
 31404                           	psect	text133
 31405  01AE90                     __ptext133:
 31406                           	opt callstack 0
 31407  01AE90                     _DMA1_Initialize:
 31408                           	opt callstack 14
 31409                           
 31410                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31411                           
 31412                           ; BSR set to: 59
 31413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31414                           ;incstack = 0
 31415  01AE90  0E00               	movlw	0
 31416  01AE92  013B               	movlb	59	; () banked
 31417  01AE94  6FF9               	movwf	249,b	;volatile
 31418  01AE96  0E10               	movlw	16
 31419  01AE98  6FFA               	movwf	250,b	;volatile
 31420  01AE9A  0E00               	movlw	0
 31421  01AE9C  6FFB               	movwf	251,b	;volatile
 31422                           
 31423                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31424  01AE9E  0E3D               	movlw	61
 31425  01AEA0  6FF1               	movwf	241,b	;volatile
 31426  01AEA2  0E11               	movlw	17
 31427  01AEA4  6FF0               	movwf	240,b	;volatile
 31428                           
 31429                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31430  01AEA6  0E03               	movlw	3
 31431  01AEA8  6FFD               	movwf	253,b	;volatile
 31432                           
 31433                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31434  01AEAA  0E00               	movlw	0
 31435  01AEAC  6FF8               	movwf	248,b	;volatile
 31436  01AEAE  0E01               	movlw	1
 31437  01AEB0  6FF7               	movwf	247,b	;volatile
 31438                           
 31439                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31440  01AEB2  0E00               	movlw	0
 31441  01AEB4  6FEF               	movwf	239,b	;volatile
 31442  01AEB6  0E01               	movlw	1
 31443  01AEB8  6FEE               	movwf	238,b	;volatile
 31444                           
 31445                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31446  01AEBA  0E15               	movlw	21
 31447  01AEBC  6FFF               	movwf	255,b	;volatile
 31448                           
 31449                           ; BSR set to: 59
 31450                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31451  01AEBE  6BFE               	clrf	254,b	;volatile
 31452                           
 31453                           ; BSR set to: 59
 31454                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31455  01AEC0  0139               	movlb	57	; () banked
 31456  01AEC2  93A2               	bcf	162,1,b	;volatile
 31457                           
 31458                           ; BSR set to: 57
 31459                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31460  01AEC4  91A2               	bcf	162,0,b	;volatile
 31461                           
 31462                           ; BSR set to: 57
 31463                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31464  01AEC6  97A2               	bcf	162,3,b	;volatile
 31465                           
 31466                           ; BSR set to: 57
 31467                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31468  01AEC8  95A2               	bcf	162,2,b	;volatile
 31469                           
 31470                           ; BSR set to: 57
 31471                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31472  01AECA  8392               	bsf	146,1,b	;volatile
 31473                           
 31474                           ; BSR set to: 57
 31475                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31476  01AECC  8192               	bsf	146,0,b	;volatile
 31477                           
 31478                           ; BSR set to: 57
 31479                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31480  01AECE  8792               	bsf	146,3,b	;volatile
 31481                           
 31482                           ; BSR set to: 57
 31483                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31484  01AED0  8592               	bsf	146,2,b	;volatile
 31485                           
 31486                           ; BSR set to: 57
 31487                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31488  01AED2  6BF1               	clrf	241,b	;volatile
 31489                           
 31490                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31491  01AED4  0E01               	movlw	1
 31492  01AED6  6FF2               	movwf	242,b	;volatile
 31493                           
 31494                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31495  01AED8  0E04               	movlw	4
 31496  01AEDA  6FF3               	movwf	243,b	;volatile
 31497                           
 31498                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31499  01AEDC  0E02               	movlw	2
 31500  01AEDE  6FF4               	movwf	244,b	;volatile
 31501                           
 31502                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31503  01AEE0  0E03               	movlw	3
 31504  01AEE2  6FF7               	movwf	247,b	;volatile
 31505  01AEE4  9ED2               	bcf	16338,7,c	;# 
 31506  01AEE6  0139               	banksel	14831	;# 
 31507  01AEE8  0E55               	movlw	85	;# 
 31508  01AEEA  6FEF               	movwf	14831,b	;# 
 31509  01AEEC  0EAA               	movlw	170	;# 
 31510  01AEEE  6FEF               	movwf	14831,b	;# 
 31511  01AEF0  81EF               	bsf	14831,0,b	;# 
 31512  01AEF2  8ED2               	bsf	16338,7,c	;# 
 31513                           
 31514                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31515  01AEF4  013B               	movlb	59	; () banked
 31516  01AEF6  6BFC               	clrf	252,b	;volatile
 31517                           
 31518                           ; BSR set to: 59
 31519                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31520  01AEF8  0012               	return		;funcret
 31521  01AEFA                     __end_of_DMA1_Initialize:
 31522                           	opt callstack 0
 31523                           
 31524 ;; *************** function _CLKREF_Initialize *****************
 31525 ;; Defined at:
 31526 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31527 ;; Parameters:    Size  Location     Type
 31528 ;;		None
 31529 ;; Auto vars:     Size  Location     Type
 31530 ;;		None
 31531 ;; Return value:  Size  Location     Type
 31532 ;;                  1  [STACK] void 
 31533 ;; Registers used:
 31534 ;;		wreg, status,2
 31535 ;; Tracked objects:
 31536 ;;		On entry : 3F/3B
 31537 ;;		On exit  : 3F/3C
 31538 ;;		Unchanged: 0/0
 31539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31544 ;;Total ram usage:        0 bytes
 31545 ;; Hardware stack levels used:    1
 31546 ;; Hardware stack levels required when called:   15
 31547 ;; This function calls:
 31548 ;;		Nothing
 31549 ;; This function is called by:
 31550 ;;		_SYSTEM_Initialize
 31551 ;; This function uses a reentrant model
 31552 ;;
 31553                           
 31554                           	psect	text134
 31555  01C116                     __ptext134:
 31556                           	opt callstack 0
 31557  01C116                     _CLKREF_Initialize:
 31558                           	opt callstack 14
 31559                           
 31560                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31561                           
 31562                           ; BSR set to: 59
 31563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31564                           ;incstack = 0
 31565  01C116  013C               	movlb	60	; () banked
 31566  01C118  6BE6               	clrf	230,b	;volatile
 31567                           
 31568                           ; BSR set to: 60
 31569                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31570  01C11A  0E94               	movlw	148
 31571  01C11C  6FE5               	movwf	229,b	;volatile
 31572                           
 31573                           ; BSR set to: 60
 31574                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31575  01C11E  0012               	return		;funcret
 31576  01C120                     __end_of_CLKREF_Initialize:
 31577                           	opt callstack 0
 31578                           
 31579 ;; *************** function _ADCC_Initialize *****************
 31580 ;; Defined at:
 31581 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31582 ;; Parameters:    Size  Location     Type
 31583 ;;		None
 31584 ;; Auto vars:     Size  Location     Type
 31585 ;;		None
 31586 ;; Return value:  Size  Location     Type
 31587 ;;                  1  [STACK] void 
 31588 ;; Registers used:
 31589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31590 ;; Tracked objects:
 31591 ;;		On entry : 3F/3E
 31592 ;;		On exit  : 0/0
 31593 ;;		Unchanged: 0/0
 31594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31599 ;;Total ram usage:        0 bytes
 31600 ;; Hardware stack levels used:    1
 31601 ;; Hardware stack levels required when called:   16
 31602 ;; This function calls:
 31603 ;;		_ADCC_SetADIInterruptHandler
 31604 ;;		_ADCC_SetADTIInterruptHandler
 31605 ;; This function is called by:
 31606 ;;		_SYSTEM_Initialize
 31607 ;; This function uses a reentrant model
 31608 ;;
 31609                           
 31610                           	psect	text135
 31611  01AEFA                     __ptext135:
 31612                           	opt callstack 0
 31613  01AEFA                     _ADCC_Initialize:
 31614                           	opt callstack 13
 31615                           
 31616                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31617                           
 31618                           ; BSR set to: 60
 31619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31620                           ;incstack = 0
 31621  01AEFA  013E               	movlb	62	; () banked
 31622  01AEFC  6BDE               	clrf	222,b	;volatile
 31623                           
 31624                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31625  01AEFE  6BDF               	clrf	223,b	;volatile
 31626                           
 31627                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31628  01AF00  6BE0               	clrf	224,b	;volatile
 31629                           
 31630                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31631  01AF02  6BE1               	clrf	225,b	;volatile
 31632                           
 31633                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31634  01AF04  6BE4               	clrf	228,b	;volatile
 31635                           
 31636                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31637  01AF06  6BE5               	clrf	229,b	;volatile
 31638                           
 31639                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31640  01AF08  6BEA               	clrf	234,b	;volatile
 31641                           
 31642                           ; BSR set to: 62
 31643                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31644  01AF0A  0E40               	movlw	64
 31645  01AF0C  6FEC               	movwf	236,b	;volatile
 31646                           
 31647                           ; BSR set to: 62
 31648                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31649  01AF0E  6BF1               	clrf	241,b	;volatile
 31650                           
 31651                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31652  01AF10  0E20               	movlw	32
 31653  01AF12  6FF3               	movwf	243,b	;volatile
 31654                           
 31655                           ; BSR set to: 62
 31656                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31657  01AF14  6BF4               	clrf	244,b	;volatile
 31658                           
 31659                           ; BSR set to: 62
 31660                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31661  01AF16  6BF5               	clrf	245,b	;volatile
 31662                           
 31663                           ; BSR set to: 62
 31664                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31665  01AF18  6BF6               	clrf	246,b	;volatile
 31666                           
 31667                           ; BSR set to: 62
 31668                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31669  01AF1A  6BF7               	clrf	247,b	;volatile
 31670                           
 31671                           ; BSR set to: 62
 31672                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31673  01AF1C  6BF9               	clrf	249,b	;volatile
 31674                           
 31675                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31676  01AF1E  0E5B               	movlw	91
 31677  01AF20  6FFA               	movwf	250,b	;volatile
 31678                           
 31679                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31680  01AF22  0E27               	movlw	39
 31681  01AF24  6FFB               	movwf	251,b	;volatile
 31682                           
 31683                           ; BSR set to: 62
 31684                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31685  01AF26  6BFC               	clrf	252,b	;volatile
 31686                           
 31687                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31688  01AF28  0E02               	movlw	2
 31689  01AF2A  6FFD               	movwf	253,b	;volatile
 31690                           
 31691                           ; BSR set to: 62
 31692                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31693  01AF2C  6BFE               	clrf	254,b	;volatile
 31694                           
 31695                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31696  01AF2E  0E07               	movlw	7
 31697  01AF30  6FFF               	movwf	255,b	;volatile
 31698                           
 31699                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31700  01AF32  0E84               	movlw	132
 31701  01AF34  6FF8               	movwf	248,b	;volatile
 31702                           
 31703                           ; BSR set to: 62
 31704                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31705  01AF36  0139               	movlb	57	; () banked
 31706  01AF38  95A1               	bcf	161,2,b	;volatile
 31707                           
 31708                           ; BSR set to: 57
 31709                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31710  01AF3A  8591               	bsf	145,2,b	;volatile
 31711                           
 31712                           ; BSR set to: 57
 31713                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31714  01AF3C  0E9C               	movlw	low _ADCC_DefaultInterruptHandler
 31715  01AF3E  6EE6               	movwf	postinc1,c
 31716  01AF40  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31717  01AF42  6EE6               	movwf	postinc1,c
 31718  01AF44  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31719  01AF46  6EE6               	movwf	postinc1,c
 31720  01AF48  EC6F  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31721                           
 31722                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31723  01AF4C  0139               	movlb	57	; () banked
 31724  01AF4E  97A1               	bcf	161,3,b	;volatile
 31725                           
 31726                           ; BSR set to: 57
 31727                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31728  01AF50  8791               	bsf	145,3,b	;volatile
 31729                           
 31730                           ; BSR set to: 57
 31731                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31732  01AF52  0E9C               	movlw	low _ADCC_DefaultInterruptHandler
 31733  01AF54  6EE6               	movwf	postinc1,c
 31734  01AF56  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31735  01AF58  6EE6               	movwf	postinc1,c
 31736  01AF5A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31737  01AF5C  6EE6               	movwf	postinc1,c
 31738  01AF5E  EC5B  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31739                           
 31740                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31741  01AF62  0012               	return		;funcret
 31742  01AF64                     __end_of_ADCC_Initialize:
 31743                           	opt callstack 0
 31744                           
 31745 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31746 ;; Defined at:
 31747 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31748 ;; Parameters:    Size  Location     Type
 31749 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31750 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31751 ;; Auto vars:     Size  Location     Type
 31752 ;;		None
 31753 ;; Return value:  Size  Location     Type
 31754 ;;                  1  [STACK] void 
 31755 ;; Registers used:
 31756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31757 ;; Tracked objects:
 31758 ;;		On entry : 0/1
 31759 ;;		On exit  : 0/0
 31760 ;;		Unchanged: 0/0
 31761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31766 ;;Total ram usage:        0 bytes
 31767 ;; Hardware stack levels used:    1
 31768 ;; Hardware stack levels required when called:   15
 31769 ;; This function calls:
 31770 ;;		Nothing
 31771 ;; This function is called by:
 31772 ;;		_ADCC_Initialize
 31773 ;;		_start_adc_scan
 31774 ;; This function uses a reentrant model
 31775 ;;
 31776                           
 31777                           	psect	text136
 31778  01BCB6                     __ptext136:
 31779                           	opt callstack 0
 31780  01BCB6                     _ADCC_SetADTIInterruptHandler:
 31781                           	opt callstack 14
 31782                           
 31783                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31784                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31785                           
 31786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31787                           ;incstack = 0
 31788  01BCB6  50E1               	movf	fsr1l,w,c
 31789  01BCB8  0FFD               	addlw	-3
 31790  01BCBA  6ED9               	movwf	fsr2l,c
 31791  01BCBC  50E2               	movf	fsr1h,w,c
 31792  01BCBE  6EDA               	movwf	fsr2h,c
 31793  01BCC0  0EFF               	movlw	255
 31794  01BCC2  22DA               	addwfc	fsr2h,f,c
 31795  01BCC4  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31796  01BCCA  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31797  01BCD0  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31798                           
 31799                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31800  01BCD6  52E5               	movf	postdec1,f,c
 31801  01BCD8  52E5               	movf	postdec1,f,c
 31802  01BCDA  52E5               	movf	postdec1,f,c
 31803  01BCDC  0012               	return		;funcret
 31804  01BCDE                     __end_of_ADCC_SetADTIInterruptHandler:
 31805                           	opt callstack 0
 31806                           
 31807 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31808 ;; Defined at:
 31809 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31812 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31813 ;; Auto vars:     Size  Location     Type
 31814 ;;		None
 31815 ;; Return value:  Size  Location     Type
 31816 ;;                  1  [STACK] void 
 31817 ;; Registers used:
 31818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31819 ;; Tracked objects:
 31820 ;;		On entry : 7/1
 31821 ;;		On exit  : 0/0
 31822 ;;		Unchanged: 0/0
 31823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31828 ;;Total ram usage:        0 bytes
 31829 ;; Hardware stack levels used:    1
 31830 ;; Hardware stack levels required when called:   15
 31831 ;; This function calls:
 31832 ;;		Nothing
 31833 ;; This function is called by:
 31834 ;;		_ADCC_Initialize
 31835 ;;		_start_adc_scan
 31836 ;; This function uses a reentrant model
 31837 ;;
 31838                           
 31839                           	psect	text137
 31840  01BCDE                     __ptext137:
 31841                           	opt callstack 0
 31842  01BCDE                     _ADCC_SetADIInterruptHandler:
 31843                           	opt callstack 14
 31844                           
 31845                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31846                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31847                           
 31848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31849                           ;incstack = 0
 31850  01BCDE  50E1               	movf	fsr1l,w,c
 31851  01BCE0  0FFD               	addlw	-3
 31852  01BCE2  6ED9               	movwf	fsr2l,c
 31853  01BCE4  50E2               	movf	fsr1h,w,c
 31854  01BCE6  6EDA               	movwf	fsr2h,c
 31855  01BCE8  0EFF               	movlw	255
 31856  01BCEA  22DA               	addwfc	fsr2h,f,c
 31857  01BCEC  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31858  01BCF2  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31859  01BCF8  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31860                           
 31861                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31862  01BCFE  52E5               	movf	postdec1,f,c
 31863  01BD00  52E5               	movf	postdec1,f,c
 31864  01BD02  52E5               	movf	postdec1,f,c
 31865  01BD04  0012               	return		;funcret
 31866  01BD06                     __end_of_ADCC_SetADIInterruptHandler:
 31867                           	opt callstack 0
 31868                           
 31869 ;; *************** function _INT1_ISR *****************
 31870 ;; Defined at:
 31871 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31872 ;; Parameters:    Size  Location     Type
 31873 ;;		None
 31874 ;; Auto vars:     Size  Location     Type
 31875 ;;		None
 31876 ;; Return value:  Size  Location     Type
 31877 ;;                  1    wreg      void 
 31878 ;; Registers used:
 31879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31880 ;; Tracked objects:
 31881 ;;		On entry : 0/0
 31882 ;;		On exit  : 0/0
 31883 ;;		Unchanged: 0/0
 31884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31889 ;;Total ram usage:        4 bytes
 31890 ;; Hardware stack levels used:    1
 31891 ;; Hardware stack levels required when called:    5
 31892 ;; This function calls:
 31893 ;;		_INT1_CallBack
 31894 ;; This function is called by:
 31895 ;;		Interrupt level 1
 31896 ;; This function uses a non-reentrant model
 31897 ;;
 31898                           
 31899                           	psect	text138
 31900  01B804                     __ptext138:
 31901                           	opt callstack 0
 31902  01B804                     _INT1_ISR:
 31903                           	opt callstack 11
 31904                           
 31905                           ;incstack = 0
 31906  01B804  006F FF60  F027    	movff	status,??_INT1_ISR
 31907  01B80A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31908  01B810  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31909  01B816  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31910  01B81C  EE16  F0AF         	lfsr	1,___intlo_sp
 31911                           
 31912                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31913  01B820  0139               	movlb	57	; () banked
 31914  01B822  91A5               	bcf	165,0,b	;volatile
 31915                           
 31916                           ; BSR set to: 57
 31917                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31918  01B824  ECE4  F0DE         	call	_INT1_CallBack	;wreg free
 31919  01B828  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31920  01B82E  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31921  01B834  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31922  01B83A  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31923  01B840  0011               	retfie		f
 31924  01B842                     __end_of_INT1_ISR:
 31925                           	opt callstack 0
 31926                           
 31927 ;; *************** function _INT1_CallBack *****************
 31928 ;; Defined at:
 31929 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31930 ;; Parameters:    Size  Location     Type
 31931 ;;		None
 31932 ;; Auto vars:     Size  Location     Type
 31933 ;;		None
 31934 ;; Return value:  Size  Location     Type
 31935 ;;                  1  [STACK] void 
 31936 ;; Registers used:
 31937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31938 ;; Tracked objects:
 31939 ;;		On entry : 3F/39
 31940 ;;		On exit  : 0/0
 31941 ;;		Unchanged: 0/0
 31942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31947 ;;Total ram usage:        0 bytes
 31948 ;; Hardware stack levels used:    1
 31949 ;; Hardware stack levels required when called:    4
 31950 ;; This function calls:
 31951 ;;		Absolute function
 31952 ;;		_INT1_DefaultInterruptHandler
 31953 ;;		_switch_handler
 31954 ;; This function is called by:
 31955 ;;		_INT1_ISR
 31956 ;; This function uses a reentrant model
 31957 ;;
 31958                           
 31959                           	psect	text139
 31960  01BDC8                     __ptext139:
 31961                           	opt callstack 0
 31962  01BDC8                     _INT1_CallBack:
 31963                           	opt callstack 11
 31964                           
 31965                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31966                           
 31967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31968                           ;incstack = 0
 31969  01BDC8  0100               	movlb	0	; () banked
 31970  01BDCA  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31971  01BDCC  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31972  01BDCE  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31973  01BDD0  B4D8               	btfsc	status,2,c
 31974  01BDD2  0012               	return	
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31978  01BDD4  D801               	call	u999_28
 31979  01BDD6  0012               	return	
 31980  01BDD8                     u999_28:
 31981  01BDD8  0005               	push	
 31982  01BDDA  6EFA               	movwf	pclath,c
 31983  01BDDC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31984  01BDDE  6EFD               	movwf	tosl,c
 31985  01BDE0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31986  01BDE2  6EFE               	movwf	tosh,c
 31987  01BDE4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31988  01BDE6  6EFF               	movwf	tosu,c
 31989  01BDE8  50FA               	movf	pclath,w,c
 31990  01BDEA  0012               	return		;indir
 31991  01BDEC                     __end_of_INT1_CallBack:
 31992                           	opt callstack 0
 31993                           
 31994 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31995 ;; Defined at:
 31996 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31997 ;; Parameters:    Size  Location     Type
 31998 ;;		None
 31999 ;; Auto vars:     Size  Location     Type
 32000 ;;		None
 32001 ;; Return value:  Size  Location     Type
 32002 ;;                  1  [STACK] void 
 32003 ;; Registers used:
 32004 ;;		None
 32005 ;; Tracked objects:
 32006 ;;		On entry : 3F/0
 32007 ;;		On exit  : 0/0
 32008 ;;		Unchanged: 0/0
 32009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32014 ;;Total ram usage:        0 bytes
 32015 ;; Hardware stack levels used:    1
 32016 ;; Hardware stack levels required when called:    3
 32017 ;; This function calls:
 32018 ;;		Nothing
 32019 ;; This function is called by:
 32020 ;;		_EXT_INT_Initialize
 32021 ;;		_INT1_CallBack
 32022 ;; This function uses a reentrant model
 32023 ;;
 32024                           
 32025                           	psect	text140
 32026  01C196                     __ptext140:
 32027                           	opt callstack 0
 32028  01C196                     _INT1_DefaultInterruptHandler:
 32029                           	opt callstack 11
 32030                           
 32031                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32032                           
 32033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32034                           ;incstack = 0
 32035  01C196  0012               	return		;funcret
 32036  01C198                     __end_of_INT1_DefaultInterruptHandler:
 32037                           	opt callstack 0
 32038                           
 32039 ;; *************** function _switch_handler *****************
 32040 ;; Defined at:
 32041 ;;		line 58 in file "dio.c"
 32042 ;; Parameters:    Size  Location     Type
 32043 ;;		None
 32044 ;; Auto vars:     Size  Location     Type
 32045 ;;  i               1  [STACK] unsigned char 
 32046 ;;  sw_value        1  [STACK] unsigned char 
 32047 ;; Return value:  Size  Location     Type
 32048 ;;                  1  [STACK] void 
 32049 ;; Registers used:
 32050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32051 ;; Tracked objects:
 32052 ;;		On entry : 3F/0
 32053 ;;		On exit  : 0/0
 32054 ;;		Unchanged: 0/0
 32055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;Total ram usage:        0 bytes
 32061 ;; Hardware stack levels used:    1
 32062 ;; Hardware stack levels required when called:    3
 32063 ;; This function calls:
 32064 ;;		Nothing
 32065 ;; This function is called by:
 32066 ;;		_start_switch_handler
 32067 ;;		_INT1_CallBack
 32068 ;; This function uses a reentrant model
 32069 ;;
 32070                           
 32071                           	psect	text141
 32072  0193C8                     __ptext141:
 32073                           	opt callstack 0
 32074  0193C8                     _switch_handler:
 32075                           	opt callstack 0
 32076                           
 32077                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32078  0193C8  52E6               	movf	postinc1,f,c
 32079  0193CA  52E6               	movf	postinc1,f,c
 32080                           
 32081                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32082                           ;stkvar	_i @ sp[(-2)+0]
 32083                           
 32084                           ;incstack = 0
 32085  0193CC  0EFE               	movlw	-2
 32086  0193CE  6AE3               	clrf	plusw1,c
 32087  0193D0  9ABF               	bcf	191,5,c	;volatile
 32088                           
 32089                           ;dio.c: 73:  __nop();
 32090  0193D2  F000               	nop	
 32091                           
 32092                           ;dio.c: 74:  __nop();
 32093  0193D4  F000               	nop	
 32094                           
 32095                           ;dio.c: 75:  __nop();
 32096  0193D6  F000               	nop	
 32097                           
 32098                           ;dio.c: 76:  __nop();
 32099  0193D8  F000               	nop	
 32100                           
 32101                           ;dio.c: 77:  __nop();
 32102  0193DA  F000               	nop	
 32103                           
 32104                           ;dio.c: 78:  __nop();
 32105  0193DC  F000               	nop	
 32106  0193DE  D019               	goto	l10542
 32107  0193E0                     l10530:
 32108                           
 32109                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 32110  0193E0  A6CF               	btfss	207,3,c	;volatile
 32111  0193E2  D011               	goto	u968_20
 32112  0193E4  D00D               	goto	u968_21
 32113  0193E6                     u965_28:
 32114                           
 32115                           ;stkvar	_sw_value @ sp[(-2)+1]
 32116  0193E6  0EFF               	movlw	-1
 32117  0193E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 32118                           
 32119                           ;dio.c: 84:    break;
 32120  0193EE  D027               	goto	l10544
 32121  0193F0                     l10532:
 32122                           
 32123                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 32124  0193F0  A4CF               	btfss	207,2,c	;volatile
 32125  0193F2  D009               	goto	u968_20
 32126  0193F4  D005               	goto	u968_21
 32127  0193F6                     l10534:
 32128                           
 32129                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 32130  0193F6  A2CF               	btfss	207,1,c	;volatile
 32131  0193F8  D006               	goto	u968_20
 32132  0193FA  D002               	goto	u968_21
 32133  0193FC                     l10536:
 32134                           
 32135                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 32136  0193FC  A0CF               	btfss	207,0,c	;volatile
 32137  0193FE  D003               	goto	u968_20
 32138  019400                     u968_21:
 32139  019400  6A0C               	clrf	(btemp+11)^0,c
 32140  019402  2A0C               	incf	(btemp+11)^0,f,c
 32141  019404  D7F0               	goto	u965_28
 32142  019406                     u968_20:
 32143  019406  6A0C               	clrf	(btemp+11)^0,c
 32144  019408  D7EE               	goto	u965_28
 32145  01940A                     l10538:
 32146                           
 32147                           ;dio.c: 95:    sw_value = 1;
 32148                           ;stkvar	_sw_value @ sp[(-2)+1]
 32149  01940A  0EFF               	movlw	-1
 32150  01940C  6AE3               	clrf	plusw1,c
 32151  01940E  2AE3               	incf	plusw1,f,c
 32152                           
 32153                           ;dio.c: 96:    break;
 32154  019410  D016               	goto	l10544
 32155  019412                     l10542:
 32156                           
 32157                           ;stkvar	_i @ sp[(-2)+0]
 32158  019412  0EFE               	movlw	-2
 32159  019414  50E3               	movf	plusw1,w,c
 32160  019416  6E0B               	movwf	(btemp+10)^0,c
 32161  019418  6A0C               	clrf	(btemp+11)^0,c
 32162                           
 32163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32164                           ; Switch size 1, requested type "simple"
 32165                           ; Number of cases is 1, Range of values is 0 to 0
 32166                           ; switch strategies available:
 32167                           ; Name         Instructions Cycles
 32168                           ; simple_byte            4     3 (average)
 32169                           ;	Chosen strategy is simple_byte
 32170  01941A  500C               	movf	(btemp+11)^0,w,c
 32171  01941C  0A00               	xorlw	0	; case 0
 32172  01941E  A4D8               	btfss	status,2,c
 32173  019420  D7F4               	goto	l10538
 32174                           
 32175                           ; Switch size 1, requested type "simple"
 32176                           ; Number of cases is 4, Range of values is 0 to 3
 32177                           ; switch strategies available:
 32178                           ; Name         Instructions Cycles
 32179                           ; simple_byte           13     7 (average)
 32180                           ;	Chosen strategy is simple_byte
 32181  019422  500B               	movf	(btemp+10)^0,w,c
 32182  019424  0A00               	xorlw	0	; case 0
 32183  019426  B4D8               	btfsc	status,2,c
 32184  019428  D7E9               	goto	l10536
 32185  01942A  0A01               	xorlw	1	; case 1
 32186  01942C  B4D8               	btfsc	status,2,c
 32187  01942E  D7E3               	goto	l10534
 32188  019430  0A03               	xorlw	3	; case 2
 32189  019432  B4D8               	btfsc	status,2,c
 32190  019434  D7DD               	goto	l10532
 32191  019436  0A01               	xorlw	1	; case 3
 32192  019438  B4D8               	btfsc	status,2,c
 32193  01943A  D7D2               	goto	l10530
 32194  01943C  D7E6               	goto	l10538
 32195  01943E                     l10544:
 32196                           
 32197                           ;dio.c: 100:   if (sw_value) {
 32198                           ;stkvar	_sw_value @ sp[(-2)+1]
 32199  01943E  0EFF               	movlw	-1
 32200  019440  50E3               	movf	plusw1,w,c
 32201  019442  B4D8               	btfsc	status,2,c
 32202  019444  D018               	goto	l10550
 32203                           
 32204                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 32205                           ;stkvar	_i @ sp[(-2)+0]
 32206  019446  0EFE               	movlw	-2
 32207  019448  50E3               	movf	plusw1,w,c
 32208  01944A  0D05               	mullw	5
 32209  01944C  0E54               	movlw	low _S
 32210  01944E  24F3               	addwf	243,w,c
 32211  019450  6ED9               	movwf	fsr2l,c
 32212  019452  0E02               	movlw	high _S
 32213  019454  20F4               	addwfc	prodh,w,c
 32214  019456  6EDA               	movwf	fsr2h,c
 32215  019458  04DE               	decf	postinc2,w,c
 32216  01945A  A4D8               	btfss	status,2,c
 32217  01945C  D049               	goto	l10558
 32218                           
 32219                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 32220                           ;stkvar	_i @ sp[(-2)+0]
 32221  01945E  0EFE               	movlw	-2
 32222  019460  50E3               	movf	plusw1,w,c
 32223  019462  0D05               	mullw	5
 32224  019464  0E54               	movlw	low _S
 32225  019466  24F3               	addwf	243,w,c
 32226  019468  6ED9               	movwf	fsr2l,c
 32227  01946A  0E02               	movlw	high _S
 32228  01946C  20F4               	addwfc	prodh,w,c
 32229  01946E  6EDA               	movwf	fsr2h,c
 32230  019470  0E00               	movlw	0
 32231  019472  6EDF               	movwf	indf2,c
 32232  019474  D03D               	goto	l10558
 32233  019476                     l10550:
 32234                           
 32235                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 32236                           ;stkvar	_i @ sp[(-2)+0]
 32237  019476  0EFE               	movlw	-2
 32238  019478  50E3               	movf	plusw1,w,c
 32239  01947A  0D05               	mullw	5
 32240  01947C  0E54               	movlw	low _S
 32241  01947E  24F3               	addwf	243,w,c
 32242  019480  6ED9               	movwf	fsr2l,c
 32243  019482  0E02               	movlw	high _S
 32244  019484  20F4               	addwfc	prodh,w,c
 32245  019486  6EDA               	movwf	fsr2h,c
 32246  019488  50DF               	movf	indf2,w,c
 32247  01948A  A4D8               	btfss	status,2,c
 32248  01948C  D031               	goto	l10558
 32249                           
 32250                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 32251                           ;stkvar	_i @ sp[(-2)+0]
 32252  01948E  0EFE               	movlw	-2
 32253  019490  50E3               	movf	plusw1,w,c
 32254  019492  0D05               	mullw	5
 32255  019494  0E54               	movlw	low _S
 32256  019496  24F3               	addwf	243,w,c
 32257  019498  6ED9               	movwf	fsr2l,c
 32258  01949A  0E02               	movlw	high _S
 32259  01949C  20F4               	addwfc	prodh,w,c
 32260  01949E  6EDA               	movwf	fsr2h,c
 32261  0194A0  0E01               	movlw	1
 32262  0194A2  6EDF               	movwf	indf2,c
 32263                           
 32264                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 32265  0194A4  EE20  F1EB         	lfsr	2,_V+187	;volatile
 32266                           
 32267                           ;stkvar	_i @ sp[(-2)+0]
 32268  0194A8  0EFE               	movlw	-2
 32269  0194AA  50E3               	movf	plusw1,w,c
 32270  0194AC  0D05               	mullw	5
 32271  0194AE  0E55               	movlw	low (_S+1)
 32272  0194B0  24F3               	addwf	243,w,c
 32273  0194B2  6EE9               	movwf	fsr0l,c
 32274  0194B4  0E02               	movlw	high (_S+1)
 32275  0194B6  20F4               	addwfc	prodh,w,c
 32276  0194B8  6EEA               	movwf	fsr0h,c
 32277  0194BA  006F FF7B FFEE     	movff	postinc2,postinc0
 32278  0194C0  006F FF7B FFEE     	movff	postinc2,postinc0
 32279  0194C6  006F FF7B FFEE     	movff	postinc2,postinc0
 32280  0194CC  006F FF7B FFEE     	movff	postinc2,postinc0
 32281                           
 32282                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 32283                           ;stkvar	_i @ sp[(-2)+0]
 32284  0194D2  0EFE               	movlw	-2
 32285  0194D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32286  0194DA  0E01               	movlw	1
 32287  0194DC  6E0B               	movwf	(btemp+10)^0,c
 32288  0194DE  2A0C               	incf	(btemp+11)^0,f,c
 32289  0194E0  D002               	goto	u972_24
 32290  0194E2                     u972_25:
 32291  0194E2  90D8               	bcf	status,0,c
 32292  0194E4  360B               	rlcf	(btemp+10)^0,f,c
 32293  0194E6                     u972_24:
 32294  0194E6  2E0C               	decfsz	(btemp+11)^0,f,c
 32295  0194E8  D7FC               	goto	u972_25
 32296  0194EA  500B               	movf	(btemp+10)^0,w,c
 32297  0194EC  0102               	movlb	2	; () banked
 32298  0194EE  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32299  0194F0                     l10558:
 32300                           
 32301                           ;dio.c: 111:  } while (++i < 4);
 32302                           ;stkvar	_i @ sp[(-2)+0]
 32303  0194F0  0EFE               	movlw	-2
 32304  0194F2  2AE3               	incf	plusw1,f,c
 32305  0194F4  0EFE               	movlw	-2
 32306  0194F6  006F FF8C  F001    	movff	plusw1,btemp
 32307  0194FC  0E03               	movlw	3
 32308  0194FE  6401               	cpfsgt	btemp^0,c
 32309  019500  D788               	goto	l10542
 32310                           
 32311                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 32312  019502  8ABF               	bsf	191,5,c	;volatile
 32313                           
 32314                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32315  019504  52E5               	movf	postdec1,f,c
 32316  019506  52E5               	movf	postdec1,f,c
 32317  019508  0012               	return		;funcret
 32318  01950A                     __end_of_switch_handler:
 32319                           	opt callstack 0
 32320                           
 32321 ;; *************** function _TMR5_ISR *****************
 32322 ;; Defined at:
 32323 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32324 ;; Parameters:    Size  Location     Type
 32325 ;;		None
 32326 ;; Auto vars:     Size  Location     Type
 32327 ;;		None
 32328 ;; Return value:  Size  Location     Type
 32329 ;;                  1    wreg      void 
 32330 ;; Registers used:
 32331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32332 ;; Tracked objects:
 32333 ;;		On entry : 0/0
 32334 ;;		On exit  : 3F/0
 32335 ;;		Unchanged: 0/0
 32336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32339 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32340 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32341 ;;Total ram usage:       15 bytes
 32342 ;; Hardware stack levels used:    1
 32343 ;; Hardware stack levels required when called:    9
 32344 ;; This function calls:
 32345 ;;		_TMR5_CallBack
 32346 ;;		_TMR5_WriteTimer
 32347 ;; This function is called by:
 32348 ;;		Interrupt level 1
 32349 ;; This function uses a non-reentrant model
 32350 ;;
 32351                           
 32352                           	psect	text142
 32353  01A1C0                     __ptext142:
 32354                           	opt callstack 0
 32355  01A1C0                     _TMR5_ISR:
 32356                           	opt callstack 7
 32357                           
 32358                           ;incstack = 0
 32359  01A1C0  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32360  01A1C6  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32361  01A1CC  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32362  01A1D2  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32363  01A1D8  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32364  01A1DE  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32365  01A1E4  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32366  01A1EA  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32367  01A1F0  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32368  01A1F6  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32369  01A1FC  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32370  01A202  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32371  01A208  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32372  01A20E  EE16  F0AF         	lfsr	1,___intlo_sp
 32373                           
 32374                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32375  01A212  0139               	movlb	57	; () banked
 32376  01A214  9DA8               	bcf	168,6,b	;volatile
 32377                           
 32378                           ; BSR set to: 57
 32379                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32380  01A216  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32381  01A21C  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32382  01A222  ECC1  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32383                           
 32384                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32385  01A226  0101               	movlb	1	; () banked
 32386  01A228  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32387  01A22A  6E2B               	movwf	??_TMR5_ISR^0,c
 32388  01A22C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32389  01A22E  0E05               	movlw	5
 32390  01A230  262B               	addwf	??_TMR5_ISR^0,f,c
 32391  01A232  0E00               	movlw	0
 32392  01A234  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32393  01A236  0100               	movlb	0	; () banked
 32394  01A238  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32395  01A23A  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32396  01A23C  502B               	movf	??_TMR5_ISR^0,w,c
 32397  01A23E  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32398  01A240  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32399  01A242  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32400  01A244  A0D8               	btfss	status,0,c
 32401  01A246  D005               	goto	i1l1019
 32402                           
 32403                           ; BSR set to: 0
 32404                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32405  01A248  ECF6  F0DE         	call	_TMR5_CallBack	;wreg free
 32406                           
 32407                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32408  01A24C  0100               	movlb	0	; () banked
 32409  01A24E  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32410  01A250  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32411  01A252                     i1l1019:
 32412                           
 32413                           ; BSR set to: 0
 32414  01A252  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32415  01A258  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32416  01A25E  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32417  01A264  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32418  01A26A  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32419  01A270  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32420  01A276  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32421  01A27C  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32422  01A282  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32423  01A288  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32424  01A28E  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32425  01A294  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32426  01A29A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32427  01A2A0  0011               	retfie		f
 32428  01A2A2                     __end_of_TMR5_ISR:
 32429                           	opt callstack 0
 32430                           
 32431 ;; *************** function _TMR5_WriteTimer *****************
 32432 ;; Defined at:
 32433 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32434 ;; Parameters:    Size  Location     Type
 32435 ;;  timerVal        2  [STACK] unsigned short 
 32436 ;; Auto vars:     Size  Location     Type
 32437 ;;		None
 32438 ;; Return value:  Size  Location     Type
 32439 ;;                  1  [STACK] void 
 32440 ;; Registers used:
 32441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32442 ;; Tracked objects:
 32443 ;;		On entry : 3F/39
 32444 ;;		On exit  : 0/0
 32445 ;;		Unchanged: 0/0
 32446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32451 ;;Total ram usage:        0 bytes
 32452 ;; Hardware stack levels used:    1
 32453 ;; Hardware stack levels required when called:    3
 32454 ;; This function calls:
 32455 ;;		Nothing
 32456 ;; This function is called by:
 32457 ;;		_TMR5_ISR
 32458 ;; This function uses a reentrant model
 32459 ;;
 32460                           
 32461                           	psect	text143
 32462  01B782                     __ptext143:
 32463                           	opt callstack 0
 32464  01B782                     _TMR5_WriteTimer:
 32465                           	opt callstack 12
 32466                           
 32467                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32468                           
 32469                           ; BSR set to: 0
 32470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32471                           ;incstack = 0
 32472  01B782  A49A               	btfss	154,2,c	;volatile
 32473  01B784  D00F               	goto	l10760
 32474                           
 32475                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32476  01B786  909A               	bcf	154,0,c	;volatile
 32477                           
 32478                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32479                           ;stkvar	_timerVal @ sp[(0)+-2]
 32480  01B788  0EFF               	movlw	255
 32481  01B78A  24E1               	addwf	fsr1l,w,c
 32482  01B78C  6ED9               	movwf	fsr2l,c
 32483  01B78E  0EFF               	movlw	255
 32484  01B790  20E2               	addwfc	fsr1h,w,c
 32485  01B792  6EDA               	movwf	fsr2h,c
 32486  01B794  50DF               	movf	indf2,w,c
 32487  01B796  6E99               	movwf	153,c	;volatile
 32488                           
 32489                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32490                           ;stkvar	_timerVal @ sp[(0)+-2]
 32491  01B798  0EFE               	movlw	-2
 32492  01B79A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32493                           
 32494                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32495  01B7A0  809A               	bsf	154,0,c	;volatile
 32496                           
 32497                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32498  01B7A2  D00C               	goto	l1002
 32499  01B7A4                     l10760:
 32500                           
 32501                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32502                           ;stkvar	_timerVal @ sp[(0)+-2]
 32503  01B7A4  0EFF               	movlw	255
 32504  01B7A6  24E1               	addwf	fsr1l,w,c
 32505  01B7A8  6ED9               	movwf	fsr2l,c
 32506  01B7AA  0EFF               	movlw	255
 32507  01B7AC  20E2               	addwfc	fsr1h,w,c
 32508  01B7AE  6EDA               	movwf	fsr2h,c
 32509  01B7B0  50DF               	movf	indf2,w,c
 32510  01B7B2  6E99               	movwf	153,c	;volatile
 32511                           
 32512                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32513                           ;stkvar	_timerVal @ sp[(0)+-2]
 32514  01B7B4  0EFE               	movlw	-2
 32515  01B7B6  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32516  01B7BC                     l1002:
 32517                           
 32518                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32519  01B7BC  52E5               	movf	postdec1,f,c
 32520  01B7BE  52E5               	movf	postdec1,f,c
 32521  01B7C0  0012               	return		;funcret
 32522  01B7C2                     __end_of_TMR5_WriteTimer:
 32523                           	opt callstack 0
 32524                           
 32525 ;; *************** function _TMR5_CallBack *****************
 32526 ;; Defined at:
 32527 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32528 ;; Parameters:    Size  Location     Type
 32529 ;;		None
 32530 ;; Auto vars:     Size  Location     Type
 32531 ;;		None
 32532 ;; Return value:  Size  Location     Type
 32533 ;;                  1  [STACK] void 
 32534 ;; Registers used:
 32535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32536 ;; Tracked objects:
 32537 ;;		On entry : 3F/0
 32538 ;;		On exit  : 0/0
 32539 ;;		Unchanged: 0/0
 32540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32545 ;;Total ram usage:        0 bytes
 32546 ;; Hardware stack levels used:    1
 32547 ;; Hardware stack levels required when called:    8
 32548 ;; This function calls:
 32549 ;;		Absolute function
 32550 ;;		_TMR5_DefaultInterruptHandler
 32551 ;; This function is called by:
 32552 ;;		_TMR5_ISR
 32553 ;; This function uses a reentrant model
 32554 ;;
 32555                           
 32556                           	psect	text144
 32557  01BDEC                     __ptext144:
 32558                           	opt callstack 0
 32559  01BDEC                     _TMR5_CallBack:
 32560                           	opt callstack 7
 32561                           
 32562                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32563                           
 32564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32565                           ;incstack = 0
 32566  01BDEC  0100               	movlb	0	; () banked
 32567  01BDEE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32568  01BDF0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32569  01BDF2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32570  01BDF4  B4D8               	btfsc	status,2,c
 32571  01BDF6  0012               	return	
 32572                           
 32573                           ; BSR set to: 0
 32574                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32575  01BDF8  D801               	call	u1008_28
 32576  01BDFA  0012               	return	
 32577  01BDFC                     u1008_28:
 32578  01BDFC  0005               	push	
 32579  01BDFE  6EFA               	movwf	pclath,c
 32580  01BE00  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32581  01BE02  6EFD               	movwf	tosl,c
 32582  01BE04  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32583  01BE06  6EFE               	movwf	tosh,c
 32584  01BE08  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32585  01BE0A  6EFF               	movwf	tosu,c
 32586  01BE0C  50FA               	movf	pclath,w,c
 32587  01BE0E  0012               	return		;indir
 32588  01BE10                     __end_of_TMR5_CallBack:
 32589                           	opt callstack 0
 32590                           
 32591 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32592 ;; Defined at:
 32593 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32594 ;; Parameters:    Size  Location     Type
 32595 ;;		None
 32596 ;; Auto vars:     Size  Location     Type
 32597 ;;		None
 32598 ;; Return value:  Size  Location     Type
 32599 ;;                  1  [STACK] void 
 32600 ;; Registers used:
 32601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32602 ;; Tracked objects:
 32603 ;;		On entry : 3F/0
 32604 ;;		On exit  : 0/0
 32605 ;;		Unchanged: 0/0
 32606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32611 ;;Total ram usage:        0 bytes
 32612 ;; Hardware stack levels used:    1
 32613 ;; Hardware stack levels required when called:    7
 32614 ;; This function calls:
 32615 ;;		_check_day_time
 32616 ;; This function is called by:
 32617 ;;		_TMR5_Initialize
 32618 ;;		_TMR5_CallBack
 32619 ;; This function uses a reentrant model
 32620 ;;
 32621                           
 32622                           	psect	text145
 32623  01B8B4                     __ptext145:
 32624                           	opt callstack 0
 32625  01B8B4                     _TMR5_DefaultInterruptHandler:
 32626                           	opt callstack 7
 32627                           
 32628                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32629                           
 32630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32631                           ;incstack = 0
 32632  01B8B4  A0BE               	btfss	190,0,c	;volatile
 32633  01B8B6  D002               	goto	u949_20
 32634  01B8B8  0E01               	movlw	1
 32635  01B8BA  D001               	goto	u949_26
 32636  01B8BC                     u949_20:
 32637  01B8BC  0E00               	movlw	0
 32638  01B8BE                     u949_26:
 32639  01B8BE  0AFF               	xorlw	255
 32640  01B8C0  6E0C               	movwf	(btemp+11)^0,c
 32641  01B8C2  50BE               	movf	190,w,c	;volatile
 32642  01B8C4  180C               	xorwf	(btemp+11)^0,w,c
 32643  01B8C6  0BFE               	andlw	-2
 32644  01B8C8  180C               	xorwf	(btemp+11)^0,w,c
 32645  01B8CA  6EBE               	movwf	190,c	;volatile
 32646                           
 32647                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32648  01B8CC  0E01               	movlw	1
 32649  01B8CE  0101               	movlb	1	; () banked
 32650  01B8D0  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32651  01B8D2  0E00               	movlw	0
 32652  01B8D4  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32653  01B8D6  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32654  01B8D8  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32655                           
 32656                           ; BSR set to: 1
 32657                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32658  01B8DA  0E01               	movlw	1
 32659  01B8DC  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32660  01B8DE  0E00               	movlw	0
 32661  01B8E0  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32662  01B8E2  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32663  01B8E4  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32664                           
 32665                           ; BSR set to: 1
 32666                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32667  01B8E6  EC03  F0C4         	call	_check_day_time	;wreg free
 32668                           
 32669                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32670  01B8EA  0012               	return		;funcret
 32671  01B8EC                     __end_of_TMR5_DefaultInterruptHandler:
 32672                           	opt callstack 0
 32673                           
 32674 ;; *************** function _check_day_time *****************
 32675 ;; Defined at:
 32676 ;;		line 165 in file "mbmc.c"
 32677 ;; Parameters:    Size  Location     Type
 32678 ;;		None
 32679 ;; Auto vars:     Size  Location     Type
 32680 ;;  light           4  [STACK] float 
 32681 ;; Return value:  Size  Location     Type
 32682 ;;                  1  [STACK] _Bool 
 32683 ;; Registers used:
 32684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32685 ;; Tracked objects:
 32686 ;;		On entry : 3F/1
 32687 ;;		On exit  : 0/0
 32688 ;;		Unchanged: 0/0
 32689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32694 ;;Total ram usage:        0 bytes
 32695 ;; Hardware stack levels used:    1
 32696 ;; Hardware stack levels required when called:    6
 32697 ;; This function calls:
 32698 ;;		___flge
 32699 ;;		_conv_raw_result
 32700 ;;		_get_ac_charger_relay
 32701 ;;		_set_ac_charger_relay
 32702 ;; This function is called by:
 32703 ;;		_TMR5_DefaultInterruptHandler
 32704 ;; This function uses a reentrant model
 32705 ;;
 32706                           
 32707                           	psect	text146
 32708  018806                     __ptext146:
 32709                           	opt callstack 0
 32710  018806                     _check_day_time:
 32711                           	opt callstack 0
 32712                           
 32713                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32714  018806  52E6               	movf	postinc1,f,c
 32715  018808  52E6               	movf	postinc1,f,c
 32716  01880A  52E6               	movf	postinc1,f,c
 32717  01880C  52E6               	movf	postinc1,f,c
 32718                           
 32719                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32720                           
 32721                           ;incstack = 0
 32722  01880E  0E00               	movlw	0
 32723  018810  6EE6               	movwf	postinc1,c
 32724  018812  0E0D               	movlw	13
 32725  018814  6EE6               	movwf	postinc1,c
 32726  018816  EC57  F0A9         	call	_conv_raw_result	;wreg free
 32727                           
 32728                           ;stkvar	_light @ sp[(-4)+0]
 32729  01881A  0EFC               	movlw	-4
 32730  01881C  0060  F007  FFE3   	movff	btemp,plusw1
 32731  018822  0EFD               	movlw	-3
 32732  018824  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32733  01882A  0EFE               	movlw	-2
 32734  01882C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32735  018832  0EFF               	movlw	-1
 32736  018834  0060  F013  FFE3   	movff	btemp+3,plusw1
 32737                           
 32738                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32739  01883A  2A42               	incf	check_day_time@day_delay^0,f,c
 32740  01883C  0442               	decf	check_day_time@day_delay^0,w,c
 32741  01883E  A4D8               	btfss	status,2,c
 32742  018840  D0A9               	goto	l1896
 32743  018842  0101               	movlb	1	; () banked
 32744  018844  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32745  018846  B4D8               	btfsc	status,2,c
 32746  018848  D0A5               	goto	l1896
 32747                           
 32748                           ; BSR set to: 1
 32749                           ;mbmc.c: 173:   if (C.soc > 15) {
 32750  01884A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32751  01884E  0E01               	movlw	1
 32752  018850  50DB               	movf	plusw2,w,c
 32753  018852  E104               	bnz	u928_20
 32754  018854  0E10               	movlw	16
 32755  018856  5CDE               	subwf	postinc2,w,c
 32756  018858  A0D8               	btfss	status,0,c
 32757  01885A  D073               	goto	l9846
 32758  01885C                     u928_20:
 32759                           
 32760                           ; BSR set to: 1
 32761                           ;mbmc.c: 174:    if (!C.day) {
 32762  01885C  EE22  F021         	lfsr	2,_C+290	;volatile
 32763  018860  50DF               	movf	indf2,w,c
 32764  018862  A4D8               	btfss	status,2,c
 32765  018864  D035               	goto	l9834
 32766                           
 32767                           ; BSR set to: 1
 32768                           ;mbmc.c: 175:     if (light > 22.0) {
 32769                           ;stkvar	_light @ sp[(-4)+0]
 32770  018866  0EFC               	movlw	-4
 32771  018868  006F FF8F FFE6     	movff	plusw1,postinc1
 32772  01886E  006F FF8F FFE6     	movff	plusw1,postinc1
 32773  018874  006F FF8F FFE6     	movff	plusw1,postinc1
 32774  01887A  006F FF8F FFE6     	movff	plusw1,postinc1
 32775  018880  0E00               	movlw	0
 32776  018882  6EE6               	movwf	postinc1,c
 32777  018884  0E00               	movlw	0
 32778  018886  6EE6               	movwf	postinc1,c
 32779  018888  0EB0               	movlw	176
 32780  01888A  6EE6               	movwf	postinc1,c
 32781  01888C  0E41               	movlw	65
 32782  01888E  6EE6               	movwf	postinc1,c
 32783  018890  ECDA  F0C7         	call	___flge	;wreg free
 32784  018894  B001               	btfsc	btemp& (0+255),0,c
 32785  018896  D07E               	goto	l1896
 32786                           
 32787                           ;mbmc.c: 176:      C.day = 1;
 32788  018898  0E01               	movlw	1
 32789  01889A  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32790                           
 32791                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32792  0188A0  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32793  0188A4  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32794  0188AA  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32795  0188B0  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32796  0188B6  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32797                           
 32798                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32799  0188BC  EC74  F0E0         	call	_get_ac_charger_relay	;wreg free
 32800  0188C0  5001               	movf	btemp^0,w,c
 32801  0188C2  B4D8               	btfsc	status,2,c
 32802  0188C4  D06B               	goto	l1892
 32803                           
 32804                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32805  0188C6  0E00               	movlw	0
 32806  0188C8  6EE6               	movwf	postinc1,c
 32807  0188CA  EC57  F0E0         	call	_set_ac_charger_relay	;wreg free
 32808  0188CE  D066               	goto	l1892
 32809  0188D0                     l9834:
 32810                           
 32811                           ; BSR set to: 1
 32812                           ;mbmc.c: 184:     if (light < 12.0) {
 32813  0188D0  0E00               	movlw	0
 32814  0188D2  6EE6               	movwf	postinc1,c
 32815  0188D4  0E00               	movlw	0
 32816  0188D6  6EE6               	movwf	postinc1,c
 32817  0188D8  0E40               	movlw	64
 32818  0188DA  6EE6               	movwf	postinc1,c
 32819  0188DC  0E41               	movlw	65
 32820  0188DE  6EE6               	movwf	postinc1,c
 32821                           
 32822                           ;stkvar	_light @ sp[(-8)+0]
 32823  0188E0  0EF8               	movlw	-8
 32824  0188E2  006F FF8F FFE6     	movff	plusw1,postinc1
 32825  0188E8  006F FF8F FFE6     	movff	plusw1,postinc1
 32826  0188EE  006F FF8F FFE6     	movff	plusw1,postinc1
 32827  0188F4  006F FF8F FFE6     	movff	plusw1,postinc1
 32828  0188FA  ECDA  F0C7         	call	___flge	;wreg free
 32829  0188FE  B001               	btfsc	btemp& (0+255),0,c
 32830  018900  D049               	goto	l1896
 32831                           
 32832                           ;mbmc.c: 185:      C.day = 0;
 32833  018902  0E00               	movlw	0
 32834  018904  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32835                           
 32836                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32837  01890A  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32838  01890E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32839  018914  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32840  01891A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32841  018920  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32842                           
 32843                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32844  018926  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32845  01892A  0E01               	movlw	1
 32846  01892C  50DB               	movf	plusw2,w,c
 32847  01892E  E136               	bnz	l1892
 32848  018930  0E28               	movlw	40
 32849  018932  5CDE               	subwf	postinc2,w,c
 32850  018934  B0D8               	btfsc	status,0,c
 32851  018936  D032               	goto	l1892
 32852                           
 32853                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32854  018938  0E01               	movlw	1
 32855  01893A  6EE6               	movwf	postinc1,c
 32856  01893C  EC57  F0E0         	call	_set_ac_charger_relay	;wreg free
 32857  018940  D02D               	goto	l1892
 32858  018942                     l9846:
 32859                           
 32860                           ; BSR set to: 1
 32861                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32862  018942  EE21  F377         	lfsr	2,_C+120	;volatile
 32863  018946  006F FF7B FFE6     	movff	postinc2,postinc1
 32864  01894C  006F FF7B FFE6     	movff	postinc2,postinc1
 32865  018952  006F FF7B FFE6     	movff	postinc2,postinc1
 32866  018958  006F FF7B FFE6     	movff	postinc2,postinc1
 32867  01895E  EE21  F37B         	lfsr	2,_C+124	;volatile
 32868  018962  006F FF7B FFE6     	movff	postinc2,postinc1
 32869  018968  006F FF7B FFE6     	movff	postinc2,postinc1
 32870  01896E  006F FF7B FFE6     	movff	postinc2,postinc1
 32871  018974  006F FF7B FFE6     	movff	postinc2,postinc1
 32872  01897A  ECDA  F0C7         	call	___flge	;wreg free
 32873  01897E  B001               	btfsc	btemp& (0+255),0,c
 32874  018980  D009               	goto	l1896
 32875                           
 32876                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32877  018982  EC74  F0E0         	call	_get_ac_charger_relay	;wreg free
 32878  018986  5001               	movf	btemp^0,w,c
 32879  018988  A4D8               	btfss	status,2,c
 32880  01898A  D004               	goto	l1896
 32881                           
 32882                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32883  01898C  0E01               	movlw	1
 32884  01898E  6EE6               	movwf	postinc1,c
 32885  018990  EC57  F0E0         	call	_set_ac_charger_relay	;wreg free
 32886  018994                     l1896:
 32887                           
 32888                           ;mbmc.c: 204:  if (day_delay >= 240)
 32889  018994  0EEF               	movlw	239
 32890  018996  6442               	cpfsgt	check_day_time@day_delay^0,c
 32891  018998  D001               	goto	l1892
 32892                           
 32893                           ;mbmc.c: 205:   day_delay = 0;
 32894  01899A  6A42               	clrf	check_day_time@day_delay^0,c
 32895  01899C                     l1892:
 32896                           
 32897                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32898  01899C  52E5               	movf	postdec1,f,c
 32899  01899E  52E5               	movf	postdec1,f,c
 32900  0189A0  52E5               	movf	postdec1,f,c
 32901  0189A2  52E5               	movf	postdec1,f,c
 32902  0189A4  0012               	return		;funcret
 32903  0189A6                     __end_of_check_day_time:
 32904                           	opt callstack 0
 32905                           
 32906 ;; *************** function _set_ac_charger_relay *****************
 32907 ;; Defined at:
 32908 ;;		line 135 in file "mbmc.c"
 32909 ;; Parameters:    Size  Location     Type
 32910 ;;  mode            1  [STACK] _Bool 
 32911 ;; Auto vars:     Size  Location     Type
 32912 ;;		None
 32913 ;; Return value:  Size  Location     Type
 32914 ;;                  1  [STACK] void 
 32915 ;; Registers used:
 32916 ;;		wreg, fsr1l, fsr1h
 32917 ;; Tracked objects:
 32918 ;;		On entry : 0/1
 32919 ;;		On exit  : 0/0
 32920 ;;		Unchanged: 0/0
 32921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;Total ram usage:        0 bytes
 32927 ;; Hardware stack levels used:    1
 32928 ;; Hardware stack levels required when called:    3
 32929 ;; This function calls:
 32930 ;;		Nothing
 32931 ;; This function is called by:
 32932 ;;		_check_day_time
 32933 ;; This function uses a reentrant model
 32934 ;;
 32935                           
 32936                           	psect	text147
 32937  01C0AE                     __ptext147:
 32938                           	opt callstack 0
 32939  01C0AE                     _set_ac_charger_relay:
 32940                           	opt callstack 9
 32941                           
 32942                           ;mbmc.c: 135: void set_ac_charger_relay(_Bool mode);mbmc.c: 136: {;mbmc.c: 137:  LATDbit
      +                          s.LATD6 = mode;
 32943                           ;stkvar	_mode @ sp[(0)+-1]
 32944                           
 32945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32946                           ;incstack = 0
 32947  01C0AE  0EFF               	movlw	-1
 32948  01C0B0  B0E3               	btfsc	plusw1,0,c
 32949  01C0B2  D002               	bra	u923_25
 32950  01C0B4  9CBD               	bcf	189,6,c	;volatile
 32951  01C0B6  D001               	bra	u923_26
 32952  01C0B8                     u923_25:
 32953  01C0B8  8CBD               	bsf	189,6,c	;volatile
 32954  01C0BA                     u923_26:
 32955                           
 32956                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32957  01C0BA  52E5               	movf	postdec1,f,c
 32958  01C0BC  0012               	return		;funcret
 32959  01C0BE                     __end_of_set_ac_charger_relay:
 32960                           	opt callstack 0
 32961                           
 32962 ;; *************** function _get_ac_charger_relay *****************
 32963 ;; Defined at:
 32964 ;;		line 140 in file "mbmc.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;		None
 32967 ;; Auto vars:     Size  Location     Type
 32968 ;;		None
 32969 ;; Return value:  Size  Location     Type
 32970 ;;                  1  [STACK] _Bool 
 32971 ;; Registers used:
 32972 ;;		btemp
 32973 ;; Tracked objects:
 32974 ;;		On entry : 0/1
 32975 ;;		On exit  : 0/0
 32976 ;;		Unchanged: 0/0
 32977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32982 ;;Total ram usage:        0 bytes
 32983 ;; Hardware stack levels used:    1
 32984 ;; Hardware stack levels required when called:    3
 32985 ;; This function calls:
 32986 ;;		Nothing
 32987 ;; This function is called by:
 32988 ;;		_check_day_time
 32989 ;;		_calc_bsoc
 32990 ;; This function uses a reentrant model
 32991 ;;
 32992                           
 32993                           	psect	text148
 32994  01C0E8                     __ptext148:
 32995                           	opt callstack 0
 32996  01C0E8                     _get_ac_charger_relay:
 32997                           	opt callstack 10
 32998                           
 32999                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33000                           
 33001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33002                           ;incstack = 0
 33003  01C0E8  ACBD               	btfss	189,6,c	;volatile
 33004  01C0EA  D003               	goto	u942_20
 33005  01C0EC  6A01               	clrf	btemp^0,c
 33006  01C0EE  2A01               	incf	btemp^0,f,c
 33007  01C0F0  0012               	return	
 33008  01C0F2                     u942_20:
 33009  01C0F2  6A01               	clrf	btemp^0,c
 33010                           
 33011                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33012  01C0F4  0012               	return		;funcret
 33013  01C0F6                     __end_of_get_ac_charger_relay:
 33014                           	opt callstack 0
 33015                           
 33016 ;; *************** function _TMR3_ISR *****************
 33017 ;; Defined at:
 33018 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33019 ;; Parameters:    Size  Location     Type
 33020 ;;		None
 33021 ;; Auto vars:     Size  Location     Type
 33022 ;;		None
 33023 ;; Return value:  Size  Location     Type
 33024 ;;                  1    wreg      void 
 33025 ;; Registers used:
 33026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33027 ;; Tracked objects:
 33028 ;;		On entry : 0/0
 33029 ;;		On exit  : 3F/0
 33030 ;;		Unchanged: 0/0
 33031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;Total ram usage:       25 bytes
 33037 ;; Hardware stack levels used:    1
 33038 ;; Hardware stack levels required when called:   14
 33039 ;; This function calls:
 33040 ;;		_TMR3_CallBack
 33041 ;;		_TMR3_WriteTimer
 33042 ;; This function is called by:
 33043 ;;		Interrupt level 1
 33044 ;; This function uses a non-reentrant model
 33045 ;;
 33046                           
 33047                           	psect	text149
 33048  019118                     __ptext149:
 33049                           	opt callstack 0
 33050  019118                     _TMR3_ISR:
 33051                           	opt callstack 2
 33052                           
 33053                           ;incstack = 0
 33054  019118  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 33055  01911E  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 33056  019124  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 33057  01912A  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 33058  019130  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 33059  019136  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 33060  01913C  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 33061  019142  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 33062  019148  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 33063  01914E  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 33064  019154  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 33065  01915A  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 33066  019160  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 33067  019166  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 33068  01916C  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 33069  019172  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 33070  019178  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 33071  01917E  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 33072  019184  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 33073  01918A  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 33074  019190  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 33075  019196  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 33076  01919C  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 33077  0191A2  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 33078  0191A8  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 33079  0191AE  EE16  F0AF         	lfsr	1,___intlo_sp
 33080                           
 33081                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33082  0191B2  0139               	movlb	57	; () banked
 33083  0191B4  9DA6               	bcf	166,6,b	;volatile
 33084                           
 33085                           ; BSR set to: 57
 33086                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33087  0191B6  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 33088  0191BC  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33089  0191C2  ECE1  F0DB         	call	_TMR3_WriteTimer	;wreg free
 33090                           
 33091                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33092  0191C6  0100               	movlb	0	; () banked
 33093  0191C8  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33094  0191CA  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33095  0191CC  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33096  0191CE  E104               	bnz	i1u1256_20
 33097  0191D0  0E28               	movlw	40
 33098  0191D2  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33099  0191D4  A0D8               	btfss	status,0,c
 33100  0191D6  D005               	goto	i1l1207
 33101  0191D8                     i1u1256_20:
 33102                           
 33103                           ; BSR set to: 0
 33104                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33105  0191D8  EC08  F0DF         	call	_TMR3_CallBack	;wreg free
 33106                           
 33107                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33108  0191DC  0100               	movlb	0	; () banked
 33109  0191DE  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33110  0191E0  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33111  0191E2                     i1l1207:
 33112                           
 33113                           ; BSR set to: 0
 33114  0191E2  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 33115  0191E8  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 33116  0191EE  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 33117  0191F4  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 33118  0191FA  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 33119  019200  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 33120  019206  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 33121  01920C  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 33122  019212  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33123  019218  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33124  01921E  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33125  019224  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 33126  01922A  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 33127  019230  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 33128  019236  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 33129  01923C  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 33130  019242  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 33131  019248  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 33132  01924E  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 33133  019254  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 33134  01925A  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 33135  019260  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33136  019266  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33137  01926C  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33138  019272  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 33139  019278  0011               	retfie		f
 33140  01927A                     __end_of_TMR3_ISR:
 33141                           	opt callstack 0
 33142                           
 33143 ;; *************** function _TMR3_WriteTimer *****************
 33144 ;; Defined at:
 33145 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33146 ;; Parameters:    Size  Location     Type
 33147 ;;  timerVal        2  [STACK] unsigned short 
 33148 ;; Auto vars:     Size  Location     Type
 33149 ;;		None
 33150 ;; Return value:  Size  Location     Type
 33151 ;;                  1  [STACK] void 
 33152 ;; Registers used:
 33153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33154 ;; Tracked objects:
 33155 ;;		On entry : 3F/39
 33156 ;;		On exit  : 0/0
 33157 ;;		Unchanged: 0/0
 33158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33163 ;;Total ram usage:        0 bytes
 33164 ;; Hardware stack levels used:    1
 33165 ;; Hardware stack levels required when called:    3
 33166 ;; This function calls:
 33167 ;;		Nothing
 33168 ;; This function is called by:
 33169 ;;		_TMR3_ISR
 33170 ;; This function uses a reentrant model
 33171 ;;
 33172                           
 33173                           	psect	text150
 33174  01B7C2                     __ptext150:
 33175                           	opt callstack 0
 33176  01B7C2                     _TMR3_WriteTimer:
 33177                           	opt callstack 12
 33178                           
 33179                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33180                           
 33181                           ; BSR set to: 0
 33182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33183                           ;incstack = 0
 33184  01B7C2  A4A6               	btfss	166,2,c	;volatile
 33185  01B7C4  D00F               	goto	l10778
 33186                           
 33187                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33188  01B7C6  90A6               	bcf	166,0,c	;volatile
 33189                           
 33190                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33191                           ;stkvar	_timerVal @ sp[(0)+-2]
 33192  01B7C8  0EFF               	movlw	255
 33193  01B7CA  24E1               	addwf	fsr1l,w,c
 33194  01B7CC  6ED9               	movwf	fsr2l,c
 33195  01B7CE  0EFF               	movlw	255
 33196  01B7D0  20E2               	addwfc	fsr1h,w,c
 33197  01B7D2  6EDA               	movwf	fsr2h,c
 33198  01B7D4  50DF               	movf	indf2,w,c
 33199  01B7D6  6EA5               	movwf	165,c	;volatile
 33200                           
 33201                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33202                           ;stkvar	_timerVal @ sp[(0)+-2]
 33203  01B7D8  0EFE               	movlw	-2
 33204  01B7DA  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33205                           
 33206                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33207  01B7E0  80A6               	bsf	166,0,c	;volatile
 33208                           
 33209                           ;mcc_generated_files/tmr3.c: 141:     }
 33210  01B7E2  D00C               	goto	l1190
 33211  01B7E4                     l10778:
 33212                           
 33213                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33214                           ;stkvar	_timerVal @ sp[(0)+-2]
 33215  01B7E4  0EFF               	movlw	255
 33216  01B7E6  24E1               	addwf	fsr1l,w,c
 33217  01B7E8  6ED9               	movwf	fsr2l,c
 33218  01B7EA  0EFF               	movlw	255
 33219  01B7EC  20E2               	addwfc	fsr1h,w,c
 33220  01B7EE  6EDA               	movwf	fsr2h,c
 33221  01B7F0  50DF               	movf	indf2,w,c
 33222  01B7F2  6EA5               	movwf	165,c	;volatile
 33223                           
 33224                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33225                           ;stkvar	_timerVal @ sp[(0)+-2]
 33226  01B7F4  0EFE               	movlw	-2
 33227  01B7F6  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33228  01B7FC                     l1190:
 33229                           
 33230                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33231  01B7FC  52E5               	movf	postdec1,f,c
 33232  01B7FE  52E5               	movf	postdec1,f,c
 33233  01B800  0012               	return		;funcret
 33234  01B802                     __end_of_TMR3_WriteTimer:
 33235                           	opt callstack 0
 33236                           
 33237 ;; *************** function _TMR3_CallBack *****************
 33238 ;; Defined at:
 33239 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33240 ;; Parameters:    Size  Location     Type
 33241 ;;		None
 33242 ;; Auto vars:     Size  Location     Type
 33243 ;;		None
 33244 ;; Return value:  Size  Location     Type
 33245 ;;                  1  [STACK] void 
 33246 ;; Registers used:
 33247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33248 ;; Tracked objects:
 33249 ;;		On entry : 3F/0
 33250 ;;		On exit  : 0/0
 33251 ;;		Unchanged: 0/0
 33252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33257 ;;Total ram usage:        0 bytes
 33258 ;; Hardware stack levels used:    1
 33259 ;; Hardware stack levels required when called:   13
 33260 ;; This function calls:
 33261 ;;		Absolute function
 33262 ;;		_TMR3_DefaultInterruptHandler
 33263 ;;		_calc_bsoc
 33264 ;; This function is called by:
 33265 ;;		_TMR3_ISR
 33266 ;; This function uses a reentrant model
 33267 ;;
 33268                           
 33269                           	psect	text151
 33270  01BE10                     __ptext151:
 33271                           	opt callstack 0
 33272  01BE10                     _TMR3_CallBack:
 33273                           	opt callstack 2
 33274                           
 33275                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33276                           
 33277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33278                           ;incstack = 0
 33279  01BE10  0100               	movlb	0	; () banked
 33280  01BE12  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33281  01BE14  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33282  01BE16  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33283  01BE18  B4D8               	btfsc	status,2,c
 33284  01BE1A  0012               	return	
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33288  01BE1C  D801               	call	u1247_28
 33289  01BE1E  0012               	return	
 33290  01BE20                     u1247_28:
 33291  01BE20  0005               	push	
 33292  01BE22  6EFA               	movwf	pclath,c
 33293  01BE24  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33294  01BE26  6EFD               	movwf	tosl,c
 33295  01BE28  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33296  01BE2A  6EFE               	movwf	tosh,c
 33297  01BE2C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33298  01BE2E  6EFF               	movwf	tosu,c
 33299  01BE30  50FA               	movf	pclath,w,c
 33300  01BE32  0012               	return		;indir
 33301  01BE34                     __end_of_TMR3_CallBack:
 33302                           	opt callstack 0
 33303                           
 33304 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33305 ;; Defined at:
 33306 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33307 ;; Parameters:    Size  Location     Type
 33308 ;;		None
 33309 ;; Auto vars:     Size  Location     Type
 33310 ;;		None
 33311 ;; Return value:  Size  Location     Type
 33312 ;;                  1  [STACK] void 
 33313 ;; Registers used:
 33314 ;;		None
 33315 ;; Tracked objects:
 33316 ;;		On entry : 3F/0
 33317 ;;		On exit  : 0/0
 33318 ;;		Unchanged: 0/0
 33319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33324 ;;Total ram usage:        0 bytes
 33325 ;; Hardware stack levels used:    1
 33326 ;; Hardware stack levels required when called:    3
 33327 ;; This function calls:
 33328 ;;		Nothing
 33329 ;; This function is called by:
 33330 ;;		_TMR3_Initialize
 33331 ;;		_TMR3_CallBack
 33332 ;; This function uses a reentrant model
 33333 ;;
 33334                           
 33335                           	psect	text152
 33336  01C198                     __ptext152:
 33337                           	opt callstack 0
 33338  01C198                     _TMR3_DefaultInterruptHandler:
 33339                           	opt callstack 11
 33340                           
 33341                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33342                           
 33343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33344                           ;incstack = 0
 33345  01C198  0012               	return		;funcret
 33346  01C19A                     __end_of_TMR3_DefaultInterruptHandler:
 33347                           	opt callstack 0
 33348                           
 33349 ;; *************** function _calc_bsoc *****************
 33350 ;; Defined at:
 33351 ;;		line 39 in file "bsoc.c"
 33352 ;; Parameters:    Size  Location     Type
 33353 ;;		None
 33354 ;; Auto vars:     Size  Location     Type
 33355 ;;  adj             4  [STACK] float 
 33356 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33357 ;;		 -> port_data(512), 
 33358 ;; Return value:  Size  Location     Type
 33359 ;;                  1  [STACK] void 
 33360 ;; Registers used:
 33361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33362 ;; Tracked objects:
 33363 ;;		On entry : 3F/0
 33364 ;;		On exit  : 5/1
 33365 ;;		Unchanged: 0/0
 33366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33371 ;;Total ram usage:        0 bytes
 33372 ;; Hardware stack levels used:    1
 33373 ;; Hardware stack levels required when called:   12
 33374 ;; This function calls:
 33375 ;;		_StartTimer
 33376 ;;		___asfladd
 33377 ;;		___fldiv
 33378 ;;		___flge
 33379 ;;		___flmul
 33380 ;;		___flneg
 33381 ;;		___fltol
 33382 ;;		_fabsf
 33383 ;;		_get_ac_charger_relay
 33384 ;;		_port_data_dma_ptr
 33385 ;;		_send_port_data_dma
 33386 ;;		_sprintf
 33387 ;;		_strlen
 33388 ;; This function is called by:
 33389 ;;		_init_bsoc
 33390 ;;		_TMR3_CallBack
 33391 ;; This function uses a reentrant model
 33392 ;;
 33393                           
 33394                           	psect	text153
 33395  013334                     __ptext153:
 33396                           	opt callstack 0
 33397  013334                     _calc_bsoc:
 33398                           	opt callstack 0
 33399                           
 33400                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33401  013334  0E06               	movlw	6
 33402  013336  26E1               	addwf	fsr1l,f,c
 33403  013338  0E00               	movlw	0
 33404  01333A  22E2               	addwfc	fsr1h,f,c
 33405                           
 33406                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33407                           
 33408                           ;incstack = 0
 33409  01333C  0E00               	movlw	0
 33410  01333E  6E09               	movwf	(btemp+8)^0,c
 33411  013340  0E00               	movlw	0
 33412  013342  6E0A               	movwf	(btemp+9)^0,c
 33413  013344  0E80               	movlw	128
 33414  013346  6E0B               	movwf	(btemp+10)^0,c
 33415  013348  0E3F               	movlw	63
 33416  01334A  6E0C               	movwf	(btemp+11)^0,c
 33417                           
 33418                           ;stkvar	_adj @ sp[(-6)+0]
 33419  01334C  0EFA               	movlw	-6
 33420  01334E  0060  F027  FFE3   	movff	btemp+8,plusw1
 33421  013354  0EFB               	movlw	-5
 33422  013356  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33423  01335C  0EFC               	movlw	-4
 33424  01335E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33425  013364  0EFD               	movlw	-3
 33426  013366  0060  F033  FFE3   	movff	btemp+11,plusw1
 33427  01336C  82BE               	bsf	190,1,c	;volatile
 33428                           
 33429                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33430  01336E  0E00               	movlw	0
 33431  013370  6EE6               	movwf	postinc1,c
 33432  013372  0E00               	movlw	0
 33433  013374  6EE6               	movwf	postinc1,c
 33434  013376  0E61               	movlw	97
 33435  013378  6EE6               	movwf	postinc1,c
 33436  01337A  0E45               	movlw	69
 33437  01337C  6EE6               	movwf	postinc1,c
 33438  01337E  EE21  F343         	lfsr	2,_C+68	;volatile
 33439  013382  006F FF7B FFE6     	movff	postinc2,postinc1
 33440  013388  006F FF7B FFE6     	movff	postinc2,postinc1
 33441  01338E  006F FF7B FFE6     	movff	postinc2,postinc1
 33442  013394  006F FF7B FFE6     	movff	postinc2,postinc1
 33443  01339A  EC9A  F0A6         	call	___fldiv	;wreg free
 33444  01339E  0060  F007  FFE6   	movff	btemp,postinc1
 33445  0133A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33446  0133AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33447  0133B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33448  0133B6  0E8F               	movlw	low (_C+144)
 33449  0133B8  6EE6               	movwf	postinc1,c
 33450  0133BA  0E07               	movlw	high (_C+144)
 33451  0133BC  6EE6               	movwf	postinc1,c
 33452  0133BE  EC0C  F0D7         	call	___asfladd	;wreg free
 33453                           
 33454                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33455  0133C2  EE21  F38F         	lfsr	2,_C+144	;volatile
 33456  0133C6  006F FF7B FFE6     	movff	postinc2,postinc1
 33457  0133CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33458  0133D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33459  0133D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33460  0133DE  EE21  F38B         	lfsr	2,_C+140	;volatile
 33461  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 33462  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 33463  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33464  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33465  0133FA  ECDA  F0C7         	call	___flge	;wreg free
 33466  0133FE  B001               	btfsc	btemp& (0+255),0,c
 33467  013400  D00E               	goto	l12814
 33468                           
 33469                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33470  013402  EE21  F38B         	lfsr	2,_C+140	;volatile
 33471  013406  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33472  01340C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33473  013412  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33474  013418  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33475  01341E                     l12814:
 33476                           
 33477                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33478  01341E  0ECD               	movlw	205
 33479  013420  6EE6               	movwf	postinc1,c
 33480  013422  0ECC               	movlw	204
 33481  013424  6EE6               	movwf	postinc1,c
 33482  013426  0ECC               	movlw	204
 33483  013428  6EE6               	movwf	postinc1,c
 33484  01342A  0E3D               	movlw	61
 33485  01342C  6EE6               	movwf	postinc1,c
 33486  01342E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33487  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 33488  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 33489  01343E  006F FF7B FFE6     	movff	postinc2,postinc1
 33490  013444  006F FF7B FFE6     	movff	postinc2,postinc1
 33491  01344A  ECDA  F0C7         	call	___flge	;wreg free
 33492  01344E  B001               	btfsc	btemp& (0+255),0,c
 33493  013450  D010               	goto	l12818
 33494                           
 33495                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33496  013452  0ECD               	movlw	205
 33497  013454  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33498  01345A  0ECC               	movlw	204
 33499  01345C  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33500  013462  0ECC               	movlw	204
 33501  013464  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33502  01346A  0E3D               	movlw	61
 33503  01346C  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33504  013472                     l12818:
 33505                           
 33506                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33507  013472  EE21  F343         	lfsr	2,_C+68	;volatile
 33508  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 33509  01347C  006F FF7B FFE6     	movff	postinc2,postinc1
 33510  013482  006F FF7B FFE6     	movff	postinc2,postinc1
 33511  013488  006F FF7B FFE6     	movff	postinc2,postinc1
 33512  01348E  0E0A               	movlw	10
 33513  013490  6EE6               	movwf	postinc1,c
 33514  013492  0ED7               	movlw	215
 33515  013494  6EE6               	movwf	postinc1,c
 33516  013496  0E23               	movlw	35
 33517  013498  6EE6               	movwf	postinc1,c
 33518  01349A  0E3C               	movlw	60
 33519  01349C  6EE6               	movwf	postinc1,c
 33520  01349E  ECDA  F0C7         	call	___flge	;wreg free
 33521  0134A2  B001               	btfsc	btemp& (0+255),0,c
 33522  0134A4  D01C               	goto	l12822
 33523                           
 33524                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33525  0134A6  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33526  0134AC  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33527  0134B2  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33528  0134B8  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33529                           
 33530                           ;stkvar	_adj @ sp[(-6)+0]
 33531  0134BE  0EFA               	movlw	-6
 33532  0134C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 33533  0134C6  0EFB               	movlw	-5
 33534  0134C8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33535  0134CE  0EFC               	movlw	-4
 33536  0134D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33537  0134D6  0EFD               	movlw	-3
 33538  0134D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 33539  0134DE                     l12822:
 33540                           
 33541                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33542  0134DE  0E0A               	movlw	10
 33543  0134E0  6EE6               	movwf	postinc1,c
 33544  0134E2  0ED7               	movlw	215
 33545  0134E4  6EE6               	movwf	postinc1,c
 33546  0134E6  0E23               	movlw	35
 33547  0134E8  6EE6               	movwf	postinc1,c
 33548  0134EA  0E3C               	movlw	60
 33549  0134EC  6EE6               	movwf	postinc1,c
 33550  0134EE  EE21  F343         	lfsr	2,_C+68	;volatile
 33551  0134F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33552  0134F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33553  0134FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  013504  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  01350A  ECDA  F0C7         	call	___flge	;wreg free
 33556  01350E  B001               	btfsc	btemp& (0+255),0,c
 33557  013510  D01C               	goto	l12826
 33558                           
 33559                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33560  013512  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33561  013518  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33562  01351E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33563  013524  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33564                           
 33565                           ;stkvar	_adj @ sp[(-6)+0]
 33566  01352A  0EFA               	movlw	-6
 33567  01352C  0060  F027  FFE3   	movff	btemp+8,plusw1
 33568  013532  0EFB               	movlw	-5
 33569  013534  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33570  01353A  0EFC               	movlw	-4
 33571  01353C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33572  013542  0EFD               	movlw	-3
 33573  013544  0060  F033  FFE3   	movff	btemp+11,plusw1
 33574  01354A                     l12826:
 33575                           
 33576                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33577  01354A  0E00               	movlw	0
 33578  01354C  6EE6               	movwf	postinc1,c
 33579  01354E  0E00               	movlw	0
 33580  013550  6EE6               	movwf	postinc1,c
 33581  013552  0E61               	movlw	97
 33582  013554  6EE6               	movwf	postinc1,c
 33583  013556  0E45               	movlw	69
 33584  013558  6EE6               	movwf	postinc1,c
 33585                           
 33586                           ;stkvar	_adj @ sp[(-10)+0]
 33587  01355A  0EF6               	movlw	-10
 33588  01355C  006F FF8F FFE6     	movff	plusw1,postinc1
 33589  013562  006F FF8F FFE6     	movff	plusw1,postinc1
 33590  013568  006F FF8F FFE6     	movff	plusw1,postinc1
 33591  01356E  006F FF8F FFE6     	movff	plusw1,postinc1
 33592  013574  EE21  F343         	lfsr	2,_C+68	;volatile
 33593  013578  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  01357E  006F FF7B FFE6     	movff	postinc2,postinc1
 33595  013584  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  01358A  006F FF7B FFE6     	movff	postinc2,postinc1
 33597  013590  ECA7  F09E         	call	___flmul	;wreg free
 33598  013594  0060  F007  FFE6   	movff	btemp,postinc1
 33599  01359A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33600  0135A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33601  0135A6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33602  0135AC  EC9A  F0A6         	call	___fldiv	;wreg free
 33603  0135B0  0060  F007  FFE6   	movff	btemp,postinc1
 33604  0135B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33605  0135BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33606  0135C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33607  0135C8  0E8F               	movlw	low (_C+144)
 33608  0135CA  6EE6               	movwf	postinc1,c
 33609  0135CC  0E07               	movlw	high (_C+144)
 33610  0135CE  6EE6               	movwf	postinc1,c
 33611  0135D0  EC0C  F0D7         	call	___asfladd	;wreg free
 33612                           
 33613                           ;bsoc.c: 58:  if (C.dynamic_ah_adj > (C.bank_ah))
 33614  0135D4  EE21  F39B         	lfsr	2,_C+156	;volatile
 33615  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33616  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33617  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33618  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33619  0135F0  EE21  F38B         	lfsr	2,_C+140	;volatile
 33620  0135F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33621  0135FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33622  013600  006F FF7B FFE6     	movff	postinc2,postinc1
 33623  013606  006F FF7B FFE6     	movff	postinc2,postinc1
 33624  01360C  ECDA  F0C7         	call	___flge	;wreg free
 33625  013610  B001               	btfsc	btemp& (0+255),0,c
 33626  013612  D00E               	goto	l12832
 33627                           
 33628                           ;bsoc.c: 59:   C.dynamic_ah_adj = C.bank_ah;
 33629  013614  EE21  F38B         	lfsr	2,_C+140	;volatile
 33630  013618  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33631  01361E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33632  013624  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33633  01362A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33634  013630                     l12832:
 33635                           
 33636                           ;bsoc.c: 60:  if (C.dynamic_ah_adj < 0.1)
 33637  013630  0ECD               	movlw	205
 33638  013632  6EE6               	movwf	postinc1,c
 33639  013634  0ECC               	movlw	204
 33640  013636  6EE6               	movwf	postinc1,c
 33641  013638  0ECC               	movlw	204
 33642  01363A  6EE6               	movwf	postinc1,c
 33643  01363C  0E3D               	movlw	61
 33644  01363E  6EE6               	movwf	postinc1,c
 33645  013640  EE21  F39B         	lfsr	2,_C+156	;volatile
 33646  013644  006F FF7B FFE6     	movff	postinc2,postinc1
 33647  01364A  006F FF7B FFE6     	movff	postinc2,postinc1
 33648  013650  006F FF7B FFE6     	movff	postinc2,postinc1
 33649  013656  006F FF7B FFE6     	movff	postinc2,postinc1
 33650  01365C  ECDA  F0C7         	call	___flge	;wreg free
 33651  013660  B001               	btfsc	btemp& (0+255),0,c
 33652  013662  D010               	goto	l12836
 33653                           
 33654                           ;bsoc.c: 61:   C.dynamic_ah_adj = 0.1;
 33655  013664  0ECD               	movlw	205
 33656  013666  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33657  01366C  0ECC               	movlw	204
 33658  01366E  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33659  013674  0ECC               	movlw	204
 33660  013676  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33661  01367C  0E3D               	movlw	61
 33662  01367E  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33663  013684                     l12836:
 33664                           
 33665                           ;bsoc.c: 64:  C.pv_ah += (C.c_pv / 3600.0);
 33666  013684  0E00               	movlw	0
 33667  013686  6EE6               	movwf	postinc1,c
 33668  013688  0E00               	movlw	0
 33669  01368A  6EE6               	movwf	postinc1,c
 33670  01368C  0E61               	movlw	97
 33671  01368E  6EE6               	movwf	postinc1,c
 33672  013690  0E45               	movlw	69
 33673  013692  6EE6               	movwf	postinc1,c
 33674  013694  EE21  F347         	lfsr	2,_C+72	;volatile
 33675  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 33676  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 33677  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33678  0136AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33679  0136B0  EC9A  F0A6         	call	___fldiv	;wreg free
 33680  0136B4  0060  F007  FFE6   	movff	btemp,postinc1
 33681  0136BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33682  0136C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33683  0136C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33684  0136CC  0E93               	movlw	low (_C+148)
 33685  0136CE  6EE6               	movwf	postinc1,c
 33686  0136D0  0E07               	movlw	high (_C+148)
 33687  0136D2  6EE6               	movwf	postinc1,c
 33688  0136D4  EC0C  F0D7         	call	___asfladd	;wreg free
 33689                           
 33690                           ;bsoc.c: 65:  C.pvkw += (C.p_pv / 3600.0);
 33691  0136D8  0E00               	movlw	0
 33692  0136DA  6EE6               	movwf	postinc1,c
 33693  0136DC  0E00               	movlw	0
 33694  0136DE  6EE6               	movwf	postinc1,c
 33695  0136E0  0E61               	movlw	97
 33696  0136E2  6EE6               	movwf	postinc1,c
 33697  0136E4  0E45               	movlw	69
 33698  0136E6  6EE6               	movwf	postinc1,c
 33699  0136E8  EE21  F37B         	lfsr	2,_C+124	;volatile
 33700  0136EC  006F FF7B FFE6     	movff	postinc2,postinc1
 33701  0136F2  006F FF7B FFE6     	movff	postinc2,postinc1
 33702  0136F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33703  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33704  013704  EC9A  F0A6         	call	___fldiv	;wreg free
 33705  013708  0060  F007  FFE6   	movff	btemp,postinc1
 33706  01370E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33707  013714  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33708  01371A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33709  013720  0EA7               	movlw	low (_C+168)
 33710  013722  6EE6               	movwf	postinc1,c
 33711  013724  0E07               	movlw	high (_C+168)
 33712  013726  6EE6               	movwf	postinc1,c
 33713  013728  EC0C  F0D7         	call	___asfladd	;wreg free
 33714                           
 33715                           ;bsoc.c: 66:  C.invkw += (C.p_inverter / 3600.0);
 33716  01372C  0E00               	movlw	0
 33717  01372E  6EE6               	movwf	postinc1,c
 33718  013730  0E00               	movlw	0
 33719  013732  6EE6               	movwf	postinc1,c
 33720  013734  0E61               	movlw	97
 33721  013736  6EE6               	movwf	postinc1,c
 33722  013738  0E45               	movlw	69
 33723  01373A  6EE6               	movwf	postinc1,c
 33724  01373C  EE21  F377         	lfsr	2,_C+120	;volatile
 33725  013740  006F FF7B FFE6     	movff	postinc2,postinc1
 33726  013746  006F FF7B FFE6     	movff	postinc2,postinc1
 33727  01374C  006F FF7B FFE6     	movff	postinc2,postinc1
 33728  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 33729  013758  EC9A  F0A6         	call	___fldiv	;wreg free
 33730  01375C  0060  F007  FFE6   	movff	btemp,postinc1
 33731  013762  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33732  013768  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33733  01376E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33734  013774  0EAB               	movlw	low (_C+172)
 33735  013776  6EE6               	movwf	postinc1,c
 33736  013778  0E07               	movlw	high (_C+172)
 33737  01377A  6EE6               	movwf	postinc1,c
 33738  01377C  EC0C  F0D7         	call	___asfladd	;wreg free
 33739                           
 33740                           ;bsoc.c: 67:  C.loadkw += (C.p_load / 3600.0);
 33741  013780  0E00               	movlw	0
 33742  013782  6EE6               	movwf	postinc1,c
 33743  013784  0E00               	movlw	0
 33744  013786  6EE6               	movwf	postinc1,c
 33745  013788  0E61               	movlw	97
 33746  01378A  6EE6               	movwf	postinc1,c
 33747  01378C  0E45               	movlw	69
 33748  01378E  6EE6               	movwf	postinc1,c
 33749  013790  EE21  F373         	lfsr	2,_C+116	;volatile
 33750  013794  006F FF7B FFE6     	movff	postinc2,postinc1
 33751  01379A  006F FF7B FFE6     	movff	postinc2,postinc1
 33752  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33753  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33754  0137AC  EC9A  F0A6         	call	___fldiv	;wreg free
 33755  0137B0  0060  F007  FFE6   	movff	btemp,postinc1
 33756  0137B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33757  0137BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33758  0137C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33759  0137C8  0EAF               	movlw	low (_C+176)
 33760  0137CA  6EE6               	movwf	postinc1,c
 33761  0137CC  0E07               	movlw	high (_C+176)
 33762  0137CE  6EE6               	movwf	postinc1,c
 33763  0137D0  EC0C  F0D7         	call	___asfladd	;wreg free
 33764                           
 33765                           ;bsoc.c: 68:  if (C.p_bat > 0.0)
 33766  0137D4  EE21  F37F         	lfsr	2,_C+128	;volatile
 33767  0137D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33768  0137DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33769  0137E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33770  0137EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33771  0137F0  0E00               	movlw	0
 33772  0137F2  6EE6               	movwf	postinc1,c
 33773  0137F4  0E00               	movlw	0
 33774  0137F6  6EE6               	movwf	postinc1,c
 33775  0137F8  0E00               	movlw	0
 33776  0137FA  6EE6               	movwf	postinc1,c
 33777  0137FC  0E00               	movlw	0
 33778  0137FE  6EE6               	movwf	postinc1,c
 33779  013800  ECDA  F0C7         	call	___flge	;wreg free
 33780  013804  B001               	btfsc	btemp& (0+255),0,c
 33781  013806  D02A               	goto	l12842
 33782                           
 33783                           ;bsoc.c: 69:   C.bkwi += (C.p_bat / 3600.0);
 33784  013808  0E00               	movlw	0
 33785  01380A  6EE6               	movwf	postinc1,c
 33786  01380C  0E00               	movlw	0
 33787  01380E  6EE6               	movwf	postinc1,c
 33788  013810  0E61               	movlw	97
 33789  013812  6EE6               	movwf	postinc1,c
 33790  013814  0E45               	movlw	69
 33791  013816  6EE6               	movwf	postinc1,c
 33792  013818  EE21  F37F         	lfsr	2,_C+128	;volatile
 33793  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 33794  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 33795  013828  006F FF7B FFE6     	movff	postinc2,postinc1
 33796  01382E  006F FF7B FFE6     	movff	postinc2,postinc1
 33797  013834  EC9A  F0A6         	call	___fldiv	;wreg free
 33798  013838  0060  F007  FFE6   	movff	btemp,postinc1
 33799  01383E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33800  013844  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33801  01384A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33802  013850  0E9F               	movlw	low (_C+160)
 33803  013852  6EE6               	movwf	postinc1,c
 33804  013854  0E07               	movlw	high (_C+160)
 33805  013856  6EE6               	movwf	postinc1,c
 33806  013858  EC0C  F0D7         	call	___asfladd	;wreg free
 33807  01385C                     l12842:
 33808                           
 33809                           ;bsoc.c: 70:  if (C.p_bat < 0.0)
 33810  01385C  EE21  F37F         	lfsr	2,_C+128	;volatile
 33811  013860  0E03               	movlw	3
 33812  013862  AEDB               	btfss	plusw2,7,c
 33813  013864  D038               	goto	l12846
 33814                           
 33815                           ;bsoc.c: 71:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33816  013866  0E00               	movlw	0
 33817  013868  6EE6               	movwf	postinc1,c
 33818  01386A  0E00               	movlw	0
 33819  01386C  6EE6               	movwf	postinc1,c
 33820  01386E  0E61               	movlw	97
 33821  013870  6EE6               	movwf	postinc1,c
 33822  013872  0E45               	movlw	69
 33823  013874  6EE6               	movwf	postinc1,c
 33824  013876  EE21  F37F         	lfsr	2,_C+128	;volatile
 33825  01387A  006F FF7B FFE6     	movff	postinc2,postinc1
 33826  013880  006F FF7B FFE6     	movff	postinc2,postinc1
 33827  013886  006F FF7B FFE6     	movff	postinc2,postinc1
 33828  01388C  006F FF7B FFE6     	movff	postinc2,postinc1
 33829  013892  EC9A  F0A6         	call	___fldiv	;wreg free
 33830  013896  0060  F007  FFE6   	movff	btemp,postinc1
 33831  01389C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33832  0138A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33833  0138A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33834  0138AE  ECE3  F0D2         	call	_fabsf	;wreg free
 33835  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 33836  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33837  0138BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33838  0138C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33839  0138CA  0EA3               	movlw	low (_C+164)
 33840  0138CC  6EE6               	movwf	postinc1,c
 33841  0138CE  0E07               	movlw	high (_C+164)
 33842  0138D0  6EE6               	movwf	postinc1,c
 33843  0138D2  EC0C  F0D7         	call	___asfladd	;wreg free
 33844  0138D6                     l12846:
 33845                           
 33846                           ;bsoc.c: 73:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33847  0138D6  0E00               	movlw	0
 33848  0138D8  6EE6               	movwf	postinc1,c
 33849  0138DA  0E00               	movlw	0
 33850  0138DC  6EE6               	movwf	postinc1,c
 33851  0138DE  0EC8               	movlw	200
 33852  0138E0  6EE6               	movwf	postinc1,c
 33853  0138E2  0E42               	movlw	66
 33854  0138E4  6EE6               	movwf	postinc1,c
 33855  0138E6  EE21  F38B         	lfsr	2,_C+140	;volatile
 33856  0138EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33857  0138F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33858  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33859  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33860  013902  EE21  F39B         	lfsr	2,_C+156	;volatile
 33861  013906  006F FF7B FFE6     	movff	postinc2,postinc1
 33862  01390C  006F FF7B FFE6     	movff	postinc2,postinc1
 33863  013912  006F FF7B FFE6     	movff	postinc2,postinc1
 33864  013918  006F FF7B FFE6     	movff	postinc2,postinc1
 33865  01391E  EC9A  F0A6         	call	___fldiv	;wreg free
 33866  013922  0060  F007  FFE6   	movff	btemp,postinc1
 33867  013928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33868  01392E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33869  013934  0060  F013  FFE6   	movff	btemp+3,postinc1
 33870  01393A  ECA7  F09E         	call	___flmul	;wreg free
 33871  01393E  0060  F007  FFE6   	movff	btemp,postinc1
 33872  013944  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33873  01394A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33874  013950  0060  F013  FFE6   	movff	btemp+3,postinc1
 33875  013956  EC21  F0C7         	call	___fltol	;wreg free
 33876  01395A  0060  F004  F00B   	movff	btemp,btemp+10
 33877  013960  0060  F008  F00C   	movff	btemp+1,btemp+11
 33878  013966  0E01               	movlw	1
 33879  013968  260B               	addwf	(btemp+10)^0,f,c
 33880  01396A  0E00               	movlw	0
 33881  01396C  220C               	addwfc	(btemp+11)^0,f,c
 33882  01396E  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33883  013974  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33884                           
 33885                           ;bsoc.c: 74:  if (C.soc > 100)
 33886  01397A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33887  01397E  0E01               	movlw	1
 33888  013980  50DB               	movf	plusw2,w,c
 33889  013982  E104               	bnz	u1240_20
 33890  013984  0E65               	movlw	101
 33891  013986  5CDE               	subwf	postinc2,w,c
 33892  013988  A0D8               	btfss	status,0,c
 33893  01398A  D008               	goto	l12852
 33894  01398C                     u1240_20:
 33895                           
 33896                           ;bsoc.c: 75:   C.soc = 100;
 33897  01398C  0E64               	movlw	100
 33898  01398E  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33899  013994  0E00               	movlw	0
 33900  013996  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33901  01399C                     l12852:
 33902                           
 33903                           ;bsoc.c: 77:  if (C.c_bat < 0.0) {
 33904  01399C  EE21  F343         	lfsr	2,_C+68	;volatile
 33905  0139A0  0E03               	movlw	3
 33906  0139A2  AEDB               	btfss	plusw2,7,c
 33907  0139A4  D047               	goto	l2033
 33908                           
 33909                           ;bsoc.c: 78:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33910  0139A6  EE21  F343         	lfsr	2,_C+68	;volatile
 33911  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33912  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33913  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33914  0139BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33915  0139C2  EE21  F39B         	lfsr	2,_C+156	;volatile
 33916  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 33917  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33918  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33919  0139D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33920  0139DE  EC9A  F0A6         	call	___fldiv	;wreg free
 33921  0139E2  0060  F007  FFE6   	movff	btemp,postinc1
 33922  0139E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33923  0139EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33924  0139F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33925  0139FA  EC28  F0DA         	call	___flneg	;wreg free
 33926  0139FE  0060  F007  FFE6   	movff	btemp,postinc1
 33927  013A04  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33928  013A0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33929  013A10  0060  F013  FFE6   	movff	btemp+3,postinc1
 33930  013A16  EC21  F0C7         	call	___fltol	;wreg free
 33931  013A1A  0060  F004  F00B   	movff	btemp,btemp+10
 33932  013A20  0060  F008  F00C   	movff	btemp+1,btemp+11
 33933  013A26  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 33934  013A2C  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 33935                           
 33936                           ;bsoc.c: 79:  } else {
 33937  013A32  D008               	goto	l12856
 33938  013A34                     l2033:
 33939                           
 33940                           ;bsoc.c: 80:   C.runtime = 120;
 33941  013A34  0E78               	movlw	120
 33942  013A36  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33943  013A3C  0E00               	movlw	0
 33944  013A3E  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 33945  013A44                     l12856:
 33946                           
 33947                           ;bsoc.c: 82:  if (C.runtime > 120)
 33948  013A44  EE21  F3B3         	lfsr	2,_C+180	;volatile
 33949  013A48  0E01               	movlw	1
 33950  013A4A  50DB               	movf	plusw2,w,c
 33951  013A4C  E104               	bnz	u1242_20
 33952  013A4E  0E79               	movlw	121
 33953  013A50  5CDE               	subwf	postinc2,w,c
 33954  013A52  A0D8               	btfss	status,0,c
 33955  013A54  D008               	goto	l12860
 33956  013A56                     u1242_20:
 33957                           
 33958                           ;bsoc.c: 83:   C.runtime = 120;
 33959  013A56  0E78               	movlw	120
 33960  013A58  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33961  013A5E  0E00               	movlw	0
 33962  013A60  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 33963  013A66                     l12860:
 33964                           
 33965                           ;bsoc.c: 85:  V.lowint_count++;
 33966  013A66  0E01               	movlw	1
 33967  013A68  0101               	movlb	1	; () banked
 33968  013A6A  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33969  013A6C  0E00               	movlw	0
 33970  013A6E  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33971  013A70  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33972  013A72  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33973                           
 33974                           ;bsoc.c: 87:  if (!log_update_wait++ && V.system_stable) {
 33975  013A74  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33976  013A76  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33977  013A78  A4D8               	btfss	status,2,c
 33978  013A7A  D15B               	goto	l12872
 33979                           
 33980                           ; BSR set to: 1
 33981  013A7C  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 33982  013A7E  B4D8               	btfsc	status,2,c
 33983  013A80  D158               	goto	l12872
 33984                           
 33985                           ; BSR set to: 1
 33986                           ;bsoc.c: 88:   log_ptr = port_data_dma_ptr();
 33987  013A82  EC90  F0E0         	call	_port_data_dma_ptr	;wreg free
 33988                           
 33989                           ;stkvar	_log_ptr @ sp[(-6)+4]
 33990  013A86  0EFF               	movlw	-1
 33991  013A88  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33992  013A8E  0EFE               	movlw	-2
 33993  013A90  0060  F007  FFE3   	movff	btemp,plusw1
 33994                           
 33995                           ;bsoc.c: 89:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 33996  013A96  EE21  F3B9         	lfsr	2,_C+186	;volatile
 33997  013A9A  006F FF7B FFE6     	movff	postinc2,postinc1
 33998  013AA0  006F FF7B FFE6     	movff	postinc2,postinc1
 33999  013AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34000  013AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34001  013AB2  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34002  013AB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34003  013ABC  006F FF7B FFE6     	movff	postinc2,postinc1
 34004  013AC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34005  013AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34006  013ACE  EE21  F39B         	lfsr	2,_C+156	;volatile
 34007  013AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34008  013AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34009  013ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 34010  013AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34011  013AEA  EE22  F026         	lfsr	2,_C+295	;volatile
 34012  013AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34013  013AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34014  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34015  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 34016  013B06  EE22  F022         	lfsr	2,_C+291	;volatile
 34017  013B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34018  013B10  006F FF7B FFE6     	movff	postinc2,postinc1
 34019  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34020  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34021  013B22  EE22  F021         	lfsr	2,_C+290	;volatile
 34022  013B26  50DF               	movf	indf2,w,c
 34023  013B28  6EE6               	movwf	postinc1,c
 34024  013B2A  0E00               	movlw	0
 34025  013B2C  6EE6               	movwf	postinc1,c
 34026  013B2E  EC74  F0E0         	call	_get_ac_charger_relay	;wreg free
 34027  013B32  5001               	movf	btemp^0,w,c
 34028  013B34  6EE6               	movwf	postinc1,c
 34029  013B36  0E00               	movlw	0
 34030  013B38  6EE6               	movwf	postinc1,c
 34031  013B3A  EE21  F367         	lfsr	2,_C+104	;volatile
 34032  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34033  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34034  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 34035  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 34036  013B56  EE21  F387         	lfsr	2,_C+136	;volatile
 34037  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34038  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34039  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 34040  013B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 34041  013B72  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34042  013B76  006F FF78  F00B    	movff	postinc2,btemp+10
 34043  013B7C  006F FF74  F00C    	movff	postdec2,btemp+11
 34044  013B82  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34045  013B88  0060  F033  FFE6   	movff	btemp+11,postinc1
 34046  013B8E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34047  013B92  006F FF78  F00B    	movff	postinc2,btemp+10
 34048  013B98  006F FF74  F00C    	movff	postdec2,btemp+11
 34049  013B9E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34050  013BA4  0060  F033  FFE6   	movff	btemp+11,postinc1
 34051  013BAA  EE21  F393         	lfsr	2,_C+148	;volatile
 34052  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 34053  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 34054  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34055  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34056  013BC6  EE21  F38F         	lfsr	2,_C+144	;volatile
 34057  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 34058  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 34059  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34060  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34061  013BE2  EE21  F377         	lfsr	2,_C+120	;volatile
 34062  013BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 34063  013BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 34064  013BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 34065  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 34066  013BFE  EE21  F373         	lfsr	2,_C+116	;volatile
 34067  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 34068  013C08  006F FF7B FFE6     	movff	postinc2,postinc1
 34069  013C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 34070  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 34071  013C1A  EE21  F37B         	lfsr	2,_C+124	;volatile
 34072  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 34073  013C24  006F FF7B FFE6     	movff	postinc2,postinc1
 34074  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34075  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34076  013C36  EE21  F37F         	lfsr	2,_C+128	;volatile
 34077  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 34078  013C40  006F FF7B FFE6     	movff	postinc2,postinc1
 34079  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34080  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34081  013C52  EE21  F363         	lfsr	2,_C+100	;volatile
 34082  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  013C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34086  013C6E  EE21  F34B         	lfsr	2,_C+76	;volatile
 34087  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 34088  013C78  006F FF7B FFE6     	movff	postinc2,postinc1
 34089  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34090  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34091  013C8A  EE21  F34F         	lfsr	2,_C+80	;volatile
 34092  013C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34093  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 34094  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34095  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34096  013CA6  EE21  F353         	lfsr	2,_C+84	;volatile
 34097  013CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 34098  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 34099  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34100  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34101  013CC2  0060  F6C7  FFE6   	movff	_V+129,postinc1
 34102  013CC8  0060  F6CB  FFE6   	movff	_V+130,postinc1
 34103  013CCE  0060  F6CF  FFE6   	movff	_V+131,postinc1
 34104  013CD4  0060  F6D3  FFE6   	movff	_V+132,postinc1
 34105  013CDA  0E31               	movlw	49
 34106  013CDC  6EE6               	movwf	postinc1,c
 34107  013CDE  0E00               	movlw	0
 34108  013CE0  6EE6               	movwf	postinc1,c
 34109  013CE2  0E21               	movlw	low STR_64
 34110  013CE4  6EE6               	movwf	postinc1,c
 34111  013CE6  0EFC               	movlw	high STR_64
 34112  013CE8  6EE6               	movwf	postinc1,c
 34113                           
 34114                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34115  013CEA  0EAA               	movlw	-86
 34116  013CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 34117  013CF2  006F FF8F FFE6     	movff	plusw1,postinc1
 34118  013CF8  0E56               	movlw	86
 34119  013CFA  6EE6               	movwf	postinc1,c
 34120  013CFC  EC79  F0CE         	call	_sprintf	;wreg free
 34121                           
 34122                           ; BSR set to: 0
 34123                           ;bsoc.c: 95:   StartTimer(TMR_DISPLAY, 125);
 34124  013D00  0E7D               	movlw	125
 34125  013D02  6EE6               	movwf	postinc1,c
 34126  013D04  0E00               	movlw	0
 34127  013D06  6EE6               	movwf	postinc1,c
 34128  013D08  0E0A               	movlw	10
 34129  013D0A  6EE6               	movwf	postinc1,c
 34130  013D0C  EC81  F0DB         	call	_StartTimer	;wreg free
 34131                           
 34132                           ;bsoc.c: 96:   send_port_data_dma(strlen((char*) log_ptr));
 34133                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34134  013D10  0EFE               	movlw	-2
 34135  013D12  006F FF8F FFE6     	movff	plusw1,postinc1
 34136  013D18  006F FF8F FFE6     	movff	plusw1,postinc1
 34137  013D1E  EC8C  F0D4         	call	_strlen	;wreg free
 34138  013D22  0060  F007  FFE6   	movff	btemp,postinc1
 34139  013D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34140  013D2E  EC8E  F0D9         	call	_send_port_data_dma	;wreg free
 34141  013D32                     l12872:
 34142                           
 34143                           ;bsoc.c: 98:  if (log_update_wait >= 10)
 34144  013D32  0E09               	movlw	9
 34145  013D34  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34146  013D36  D001               	goto	l2037
 34147                           
 34148                           ;bsoc.c: 99:   log_update_wait = 0;
 34149  013D38  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 34150  013D3A                     l2037:
 34151                           
 34152                           ;bsoc.c: 101:  C.update = 0;
 34153  013D3A  0E00               	movlw	0
 34154  013D3C  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34155                           
 34156                           ;bsoc.c: 103:  do { LATEbits.LATE1 = 0; } while(0);
 34157  013D42  92BE               	bcf	190,1,c	;volatile
 34158                           
 34159                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34160  013D44  0EFA               	movlw	250
 34161  013D46  26E1               	addwf	fsr1l,f,c
 34162  013D48  0EFF               	movlw	255
 34163  013D4A  22E2               	addwfc	fsr1h,f,c
 34164  013D4C  0012               	return		;funcret
 34165  013D4E                     __end_of_calc_bsoc:
 34166                           	opt callstack 0
 34167                           
 34168 ;; *************** function _send_port_data_dma *****************
 34169 ;; Defined at:
 34170 ;;		line 398 in file "eadog.c"
 34171 ;; Parameters:    Size  Location     Type
 34172 ;;  dsize           2  [STACK] unsigned short 
 34173 ;; Auto vars:     Size  Location     Type
 34174 ;;		None
 34175 ;; Return value:  Size  Location     Type
 34176 ;;                  1  [STACK] void 
 34177 ;; Registers used:
 34178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34179 ;; Tracked objects:
 34180 ;;		On entry : 0/0
 34181 ;;		On exit  : 3F/3B
 34182 ;;		Unchanged: 0/0
 34183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34188 ;;Total ram usage:        0 bytes
 34189 ;; Hardware stack levels used:    1
 34190 ;; Hardware stack levels required when called:    3
 34191 ;; This function calls:
 34192 ;;		Nothing
 34193 ;; This function is called by:
 34194 ;;		_calc_bsoc
 34195 ;; This function uses a reentrant model
 34196 ;;
 34197                           
 34198                           	psect	text154
 34199  01B31C                     __ptext154:
 34200                           	opt callstack 0
 34201  01B31C                     _send_port_data_dma:
 34202                           	opt callstack 10
 34203                           
 34204                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 34205                           ;stkvar	_dsize @ sp[(0)+-2]
 34206                           
 34207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34208                           ;incstack = 0
 34209  01B31C  0EFE               	movlw	-2
 34210  01B31E  04E3               	decf	plusw1,w,c
 34211  01B320  0EFF               	movlw	-1
 34212  01B322  006F FF8C  F001    	movff	plusw1,btemp
 34213  01B328  0E02               	movlw	2
 34214  01B32A  5A01               	subwfb	btemp^0,f,c
 34215  01B32C  A0D8               	btfss	status,0,c
 34216  01B32E  D00C               	goto	l9956
 34217                           
 34218                           ;eadog.c: 401:   dsize = 512;
 34219  01B330  0E00               	movlw	0
 34220  01B332  6E0B               	movwf	(btemp+10)^0,c
 34221  01B334  0E02               	movlw	2
 34222  01B336  6E0C               	movwf	(btemp+11)^0,c
 34223                           
 34224                           ;stkvar	_dsize @ sp[(0)+-2]
 34225  01B338  0EFE               	movlw	-2
 34226  01B33A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34227  01B340  0EFF               	movlw	-1
 34228  01B342  0060  F033  FFE3   	movff	btemp+11,plusw1
 34229  01B348                     l9956:
 34230                           
 34231                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 34232  01B348  013B               	movlb	59	; () banked
 34233  01B34A  9FDC               	bcf	220,7,b	;volatile
 34234                           
 34235                           ; BSR set to: 59
 34236                           ;eadog.c: 404:  DMA2SSZ = dsize;
 34237                           ;stkvar	_dsize @ sp[(0)+-2]
 34238  01B34C  0EFE               	movlw	-2
 34239  01B34E  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34240  01B354  0EFF               	movlw	-1
 34241  01B356  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34242                           
 34243                           ; BSR set to: 59
 34244                           ;eadog.c: 405:  DMA2DSZ = 1;
 34245  01B35C  0E00               	movlw	0
 34246  01B35E  6FCF               	movwf	207,b	;volatile
 34247  01B360  0E01               	movlw	1
 34248  01B362  6FCE               	movwf	206,b	;volatile
 34249                           
 34250                           ; BSR set to: 59
 34251                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 34252  01B364  8FDC               	bsf	220,7,b	;volatile
 34253                           
 34254                           ; BSR set to: 59
 34255                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 34256  01B366  8DDC               	bsf	220,6,b	;volatile
 34257                           
 34258                           ; BSR set to: 59
 34259                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34260  01B368  52E5               	movf	postdec1,f,c
 34261  01B36A  52E5               	movf	postdec1,f,c
 34262  01B36C  0012               	return		;funcret
 34263  01B36E                     __end_of_send_port_data_dma:
 34264                           	opt callstack 0
 34265                           
 34266 ;; *************** function _port_data_dma_ptr *****************
 34267 ;; Defined at:
 34268 ;;		line 413 in file "eadog.c"
 34269 ;; Parameters:    Size  Location     Type
 34270 ;;		None
 34271 ;; Auto vars:     Size  Location     Type
 34272 ;;		None
 34273 ;; Return value:  Size  Location     Type
 34274 ;;                  2  [STACK] PTR unsigned char 
 34275 ;; Registers used:
 34276 ;;		wreg, status,2, status,0, btemp, btemp+1
 34277 ;; Tracked objects:
 34278 ;;		On entry : 3F/1
 34279 ;;		On exit  : 0/0
 34280 ;;		Unchanged: 0/0
 34281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34286 ;;Total ram usage:        0 bytes
 34287 ;; Hardware stack levels used:    1
 34288 ;; Hardware stack levels required when called:    3
 34289 ;; This function calls:
 34290 ;;		Nothing
 34291 ;; This function is called by:
 34292 ;;		_calc_bsoc
 34293 ;; This function uses a reentrant model
 34294 ;;
 34295                           
 34296                           	psect	text155
 34297  01C120                     __ptext155:
 34298                           	opt callstack 0
 34299  01C120                     _port_data_dma_ptr:
 34300                           	opt callstack 10
 34301                           
 34302                           ;eadog.c: 415:  return port_data;
 34303                           
 34304                           ; BSR set to: 59
 34305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34306                           ;incstack = 0
 34307  01C120  0EFF               	movlw	low _port_data
 34308  01C122  6E01               	movwf	btemp^0,c
 34309  01C124  0E04               	movlw	high _port_data
 34310  01C126  6E02               	movwf	(btemp+1)^0,c
 34311                           
 34312                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34313  01C128  0012               	return		;funcret
 34314  01C12A                     __end_of_port_data_dma_ptr:
 34315                           	opt callstack 0
 34316                           
 34317 ;; *************** function ___asfladd *****************
 34318 ;; Defined at:
 34319 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34320 ;; Parameters:    Size  Location     Type
 34321 ;;  f1p             2  [STACK] PTR 
 34322 ;;		 -> C(299), 
 34323 ;;  f2              4  [STACK] PTR 
 34324 ;; Auto vars:     Size  Location     Type
 34325 ;;		None
 34326 ;; Return value:  Size  Location     Type
 34327 ;;                  4  [STACK] PTR 
 34328 ;; Registers used:
 34329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34330 ;; Tracked objects:
 34331 ;;		On entry : 0/0
 34332 ;;		On exit  : 0/0
 34333 ;;		Unchanged: 0/0
 34334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34339 ;;Total ram usage:        0 bytes
 34340 ;; Hardware stack levels used:    1
 34341 ;; Hardware stack levels required when called:    4
 34342 ;; This function calls:
 34343 ;;		___fladd
 34344 ;; This function is called by:
 34345 ;;		_calc_bsoc
 34346 ;; This function uses a reentrant model
 34347 ;;
 34348                           
 34349                           	psect	text156
 34350  01AE18                     __ptext156:
 34351                           	opt callstack 0
 34352  01AE18                     ___asfladd:
 34353                           	opt callstack 9
 34354                           
 34355                           ;	Return value of ___asfladd is never used
 34356                           ;stkvar	_f2 @ sp[(0)+-6]
 34357                           
 34358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34359                           ;incstack = 0
 34360  01AE18  0EFA               	movlw	-6
 34361  01AE1A  006F FF8F FFE6     	movff	plusw1,postinc1
 34362  01AE20  006F FF8F FFE6     	movff	plusw1,postinc1
 34363  01AE26  006F FF8F FFE6     	movff	plusw1,postinc1
 34364  01AE2C  006F FF8F FFE6     	movff	plusw1,postinc1
 34365                           
 34366                           ;stkvar	_f1p @ sp[(-4)+-2]
 34367  01AE32  0EFA               	movlw	-6
 34368  01AE34  006F FF8F FFD9     	movff	plusw1,fsr2l
 34369  01AE3A  0EFB               	movlw	-5
 34370  01AE3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 34371  01AE42  006F FF7B FFE6     	movff	postinc2,postinc1
 34372  01AE48  006F FF7B FFE6     	movff	postinc2,postinc1
 34373  01AE4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34374  01AE54  006F FF7B FFE6     	movff	postinc2,postinc1
 34375  01AE5A  ECBC  F0A2         	call	___fladd	;wreg free
 34376                           
 34377                           ;stkvar	_f1p @ sp[(0)+-2]
 34378  01AE5E  0EFE               	movlw	-2
 34379  01AE60  006F FF8F FFD9     	movff	plusw1,fsr2l
 34380  01AE66  0EFF               	movlw	-1
 34381  01AE68  006F FF8F FFDA     	movff	plusw1,fsr2h
 34382  01AE6E  0060  F007  FFDE   	movff	btemp,postinc2
 34383  01AE74  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34384  01AE7A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34385  01AE80  0060  F013  FFDE   	movff	btemp+3,postinc2
 34386                           
 34387                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34388  01AE86  0EFA               	movlw	250
 34389  01AE88  26E1               	addwf	fsr1l,f,c
 34390  01AE8A  0EFF               	movlw	255
 34391  01AE8C  22E2               	addwfc	fsr1h,f,c
 34392  01AE8E  0012               	return		;funcret
 34393  01AE90                     __end_of___asfladd:
 34394                           	opt callstack 0
 34395                           
 34396 ;; *************** function _INT0_ISR *****************
 34397 ;; Defined at:
 34398 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34399 ;; Parameters:    Size  Location     Type
 34400 ;;		None
 34401 ;; Auto vars:     Size  Location     Type
 34402 ;;		None
 34403 ;; Return value:  Size  Location     Type
 34404 ;;                  1    wreg      void 
 34405 ;; Registers used:
 34406 ;;		wreg, status,2, status,0, pclath, tosl
 34407 ;; Tracked objects:
 34408 ;;		On entry : 0/0
 34409 ;;		On exit  : 0/0
 34410 ;;		Unchanged: 0/0
 34411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34416 ;;Total ram usage:        0 bytes
 34417 ;; Hardware stack levels used:    1
 34418 ;; Hardware stack levels required when called:    2
 34419 ;; This function calls:
 34420 ;;		_INT0_CallBack
 34421 ;; This function is called by:
 34422 ;;		Interrupt level 2
 34423 ;; This function uses a non-reentrant model
 34424 ;;
 34425                           
 34426                           	psect	text157
 34427  01C0F8                     __ptext157:
 34428                           	opt callstack 0
 34429  01C0F8                     _INT0_ISR:
 34430                           	opt callstack 2
 34431                           
 34432                           ;incstack = 0
 34433  01C0F8  EE14  F15E         	lfsr	1,___inthi_sp
 34434                           
 34435                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34436  01C0FC  0139               	movlb	57	; () banked
 34437  01C0FE  91A1               	bcf	161,0,b	;volatile
 34438                           
 34439                           ; BSR set to: 57
 34440                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34441  01C100  EC1A  F0DF         	call	_INT0_CallBack	;wreg free
 34442  01C104  0011               	retfie		f
 34443  01C106                     __end_of_INT0_ISR:
 34444                           	opt callstack 0
 34445                           
 34446 ;; *************** function _INT0_CallBack *****************
 34447 ;; Defined at:
 34448 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34449 ;; Parameters:    Size  Location     Type
 34450 ;;		None
 34451 ;; Auto vars:     Size  Location     Type
 34452 ;;		None
 34453 ;; Return value:  Size  Location     Type
 34454 ;;                  1  [STACK] void 
 34455 ;; Registers used:
 34456 ;;		wreg, status,2, status,0, pclath, tosl
 34457 ;; Tracked objects:
 34458 ;;		On entry : 3F/39
 34459 ;;		On exit  : 0/0
 34460 ;;		Unchanged: 0/0
 34461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34466 ;;Total ram usage:        0 bytes
 34467 ;; Hardware stack levels used:    1
 34468 ;; Hardware stack levels required when called:    1
 34469 ;; This function calls:
 34470 ;;		Absolute function
 34471 ;;		_INT0_DefaultInterruptHandler
 34472 ;; This function is called by:
 34473 ;;		_INT0_ISR
 34474 ;; This function uses a reentrant model
 34475 ;;
 34476                           
 34477                           	psect	text158
 34478  01BE34                     __ptext158:
 34479                           	opt callstack 0
 34480  01BE34                     _INT0_CallBack:
 34481                           	opt callstack 2
 34482                           
 34483                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34484                           
 34485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34486                           ;incstack = 0
 34487  01BE34  0100               	movlb	0	; () banked
 34488  01BE36  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34489  01BE38  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34490  01BE3A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34491  01BE3C  B4D8               	btfsc	status,2,c
 34492  01BE3E  0012               	return	
 34493                           
 34494                           ; BSR set to: 0
 34495                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34496  01BE40  D801               	call	u997_48
 34497  01BE42  0012               	return	
 34498  01BE44                     u997_48:
 34499  01BE44  0005               	push	
 34500  01BE46  6EFA               	movwf	pclath,c
 34501  01BE48  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34502  01BE4A  6EFD               	movwf	tosl,c
 34503  01BE4C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34504  01BE4E  6EFE               	movwf	tosh,c
 34505  01BE50  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34506  01BE52  6EFF               	movwf	tosu,c
 34507  01BE54  50FA               	movf	pclath,w,c
 34508  01BE56  0012               	return		;indir
 34509  01BE58                     __end_of_INT0_CallBack:
 34510                           	opt callstack 0
 34511                           
 34512 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34513 ;; Defined at:
 34514 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34515 ;; Parameters:    Size  Location     Type
 34516 ;;		None
 34517 ;; Auto vars:     Size  Location     Type
 34518 ;;		None
 34519 ;; Return value:  Size  Location     Type
 34520 ;;                  1  [STACK] void 
 34521 ;; Registers used:
 34522 ;;		None
 34523 ;; Tracked objects:
 34524 ;;		On entry : 3F/0
 34525 ;;		On exit  : 0/0
 34526 ;;		Unchanged: 0/0
 34527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34532 ;;Total ram usage:        0 bytes
 34533 ;; Hardware stack levels used:    1
 34534 ;; This function calls:
 34535 ;;		Nothing
 34536 ;; This function is called by:
 34537 ;;		_EXT_INT_Initialize
 34538 ;;		_INT0_CallBack
 34539 ;; This function uses a reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text159
 34543  01C19A                     __ptext159:
 34544                           	opt callstack 0
 34545  01C19A                     _INT0_DefaultInterruptHandler:
 34546                           	opt callstack 2
 34547                           
 34548                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34549                           
 34550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34551                           ;incstack = 0
 34552  01C19A  0012               	return		;funcret
 34553  01C19C                     __end_of_INT0_DefaultInterruptHandler:
 34554                           	opt callstack 0
 34555                           
 34556 ;; *************** function _Default_ISR *****************
 34557 ;; Defined at:
 34558 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34559 ;; Parameters:    Size  Location     Type
 34560 ;;		None
 34561 ;; Auto vars:     Size  Location     Type
 34562 ;;		None
 34563 ;; Return value:  Size  Location     Type
 34564 ;;                  1    wreg      void 
 34565 ;; Registers used:
 34566 ;;		None
 34567 ;; Tracked objects:
 34568 ;;		On entry : 0/0
 34569 ;;		On exit  : 0/0
 34570 ;;		Unchanged: 0/0
 34571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34576 ;;Total ram usage:        0 bytes
 34577 ;; Hardware stack levels used:    1
 34578 ;; This function calls:
 34579 ;;		Nothing
 34580 ;; This function is called by:
 34581 ;;		Interrupt level 2
 34582 ;; This function uses a non-reentrant model
 34583 ;;
 34584                           
 34585                           	psect	text160
 34586  01C190                     __ptext160:
 34587                           	opt callstack 0
 34588  01C190                     _Default_ISR:
 34589                           	opt callstack 4
 34590                           
 34591                           ;incstack = 0
 34592  01C190  EE14  F15E         	lfsr	1,___inthi_sp
 34593  01C194  0011               	retfie		f
 34594  01C196                     __end_of_Default_ISR:
 34595                           	opt callstack 0
 34596                           
 34597 ;; *************** function _ADCC_ISR *****************
 34598 ;; Defined at:
 34599 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34600 ;; Parameters:    Size  Location     Type
 34601 ;;		None
 34602 ;; Auto vars:     Size  Location     Type
 34603 ;;		None
 34604 ;; Return value:  Size  Location     Type
 34605 ;;                  1    wreg      void 
 34606 ;; Registers used:
 34607 ;;		wreg, status,2, status,0, pclath, tosl
 34608 ;; Tracked objects:
 34609 ;;		On entry : 0/0
 34610 ;;		On exit  : 0/0
 34611 ;;		Unchanged: 0/0
 34612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34617 ;;Total ram usage:        0 bytes
 34618 ;; Hardware stack levels used:    1
 34619 ;; Hardware stack levels required when called:    1
 34620 ;; This function calls:
 34621 ;;		Absolute function
 34622 ;;		_ADCC_DefaultInterruptHandler
 34623 ;;		_adc_int_handler
 34624 ;; This function is called by:
 34625 ;;		Interrupt level 2
 34626 ;; This function uses a non-reentrant model
 34627 ;;
 34628                           
 34629                           	psect	text161
 34630  01BAA4                     __ptext161:
 34631                           	opt callstack 0
 34632  01BAA4                     _ADCC_ISR:
 34633                           	opt callstack 3
 34634                           
 34635                           ;incstack = 0
 34636  01BAA4  EE14  F15E         	lfsr	1,___inthi_sp
 34637                           
 34638                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34639  01BAA8  0139               	movlb	57	; () banked
 34640  01BAAA  95A1               	bcf	161,2,b	;volatile
 34641                           
 34642                           ; BSR set to: 57
 34643                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34644  01BAAC  0100               	movlb	0	; () banked
 34645  01BAAE  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34646  01BAB0  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34647  01BAB2  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34648  01BAB4  B4D8               	btfsc	status,2,c
 34649  01BAB6  0011               	retfie		f
 34650                           
 34651                           ; BSR set to: 0
 34652                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34653  01BAB8  D801               	call	i2u1040_48
 34654  01BABA  0011               	retfie		f
 34655  01BABC                     i2u1040_48:
 34656  01BABC  0005               	push	
 34657  01BABE  6EFA               	movwf	pclath,c
 34658  01BAC0  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34659  01BAC2  6EFD               	movwf	tosl,c
 34660  01BAC4  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34661  01BAC6  6EFE               	movwf	tosh,c
 34662  01BAC8  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34663  01BACA  6EFF               	movwf	tosu,c
 34664  01BACC  50FA               	movf	pclath,w,c
 34665  01BACE  0012               	return		;indir
 34666  01BAD0                     __end_of_ADCC_ISR:
 34667                           	opt callstack 0
 34668                           
 34669 ;; *************** function _adc_int_t_handler *****************
 34670 ;; Defined at:
 34671 ;;		line 146 in file "daq.c"
 34672 ;; Parameters:    Size  Location     Type
 34673 ;;		None
 34674 ;; Auto vars:     Size  Location     Type
 34675 ;;		None
 34676 ;; Return value:  Size  Location     Type
 34677 ;;                  1  [STACK] void 
 34678 ;; Registers used:
 34679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34680 ;; Tracked objects:
 34681 ;;		On entry : 3F/0
 34682 ;;		On exit  : 0/0
 34683 ;;		Unchanged: 0/0
 34684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34689 ;;Total ram usage:        0 bytes
 34690 ;; Hardware stack levels used:    1
 34691 ;; Hardware stack levels required when called:    1
 34692 ;; This function calls:
 34693 ;;		_ADCC_DischargeSampleCapacitor
 34694 ;;		_ADCC_StartConversion
 34695 ;; This function is called by:
 34696 ;;		_start_adc_scan
 34697 ;;		_ADCC_ThresholdISR
 34698 ;; This function uses a reentrant model
 34699 ;;
 34700                           
 34701                           	psect	text162
 34702  01AD96                     __ptext162:
 34703                           	opt callstack 0
 34704  01AD96                     _adc_int_t_handler:
 34705                           	opt callstack 2
 34706                           
 34707                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34708                           
 34709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34710                           ;incstack = 0
 34711  01AD96  013E               	movlb	62	; () banked
 34712  01AD98  51E6               	movf	230,w,b	;volatile
 34713  01AD9A  006F FB9C  F001    	movff	16103,btemp	;volatile
 34714  01ADA0  6A02               	clrf	(btemp+1)^0,c
 34715  01ADA2  0060  F004  F002   	movff	btemp,btemp+1
 34716  01ADA8  6A01               	clrf	btemp^0,c
 34717  01ADAA  2601               	addwf	btemp^0,f,c
 34718  01ADAC  0E00               	movlw	0
 34719  01ADAE  2202               	addwfc	(btemp+1)^0,f,c
 34720  01ADB0  0101               	movlb	1	; () banked
 34721  01ADB2  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34722  01ADB4  0D02               	mullw	2
 34723  01ADB6  0E00               	movlw	low _R
 34724  01ADB8  24F3               	addwf	243,w,c
 34725  01ADBA  6ED9               	movwf	fsr2l,c
 34726  01ADBC  0E01               	movlw	high _R
 34727  01ADBE  20F4               	addwfc	prodh,w,c
 34728  01ADC0  6EDA               	movwf	fsr2h,c
 34729  01ADC2  0060  F007  FFDE   	movff	btemp,postinc2
 34730  01ADC8  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34731  01ADCE                     l11148:
 34732                           
 34733                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34734  01ADCE  0101               	movlb	1	; () banked
 34735  01ADD0  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34736  01ADD2  0E0D               	movlw	13
 34737  01ADD4  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34738  01ADD6  D003               	goto	l11154
 34739                           
 34740                           ; BSR set to: 1
 34741                           ;daq.c: 154:    R.done = 1;
 34742  01ADD8  0E01               	movlw	1
 34743  01ADDA  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34744  01ADDC  0012               	return	
 34745  01ADDE                     l11154:
 34746                           
 34747                           ; BSR set to: 1
 34748                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34749  01ADDE  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34750  01ADE4  EE20  F12D         	lfsr	2,_R+45	;volatile
 34751  01ADE8  006F FF78  F009    	movff	postinc2,btemp+8
 34752  01ADEE  006F FF74  F00A    	movff	postdec2,btemp+9
 34753  01ADF4  2A0C               	incf	(btemp+11)^0,f,c
 34754  01ADF6  D003               	goto	u1037_44
 34755  01ADF8                     u1037_45:
 34756  01ADF8  90D8               	bcf	status,0,c
 34757  01ADFA  320A               	rrcf	(btemp+9)^0,f,c
 34758  01ADFC  3209               	rrcf	(btemp+8)^0,f,c
 34759  01ADFE                     u1037_44:
 34760  01ADFE  2E0C               	decfsz	(btemp+11)^0,f,c
 34761  01AE00  D7FB               	goto	u1037_45
 34762  01AE02  A009               	btfss	(btemp+8)^0,0,c
 34763  01AE04  D7E4               	goto	l11148
 34764                           
 34765                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34766  01AE06  ECA7  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34767                           
 34768                           ; BSR set to: 62
 34769                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34770  01AE0A  0101               	movlb	1	; () banked
 34771  01AE0C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34772  01AE0E  0B0F               	andlw	15
 34773  01AE10  6EE6               	movwf	postinc1,c
 34774  01AE12  EC36  F0E0         	call	_ADCC_StartConversion	;wreg free
 34775                           
 34776                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34777  01AE16  0012               	return		;funcret
 34778  01AE18                     __end_of_adc_int_t_handler:
 34779                           	opt callstack 0
 34780                           
 34781 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34782 ;; Defined at:
 34783 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34784 ;; Parameters:    Size  Location     Type
 34785 ;;		None
 34786 ;; Auto vars:     Size  Location     Type
 34787 ;;		None
 34788 ;; Return value:  Size  Location     Type
 34789 ;;                  1  [STACK] void 
 34790 ;; Registers used:
 34791 ;;		None
 34792 ;; Tracked objects:
 34793 ;;		On entry : 3F/0
 34794 ;;		On exit  : 0/0
 34795 ;;		Unchanged: 0/0
 34796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34801 ;;Total ram usage:        0 bytes
 34802 ;; Hardware stack levels used:    1
 34803 ;; This function calls:
 34804 ;;		Nothing
 34805 ;; This function is called by:
 34806 ;;		_ADCC_Initialize
 34807 ;;		_ADCC_ISR
 34808 ;;		_ADCC_ThresholdISR
 34809 ;; This function uses a reentrant model
 34810 ;;
 34811                           
 34812                           	psect	text163
 34813  01C19C                     __ptext163:
 34814                           	opt callstack 0
 34815  01C19C                     _ADCC_DefaultInterruptHandler:
 34816                           	opt callstack 3
 34817                           
 34818                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34819                           
 34820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34821                           ;incstack = 0
 34822  01C19C  0012               	return		;funcret
 34823  01C19E                     __end_of_ADCC_DefaultInterruptHandler:
 34824                           	opt callstack 0
 34825                           
 34826 ;; *************** function _adc_int_handler *****************
 34827 ;; Defined at:
 34828 ;;		line 136 in file "daq.c"
 34829 ;; Parameters:    Size  Location     Type
 34830 ;;		None
 34831 ;; Auto vars:     Size  Location     Type
 34832 ;;		None
 34833 ;; Return value:  Size  Location     Type
 34834 ;;                  1  [STACK] void 
 34835 ;; Registers used:
 34836 ;;		None
 34837 ;; Tracked objects:
 34838 ;;		On entry : 3F/0
 34839 ;;		On exit  : 0/0
 34840 ;;		Unchanged: 0/0
 34841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34846 ;;Total ram usage:        0 bytes
 34847 ;; Hardware stack levels used:    1
 34848 ;; This function calls:
 34849 ;;		Nothing
 34850 ;; This function is called by:
 34851 ;;		_start_adc_scan
 34852 ;;		_ADCC_ISR
 34853 ;; This function uses a reentrant model
 34854 ;;
 34855                           
 34856                           	psect	text164
 34857  01C19E                     __ptext164:
 34858                           	opt callstack 0
 34859  01C19E                     _adc_int_handler:
 34860                           	opt callstack 3
 34861                           
 34862                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34863                           
 34864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34865                           ;incstack = 0
 34866  01C19E  0012               	return		;funcret
 34867  01C1A0                     __end_of_adc_int_handler:
 34868                           	opt callstack 0
 34869                           
 34870 ;; *************** function _ADCC_ThresholdISR *****************
 34871 ;; Defined at:
 34872 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34873 ;; Parameters:    Size  Location     Type
 34874 ;;		None
 34875 ;; Auto vars:     Size  Location     Type
 34876 ;;		None
 34877 ;; Return value:  Size  Location     Type
 34878 ;;                  1    wreg      void 
 34879 ;; Registers used:
 34880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34881 ;; Tracked objects:
 34882 ;;		On entry : 0/0
 34883 ;;		On exit  : 0/0
 34884 ;;		Unchanged: 0/0
 34885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34888 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34889 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34890 ;;Total ram usage:        5 bytes
 34891 ;; Hardware stack levels used:    1
 34892 ;; Hardware stack levels required when called:    2
 34893 ;; This function calls:
 34894 ;;		Absolute function
 34895 ;;		_ADCC_DefaultInterruptHandler
 34896 ;;		_adc_int_t_handler
 34897 ;; This function is called by:
 34898 ;;		Interrupt level 2
 34899 ;; This function uses a non-reentrant model
 34900 ;;
 34901                           
 34902                           	psect	text165
 34903  01AF64                     __ptext165:
 34904                           	opt callstack 0
 34905  01AF64                     _ADCC_ThresholdISR:
 34906                           	opt callstack 2
 34907                           
 34908                           ;incstack = 0
 34909  01AF64  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34910  01AF6A  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34911  01AF70  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34912  01AF76  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34913  01AF7C  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34914  01AF82  EE14  F15E         	lfsr	1,___inthi_sp
 34915                           
 34916                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34917  01AF86  0139               	movlb	57	; () banked
 34918  01AF88  97A1               	bcf	161,3,b	;volatile
 34919                           
 34920                           ; BSR set to: 57
 34921                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34922  01AF8A  0100               	movlb	0	; () banked
 34923  01AF8C  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34924  01AF8E  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34925  01AF90  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34926  01AF92  B4D8               	btfsc	status,2,c
 34927  01AF94  D00C               	goto	i2u1042_49
 34928                           
 34929                           ; BSR set to: 0
 34930                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34931  01AF96  D801               	call	i2u1042_48
 34932  01AF98  D00A               	goto	i2u1042_49
 34933  01AF9A                     i2u1042_48:
 34934  01AF9A  0005               	push	
 34935  01AF9C  6EFA               	movwf	pclath,c
 34936  01AF9E  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34937  01AFA0  6EFD               	movwf	tosl,c
 34938  01AFA2  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34939  01AFA4  6EFE               	movwf	tosh,c
 34940  01AFA6  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34941  01AFA8  6EFF               	movwf	tosu,c
 34942  01AFAA  50FA               	movf	pclath,w,c
 34943  01AFAC  0012               	return		;indir
 34944  01AFAE                     i2u1042_49:
 34945  01AFAE  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34946  01AFB4  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34947  01AFBA  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34948  01AFC0  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34949  01AFC6  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34950  01AFCC  0011               	retfie		f
 34951  01AFCE                     __end_of_ADCC_ThresholdISR:
 34952                           	opt callstack 0
 34953                           
 34954 ;; *************** function _UART1_rx_vect_isr *****************
 34955 ;; Defined at:
 34956 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34957 ;; Parameters:    Size  Location     Type
 34958 ;;		None
 34959 ;; Auto vars:     Size  Location     Type
 34960 ;;		None
 34961 ;; Return value:  Size  Location     Type
 34962 ;;                  1    wreg      void 
 34963 ;; Registers used:
 34964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34965 ;; Tracked objects:
 34966 ;;		On entry : 0/0
 34967 ;;		On exit  : 0/0
 34968 ;;		Unchanged: 0/0
 34969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34974 ;;Total ram usage:        0 bytes
 34975 ;; Hardware stack levels used:    1
 34976 ;; Hardware stack levels required when called:    1
 34977 ;; This function calls:
 34978 ;;		Absolute function
 34979 ;;		_UART1_Receive_ISR
 34980 ;; This function is called by:
 34981 ;;		Interrupt level 2
 34982 ;; This function uses a non-reentrant model
 34983 ;;
 34984                           
 34985                           	psect	text166
 34986  01BD08                     __ptext166:
 34987                           	opt callstack 0
 34988  01BD08                     _UART1_rx_vect_isr:
 34989                           	opt callstack 3
 34990                           
 34991                           ;incstack = 0
 34992  01BD08  EE14  F15E         	lfsr	1,___inthi_sp
 34993                           
 34994                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34995  01BD0C  0100               	movlb	0	; () banked
 34996  01BD0E  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34997  01BD10  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34998  01BD12  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34999  01BD14  B4D8               	btfsc	status,2,c
 35000  01BD16  0011               	retfie		f
 35001                           
 35002                           ; BSR set to: 0
 35003                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35004  01BD18  D801               	call	i2u1044_48
 35005  01BD1A  0011               	retfie		f
 35006  01BD1C                     i2u1044_48:
 35007  01BD1C  0005               	push	
 35008  01BD1E  6EFA               	movwf	pclath,c
 35009  01BD20  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35010  01BD22  6EFD               	movwf	tosl,c
 35011  01BD24  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35012  01BD26  6EFE               	movwf	tosh,c
 35013  01BD28  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35014  01BD2A  6EFF               	movwf	tosu,c
 35015  01BD2C  50FA               	movf	pclath,w,c
 35016  01BD2E  0012               	return		;indir
 35017  01BD30                     __end_of_UART1_rx_vect_isr:
 35018                           	opt callstack 0
 35019                           
 35020 ;; *************** function _UART1_Receive_ISR *****************
 35021 ;; Defined at:
 35022 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35023 ;; Parameters:    Size  Location     Type
 35024 ;;		None
 35025 ;; Auto vars:     Size  Location     Type
 35026 ;;		None
 35027 ;; Return value:  Size  Location     Type
 35028 ;;                  1  [STACK] void 
 35029 ;; Registers used:
 35030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35031 ;; Tracked objects:
 35032 ;;		On entry : 3F/0
 35033 ;;		On exit  : 3F/0
 35034 ;;		Unchanged: 0/0
 35035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35040 ;;Total ram usage:        0 bytes
 35041 ;; Hardware stack levels used:    1
 35042 ;; This function calls:
 35043 ;;		Nothing
 35044 ;; This function is called by:
 35045 ;;		_UART1_Initialize
 35046 ;;		_UART1_rx_vect_isr
 35047 ;; This function uses a reentrant model
 35048 ;;
 35049                           
 35050                           	psect	text167
 35051  01BF78                     __ptext167:
 35052                           	opt callstack 0
 35053  01BF78                     _UART1_Receive_ISR:
 35054                           	opt callstack 3
 35055                           
 35056                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35057                           
 35058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35059                           ;incstack = 0
 35060  01BF78  5047               	movf	_uart1RxHead^0,w,c
 35061  01BF7A  0F6C               	addlw	low _uart1RxBuffer
 35062  01BF7C  6ED9               	movwf	fsr2l,c
 35063  01BF7E  6ADA               	clrf	fsr2h,c
 35064  01BF80  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35065  01BF86  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35066                           
 35067                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35068  01BF88  0E07               	movlw	7
 35069  01BF8A  6447               	cpfsgt	_uart1RxHead^0,c
 35070  01BF8C  D001               	goto	l10722
 35071                           
 35072                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35073  01BF8E  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35074  01BF90                     l10722:
 35075                           
 35076                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35077  01BF90  0100               	movlb	0	; () banked
 35078  01BF92  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35079                           
 35080                           ; BSR set to: 0
 35081                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35082  01BF94  0012               	return		;funcret
 35083  01BF96                     __end_of_UART1_Receive_ISR:
 35084                           	opt callstack 0
 35085                           
 35086 ;; *************** function _UART2_tx_vect_isr *****************
 35087 ;; Defined at:
 35088 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35089 ;; Parameters:    Size  Location     Type
 35090 ;;		None
 35091 ;; Auto vars:     Size  Location     Type
 35092 ;;		None
 35093 ;; Return value:  Size  Location     Type
 35094 ;;                  1    wreg      void 
 35095 ;; Registers used:
 35096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35097 ;; Tracked objects:
 35098 ;;		On entry : 0/0
 35099 ;;		On exit  : 0/0
 35100 ;;		Unchanged: 0/0
 35101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35106 ;;Total ram usage:        0 bytes
 35107 ;; Hardware stack levels used:    1
 35108 ;; Hardware stack levels required when called:    1
 35109 ;; This function calls:
 35110 ;;		Absolute function
 35111 ;;		_UART2_Transmit_ISR
 35112 ;; This function is called by:
 35113 ;;		Interrupt level 2
 35114 ;; This function uses a non-reentrant model
 35115 ;;
 35116                           
 35117                           	psect	text168
 35118  01BD30                     __ptext168:
 35119                           	opt callstack 0
 35120  01BD30                     _UART2_tx_vect_isr:
 35121                           	opt callstack 3
 35122                           
 35123                           ; BSR set to: 0
 35124                           ;incstack = 0
 35125  01BD30  EE14  F15E         	lfsr	1,___inthi_sp
 35126                           
 35127                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35128  01BD34  0100               	movlb	0	; () banked
 35129  01BD36  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35130  01BD38  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35131  01BD3A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35132  01BD3C  B4D8               	btfsc	status,2,c
 35133  01BD3E  0011               	retfie		f
 35134                           
 35135                           ; BSR set to: 0
 35136                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35137  01BD40  D801               	call	i2u1046_48
 35138  01BD42  0011               	retfie		f
 35139  01BD44                     i2u1046_48:
 35140  01BD44  0005               	push	
 35141  01BD46  6EFA               	movwf	pclath,c
 35142  01BD48  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35143  01BD4A  6EFD               	movwf	tosl,c
 35144  01BD4C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35145  01BD4E  6EFE               	movwf	tosh,c
 35146  01BD50  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35147  01BD52  6EFF               	movwf	tosu,c
 35148  01BD54  50FA               	movf	pclath,w,c
 35149  01BD56  0012               	return		;indir
 35150  01BD58                     __end_of_UART2_tx_vect_isr:
 35151                           	opt callstack 0
 35152                           
 35153 ;; *************** function _UART2_Transmit_ISR *****************
 35154 ;; Defined at:
 35155 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35156 ;; Parameters:    Size  Location     Type
 35157 ;;		None
 35158 ;; Auto vars:     Size  Location     Type
 35159 ;;		None
 35160 ;; Return value:  Size  Location     Type
 35161 ;;                  1  [STACK] void 
 35162 ;; Registers used:
 35163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35164 ;; Tracked objects:
 35165 ;;		On entry : 3F/0
 35166 ;;		On exit  : 3B/39
 35167 ;;		Unchanged: 0/0
 35168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35173 ;;Total ram usage:        0 bytes
 35174 ;; Hardware stack levels used:    1
 35175 ;; This function calls:
 35176 ;;		Nothing
 35177 ;; This function is called by:
 35178 ;;		_UART2_Initialize
 35179 ;;		_UART2_tx_vect_isr
 35180 ;; This function uses a reentrant model
 35181 ;;
 35182                           
 35183                           	psect	text169
 35184  01BAD0                     __ptext169:
 35185                           	opt callstack 0
 35186  01BAD0                     _UART2_Transmit_ISR:
 35187                           	opt callstack 3
 35188                           
 35189                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35190                           
 35191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35192                           ;incstack = 0
 35193  01BAD0  0E40               	movlw	64
 35194  01BAD2  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 35195  01BAD4  D010               	goto	l673
 35196                           
 35197                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35198  01BAD6  0E00               	movlw	low _uart2TxBuffer
 35199  01BAD8  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 35200  01BADA  6ED9               	movwf	fsr2l,c
 35201  01BADC  6ADA               	clrf	fsr2h,c
 35202  01BADE  0E03               	movlw	high _uart2TxBuffer
 35203  01BAE0  22DA               	addwfc	fsr2h,f,c
 35204  01BAE2  50DF               	movf	indf2,w,c
 35205  01BAE4  013D               	movlb	61	; () banked
 35206  01BAE6  6FD2               	movwf	210,b	;volatile
 35207                           
 35208                           ; BSR set to: 61
 35209  01BAE8  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 35210                           
 35211                           ; BSR set to: 61
 35212                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35213  01BAEA  0E3F               	movlw	63
 35214  01BAEC  6445               	cpfsgt	_uart2TxTail^0,c
 35215  01BAEE  D001               	goto	l10734
 35216                           
 35217                           ; BSR set to: 61
 35218                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35219  01BAF0  6A45               	clrf	_uart2TxTail^0,c	;volatile
 35220  01BAF2                     l10734:
 35221                           
 35222                           ; BSR set to: 61
 35223                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35224  01BAF2  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35225                           
 35226                           ;mcc_generated_files/uart2.c: 224:     }
 35227  01BAF4  0012               	return	
 35228  01BAF6                     l673:
 35229                           
 35230                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35231  01BAF6  0139               	movlb	57	; () banked
 35232  01BAF8  9796               	bcf	150,3,b	;volatile
 35233                           
 35234                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35235  01BAFA  0012               	return		;funcret
 35236  01BAFC                     __end_of_UART2_Transmit_ISR:
 35237                           	opt callstack 0
 35238                           
 35239 ;; *************** function _UART2_rx_vect_isr *****************
 35240 ;; Defined at:
 35241 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35242 ;; Parameters:    Size  Location     Type
 35243 ;;		None
 35244 ;; Auto vars:     Size  Location     Type
 35245 ;;		None
 35246 ;; Return value:  Size  Location     Type
 35247 ;;                  1    wreg      void 
 35248 ;; Registers used:
 35249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35250 ;; Tracked objects:
 35251 ;;		On entry : 0/0
 35252 ;;		On exit  : 0/0
 35253 ;;		Unchanged: 0/0
 35254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35259 ;;Total ram usage:        0 bytes
 35260 ;; Hardware stack levels used:    1
 35261 ;; Hardware stack levels required when called:    1
 35262 ;; This function calls:
 35263 ;;		Absolute function
 35264 ;;		_UART2_Receive_ISR
 35265 ;; This function is called by:
 35266 ;;		Interrupt level 2
 35267 ;; This function uses a non-reentrant model
 35268 ;;
 35269                           
 35270                           	psect	text170
 35271  01BD58                     __ptext170:
 35272                           	opt callstack 0
 35273  01BD58                     _UART2_rx_vect_isr:
 35274                           	opt callstack 3
 35275                           
 35276                           ;incstack = 0
 35277  01BD58  EE14  F15E         	lfsr	1,___inthi_sp
 35278                           
 35279                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35280  01BD5C  0100               	movlb	0	; () banked
 35281  01BD5E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35282  01BD60  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35283  01BD62  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35284  01BD64  B4D8               	btfsc	status,2,c
 35285  01BD66  0011               	retfie		f
 35286                           
 35287                           ; BSR set to: 0
 35288                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35289  01BD68  D801               	call	i2u1048_48
 35290  01BD6A  0011               	retfie		f
 35291  01BD6C                     i2u1048_48:
 35292  01BD6C  0005               	push	
 35293  01BD6E  6EFA               	movwf	pclath,c
 35294  01BD70  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35295  01BD72  6EFD               	movwf	tosl,c
 35296  01BD74  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35297  01BD76  6EFE               	movwf	tosh,c
 35298  01BD78  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35299  01BD7A  6EFF               	movwf	tosu,c
 35300  01BD7C  50FA               	movf	pclath,w,c
 35301  01BD7E  0012               	return		;indir
 35302  01BD80                     __end_of_UART2_rx_vect_isr:
 35303                           	opt callstack 0
 35304                           
 35305 ;; *************** function _UART2_Receive_ISR *****************
 35306 ;; Defined at:
 35307 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35308 ;; Parameters:    Size  Location     Type
 35309 ;;		None
 35310 ;; Auto vars:     Size  Location     Type
 35311 ;;		None
 35312 ;; Return value:  Size  Location     Type
 35313 ;;                  1  [STACK] void 
 35314 ;; Registers used:
 35315 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35316 ;; Tracked objects:
 35317 ;;		On entry : 3F/0
 35318 ;;		On exit  : 3F/0
 35319 ;;		Unchanged: 0/0
 35320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35325 ;;Total ram usage:        0 bytes
 35326 ;; Hardware stack levels used:    1
 35327 ;; This function calls:
 35328 ;;		Nothing
 35329 ;; This function is called by:
 35330 ;;		_UART2_Initialize
 35331 ;;		_UART2_rx_vect_isr
 35332 ;; This function uses a reentrant model
 35333 ;;
 35334                           
 35335                           	psect	text171
 35336  01BEE0                     __ptext171:
 35337                           	opt callstack 0
 35338  01BEE0                     _UART2_Receive_ISR:
 35339                           	opt callstack 3
 35340                           
 35341                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35342                           
 35343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35344                           ;incstack = 0
 35345  01BEE0  0E00               	movlw	low _uart2RxBuffer
 35346  01BEE2  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35347  01BEE4  6ED9               	movwf	fsr2l,c
 35348  01BEE6  6ADA               	clrf	fsr2h,c
 35349  01BEE8  0E04               	movlw	high _uart2RxBuffer
 35350  01BEEA  22DA               	addwfc	fsr2h,f,c
 35351  01BEEC  006F F743 FFDF     	movff	15824,indf2	;volatile
 35352  01BEF2  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35353                           
 35354                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35355  01BEF4  2843               	incf	_uart2RxHead^0,w,c
 35356  01BEF6  B4D8               	btfsc	status,2,c
 35357                           
 35358                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35359  01BEF8  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35360                           
 35361                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35362  01BEFA  0100               	movlb	0	; () banked
 35363  01BEFC  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35364                           
 35365                           ; BSR set to: 0
 35366                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35367  01BEFE  0012               	return		;funcret
 35368  01BF00                     __end_of_UART2_Receive_ISR:
 35369                           	opt callstack 0
 35370                           
 35371 ;; *************** function _TMR6_ISR *****************
 35372 ;; Defined at:
 35373 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35374 ;; Parameters:    Size  Location     Type
 35375 ;;		None
 35376 ;; Auto vars:     Size  Location     Type
 35377 ;;		None
 35378 ;; Return value:  Size  Location     Type
 35379 ;;                  1    wreg      void 
 35380 ;; Registers used:
 35381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35382 ;; Tracked objects:
 35383 ;;		On entry : 0/0
 35384 ;;		On exit  : 0/0
 35385 ;;		Unchanged: 0/0
 35386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35391 ;;Total ram usage:        1 bytes
 35392 ;; Hardware stack levels used:    1
 35393 ;; Hardware stack levels required when called:    2
 35394 ;; This function calls:
 35395 ;;		_TMR6_CallBack
 35396 ;; This function is called by:
 35397 ;;		Interrupt level 2
 35398 ;; This function uses a non-reentrant model
 35399 ;;
 35400                           
 35401                           	psect	text172
 35402  01BFCC                     __ptext172:
 35403                           	opt callstack 0
 35404  01BFCC                     _TMR6_ISR:
 35405                           	opt callstack 2
 35406                           
 35407                           ; BSR set to: 0
 35408                           ;incstack = 0
 35409  01BFCC  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35410  01BFD2  EE14  F15E         	lfsr	1,___inthi_sp
 35411                           
 35412                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35413  01BFD6  0139               	movlb	57	; () banked
 35414  01BFD8  91A9               	bcf	169,0,b	;volatile
 35415                           
 35416                           ; BSR set to: 57
 35417                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35418  01BFDA  EC2C  F0DF         	call	_TMR6_CallBack	;wreg free
 35419  01BFDE  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35420  01BFE4  0011               	retfie		f
 35421  01BFE6                     __end_of_TMR6_ISR:
 35422                           	opt callstack 0
 35423                           
 35424 ;; *************** function _TMR6_CallBack *****************
 35425 ;; Defined at:
 35426 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35427 ;; Parameters:    Size  Location     Type
 35428 ;;		None
 35429 ;; Auto vars:     Size  Location     Type
 35430 ;;		None
 35431 ;; Return value:  Size  Location     Type
 35432 ;;                  1  [STACK] void 
 35433 ;; Registers used:
 35434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35435 ;; Tracked objects:
 35436 ;;		On entry : 3F/39
 35437 ;;		On exit  : 0/0
 35438 ;;		Unchanged: 0/0
 35439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35444 ;;Total ram usage:        0 bytes
 35445 ;; Hardware stack levels used:    1
 35446 ;; Hardware stack levels required when called:    1
 35447 ;; This function calls:
 35448 ;;		Absolute function
 35449 ;;		_TMR6_DefaultInterruptHandler
 35450 ;; This function is called by:
 35451 ;;		_TMR6_ISR
 35452 ;; This function uses a reentrant model
 35453 ;;
 35454                           
 35455                           	psect	text173
 35456  01BE58                     __ptext173:
 35457                           	opt callstack 0
 35458  01BE58                     _TMR6_CallBack:
 35459                           	opt callstack 2
 35460                           
 35461                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35462                           
 35463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35464                           ;incstack = 0
 35465  01BE58  0100               	movlb	0	; () banked
 35466  01BE5A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35467  01BE5C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35468  01BE5E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35469  01BE60  B4D8               	btfsc	status,2,c
 35470  01BE62  0012               	return	
 35471                           
 35472                           ; BSR set to: 0
 35473                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35474  01BE64  D801               	call	u1005_48
 35475  01BE66  0012               	return	
 35476  01BE68                     u1005_48:
 35477  01BE68  0005               	push	
 35478  01BE6A  6EFA               	movwf	pclath,c
 35479  01BE6C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35480  01BE6E  6EFD               	movwf	tosl,c
 35481  01BE70  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35482  01BE72  6EFE               	movwf	tosh,c
 35483  01BE74  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35484  01BE76  6EFF               	movwf	tosu,c
 35485  01BE78  50FA               	movf	pclath,w,c
 35486  01BE7A  0012               	return		;indir
 35487  01BE7C                     __end_of_TMR6_CallBack:
 35488                           	opt callstack 0
 35489                           
 35490 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35491 ;; Defined at:
 35492 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35493 ;; Parameters:    Size  Location     Type
 35494 ;;		None
 35495 ;; Auto vars:     Size  Location     Type
 35496 ;;  i               1  [STACK] unsigned char 
 35497 ;; Return value:  Size  Location     Type
 35498 ;;                  1  [STACK] void 
 35499 ;; Registers used:
 35500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35501 ;; Tracked objects:
 35502 ;;		On entry : 3F/0
 35503 ;;		On exit  : 0/0
 35504 ;;		Unchanged: 0/0
 35505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35510 ;;Total ram usage:        0 bytes
 35511 ;; Hardware stack levels used:    1
 35512 ;; This function calls:
 35513 ;;		Nothing
 35514 ;; This function is called by:
 35515 ;;		_TMR6_Initialize
 35516 ;;		_TMR6_CallBack
 35517 ;; This function uses a reentrant model
 35518 ;;
 35519                           
 35520                           	psect	text174
 35521  01B36E                     __ptext174:
 35522                           	opt callstack 0
 35523  01B36E                     _TMR6_DefaultInterruptHandler:
 35524                           	opt callstack 0
 35525                           
 35526                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35527  01B36E  52E6               	movf	postinc1,f,c
 35528                           
 35529                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35530                           ;stkvar	_i @ sp[(-1)+0]
 35531                           
 35532                           ;incstack = 0
 35533  01B370  0EFF               	movlw	-1
 35534  01B372  6AE3               	clrf	plusw1,c
 35535  01B374                     l10346:
 35536                           
 35537                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35538                           ;stkvar	_i @ sp[(-1)+0]
 35539  01B374  0EFF               	movlw	-1
 35540  01B376  50E3               	movf	plusw1,w,c
 35541  01B378  0D02               	mullw	2
 35542  01B37A  0E7D               	movlw	low _tickCount
 35543  01B37C  24F3               	addwf	243,w,c
 35544  01B37E  6ED9               	movwf	fsr2l,c
 35545  01B380  0E02               	movlw	high _tickCount
 35546  01B382  20F4               	addwfc	prodh,w,c
 35547  01B384  6EDA               	movwf	fsr2h,c
 35548  01B386  50DE               	movf	postinc2,w,c
 35549  01B388  10DE               	iorwf	postinc2,w,c
 35550  01B38A  B4D8               	btfsc	status,2,c
 35551  01B38C  D00C               	goto	l10350
 35552                           
 35553                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35554                           ;stkvar	_i @ sp[(-1)+0]
 35555  01B38E  0EFF               	movlw	-1
 35556  01B390  50E3               	movf	plusw1,w,c
 35557  01B392  0D02               	mullw	2
 35558  01B394  0E7D               	movlw	low _tickCount
 35559  01B396  24F3               	addwf	243,w,c
 35560  01B398  6ED9               	movwf	fsr2l,c
 35561  01B39A  0E02               	movlw	high _tickCount
 35562  01B39C  20F4               	addwfc	prodh,w,c
 35563  01B39E  6EDA               	movwf	fsr2h,c
 35564  01B3A0  06DE               	decf	postinc2,f,c
 35565  01B3A2  0E00               	movlw	0
 35566  01B3A4  5ADD               	subwfb	postdec2,f,c
 35567  01B3A6                     l10350:
 35568                           
 35569                           ;mcc_generated_files/tmr6.c: 207:  }
 35570                           ;stkvar	_i @ sp[(-1)+0]
 35571  01B3A6  0EFF               	movlw	-1
 35572  01B3A8  2AE3               	incf	plusw1,f,c
 35573                           
 35574                           ;stkvar	_i @ sp[(-1)+0]
 35575  01B3AA  0EFF               	movlw	-1
 35576  01B3AC  006F FF8C  F001    	movff	plusw1,btemp
 35577  01B3B2  0E0C               	movlw	12
 35578  01B3B4  6401               	cpfsgt	btemp^0,c
 35579  01B3B6  D7DE               	goto	l10346
 35580                           
 35581                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35582  01B3B8  52E5               	movf	postdec1,f,c
 35583  01B3BA  0012               	return		;funcret
 35584  01B3BC                     __end_of_TMR6_DefaultInterruptHandler:
 35585                           	opt callstack 0
 35586                           
 35587 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35588 ;; Defined at:
 35589 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35590 ;; Parameters:    Size  Location     Type
 35591 ;;		None
 35592 ;; Auto vars:     Size  Location     Type
 35593 ;;		None
 35594 ;; Return value:  Size  Location     Type
 35595 ;;                  1    wreg      void 
 35596 ;; Registers used:
 35597 ;;		None
 35598 ;; Tracked objects:
 35599 ;;		On entry : 0/0
 35600 ;;		On exit  : 3F/0
 35601 ;;		Unchanged: 0/0
 35602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35607 ;;Total ram usage:        0 bytes
 35608 ;; Hardware stack levels used:    1
 35609 ;; This function calls:
 35610 ;;		Nothing
 35611 ;; This function is called by:
 35612 ;;		Interrupt level 2
 35613 ;; This function uses a non-reentrant model
 35614 ;;
 35615                           
 35616                           	psect	text175
 35617  01C108                     __ptext175:
 35618                           	opt callstack 0
 35619  01C108                     _DMA1_DMASCNT_ISR:
 35620                           	opt callstack 4
 35621                           
 35622                           ;incstack = 0
 35623  01C108  EE14  F15E         	lfsr	1,___inthi_sp
 35624                           
 35625                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35626  01C10C  0139               	movlb	57	; () banked
 35627  01C10E  91A2               	bcf	162,0,b	;volatile
 35628                           
 35629                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35630  01C110  0100               	movlb	0	; () banked
 35631  01C112  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35632                           
 35633                           ; BSR set to: 0
 35634  01C114  0011               	retfie		f
 35635  01C116                     __end_of_DMA1_DMASCNT_ISR:
 35636                           	opt callstack 0
 35637                           
 35638 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35639 ;; Defined at:
 35640 ;;		line 133 in file "mcc_generated_files/dma1.c"
 35641 ;; Parameters:    Size  Location     Type
 35642 ;;		None
 35643 ;; Auto vars:     Size  Location     Type
 35644 ;;		None
 35645 ;; Return value:  Size  Location     Type
 35646 ;;                  1    wreg      void 
 35647 ;; Registers used:
 35648 ;;		None
 35649 ;; Tracked objects:
 35650 ;;		On entry : 0/0
 35651 ;;		On exit  : 3F/39
 35652 ;;		Unchanged: 0/0
 35653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35658 ;;Total ram usage:        0 bytes
 35659 ;; Hardware stack levels used:    1
 35660 ;; This function calls:
 35661 ;;		Nothing
 35662 ;; This function is called by:
 35663 ;;		Interrupt level 2
 35664 ;; This function uses a non-reentrant model
 35665 ;;
 35666                           
 35667                           	psect	text176
 35668  01C12C                     __ptext176:
 35669                           	opt callstack 0
 35670  01C12C                     _DMA1_DMADCNT_ISR:
 35671                           	opt callstack 4
 35672                           
 35673                           ; BSR set to: 0
 35674                           ;incstack = 0
 35675  01C12C  EE14  F15E         	lfsr	1,___inthi_sp
 35676                           
 35677                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 35678  01C130  0139               	movlb	57	; () banked
 35679  01C132  93A2               	bcf	162,1,b	;volatile
 35680                           
 35681                           ; BSR set to: 57
 35682  01C134  0011               	retfie		f
 35683  01C136                     __end_of_DMA1_DMADCNT_ISR:
 35684                           	opt callstack 0
 35685                           
 35686 ;; *************** function _DMA1_DMAA_ISR *****************
 35687 ;; Defined at:
 35688 ;;		line 143 in file "mcc_generated_files/dma1.c"
 35689 ;; Parameters:    Size  Location     Type
 35690 ;;		None
 35691 ;; Auto vars:     Size  Location     Type
 35692 ;;		None
 35693 ;; Return value:  Size  Location     Type
 35694 ;;                  1    wreg      void 
 35695 ;; Registers used:
 35696 ;;		None
 35697 ;; Tracked objects:
 35698 ;;		On entry : 0/0
 35699 ;;		On exit  : 3F/39
 35700 ;;		Unchanged: 0/0
 35701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35706 ;;Total ram usage:        0 bytes
 35707 ;; Hardware stack levels used:    1
 35708 ;; This function calls:
 35709 ;;		Nothing
 35710 ;; This function is called by:
 35711 ;;		Interrupt level 2
 35712 ;; This function uses a non-reentrant model
 35713 ;;
 35714                           
 35715                           	psect	text177
 35716  01C138                     __ptext177:
 35717                           	opt callstack 0
 35718  01C138                     _DMA1_DMAA_ISR:
 35719                           	opt callstack 4
 35720                           
 35721                           ; BSR set to: 57
 35722                           ;incstack = 0
 35723  01C138  EE14  F15E         	lfsr	1,___inthi_sp
 35724                           
 35725                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 35726  01C13C  0139               	movlb	57	; () banked
 35727  01C13E  97A2               	bcf	162,3,b	;volatile
 35728                           
 35729                           ; BSR set to: 57
 35730  01C140  0011               	retfie		f
 35731  01C142                     __end_of_DMA1_DMAA_ISR:
 35732                           	opt callstack 0
 35733                           
 35734 ;; *************** function _DMA1_DMAOR_ISR *****************
 35735 ;; Defined at:
 35736 ;;		line 154 in file "mcc_generated_files/dma1.c"
 35737 ;; Parameters:    Size  Location     Type
 35738 ;;		None
 35739 ;; Auto vars:     Size  Location     Type
 35740 ;;		None
 35741 ;; Return value:  Size  Location     Type
 35742 ;;                  1    wreg      void 
 35743 ;; Registers used:
 35744 ;;		None
 35745 ;; Tracked objects:
 35746 ;;		On entry : 0/0
 35747 ;;		On exit  : 3F/39
 35748 ;;		Unchanged: 0/0
 35749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35754 ;;Total ram usage:        0 bytes
 35755 ;; Hardware stack levels used:    1
 35756 ;; This function calls:
 35757 ;;		Nothing
 35758 ;; This function is called by:
 35759 ;;		Interrupt level 2
 35760 ;; This function uses a non-reentrant model
 35761 ;;
 35762                           
 35763                           	psect	text178
 35764  01C144                     __ptext178:
 35765                           	opt callstack 0
 35766  01C144                     _DMA1_DMAOR_ISR:
 35767                           	opt callstack 4
 35768                           
 35769                           ; BSR set to: 57
 35770                           ;incstack = 0
 35771  01C144  EE14  F15E         	lfsr	1,___inthi_sp
 35772                           
 35773                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 35774  01C148  0139               	movlb	57	; () banked
 35775  01C14A  95A2               	bcf	162,2,b	;volatile
 35776                           
 35777                           ; BSR set to: 57
 35778  01C14C  0011               	retfie		f
 35779  01C14E                     __end_of_DMA1_DMAOR_ISR:
 35780                           	opt callstack 0
 35781                           
 35782                           ;
 35783                           ; Interrupt Vector Table @ 0x8
 35784                           ;
 35785                           
 35786                           	psect	ivt0x8
 35787  000008                     __pivt0x8:
 35788                           	opt callstack 0
 35789  000008                     ivt0x8_base:
 35790                           	opt callstack 0
 35791                           
 35792                           ; Vector 0 : SWINT
 35793  000008  7064               	dw	_Default_ISR shr (0+2)
 35794                           
 35795                           ; Vector 1 : HLVD
 35796  00000A  7064               	dw	_Default_ISR shr (0+2)
 35797                           
 35798                           ; Vector 2 : OSF
 35799  00000C  7064               	dw	_Default_ISR shr (0+2)
 35800                           
 35801                           ; Vector 3 : CSW
 35802  00000E  7064               	dw	_Default_ISR shr (0+2)
 35803                           
 35804                           ; Vector 4 : NVM
 35805  000010  7064               	dw	_Default_ISR shr (0+2)
 35806                           
 35807                           ; Vector 5 : SCAN
 35808  000012  7064               	dw	_Default_ISR shr (0+2)
 35809                           
 35810                           ; Vector 6 : CRC
 35811  000014  7064               	dw	_Default_ISR shr (0+2)
 35812                           
 35813                           ; Vector 7 : IOC
 35814  000016  7064               	dw	_Default_ISR shr (0+2)
 35815                           
 35816                           ; Vector 8 : INT0
 35817  000018  703E               	dw	_INT0_ISR shr (0+2)
 35818                           
 35819                           ; Vector 9 : ZCD
 35820  00001A  7064               	dw	_Default_ISR shr (0+2)
 35821                           
 35822                           ; Vector 10 : AD
 35823  00001C  6EA9               	dw	_ADCC_ISR shr (0+2)
 35824                           
 35825                           ; Vector 11 : ADT
 35826  00001E  6BD9               	dw	_ADCC_ThresholdISR shr (0+2)
 35827                           
 35828                           ; Vector 12 : CMP1
 35829  000020  7064               	dw	_Default_ISR shr (0+2)
 35830                           
 35831                           ; Vector 13 : SMT1
 35832  000022  7064               	dw	_Default_ISR shr (0+2)
 35833                           
 35834                           ; Vector 14 : SMT1PRA
 35835  000024  7064               	dw	_Default_ISR shr (0+2)
 35836                           
 35837                           ; Vector 15 : SMT1PRW
 35838  000026  7064               	dw	_Default_ISR shr (0+2)
 35839                           
 35840                           ; Vector 16 : DMA1SCNT
 35841  000028  7042               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35842                           
 35843                           ; Vector 17 : DMA1DCNT
 35844  00002A  704B               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35845                           
 35846                           ; Vector 18 : DMA1OR
 35847  00002C  7051               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35848                           
 35849                           ; Vector 19 : DMA1A
 35850  00002E  704E               	dw	_DMA1_DMAA_ISR shr (0+2)
 35851                           
 35852                           ; Vector 20 : SPI1RX
 35853  000030  7064               	dw	_Default_ISR shr (0+2)
 35854                           
 35855                           ; Vector 21 : SPI1TX
 35856  000032  7064               	dw	_Default_ISR shr (0+2)
 35857                           
 35858                           ; Vector 22 : SPI1
 35859  000034  7064               	dw	_Default_ISR shr (0+2)
 35860                           
 35861                           ; Vector 23 : I2C1RX
 35862  000036  7064               	dw	_Default_ISR shr (0+2)
 35863                           
 35864                           ; Vector 24 : I2C1TX
 35865  000038  7064               	dw	_Default_ISR shr (0+2)
 35866                           
 35867                           ; Vector 25 : I2C1
 35868  00003A  7064               	dw	_Default_ISR shr (0+2)
 35869                           
 35870                           ; Vector 26 : I2C1E
 35871  00003C  7064               	dw	_Default_ISR shr (0+2)
 35872                           
 35873                           ; Vector 27 : U1RX
 35874  00003E  6F42               	dw	_UART1_rx_vect_isr shr (0+2)
 35875                           
 35876                           ; Vector 28 : U1TX
 35877  000040  7064               	dw	_Default_ISR shr (0+2)
 35878                           
 35879                           ; Vector 29 : U1E
 35880  000042  7064               	dw	_Default_ISR shr (0+2)
 35881                           
 35882                           ; Vector 30 : U1
 35883  000044  7064               	dw	_Default_ISR shr (0+2)
 35884                           
 35885                           ; Vector 31 : TMR0
 35886  000046  7064               	dw	_Default_ISR shr (0+2)
 35887                           
 35888                           ; Vector 32 : TMR1
 35889  000048  7064               	dw	_Default_ISR shr (0+2)
 35890                           
 35891                           ; Vector 33 : TMR1G
 35892  00004A  7064               	dw	_Default_ISR shr (0+2)
 35893                           
 35894                           ; Vector 34 : TMR2
 35895  00004C  7064               	dw	_Default_ISR shr (0+2)
 35896                           
 35897                           ; Vector 35 : CCP1
 35898  00004E  7064               	dw	_Default_ISR shr (0+2)
 35899                           
 35900                           ; Vector 36 : Undefined
 35901  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35902                           
 35903                           ; Vector 37 : NCO1
 35904  000052  7064               	dw	_Default_ISR shr (0+2)
 35905                           
 35906                           ; Vector 38 : CWG1
 35907  000054  7064               	dw	_Default_ISR shr (0+2)
 35908                           
 35909                           ; Vector 39 : CLC1
 35910  000056  7064               	dw	_Default_ISR shr (0+2)
 35911                           
 35912                           ; Vector 40 : INT1
 35913  000058  6E01               	dw	_INT1_ISR shr (0+2)
 35914                           
 35915                           ; Vector 41 : CMP2
 35916  00005A  7064               	dw	_Default_ISR shr (0+2)
 35917                           
 35918                           ; Vector 42 : DMA2SCNT
 35919  00005C  7064               	dw	_Default_ISR shr (0+2)
 35920                           
 35921                           ; Vector 43 : DMA2DCNT
 35922  00005E  7064               	dw	_Default_ISR shr (0+2)
 35923                           
 35924                           ; Vector 44 : DMA2OR
 35925  000060  7064               	dw	_Default_ISR shr (0+2)
 35926                           
 35927                           ; Vector 45 : DMA2A
 35928  000062  7064               	dw	_Default_ISR shr (0+2)
 35929                           
 35930                           ; Vector 46 : I2C2RX
 35931  000064  7064               	dw	_Default_ISR shr (0+2)
 35932                           
 35933                           ; Vector 47 : I2C2TX
 35934  000066  7064               	dw	_Default_ISR shr (0+2)
 35935                           
 35936                           ; Vector 48 : I2C2
 35937  000068  7064               	dw	_Default_ISR shr (0+2)
 35938                           
 35939                           ; Vector 49 : I2C2E
 35940  00006A  7064               	dw	_Default_ISR shr (0+2)
 35941                           
 35942                           ; Vector 50 : U2RX
 35943  00006C  6F56               	dw	_UART2_rx_vect_isr shr (0+2)
 35944                           
 35945                           ; Vector 51 : U2TX
 35946  00006E  6F4C               	dw	_UART2_tx_vect_isr shr (0+2)
 35947                           
 35948                           ; Vector 52 : U2E
 35949  000070  7064               	dw	_Default_ISR shr (0+2)
 35950                           
 35951                           ; Vector 53 : U2
 35952  000072  7064               	dw	_Default_ISR shr (0+2)
 35953                           
 35954                           ; Vector 54 : TMR3
 35955  000074  6446               	dw	_TMR3_ISR shr (0+2)
 35956                           
 35957                           ; Vector 55 : TMR3G
 35958  000076  7064               	dw	_Default_ISR shr (0+2)
 35959                           
 35960                           ; Vector 56 : TMR4
 35961  000078  7064               	dw	_Default_ISR shr (0+2)
 35962                           
 35963                           ; Vector 57 : CCP2
 35964  00007A  7064               	dw	_Default_ISR shr (0+2)
 35965                           
 35966                           ; Vector 58 : Undefined
 35967  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35968                           
 35969                           ; Vector 59 : CWG2
 35970  00007E  7064               	dw	_Default_ISR shr (0+2)
 35971                           
 35972                           ; Vector 60 : CLC2
 35973  000080  7064               	dw	_Default_ISR shr (0+2)
 35974                           
 35975                           ; Vector 61 : INT2
 35976  000082  7064               	dw	_Default_ISR shr (0+2)
 35977                           
 35978                           ; Vector 62 : Undefined
 35979  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35980                           
 35981                           ; Vector 63 : Undefined
 35982  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35983                           
 35984                           ; Vector 64 : Undefined
 35985  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35986                           
 35987                           ; Vector 65 : Undefined
 35988  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35989                           
 35990                           ; Vector 66 : Undefined
 35991  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35992                           
 35993                           ; Vector 67 : Undefined
 35994  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35995                           
 35996                           ; Vector 68 : Undefined
 35997  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35998                           
 35999                           ; Vector 69 : Undefined
 36000  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36001                           
 36002                           ; Vector 70 : TMR5
 36003  000094  6870               	dw	_TMR5_ISR shr (0+2)
 36004                           
 36005                           ; Vector 71 : TMR5G
 36006  000096  7064               	dw	_Default_ISR shr (0+2)
 36007                           
 36008                           ; Vector 72 : TMR6
 36009  000098  6FF3               	dw	_TMR6_ISR shr (0+2)
 36010                           
 36011                           ; Vector 73 : CCP3
 36012  00009A  7064               	dw	_Default_ISR shr (0+2)
 36013                           
 36014                           ; Vector 74 : CWG3
 36015  00009C  7064               	dw	_Default_ISR shr (0+2)
 36016                           
 36017                           ; Vector 75 : CLC3
 36018  00009E  7064               	dw	_Default_ISR shr (0+2)
 36019                           
 36020                           ; Vector 76 : Undefined
 36021  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36022                           
 36023                           ; Vector 77 : Undefined
 36024  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36025                           
 36026                           ; Vector 78 : Undefined
 36027  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36028                           
 36029                           ; Vector 79 : Undefined
 36030  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36031                           
 36032                           ; Vector 80 : CCP4
 36033  0000A8  7064               	dw	_Default_ISR shr (0+2)
 36034                           
 36035                           ; Vector 81 : CLC4
 36036  0000AA  7064               	dw	_Default_ISR shr (0+2)
 36037  0000AC                     ivt0x8_undefint:
 36038                           	opt callstack 0
 36039  0000AC  00FF               	reset	
 36040                           
 36041                           	psect	text179
 36042  000000                     __ptext179:
 36043                           	opt callstack 0
 36044                           
 36045                           	psect	rparam
 36046  0000                     
 36047                           	psect	temp
 36048  000001                     btemp:
 36049                           	opt callstack 0
 36050  000001                     	ds	32
 36051  0000                     wtemp0	set	btemp
 36052  0000                     wtemp1	set	btemp+2
 36053  0000                     wtemp2	set	btemp+4
 36054  0000                     wtemp3	set	btemp+6
 36055  0000                     wtemp4	set	btemp+8
 36056  0000                     wtemp5	set	btemp+10
 36057  0000                     wtemp8	set	btemp+1
 36058  0000                     ttemp0	set	btemp
 36059  0000                     ttemp1	set	btemp+3
 36060  0000                     ttemp2	set	btemp+6
 36061  0000                     ttemp3	set	btemp+9
 36062  0000                     ttemp5	set	btemp+1
 36063  0000                     ttemp6	set	btemp+4
 36064  0000                     ttemp7	set	btemp+8
 36065  0000                     ltemp0	set	btemp
 36066  0000                     ltemp1	set	btemp+4
 36067  0000                     ltemp2	set	btemp+8
 36068  0000                     lltemp0	set	btemp
 36069  0000                     lltemp1	set	btemp+8
 36070  0000                     lltemp2	set	btemp+16
 36071  0000                     lltemp3	set	btemp+24
 36072                           tosu	equ	0x3FFF
 36073                           tosh	equ	0x3FFE
 36074                           tosl	equ	0x3FFD
 36075                           stkptr	equ	0x3FFC
 36076                           pclatu	equ	0x3FFB
 36077                           pclath	equ	0x3FFA
 36078                           pcl	equ	0x3FF9
 36079                           tblptru	equ	0x3FF8
 36080                           tblptrh	equ	0x3FF7
 36081                           tblptrl	equ	0x3FF6
 36082                           tablat	equ	0x3FF5
 36083                           prodh	equ	0x3FF4
 36084                           prodl	equ	0x3FF3
 36085                           indf0	equ	0x3FEF
 36086                           postinc0	equ	0x3FEE
 36087                           postdec0	equ	0x3FED
 36088                           preinc0	equ	0x3FEC
 36089                           plusw0	equ	0x3FEB
 36090                           fsr0h	equ	0x3FEA
 36091                           fsr0l	equ	0x3FE9
 36092                           wreg	equ	0x3FE8
 36093                           indf1	equ	0x3FE7
 36094                           postinc1	equ	0x3FE6
 36095                           postdec1	equ	0x3FE5
 36096                           preinc1	equ	0x3FE4
 36097                           plusw1	equ	0x3FE3
 36098                           fsr1h	equ	0x3FE2
 36099                           fsr1l	equ	0x3FE1
 36100                           bsr	equ	0x3FE0
 36101                           indf2	equ	0x3FDF
 36102                           postinc2	equ	0x3FDE
 36103                           postdec2	equ	0x3FDD
 36104                           preinc2	equ	0x3FDC
 36105                           plusw2	equ	0x3FDB
 36106                           fsr2h	equ	0x3FDA
 36107                           fsr2l	equ	0x3FD9
 36108                           status	equ	0x3FD8


Data Sizes:
    Strings     990
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6155_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4592tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  478362
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan  3 18:06:19 2020

                     _SPI1_Exchange8bit BF00                __end_of_set_display_info BF78  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FB05                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BC3E            __end_of_start_switch_handler BEE0  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC0D                  __end_of_FVR_Initialize C176  
                        _check_day_time 8806                             __CFG_LVP$ON 000000  
                                   l169 C052                                     l807 BF0E  
                                   l673 BAF6                                     _GIE 01FE97  
                                   _abs B570                                     _pad 9ACE  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BFFE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BE34  
                     _update_adc_result B842                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BDC8  
                          __CFG_ZCD$OFF 000000                                    l1002 B7BC  
                                  l2033 3A34                                    l1340 18FE  
                                  l1324 12A2                                    l2037 3D3A  
                                  l3013 456E                                    l1190 B7FC  
                                  l1350 19A0                                    l1342 1904  
                                  l2223 066A                                    l2312 60D2  
                                  l1360 1BA6                                    l1361 1DD0  
                                  l2138 9B2A                                    l3115 7B84  
                                  l1603 B904                         _timer3ReloadVal 00C4  
                                  l3053 8640                                    l2158 58A0  
                                  l2238 0B1A                                    l1366 2348  
                                  l2079 73D8                                    l2194 123A  
                                  l2362 332A                                    l1459 B220  
                                  l3084 B5B0                                    l3076 8B32  
                                  l2276 74C6                                    l1662 B898  
                                  l1719 BF74                                    l1671 82E6  
                                  l1832 87FC                                    l1584 A7C2  
                                  l3184 9892                                    l1672 8442  
                                  l2297 67F8                                    l3451 822A  
                                  l1588 AADC                                    l1781 57BC  
                                  l2654 A504                    _ADCC_StartConversion C06C  
                                  l1679 9CEE                                    l2665 910C  
                                  l2658 9038                                    l3466 AD8C  
                                  l1892 899C                                    l2932 4D2A  
                                  l2692 8FAA                                    l1958 AC02  
                                  l3479 AD08                                    l1967 9EFA  
                                  l1879 A0EC                                    l1896 8994  
                                  l2944 4BBA                                    l8000 B5A0  
                                  l8014 8AD0                                    l8200 4DCA  
                                  l8120 7750                                    l8024 8B2A  
                                  l2977 52A4                                    l8114 76FC  
                                  l8018 8AD4                                    l8042 AD7C  
                                  l8300 516A                                    l8220 4EA8  
                                  l8204 4DE0                                    l8214 4E68  
                                  l8206 4E10                                    l8126 7796  
                                  l8070 6684                                    l8320 5220  
                                  l8304 5170                                    l8232 4F2C  
                                  l8224 4EBE                                    l8080 678A  
                                  l8072 66D4                                    l8056 6566  
                                  l8314 51E4                                    l8226 4EEE  
                                  l8138 7868                                    l8332 5278  
                                  l8076 671C                                    l8350 3DA4  
                                  l8334 5288                                    l8326 5250  
                                  l8246 4F80                                    l8238 4F66  
                                  l8174 7F66                                    l8166 7EBA  
                                  l8158 7E32                                    l8360 3E1A  
                                  l8280 50DE                                    l8272 50AC  
                                  l8264 5046                                    l8256 5010  
                                  l9312 7934                                    l8512 929E  
                                  l8600 A502                                    l7802 4936  
                                  l7722 460E                                    l8290 5120  
                                  l8266 5058                                    l8274 50B0  
                                  l8194 4D8A                                    l9330 7A0E  
                                  l9322 79CA                                    l9314 7956  
                                  l8098 ACF8                                    l8444 437E  
                                  l8356 3DE4                                    l7804 4948  
                                  l7812 4982                                    l7740 46BE  
                                  l7716 45CE                                    l9332 7A32  
                                  l8524 92D4                                    l8462 43F4  
                                  l8438 4362                                    l8374 3EB2  
                                  l8358 3DEA                                    l7902 4C86  
                                  l7830 4A1E                                    l7750 4714  
                                  l7734 468C                                    l7726 4624  
                                  l8614 9086                                    l8286 50FA  
                                  l9334 7A70                                    l8518 92B4  
                                  l8472 4468                                    l8448 43A4  
                                  l8376 3EB8                                    l8368 3E72  
                                  l7912 4CB2                                    l7832 4A30  
                                  l7840 4A6C                                    l7808 4952  
                                  l7752 4744                                    l7728 4654  
                                  l8608 8FF6                                    l9328 79F6  
                                  l8490 451C                                    l8482 44D8  
                                  l8458 43EE                                    l8386 3F0A  
                                  l8378 3EE8                                    l7746 46FE  
                                  l8626 910A                                    l8618 90D4  
                                  l9338 7AD8                                    l7690 A960  
                                  l8546 93AE                                    l8538 937A  
                                  l8562 99E8                                    l8634 B46E  
                                  l8492 4536                                    l8476 44AE  
                                  l7924 4D0A                                    l7916 4CCA  
                                  l7852 4B44                                    l7836 4A3A  
                                  l8732 B30C                                    l9348 7B74  
                                  l8660 8F16                                    l8644 8E94  
                                  l9364 809C                                    l8716 95F0  
                                  l8708 9544                                    l7918 4CDA  
                                  l7870 4BDC                                    l7862 4B9E  
                                  l7854 4B6A                                    l7758 4766  
                                  l9630 84FC                                    l9622 8490  
                                  l9702 5572                                    l8566 9A00  
                                  l8558 99D6                                    l8670 8F58  
                                  l8662 8F32                                    l9366 8108  
                                  l7872 4BEE                                    l9632 850A  
                                  l9720 578A                                    l7688 A93E  
                                  l8584 9AB4                                    l8576 9A80  
                                  l8592 A48C                                    l7890 4C28  
                                  l9642 856C                                    l9634 8520  
                                  l9714 56EE                                    l9706 560E  
                                  l7876 4BFA                                    l7788 48A4  
                                  l9644 858A                                    l9636 853E  
                                  l8596 A4CE                                    l8668 8F42  
                                  l8684 8D10                                    l7886 4C22  
                                  l7798 4916                                    l9654 85BE  
                                  l9646 85A0                                    l9664 8620  
                                  l9680 52E0                                    l9728 579C  
                                  l8696 8DE2                                    l9834 88D0  
                                  l9690 5432                                    l9674 52B0  
                                  l9746 BB6E                                    l9922 BA8A  
                                  l9846 8942                                    l9694 5540  
                                  STR_1 FDC0                                    l9864 B90E  
                                  STR_2 FDAB                                    STR_3 FFD2  
                                  STR_4 FD6C                                    STR_5 FD42  
                                  l9956 B348                                    STR_6 FD42  
                                  STR_7 FD42                                    STR_8 FD57  
                                  STR_9 FCCE                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 B584                                    u6010 8A54  
                                  u6100 AD3A                                    u6110 AD3C  
                                  u6015 8A4A                                    u6200 6702  
                                  u6130 64FE                                    _T6PR 003F93  
                                  u5420 A98E                                    u7020 9300  
                                  u6060 8B22                                    u6140 654A  
                                  _PMD0 0039C0                                    u6205 66F8  
                                  _PMD1 0039C1                                    u6310 76F6  
                                  u7110 9AA0                                    u6070 8B24  
                                  u6230 B634                                    _PMD2 0039C2  
                                  u6055 8B04                                    u6135 64F4  
                                  _PMD3 0039C3                                    u6400 78F2  
                                  u7040 939A                                    u6240 B636  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5610 497A                                    u6330 774C  
                                  u7210 B46A                                    u5450 BA0E  
                                  u6250 ACB6                                    _PMD6 0039C6  
                                  u5427 A980                                    _PMD7 0039C7  
                                  u5620 499A                                    u7220 8E74  
                                  u6180 662A                                    u5460 BA10  
                                  u6260 ACB8                                    u6341 7756  
                                  u6165 6584                                    u6350 7790  
                                  u6510 7FF0                                    u6430 7E2C  
                                  u7150 A4FE                                    u7310 8F8A  
                                  u7230 8E88                                    u6166 658A  
                                  u5615 496A                                    u6167 6598  
                                  u5720 4B8C                                    u5560 48CA  
                                  u6280 BA3E                                    u6360 77C2  
                                  u7240 8EC2                                    u7225 8E6A  
                                  u6185 6620                                    u7321 8CD0  
                                  u5570 48EA                                    u6290 BA40  
                                  u6450 7E82                                    u7090 9A2C  
                                  u7330 8D0A                                    u7410 9628  
                                  u5571 48E4                                    u5820 4C76  
                                  u6380 78A0                                    u6460 7EB4  
                                  u7340 8D3C                                    u5900 B9E0  
                                  u7245 8EB8                                    u7430 B2E8  
                                  u6470 7EE6                                    u5760 4C00  
                                  u5680 4A62                                    u9200 5652  
                                  u7440 B308                                    u7360 8E1A  
                                  u5825 4C66                                    u5850 4C96  
                                  u6730 51BE                                    u6650 50D8  
                                  u9050 85B4                                    u9114 52FA  
                                  u6490 7F9E                                    u7290 8F60  
                                  u9115 52F4                                    u5780 4C1A  
                                  u5588 48EC                                    u6740 51F8  
                                  u7380 953E                                    u5685 4A52  
                                  u6910 43E6                                    u6750 5234  
                                  u9134 531C                                    u7390 9570  
                                  u6735 51AE                                    u9135 5316  
                                  u6840 3EF8                                    u6690 5162  
                                  u9154 555A                                    u8610 8136  
                                  u5890 B9DE                                    u9155 5554  
                                  u8540 79C6                                    u9430 AFDC  
                                  u6950 4442                                    u9174 5628  
                                  u9094 52CA                                    u6855 408C  
                                  u9175 5622                                    u9095 52C4  
                                  u6960 447C                                    u8560 7B1E  
                                  u6865 4154                                    u8617 8128  
                                  u9505 C098                                    u6970 44C2  
                                  u9194 564A                                    u8570 7B20  
                                  u8650 81D0                                    u9506 C09A  
                                  u6955 4432                                    u6875 431C  
                                  u9195 5644                                    u9515 C088  
                                  u8660 81FE                                    u9516 C08A  
                                  u9550 8660                                    u9455 B010  
                                  u9375 B670                                    u8655 81CA  
                                  u9456 B012                                    u9448 AFDE  
                                  u9640 BEAA                                    u8657 81BC  
                                  _PLLR 01CEE0                                    u8667 81F0  
                                  u9646 BEAC                                    u9750 ABA8  
                                  u9780 ABEE                                    u9768 ABAA  
                                  u9798 ABF0                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BAD0  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FC1D                                    _cp_l FC19  
                                  _atoi 791A                                    _ctoa AC06  
                                  _main 1244                                    _dtoa 57C2  
                                  _nanf B0FA                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FB95                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 73DC                                    btemp 0001  
                                  _utoa 67B4                                    _xtoa 608E  
                __end_of_check_adc_scan C15E                           ___fpclassifyf 89A6  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BF1E               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B528             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BD08                            ___param_bank 000000  
                __end_of_check_day_time 89A6                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C106                        __end_of_INT1_ISR B842  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A7CA  
         __end_of_OSCILLATOR_Initialize C058                                   l10410 8682  
                                 l11042 6080                                   l12010 00F0  
                                 l11060 9E64                                   l10350 B3A6  
                                 l10422 86C2                                   l12030 0216  
                                 l10502 B862                                   l11070 9ED4  
                                 l12200 0D24                                   l12104 05F6  
                                 l12032 022C                                   l11048 9E08  
                                 l10346 B374                                   l11154 ADDE  
                                 l10530 93E0                                   l10418 86AE  
                                 l12122 06B8                                   l12106 0602  
                                 l12018 0146                                   l11148 ADCE  
                                 l10532 93F0                                   l10460 B8AE  
                                 l12132 077A                                   l12028 01EA  
                                 l12036 0258                                   l12300 7448  
                                 l10550 9476                                   l10534 93F6  
                                 l10542 9412                                   l12142 0926  
                                 l12126 06F0                                   l12062 0396  
                                 l12046 02FC                                   l12054 032A  
                                 l10536 93FC                                   l10544 943E  
                                 l11088 B77A                                   l12208 0D90  
                                 l12216 0EA2                                   l12072 04D2  
                                 l12320 7538                                   l10722 BF90  
                                 l10538 940A                                   l12242 0FD6  
                                 l12090 058E                                   l12066 0406  
                                 l12330 75F2                                   l10570 ABBC  
                                 l13042 12AA                                   l12244 0FF0  
                                 l12228 0F3A                                   l12180 0C32  
                                 l12164 0B12                                   l12156 0A48  
                                 l12084 0554                                   l12068 0470  
                                 l12324 7568                                   l12316 74FC  
                                 l12412 6198                                   l12404 6138  
                                 l13140 16D6                                   l13044 12BC  
                                 l13036 1284                                   l10734 BAF2  
                                 l10558 94F0                                   l12254 1092  
                                 l12166 0B34                                   l12334 761E  
                                 l10662 997C                                   l13222 2054  
                                 l13206 1AB2                                   l13038 128C  
                                 l10760 B7A4                                   l12280 119A  
                                 l12264 10E2                                   l12192 0CBA  
                                 l12096 0594                                   l12088 057C  
                                 l12360 6844                                   l12352 67E8  
                                 l12512 25EC                                   l13232 21D0  
                                 l13152 17B0                                   l11810 97A8  
                                 l12338 765A                                   l12370 6A3A  
                                 l12514 2626                                   l10914 7126  
                                 l10658 98D8                                   l13218 1FF2  
                                 l13234 21FC                                   l13162 1908  
                                 l12452 63FE                                   l12428 628E  
                                 l12436 6314                                   l12532 27A0  
                                 l12516 263C                                   l10940 71C8  
                                 l10924 716A                                   l10916 7136  
                                 l13252 2272                                   l13164 1936  
                                 PRLOCK 0039EF                                   l11822 A9CA  
                                 l12550 2924                                   l12542 2838  
                                 l12710 A6A0                                   l10934 71A0  
                                 l10918 713A                                   l13270 22DA  
                                 l13262 22B0                                   l13094 146E  
                                 l11912 AC24                                   l12392 60C2  
                                 l12608 2DCC                                   l12712 A6E2  
                                 l10960 7248                                   l10952 7222  
                                 l10944 71D4                                   l10928 7176  
                                 l13280 231E                                   l13248 224E  
                                 l13184 1990                                   l13176 196A  
                                 l10778 B7E4                                   l11826 AA08  
                                 l11914 AC50                                   l12642 3120  
                                 l12618 2EEE                                   l12554 2978  
                                 l12490 246A                                   l11842 6EB8  
                                 l13290 2374                                   l13194 19B2  
                                 l12628 2FA4                                   l12492 24A4  
                                 l12740 A7EE                                   l10892 A1AE  
                                 l13276 22F8                                   l13268 22C2  
                                 l12822 34DE                                   l12814 341E  
                                 l10878 8C9C                                   l11950 58F8  
                                 l12398 60FC                                   l12662 32B2  
                                 l12574 2B8A                                   l12566 2AD2  
                                 l12494 24BA                                   l11862 708E  
                                 l11854 6FE0                                   l12734 A7CE  
                                 l10982 73A0                                   l10886 A108  
                                 l12832 3630                                   l11880 9B34  
                                 l11960 5B0A                                   l12656 3258  
                                 l12672 32D6                                   l11848 6F76  
                                 l12736 A7D6                                   l10984 73C8  
                                 l12842 385C                                   l12826 354A  
                                 l12818 3472                                   l11874 9AFA  
                                 l11946 58DA                                   l11938 5890  
                                 l12666 32B6                                   l12578 2BBE  
                                 l12690 A8CA                                   l12738 A7E0  
                                 l12746 A7F6                                   l12770 9C06  
                                 l10994 A514                                   l12860 3A66  
                                 l12852 399C                                   l12836 3684  
                                 l11884 9B70                                   l11980 5BBC  
                                 l12748 A822                                   l12846 38D6  
                                 l11878 9B22                                   l11894 A3BE  
                                 l12598 2D1E                                   l10998 A552  
                                 l12872 3D32                                   l12856 3A44  
                                 l11888 9BBA                                   l11984 5BF8  
                                 l11998 00AC                                   l12974 82B6  
                                 l12988 83DE                         __end_of___aodiv 791A  
                          _Volts_to_SOC 989C                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D34  
                                 _ADCLK 003EFF                         __end_of___aomod 8014  
                                 _ADPCH 003EF1                         __end_of___fldiv 52AE  
                                 _ADREF 003EFD                         __end_of___awdiv 93C8  
                       __end_of___flneg B498                                   STR_10 FD16  
                                 STR_11 FD2C                                   STR_12 FD81  
                                 STR_21 FF83                                   STR_13 FD96  
                                 STR_30 FF5D                                   STR_22 FE77  
                                 STR_14 FDEA                                   STR_23 FF37  
                                 STR_31 FEC5                                   STR_15 FDD5  
                                 STR_40 FF94                                   STR_24 FF24  
                                 STR_32 FED8                                   STR_16 FD00  
                                 STR_41 FF94                                   STR_33 FEEB  
                                 STR_25 FE27                                   STR_17 FC9A  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FF83                                   STR_26 FF11  
                                 STR_34 FE3B                                   STR_18 FCB4  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FEFE  
                                 STR_35 FE8B                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FF70  
                                 STR_36 FE13                         __end_of___awmod 9ACE  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FF4A                                   STR_37 FDFF  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FE4F                                   STR_54 FCE8  
                                 STR_63 FC99                                   STR_47 FE9F  
                                 STR_39 FE63                                   STR_48 FE9F  
                                 STR_56 FEB2                                   STR_64 FC21  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 4578  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub B5FC                         __end_of___fltol 8FB4  
                                 u11000 58C6                                   u11010 5B1E  
                                 u11021 5B4E                                   u11030 5B64  
                                 u11110 00DA                                   u11031 5B62  
                                 u11040 5B78                                   u12000 2502  
                                 u11050 5B7C                                   u12010 2504  
                                 u11140 0194                                   u12020 252A  
                                 u11070 5B92                                   u11230 050E  
                                 u11150 0196                                   u11400 0A18  
                                 u12120 288C                                   u11330 0648  
                                 u12050 2684                         __end_of___lodiv 8E42  
                                 u11500 0EE4                                   u11260 0562  
                                 u11180 02A6                                   u12140 2A00  
                                 u12060 2686                                   u11190 02A8  
                                 u12070 26AC                                   u12240 2FF8  
                                 u11290 05C6                                   u12170 2C78  
                                 _U1P1H 003DED                                   u11700 7680  
                                 u12260 31A8                                   u12180 2C7A  
                                 _U1P2H 003DEF                                   u10750 979C  
                                 u10830 7102                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11560 10B8                                   u11720 67CE  
                                 u11800 60A8                                   u12280 A8AA  
                                 u12600 1588                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10770 9818  
                                 u10930 57F2                                   _U1P3L 003DF0  
                                 u10940 57F4                                   u11580 116E  
                                 u11660 755E                                   u11900 6310  
                                 u12540 842E                                   u12620 17DE  
                                 u11590 1170                                   u11670 75A4  
                                 u11910 6330                                   u11830 6190  
                                 u12550 8430                                   _U2P1L 003DD4  
                                 u11751 6A7C                                   u10960 5864  
                                 u10880 A438                                   u11760 6A92  
                                 u11840 61E4                                   u12720 223E  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11761 6A90                                   u11921 6360  
                                 u11905 62F2                                   u11770 6AA6  
                                 u11930 6376                                   u11850 61E6  
                                 u12730 2258                                   _U2P3L 003DD8  
                                 u11931 6374                                   u10980 5876  
                                 u11780 6AAA                                   u11940 638A  
                                 u12740 226A                                   u11677 7596  
                                 u11950 638E                                   u11870 6244  
                                 u12726 2240                                   u10887 A42A  
                                 _T5CLK 003F9D                                   u11880 6246  
                                 u12736 225A                         __end_of___lomod 964A  
                                 u12746 226C                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B87C  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C190                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 927A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2A2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR BFE6                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A5C6  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C0F6                                   _fputc 9778  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha B640  
                                 _fputs A9BA                         __end_of_isdigit BA4A  
                       __end_of_ivln2_h FC19                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B922                                   _width 003A  
                                 _putch BFB2            __end_of_set_ac_charger_relay C0BE  
                       __end_of_islower B9EA                         __end_of_isspace B31C  
              _INT1_SetInterruptHandler BC66                         __end_of_isupper BA1A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BBEE             _UART1_SetRxInterruptHandler BBC6  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9DFC  
                       __end_of_tolower AD96                         __end_of_strncmp 8234  
                       __end_of_toupper AD12               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BD30                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B4E0                   __end_of_ringBufS_init BB4E  
                       __initialization A2A2                       _UART2_rx_vect_isr BD58  
                          __end_of_cp_h FC21                            __end_of_cp_l FC1D  
                          __end_of_atoi 7B8E                            __end_of_ctoa AC8E  
                          __end_of_main 2388                            __end_of_dtoa 5C42  
                          __end_of_nanf B15C                            __end_of_spin FC0D  
                          __end_of_stoa 769A                            __end_of_utoa 6AF4  
                          __end_of_xtoa 6448                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C016  
                 __end_of_send_lcd_data BDA4                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B782                _TMR5_SetInterruptHandler BC16  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr C120  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BAFC  
                       _PWM8_Initialize C02C                        _UART1_Initialize B498  
                     _UART2_tx_vect_isr BD30                      _UART2_Transmit_ISR BAD0  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B034  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B640  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A252                                  _RB6PPS 003A0E  
                                i1l1207 91E2                    _start_switch_handler BEC0  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B570                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C0DA  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u923_25 C0B8                                  u923_26 C0BA  
                                u942_20 C0F2                                  u928_20 885C  
                  __size_of_hid_display 0102                                  u972_24 94E6  
                                u972_25 94E2                                  u949_20 B8BC  
                                u949_26 B8BE                                  u965_28 93E6  
                                u968_20 9406                                  u968_21 9400  
                                u997_48 BE44                                  u999_28 BDD8  
                      __end_of___xxtofl 864A   __end_of_ADCC_DischargeSampleCapacitor C156  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C14E  
              __end_of_send_lcd_cmd_dma BF3C                         _TMR3_WriteTimer B7C2  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BD80  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C116  
                      _UART2_Initialize B15C                                  _WaitMs B8EC  
                       _conv_raw_result 52AE                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8FB4  
                                ___fleq A44A                       _ADCC_ThresholdISR AF64  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AA52  
                                _efgtoa 0000                                  _floorf 6448  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E20  
                  __size_of_help_button 0038                                  clear_0 A314  
                                clear_1 A328                                  clear_2 A33A  
                                clear_3 A346                                  clear_4 A352  
                                clear_5 A35E               __end_of_port_data_dma_ptr C12A  
                                _printf B098                      _eaDogM_WriteString A872  
                                _strcpy A376                               ?_ADCC_ISR 0021  
                                _strlen A918                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize AEFA  
                        _PMD_Initialize C058              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr BD58                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B098                            __mediumconst FA34  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B270  
                      __end_of_spinners A1BE                        __end_of_vfprintf A720  
                            _StartTimer B702                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B528  
                     _SYSTEM_Initialize B406                              __accesstop 0060  
               __end_of__initialization A370                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C16E  
                  __end_of_display_info C166               __end_of_CLKREF_Initialize C120  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B782                   _set_temp_display_help C09E  
                      _clear_hid_pflags BDA4                   __end_of_TMR3_CallBack BE34  
             __end_of_ADCC_ThresholdISR AFCE                      __size_of_calc_bsoc 0A1A  
                __end_of_ringBufS_flush AAE4                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 C0BE                            __pidataBANK1 9EFE  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A674  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 989C                           __end_of_fputs AA52  
                  _get_ac_charger_relay C0E8                           __end_of_srand B956  
                 __end_of_TMR5_CallBack BE10                           __end_of_putch BFCC  
                  _set_ac_charger_relay C0AE                 __end_of_PWM8_Initialize C042  
               __end_of_TMR6_Initialize BB26                       _adc_int_t_handler AD96  
                __end_of_PMD_Initialize C06C                              __end_of_bp FC15  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BE7C  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C138  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan C176  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B450  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B802                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8234  
               __end_of_conv_raw_result 57C2                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone BB76  
                      _DMA1_DMADCNT_ISR C12C                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B98A  
                 __end_of_wait_lcd_done BFB2        __end_of_TMR3_SetInterruptHandler BC66  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler BC16  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AF64  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler AE18  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AE90  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler BCDE   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler BCB6                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BF78                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C17C  
                               u1005_48 BE68                                 u1008_28 BDFC  
                               u1037_44 ADFE                                 u1037_45 ADF8  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C108  
                               u1240_20 398C                                 _U1ERRIE 003DFA  
                               u1242_20 3A56                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1247_28 BE20  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D4E  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BA78  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B7C2  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C09E              __end_of_set_load_relay_two C08E  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8B3C                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim BFE6                                 __Lparam 0000  
              __end_of_UART1_Initialize B4E0                       __end_of_hid_input AC06  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 769A  
                               ___fladd 4578                                 ___aomod 7DD4  
                               ___fldiv 4D34                                 ___awdiv 927A  
                               ___flneg B450                                 ___awmod 99B6  
                               ___flmul 3D4E                                 ___flsub B5B6  
                               ___fltol 8E42                                 ___lodiv 8CC2  
                               ___lomod 950A               __end_of_UART1_Receive_ISR BF96  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A0D8                                 __pcinit A2A2  
              __end_of_mode_lamp_bright C0E8                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C0CC  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B1BC                                 __ptext2 BEC0  
                               __ptext3 B922                                 __ptext4 A0D8  
                               __ptext5 B98A                                 __ptext6 9FEE  
                               __ptext7 BD80                                 __ptext8 B682  
                               __ptext9 B6C2                       __end_of_esr_check 73DC  
                     _UART2_Receive_ISR BEE0                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C042  
                          __size_of_abs 0046                                 us641999 7904  
                               us652999 8002                            __size_of_pad 0114  
                     __end_of_init_bsoc 7DD4                                 us742999 963A  
                               _isalpha B5FC                                 _isdigit BA1A  
                               us737999 8E2C                                 _ivln2_h FC15  
                             _T3CONbits 003FA6                                 _mode_sw 00CA  
                     __end_of_lp_filter 8806                                 _islower B9BA  
                               _isspace B2CA                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize B1BC  
                               _isupper B9EA              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9CF2                                 _tolower AD12  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 8014  
                               _toupper AC8E                    end_of_initialization A370  
             __size_of_convert_adc_data 00B8                      _check_enter_button B742  
                             i1u1256_20 91D8     __end_of_UART2_SetRxInterruptHandler BBC6  
           _UART2_SetRxInterruptHandler BB9E                               i2u1040_48 BABC  
                             i2u1042_48 AF9A                               i2u1042_49 AFAE  
                             i2u1044_48 BD1C                               i2u1046_48 BD44  
                             i2u1048_48 BD6C                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BF5A                       __end_of_vfpfcnvrt 3334  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C188  
             __end_of_UART2_Receive_ISR BF00                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C18E                _TMR3_SetInterruptHandler BC3E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BBEE  
                          _display_help C166                   _TMR5_InterruptHandler 00A5  
                          _display_info C15E    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BDC8                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BD06             _ADCC_SetADIInterruptHandler BCDE  
                            _update_lcd 9BE2                         _calc_model_data 5C42  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B1BC                         _DMA1_Initialize AE90  
                            _start_bsoc BE9E                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C016                   __end_of_get_vterm_ptr BA78  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B922            __end_of_INTERRUPT_Initialize B034  
                            _vterm_dump 964A                          __end_of___flge 9116  
                        __end_of___fleq A50E    __end_of_INT0_DefaultInterruptHandler C19C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C19A  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B270  
                         __pidataBIGRAM 6AF4                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67B4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 710C  
                        __end_of_printf B0FA                __end_of_DMA1_DMADCNT_ISR C136  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BE58  
                        __end_of_strcpy A44A                          __end_of_strlen A9BA  
                   start_initialization A2A2    __end_of_TMR5_DefaultInterruptHandler B8EC  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B8B4  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B5B6  
                 __end_of_INT1_CallBack BDEC               __size_of_set_display_info 001E  
                           __end_of_pad 9BE2                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B702                          _switch_handler 93C8  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B3C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C116  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C144  
                   __end_of_hid_display 9EFE              __end_of_send_port_data_dma B36E  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BB4E  
                         _ringBufS_init BB26                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B98A  
               __end_of_calc_model_data 608E                           _send_lcd_data BD80  
                   __end_of_help_button B8B4         __end_of_eaDogM_WriteStringAtPos A872  
                   __end_of_BVSOC_TABLE FB05                               ___asfladd AE18  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize AEFA                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BCB6  
                         __pcstackBANK0 00D7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 950A  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C02C  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FB95                        _convert_adc_data A50E  
                             _calc_bsoc 3334               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9FEE                  __end_of_DMA1_DMAOR_ISR C14E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B2CA                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize AAE4                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C182                           __pmediumconst FA34  
                             __ptext100 4D34                               __ptext101 8FB4  
                             __ptext110 B15C                               __ptext102 5C42  
                             __ptext111 BB76                               __ptext103 C188  
                             __ptext120 BC3E                               __ptext112 BB9E  
                             __ptext104 BE9E                               __ptext121 BFFE  
                             __ptext113 B498                               __ptext105 864A  
                             __ptext130 BC66                               __ptext122 C016  
                             __ptext114 BBC6                               __ptext106 B5B6  
                             __ptext131 BC8E                               __ptext123 C02C  
                             __ptext115 BAFC                               __ptext107 4578  
                             __ptext140 C196                               __ptext132 B270  
                             __ptext124 C058                               __ptext116 BBEE  
                             __ptext108 3D4E                               __ptext141 93C8  
                             __ptext133 AE90                               __ptext125 AAE4  
                             __ptext117 B4E0                               __ptext109 B406  
                             __ptext150 B7C2                               __ptext142 A1C0  
                             __ptext134 C116                               __ptext126 C042  
                             __ptext118 BC16                               __ptext151 BE10  
                             __ptext143 B782                               __ptext135 AEFA  
                             __ptext127 AFCE                               __ptext119 B528  
                             __ptext160 C190                               __ptext152 C198  
                             __ptext144 BDEC                               __ptext136 BCB6  
                             __ptext128 C16E                               __ptext161 BAA4  
                             __ptext153 3334                               __ptext145 B8B4  
                             __ptext137 BCDE                               __ptext129 B956  
                             __ptext170 BD58                               __ptext162 AD96  
                             __ptext154 B31C                               __ptext146 8806  
                             __ptext138 B804                               __ptext171 BEE0  
                             __ptext163 C19C                               __ptext155 C120  
                             __ptext147 C0AE                               __ptext139 BDC8  
                             __ptext172 BFCC                               __ptext164 C19E  
                             __ptext156 AE18                               __ptext148 C0E8  
                             __ptext173 BE58                               __ptext165 AF64  
                             __ptext157 C0F8                               __ptext149 9118  
                             __ptext174 B36E                               __ptext166 BD08  
                             __ptext158 BE34                               __ptext175 C108  
                             __ptext167 BF78                               __ptext159 C19A  
                             __ptext176 C12C                               __ptext168 BD30  
                             __ptext177 C138                               __ptext169 BAD0  
                             __ptext178 C144                               __ptext179 0000  
                             _hid_input AB76                      __end_of_StartTimer B742  
                    _set_load_relay_one C08E                      _set_load_relay_two C07E  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BAA4  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 710C                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 7B8E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 864A                             _hid_display 9DFC  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize AFCE                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C0F8                                _INT1_ISR B804  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BE10  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BF3C  
                   __size_of_update_lcd 0110                             _help_button B87C  
                              _TMR3_ISR 9118                             _BVSOC_TABLE FA35  
                              _TMR5_ISR A1C0                                _TMR6_ISR BFCC  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2388                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BDEC  
                            _ADCON0bits 003EF8                      __end_of_check_help 8446  
                             _start_lcd C182                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack BE58  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C188                        _set_display_info BF5A  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A2B6  
                             copy_data1 A2DC                               copy_data2 A2FE  
              _INT0_SetInterruptHandler BC8E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BB9E             _UART2_SetTxInterruptHandler BB76  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BF96                            _send_lcd_cmd B6C2  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C19E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BAA4  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C142  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8446  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C0DA  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BF00                                __ptext11 BB26  
                              __ptext20 C06C                                __ptext12 7B8E  
                              __ptext21 C14E                                __ptext13 989C  
                              __ptext30 964A                                __ptext22 C176  
                              __ptext14 9DFC                                __ptext31 9CF2  
                              __ptext23 C156                                __ptext15 AB76  
                              __ptext40 A872                                __ptext32 BA4A  
                              __ptext24 C07E                                __ptext16 BA78  
                              __ptext41 C17C                                __ptext33 B8EC  
                              __ptext25 C08E                                __ptext17 710C  
                              __ptext50 B9BA                                __ptext42 C182  
                              __ptext34 9BE2                                __ptext26 C0CC  
                              __ptext18 B842                                __ptext51 B5FC  
                              __ptext43 AA52                                __ptext35 A7CA  
                              __ptext27 A50E                                __ptext19 B034  
                              __ptext60 A376                                __ptext52 67B4  
                              __ptext44 6E20                                __ptext36 BF1E  
                              __ptext28 BDA4                                __ptext61 6448  
                              __ptext53 950A                                __ptext45 B098  
                              __ptext37 BF96                                __ptext29 8234  
                              __ptext70 7DD4                                __ptext62 89A6  
                              __ptext54 8CC2                                __ptext46 A674  
                              __ptext38 B216                                __ptext71 769A  
                              __ptext63 8E42                                __ptext55 8014  
                              __ptext47 2388                                __ptext39 B3BC  
                              __ptext80 B2CA                                __ptext72 AC06  
                              __ptext64 B450                                __ptext56 73DC  
                              __ptext48 608E                                __ptext81 BA1A  
                              __ptext73 9ACE                                __ptext65 A44A  
                              __ptext57 0000                                __ptext49 AC8E  
                              __ptext90 B702                                __ptext82 BF3C  
                              __ptext74 A918                                __ptext66 99B6  
                              __ptext58 AD12                                __ptext91 C15E  
                              __ptext83 C09E                                __ptext75 A9BA  
                              __ptext67 927A                                __ptext59 B9EA  
                              __ptext92 C166                                __ptext84 BF5A  
                              __ptext76 9778                                __ptext68 57C2  
                              __ptext93 B742                                __ptext85 BFE6  
                              __ptext77 BFB2                                __ptext69 B570  
                              __ptext94 8B3C                                __ptext86 C0DA  
                              __ptext78 A720                                __ptext95 A5C6  
                              __ptext87 B640                                __ptext79 791A  
                              __ptext96 52AE                                __ptext88 B87C  
                              __ptext97 B0FA                                __ptext89 BB4E  
                              __ptext98 BE7C                                __ptext99 8446  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1161999 73EE  
                              us1092999 57DC                                us1173999 681A  
                              us1182999 610E                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A720  
                  __end_of_Volts_to_SOC 99B6                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1144  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B9BA                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C07E                                _spi_link 0060  
                              _wdtdelay B216              __end_of_UART2_Transmit_ISR BAFC  
                              _spinners A0D8                                _vfprintf A674  
              __end_of_convert_adc_data A5C6              __end_of_PWM8_LoadDutyValue B682  
  __end_of_TMR3_DefaultInterruptHandler C19A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C198    __end_of_INT1_DefaultInterruptHandler C198  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C196  
                    _send_port_data_dma B31C                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BE7C                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C17C  
                    _EXT_INT_Initialize B956    __end_of_TMR6_DefaultInterruptHandler B3BC  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B36E  
                     _send_lcd_data_dma B3BC    __end_of_ADCC_DefaultInterruptHandler C19E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C19C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B682          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C0AE                   __end_of_calc_ror_data 8CC2  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A918  
                 __end_of_mode_lamp_dim BFFE                 __end_of_adc_int_handler C1A0  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9CF2                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B216                      __end_of_start_bsoc BEC0  
                        _FVR_Initialize C16E                  __end_of_get_raw_result BE9E  
                      _send_lcd_cmd_dma BF1E                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler BC8E  
             __size_of_UART1_Initialize 0048               __end_of_send_lcd_data_dma B406  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B6C2  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C196  
        __end_of_PIN_MANAGER_Initialize AB76               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9778                 _eaDogM_WriteStringAtPos A7CA  
                         _get_vterm_ptr BA4A                          _check_adc_scan C156  
             __size_of_UART2_Initialize 0060  
