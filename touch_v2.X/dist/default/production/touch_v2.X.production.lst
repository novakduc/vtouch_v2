

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 10 01:28:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=4,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=4,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=4,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	text146,global,reloc=4,class=CODE,delta=1
   170                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   171                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   172  0000                     
   173                           ; Version 2.10
   174                           ; Generated 31/07/2019 GMT
   175                           ; 
   176                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F57K42 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207  0000                     
   208 ;;_mode	offset	0
   209 ;;_channel	offset=-1 (param)
   210 ;;_s	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_data	offset=-1 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_i	offset	0
   217 ;;_lp_speed	offset	0
   218 ;;_new	offset=-4 (param)
   219 ;;_bn	offset=-5 (param)
   220 ;;_slow	offset=-6 (param)
   221 ;;_chan	offset=-1 (param)
   222 ;;_to_what	offset=-2 (param)
   223 ;;_u	offset	0
   224 ;;_s	offset=-2 (param)
   225 ;;_index	offset=-1 (param)
   226 ;;_arg	offset	0
   227 ;;_exp	offset	4
   228 ;;_sign	offset=-1 (param)
   229 ;;_val	offset=-5 (param)
   230 ;;_flipper	offset=-1 (param)
   231 ;;_f	offset	0
   232 ;;_ap	offset	6
   233 ;;_s	offset=-3 (param)
   234 ;;_fmt	offset=-5 (param)
   235 ;;_line	offset=-1 (param)
   236 ;;_vterm	offset=-2 (param)
   237 ;;_numMilliseconds	offset=-2 (param)
   238 ;;_vterm	offset=-1 (param)
   239 ;;_r	offset=-1 (param)
   240 ;;_c	offset=-2 (param)
   241 ;;_strPtr	offset=-4 (param)
   242 ;;_strPtr	offset=-1 (param)
   243 ;;_delay	offset=-4 (param)
   244 ;;_strPtr	offset=-2 (param)
   245 ;;__this	offset=-2 (param)
   246 ;;_clearBuffer	offset=-3 (param)
   247 ;;_s	offset	0
   248 ;;_k	offset	2
   249 ;;_dest	offset=-2 (param)
   250 ;;_c	offset=-4 (param)
   251 ;;_n	offset=-6 (param)
   252 ;;_ap	offset	0
   253 ;;_fmt	offset=-3 (param)
   254 ;;_cfmt	offset	0
   255 ;;_fp	offset=-2 (param)
   256 ;;_fmt	offset=-4 (param)
   257 ;;_ap	offset=-6 (param)
   258 ;;_vfpfcnvrt$4256	offset	0
   259 ;;_vfpfcnvrt$4267	offset	2
   260 ;;_vfpfcnvrt$4255	offset	4
   261 ;;_llu	offset	6
   262 ;;_ll	offset	14
   263 ;;_f	offset	22
   264 ;;_ct	offset	26
   265 ;;_cp	offset	29
   266 ;;_c	offset	31
   267 ;;_fp	offset=-2 (param)
   268 ;;_fmt	offset=-4 (param)
   269 ;;_ap	offset=-6 (param)
   270 ;;_xtoa$4241	offset	0
   271 ;;_xtoa$4240	offset	2
   272 ;;_n	offset	4
   273 ;;_c	offset	12
   274 ;;_i	offset	14
   275 ;;_w	offset	16
   276 ;;_p	offset	18
   277 ;;_fp	offset=-2 (param)
   278 ;;_d	offset=-10 (param)
   279 ;;_x	offset=-11 (param)
   280 ;;_toupper$4925	offset	0
   281 ;;_c	offset=-2 (param)
   282 ;;_c	offset=-2 (param)
   283 ;;_c	offset=-2 (param)
   284 ;;_n	offset	0
   285 ;;_i	offset	8
   286 ;;_w	offset	10
   287 ;;_p	offset	12
   288 ;;_fp	offset=-2 (param)
   289 ;;_d	offset=-10 (param)
   290 ;;_counter	offset	0
   291 ;;_dividend	offset=-8 (param)
   292 ;;_divisor	offset=-16 (param)
   293 ;;_quotient	offset	0
   294 ;;_counter	offset	8
   295 ;;_dividend	offset=-8 (param)
   296 ;;_divisor	offset=-16 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4213	offset	0
   311 ;;_efgtoa$4212	offset	2
   312 ;;_efgtoa$4211	offset	4
   313 ;;_efgtoa$4207	offset	6
   314 ;;_efgtoa$4203	offset	8
   315 ;;_efgtoa$4202	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$4910	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_b	offset=-4 (param)
   355 ;;_a	offset=-8 (param)
   356 ;;_grs	offset	0
   357 ;;_bexp	offset	1
   358 ;;_aexp	offset	2
   359 ;;_signs	offset	3
   360 ;;_b	offset=-4 (param)
   361 ;;_a	offset=-8 (param)
   362 ;;_f1	offset=-4 (param)
   363 ;;_prod	offset	0
   364 ;;_grs	offset	4
   365 ;;_temp	offset	8
   366 ;;_bexp	offset	10
   367 ;;_aexp	offset	11
   368 ;;_sign	offset	12
   369 ;;_b	offset=-4 (param)
   370 ;;_a	offset=-8 (param)
   371 ;;_ff1	offset=-4 (param)
   372 ;;_ff2	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_grs	offset	0
   376 ;;_rem	offset	4
   377 ;;_new_exp	offset	8
   378 ;;_aexp	offset	10
   379 ;;_bexp	offset	11
   380 ;;_sign	offset	12
   381 ;;_b	offset=-4 (param)
   382 ;;_a	offset=-8 (param)
   383 ;;_sign	offset	0
   384 ;;_counter	offset	1
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_quotient	offset	0
   388 ;;_sign	offset	2
   389 ;;_counter	offset	3
   390 ;;_dividend	offset=-2 (param)
   391 ;;_divisor	offset=-4 (param)
   392 ;;_dtoa$4179	offset	0
   393 ;;_n	offset	2
   394 ;;_i	offset	10
   395 ;;_s	offset	12
   396 ;;_w	offset	14
   397 ;;_p	offset	16
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_a	offset=-2 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	8
   407 ;;_counter	offset	9
   408 ;;_dividend	offset=-8 (param)
   409 ;;_divisor	offset=-16 (param)
   410 ;;_w	offset	0
   411 ;;_fp	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_w	offset	0
   414 ;;_i	offset	2
   415 ;;_fp	offset=-2 (param)
   416 ;;_buf	offset=-4 (param)
   417 ;;_p	offset=-6 (param)
   418 ;;_a	offset	0
   419 ;;_s	offset=-2 (param)
   420 ;;_i	offset	0
   421 ;;_c	offset	2
   422 ;;_s	offset=-2 (param)
   423 ;;_fp	offset=-4 (param)
   424 ;;_c	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-1 (param)
   427 ;;__this	offset=-2 (param)
   428 ;;_c	offset=-3 (param)
   429 ;;_atoi$4763	offset	0
   430 ;;_atoi$4761	offset	2
   431 ;;_atoi$4762	offset	4
   432 ;;_n	offset	5
   433 ;;_neg	offset	7
   434 ;;_s	offset=-2 (param)
   435 ;;_isspace$4801	offset	0
   436 ;;_c	offset=-2 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_vterm	offset=-1 (param)
   439 ;;_new_response_info	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_level	offset=-2 (param)
   442 ;;_dutyValue	offset=-2 (param)
   443 ;;_timer	offset=-1 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_count	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_timerVal	offset=-2 (param)
   458 ;;_channel	offset=-1 (param)
   459 ;;_i	offset	0
   460                           
   461                           	psect	idataBANK0
   462  01843E                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _R
   466  01843E  0000               	dw	0
   467  018440  0000               	dw	0
   468  018442  0000               	dw	0
   469  018444  0000               	dw	0
   470  018446  0000               	dw	0
   471  018448  0000               	dw	0
   472  01844A  0000               	dw	0
   473  01844C  0000               	dw	0
   474  01844E  0000               	dw	0
   475  018450  0000               	dw	0
   476  018452  0000               	dw	0
   477  018454  0000               	dw	0
   478  018456  0000               	dw	0
   479  018458  0000               	dw	0
   480  01845A  0000               	dw	0
   481  01845C  0000               	dw	0
   482  01845E  D000               	dw	53248
   483  018460  451B               	dw	17691
   484  018462  8000               	dw	32768
   485  018464  451A               	dw	17690
   486  018466  00                 	db	0
   487  018467  0000               	dw	0
   488  018469  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  01846A  28                 	db	40
   492  01846B  6E                 	db	110
   493  01846C  75                 	db	117
   494  01846D  6C                 	db	108
   495  01846E  6C                 	db	108
   496  01846F  29                 	db	41
   497  018470  00                 	db	0
   498                           
   499                           ;initializer for _port_data
   500  018471  FF                 	db	255
   501  018472  00                 	db	0
   502  018473  FF                 	db	255
   503  018474  00                 	db	0
   504  018475  FF                 	db	255
   505  018476  00                 	db	0
   506  018477  FF                 	db	255
   507  018478  00                 	db	0
   508  018479  FF                 	db	255
   509  01847A  00                 	db	0
   510  01847B  FF                 	db	255
   511  01847C  00                 	db	0
   512  01847D  FF                 	db	255
   513  01847E  00                 	db	0
   514  01847F  FF                 	db	255
   515  018480  00                 	db	0
   516                           
   517                           	psect	idataBANK1
   518  017560                     __pidataBANK1:
   519                           	opt callstack 0
   520                           
   521                           ;initializer for _V
   522  017560  00                 	db	0
   523  017561  00                 	db	0
   524  017562  00                 	db	0
   525  017563  00                 	db	0
   526  017564  00                 	db	0
   527  017565  00                 	db	0
   528  017566  00                 	db	0
   529  017567  00                 	db	0
   530  017568  00                 	db	0
   531  017569  00                 	db	0
   532  01756A  00                 	db	0
   533  01756B  00                 	db	0
   534  01756C  00                 	db	0
   535  01756D  00                 	db	0
   536  01756E  00                 	db	0
   537  01756F  00                 	db	0
   538  017570  00                 	db	0
   539  017571  00                 	db	0
   540  017572  00                 	db	0
   541  017573  00                 	db	0
   542  017574  00                 	db	0
   543  017575  00                 	db	0
   544  017576  00                 	db	0
   545  017577  00                 	db	0
   546  017578  00                 	db	0
   547  017579  00                 	db	0
   548  01757A  00                 	db	0
   549  01757B  00                 	db	0
   550  01757C  00                 	db	0
   551  01757D  00                 	db	0
   552  01757E  00                 	db	0
   553  01757F  00                 	db	0
   554  017580  00                 	db	0
   555  017581  00                 	db	0
   556  017582  00                 	db	0
   557  017583  00                 	db	0
   558  017584  00                 	db	0
   559  017585  00                 	db	0
   560  017586  00                 	db	0
   561  017587  00                 	db	0
   562  017588  00                 	db	0
   563  017589  00                 	db	0
   564  01758A  00                 	db	0
   565  01758B  00                 	db	0
   566  01758C  00                 	db	0
   567  01758D  00                 	db	0
   568  01758E  00                 	db	0
   569  01758F  00                 	db	0
   570  017590  00                 	db	0
   571  017591  00                 	db	0
   572  017592  00                 	db	0
   573  017593  00                 	db	0
   574  017594  00                 	db	0
   575  017595  00                 	db	0
   576  017596  00                 	db	0
   577  017597  00                 	db	0
   578  017598  00                 	db	0
   579  017599  00                 	db	0
   580  01759A  00                 	db	0
   581  01759B  00                 	db	0
   582  01759C  00                 	db	0
   583  01759D  00                 	db	0
   584  01759E  00                 	db	0
   585  01759F  00                 	db	0
   586  0175A0  00                 	db	0
   587  0175A1  00                 	db	0
   588  0175A2  00                 	db	0
   589  0175A3  00                 	db	0
   590  0175A4  00                 	db	0
   591  0175A5  00                 	db	0
   592  0175A6  00                 	db	0
   593  0175A7  00                 	db	0
   594  0175A8  00                 	db	0
   595  0175A9  00                 	db	0
   596  0175AA  00                 	db	0
   597  0175AB  00                 	db	0
   598  0175AC  00                 	db	0
   599  0175AD  00                 	db	0
   600  0175AE  00                 	db	0
   601  0175AF  00                 	db	0
   602  0175B0  00                 	db	0
   603  0175B1  00                 	db	0
   604  0175B2  00                 	db	0
   605  0175B3  00                 	db	0
   606  0175B4  00                 	db	0
   607  0175B5  00                 	db	0
   608  0175B6  00                 	db	0
   609  0175B7  00                 	db	0
   610  0175B8  00                 	db	0
   611  0175B9  00                 	db	0
   612  0175BA  00                 	db	0
   613  0175BB  00                 	db	0
   614  0175BC  00                 	db	0
   615  0175BD  00                 	db	0
   616  0175BE  00                 	db	0
   617  0175BF  00                 	db	0
   618  0175C0  00                 	db	0
   619  0175C1  00                 	db	0
   620  0175C2  00                 	db	0
   621  0175C3  00                 	db	0
   622  0175C4  00                 	db	0
   623  0175C5  00                 	db	0
   624  0175C6  00                 	db	0
   625  0175C7  00                 	db	0
   626  0175C8  00                 	db	0
   627  0175C9  00                 	db	0
   628  0175CA  00                 	db	0
   629  0175CB  00                 	db	0
   630  0175CC  00                 	db	0
   631  0175CD  00                 	db	0
   632  0175CE  00                 	db	0
   633  0175CF  00                 	db	0
   634  0175D0  00                 	db	0
   635  0175D1  00                 	db	0
   636  0175D2  00                 	db	0
   637  0175D3  00                 	db	0
   638  0175D4  00                 	db	0
   639  0175D5  00                 	db	0
   640  0175D6  00                 	db	0
   641  0175D7  00                 	db	0
   642  0175D8  00                 	db	0
   643  0175D9  00                 	db	0
   644  0175DA  00                 	db	0
   645  0175DB  00                 	db	0
   646  0175DC  00                 	db	0
   647  0175DD  00                 	db	0
   648  0175DE  00                 	db	0
   649  0175DF  00                 	db	0
   650  0175E0  00                 	db	0
   651  0175E1  0000               	dw	0
   652  0175E3  0000               	dw	0
   653  0175E5  0000               	dw	0
   654  0175E7  0000               	dw	0
   655  0175E9  00                 	db	0
   656  0175EA  00                 	db	0
   657  0175EB  00                 	db	0
   658  0175EC  00                 	db	0
   659  0175ED  00                 	db	0
   660  0175EE  00                 	db	0
   661  0175EF  0000               	dw	0
   662  0175F1  0000               	dw	0
   663  0175F3  0000               	dw	0
   664  0175F5  0000               	dw	0
   665  0175F7  0000               	dw	0
   666  0175F9  0000               	dw	0
   667  0175FB  00                 	db	0
   668  0175FC  00                 	db	0
   669  0175FD  00                 	db	0
   670  0175FE  00                 	db	0
   671  0175FF  00                 	db	0
   672  017600  00                 	db	0
   673  017601  00                 	db	0
   674  017602  00                 	db	0
   675  017603  00                 	db	0
   676  017604  00                 	db	0
   677  017605  0000               	dw	0
   678  017607  0000               	dw	0
   679  017609  2D                 	db	45
   680  01760A  00                 	db	0
   681  01760B  0000               	dw	0
   682  01760D  0000               	dw	0
   683  01760F  0000               	dw	0
   684  017611  0000               	dw	0
   685  017613  0000               	dw	0
   686  017615  0000               	dw	0
   687  017617  0000               	dw	0
   688  017619  0000               	dw	0
   689                           
   690                           	psect	mediumconst
   691  00FE50                     __pmediumconst:
   692                           	opt callstack 0
   693  00FE50  00                 	db	0
   694  00FE51                     _T:
   695                           	opt callstack 0
   696  00FE51  63                 	db	99
   697  00FE52  6F                 	db	111
   698  00FE53  6D                 	db	109
   699  00FE54  6D                 	db	109
   700  00FE55  61                 	db	97
   701  00FE56  6E                 	db	110
   702  00FE57  64                 	db	100
   703  00FE58  73                 	db	115
   704  00FE59  20                 	db	32
   705  00FE5A  31                 	db	49
   706  00FE5B  00                 	db	0
   707  00FE5C  00                 	db	0
   708  00FE5D  00                 	db	0
   709  00FE5E  00                 	db	0
   710  00FE5F  00                 	db	0
   711  00FE60  00                 	db	0
   712  00FE61  00                 	db	0
   713  00FE62  00                 	db	0
   714  00FE63  64                 	db	100
   715  00FE64  69                 	db	105
   716  00FE65  73                 	db	115
   717  00FE66  70                 	db	112
   718  00FE67  6C                 	db	108
   719  00FE68  61                 	db	97
   720  00FE69  79                 	db	121
   721  00FE6A  73                 	db	115
   722  00FE6B  20                 	db	32
   723  00FE6C  31                 	db	49
   724  00FE6D  00                 	db	0
   725  00FE6E  00                 	db	0
   726  00FE6F  00                 	db	0
   727  00FE70  00                 	db	0
   728  00FE71  00                 	db	0
   729  00FE72  00                 	db	0
   730  00FE73  00                 	db	0
   731  00FE74  00                 	db	0
   732  00FE75  63                 	db	99
   733  00FE76  6F                 	db	111
   734  00FE77  6D                 	db	109
   735  00FE78  6D                 	db	109
   736  00FE79  61                 	db	97
   737  00FE7A  6E                 	db	110
   738  00FE7B  64                 	db	100
   739  00FE7C  73                 	db	115
   740  00FE7D  20                 	db	32
   741  00FE7E  32                 	db	50
   742  00FE7F  00                 	db	0
   743  00FE80  00                 	db	0
   744  00FE81  00                 	db	0
   745  00FE82  00                 	db	0
   746  00FE83  00                 	db	0
   747  00FE84  00                 	db	0
   748  00FE85  00                 	db	0
   749  00FE86  00                 	db	0
   750  00FE87  64                 	db	100
   751  00FE88  69                 	db	105
   752  00FE89  73                 	db	115
   753  00FE8A  70                 	db	112
   754  00FE8B  6C                 	db	108
   755  00FE8C  61                 	db	97
   756  00FE8D  79                 	db	121
   757  00FE8E  73                 	db	115
   758  00FE8F  20                 	db	32
   759  00FE90  32                 	db	50
   760  00FE91  00                 	db	0
   761  00FE92  00                 	db	0
   762  00FE93  00                 	db	0
   763  00FE94  00                 	db	0
   764  00FE95  00                 	db	0
   765  00FE96  00                 	db	0
   766  00FE97  00                 	db	0
   767  00FE98  00                 	db	0
   768  00FE99  63                 	db	99
   769  00FE9A  6F                 	db	111
   770  00FE9B  6D                 	db	109
   771  00FE9C  6D                 	db	109
   772  00FE9D  61                 	db	97
   773  00FE9E  6E                 	db	110
   774  00FE9F  64                 	db	100
   775  00FEA0  73                 	db	115
   776  00FEA1  20                 	db	32
   777  00FEA2  33                 	db	51
   778  00FEA3  00                 	db	0
   779  00FEA4  00                 	db	0
   780  00FEA5  00                 	db	0
   781  00FEA6  00                 	db	0
   782  00FEA7  00                 	db	0
   783  00FEA8  00                 	db	0
   784  00FEA9  00                 	db	0
   785  00FEAA  00                 	db	0
   786  00FEAB  64                 	db	100
   787  00FEAC  69                 	db	105
   788  00FEAD  73                 	db	115
   789  00FEAE  70                 	db	112
   790  00FEAF  6C                 	db	108
   791  00FEB0  61                 	db	97
   792  00FEB1  79                 	db	121
   793  00FEB2  73                 	db	115
   794  00FEB3  20                 	db	32
   795  00FEB4  33                 	db	51
   796  00FEB5  00                 	db	0
   797  00FEB6  00                 	db	0
   798  00FEB7  00                 	db	0
   799  00FEB8  00                 	db	0
   800  00FEB9  00                 	db	0
   801  00FEBA  00                 	db	0
   802  00FEBB  00                 	db	0
   803  00FEBC  00                 	db	0
   804  00FEBD  63                 	db	99
   805  00FEBE  6F                 	db	111
   806  00FEBF  6D                 	db	109
   807  00FEC0  6D                 	db	109
   808  00FEC1  61                 	db	97
   809  00FEC2  6E                 	db	110
   810  00FEC3  64                 	db	100
   811  00FEC4  73                 	db	115
   812  00FEC5  20                 	db	32
   813  00FEC6  34                 	db	52
   814  00FEC7  00                 	db	0
   815  00FEC8  00                 	db	0
   816  00FEC9  00                 	db	0
   817  00FECA  00                 	db	0
   818  00FECB  00                 	db	0
   819  00FECC  00                 	db	0
   820  00FECD  00                 	db	0
   821  00FECE  00                 	db	0
   822  00FECF  64                 	db	100
   823  00FED0  69                 	db	105
   824  00FED1  73                 	db	115
   825  00FED2  70                 	db	112
   826  00FED3  6C                 	db	108
   827  00FED4  61                 	db	97
   828  00FED5  79                 	db	121
   829  00FED6  73                 	db	115
   830  00FED7  20                 	db	32
   831  00FED8  34                 	db	52
   832  00FED9  00                 	db	0
   833  00FEDA  00                 	db	0
   834  00FEDB  00                 	db	0
   835  00FEDC  00                 	db	0
   836  00FEDD  00                 	db	0
   837  00FEDE  00                 	db	0
   838  00FEDF  00                 	db	0
   839  00FEE0  00                 	db	0
   840  00FEE1                     __end_of_T:
   841                           	opt callstack 0
   842  0000                     _IVTADL	set	14493
   843  0000                     _IVTADH	set	14494
   844  0000                     _IVTADU	set	14495
   845  0000                     _PIR4bits	set	14756
   846  0000                     _PIE8bits	set	14744
   847  0000                     _PIR8bits	set	14760
   848  0000                     _SCANPR	set	14839
   849  0000                     _DMA2PR	set	14836
   850  0000                     _DMA1PR	set	14835
   851  0000                     _MAINPR	set	14834
   852  0000                     _ISRPR	set	14833
   853  0000                     _PIE2bits	set	14738
   854  0000                     _PIR2bits	set	14754
   855  0000                     _PIE9bits	set	14745
   856  0000                     _PIR9bits	set	14761
   857  0000                     _PIE6bits	set	14742
   858  0000                     _PIE3bits	set	14739
   859  0000                     _PMD7	set	14791
   860  0000                     _PMD6	set	14790
   861  0000                     _PMD5	set	14789
   862  0000                     _PMD4	set	14788
   863  0000                     _PMD3	set	14787
   864  0000                     _PMD2	set	14786
   865  0000                     _PMD1	set	14785
   866  0000                     _PMD0	set	14784
   867  0000                     _OSCTUNE	set	14814
   868  0000                     _OSCFRQ	set	14815
   869  0000                     _OSCEN	set	14813
   870  0000                     _OSCCON3	set	14811
   871  0000                     _OSCCON1	set	14809
   872  0000                     _IPR8bits	set	14728
   873  0000                     _IPR9bits	set	14729
   874  0000                     _IPR5bits	set	14725
   875  0000                     _IPR1bits	set	14721
   876  0000                     _IPR3bits	set	14723
   877  0000                     _IPR6bits	set	14726
   878  0000                     _IPR2bits	set	14722
   879  0000                     _PIE5bits	set	14741
   880  0000                     _PIE1bits	set	14737
   881  0000                     _PIR5bits	set	14757
   882  0000                     _PIR1bits	set	14753
   883  0000                     _PLLR	set	118496
   884  0000                     _SPI1SDIPPS	set	15071
   885  0000                     _U1RXPPS	set	15077
   886  0000                     _RC6PPS	set	14870
   887  0000                     _RC5PPS	set	14869
   888  0000                     _INT1PPS	set	15041
   889  0000                     _RD1PPS	set	14873
   890  0000                     _INT0PPS	set	15040
   891  0000                     _RC3PPS	set	14867
   892  0000                     _RB6PPS	set	14862
   893  0000                     _SPI1SCKPPS	set	15070
   894  0000                     _U2RXPPS	set	15080
   895  0000                     _SLRCONF	set	14995
   896  0000                     _SLRCONE	set	14979
   897  0000                     _SLRCOND	set	14963
   898  0000                     _SLRCONC	set	14947
   899  0000                     _SLRCONB	set	14931
   900  0000                     _SLRCONA	set	14915
   901  0000                     _ODCOND	set	14962
   902  0000                     _ODCONC	set	14946
   903  0000                     _ODCONB	set	14930
   904  0000                     _ODCONA	set	14914
   905  0000                     _ODCONF	set	14994
   906  0000                     _ODCONE	set	14978
   907  0000                     _WPUC	set	14945
   908  0000                     _WPUA	set	14913
   909  0000                     _WPUB	set	14929
   910  0000                     _WPUE	set	14977
   911  0000                     _WPUF	set	14993
   912  0000                     _WPUD	set	14961
   913  0000                     _ANSELA	set	14912
   914  0000                     _ANSELF	set	14992
   915  0000                     _ANSELE	set	14976
   916  0000                     _ANSELB	set	14928
   917  0000                     _ANSELC	set	14944
   918  0000                     _ANSELD	set	14960
   919  0000                     _DMA2SSA	set	15321
   920  0000                     _DMA1SSA	set	15353
   921  0000                     _DMA2DSZ	set	15310
   922  0000                     _DMA2SSZ	set	15319
   923  0000                     _DMA2DSA	set	15312
   924  0000                     _DMA1DSZ	set	15342
   925  0000                     _DMA1SSZ	set	15351
   926  0000                     _DMA1DSA	set	15344
   927  0000                     _DMA1CON0bits	set	15356
   928  0000                     _DMA1CON1bits	set	15357
   929  0000                     _DMA2CON0	set	15324
   930  0000                     _DMA2AIRQ	set	15326
   931  0000                     _DMA2SIRQ	set	15327
   932  0000                     _DMA2CON1	set	15325
   933  0000                     _DMA1CON0	set	15356
   934  0000                     _DMA1AIRQ	set	15358
   935  0000                     _DMA1SIRQ	set	15359
   936  0000                     _DMA1CON1	set	15357
   937  0000                     _CLKRCON	set	15589
   938  0000                     _CLKRCLK	set	15590
   939  0000                     _SPI1INTFbits	set	15642
   940  0000                     _SPI1RXB	set	15632
   941  0000                     _SPI1TXB	set	15633
   942  0000                     _SPI1TCNTL	set	15634
   943  0000                     _SPI1CON0	set	15636
   944  0000                     _SPI1CLK	set	15644
   945  0000                     _SPI1BAUD	set	15641
   946  0000                     _SPI1CON2	set	15638
   947  0000                     _SPI1CON1	set	15637
   948  0000                     _U2RXB	set	15824
   949  0000                     _U2TXB	set	15826
   950  0000                     _U2ERRIE	set	15842
   951  0000                     _U2ERRIR	set	15841
   952  0000                     _U2UIR	set	15840
   953  0000                     _U2FIFO	set	15839
   954  0000                     _U2BRGH	set	15838
   955  0000                     _U2BRGL	set	15837
   956  0000                     _U2CON2	set	15836
   957  0000                     _U2CON1	set	15835
   958  0000                     _U2CON0	set	15834
   959  0000                     _U2P3L	set	15832
   960  0000                     _U2P2L	set	15830
   961  0000                     _U2P1L	set	15828
   962  0000                     _U1RXB	set	15848
   963  0000                     _U1TXB	set	15850
   964  0000                     _U1ERRIE	set	15866
   965  0000                     _U1ERRIR	set	15865
   966  0000                     _U1UIR	set	15864
   967  0000                     _U1FIFO	set	15863
   968  0000                     _U1BRGH	set	15862
   969  0000                     _U1BRGL	set	15861
   970  0000                     _U1CON2	set	15860
   971  0000                     _U1CON1	set	15859
   972  0000                     _U1CON0	set	15858
   973  0000                     _U1P3H	set	15857
   974  0000                     _U1P3L	set	15856
   975  0000                     _U1P2H	set	15855
   976  0000                     _U1P2L	set	15854
   977  0000                     _U1P1H	set	15853
   978  0000                     _U1P1L	set	15852
   979  0000                     _FVRCON	set	16065
   980  0000                     _ADFLTRL	set	16102
   981  0000                     _ADFLTRH	set	16103
   982  0000                     _ADCON0bits	set	16120
   983  0000                     _ADCON0	set	16120
   984  0000                     _ADCLK	set	16127
   985  0000                     _ADACT	set	16126
   986  0000                     _ADREF	set	16125
   987  0000                     _ADSTAT	set	16124
   988  0000                     _ADCON3	set	16123
   989  0000                     _ADCON2	set	16122
   990  0000                     _ADCON1	set	16121
   991  0000                     _ADPREH	set	16119
   992  0000                     _ADPREL	set	16118
   993  0000                     _ADCAP	set	16117
   994  0000                     _ADACQH	set	16116
   995  0000                     _ADACQL	set	16115
   996  0000                     _ADPCH	set	16113
   997  0000                     _ADRPT	set	16108
   998  0000                     _ADACCU	set	16106
   999  0000                     _ADSTPTH	set	16101
  1000  0000                     _ADSTPTL	set	16100
  1001  0000                     _ADUTHH	set	16097
  1002  0000                     _ADUTHL	set	16096
  1003  0000                     _ADLTHH	set	16095
  1004  0000                     _ADLTHL	set	16094
  1005  0000                     _CCPTMRS1bits	set	16223
  1006  0000                     _LATCbits	set	16316
  1007  0000                     _LATDbits	set	16317
  1008  0000                     _PORTBbits	set	16331
  1009  0000                     _T2CON	set	16300
  1010  0000                     _T2TMR	set	16298
  1011  0000                     _T2PR	set	16299
  1012  0000                     _T2RST	set	16303
  1013  0000                     _T2HLT	set	16301
  1014  0000                     _T2CLKCON	set	16302
  1015  0000                     _PWM8DCL	set	16224
  1016  0000                     _PWM8DCH	set	16225
  1017  0000                     _PWM8CON	set	16226
  1018  0000                     _LATEbits	set	16318
  1019  0000                     _T5CONbits	set	16282
  1020  0000                     _T5CON	set	16282
  1021  0000                     _TMR5L	set	16280
  1022  0000                     _TMR5H	set	16281
  1023  0000                     _T5CLK	set	16285
  1024  0000                     _T5GATE	set	16284
  1025  0000                     _T5GCON	set	16283
  1026  0000                     _T6CON	set	16276
  1027  0000                     _T6TMR	set	16274
  1028  0000                     _T6PR	set	16275
  1029  0000                     _T6RST	set	16279
  1030  0000                     _T6HLT	set	16277
  1031  0000                     _T6CLKCON	set	16278
  1032  0000                     _TRISD	set	16325
  1033  0000                     _TRISC	set	16324
  1034  0000                     _TRISB	set	16323
  1035  0000                     _TRISA	set	16322
  1036  0000                     _TRISF	set	16327
  1037  0000                     _TRISE	set	16326
  1038  0000                     _LATC	set	16316
  1039  0000                     _LATB	set	16315
  1040  0000                     _LATF	set	16319
  1041  0000                     _LATA	set	16314
  1042  0000                     _LATD	set	16317
  1043  0000                     _LATE	set	16318
  1044  0000                     _IVTLOCKbits	set	16340
  1045  0000                     _IVTLOCK	set	16340
  1046  0000                     _INTCON0bits	set	16338
  1047  0000                     _GIE	set	130711
  1048  00FEE1                     
  1049                           ; BSR set to: 57
  1050  00FEE1  20                 	db	32
  1051  00FEE2  4D                 	db	77	;'M'
  1052  00FEE3  65                 	db	101	;'e'
  1053  00FEE4  73                 	db	115	;'s'
  1054  00FEE5  67                 	db	103	;'g'
  1055  00FEE6  20                 	db	32
  1056  00FEE7  25                 	db	37
  1057  00FEE8  64                 	db	100	;'d'
  1058  00FEE9  20                 	db	32
  1059  00FEEA  53                 	db	83	;'S'
  1060  00FEEB  74                 	db	116	;'t'
  1061  00FEEC  61                 	db	97	;'a'
  1062  00FEED  63                 	db	99	;'c'
  1063  00FEEE  6B                 	db	107	;'k'
  1064  00FEEF  20                 	db	32
  1065  00FEF0  25                 	db	37
  1066  00FEF1  64                 	db	100	;'d'
  1067  00FEF2  20                 	db	32
  1068  00FEF3  20                 	db	32
  1069  00FEF4  20                 	db	32
  1070  00FEF5  20                 	db	32
  1071  00FEF6  20                 	db	32
  1072  00FEF7  20                 	db	32
  1073  00FEF8  00                 	db	0
  1074  00FEF9                     STR_27:
  1075                           
  1076                           ; BSR set to: 57
  1077  00FEF9  20                 	db	32
  1078  00FEFA  20                 	db	32
  1079  00FEFB  20                 	db	32
  1080  00FEFC  20                 	db	32
  1081  00FEFD  20                 	db	32
  1082  00FEFE  20                 	db	32
  1083  00FEFF  20                 	db	32
  1084  00FF00  20                 	db	32
  1085  00FF01  20                 	db	32
  1086  00FF02  20                 	db	32
  1087  00FF03  20                 	db	32
  1088  00FF04  20                 	db	32
  1089  00FF05  20                 	db	32
  1090  00FF06  20                 	db	32
  1091  00FF07  20                 	db	32
  1092  00FF08  20                 	db	32
  1093  00FF09  20                 	db	32
  1094  00FF0A  20                 	db	32
  1095  00FF0B  00                 	db	0
  1096  00FF0C                     STR_17:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF0C  48                 	db	72	;'H'
  1100  00FF0D  45                 	db	69	;'E'
  1101  00FF0E  4C                 	db	76	;'L'
  1102  00FF0F  50                 	db	80	;'P'
  1103  00FF10  20                 	db	32
  1104  00FF11  25                 	db	37
  1105  00FF12  73                 	db	115	;'s'
  1106  00FF13  20                 	db	32
  1107  00FF14  20                 	db	32
  1108  00FF15  20                 	db	32
  1109  00FF16  20                 	db	32
  1110  00FF17  20                 	db	32
  1111  00FF18  20                 	db	32
  1112  00FF19  20                 	db	32
  1113  00FF1A  20                 	db	32
  1114  00FF1B  20                 	db	32
  1115  00FF1C  20                 	db	32
  1116  00FF1D  20                 	db	32
  1117  00FF1E  00                 	db	0
  1118  00FF1F                     
  1119                           ; BSR set to: 57
  1120  00FF1F  44                 	db	68	;'D'
  1121  00FF20  49                 	db	73	;'I'
  1122  00FF21  53                 	db	83	;'S'
  1123  00FF22  50                 	db	80	;'P'
  1124  00FF23  4C                 	db	76	;'L'
  1125  00FF24  41                 	db	65	;'A'
  1126  00FF25  59                 	db	89	;'Y'
  1127  00FF26  20                 	db	32
  1128  00FF27  25                 	db	37
  1129  00FF28  73                 	db	115	;'s'
  1130  00FF29  20                 	db	32
  1131  00FF2A  20                 	db	32
  1132  00FF2B  20                 	db	32
  1133  00FF2C  20                 	db	32
  1134  00FF2D  20                 	db	32
  1135  00FF2E  20                 	db	32
  1136  00FF2F  20                 	db	32
  1137  00FF30  20                 	db	32
  1138  00FF31  00                 	db	0
  1139  00FF32                     STR_11:
  1140                           
  1141                           ; BSR set to: 57
  1142  00FF32  25                 	db	37
  1143  00FF33  64                 	db	100	;'d'
  1144  00FF34  20                 	db	32
  1145  00FF35  25                 	db	37
  1146  00FF36  32                 	db	50	;'2'
  1147  00FF37  2E                 	db	46
  1148  00FF38  32                 	db	50	;'2'
  1149  00FF39  66                 	db	102	;'f'
  1150  00FF3A  2C                 	db	44
  1151  00FF3B  20                 	db	32
  1152  00FF3C  25                 	db	37
  1153  00FF3D  6C                 	db	108	;'l'
  1154  00FF3E  75                 	db	117	;'u'
  1155  00FF3F  20                 	db	32
  1156  00FF40  20                 	db	32
  1157  00FF41  20                 	db	32
  1158  00FF42  23                 	db	35
  1159  00FF43  00                 	db	0
  1160  00FF44                     STR_8:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF44  20                 	db	32
  1164  00FF45  56                 	db	86	;'V'
  1165  00FF46  54                 	db	84	;'T'
  1166  00FF47  45                 	db	69	;'E'
  1167  00FF48  52                 	db	82	;'R'
  1168  00FF49  4D                 	db	77	;'M'
  1169  00FF4A  20                 	db	32
  1170  00FF4B  23                 	db	35
  1171  00FF4C  32                 	db	50	;'2'
  1172  00FF4D  20                 	db	32
  1173  00FF4E  20                 	db	32
  1174  00FF4F  20                 	db	32
  1175  00FF50  20                 	db	32
  1176  00FF51  20                 	db	32
  1177  00FF52  20                 	db	32
  1178  00FF53  20                 	db	32
  1179  00FF54  00                 	db	0
  1180  00FF55                     STR_4:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FF55  20                 	db	32
  1184  00FF56  4E                 	db	78	;'N'
  1185  00FF57  53                 	db	83	;'S'
  1186  00FF58  41                 	db	65	;'A'
  1187  00FF59  53                 	db	83	;'S'
  1188  00FF5A  50                 	db	80	;'P'
  1189  00FF5B  4F                 	db	79	;'O'
  1190  00FF5C  4F                 	db	79	;'O'
  1191  00FF5D  4B                 	db	75	;'K'
  1192  00FF5E  20                 	db	32
  1193  00FF5F  20                 	db	32
  1194  00FF60  20                 	db	32
  1195  00FF61  20                 	db	32
  1196  00FF62  20                 	db	32
  1197  00FF63  20                 	db	32
  1198  00FF64  20                 	db	32
  1199  00FF65  00                 	db	0
  1200  00FF66                     STR_1:
  1201                           
  1202                           ; BSR set to: 57
  1203  00FF66  20                 	db	32
  1204  00FF67  4D                 	db	77	;'M'
  1205  00FF68  42                 	db	66	;'B'
  1206  00FF69  4D                 	db	77	;'M'
  1207  00FF6A  43                 	db	67	;'C'
  1208  00FF6B  20                 	db	32
  1209  00FF6C  53                 	db	83	;'S'
  1210  00FF6D  4F                 	db	79	;'O'
  1211  00FF6E  4C                 	db	76	;'L'
  1212  00FF6F  41                 	db	65	;'A'
  1213  00FF70  52                 	db	82	;'R'
  1214  00FF71  4D                 	db	77	;'M'
  1215  00FF72  4F                 	db	79	;'O'
  1216  00FF73  4E                 	db	78	;'N'
  1217  00FF74  20                 	db	32
  1218  00FF75  20                 	db	32
  1219  00FF76  00                 	db	0
  1220  00FF77                     STR_5:
  1221                           
  1222                           ; BSR set to: 57
  1223  00FF77  20                 	db	32
  1224  00FF78  53                 	db	83	;'S'
  1225  00FF79  45                 	db	69	;'E'
  1226  00FF7A  51                 	db	81	;'Q'
  1227  00FF7B  55                 	db	85	;'U'
  1228  00FF7C  45                 	db	69	;'E'
  1229  00FF7D  4E                 	db	78	;'N'
  1230  00FF7E  43                 	db	67	;'C'
  1231  00FF7F  45                 	db	69	;'E'
  1232  00FF80  20                 	db	32
  1233  00FF81  54                 	db	84	;'T'
  1234  00FF82  45                 	db	69	;'E'
  1235  00FF83  53                 	db	83	;'S'
  1236  00FF84  54                 	db	84	;'T'
  1237  00FF85  20                 	db	32
  1238  00FF86  20                 	db	32
  1239  00FF87  00                 	db	0
  1240  00FF88                     STR_21:
  1241                           
  1242                           ; BSR set to: 57
  1243  00FF88  76                 	db	118	;'v'
  1244  00FF89  74                 	db	116	;'t'
  1245  00FF8A  65                 	db	101	;'e'
  1246  00FF8B  72                 	db	114	;'r'
  1247  00FF8C  6D                 	db	109	;'m'
  1248  00FF8D  20                 	db	32
  1249  00FF8E  25                 	db	37
  1250  00FF8F  78                 	db	120	;'x'
  1251  00FF90  3A                 	db	58	;':'
  1252  00FF91  25                 	db	37
  1253  00FF92  78                 	db	120	;'x'
  1254  00FF93  20                 	db	32
  1255  00FF94  20                 	db	32
  1256  00FF95  20                 	db	32
  1257  00FF96  00                 	db	0
  1258  00FF97                     STR_2:
  1259                           
  1260                           ; BSR set to: 57
  1261  00FF97  20                 	db	32
  1262  00FF98  56                 	db	86	;'V'
  1263  00FF99  65                 	db	101	;'e'
  1264  00FF9A  72                 	db	114	;'r'
  1265  00FF9B  73                 	db	115	;'s'
  1266  00FF9C  69                 	db	105	;'i'
  1267  00FF9D  6F                 	db	111	;'o'
  1268  00FF9E  6E                 	db	110	;'n'
  1269  00FF9F  20                 	db	32
  1270  00FFA0  25                 	db	37
  1271  00FFA1  73                 	db	115	;'s'
  1272  00FFA2  20                 	db	32
  1273  00FFA3  20                 	db	32
  1274  00FFA4  20                 	db	32
  1275  00FFA5  00                 	db	0
  1276  00FFA6                     STR_9:
  1277                           
  1278                           ; BSR set to: 57
  1279  00FFA6  25                 	db	37
  1280  00FFA7  64                 	db	100	;'d'
  1281  00FFA8  20                 	db	32
  1282  00FFA9  25                 	db	37
  1283  00FFAA  32                 	db	50	;'2'
  1284  00FFAB  2E                 	db	46
  1285  00FFAC  32                 	db	50	;'2'
  1286  00FFAD  66                 	db	102	;'f'
  1287  00FFAE  20                 	db	32
  1288  00FFAF  20                 	db	32
  1289  00FFB0  20                 	db	32
  1290  00FFB1  23                 	db	35
  1291  00FFB2  00                 	db	0
  1292  00FFB3                     STR_15:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFB3  4E                 	db	78	;'N'
  1296  00FFB4  6F                 	db	111	;'o'
  1297  00FFB5  76                 	db	118	;'v'
  1298  00FFB6  20                 	db	32
  1299  00FFB7  20                 	db	32
  1300  00FFB8  39                 	db	57	;'9'
  1301  00FFB9  20                 	db	32
  1302  00FFBA  32                 	db	50	;'2'
  1303  00FFBB  30                 	db	48	;'0'
  1304  00FFBC  31                 	db	49	;'1'
  1305  00FFBD  39                 	db	57	;'9'
  1306  00FFBE  00                 	db	0
  1307  00FFBF                     STR_19:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFBF  25                 	db	37
  1311  00FFC0  73                 	db	115	;'s'
  1312  00FFC1  20                 	db	32
  1313  00FFC2  20                 	db	32
  1314  00FFC3  20                 	db	32
  1315  00FFC4  20                 	db	32
  1316  00FFC5  20                 	db	32
  1317  00FFC6  20                 	db	32
  1318  00FFC7  20                 	db	32
  1319  00FFC8  00                 	db	0
  1320  00FFC9                     STR_16:
  1321                           
  1322                           ; BSR set to: 57
  1323  00FFC9  31                 	db	49	;'1'
  1324  00FFCA  37                 	db	55	;'7'
  1325  00FFCB  3A                 	db	58	;':'
  1326  00FFCC  32                 	db	50	;'2'
  1327  00FFCD  38                 	db	56	;'8'
  1328  00FFCE  3A                 	db	58	;':'
  1329  00FFCF  34                 	db	52	;'4'
  1330  00FFD0  34                 	db	52	;'4'
  1331  00FFD1  00                 	db	0
  1332  00FFD2                     STR_3:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FFD2  30                 	db	48	;'0'
  1336  00FFD3  2E                 	db	46
  1337  00FFD4  39                 	db	57	;'9'
  1338  00FFD5  31                 	db	49	;'1'
  1339  00FFD6  00                 	db	0
  1340  00FFD7                     STR_34:
  1341                           
  1342                           ; BSR set to: 57
  1343  00FFD7  49                 	db	73	;'I'
  1344  00FFD8  4E                 	db	78	;'N'
  1345  00FFD9  46                 	db	70	;'F'
  1346  00FFDA  00                 	db	0
  1347  00FFDB                     STR_38:
  1348                           
  1349                           ; BSR set to: 57
  1350  00FFDB  4E                 	db	78	;'N'
  1351  00FFDC  41                 	db	65	;'A'
  1352  00FFDD  4E                 	db	78	;'N'
  1353  00FFDE  00                 	db	0
  1354  00FFDF                     STR_35:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FFDF  69                 	db	105	;'i'
  1358  00FFE0  6E                 	db	110	;'n'
  1359  00FFE1  66                 	db	102	;'f'
  1360  00FFE2  00                 	db	0
  1361  00FFE3                     STR_39:
  1362                           
  1363                           ; BSR set to: 57
  1364  00FFE3  6E                 	db	110	;'n'
  1365  00FFE4  61                 	db	97	;'a'
  1366  00FFE5  6E                 	db	110	;'n'
  1367  00FFE6  00                 	db	0
  1368  00FFE7                     STR_65:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFE7  6C                 	db	108	;'l'
  1372  00FFE8  58                 	db	88	;'X'
  1373  00FFE9  00                 	db	0
  1374  00FFEA                     STR_42:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FFEA  6C                 	db	108	;'l'
  1378  00FFEB  64                 	db	100	;'d'
  1379  00FFEC  00                 	db	0
  1380  00FFED                     STR_51:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FFED  6C                 	db	108	;'l'
  1384  00FFEE  66                 	db	102	;'f'
  1385  00FFEF  00                 	db	0
  1386  00FFF0                     STR_46:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFF0  6C                 	db	108	;'l'
  1390  00FFF1  69                 	db	105	;'i'
  1391  00FFF2  00                 	db	0
  1392  00FFF3                     STR_56:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FFF3  6C                 	db	108	;'l'
  1396  00FFF4  75                 	db	117	;'u'
  1397  00FFF5  00                 	db	0
  1398  00FFF6                     STR_61:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFF6  6C                 	db	108	;'l'
  1402  00FFF7  78                 	db	120	;'x'
  1403  00FFF8  00                 	db	0
  1404  00FFF9                     STR_13:
  1405                           
  1406                           ; BSR set to: 57
  1407  00FFF9  25                 	db	37
  1408  00FFFA  63                 	db	99	;'c'
  1409  00FFFB  00                 	db	0
  1410  00FFFC                     STR_12:
  1411                           
  1412                           ; BSR set to: 57
  1413  00FFFC  25                 	db	37
  1414  00FFFD  73                 	db	115	;'s'
  1415  00FFFE  00                 	db	0
  1416  0000                     
  1417                           ; #config settings
  1418  00FFFF  00                 	db	0	; dummy byte at the end
  1419  0000                     
  1420                           	psect	cinit
  1421  0173D6                     __pcinit:
  1422                           	opt callstack 0
  1423  0173D6                     start_initialization:
  1424                           	opt callstack 0
  1425  0173D6                     __initialization:
  1426                           	opt callstack 0
  1427                           
  1428                           ; Initialize objects allocated to BANK1 (187 bytes)
  1429                           ; load TBLPTR registers with __pidataBANK1
  1430  0173D6  0E60               	movlw	low __pidataBANK1
  1431  0173D8  6EF6               	movwf	tblptrl,c
  1432  0173DA  0E75               	movlw	high __pidataBANK1
  1433  0173DC  6EF7               	movwf	tblptrh,c
  1434  0173DE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1435  0173E0  6EF8               	movwf	tblptru,c
  1436  0173E2  EE00  F100         	lfsr	0,__pdataBANK1
  1437  0173E6  EE20 F0BB          	lfsr	2,187
  1438  0173EA                     copy_data0:
  1439  0173EA  0009               	tblrd		*+
  1440  0173EC  006F FFD7 FFEE     	movff	tablat,postinc0
  1441  0173F2  50DD               	movf	postdec2,w,c
  1442  0173F4  50D9               	movf	fsr2l,w,c
  1443  0173F6  E1F9               	bnz	copy_data0
  1444                           
  1445                           ; Initialize objects allocated to BANK0 (67 bytes)
  1446                           ; load TBLPTR registers with __pidataBANK0
  1447  0173F8  0E3E               	movlw	low __pidataBANK0
  1448  0173FA  6EF6               	movwf	tblptrl,c
  1449  0173FC  0E84               	movlw	high __pidataBANK0
  1450  0173FE  6EF7               	movwf	tblptrh,c
  1451  017400  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1452  017402  6EF8               	movwf	tblptru,c
  1453  017404  EE00  F0A3         	lfsr	0,__pdataBANK0
  1454  017408  EE20 F043          	lfsr	2,67
  1455  01740C                     copy_data1:
  1456  01740C  0009               	tblrd		*+
  1457  01740E  006F FFD7 FFEE     	movff	tablat,postinc0
  1458  017414  50DD               	movf	postdec2,w,c
  1459  017416  50D9               	movf	fsr2l,w,c
  1460  017418  E1F9               	bnz	copy_data1
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  01741A  EE01  F200         	lfsr	0,__pbssBANK6
  1464  01741E  EE20 F0FF          	lfsr	2,255
  1465  017422                     clear_0:
  1466  017422  6AEE               	clrf	postinc0,c
  1467  017424  50DD               	movf	postdec2,w,c
  1468  017426  50D9               	movf	fsr2l,w,c
  1469  017428  E1FC               	bnz	clear_0
  1470  01742A  50DA               	movf	fsr2h,w,c
  1471  01742C  E1FA               	bnz	clear_0
  1472                           
  1473                           ; Clear objects allocated to BANK5 (255 bytes)
  1474  01742E  EE01  F100         	lfsr	0,__pbssBANK5
  1475  017432  EE20 F0FF          	lfsr	2,255
  1476  017436                     clear_1:
  1477  017436  6AEE               	clrf	postinc0,c
  1478  017438  50DD               	movf	postdec2,w,c
  1479  01743A  50D9               	movf	fsr2l,w,c
  1480  01743C  E1FC               	bnz	clear_1
  1481  01743E  50DA               	movf	fsr2h,w,c
  1482  017440  E1FA               	bnz	clear_1
  1483                           
  1484                           ; Clear objects allocated to BANK4 (218 bytes)
  1485  017442  EE01  F000         	lfsr	0,__pbssBANK4
  1486  017446  0EDA               	movlw	218
  1487  017448                     clear_2:
  1488  017448  6AEE               	clrf	postinc0,c
  1489  01744A  06E8               	decf	wreg,f,c
  1490  01744C  E1FD               	bnz	clear_2
  1491                           
  1492                           ; Clear objects allocated to BANK3 (198 bytes)
  1493  01744E  EE00  F300         	lfsr	0,__pbssBANK3
  1494  017452  0EC6               	movlw	198
  1495  017454                     clear_3:
  1496  017454  6AEE               	clrf	postinc0,c
  1497  017456  06E8               	decf	wreg,f,c
  1498  017458  E1FD               	bnz	clear_3
  1499                           
  1500                           ; Clear objects allocated to BANK2 (252 bytes)
  1501  01745A  EE00  F200         	lfsr	0,__pbssBANK2
  1502  01745E  0EFC               	movlw	252
  1503  017460                     clear_4:
  1504  017460  6AEE               	clrf	postinc0,c
  1505  017462  06E8               	decf	wreg,f,c
  1506  017464  E1FD               	bnz	clear_4
  1507                           
  1508                           ; Clear objects allocated to BANK1 (64 bytes)
  1509  017466  EE00  F1BB         	lfsr	0,__pbssBANK1
  1510  01746A  0E40               	movlw	64
  1511  01746C                     clear_5:
  1512  01746C  6AEE               	clrf	postinc0,c
  1513  01746E  06E8               	decf	wreg,f,c
  1514  017470  E1FD               	bnz	clear_5
  1515                           
  1516                           ; Clear objects allocated to BANK0 (67 bytes)
  1517  017472  EE00  F060         	lfsr	0,__pbssBANK0
  1518  017476  0E43               	movlw	67
  1519  017478                     clear_6:
  1520  017478  6AEE               	clrf	postinc0,c
  1521  01747A  06E8               	decf	wreg,f,c
  1522  01747C  E1FD               	bnz	clear_6
  1523                           
  1524                           ; Clear objects allocated to COMRAM (52 bytes)
  1525  01747E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1526  017482  0E34               	movlw	52
  1527  017484                     clear_7:
  1528  017484  6AEE               	clrf	postinc0,c
  1529  017486  06E8               	decf	wreg,f,c
  1530  017488  E1FD               	bnz	clear_7
  1531                           
  1532                           ;
  1533                           ; Setup IVTBASE
  1534                           ;
  1535  01748A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1536  01748C  6ED5               	movwf	213,c
  1537  01748E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1538  017490  6ED6               	movwf	214,c
  1539  017492  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1540  017494  6ED7               	movwf	215,c
  1541  017496                     end_of_initialization:
  1542                           	opt callstack 0
  1543  017496                     __end_of__initialization:
  1544                           	opt callstack 0
  1545  017496  0100               	movlb	0
  1546  017498  EFEF  F09F         	goto	_main	;jump to C main() function
  1547                           
  1548                           	psect	bssCOMRAM
  1549  000001                     __pbssCOMRAM:
  1550                           	opt callstack 0
  1551  000001                     _TMR6_InterruptHandler:
  1552                           	opt callstack 0
  1553  000001                     	ds	3
  1554  000004                     _ADCC_ADTI_InterruptHandler:
  1555                           	opt callstack 0
  1556  000004                     	ds	3
  1557  000007                     _ADCC_ADI_InterruptHandler:
  1558                           	opt callstack 0
  1559  000007                     	ds	3
  1560  00000A                     _UART1_TxInterruptHandler:
  1561                           	opt callstack 0
  1562  00000A                     	ds	3
  1563  00000D                     _UART1_RxInterruptHandler:
  1564                           	opt callstack 0
  1565  00000D                     	ds	3
  1566  000010                     _UART2_TxInterruptHandler:
  1567                           	opt callstack 0
  1568  000010                     	ds	3
  1569  000013                     _UART2_RxInterruptHandler:
  1570                           	opt callstack 0
  1571  000013                     	ds	3
  1572  000016                     _INT1_InterruptHandler:
  1573                           	opt callstack 0
  1574  000016                     	ds	3
  1575  000019                     _INT0_InterruptHandler:
  1576                           	opt callstack 0
  1577  000019                     	ds	3
  1578  00001C                     _nout:
  1579                           	opt callstack 0
  1580  00001C                     	ds	2
  1581  00001E                     _width:
  1582                           	opt callstack 0
  1583  00001E                     	ds	2
  1584  000020                     _prec:
  1585                           	opt callstack 0
  1586  000020                     	ds	2
  1587  000022                     _flags:
  1588                           	opt callstack 0
  1589  000022                     	ds	2
  1590  000024                     TMR5_ISR@CountCallBack:
  1591                           	opt callstack 0
  1592  000024                     	ds	2
  1593  000026                     _timer5ReloadVal:
  1594                           	opt callstack 0
  1595  000026                     	ds	2
  1596  000028                     _mode_sw:
  1597                           	opt callstack 0
  1598  000028                     	ds	1
  1599  000029                     _uart2RxCount:
  1600                           	opt callstack 0
  1601  000029                     	ds	1
  1602  00002A                     _uart2RxTail:
  1603                           	opt callstack 0
  1604  00002A                     	ds	1
  1605  00002B                     _uart2RxHead:
  1606                           	opt callstack 0
  1607  00002B                     	ds	1
  1608  00002C                     _uart2TxBufferRemaining:
  1609                           	opt callstack 0
  1610  00002C                     	ds	1
  1611  00002D                     _uart2TxTail:
  1612                           	opt callstack 0
  1613  00002D                     	ds	1
  1614  00002E                     _uart2TxHead:
  1615                           	opt callstack 0
  1616  00002E                     	ds	1
  1617  00002F                     _uart1RxCount:
  1618                           	opt callstack 0
  1619  00002F                     	ds	1
  1620  000030                     _uart1RxTail:
  1621                           	opt callstack 0
  1622  000030                     	ds	1
  1623  000031                     _uart1RxHead:
  1624                           	opt callstack 0
  1625  000031                     	ds	1
  1626  000032                     _uart1TxBufferRemaining:
  1627                           	opt callstack 0
  1628  000032                     	ds	1
  1629  000033                     _uart1TxTail:
  1630                           	opt callstack 0
  1631  000033                     	ds	1
  1632  000034                     _uart1TxHead:
  1633                           	opt callstack 0
  1634  000034                     	ds	1
  1635                           
  1636                           	psect	bssBANK0
  1637  000060                     __pbssBANK0:
  1638                           	opt callstack 0
  1639  000060                     _tickCount:
  1640                           	opt callstack 0
  1641  000060                     	ds	24
  1642  000078                     _spi_link:
  1643                           	opt callstack 0
  1644  000078                     	ds	12
  1645  000084                     floorf@F524:
  1646                           	opt callstack 0
  1647  000084                     	ds	4
  1648  000088                     ___fpclassifyf@F463:
  1649                           	opt callstack 0
  1650  000088                     	ds	4
  1651  00008C                     _utctime:
  1652                           	opt callstack 0
  1653  00008C                     	ds	4
  1654  000090                     wdtdelay@dcount:
  1655                           	opt callstack 0
  1656  000090                     	ds	4
  1657  000094                     _P:
  1658                           	opt callstack 0
  1659  000094                     	ds	4
  1660  000098                     _TMR5_InterruptHandler:
  1661                           	opt callstack 0
  1662  000098                     	ds	3
  1663  00009B                     _seed:
  1664                           	opt callstack 0
  1665  00009B                     	ds	8
  1666                           
  1667                           	psect	dataBANK0
  1668  0000A3                     __pdataBANK0:
  1669                           	opt callstack 0
  1670  0000A3                     _R:
  1671                           	opt callstack 0
  1672  0000A3                     	ds	44
  1673  0000CF                     stoa@F1166:
  1674                           	opt callstack 0
  1675  0000CF                     	ds	7
  1676  0000D6                     _port_data:
  1677                           	opt callstack 0
  1678  0000D6                     	ds	16
  1679                           
  1680                           	psect	bssBANK1
  1681  0001BB                     __pbssBANK1:
  1682                           	opt callstack 0
  1683  0001BB                     lp_filter@smooth:
  1684                           	opt callstack 0
  1685  0001BB                     	ds	64
  1686                           
  1687                           	psect	dataBANK1
  1688  000100                     __pdataBANK1:
  1689                           	opt callstack 0
  1690  000100                     _V:
  1691                           	opt callstack 0
  1692  000100                     	ds	187
  1693                           
  1694                           	psect	bssBANK2
  1695  000200                     __pbssBANK2:
  1696                           	opt callstack 0
  1697  000200                     _C:
  1698                           	opt callstack 0
  1699  000200                     	ds	108
  1700  00026C                     _uart1TxBuffer:
  1701                           	opt callstack 0
  1702  00026C                     	ds	64
  1703  0002AC                     _dbuf:
  1704                           	opt callstack 0
  1705  0002AC                     	ds	80
  1706                           
  1707                           	psect	bssBANK3
  1708  000300                     __pbssBANK3:
  1709                           	opt callstack 0
  1710  000300                     _uart2TxBuffer:
  1711                           	opt callstack 0
  1712  000300                     	ds	64
  1713  000340                     _ring_buf2:
  1714                           	opt callstack 0
  1715  000340                     	ds	67
  1716  000383                     _ring_buf1:
  1717                           	opt callstack 0
  1718  000383                     	ds	67
  1719                           
  1720                           	psect	bssBANK4
  1721  000400                     __pbssBANK4:
  1722                           	opt callstack 0
  1723  000400                     _D:
  1724                           	opt callstack 0
  1725  000400                     	ds	218
  1726                           
  1727                           	psect	bssBANK5
  1728  000500                     __pbssBANK5:
  1729                           	opt callstack 0
  1730  000500                     _uart1RxBuffer:
  1731                           	opt callstack 0
  1732  000500                     	ds	255
  1733                           
  1734                           	psect	bssBANK6
  1735  000600                     __pbssBANK6:
  1736                           	opt callstack 0
  1737  000600                     _uart2RxBuffer:
  1738                           	opt callstack 0
  1739  000600                     	ds	255
  1740                           
  1741                           	psect	cstackBANK0
  1742  0000E6                     __pcstackBANK0:
  1743                           	opt callstack 0
  1744  0000E6                     ??_TMR6_ISR:
  1745                           
  1746                           ; 1 bytes @ 0x0
  1747  0000E6                     	ds	1
  1748  0000E7                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x1
  1751  0000E7                     	ds	4
  1752                           
  1753                           	psect	cstackCOMRAM
  1754  000055                     __pcstackCOMRAM:
  1755                           	opt callstack 0
  1756  000055                     ??_ADCC_ISR:
  1757  000055                     
  1758                           ; 1 bytes @ 0x0
  1759  000055                     	ds	1
  1760  000056                     ??_ADCC_ThresholdISR:
  1761                           
  1762                           ; 1 bytes @ 0x1
  1763  000056                     	ds	5
  1764                           
  1765 ;;
  1766 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1767 ;;
  1768 ;; *************** function _main *****************
  1769 ;; Defined at:
  1770 ;;		line 147 in file "main.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  mode            1  [STACK] enum E17005
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1  [STACK] void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels required when called:   19
  1790 ;; This function calls:
  1791 ;;		_SYSTEM_Initialize
  1792 ;;		_StartTimer
  1793 ;;		_TimerDone
  1794 ;;		_WaitMs
  1795 ;;		_check_adc_scan
  1796 ;;		_check_help
  1797 ;;		_clear_adc_scan
  1798 ;;		_convert_adc_data
  1799 ;;		_eaDogM_WriteCommand
  1800 ;;		_get_raw_result
  1801 ;;		_get_vterm_ptr
  1802 ;;		_init_display
  1803 ;;		_mode_lamp_dim
  1804 ;;		_set_display_info
  1805 ;;		_set_vterm
  1806 ;;		_sprintf
  1807 ;;		_srand
  1808 ;;		_start_adc_scan
  1809 ;;		_update_lcd
  1810 ;; This function is called by:
  1811 ;;		Startup code after reset
  1812 ;; This function uses a reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text0
  1816  013FDE                     __ptext0:
  1817                           	opt callstack 0
  1818  013FDE                     _main:
  1819                           	opt callstack 0
  1820                           
  1821                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1822  013FDE  52E6               	movf	postinc1,f,c
  1823                           
  1824                           ;main.c: 149:  UI_STATES mode;;main.c: 152:  SYSTEM_Initialize();
  1825                           
  1826                           ;incstack = 0
  1827  013FE0  EC94  F0C1         	call	_SYSTEM_Initialize	;wreg free
  1828                           
  1829                           ; BSR set to: 60
  1830                           ;main.c: 155:  (INTCON0bits.GIEH = 1);
  1831  013FE4  8ED2               	bsf	210,7,c	;volatile
  1832                           
  1833                           ; BSR set to: 60
  1834                           ;main.c: 158:  (INTCON0bits.GIEL = 1);
  1835  013FE6  8CD2               	bsf	210,6,c	;volatile
  1836                           
  1837                           ; BSR set to: 60
  1838                           ;main.c: 160:  V.ui_state = UI_STATE_INIT;
  1839  013FE8  0101               	movlb	1	; () banked
  1840  013FEA  6B00               	clrf	_V& (0+255),b	;volatile
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;main.c: 165:  WaitMs(300);
  1844  013FEC  0E2C               	movlw	44
  1845  013FEE  6EE6               	movwf	postinc1,c
  1846  013FF0  0E01               	movlw	1
  1847  013FF2  6EE6               	movwf	postinc1,c
  1848  013FF4  ECD8  F0C2         	call	_WaitMs	;wreg free
  1849                           
  1850                           ;main.c: 166:  if (PORTBbits.RB0) {
  1851  013FF8  A0CB               	btfss	203,0,c	;volatile
  1852  013FFA  D004               	goto	l10367
  1853                           
  1854                           ;main.c: 167:   mode = UI_STATE_HOST;
  1855                           ;stkvar	_mode @ sp[(-1)+0]
  1856  013FFC  0EFF               	movlw	-1
  1857  013FFE  6AE3               	clrf	plusw1,c
  1858  014000  2AE3               	incf	plusw1,f,c
  1859                           
  1860                           ;main.c: 168:  } else {
  1861  014002  D004               	goto	l10369
  1862  014004                     l10367:
  1863                           
  1864                           ;main.c: 169:   mode = UI_STATE_LOG;
  1865                           ;stkvar	_mode @ sp[(-1)+0]
  1866  014004  0EFF               	movlw	-1
  1867  014006  6AE3               	clrf	plusw1,c
  1868  014008  80E3               	bsf	plusw1,0,c
  1869  01400A  82E3               	bsf	plusw1,1,c	;indir
  1870  01400C                     l10369:
  1871                           
  1872                           ;main.c: 172:  if (mode == UI_STATE_HOST) {
  1873                           ;stkvar	_mode @ sp[(-1)+0]
  1874  01400C  0EFF               	movlw	-1
  1875  01400E  04E3               	decf	plusw1,w,c
  1876  014010  A4D8               	btfss	status,2,c
  1877  014012  D007               	goto	l1242
  1878                           
  1879                           ;main.c: 173:   do { LATDbits.LATD0 = 1; } while(0);
  1880  014014  80BD               	bsf	189,0,c	;volatile
  1881                           
  1882                           ;main.c: 174:   V.mode_pwm = 70;
  1883  014016  0E00               	movlw	0
  1884  014018  0101               	movlb	1	; () banked
  1885  01401A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1886  01401C  0E46               	movlw	70
  1887  01401E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1888                           
  1889                           ;main.c: 175:  } else {
  1890  014020  D004               	goto	l10373
  1891  014022                     l1242:
  1892  014022  90BD               	bcf	189,0,c	;volatile
  1893                           
  1894                           ;main.c: 177:   V.mode_pwm = 0;
  1895  014024  0101               	movlb	1	; () banked
  1896  014026  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1897  014028  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1898  01402A                     l10373:
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;main.c: 179:  mode_lamp_dim(V.mode_pwm);
  1902  01402A  0060  F657  FFE6   	movff	_V+149,postinc1
  1903  014030  0060  F65B  FFE6   	movff	_V+150,postinc1
  1904  014036  EC31  F0C6         	call	_mode_lamp_dim	;wreg free
  1905  01403A  D0CE               	goto	l10415
  1906  01403C                     l10375:
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;main.c: 190:    init_display();
  1910  01403C  EC0C  F0B9         	call	_init_display	;wreg free
  1911                           
  1912                           ; BSR set to: 61
  1913                           ;main.c: 191:    eaDogM_WriteCommand(0b00001100);
  1914  014040  0E0C               	movlw	12
  1915  014042  6EE6               	movwf	postinc1,c
  1916  014044  EC85  F0C6         	call	_eaDogM_WriteCommand	;wreg free
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 193:    V.ui_state = mode;
  1920                           ;stkvar	_mode @ sp[(-1)+0]
  1921  014048  0EFF               	movlw	-1
  1922  01404A  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 194:    srand(1957);
  1926  014050  0EA5               	movlw	165
  1927  014052  6EE6               	movwf	postinc1,c
  1928  014054  0E07               	movlw	7
  1929  014056  6EE6               	movwf	postinc1,c
  1930  014058  EC0E  F0C3         	call	_srand	;wreg free
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 195:    set_vterm(0);
  1934  01405C  0E00               	movlw	0
  1935  01405E  6EE6               	movwf	postinc1,c
  1936  014060  EC08  F0C6         	call	_set_vterm	;wreg free
  1937                           
  1938                           ; BSR set to: 4
  1939                           ;main.c: 196:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1940  014064  0E66               	movlw	low STR_1
  1941  014066  6EE6               	movwf	postinc1,c
  1942  014068  0EFF               	movlw	high STR_1
  1943  01406A  6EE6               	movwf	postinc1,c
  1944  01406C  0E00               	movlw	0
  1945  01406E  6EE6               	movwf	postinc1,c
  1946  014070  0E00               	movlw	0
  1947  014072  6EE6               	movwf	postinc1,c
  1948  014074  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  1949  014078  0060  F0D7  FFE6   	movff	btemp,postinc1
  1950  01407E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1951  014084  0E04               	movlw	4
  1952  014086  6EE6               	movwf	postinc1,c
  1953  014088  EC87  F0B8         	call	_sprintf	;wreg free
  1954                           
  1955                           ;main.c: 197:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.91");
  1956  01408C  0ED2               	movlw	low STR_3
  1957  01408E  6EE6               	movwf	postinc1,c
  1958  014090  0EFF               	movlw	high STR_3
  1959  014092  6EE6               	movwf	postinc1,c
  1960  014094  0E97               	movlw	low STR_2
  1961  014096  6EE6               	movwf	postinc1,c
  1962  014098  0EFF               	movlw	high STR_2
  1963  01409A  6EE6               	movwf	postinc1,c
  1964  01409C  0E00               	movlw	0
  1965  01409E  6EE6               	movwf	postinc1,c
  1966  0140A0  0E01               	movlw	1
  1967  0140A2  6EE6               	movwf	postinc1,c
  1968  0140A4  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  1969  0140A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  1970  0140AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1971  0140B4  0E06               	movlw	6
  1972  0140B6  6EE6               	movwf	postinc1,c
  1973  0140B8  EC87  F0B8         	call	_sprintf	;wreg free
  1974                           
  1975                           ;main.c: 198:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1976  0140BC  0E55               	movlw	low STR_4
  1977  0140BE  6EE6               	movwf	postinc1,c
  1978  0140C0  0EFF               	movlw	high STR_4
  1979  0140C2  6EE6               	movwf	postinc1,c
  1980  0140C4  0E00               	movlw	0
  1981  0140C6  6EE6               	movwf	postinc1,c
  1982  0140C8  0E02               	movlw	2
  1983  0140CA  6EE6               	movwf	postinc1,c
  1984  0140CC  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  1985  0140D0  0060  F0D7  FFE6   	movff	btemp,postinc1
  1986  0140D6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1987  0140DC  0E04               	movlw	4
  1988  0140DE  6EE6               	movwf	postinc1,c
  1989  0140E0  EC87  F0B8         	call	_sprintf	;wreg free
  1990                           
  1991                           ;main.c: 199:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1992  0140E4  0E77               	movlw	low STR_5
  1993  0140E6  6EE6               	movwf	postinc1,c
  1994  0140E8  0EFF               	movlw	high STR_5
  1995  0140EA  6EE6               	movwf	postinc1,c
  1996  0140EC  0E02               	movlw	2
  1997  0140EE  6EE6               	movwf	postinc1,c
  1998  0140F0  0E00               	movlw	0
  1999  0140F2  6EE6               	movwf	postinc1,c
  2000  0140F4  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2001  0140F8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2002  0140FE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2003  014104  0E04               	movlw	4
  2004  014106  6EE6               	movwf	postinc1,c
  2005  014108  EC87  F0B8         	call	_sprintf	;wreg free
  2006                           
  2007                           ;main.c: 200:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.91");
  2008  01410C  0ED2               	movlw	low STR_3
  2009  01410E  6EE6               	movwf	postinc1,c
  2010  014110  0EFF               	movlw	high STR_3
  2011  014112  6EE6               	movwf	postinc1,c
  2012  014114  0E97               	movlw	low STR_2
  2013  014116  6EE6               	movwf	postinc1,c
  2014  014118  0EFF               	movlw	high STR_2
  2015  01411A  6EE6               	movwf	postinc1,c
  2016  01411C  0E02               	movlw	2
  2017  01411E  6EE6               	movwf	postinc1,c
  2018  014120  0E01               	movlw	1
  2019  014122  6EE6               	movwf	postinc1,c
  2020  014124  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2021  014128  0060  F0D7  FFE6   	movff	btemp,postinc1
  2022  01412E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2023  014134  0E06               	movlw	6
  2024  014136  6EE6               	movwf	postinc1,c
  2025  014138  EC87  F0B8         	call	_sprintf	;wreg free
  2026                           
  2027                           ;main.c: 201:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2028  01413C  0E44               	movlw	low STR_8
  2029  01413E  6EE6               	movwf	postinc1,c
  2030  014140  0EFF               	movlw	high STR_8
  2031  014142  6EE6               	movwf	postinc1,c
  2032  014144  0E02               	movlw	2
  2033  014146  6EE6               	movwf	postinc1,c
  2034  014148  0E02               	movlw	2
  2035  01414A  6EE6               	movwf	postinc1,c
  2036  01414C  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2037  014150  0060  F0D7  FFE6   	movff	btemp,postinc1
  2038  014156  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2039  01415C  0E04               	movlw	4
  2040  01415E  6EE6               	movwf	postinc1,c
  2041  014160  EC87  F0B8         	call	_sprintf	;wreg free
  2042                           
  2043                           ;main.c: 202:    update_lcd(0);
  2044  014164  0E00               	movlw	0
  2045  014166  6EE6               	movwf	postinc1,c
  2046  014168  EC00  F0B8         	call	_update_lcd	;wreg free
  2047                           
  2048                           ;main.c: 203:    WaitMs(3000);
  2049  01416C  0EB8               	movlw	184
  2050  01416E  6EE6               	movwf	postinc1,c
  2051  014170  0E0B               	movlw	11
  2052  014172  6EE6               	movwf	postinc1,c
  2053  014174  ECD8  F0C2         	call	_WaitMs	;wreg free
  2054                           
  2055                           ;main.c: 204:    StartTimer(TMR_DISPLAY, 250);
  2056  014178  0EFA               	movlw	250
  2057  01417A  6EE6               	movwf	postinc1,c
  2058  01417C  0E00               	movlw	0
  2059  01417E  6EE6               	movwf	postinc1,c
  2060  014180  0E0A               	movlw	10
  2061  014182  6EE6               	movwf	postinc1,c
  2062  014184  EC82  F0C2         	call	_StartTimer	;wreg free
  2063                           
  2064                           ;main.c: 205:    StartTimer(TMR_ADC, 500);
  2065  014188  0EF4               	movlw	244
  2066  01418A  6EE6               	movwf	postinc1,c
  2067  01418C  0E01               	movlw	1
  2068  01418E  6EE6               	movwf	postinc1,c
  2069  014190  0E01               	movlw	1
  2070  014192  6EE6               	movwf	postinc1,c
  2071  014194  EC82  F0C2         	call	_StartTimer	;wreg free
  2072                           
  2073                           ;main.c: 206:    StartTimer(TMR_INFO, 3000);
  2074  014198  0EB8               	movlw	184
  2075  01419A  6EE6               	movwf	postinc1,c
  2076  01419C  0E0B               	movlw	11
  2077  01419E  6EE6               	movwf	postinc1,c
  2078  0141A0  0E07               	movlw	7
  2079  0141A2  6EE6               	movwf	postinc1,c
  2080  0141A4  EC82  F0C2         	call	_StartTimer	;wreg free
  2081                           
  2082                           ;main.c: 207:    StartTimer(TMR_FLIPPER, 1500);
  2083  0141A8  0EDC               	movlw	220
  2084  0141AA  6EE6               	movwf	postinc1,c
  2085  0141AC  0E05               	movlw	5
  2086  0141AE  6EE6               	movwf	postinc1,c
  2087  0141B0  0E0B               	movlw	11
  2088  0141B2  6EE6               	movwf	postinc1,c
  2089  0141B4  EC82  F0C2         	call	_StartTimer	;wreg free
  2090                           
  2091                           ;main.c: 208:    StartTimer(TMR_HELPDIS, 3000);
  2092  0141B8  0EB8               	movlw	184
  2093  0141BA  6EE6               	movwf	postinc1,c
  2094  0141BC  0E0B               	movlw	11
  2095  0141BE  6EE6               	movwf	postinc1,c
  2096  0141C0  0E09               	movlw	9
  2097  0141C2  6EE6               	movwf	postinc1,c
  2098  0141C4  EC82  F0C2         	call	_StartTimer	;wreg free
  2099                           
  2100                           ;main.c: 210:    start_adc_scan();
  2101  0141C8  EC5B  F0BF         	call	_start_adc_scan	;wreg free
  2102                           
  2103                           ;main.c: 212:    break;
  2104  0141CC  D01C               	goto	l10417
  2105  0141CE                     l1250:
  2106                           
  2107                           ; BSR set to: 1
  2108                           ;main.c: 218:    P.SYSTEM_STABLE = 1;
  2109  0141CE  0100               	movlb	0	; () banked
  2110  0141D0  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2111                           
  2112                           ;main.c: 219:    break;
  2113  0141D2  D019               	goto	l10417
  2114  0141D4                     l1252:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;main.c: 222:    V.ui_state = UI_STATE_INIT;
  2118  0141D4  6B00               	clrf	_V& (0+255),b	;volatile
  2119                           
  2120                           ;main.c: 223:    break;
  2121  0141D6  D017               	goto	l10417
  2122  0141D8                     l10415:
  2123  0141D8  0101               	movlb	1	; () banked
  2124  0141DA  5100               	movf	_V& (0+255),w,b	;volatile
  2125  0141DC  6E3F               	movwf	(btemp+10)^0,c
  2126  0141DE  6A40               	clrf	(btemp+11)^0,c
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135  0141E0  5040               	movf	(btemp+11)^0,w,c
  2136  0141E2  0A00               	xorlw	0	; case 0
  2137  0141E4  A4D8               	btfss	status,2,c
  2138  0141E6  D7F6               	goto	l1252
  2139                           
  2140                           ; BSR set to: 1
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 5, Range of values is 0 to 5
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           16     9 (average)
  2146                           ;	Chosen strategy is simple_byte
  2147  0141E8  503F               	movf	(btemp+10)^0,w,c
  2148  0141EA  0A00               	xorlw	0	; case 0
  2149  0141EC  B4D8               	btfsc	status,2,c
  2150  0141EE  D726               	goto	l10375
  2151  0141F0  0A01               	xorlw	1	; case 1
  2152  0141F2  B4D8               	btfsc	status,2,c
  2153  0141F4  D008               	goto	l10417
  2154  0141F6  0A02               	xorlw	2	; case 3
  2155  0141F8  B4D8               	btfsc	status,2,c
  2156  0141FA  D005               	goto	l10417
  2157  0141FC  0A07               	xorlw	7	; case 4
  2158  0141FE  B4D8               	btfsc	status,2,c
  2159  014200  D7E6               	goto	l1250
  2160  014202  0A01               	xorlw	1	; case 5
  2161  014204  D7E7               	goto	l1252
  2162  014206                     l10417:
  2163                           
  2164                           ;main.c: 226:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2165  014206  0E01               	movlw	1
  2166  014208  6EE6               	movwf	postinc1,c
  2167  01420A  EC49  F0C5         	call	_TimerDone	;wreg free
  2168  01420E  5035               	movf	btemp^0,w,c
  2169  014210  B4D8               	btfsc	status,2,c
  2170  014212  D013               	goto	l10429
  2171  014214  ECC9  F0C6         	call	_check_adc_scan	;wreg free
  2172  014218  5035               	movf	btemp^0,w,c
  2173  01421A  B4D8               	btfsc	status,2,c
  2174  01421C  D00E               	goto	l10429
  2175                           
  2176                           ;main.c: 230:    convert_adc_data();
  2177  01421E  EC4D  F0BE         	call	_convert_adc_data	;wreg free
  2178                           
  2179                           ;main.c: 234:    clear_adc_scan();
  2180  014222  ECD5  F0C6         	call	_clear_adc_scan	;wreg free
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;main.c: 235:    start_adc_scan();
  2184  014226  EC5B  F0BF         	call	_start_adc_scan	;wreg free
  2185                           
  2186                           ;main.c: 236:    StartTimer(TMR_ADC, 500);
  2187  01422A  0EF4               	movlw	244
  2188  01422C  6EE6               	movwf	postinc1,c
  2189  01422E  0E01               	movlw	1
  2190  014230  6EE6               	movwf	postinc1,c
  2191  014232  0E01               	movlw	1
  2192  014234  6EE6               	movwf	postinc1,c
  2193  014236  EC82  F0C2         	call	_StartTimer	;wreg free
  2194  01423A                     l10429:
  2195                           
  2196                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2197                           
  2198                           ;main.c: 239:   if (V.ticks) {
  2199  01423A  0E0A               	movlw	10
  2200  01423C  6EE6               	movwf	postinc1,c
  2201  01423E  EC49  F0C5         	call	_TimerDone	;wreg free
  2202  014242  5035               	movf	btemp^0,w,c
  2203  014244  B4D8               	btfsc	status,2,c
  2204  014246  D0A1               	goto	l10447
  2205                           
  2206                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2207  014248  0E09               	movlw	9
  2208  01424A  6EE6               	movwf	postinc1,c
  2209  01424C  EC49  F0C5         	call	_TimerDone	;wreg free
  2210  014250  5035               	movf	btemp^0,w,c
  2211  014252  B4D8               	btfsc	status,2,c
  2212  014254  D004               	goto	l10437
  2213                           
  2214                           ;main.c: 245:     set_display_info(DIS_STR);
  2215  014256  0E00               	movlw	0
  2216  014258  6EE6               	movwf	postinc1,c
  2217  01425A  ECBE  F0C5         	call	_set_display_info	;wreg free
  2218  01425E                     l10437:
  2219                           
  2220                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2221  01425E  0060  F803  FFE6   	movff	_C,postinc1
  2222  014264  0060  F807  FFE6   	movff	_C+1,postinc1
  2223  01426A  0060  F80B  FFE6   	movff	_C+2,postinc1
  2224  014270  0060  F80F  FFE6   	movff	_C+3,postinc1
  2225  014276  0E00               	movlw	0
  2226  014278  6EE6               	movwf	postinc1,c
  2227  01427A  ECAF  F0C5         	call	_get_raw_result	;wreg free
  2228  01427E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2229  014284  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2230  01428A  0EA6               	movlw	low STR_9
  2231  01428C  6EE6               	movwf	postinc1,c
  2232  01428E  0EFF               	movlw	high STR_9
  2233  014290  6EE6               	movwf	postinc1,c
  2234  014292  0E00               	movlw	0
  2235  014294  6EE6               	movwf	postinc1,c
  2236  014296  0E00               	movlw	0
  2237  014298  6EE6               	movwf	postinc1,c
  2238  01429A  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2239  01429E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2240  0142A4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2241  0142AA  0E0A               	movlw	10
  2242  0142AC  6EE6               	movwf	postinc1,c
  2243  0142AE  EC87  F0B8         	call	_sprintf	;wreg free
  2244                           
  2245                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2246  0142B2  0060  F813  FFE6   	movff	_C+4,postinc1
  2247  0142B8  0060  F817  FFE6   	movff	_C+5,postinc1
  2248  0142BE  0060  F81B  FFE6   	movff	_C+6,postinc1
  2249  0142C4  0060  F81F  FFE6   	movff	_C+7,postinc1
  2250  0142CA  0E01               	movlw	1
  2251  0142CC  6EE6               	movwf	postinc1,c
  2252  0142CE  ECAF  F0C5         	call	_get_raw_result	;wreg free
  2253  0142D2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2254  0142D8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2255  0142DE  0EA6               	movlw	low STR_9
  2256  0142E0  6EE6               	movwf	postinc1,c
  2257  0142E2  0EFF               	movlw	high STR_9
  2258  0142E4  6EE6               	movwf	postinc1,c
  2259  0142E6  0E00               	movlw	0
  2260  0142E8  6EE6               	movwf	postinc1,c
  2261  0142EA  0E01               	movlw	1
  2262  0142EC  6EE6               	movwf	postinc1,c
  2263  0142EE  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2264  0142F2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2265  0142F8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2266  0142FE  0E0A               	movlw	10
  2267  014300  6EE6               	movwf	postinc1,c
  2268  014302  EC87  F0B8         	call	_sprintf	;wreg free
  2269                           
  2270                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2271  014306  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2272  01430C  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2273  014312  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2274  014318  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2275  01431E  0060  F823  FFE6   	movff	_C+8,postinc1
  2276  014324  0060  F827  FFE6   	movff	_C+9,postinc1
  2277  01432A  0060  F82B  FFE6   	movff	_C+10,postinc1
  2278  014330  0060  F82F  FFE6   	movff	_C+11,postinc1
  2279  014336  0E02               	movlw	2
  2280  014338  6EE6               	movwf	postinc1,c
  2281  01433A  ECAF  F0C5         	call	_get_raw_result	;wreg free
  2282  01433E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2283  014344  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2284  01434A  0E32               	movlw	low STR_11
  2285  01434C  6EE6               	movwf	postinc1,c
  2286  01434E  0EFF               	movlw	high STR_11
  2287  014350  6EE6               	movwf	postinc1,c
  2288  014352  0E00               	movlw	0
  2289  014354  6EE6               	movwf	postinc1,c
  2290  014356  0E02               	movlw	2
  2291  014358  6EE6               	movwf	postinc1,c
  2292  01435A  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  2293  01435E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2294  014364  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2295  01436A  0E0E               	movlw	14
  2296  01436C  6EE6               	movwf	postinc1,c
  2297  01436E  EC87  F0B8         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 250:    StartTimer(TMR_DISPLAY, 250);
  2300  014372  0EFA               	movlw	250
  2301  014374  6EE6               	movwf	postinc1,c
  2302  014376  0E00               	movlw	0
  2303  014378  6EE6               	movwf	postinc1,c
  2304  01437A  0E0A               	movlw	10
  2305  01437C  6EE6               	movwf	postinc1,c
  2306  01437E  EC82  F0C2         	call	_StartTimer	;wreg free
  2307                           
  2308                           ;main.c: 251:    update_lcd(0);
  2309  014382  0E00               	movlw	0
  2310  014384  6EE6               	movwf	postinc1,c
  2311  014386  EC00  F0B8         	call	_update_lcd	;wreg free
  2312  01438A                     l10447:
  2313                           
  2314                           ;main.c: 257:   check_help(V.flipper);
  2315  01438A  0101               	movlb	1	; () banked
  2316  01438C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2317  01438E  6EE6               	movwf	postinc1,c
  2318  014390  EC9A  F0AE         	call	_check_help	;wreg free
  2319                           
  2320                           ;main.c: 262:   if (V.set_sequ) {
  2321  014394  0101               	movlb	1	; () banked
  2322  014396  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2323  014398  D71F               	goto	l10415
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;main.c: 263:    if (TimerDone(TMR_INFO)) {
  2327  01439A  0E07               	movlw	7
  2328  01439C  6EE6               	movwf	postinc1,c
  2329  01439E  EC49  F0C5         	call	_TimerDone	;wreg free
  2330  0143A2  5035               	movf	btemp^0,w,c
  2331  0143A4  B4D8               	btfsc	status,2,c
  2332  0143A6  D00B               	goto	l10459
  2333                           
  2334                           ;main.c: 264:     V.set_sequ = 0;
  2335  0143A8  0101               	movlb	1	; () banked
  2336  0143AA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;main.c: 265:     set_vterm(0);
  2340  0143AC  0E00               	movlw	0
  2341  0143AE  6EE6               	movwf	postinc1,c
  2342  0143B0  EC08  F0C6         	call	_set_vterm	;wreg free
  2343                           
  2344                           ; BSR set to: 4
  2345                           ;main.c: 266:     update_lcd(0);
  2346  0143B4  0E00               	movlw	0
  2347  0143B6  6EE6               	movwf	postinc1,c
  2348  0143B8  EC00  F0B8         	call	_update_lcd	;wreg free
  2349                           
  2350                           ;main.c: 267:    } else {
  2351  0143BC  D70D               	goto	l10415
  2352  0143BE                     l10459:
  2353                           
  2354                           ;main.c: 268:     set_vterm(2);
  2355  0143BE  0E02               	movlw	2
  2356  0143C0  6EE6               	movwf	postinc1,c
  2357  0143C2  EC08  F0C6         	call	_set_vterm	;wreg free
  2358                           
  2359                           ; BSR set to: 4
  2360                           ;main.c: 269:     update_lcd(2);
  2361  0143C6  0E02               	movlw	2
  2362  0143C8  6EE6               	movwf	postinc1,c
  2363  0143CA  EC00  F0B8         	call	_update_lcd	;wreg free
  2364  0143CE  D704               	goto	l10415
  2365  0143D0                     __end_of_main:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _start_adc_scan *****************
  2369 ;; Defined at:
  2370 ;;		line 33 in file "daq.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1  [STACK] _Bool 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/4
  2381 ;;		On exit  : 1/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    7
  2391 ;; This function calls:
  2392 ;;		_ADCC_SetADIInterruptHandler
  2393 ;;		_ADCC_SetADTIInterruptHandler
  2394 ;;		_ADCC_StartConversion
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text1
  2401  017EB6                     __ptext1:
  2402                           	opt callstack 0
  2403  017EB6                     _start_adc_scan:
  2404                           	opt callstack 23
  2405                           
  2406                           ;daq.c: 35:  if (R.done)
  2407                           
  2408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2409                           ;incstack = 0
  2410  017EB6  0100               	movlb	0	; () banked
  2411  017EB8  51CE               	movf	(_R+43)& (0+255),w,b	;volatile
  2412  017EBA  A4D8               	btfss	status,2,c
  2413  017EBC  0012               	return	
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;daq.c: 38:  R.scan_index = 0;
  2417  017EBE  6BCB               	clrf	(_R+40)& (0+255),b	;volatile
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2421  017EC0  013A               	movlb	58	; () banked
  2422  017EC2  5140               	movf	64,w,b	;volatile
  2423  017EC4  006E F940  F035    	movff	14928,btemp	;volatile
  2424  017ECA  6A36               	clrf	(btemp+1)^0,c
  2425  017ECC  0060  F0D4  F036   	movff	btemp,btemp+1
  2426  017ED2  6A35               	clrf	btemp^0,c
  2427  017ED4  2635               	addwf	btemp^0,f,c
  2428  017ED6  0E00               	movlw	0
  2429  017ED8  2236               	addwfc	(btemp+1)^0,f,c
  2430  017EDA  0E77               	movlw	119
  2431  017EDC  1435               	andwf	btemp^0,w,c
  2432  017EDE  0100               	movlb	0	; () banked
  2433  017EE0  6FCC               	movwf	(_R+41)& (0+255),b	;volatile
  2434  017EE2  0E3C               	movlw	60
  2435  017EE4  1436               	andwf	(btemp+1)^0,w,c
  2436  017EE6  6FCD               	movwf	(_R+42)& (0+255),b	;volatile
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2440  017EE8  0E9A               	movlw	low _adc_int_handler
  2441  017EEA  6EE6               	movwf	postinc1,c
  2442  017EEC  0E8B               	movlw	high _adc_int_handler
  2443  017EEE  6EE6               	movwf	postinc1,c
  2444  017EF0  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2445  017EF2  6EE6               	movwf	postinc1,c
  2446  017EF4  ECD2  F0C4         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2447                           
  2448                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2449  017EF8  0EB6               	movlw	low _adc_int_t_handler
  2450  017EFA  6EE6               	movwf	postinc1,c
  2451  017EFC  0E78               	movlw	high _adc_int_t_handler
  2452  017EFE  6EE6               	movwf	postinc1,c
  2453  017F00  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2454  017F02  6EE6               	movwf	postinc1,c
  2455  017F04  ECBE  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2456                           
  2457                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  2458  017F08  0100               	movlb	0	; () banked
  2459  017F0A  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
  2460  017F0C  0B0F               	andlw	15
  2461  017F0E  6EE6               	movwf	postinc1,c
  2462  017F10  EC74  F0C6         	call	_ADCC_StartConversion	;wreg free
  2463                           
  2464                           ; BSR set to: 62
  2465  017F14  82BE               	bsf	190,1,c	;volatile
  2466                           
  2467                           ; BSR set to: 62
  2468  017F16  84BE               	bsf	190,2,c	;volatile
  2469                           
  2470                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2471  017F18  0012               	return		;funcret
  2472  017F1A                     __end_of_start_adc_scan:
  2473                           	opt callstack 0
  2474                           
  2475 ;; *************** function _ADCC_StartConversion *****************
  2476 ;; Defined at:
  2477 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  channel         1  [STACK] enum E16136
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1  [STACK] void 
  2484 ;; Registers used:
  2485 ;;		fsr1l, fsr1h
  2486 ;; Tracked objects:
  2487 ;;		On entry : 3F/0
  2488 ;;		On exit  : 3F/3E
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    6
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_start_adc_scan
  2502 ;;		_adc_int_t_handler
  2503 ;; This function uses a reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text2
  2507  018CE8                     __ptext2:
  2508                           	opt callstack 0
  2509  018CE8                     _ADCC_StartConversion:
  2510                           	opt callstack 6
  2511                           
  2512                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2513                           ;stkvar	_channel @ sp[(0)+-1]
  2514                           
  2515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2516                           ;incstack = 0
  2517  018CE8  0EFF               	movlw	-1
  2518  018CEA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2519                           
  2520                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2521  018CF0  013E               	movlb	62	; () banked
  2522  018CF2  8FF8               	bsf	248,7,b	;volatile
  2523                           
  2524                           ; BSR set to: 62
  2525                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2526  018CF4  81F8               	bsf	248,0,b	;volatile
  2527                           
  2528                           ; BSR set to: 62
  2529                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2530  018CF6  52E5               	movf	postdec1,f,c
  2531  018CF8  0012               	return		;funcret
  2532  018CFA                     __end_of_ADCC_StartConversion:
  2533                           	opt callstack 0
  2534                           
  2535 ;; *************** function _srand *****************
  2536 ;; Defined at:
  2537 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  s               2  [STACK] unsigned int 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1  [STACK] void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2546 ;; Tracked objects:
  2547 ;;		On entry : 3F/0
  2548 ;;		On exit  : 3F/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    6
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text3
  2566  01861C                     __ptext3:
  2567                           	opt callstack 0
  2568  01861C                     _srand:
  2569                           	opt callstack 24
  2570                           
  2571                           ;stkvar	_s @ sp[(0)+-2]
  2572                           
  2573                           ; BSR set to: 62
  2574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2575                           ;incstack = 0
  2576  01861C  0EFE               	movlw	-2
  2577  01861E  50E3               	movf	plusw1,w,c
  2578  018620  0FFF               	addlw	255
  2579  018622  6E3F               	movwf	(btemp+10)^0,c
  2580  018624  0EFF               	movlw	-1
  2581  018626  006F FF8C  F040    	movff	plusw1,btemp+11
  2582  01862C  0EFF               	movlw	255
  2583  01862E  2240               	addwfc	(btemp+11)^0,f,c
  2584  018630  0060  F0FC  F09B   	movff	btemp+10,_seed
  2585  018636  0060  F100  F09C   	movff	btemp+11,_seed+1
  2586  01863C  0100               	movlb	0	; () banked
  2587  01863E  6B9D               	clrf	(_seed+2)& (0+255),b
  2588  018640  6B9E               	clrf	(_seed+3)& (0+255),b
  2589  018642  6B9F               	clrf	(_seed+4)& (0+255),b
  2590  018644  6BA0               	clrf	(_seed+5)& (0+255),b
  2591  018646  6BA1               	clrf	(_seed+6)& (0+255),b
  2592  018648  6BA2               	clrf	(_seed+7)& (0+255),b
  2593                           
  2594                           ; BSR set to: 0
  2595                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2596  01864A  52E5               	movf	postdec1,f,c
  2597  01864C  52E5               	movf	postdec1,f,c
  2598  01864E  0012               	return		;funcret
  2599  018650                     __end_of_srand:
  2600                           	opt callstack 0
  2601                           
  2602 ;; *************** function _init_display *****************
  2603 ;; Defined at:
  2604 ;;		line 37 in file "eadog.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1  [STACK] void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/1
  2615 ;;		On exit  : 3F/3D
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    8
  2625 ;; This function calls:
  2626 ;;		_ringBufS_init
  2627 ;;		_send_lcd_cmd
  2628 ;;		_send_lcd_cmd_long
  2629 ;;		_wdtdelay
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text4
  2636  017218                     __ptext4:
  2637                           	opt callstack 0
  2638  017218                     _init_display:
  2639                           	opt callstack 22
  2640                           
  2641                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2642                           
  2643                           ; BSR set to: 0
  2644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2645                           ;incstack = 0
  2646  017218  0E83               	movlw	low _ring_buf1
  2647  01721A  0100               	movlb	0	; () banked
  2648  01721C  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2649  01721E  0E03               	movlw	high _ring_buf1
  2650  017220  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2651                           
  2652                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2653  017222  0E40               	movlw	low _ring_buf2
  2654  017224  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2655  017226  0E03               	movlw	high _ring_buf2
  2656  017228  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2660  01722A  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2661  017230  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2662  017236  EC0A  F0C4         	call	_ringBufS_init	;wreg free
  2663                           
  2664                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2665  01723A  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2666  017240  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2667  017246  EC0A  F0C4         	call	_ringBufS_init	;wreg free
  2668                           
  2669                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2670  01724A  84BE               	bsf	190,2,c	;volatile
  2671  01724C  84BC               	bsf	188,2,c	;volatile
  2672                           
  2673                           ;eadog.c: 46:  wdtdelay(350000);
  2674  01724E  0E30               	movlw	48
  2675  017250  6EE6               	movwf	postinc1,c
  2676  017252  0E57               	movlw	87
  2677  017254  6EE6               	movwf	postinc1,c
  2678  017256  0E05               	movlw	5
  2679  017258  6EE6               	movwf	postinc1,c
  2680  01725A  0E00               	movlw	0
  2681  01725C  6EE6               	movwf	postinc1,c
  2682  01725E  EC7E  F0C0         	call	_wdtdelay	;wreg free
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2686  017262  0E39               	movlw	57
  2687  017264  6EE6               	movwf	postinc1,c
  2688  017266  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2692  01726A  0E1D               	movlw	29
  2693  01726C  6EE6               	movwf	postinc1,c
  2694  01726E  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2698  017272  0E50               	movlw	80
  2699  017274  6EE6               	movwf	postinc1,c
  2700  017276  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2704  01727A  0E6C               	movlw	108
  2705  01727C  6EE6               	movwf	postinc1,c
  2706  01727E  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2710  017282  0E76               	movlw	118
  2711  017284  6EE6               	movwf	postinc1,c
  2712  017286  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2716  01728A  0E38               	movlw	56
  2717  01728C  6EE6               	movwf	postinc1,c
  2718  01728E  ECE2  F0C3         	call	_send_lcd_cmd_long	;wreg free
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2722  017292  0E0F               	movlw	15
  2723  017294  6EE6               	movwf	postinc1,c
  2724  017296  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2728  01729A  0E01               	movlw	1
  2729  01729C  6EE6               	movwf	postinc1,c
  2730  01729E  ECE2  F0C3         	call	_send_lcd_cmd_long	;wreg free
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2734  0172A2  0E02               	movlw	2
  2735  0172A4  6EE6               	movwf	postinc1,c
  2736  0172A6  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2740  0172AA  0E06               	movlw	6
  2741  0172AC  6EE6               	movwf	postinc1,c
  2742  0172AE  ECF6  F0C3         	call	_send_lcd_cmd	;wreg free
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;eadog.c: 57:  wdtdelay(30);
  2746  0172B2  0E1E               	movlw	30
  2747  0172B4  6EE6               	movwf	postinc1,c
  2748  0172B6  0E00               	movlw	0
  2749  0172B8  6EE6               	movwf	postinc1,c
  2750  0172BA  0E00               	movlw	0
  2751  0172BC  6EE6               	movwf	postinc1,c
  2752  0172BE  0E00               	movlw	0
  2753  0172C0  6EE6               	movwf	postinc1,c
  2754  0172C2  EC7E  F0C0         	call	_wdtdelay	;wreg free
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2758  0172C6  0E02               	movlw	2
  2759  0172C8  013D               	movlb	61	; () banked
  2760  0172CA  6F16               	movwf	22,b	;volatile
  2761                           
  2762                           ; BSR set to: 61
  2763                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2764  0172CC  0E40               	movlw	64
  2765  0172CE  6F15               	movwf	21,b	;volatile
  2766                           
  2767                           ; BSR set to: 61
  2768                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2769  0172D0  0E83               	movlw	131
  2770  0172D2  6F14               	movwf	20,b	;volatile
  2771                           
  2772                           ; BSR set to: 61
  2773                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2774  0172D4  931A               	bcf	26,1,b	;volatile
  2775                           
  2776                           ; BSR set to: 61
  2777                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2778  0172D6  0E3F               	movlw	-193
  2779  0172D8  013B               	movlb	59	; () banked
  2780  0172DA  17FD               	andwf	253,f,b	;volatile
  2781                           
  2782                           ; BSR set to: 59
  2783                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2784  0172DC  9BFD               	bcf	253,5,b	;volatile
  2785                           
  2786                           ; BSR set to: 59
  2787                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2788  0172DE  51FD               	movf	253,w,b	;volatile
  2789  0172E0  0BF9               	andlw	-7
  2790  0172E2  0902               	iorlw	2
  2791  0172E4  6FFD               	movwf	253,b	;volatile
  2792                           
  2793                           ; BSR set to: 59
  2794                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2795  0172E6  0EE7               	movlw	-25
  2796  0172E8  17FD               	andwf	253,f,b	;volatile
  2797                           
  2798                           ; BSR set to: 59
  2799                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2800  0172EA  81FD               	bsf	253,0,b	;volatile
  2801                           
  2802                           ; BSR set to: 59
  2803                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2804  0172EC  0E83               	movlw	low _ring_buf1
  2805  0172EE  6FF9               	movwf	249,b	;volatile
  2806  0172F0  0E03               	movlw	high _ring_buf1
  2807  0172F2  6FFA               	movwf	250,b	;volatile
  2808  0172F4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2809  0172F6  6FFB               	movwf	251,b	;volatile
  2810                           
  2811                           ; BSR set to: 59
  2812                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2813  0172F8  9BFC               	bcf	252,5,b	;volatile
  2814                           
  2815                           ; BSR set to: 59
  2816                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2817  0172FA  013D               	movlb	61	; () banked
  2818  0172FC  831A               	bsf	26,1,b	;volatile
  2819                           
  2820                           ; BSR set to: 61
  2821                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2822  0172FE  94BE               	bcf	190,2,c	;volatile
  2823                           
  2824                           ; BSR set to: 61
  2825                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2826  017300  0012               	return		;funcret
  2827  017302                     __end_of_init_display:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _send_lcd_cmd_long *****************
  2831 ;; Defined at:
  2832 ;;		line 114 in file "eadog.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  cmd             1  [STACK] const unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1  [STACK] void 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2841 ;; Tracked objects:
  2842 ;;		On entry : 3F/0
  2843 ;;		On exit  : 3F/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    7
  2853 ;; This function calls:
  2854 ;;		_SPI1_Exchange8bit
  2855 ;;		_wdtdelay
  2856 ;; This function is called by:
  2857 ;;		_init_display
  2858 ;; This function uses a reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text5
  2862  0187C4                     __ptext5:
  2863                           	opt callstack 0
  2864  0187C4                     _send_lcd_cmd_long:
  2865                           	opt callstack 22
  2866                           
  2867                           ; BSR set to: 61
  2868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2869                           ;incstack = 0
  2870                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2871  0187C4  92BC               	bcf	188,1,c	;volatile
  2872                           
  2873                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2874  0187C6  94BC               	bcf	188,2,c	;volatile
  2875                           
  2876                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2877                           ;stkvar	_cmd @ sp[(0)+-1]
  2878  0187C8  0EFF               	movlw	-1
  2879  0187CA  50E3               	movf	plusw1,w,c
  2880  0187CC  6EE6               	movwf	postinc1,c
  2881  0187CE  ECA0  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  2882                           
  2883                           ; BSR set to: 57
  2884                           ;eadog.c: 119:  wdtdelay(800);
  2885  0187D2  0E20               	movlw	32
  2886  0187D4  6EE6               	movwf	postinc1,c
  2887  0187D6  0E03               	movlw	3
  2888  0187D8  6EE6               	movwf	postinc1,c
  2889  0187DA  0E00               	movlw	0
  2890  0187DC  6EE6               	movwf	postinc1,c
  2891  0187DE  0E00               	movlw	0
  2892  0187E0  6EE6               	movwf	postinc1,c
  2893  0187E2  EC7E  F0C0         	call	_wdtdelay	;wreg free
  2894                           
  2895                           ; BSR set to: 0
  2896  0187E6  82BC               	bsf	188,1,c	;volatile
  2897                           
  2898                           ; BSR set to: 0
  2899                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2900  0187E8  52E5               	movf	postdec1,f,c
  2901  0187EA  0012               	return		;funcret
  2902  0187EC                     __end_of_send_lcd_cmd_long:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _send_lcd_cmd *****************
  2906 ;; Defined at:
  2907 ;;		line 102 in file "eadog.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  cmd             1  [STACK] const unsigned char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1  [STACK] void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2916 ;; Tracked objects:
  2917 ;;		On entry : 3F/0
  2918 ;;		On exit  : 3F/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    7
  2928 ;; This function calls:
  2929 ;;		_SPI1_Exchange8bit
  2930 ;;		_wdtdelay
  2931 ;; This function is called by:
  2932 ;;		_init_display
  2933 ;; This function uses a reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text6
  2937  0187EC                     __ptext6:
  2938                           	opt callstack 0
  2939  0187EC                     _send_lcd_cmd:
  2940                           	opt callstack 22
  2941                           
  2942                           ; BSR set to: 0
  2943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2944                           ;incstack = 0
  2945                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2946  0187EC  92BC               	bcf	188,1,c	;volatile
  2947                           
  2948                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2949  0187EE  94BC               	bcf	188,2,c	;volatile
  2950                           
  2951                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2952                           ;stkvar	_cmd @ sp[(0)+-1]
  2953  0187F0  0EFF               	movlw	-1
  2954  0187F2  50E3               	movf	plusw1,w,c
  2955  0187F4  6EE6               	movwf	postinc1,c
  2956  0187F6  ECA0  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  2957                           
  2958                           ; BSR set to: 57
  2959                           ;eadog.c: 107:  wdtdelay(30);
  2960  0187FA  0E1E               	movlw	30
  2961  0187FC  6EE6               	movwf	postinc1,c
  2962  0187FE  0E00               	movlw	0
  2963  018800  6EE6               	movwf	postinc1,c
  2964  018802  0E00               	movlw	0
  2965  018804  6EE6               	movwf	postinc1,c
  2966  018806  0E00               	movlw	0
  2967  018808  6EE6               	movwf	postinc1,c
  2968  01880A  EC7E  F0C0         	call	_wdtdelay	;wreg free
  2969                           
  2970                           ; BSR set to: 0
  2971  01880E  82BC               	bsf	188,1,c	;volatile
  2972                           
  2973                           ; BSR set to: 0
  2974                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2975  018810  52E5               	movf	postdec1,f,c
  2976  018812  0012               	return		;funcret
  2977  018814                     __end_of_send_lcd_cmd:
  2978                           	opt callstack 0
  2979                           
  2980 ;; *************** function _SPI1_Exchange8bit *****************
  2981 ;; Defined at:
  2982 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  data            1  [STACK] unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1  [STACK] unsigned char 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 3F/39
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    6
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_send_lcd_cmd
  3007 ;;		_send_lcd_cmd_long
  3008 ;; This function uses a reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text7
  3012  018B40                     __ptext7:
  3013                           	opt callstack 0
  3014  018B40                     _SPI1_Exchange8bit:
  3015                           	opt callstack 22
  3016                           
  3017                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3018                           
  3019                           ; BSR set to: 0
  3020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3021                           ;incstack = 0
  3022  018B40  0E01               	movlw	1
  3023  018B42  013D               	movlb	61	; () banked
  3024  018B44  6F12               	movwf	18,b	;volatile
  3025                           
  3026                           ; BSR set to: 61
  3027                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3028                           ;stkvar	_data @ sp[(0)+-1]
  3029  018B46  0EFF               	movlw	-1
  3030  018B48  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3031  018B4E                     l835:
  3032                           
  3033                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3034  018B4E  0139               	movlb	57	; () banked
  3035  018B50  A9A2               	btfss	162,4,b	;volatile
  3036  018B52  D7FD               	goto	l835
  3037                           
  3038                           ; BSR set to: 57
  3039                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3040  018B54  006F F440  F035    	movff	15632,btemp	;volatile
  3041                           
  3042                           ; BSR set to: 57
  3043                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3044  018B5A  52E5               	movf	postdec1,f,c
  3045  018B5C  0012               	return		;funcret
  3046  018B5E                     __end_of_SPI1_Exchange8bit:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function _ringBufS_init *****************
  3050 ;; Defined at:
  3051 ;;		line 22 in file "ringbufs.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  _this           2  [STACK] PTR volatile struct ring
  3054 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1  [STACK] void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    7
  3073 ;; This function calls:
  3074 ;;		_memset
  3075 ;; This function is called by:
  3076 ;;		_init_display
  3077 ;; This function uses a reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text8
  3081  018814                     __ptext8:
  3082                           	opt callstack 0
  3083  018814                     _ringBufS_init:
  3084                           	opt callstack 22
  3085                           
  3086                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3087                           
  3088                           ; BSR set to: 57
  3089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3090                           ;incstack = 0
  3091  018814  0E43               	movlw	67
  3092  018816  6EE6               	movwf	postinc1,c
  3093  018818  0E00               	movlw	0
  3094  01881A  6EE6               	movwf	postinc1,c
  3095  01881C  0E00               	movlw	0
  3096  01881E  6EE6               	movwf	postinc1,c
  3097  018820  0E00               	movlw	0
  3098  018822  6EE6               	movwf	postinc1,c
  3099                           
  3100                           ;stkvar	__this @ sp[(-4)+-2]
  3101  018824  0EFA               	movlw	-6
  3102  018826  006F FF8F FFE6     	movff	plusw1,postinc1
  3103  01882C  006F FF8F FFE6     	movff	plusw1,postinc1
  3104  018832  EC1B  F0A7         	call	_memset	;wreg free
  3105                           
  3106                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3107  018836  52E5               	movf	postdec1,f,c
  3108  018838  52E5               	movf	postdec1,f,c
  3109  01883A  0012               	return		;funcret
  3110  01883C                     __end_of_ringBufS_init:
  3111                           	opt callstack 0
  3112                           
  3113 ;; *************** function _eaDogM_WriteCommand *****************
  3114 ;; Defined at:
  3115 ;;		line 160 in file "eadog.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  cmd             1  [STACK] const unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1  [STACK] void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3124 ;; Tracked objects:
  3125 ;;		On entry : 3F/3D
  3126 ;;		On exit  : 3F/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:   16
  3136 ;; This function calls:
  3137 ;;		_send_lcd_cmd_dma
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text9
  3144  018D0A                     __ptext9:
  3145                           	opt callstack 0
  3146  018D0A                     _eaDogM_WriteCommand:
  3147                           	opt callstack 14
  3148                           
  3149                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3150                           ;stkvar	_cmd @ sp[(0)+-1]
  3151                           
  3152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3153                           ;incstack = 0
  3154  018D0A  0EFF               	movlw	-1
  3155  018D0C  50E3               	movf	plusw1,w,c
  3156  018D0E  6EE6               	movwf	postinc1,c
  3157  018D10  ECD8  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  3158                           
  3159                           ; BSR set to: 0
  3160                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3161  018D14  52E5               	movf	postdec1,f,c
  3162  018D16  0012               	return		;funcret
  3163  018D18                     __end_of_eaDogM_WriteCommand:
  3164                           	opt callstack 0
  3165                           
  3166 ;; *************** function _convert_adc_data *****************
  3167 ;; Defined at:
  3168 ;;		line 37 in file "mbmc.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  i               1  [STACK] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1  [STACK] void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/4
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    9
  3189 ;; This function calls:
  3190 ;;		_conv_raw_result
  3191 ;;		_lp_filter
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text10
  3198  017C9A                     __ptext10:
  3199                           	opt callstack 0
  3200  017C9A                     _convert_adc_data:
  3201                           	opt callstack 0
  3202                           
  3203                           ; BSR set to: 0
  3204                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3205  017C9A  52E6               	movf	postinc1,f,c
  3206                           
  3207                           ;mbmc.c: 39:  uint8_t i = 0;
  3208                           ;stkvar	_i @ sp[(-1)+0]
  3209                           
  3210                           ;incstack = 0
  3211  017C9C  0EFF               	movlw	-1
  3212  017C9E  6AE3               	clrf	plusw1,c
  3213  017CA0                     l8939:
  3214                           
  3215                           ;mbmc.c: 42:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3216  017CA0  0E00               	movlw	0
  3217  017CA2  6EE6               	movwf	postinc1,c
  3218                           
  3219                           ;stkvar	_i @ sp[(-2)+0]
  3220  017CA4  0EFE               	movlw	-2
  3221  017CA6  50E3               	movf	plusw1,w,c
  3222  017CA8  6EE6               	movwf	postinc1,c
  3223  017CAA  0E00               	movlw	0
  3224  017CAC  6EE6               	movwf	postinc1,c
  3225                           
  3226                           ;stkvar	_i @ sp[(-4)+0]
  3227  017CAE  0EFC               	movlw	-4
  3228  017CB0  50E3               	movf	plusw1,w,c
  3229  017CB2  6EE6               	movwf	postinc1,c
  3230  017CB4  ECE8  F09D         	call	_conv_raw_result	;wreg free
  3231  017CB8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3232  017CBE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3233  017CC4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3234  017CCA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3235  017CD0  ECA5  F0B0         	call	_lp_filter	;wreg free
  3236                           
  3237                           ;stkvar	_i @ sp[(-1)+0]
  3238  017CD4  0EFF               	movlw	-1
  3239  017CD6  50E3               	movf	plusw1,w,c
  3240  017CD8  0D04               	mullw	4
  3241  017CDA  0E00               	movlw	low _C
  3242  017CDC  24F3               	addwf	243,w,c
  3243  017CDE  6ED9               	movwf	fsr2l,c
  3244  017CE0  0E02               	movlw	high _C
  3245  017CE2  20F4               	addwfc	prodh,w,c
  3246  017CE4  6EDA               	movwf	fsr2h,c
  3247  017CE6  0060  F0D7  FFDE   	movff	btemp,postinc2
  3248  017CEC  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3249  017CF2  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3250  017CF8  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3251                           
  3252                           ;mbmc.c: 43:  } while (++i < 16);
  3253                           ;stkvar	_i @ sp[(-1)+0]
  3254  017CFE  0EFF               	movlw	-1
  3255  017D00  2AE3               	incf	plusw1,f,c
  3256  017D02  0EFF               	movlw	-1
  3257  017D04  006F FF8C  F035    	movff	plusw1,btemp
  3258  017D0A  0E0F               	movlw	15
  3259  017D0C  6435               	cpfsgt	btemp^0,c
  3260  017D0E  D7C8               	goto	l8939
  3261                           
  3262                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3263  017D10  52E5               	movf	postdec1,f,c
  3264  017D12  0012               	return		;funcret
  3265  017D14                     __end_of_convert_adc_data:
  3266                           	opt callstack 0
  3267                           
  3268 ;; *************** function _lp_filter *****************
  3269 ;; Defined at:
  3270 ;;		line 15 in file "mbmc.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  new             4  [STACK] float 
  3273 ;;  bn              1  [STACK] unsigned char 
  3274 ;;  slow            1  [STACK] char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  lp_speed        4  [STACK] float 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  4  [STACK] float 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/4
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    8
  3293 ;; This function calls:
  3294 ;;		___fladd
  3295 ;;		___flmul
  3296 ;;		___flsub
  3297 ;; This function is called by:
  3298 ;;		_convert_adc_data
  3299 ;; This function uses a reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text11
  3303  01614A                     __ptext11:
  3304                           	opt callstack 0
  3305  01614A                     _lp_filter:
  3306                           	opt callstack 0
  3307                           
  3308                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3309  01614A  52E6               	movf	postinc1,f,c
  3310  01614C  52E6               	movf	postinc1,f,c
  3311  01614E  52E6               	movf	postinc1,f,c
  3312  016150  52E6               	movf	postinc1,f,c
  3313                           
  3314                           ;mbmc.c: 15: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 16: {;mbmc.c: 1
      +                          7:  static float smooth[16];;mbmc.c: 18:  float lp_speed;;mbmc.c: 20:  if (bn >= 16)
  3315                           ;stkvar	_bn @ sp[(-4)+-5]
  3316                           
  3317                           ;incstack = 0
  3318  016152  0EF7               	movlw	-9
  3319  016154  006F FF8C  F035    	movff	plusw1,btemp
  3320  01615A  0E0F               	movlw	15
  3321  01615C  6435               	cpfsgt	btemp^0,c
  3322  01615E  D011               	goto	l8733
  3323  016160                     u8530:
  3324                           
  3325                           ;mbmc.c: 21:   return new;
  3326                           ;stkvar	_new @ sp[(-4)+-4]
  3327  016160  0EF8               	movlw	-8
  3328  016162  006F FF8C  F035    	movff	plusw1,btemp
  3329  016168  0EF9               	movlw	-7
  3330  01616A  006F FF8C  F036    	movff	plusw1,btemp+1
  3331  016170  0EFA               	movlw	-6
  3332  016172  006F FF8C  F037    	movff	plusw1,btemp+2
  3333  016178  0EFB               	movlw	-5
  3334  01617A  006F FF8C  F038    	movff	plusw1,btemp+3
  3335  016180  D0BF               	goto	l1696
  3336  016182                     l8733:
  3337                           
  3338                           ;mbmc.c: 23:  if (slow == (-1)) {
  3339                           ;stkvar	_slow @ sp[(-4)+-6]
  3340  016182  0EF6               	movlw	-10
  3341  016184  28E3               	incf	plusw1,w,c
  3342  016186  A4D8               	btfss	status,2,c
  3343  016188  D012               	goto	l8741
  3344                           
  3345                           ;mbmc.c: 24:   smooth[bn] = 0.0;
  3346                           ;stkvar	_bn @ sp[(-4)+-5]
  3347  01618A  0EF7               	movlw	-9
  3348  01618C  50E3               	movf	plusw1,w,c
  3349  01618E  0D04               	mullw	4
  3350  016190  0EBB               	movlw	low lp_filter@smooth
  3351  016192  24F3               	addwf	243,w,c
  3352  016194  6ED9               	movwf	fsr2l,c
  3353  016196  0E01               	movlw	high lp_filter@smooth
  3354  016198  20F4               	addwfc	prodh,w,c
  3355  01619A  6EDA               	movwf	fsr2h,c
  3356  01619C  0E00               	movlw	0
  3357  01619E  6EDE               	movwf	postinc2,c
  3358  0161A0  0E00               	movlw	0
  3359  0161A2  6EDE               	movwf	postinc2,c
  3360  0161A4  0E00               	movlw	0
  3361  0161A6  6EDE               	movwf	postinc2,c
  3362  0161A8  0E00               	movlw	0
  3363  0161AA  6EDD               	movwf	postdec2,c
  3364  0161AC  D7D9               	goto	u8530
  3365  0161AE                     l8741:
  3366                           
  3367                           ;mbmc.c: 28:  if (slow) {
  3368                           ;stkvar	_slow @ sp[(-4)+-6]
  3369  0161AE  0EF6               	movlw	-10
  3370  0161B0  50E3               	movf	plusw1,w,c
  3371  0161B2  B4D8               	btfsc	status,2,c
  3372  0161B4  D008               	goto	l8745
  3373                           
  3374                           ;mbmc.c: 29:   lp_speed = 0.066;
  3375  0161B6  0E02               	movlw	2
  3376  0161B8  6E3D               	movwf	(btemp+8)^0,c
  3377  0161BA  0E2B               	movlw	43
  3378  0161BC  6E3E               	movwf	(btemp+9)^0,c
  3379  0161BE  0E87               	movlw	135
  3380  0161C0  6E3F               	movwf	(btemp+10)^0,c
  3381  0161C2  0E3D               	movlw	61
  3382  0161C4  D007               	goto	L1
  3383  0161C6                     l8745:
  3384                           
  3385                           ;mbmc.c: 31:   lp_speed = 0.333;
  3386  0161C6  0EFA               	movlw	250
  3387  0161C8  6E3D               	movwf	(btemp+8)^0,c
  3388  0161CA  0E7E               	movlw	126
  3389  0161CC  6E3E               	movwf	(btemp+9)^0,c
  3390  0161CE  0EAA               	movlw	170
  3391  0161D0  6E3F               	movwf	(btemp+10)^0,c
  3392  0161D2  0E3E               	movlw	62
  3393  0161D4                     L1:
  3394  0161D4  6E40               	movwf	(btemp+11)^0,c
  3395                           
  3396                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3397  0161D6  0EFC               	movlw	-4
  3398  0161D8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3399  0161DE  0EFD               	movlw	-3
  3400  0161E0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3401  0161E6  0EFE               	movlw	-2
  3402  0161E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3403  0161EE  0EFF               	movlw	-1
  3404  0161F0  0060  F103  FFE3   	movff	btemp+11,plusw1
  3405                           
  3406                           ;mbmc.c: 34:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3407                           ;stkvar	_bn @ sp[(-4)+-5]
  3408  0161F6  0EF7               	movlw	-9
  3409  0161F8  50E3               	movf	plusw1,w,c
  3410  0161FA  0D04               	mullw	4
  3411  0161FC  0EBB               	movlw	low lp_filter@smooth
  3412  0161FE  24F3               	addwf	243,w,c
  3413  016200  6ED9               	movwf	fsr2l,c
  3414  016202  0E01               	movlw	high lp_filter@smooth
  3415  016204  20F4               	addwfc	prodh,w,c
  3416  016206  6EDA               	movwf	fsr2h,c
  3417  016208  006F FF7B FFE6     	movff	postinc2,postinc1
  3418  01620E  006F FF7B FFE6     	movff	postinc2,postinc1
  3419  016214  006F FF7B FFE6     	movff	postinc2,postinc1
  3420  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
  3421                           
  3422                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3423  016220  0EF8               	movlw	-8
  3424  016222  006F FF8F FFE6     	movff	plusw1,postinc1
  3425  016228  006F FF8F FFE6     	movff	plusw1,postinc1
  3426  01622E  006F FF8F FFE6     	movff	plusw1,postinc1
  3427  016234  006F FF8F FFE6     	movff	plusw1,postinc1
  3428                           
  3429                           ;stkvar	_bn @ sp[(-12)+-5]
  3430  01623A  0EEF               	movlw	-17
  3431  01623C  50E3               	movf	plusw1,w,c
  3432  01623E  0D04               	mullw	4
  3433  016240  0EBB               	movlw	low lp_filter@smooth
  3434  016242  24F3               	addwf	243,w,c
  3435  016244  6ED9               	movwf	fsr2l,c
  3436  016246  0E01               	movlw	high lp_filter@smooth
  3437  016248  20F4               	addwfc	prodh,w,c
  3438  01624A  6EDA               	movwf	fsr2h,c
  3439  01624C  006F FF7B FFE6     	movff	postinc2,postinc1
  3440  016252  006F FF7B FFE6     	movff	postinc2,postinc1
  3441  016258  006F FF7B FFE6     	movff	postinc2,postinc1
  3442  01625E  006F FF7B FFE6     	movff	postinc2,postinc1
  3443                           
  3444                           ;stkvar	_new @ sp[(-16)+-4]
  3445  016264  0EEC               	movlw	-20
  3446  016266  006F FF8F FFE6     	movff	plusw1,postinc1
  3447  01626C  006F FF8F FFE6     	movff	plusw1,postinc1
  3448  016272  006F FF8F FFE6     	movff	plusw1,postinc1
  3449  016278  006F FF8F FFE6     	movff	plusw1,postinc1
  3450  01627E  EC4E  F0C1         	call	___flsub	;wreg free
  3451  016282  0060  F0D7  FFE6   	movff	btemp,postinc1
  3452  016288  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3453  01628E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3454  016294  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3455  01629A  ECF8  F090         	call	___flmul	;wreg free
  3456  01629E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3457  0162A4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3458  0162AA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3459  0162B0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3460  0162B6  EC0D  F095         	call	___fladd	;wreg free
  3461                           
  3462                           ;stkvar	_bn @ sp[(-4)+-5]
  3463  0162BA  0EF7               	movlw	-9
  3464  0162BC  50E3               	movf	plusw1,w,c
  3465  0162BE  0D04               	mullw	4
  3466  0162C0  0EBB               	movlw	low lp_filter@smooth
  3467  0162C2  24F3               	addwf	243,w,c
  3468  0162C4  6ED9               	movwf	fsr2l,c
  3469  0162C6  0E01               	movlw	high lp_filter@smooth
  3470  0162C8  20F4               	addwfc	prodh,w,c
  3471  0162CA  6EDA               	movwf	fsr2h,c
  3472  0162CC  0060  F0D7  FFDE   	movff	btemp,postinc2
  3473  0162D2  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3474  0162D8  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3475  0162DE  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3476  0162E4  52DD               	movf	postdec2,f,c
  3477  0162E6  52DD               	movf	postdec2,f,c
  3478  0162E8  006F FF78  F035    	movff	postinc2,btemp
  3479  0162EE  006F FF78  F036    	movff	postinc2,btemp+1
  3480  0162F4  006F FF78  F037    	movff	postinc2,btemp+2
  3481  0162FA  006F FF78  F038    	movff	postinc2,btemp+3
  3482  016300                     l1696:
  3483                           
  3484                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3485  016300  0EF6               	movlw	246
  3486  016302  26E1               	addwf	fsr1l,f,c
  3487  016304  0EFF               	movlw	255
  3488  016306  22E2               	addwfc	fsr1h,f,c
  3489  016308  0012               	return		;funcret
  3490  01630A                     __end_of_lp_filter:
  3491                           	opt callstack 0
  3492                           
  3493 ;; *************** function _conv_raw_result *****************
  3494 ;; Defined at:
  3495 ;;		line 79 in file "daq.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  chan            1  [STACK] enum E16136
  3498 ;;  to_what         1  [STACK] enum E16198
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  4  [STACK] float 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/4
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    8
  3517 ;; This function calls:
  3518 ;;		___fldiv
  3519 ;;		___flmul
  3520 ;;		___flsub
  3521 ;;		___xxtofl
  3522 ;;		_get_raw_result
  3523 ;;		_nanf
  3524 ;; This function is called by:
  3525 ;;		_convert_adc_data
  3526 ;; This function uses a reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text12
  3530  013BD0                     __ptext12:
  3531                           	opt callstack 0
  3532  013BD0                     _conv_raw_result:
  3533                           	opt callstack 21
  3534                           
  3535                           ;daq.c: 79: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 80: {;
      +                          daq.c: 81:  if (!(0b0011110001110111 >> chan & 0x1))
  3536                           ;stkvar	_chan @ sp[(0)+-1]
  3537                           
  3538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3539                           ;incstack = 0
  3540  013BD0  0EFF               	movlw	-1
  3541  013BD2  006F FF8C  F040    	movff	plusw1,btemp+11
  3542  013BD8  0E77               	movlw	119
  3543  013BDA  6E3D               	movwf	(btemp+8)^0,c
  3544  013BDC  0E3C               	movlw	60
  3545  013BDE  6E3E               	movwf	(btemp+9)^0,c
  3546  013BE0  2A40               	incf	(btemp+11)^0,f,c
  3547  013BE2  D003               	goto	u8454
  3548  013BE4                     u8455:
  3549  013BE4  343E               	rlcf	(btemp+9)^0,w,c
  3550  013BE6  323E               	rrcf	(btemp+9)^0,f,c
  3551  013BE8  323D               	rrcf	(btemp+8)^0,f,c
  3552  013BEA                     u8454:
  3553  013BEA  2E40               	decfsz	(btemp+11)^0,f,c
  3554  013BEC  D7FB               	goto	u8455
  3555  013BEE  B03D               	btfsc	(btemp+8)^0,0,c
  3556  013BF0  D1E3               	goto	l8717
  3557                           
  3558                           ;daq.c: 82:   return nanf("");
  3559  013BF2  0E0B               	movlw	low (STR_27+18)
  3560  013BF4  6EE6               	movwf	postinc1,c
  3561  013BF6  0EFF               	movlw	high (STR_27+18)
  3562  013BF8  6EE6               	movwf	postinc1,c
  3563  013BFA  ECBF  F0BF         	call	_nanf	;wreg free
  3564  013BFE  D1EC               	goto	l1654
  3565  013C00                     l8677:
  3566                           
  3567                           ;daq.c: 86:   if (0b0000000000000011 >> chan & 0x1) {
  3568                           ;stkvar	_chan @ sp[(0)+-1]
  3569  013C00  0EFF               	movlw	-1
  3570  013C02  006F FF8C  F040    	movff	plusw1,btemp+11
  3571  013C08  0E03               	movlw	3
  3572  013C0A  6E3D               	movwf	(btemp+8)^0,c
  3573  013C0C  0E00               	movlw	0
  3574  013C0E  6E3E               	movwf	(btemp+9)^0,c
  3575  013C10  2A40               	incf	(btemp+11)^0,f,c
  3576  013C12  D003               	goto	u8474
  3577  013C14                     u8475:
  3578  013C14  343E               	rlcf	(btemp+9)^0,w,c
  3579  013C16  323E               	rrcf	(btemp+9)^0,f,c
  3580  013C18  323D               	rrcf	(btemp+8)^0,f,c
  3581  013C1A                     u8474:
  3582  013C1A  2E40               	decfsz	(btemp+11)^0,f,c
  3583  013C1C  D7FB               	goto	u8475
  3584  013C1E  A03D               	btfss	(btemp+8)^0,0,c
  3585  013C20  D10D               	goto	l8691
  3586                           
  3587                           ;daq.c: 87:    if (0b0000000000000001 >> chan & 0x1) {
  3588                           ;stkvar	_chan @ sp[(0)+-1]
  3589  013C22  0EFF               	movlw	-1
  3590  013C24  006F FF8C  F040    	movff	plusw1,btemp+11
  3591  013C2A  0E01               	movlw	1
  3592  013C2C  6E3D               	movwf	(btemp+8)^0,c
  3593  013C2E  0E00               	movlw	0
  3594  013C30  6E3E               	movwf	(btemp+9)^0,c
  3595  013C32  2A40               	incf	(btemp+11)^0,f,c
  3596  013C34  D003               	goto	u8494
  3597  013C36                     u8495:
  3598  013C36  343E               	rlcf	(btemp+9)^0,w,c
  3599  013C38  323E               	rrcf	(btemp+9)^0,f,c
  3600  013C3A  323D               	rrcf	(btemp+8)^0,f,c
  3601  013C3C                     u8494:
  3602  013C3C  2E40               	decfsz	(btemp+11)^0,f,c
  3603  013C3E  D7FB               	goto	u8495
  3604  013C40  A03D               	btfss	(btemp+8)^0,0,c
  3605  013C42  D07E               	goto	l8687
  3606                           
  3607                           ;daq.c: 88:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[1]) * 30.00 / 
      +                          1000.0;
  3608  013C44  0E00               	movlw	0
  3609  013C46  6EE6               	movwf	postinc1,c
  3610  013C48  0E00               	movlw	0
  3611  013C4A  6EE6               	movwf	postinc1,c
  3612  013C4C  0E7A               	movlw	122
  3613  013C4E  6EE6               	movwf	postinc1,c
  3614  013C50  0E44               	movlw	68
  3615  013C52  6EE6               	movwf	postinc1,c
  3616  013C54  0E00               	movlw	0
  3617  013C56  6EE6               	movwf	postinc1,c
  3618  013C58  0E00               	movlw	0
  3619  013C5A  6EE6               	movwf	postinc1,c
  3620  013C5C  0EF0               	movlw	240
  3621  013C5E  6EE6               	movwf	postinc1,c
  3622  013C60  0E41               	movlw	65
  3623  013C62  6EE6               	movwf	postinc1,c
  3624  013C64  0060  F31F  FFE6   	movff	_R+36,postinc1
  3625  013C6A  0060  F323  FFE6   	movff	_R+37,postinc1
  3626  013C70  0060  F327  FFE6   	movff	_R+38,postinc1
  3627  013C76  0060  F32B  FFE6   	movff	_R+39,postinc1
  3628  013C7C  0E00               	movlw	0
  3629  013C7E  6EE6               	movwf	postinc1,c
  3630  013C80  0E00               	movlw	0
  3631  013C82  6EE6               	movwf	postinc1,c
  3632  013C84  0EA0               	movlw	160
  3633  013C86  6EE6               	movwf	postinc1,c
  3634  013C88  0E3F               	movlw	63
  3635  013C8A  6EE6               	movwf	postinc1,c
  3636                           
  3637                           ;stkvar	_chan @ sp[(-16)+-1]
  3638  013C8C  0EEF               	movlw	-17
  3639  013C8E  50E3               	movf	plusw1,w,c
  3640  013C90  6EE6               	movwf	postinc1,c
  3641  013C92  ECAF  F0C5         	call	_get_raw_result	;wreg free
  3642  013C96  0060  F0D4  F03F   	movff	btemp,btemp+10
  3643  013C9C  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3644  013CA2  503F               	movf	(btemp+10)^0,w,c
  3645  013CA4  6E39               	movwf	(btemp+4)^0,c
  3646  013CA6  5040               	movf	(btemp+11)^0,w,c
  3647  013CA8  6E3A               	movwf	(btemp+5)^0,c
  3648  013CAA  6A3B               	clrf	(btemp+6)^0,c
  3649  013CAC  6A3C               	clrf	(btemp+7)^0,c
  3650  013CAE  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3651  013CB4  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3652  013CBA  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3653  013CC0  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3654  013CC6  0E00               	movlw	0
  3655  013CC8  6EE6               	movwf	postinc1,c
  3656  013CCA  ECA3  F0AF         	call	___xxtofl	;wreg free
  3657  013CCE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3658  013CD4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3659  013CDA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3660  013CE0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3661  013CE6  ECF8  F090         	call	___flmul	;wreg free
  3662  013CEA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3663  013CF0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3664  013CF6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3665  013CFC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3666  013D02  EC4E  F0C1         	call	___flsub	;wreg free
  3667  013D06  0060  F0D7  FFE6   	movff	btemp,postinc1
  3668  013D0C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3669  013D12  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3670  013D18  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3671  013D1E  ECF8  F090         	call	___flmul	;wreg free
  3672  013D22  0060  F0D7  FFE6   	movff	btemp,postinc1
  3673  013D28  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3674  013D2E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3675  013D34  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3676  013D3A  ECEB  F098         	call	___fldiv	;wreg free
  3677  013D3E  D14C               	goto	l1654
  3678  013D40                     l8687:
  3679                           
  3680                           ;daq.c: 90:     return(((float) get_raw_result(chan) * 1.25) - R.c_offset[0]) * 59.30 / 
      +                          1000.0;
  3681  013D40  0E00               	movlw	0
  3682  013D42  6EE6               	movwf	postinc1,c
  3683  013D44  0E00               	movlw	0
  3684  013D46  6EE6               	movwf	postinc1,c
  3685  013D48  0E7A               	movlw	122
  3686  013D4A  6EE6               	movwf	postinc1,c
  3687  013D4C  0E44               	movlw	68
  3688  013D4E  6EE6               	movwf	postinc1,c
  3689  013D50  0E33               	movlw	51
  3690  013D52  6EE6               	movwf	postinc1,c
  3691  013D54  0E33               	movlw	51
  3692  013D56  6EE6               	movwf	postinc1,c
  3693  013D58  0E6D               	movlw	109
  3694  013D5A  6EE6               	movwf	postinc1,c
  3695  013D5C  0E42               	movlw	66
  3696  013D5E  6EE6               	movwf	postinc1,c
  3697  013D60  0060  F30F  FFE6   	movff	_R+32,postinc1
  3698  013D66  0060  F313  FFE6   	movff	_R+33,postinc1
  3699  013D6C  0060  F317  FFE6   	movff	_R+34,postinc1
  3700  013D72  0060  F31B  FFE6   	movff	_R+35,postinc1
  3701  013D78  0E00               	movlw	0
  3702  013D7A  6EE6               	movwf	postinc1,c
  3703  013D7C  0E00               	movlw	0
  3704  013D7E  6EE6               	movwf	postinc1,c
  3705  013D80  0EA0               	movlw	160
  3706  013D82  6EE6               	movwf	postinc1,c
  3707  013D84  0E3F               	movlw	63
  3708  013D86  6EE6               	movwf	postinc1,c
  3709                           
  3710                           ;stkvar	_chan @ sp[(-16)+-1]
  3711  013D88  0EEF               	movlw	-17
  3712  013D8A  50E3               	movf	plusw1,w,c
  3713  013D8C  6EE6               	movwf	postinc1,c
  3714  013D8E  ECAF  F0C5         	call	_get_raw_result	;wreg free
  3715  013D92  0060  F0D4  F03F   	movff	btemp,btemp+10
  3716  013D98  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3717  013D9E  503F               	movf	(btemp+10)^0,w,c
  3718  013DA0  6E39               	movwf	(btemp+4)^0,c
  3719  013DA2  5040               	movf	(btemp+11)^0,w,c
  3720  013DA4  6E3A               	movwf	(btemp+5)^0,c
  3721  013DA6  6A3B               	clrf	(btemp+6)^0,c
  3722  013DA8  6A3C               	clrf	(btemp+7)^0,c
  3723  013DAA  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3724  013DB0  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3725  013DB6  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3726  013DBC  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3727  013DC2  0E00               	movlw	0
  3728  013DC4  6EE6               	movwf	postinc1,c
  3729  013DC6  ECA3  F0AF         	call	___xxtofl	;wreg free
  3730  013DCA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3731  013DD0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3732  013DD6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3733  013DDC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3734  013DE2  ECF8  F090         	call	___flmul	;wreg free
  3735  013DE6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3736  013DEC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3737  013DF2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3738  013DF8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3739  013DFE  EC4E  F0C1         	call	___flsub	;wreg free
  3740  013E02  0060  F0D7  FFE6   	movff	btemp,postinc1
  3741  013E08  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3742  013E0E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3743  013E14  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3744  013E1A  ECF8  F090         	call	___flmul	;wreg free
  3745  013E1E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3746  013E24  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3747  013E2A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3748  013E30  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3749  013E36  ECEB  F098         	call	___fldiv	;wreg free
  3750  013E3A  D0CE               	goto	l1654
  3751  013E3C                     l8691:
  3752                           
  3753                           ;daq.c: 93:    if (0b0000100000000000 >> chan & 0x1) {
  3754                           ;stkvar	_chan @ sp[(0)+-1]
  3755  013E3C  0EFF               	movlw	-1
  3756  013E3E  006F FF8C  F040    	movff	plusw1,btemp+11
  3757  013E44  0E00               	movlw	0
  3758  013E46  6E3D               	movwf	(btemp+8)^0,c
  3759  013E48  0E08               	movlw	8
  3760  013E4A  6E3E               	movwf	(btemp+9)^0,c
  3761  013E4C  2A40               	incf	(btemp+11)^0,f,c
  3762  013E4E  D003               	goto	u8514
  3763  013E50                     u8515:
  3764  013E50  343E               	rlcf	(btemp+9)^0,w,c
  3765  013E52  323E               	rrcf	(btemp+9)^0,f,c
  3766  013E54  323D               	rrcf	(btemp+8)^0,f,c
  3767  013E56                     u8514:
  3768  013E56  2E40               	decfsz	(btemp+11)^0,f,c
  3769  013E58  D7FB               	goto	u8515
  3770  013E5A  A03D               	btfss	(btemp+8)^0,0,c
  3771  013E5C  D008               	goto	l8699
  3772                           
  3773                           ;daq.c: 94:     return 25.0;
  3774  013E5E  0E00               	movlw	0
  3775  013E60  6E35               	movwf	btemp^0,c
  3776  013E62  0E00               	movlw	0
  3777  013E64  6E36               	movwf	(btemp+1)^0,c
  3778  013E66  0EC8               	movlw	200
  3779  013E68  6E37               	movwf	(btemp+2)^0,c
  3780  013E6A  0E41               	movlw	65
  3781  013E6C  D0A3               	goto	L2
  3782  013E6E                     l8699:
  3783                           
  3784                           ;daq.c: 96:     return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3785  013E6E  0E00               	movlw	0
  3786  013E70  6EE6               	movwf	postinc1,c
  3787  013E72  0E00               	movlw	0
  3788  013E74  6EE6               	movwf	postinc1,c
  3789  013E76  0E7A               	movlw	122
  3790  013E78  6EE6               	movwf	postinc1,c
  3791  013E7A  0E44               	movlw	68
  3792  013E7C  6EE6               	movwf	postinc1,c
  3793  013E7E  0E61               	movlw	97
  3794  013E80  6EE6               	movwf	postinc1,c
  3795  013E82  0E03               	movlw	3
  3796  013E84  6EE6               	movwf	postinc1,c
  3797  013E86  0E04               	movlw	4
  3798  013E88  6EE6               	movwf	postinc1,c
  3799  013E8A  0E41               	movlw	65
  3800  013E8C  6EE6               	movwf	postinc1,c
  3801                           
  3802                           ;stkvar	_chan @ sp[(-8)+-1]
  3803  013E8E  0EF7               	movlw	-9
  3804  013E90  50E3               	movf	plusw1,w,c
  3805  013E92  6EE6               	movwf	postinc1,c
  3806  013E94  ECAF  F0C5         	call	_get_raw_result	;wreg free
  3807  013E98  0060  F0D4  F03F   	movff	btemp,btemp+10
  3808  013E9E  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3809  013EA4  503F               	movf	(btemp+10)^0,w,c
  3810  013EA6  6E39               	movwf	(btemp+4)^0,c
  3811  013EA8  5040               	movf	(btemp+11)^0,w,c
  3812  013EAA  6E3A               	movwf	(btemp+5)^0,c
  3813  013EAC  6A3B               	clrf	(btemp+6)^0,c
  3814  013EAE  6A3C               	clrf	(btemp+7)^0,c
  3815  013EB0  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3816  013EB6  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3817  013EBC  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3818  013EC2  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3819  013EC8  0E00               	movlw	0
  3820  013ECA  6EE6               	movwf	postinc1,c
  3821  013ECC  ECA3  F0AF         	call	___xxtofl	;wreg free
  3822  013ED0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3823  013ED6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3824  013EDC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3825  013EE2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3826  013EE8  ECF8  F090         	call	___flmul	;wreg free
  3827  013EEC  0060  F0D7  FFE6   	movff	btemp,postinc1
  3828  013EF2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3829  013EF8  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3830  013EFE  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3831  013F04  ECEB  F098         	call	___fldiv	;wreg free
  3832  013F08  D067               	goto	l1654
  3833  013F0A                     l8703:
  3834                           
  3835                           ;daq.c: 101:   return((float) get_raw_result(chan) * 1.25) / 1000.0;
  3836  013F0A  0E00               	movlw	0
  3837  013F0C  6EE6               	movwf	postinc1,c
  3838  013F0E  0E00               	movlw	0
  3839  013F10  6EE6               	movwf	postinc1,c
  3840  013F12  0E7A               	movlw	122
  3841  013F14  6EE6               	movwf	postinc1,c
  3842  013F16  0E44               	movlw	68
  3843  013F18  6EE6               	movwf	postinc1,c
  3844  013F1A  0E00               	movlw	0
  3845  013F1C  6EE6               	movwf	postinc1,c
  3846  013F1E  0E00               	movlw	0
  3847  013F20  6EE6               	movwf	postinc1,c
  3848  013F22  0EA0               	movlw	160
  3849  013F24  6EE6               	movwf	postinc1,c
  3850  013F26  0E3F               	movlw	63
  3851  013F28  6EE6               	movwf	postinc1,c
  3852                           
  3853                           ;stkvar	_chan @ sp[(-8)+-1]
  3854  013F2A  0EF7               	movlw	-9
  3855  013F2C  50E3               	movf	plusw1,w,c
  3856  013F2E  6EE6               	movwf	postinc1,c
  3857  013F30  ECAF  F0C5         	call	_get_raw_result	;wreg free
  3858  013F34  0060  F0D4  F03F   	movff	btemp,btemp+10
  3859  013F3A  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3860  013F40  503F               	movf	(btemp+10)^0,w,c
  3861  013F42  6E39               	movwf	(btemp+4)^0,c
  3862  013F44  5040               	movf	(btemp+11)^0,w,c
  3863  013F46  6E3A               	movwf	(btemp+5)^0,c
  3864  013F48  6A3B               	clrf	(btemp+6)^0,c
  3865  013F4A  6A3C               	clrf	(btemp+7)^0,c
  3866  013F4C  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3867  013F52  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3868  013F58  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3869  013F5E  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3870  013F64  0E00               	movlw	0
  3871  013F66  6EE6               	movwf	postinc1,c
  3872  013F68  ECA3  F0AF         	call	___xxtofl	;wreg free
  3873  013F6C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3874  013F72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3875  013F78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3876  013F7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3877  013F84  ECF8  F090         	call	___flmul	;wreg free
  3878  013F88  0060  F0D7  FFE6   	movff	btemp,postinc1
  3879  013F8E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3880  013F94  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3881  013F9A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3882  013FA0  ECEB  F098         	call	___fldiv	;wreg free
  3883  013FA4  D019               	goto	l1654
  3884  013FA6                     l8709:
  3885                           
  3886                           ;daq.c: 104:   return 0.0;
  3887  013FA6  0E00               	movlw	0
  3888  013FA8  6E35               	movwf	btemp^0,c
  3889  013FAA  0E00               	movlw	0
  3890  013FAC  6E36               	movwf	(btemp+1)^0,c
  3891  013FAE  0E00               	movlw	0
  3892  013FB0  6E37               	movwf	(btemp+2)^0,c
  3893  013FB2  0E00               	movlw	0
  3894  013FB4                     L2:
  3895  013FB4  6E38               	movwf	(btemp+3)^0,c
  3896  013FB6  D010               	goto	l1654
  3897  013FB8                     l8717:
  3898                           
  3899                           ;stkvar	_to_what @ sp[(0)+-2]
  3900  013FB8  0EFE               	movlw	-2
  3901  013FBA  50E3               	movf	plusw1,w,c
  3902  013FBC  6E3F               	movwf	(btemp+10)^0,c
  3903  013FBE  6A40               	clrf	(btemp+11)^0,c
  3904                           
  3905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3906                           ; Switch size 1, requested type "simple"
  3907                           ; Number of cases is 1, Range of values is 0 to 0
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte            4     3 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912  013FC0  5040               	movf	(btemp+11)^0,w,c
  3913  013FC2  0A00               	xorlw	0	; case 0
  3914  013FC4  A4D8               	btfss	status,2,c
  3915  013FC6  D7EF               	goto	l8709
  3916                           
  3917                           ; Switch size 1, requested type "simple"
  3918                           ; Number of cases is 2, Range of values is 0 to 1
  3919                           ; switch strategies available:
  3920                           ; Name         Instructions Cycles
  3921                           ; simple_byte            7     4 (average)
  3922                           ;	Chosen strategy is simple_byte
  3923  013FC8  503F               	movf	(btemp+10)^0,w,c
  3924  013FCA  0A00               	xorlw	0	; case 0
  3925  013FCC  B4D8               	btfsc	status,2,c
  3926  013FCE  D618               	goto	l8677
  3927  013FD0  0A01               	xorlw	1	; case 1
  3928  013FD2  B4D8               	btfsc	status,2,c
  3929  013FD4  D79A               	goto	l8703
  3930  013FD6  D7E7               	goto	l8709
  3931  013FD8                     l1654:
  3932                           
  3933                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3934  013FD8  52E5               	movf	postdec1,f,c
  3935  013FDA  52E5               	movf	postdec1,f,c
  3936  013FDC  0012               	return		;funcret
  3937  013FDE                     __end_of_conv_raw_result:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _nanf *****************
  3941 ;; Defined at:
  3942 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  s               2  [STACK] PTR const unsigned char 
  3945 ;;		 -> STR_33(1), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  u               4  [STACK] struct .
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  4  [STACK] float 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/4
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    6
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_conv_raw_result
  3968 ;; This function uses a reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text13
  3972  017F7E                     __ptext13:
  3973                           	opt callstack 0
  3974  017F7E                     _nanf:
  3975                           	opt callstack 0
  3976                           
  3977                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3978  017F7E  52E6               	movf	postinc1,f,c
  3979  017F80  52E6               	movf	postinc1,f,c
  3980  017F82  52E6               	movf	postinc1,f,c
  3981  017F84  52E6               	movf	postinc1,f,c
  3982                           
  3983                           ;incstack = 0
  3984  017F86  0EFF               	movlw	255
  3985  017F88  6E3D               	movwf	(btemp+8)^0,c
  3986  017F8A  0EFF               	movlw	255
  3987  017F8C  6E3E               	movwf	(btemp+9)^0,c
  3988  017F8E  0EFF               	movlw	255
  3989  017F90  6E3F               	movwf	(btemp+10)^0,c
  3990  017F92  0E7F               	movlw	127
  3991  017F94  6E40               	movwf	(btemp+11)^0,c
  3992                           
  3993                           ;stkvar	_u @ sp[(-4)+0]
  3994  017F96  0EFC               	movlw	-4
  3995  017F98  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3996  017F9E  0EFD               	movlw	-3
  3997  017FA0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3998  017FA6  0EFE               	movlw	-2
  3999  017FA8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4000  017FAE  0EFF               	movlw	-1
  4001  017FB0  0060  F103  FFE3   	movff	btemp+11,plusw1
  4002                           
  4003                           ;stkvar	_u @ sp[(-4)+0]
  4004  017FB6  0EFC               	movlw	-4
  4005  017FB8  006F FF8C  F035    	movff	plusw1,btemp
  4006  017FBE  0EFD               	movlw	-3
  4007  017FC0  006F FF8C  F036    	movff	plusw1,btemp+1
  4008  017FC6  0EFE               	movlw	-2
  4009  017FC8  006F FF8C  F037    	movff	plusw1,btemp+2
  4010  017FCE  0EFF               	movlw	-1
  4011  017FD0  006F FF8C  F038    	movff	plusw1,btemp+3
  4012                           
  4013                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4014  017FD6  0EFA               	movlw	250
  4015  017FD8  26E1               	addwf	fsr1l,f,c
  4016  017FDA  0EFF               	movlw	255
  4017  017FDC  22E2               	addwfc	fsr1h,f,c
  4018  017FDE  0012               	return		;funcret
  4019  017FE0                     __end_of_nanf:
  4020                           	opt callstack 0
  4021                           
  4022 ;; *************** function _get_raw_result *****************
  4023 ;; Defined at:
  4024 ;;		line 71 in file "daq.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  index           1  [STACK] enum E16136
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2  [STACK] unsigned short 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/4
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    6
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;;		_conv_raw_result
  4050 ;; This function uses a reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text14
  4054  018B5E                     __ptext14:
  4055                           	opt callstack 0
  4056  018B5E                     _get_raw_result:
  4057                           	opt callstack 24
  4058                           
  4059                           ;daq.c: 71: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 72: {;daq.c: 73:  r
      +                          eturn R.raw_adc[index];
  4060                           ;stkvar	_index @ sp[(0)+-1]
  4061                           
  4062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4063                           ;incstack = 0
  4064  018B5E  0EFF               	movlw	-1
  4065  018B60  50E3               	movf	plusw1,w,c
  4066  018B62  0D02               	mullw	2
  4067  018B64  50F3               	movf	243,w,c
  4068  018B66  0FA3               	addlw	low _R
  4069  018B68  6ED9               	movwf	fsr2l,c
  4070  018B6A  6ADA               	clrf	fsr2h,c
  4071  018B6C  006F FF78  F035    	movff	postinc2,btemp
  4072  018B72  006F FF74  F036    	movff	postdec2,btemp+1
  4073                           
  4074                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4075  018B78  52E5               	movf	postdec1,f,c
  4076  018B7A  0012               	return		;funcret
  4077  018B7C                     __end_of_get_raw_result:
  4078                           	opt callstack 0
  4079                           
  4080 ;; *************** function ___xxtofl *****************
  4081 ;; Defined at:
  4082 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  sign            1  [STACK] unsigned char 
  4085 ;;  val             4  [STACK] long 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  arg             4  [STACK] unsigned long 
  4088 ;;  exp             1  [STACK] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  4  [STACK] unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/4
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    6
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_conv_raw_result
  4109 ;; This function uses a reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text15
  4113  015F46                     __ptext15:
  4114                           	opt callstack 0
  4115  015F46                     ___xxtofl:
  4116                           	opt callstack 0
  4117                           
  4118                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4119  015F46  0E05               	movlw	5
  4120  015F48  26E1               	addwf	fsr1l,f,c
  4121  015F4A  0E00               	movlw	0
  4122  015F4C  22E2               	addwfc	fsr1h,f,c
  4123                           
  4124                           ;stkvar	_sign @ sp[(-5)+-1]
  4125                           
  4126                           ;incstack = 0
  4127  015F4E  0EFA               	movlw	-6
  4128  015F50  50E3               	movf	plusw1,w,c
  4129  015F52  B4D8               	btfsc	status,2,c
  4130  015F54  D01D               	goto	l8147
  4131                           
  4132                           ;stkvar	_val @ sp[(-5)+-5]
  4133  015F56  0EF9               	movlw	-7
  4134  015F58  AEE3               	btfss	plusw1,7,c
  4135  015F5A  D01A               	goto	l8147
  4136                           
  4137                           ;stkvar	_val @ sp[(-5)+-5]
  4138  015F5C  0EF6               	movlw	-10
  4139  015F5E  006F FF8C  F03D    	movff	plusw1,btemp+8
  4140  015F64  0EF7               	movlw	-9
  4141  015F66  006F FF8C  F03E    	movff	plusw1,btemp+9
  4142  015F6C  0EF8               	movlw	-8
  4143  015F6E  006F FF8C  F03F    	movff	plusw1,btemp+10
  4144  015F74  0EF9               	movlw	-7
  4145  015F76  006F FF8C  F040    	movff	plusw1,btemp+11
  4146  015F7C  1E3D               	comf	(btemp+8)^0,f,c
  4147  015F7E  1E3E               	comf	(btemp+9)^0,f,c
  4148  015F80  1E3F               	comf	(btemp+10)^0,f,c
  4149  015F82  1E40               	comf	(btemp+11)^0,f,c
  4150  015F84  2A3D               	incf	(btemp+8)^0,f,c
  4151  015F86  0E00               	movlw	0
  4152  015F88  223E               	addwfc	(btemp+9)^0,f,c
  4153  015F8A  223F               	addwfc	(btemp+10)^0,f,c
  4154  015F8C  2240               	addwfc	(btemp+11)^0,f,c
  4155  015F8E  D010               	goto	L3
  4156  015F90                     l8147:
  4157                           
  4158                           ;stkvar	_val @ sp[(-5)+-5]
  4159  015F90  0EF6               	movlw	-10
  4160  015F92  006F FF8C  F03D    	movff	plusw1,btemp+8
  4161  015F98  0EF7               	movlw	-9
  4162  015F9A  006F FF8C  F03E    	movff	plusw1,btemp+9
  4163  015FA0  0EF8               	movlw	-8
  4164  015FA2  006F FF8C  F03F    	movff	plusw1,btemp+10
  4165  015FA8  0EF9               	movlw	-7
  4166  015FAA  006F FF8C  F040    	movff	plusw1,btemp+11
  4167  015FB0                     L3:
  4168                           
  4169                           ;stkvar	_arg @ sp[(-5)+0]
  4170  015FB0  0EFB               	movlw	-5
  4171  015FB2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4172  015FB8  0EFC               	movlw	-4
  4173  015FBA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4174  015FC0  0EFD               	movlw	-3
  4175  015FC2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4176  015FC8  0EFE               	movlw	-2
  4177  015FCA  0060  F103  FFE3   	movff	btemp+11,plusw1
  4178                           
  4179                           ;stkvar	_val @ sp[(-5)+-5]
  4180  015FD0  0EF6               	movlw	-10
  4181  015FD2  50E3               	movf	plusw1,w,c
  4182  015FD4  E113               	bnz	l8155
  4183  015FD6  0EF7               	movlw	-9
  4184  015FD8  50E3               	movf	plusw1,w,c
  4185  015FDA  E110               	bnz	l8155
  4186  015FDC  0EF8               	movlw	-8
  4187  015FDE  50E3               	movf	plusw1,w,c
  4188  015FE0  E10D               	bnz	l8155
  4189  015FE2  0EF9               	movlw	-7
  4190  015FE4  50E3               	movf	plusw1,w,c
  4191  015FE6  A4D8               	btfss	status,2,c
  4192  015FE8  D009               	goto	l8155
  4193  015FEA  0E00               	movlw	0
  4194  015FEC  6E35               	movwf	btemp^0,c
  4195  015FEE  0E00               	movlw	0
  4196  015FF0  6E36               	movwf	(btemp+1)^0,c
  4197  015FF2  0E00               	movlw	0
  4198  015FF4  6E37               	movwf	(btemp+2)^0,c
  4199  015FF6  0E00               	movlw	0
  4200  015FF8  6E38               	movwf	(btemp+3)^0,c
  4201  015FFA  D0A2               	goto	l2666
  4202  015FFC                     l8155:
  4203  015FFC  0E96               	movlw	150
  4204  015FFE  6E40               	movwf	(btemp+11)^0,c
  4205                           
  4206                           ;stkvar	_exp @ sp[(-5)+4]
  4207  016000  0EFF               	movlw	-1
  4208  016002  0060  F103  FFE3   	movff	btemp+11,plusw1
  4209  016008  D00B               	goto	l8159
  4210  01600A                     l8157:
  4211                           
  4212                           ;stkvar	_exp @ sp[(-5)+4]
  4213  01600A  0EFF               	movlw	-1
  4214  01600C  2AE3               	incf	plusw1,f,c
  4215                           
  4216                           ;stkvar	_arg @ sp[(-5)+0]
  4217  01600E  90D8               	bcf	status,0,c
  4218  016010  0EFE               	movlw	-2
  4219  016012  32E3               	rrcf	plusw1,f,c
  4220  016014  0EFD               	movlw	-3
  4221  016016  32E3               	rrcf	plusw1,f,c
  4222  016018  0EFC               	movlw	-4
  4223  01601A  32E3               	rrcf	plusw1,f,c
  4224  01601C  0EFB               	movlw	-5
  4225  01601E  32E3               	rrcf	plusw1,f,c
  4226  016020                     l8159:
  4227                           
  4228                           ;stkvar	_arg @ sp[(-5)+0]
  4229  016020  50E1               	movf	fsr1l,w,c
  4230  016022  0FFB               	addlw	-5
  4231  016024  6ED9               	movwf	fsr2l,c
  4232  016026  50E2               	movf	fsr1h,w,c
  4233  016028  6EDA               	movwf	fsr2h,c
  4234  01602A  0EFF               	movlw	255
  4235  01602C  22DA               	addwfc	fsr2h,f,c
  4236  01602E  52DE               	movf	postinc2,f,c
  4237  016030  52DE               	movf	postinc2,f,c
  4238  016032  52DE               	movf	postinc2,f,c
  4239  016034  0EFE               	movlw	254
  4240  016036  14DD               	andwf	postdec2,w,c
  4241  016038  B4D8               	btfsc	status,2,c
  4242  01603A  D018               	goto	l8167
  4243  01603C  D7E6               	goto	l8157
  4244  01603E                     l8161:
  4245                           
  4246                           ;stkvar	_exp @ sp[(-5)+4]
  4247  01603E  0EFF               	movlw	-1
  4248  016040  2AE3               	incf	plusw1,f,c
  4249                           
  4250                           ;stkvar	_arg @ sp[(-5)+0]
  4251  016042  50E1               	movf	fsr1l,w,c
  4252  016044  0FFB               	addlw	-5
  4253  016046  6ED9               	movwf	fsr2l,c
  4254  016048  50E2               	movf	fsr1h,w,c
  4255  01604A  6EDA               	movwf	fsr2h,c
  4256  01604C  0EFF               	movlw	255
  4257  01604E  22DA               	addwfc	fsr2h,f,c
  4258  016050  2ADE               	incf	postinc2,f,c
  4259  016052  0E00               	movlw	0
  4260  016054  22DE               	addwfc	postinc2,f,c
  4261  016056  22DE               	addwfc	postinc2,f,c
  4262  016058  22DE               	addwfc	postinc2,f,c
  4263                           
  4264                           ;stkvar	_arg @ sp[(-5)+0]
  4265  01605A  90D8               	bcf	status,0,c
  4266  01605C  0EFE               	movlw	-2
  4267  01605E  32E3               	rrcf	plusw1,f,c
  4268  016060  0EFD               	movlw	-3
  4269  016062  32E3               	rrcf	plusw1,f,c
  4270  016064  0EFC               	movlw	-4
  4271  016066  32E3               	rrcf	plusw1,f,c
  4272  016068  0EFB               	movlw	-5
  4273  01606A  32E3               	rrcf	plusw1,f,c
  4274  01606C                     l8167:
  4275                           
  4276                           ;stkvar	_arg @ sp[(-5)+0]
  4277  01606C  50E1               	movf	fsr1l,w,c
  4278  01606E  0FFB               	addlw	-5
  4279  016070  6ED9               	movwf	fsr2l,c
  4280  016072  50E2               	movf	fsr1h,w,c
  4281  016074  6EDA               	movwf	fsr2h,c
  4282  016076  0EFF               	movlw	255
  4283  016078  22DA               	addwfc	fsr2h,f,c
  4284  01607A  52DE               	movf	postinc2,f,c
  4285  01607C  52DE               	movf	postinc2,f,c
  4286  01607E  52DE               	movf	postinc2,f,c
  4287  016080  0EFF               	movlw	255
  4288  016082  14DD               	andwf	postdec2,w,c
  4289  016084  B4D8               	btfsc	status,2,c
  4290  016086  D00C               	goto	l8171
  4291  016088  D7DA               	goto	l8161
  4292  01608A                     l8169:
  4293                           
  4294                           ;stkvar	_exp @ sp[(-5)+4]
  4295  01608A  0EFF               	movlw	-1
  4296  01608C  06E3               	decf	plusw1,f,c
  4297                           
  4298                           ;stkvar	_arg @ sp[(-5)+0]
  4299  01608E  90D8               	bcf	status,0,c
  4300  016090  0EFB               	movlw	-5
  4301  016092  36E3               	rlcf	plusw1,f,c
  4302  016094  0EFC               	movlw	-4
  4303  016096  36E3               	rlcf	plusw1,f,c
  4304  016098  0EFD               	movlw	-3
  4305  01609A  36E3               	rlcf	plusw1,f,c
  4306  01609C  0EFE               	movlw	-2
  4307  01609E  36E3               	rlcf	plusw1,f,c
  4308  0160A0                     l8171:
  4309                           
  4310                           ;stkvar	_arg @ sp[(-5)+0]
  4311  0160A0  0EFD               	movlw	-3
  4312  0160A2  BEE3               	btfsc	plusw1,7,c
  4313  0160A4  D007               	goto	u8280
  4314                           
  4315                           ;stkvar	_exp @ sp[(-5)+4]
  4316  0160A6  0EFF               	movlw	-1
  4317  0160A8  006F FF8C  F035    	movff	plusw1,btemp
  4318  0160AE  0E02               	movlw	2
  4319  0160B0  6035               	cpfslt	btemp^0,c
  4320  0160B2  D7EB               	goto	l8169
  4321  0160B4                     u8280:
  4322                           
  4323                           ;stkvar	_exp @ sp[(-5)+4]
  4324  0160B4  0EFF               	movlw	-1
  4325  0160B6  B0E3               	btfsc	plusw1,0,c
  4326  0160B8  D002               	goto	l8179
  4327                           
  4328                           ;stkvar	_arg @ sp[(-5)+0]
  4329  0160BA  0EFD               	movlw	-3
  4330  0160BC  9EE3               	bcf	plusw1,7,c
  4331  0160BE                     l8179:
  4332                           
  4333                           ;stkvar	_exp @ sp[(-5)+4]
  4334  0160BE  50E1               	movf	fsr1l,w,c
  4335  0160C0  0FFF               	addlw	-1
  4336  0160C2  6ED9               	movwf	fsr2l,c
  4337  0160C4  50E2               	movf	fsr1h,w,c
  4338  0160C6  6EDA               	movwf	fsr2h,c
  4339  0160C8  0EFF               	movlw	255
  4340  0160CA  22DA               	addwfc	fsr2h,f,c
  4341  0160CC  90D8               	bcf	status,0,c
  4342  0160CE  32DF               	rrcf	indf2,f,c
  4343                           
  4344                           ;stkvar	_exp @ sp[(-5)+4]
  4345  0160D0  0EFF               	movlw	-1
  4346  0160D2  006F FF8C  F040    	movff	plusw1,btemp+11
  4347  0160D8  0060  F100  F039   	movff	btemp+11,btemp+4
  4348  0160DE  6A3A               	clrf	(btemp+5)^0,c
  4349  0160E0  6A3B               	clrf	(btemp+6)^0,c
  4350  0160E2  6A3C               	clrf	(btemp+7)^0,c
  4351  0160E4  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4352  0160EA  6A3B               	clrf	(btemp+6)^0,c
  4353  0160EC  6A3A               	clrf	(btemp+5)^0,c
  4354  0160EE  6A39               	clrf	(btemp+4)^0,c
  4355                           
  4356                           ;stkvar	_arg @ sp[(-5)+0]
  4357  0160F0  50E1               	movf	fsr1l,w,c
  4358  0160F2  0FFB               	addlw	-5
  4359  0160F4  6ED9               	movwf	fsr2l,c
  4360  0160F6  50E2               	movf	fsr1h,w,c
  4361  0160F8  6EDA               	movwf	fsr2h,c
  4362  0160FA  0EFF               	movlw	255
  4363  0160FC  22DA               	addwfc	fsr2h,f,c
  4364  0160FE  5039               	movf	(btemp+4)^0,w,c
  4365  016100  12DE               	iorwf	postinc2,f,c
  4366  016102  503A               	movf	(btemp+5)^0,w,c
  4367  016104  12DE               	iorwf	postinc2,f,c
  4368  016106  503B               	movf	(btemp+6)^0,w,c
  4369  016108  12DE               	iorwf	postinc2,f,c
  4370  01610A  503C               	movf	(btemp+7)^0,w,c
  4371  01610C  12DE               	iorwf	postinc2,f,c
  4372                           
  4373                           ;stkvar	_sign @ sp[(-5)+-1]
  4374  01610E  0EFA               	movlw	-6
  4375  016110  50E3               	movf	plusw1,w,c
  4376  016112  B4D8               	btfsc	status,2,c
  4377  016114  D005               	goto	l8189
  4378                           
  4379                           ;stkvar	_val @ sp[(-5)+-5]
  4380  016116  0EF9               	movlw	-7
  4381  016118  AEE3               	btfss	plusw1,7,c
  4382  01611A  D002               	goto	l8189
  4383                           
  4384                           ;stkvar	_arg @ sp[(-5)+0]
  4385  01611C  0EFE               	movlw	-2
  4386  01611E  8EE3               	bsf	plusw1,7,c
  4387  016120                     l8189:
  4388                           
  4389                           ;stkvar	_arg @ sp[(-5)+0]
  4390  016120  0EFB               	movlw	-5
  4391  016122  006F FF8C  F035    	movff	plusw1,btemp
  4392  016128  0EFC               	movlw	-4
  4393  01612A  006F FF8C  F036    	movff	plusw1,btemp+1
  4394  016130  0EFD               	movlw	-3
  4395  016132  006F FF8C  F037    	movff	plusw1,btemp+2
  4396  016138  0EFE               	movlw	-2
  4397  01613A  006F FF8C  F038    	movff	plusw1,btemp+3
  4398  016140                     l2666:
  4399                           
  4400                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4401  016140  0EF6               	movlw	246
  4402  016142  26E1               	addwf	fsr1l,f,c
  4403  016144  0EFF               	movlw	255
  4404  016146  22E2               	addwfc	fsr1h,f,c
  4405  016148  0012               	return		;funcret
  4406  01614A                     __end_of___xxtofl:
  4407                           	opt callstack 0
  4408                           
  4409 ;; *************** function _clear_adc_scan *****************
  4410 ;; Defined at:
  4411 ;;		line 63 in file "daq.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1  [STACK] void 
  4418 ;; Registers used:
  4419 ;;		None
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/4
  4422 ;;		On exit  : 3F/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    6
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text16
  4440  018DAA                     __ptext16:
  4441                           	opt callstack 0
  4442  018DAA                     _clear_adc_scan:
  4443                           	opt callstack 24
  4444                           
  4445                           ;daq.c: 65:  R.done = 0;
  4446                           
  4447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4448                           ;incstack = 0
  4449  018DAA  0100               	movlb	0	; () banked
  4450  018DAC  6BCE               	clrf	(_R+43)& (0+255),b	;volatile
  4451                           
  4452                           ; BSR set to: 0
  4453                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4454  018DAE  0012               	return		;funcret
  4455  018DB0                     __end_of_clear_adc_scan:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function _check_help *****************
  4459 ;; Defined at:
  4460 ;;		line 40 in file "mconfig.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  flipper         1  [STACK] _Bool 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1  [STACK] void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4469 ;; Tracked objects:
  4470 ;;		On entry : 3F/1
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:   18
  4481 ;; This function calls:
  4482 ;;		_StartTimer
  4483 ;;		_TimerDone
  4484 ;;		_display_help
  4485 ;;		_display_info
  4486 ;;		_get_vterm_ptr
  4487 ;;		_help_button
  4488 ;;		_mode_lamp_bright
  4489 ;;		_mode_lamp_dim
  4490 ;;		_set_display_info
  4491 ;;		_set_temp_display_help
  4492 ;;		_set_vterm
  4493 ;;		_sprintf
  4494 ;;		_update_lcd
  4495 ;;		_vterm_dump
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text17
  4502  015D34                     __ptext17:
  4503                           	opt callstack 0
  4504  015D34                     _check_help:
  4505                           	opt callstack 12
  4506                           
  4507                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4508                           
  4509                           ; BSR set to: 0
  4510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4511                           ;incstack = 0
  4512  015D34  ECA0  F0C2         	call	_help_button	;wreg free
  4513  015D38  5035               	movf	btemp^0,w,c
  4514  015D3A  B4D8               	btfsc	status,2,c
  4515  015D3C  D0D0               	goto	l10299
  4516  015D3E  ECC1  F0C6         	call	_display_info	;wreg free
  4517  015D42  0435               	decf	btemp^0,w,c
  4518  015D44  B4D8               	btfsc	status,2,c
  4519  015D46  D0CB               	goto	l10299
  4520                           
  4521                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4522  015D48  0EDC               	movlw	220
  4523  015D4A  6EE6               	movwf	postinc1,c
  4524  015D4C  0E05               	movlw	5
  4525  015D4E  6EE6               	movwf	postinc1,c
  4526  015D50  0E0B               	movlw	11
  4527  015D52  6EE6               	movwf	postinc1,c
  4528  015D54  EC82  F0C2         	call	_StartTimer	;wreg free
  4529                           
  4530                           ;mconfig.c: 47:   if (V.debug)
  4531  015D58  0101               	movlb	1	; () banked
  4532  015D5A  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4533                           
  4534                           ; BSR set to: 1
  4535                           ;mconfig.c: 48:    vterm_dump();
  4536  015D5C  ECC1  F0B5         	call	_vterm_dump	;wreg free
  4537                           
  4538                           ;mconfig.c: 50:   set_vterm(1);
  4539  015D60  0E01               	movlw	1
  4540  015D62  6EE6               	movwf	postinc1,c
  4541  015D64  EC08  F0C6         	call	_set_vterm	;wreg free
  4542                           
  4543                           ; BSR set to: 4
  4544                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4545  015D68  ECC1  F0C6         	call	_display_info	;wreg free
  4546  015D6C  5035               	movf	btemp^0,w,c
  4547  015D6E  6EE6               	movwf	postinc1,c
  4548  015D70  EC7D  F0C6         	call	_set_temp_display_help	;wreg free
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4552  015D74  0E01               	movlw	1
  4553  015D76  6EE6               	movwf	postinc1,c
  4554  015D78  ECBE  F0C5         	call	_set_display_info	;wreg free
  4555                           
  4556                           ;mconfig.c: 53:   if (flipper) {
  4557                           ;stkvar	_flipper @ sp[(0)+-1]
  4558  015D7C  0EFF               	movlw	-1
  4559  015D7E  50E3               	movf	plusw1,w,c
  4560  015D80  B4D8               	btfsc	status,2,c
  4561  015D82  D019               	goto	l10287
  4562                           
  4563                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4564  015D84  0EB3               	movlw	low STR_15
  4565  015D86  6EE6               	movwf	postinc1,c
  4566  015D88  0EFF               	movlw	high STR_15
  4567  015D8A  6EE6               	movwf	postinc1,c
  4568  015D8C  0E0C               	movlw	low STR_17
  4569  015D8E  6EE6               	movwf	postinc1,c
  4570  015D90  0EFF               	movlw	high STR_17
  4571  015D92  6EE6               	movwf	postinc1,c
  4572  015D94  0E01               	movlw	1
  4573  015D96  6EE6               	movwf	postinc1,c
  4574  015D98  0E00               	movlw	0
  4575  015D9A  6EE6               	movwf	postinc1,c
  4576  015D9C  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4577  015DA0  0060  F0D7  FFE6   	movff	btemp,postinc1
  4578  015DA6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4579  015DAC  0E06               	movlw	6
  4580  015DAE  6EE6               	movwf	postinc1,c
  4581  015DB0  EC87  F0B8         	call	_sprintf	;wreg free
  4582                           
  4583                           ;mconfig.c: 55:   } else {
  4584  015DB4  D018               	goto	l1554
  4585  015DB6                     l10287:
  4586                           
  4587                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4588  015DB6  0EC9               	movlw	low STR_16
  4589  015DB8  6EE6               	movwf	postinc1,c
  4590  015DBA  0EFF               	movlw	high STR_16
  4591  015DBC  6EE6               	movwf	postinc1,c
  4592  015DBE  0E0C               	movlw	low STR_17
  4593  015DC0  6EE6               	movwf	postinc1,c
  4594  015DC2  0EFF               	movlw	high STR_17
  4595  015DC4  6EE6               	movwf	postinc1,c
  4596  015DC6  0E01               	movlw	1
  4597  015DC8  6EE6               	movwf	postinc1,c
  4598  015DCA  0E00               	movlw	0
  4599  015DCC  6EE6               	movwf	postinc1,c
  4600  015DCE  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4601  015DD2  0060  F0D7  FFE6   	movff	btemp,postinc1
  4602  015DD8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4603  015DDE  0E06               	movlw	6
  4604  015DE0  6EE6               	movwf	postinc1,c
  4605  015DE2  EC87  F0B8         	call	_sprintf	;wreg free
  4606  015DE6                     l1554:
  4607                           
  4608                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4609  015DE6  0101               	movlb	1	; () banked
  4610  015DE8  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4611  015DEA  32E8               	rrcf	wreg,f,c
  4612  015DEC  32E8               	rrcf	wreg,f,c
  4613  015DEE  0B03               	andlw	3
  4614  015DF0  0D24               	mullw	36
  4615  015DF2  0E12               	movlw	18
  4616  015DF4  26F3               	addwf	243,f,c
  4617  015DF6  0E00               	movlw	0
  4618  015DF8  22F4               	addwfc	244,f,c
  4619  015DFA  0E51               	movlw	low _T
  4620  015DFC  6E3F               	movwf	(btemp+10)^0,c
  4621  015DFE  0EFE               	movlw	high _T
  4622  015E00  6E40               	movwf	(btemp+11)^0,c
  4623  015E02  50F3               	movf	243,w,c
  4624  015E04  263F               	addwf	(btemp+10)^0,f,c
  4625  015E06  50F4               	movf	244,w,c
  4626  015E08  2240               	addwfc	(btemp+11)^0,f,c
  4627  015E0A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4628  015E10  0060  F103  FFE6   	movff	btemp+11,postinc1
  4629  015E16  0EBF               	movlw	low STR_19
  4630  015E18  6EE6               	movwf	postinc1,c
  4631  015E1A  0EFF               	movlw	high STR_19
  4632  015E1C  6EE6               	movwf	postinc1,c
  4633  015E1E  0E01               	movlw	1
  4634  015E20  6EE6               	movwf	postinc1,c
  4635  015E22  0E01               	movlw	1
  4636  015E24  6EE6               	movwf	postinc1,c
  4637  015E26  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4638  015E2A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4639  015E30  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4640  015E36  0E06               	movlw	6
  4641  015E38  6EE6               	movwf	postinc1,c
  4642  015E3A  EC87  F0B8         	call	_sprintf	;wreg free
  4643                           
  4644                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4645  015E3E  0101               	movlb	1	; () banked
  4646  015E40  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4647  015E42  32E8               	rrcf	wreg,f,c
  4648  015E44  32E8               	rrcf	wreg,f,c
  4649  015E46  0B03               	andlw	3
  4650  015E48  0D24               	mullw	36
  4651  015E4A  0E51               	movlw	low _T
  4652  015E4C  6E3F               	movwf	(btemp+10)^0,c
  4653  015E4E  0EFE               	movlw	high _T
  4654  015E50  6E40               	movwf	(btemp+11)^0,c
  4655  015E52  50F3               	movf	243,w,c
  4656  015E54  263F               	addwf	(btemp+10)^0,f,c
  4657  015E56  50F4               	movf	244,w,c
  4658  015E58  2240               	addwfc	(btemp+11)^0,f,c
  4659  015E5A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4660  015E60  0060  F103  FFE6   	movff	btemp+11,postinc1
  4661  015E66  0EBF               	movlw	low STR_19
  4662  015E68  6EE6               	movwf	postinc1,c
  4663  015E6A  0EFF               	movlw	high STR_19
  4664  015E6C  6EE6               	movwf	postinc1,c
  4665  015E6E  0E01               	movlw	1
  4666  015E70  6EE6               	movwf	postinc1,c
  4667  015E72  0E02               	movlw	2
  4668  015E74  6EE6               	movwf	postinc1,c
  4669  015E76  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4670  015E7A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4671  015E80  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4672  015E86  0E06               	movlw	6
  4673  015E88  6EE6               	movwf	postinc1,c
  4674  015E8A  EC87  F0B8         	call	_sprintf	;wreg free
  4675                           
  4676                           ;mconfig.c: 60:   V.help_id++;
  4677  015E8E  EE20  F19B         	lfsr	2,_V+155	;volatile
  4678  015E92  38DF               	swapf	223,w,c
  4679  015E94  6E40               	movwf	(btemp+11)^0,c
  4680  015E96  3240               	rrcf	(btemp+11)^0,f,c
  4681  015E98  3040               	rrcf	(btemp+11)^0,w,c
  4682  015E9A  0B03               	andlw	3
  4683  015E9C  6E40               	movwf	(btemp+11)^0,c
  4684  015E9E  2A40               	incf	(btemp+11)^0,f,c
  4685  015EA0  3A40               	swapf	(btemp+11)^0,f,c
  4686  015EA2  3640               	rlcf	(btemp+11)^0,f,c
  4687  015EA4  3640               	rlcf	(btemp+11)^0,f,c
  4688  015EA6  50DF               	movf	223,w,c
  4689  015EA8  1840               	xorwf	(btemp+11)^0,w,c
  4690  015EAA  0B3F               	andlw	-193
  4691  015EAC  1840               	xorwf	(btemp+11)^0,w,c
  4692  015EAE  6EDF               	movwf	223,c
  4693                           
  4694                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4695  015EB0  0EB8               	movlw	184
  4696  015EB2  6EE6               	movwf	postinc1,c
  4697  015EB4  0E0B               	movlw	11
  4698  015EB6  6EE6               	movwf	postinc1,c
  4699  015EB8  0E09               	movlw	9
  4700  015EBA  6EE6               	movwf	postinc1,c
  4701  015EBC  EC82  F0C2         	call	_StartTimer	;wreg free
  4702                           
  4703                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4704  015EC0  0EB8               	movlw	184
  4705  015EC2  6EE6               	movwf	postinc1,c
  4706  015EC4  0E0B               	movlw	11
  4707  015EC6  6EE6               	movwf	postinc1,c
  4708  015EC8  0E07               	movlw	7
  4709  015ECA  6EE6               	movwf	postinc1,c
  4710  015ECC  EC82  F0C2         	call	_StartTimer	;wreg free
  4711                           
  4712                           ;mconfig.c: 63:   mode_lamp_bright();
  4713  015ED0  EC8C  F0C6         	call	_mode_lamp_bright	;wreg free
  4714                           
  4715                           ;mconfig.c: 64:   update_lcd(1);
  4716  015ED4  0E01               	movlw	1
  4717  015ED6  6EE6               	movwf	postinc1,c
  4718  015ED8  EC00  F0B8         	call	_update_lcd	;wreg free
  4719                           
  4720                           ;mconfig.c: 65:  } else {
  4721  015EDC  D032               	goto	l1558
  4722  015EDE                     l10299:
  4723                           
  4724                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4725  015EDE  0E09               	movlw	9
  4726  015EE0  6EE6               	movwf	postinc1,c
  4727  015EE2  EC49  F0C5         	call	_TimerDone	;wreg free
  4728  015EE6  5035               	movf	btemp^0,w,c
  4729  015EE8  B4D8               	btfsc	status,2,c
  4730  015EEA  D02B               	goto	l1558
  4731                           
  4732                           ;mconfig.c: 67:    set_vterm(0);
  4733  015EEC  0E00               	movlw	0
  4734  015EEE  6EE6               	movwf	postinc1,c
  4735  015EF0  EC08  F0C6         	call	_set_vterm	;wreg free
  4736                           
  4737                           ; BSR set to: 4
  4738                           ;mconfig.c: 68:    V.help = 0;
  4739  015EF4  0101               	movlb	1	; () banked
  4740  015EF6  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4741                           
  4742                           ; BSR set to: 1
  4743                           ;mconfig.c: 69:    set_display_info(display_help());
  4744  015EF8  ECC5  F0C6         	call	_display_help	;wreg free
  4745  015EFC  5035               	movf	btemp^0,w,c
  4746  015EFE  6EE6               	movwf	postinc1,c
  4747  015F00  ECBE  F0C5         	call	_set_display_info	;wreg free
  4748                           
  4749                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4750  015F04  0060  F657  FFE6   	movff	_V+149,postinc1
  4751  015F0A  0060  F65B  FFE6   	movff	_V+150,postinc1
  4752  015F10  EC31  F0C6         	call	_mode_lamp_dim	;wreg free
  4753                           
  4754                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4755  015F14  0E0B               	movlw	11
  4756  015F16  6EE6               	movwf	postinc1,c
  4757  015F18  EC49  F0C5         	call	_TimerDone	;wreg free
  4758  015F1C  5035               	movf	btemp^0,w,c
  4759  015F1E  B4D8               	btfsc	status,2,c
  4760  015F20  D010               	goto	l1558
  4761                           
  4762                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4763  015F22  0101               	movlb	1	; () banked
  4764  015F24  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4765  015F26  A4D8               	btfss	status,2,c
  4766  015F28  D002               	goto	u10650
  4767  015F2A  0E01               	movlw	1
  4768  015F2C  D001               	goto	u10660
  4769  015F2E                     u10650:
  4770  015F2E  0E00               	movlw	0
  4771  015F30                     u10660:
  4772  015F30  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4773                           
  4774                           ; BSR set to: 1
  4775                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4776  015F32  0EDC               	movlw	220
  4777  015F34  6EE6               	movwf	postinc1,c
  4778  015F36  0E05               	movlw	5
  4779  015F38  6EE6               	movwf	postinc1,c
  4780  015F3A  0E0B               	movlw	11
  4781  015F3C  6EE6               	movwf	postinc1,c
  4782  015F3E  EC82  F0C2         	call	_StartTimer	;wreg free
  4783  015F42                     l1558:
  4784                           
  4785                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4786  015F42  52E5               	movf	postdec1,f,c
  4787  015F44  0012               	return		;funcret
  4788  015F46                     __end_of_check_help:
  4789                           	opt callstack 0
  4790                           
  4791 ;; *************** function _vterm_dump *****************
  4792 ;; Defined at:
  4793 ;;		line 118 in file "mconfig.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1  [STACK] void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4802 ;; Tracked objects:
  4803 ;;		On entry : 3F/1
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:   17
  4814 ;; This function calls:
  4815 ;;		_WaitMs
  4816 ;;		_eaDogM_WriteStringAtPos
  4817 ;;		_get_vterm_ptr
  4818 ;;		_sprintf
  4819 ;;		_wait_lcd_done
  4820 ;; This function is called by:
  4821 ;;		_check_help
  4822 ;; This function uses a reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text18
  4826  016B82                     __ptext18:
  4827                           	opt callstack 0
  4828  016B82                     _vterm_dump:
  4829                           	opt callstack 12
  4830                           
  4831                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4832                           
  4833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4834                           ;incstack = 0
  4835  016B82  0E01               	movlw	1
  4836  016B84  6EE6               	movwf	postinc1,c
  4837  016B86  0E00               	movlw	0
  4838  016B88  6EE6               	movwf	postinc1,c
  4839  016B8A  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4840  016B8E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4841  016B94  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4842  016B9A  0E00               	movlw	0
  4843  016B9C  6EE6               	movwf	postinc1,c
  4844  016B9E  0E00               	movlw	0
  4845  016BA0  6EE6               	movwf	postinc1,c
  4846  016BA2  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4847  016BA6  0060  F0D7  FFE6   	movff	btemp,postinc1
  4848  016BAC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4849  016BB2  0E88               	movlw	low STR_21
  4850  016BB4  6EE6               	movwf	postinc1,c
  4851  016BB6  0EFF               	movlw	high STR_21
  4852  016BB8  6EE6               	movwf	postinc1,c
  4853  016BBA  0E01               	movlw	low (_V+1)
  4854  016BBC  6EE6               	movwf	postinc1,c
  4855  016BBE  0E01               	movlw	high (_V+1)
  4856  016BC0  6EE6               	movwf	postinc1,c
  4857  016BC2  0E08               	movlw	8
  4858  016BC4  6EE6               	movwf	postinc1,c
  4859  016BC6  EC87  F0B8         	call	_sprintf	;wreg free
  4860                           
  4861                           ;mconfig.c: 121:  wait_lcd_done();
  4862  016BCA  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4866  016BCE  0E01               	movlw	low (_V+1)
  4867  016BD0  6EE6               	movwf	postinc1,c
  4868  016BD2  0E01               	movlw	high (_V+1)
  4869  016BD4  6EE6               	movwf	postinc1,c
  4870  016BD6  0E00               	movlw	0
  4871  016BD8  6EE6               	movwf	postinc1,c
  4872  016BDA  0E00               	movlw	0
  4873  016BDC  6EE6               	movwf	postinc1,c
  4874  016BDE  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  4875                           
  4876                           ; BSR set to: 59
  4877                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4878  016BE2  0E01               	movlw	1
  4879  016BE4  6EE6               	movwf	postinc1,c
  4880  016BE6  0E01               	movlw	1
  4881  016BE8  6EE6               	movwf	postinc1,c
  4882  016BEA  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4883  016BEE  0060  F0D7  FFE6   	movff	btemp,postinc1
  4884  016BF4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4885  016BFA  0E00               	movlw	0
  4886  016BFC  6EE6               	movwf	postinc1,c
  4887  016BFE  0E01               	movlw	1
  4888  016C00  6EE6               	movwf	postinc1,c
  4889  016C02  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4890  016C06  0060  F0D7  FFE6   	movff	btemp,postinc1
  4891  016C0C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4892  016C12  0E88               	movlw	low STR_21
  4893  016C14  6EE6               	movwf	postinc1,c
  4894  016C16  0EFF               	movlw	high STR_21
  4895  016C18  6EE6               	movwf	postinc1,c
  4896  016C1A  0E01               	movlw	low (_V+1)
  4897  016C1C  6EE6               	movwf	postinc1,c
  4898  016C1E  0E01               	movlw	high (_V+1)
  4899  016C20  6EE6               	movwf	postinc1,c
  4900  016C22  0E08               	movlw	8
  4901  016C24  6EE6               	movwf	postinc1,c
  4902  016C26  EC87  F0B8         	call	_sprintf	;wreg free
  4903                           
  4904                           ;mconfig.c: 124:  wait_lcd_done();
  4905  016C2A  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  4906                           
  4907                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4908  016C2E  0E01               	movlw	low (_V+1)
  4909  016C30  6EE6               	movwf	postinc1,c
  4910  016C32  0E01               	movlw	high (_V+1)
  4911  016C34  6EE6               	movwf	postinc1,c
  4912  016C36  0E00               	movlw	0
  4913  016C38  6EE6               	movwf	postinc1,c
  4914  016C3A  0E01               	movlw	1
  4915  016C3C  6EE6               	movwf	postinc1,c
  4916  016C3E  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  4917                           
  4918                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4919  016C42  0E01               	movlw	1
  4920  016C44  6EE6               	movwf	postinc1,c
  4921  016C46  0E02               	movlw	2
  4922  016C48  6EE6               	movwf	postinc1,c
  4923  016C4A  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4924  016C4E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4925  016C54  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4926  016C5A  0E00               	movlw	0
  4927  016C5C  6EE6               	movwf	postinc1,c
  4928  016C5E  0E02               	movlw	2
  4929  016C60  6EE6               	movwf	postinc1,c
  4930  016C62  EC8A  F0C3         	call	_get_vterm_ptr	;wreg free
  4931  016C66  0060  F0D7  FFE6   	movff	btemp,postinc1
  4932  016C6C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4933  016C72  0E88               	movlw	low STR_21
  4934  016C74  6EE6               	movwf	postinc1,c
  4935  016C76  0EFF               	movlw	high STR_21
  4936  016C78  6EE6               	movwf	postinc1,c
  4937  016C7A  0E01               	movlw	low (_V+1)
  4938  016C7C  6EE6               	movwf	postinc1,c
  4939  016C7E  0E01               	movlw	high (_V+1)
  4940  016C80  6EE6               	movwf	postinc1,c
  4941  016C82  0E08               	movlw	8
  4942  016C84  6EE6               	movwf	postinc1,c
  4943  016C86  EC87  F0B8         	call	_sprintf	;wreg free
  4944                           
  4945                           ;mconfig.c: 127:  wait_lcd_done();
  4946  016C8A  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4950  016C8E  0E01               	movlw	low (_V+1)
  4951  016C90  6EE6               	movwf	postinc1,c
  4952  016C92  0E01               	movlw	high (_V+1)
  4953  016C94  6EE6               	movwf	postinc1,c
  4954  016C96  0E00               	movlw	0
  4955  016C98  6EE6               	movwf	postinc1,c
  4956  016C9A  0E02               	movlw	2
  4957  016C9C  6EE6               	movwf	postinc1,c
  4958  016C9E  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  4959                           
  4960                           ; BSR set to: 59
  4961                           ;mconfig.c: 129:  WaitMs(3000);
  4962  016CA2  0EB8               	movlw	184
  4963  016CA4  6EE6               	movwf	postinc1,c
  4964  016CA6  0E0B               	movlw	11
  4965  016CA8  6EE6               	movwf	postinc1,c
  4966  016CAA  ECD8  F0C2         	call	_WaitMs	;wreg free
  4967                           
  4968                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4969  016CAE  0012               	return		;funcret
  4970  016CB0                     __end_of_vterm_dump:
  4971                           	opt callstack 0
  4972                           
  4973 ;; *************** function _sprintf *****************
  4974 ;; Defined at:
  4975 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  s               2  [STACK] PTR unsigned char 
  4978 ;;		 -> D.lcd(216), D(218), V(187), 
  4979 ;;  fmt             2  [STACK] PTR const unsigned char 
  4980 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  4981 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  4982 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  4983 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  4984 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  4985 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  4986 ;;		 -> STR_1(17), 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  f               6  [STACK] struct _IO_FILE
  4989 ;;  ap              2  [STACK] PTR void [1]
  4990 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4991 ;;  ret             2    0        int 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  2  [STACK] int 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/4
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:   14
  5008 ;; This function calls:
  5009 ;;		_vfprintf
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;;		_check_help
  5013 ;;		_vterm_dump
  5014 ;; This function uses a reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text19
  5018  01710E                     __ptext19:
  5019                           	opt callstack 0
  5020  01710E                     _sprintf:
  5021                           	opt callstack 0
  5022                           
  5023                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5024  01710E  0E08               	movlw	8
  5025  017110  26E1               	addwf	fsr1l,f,c
  5026  017112  0E00               	movlw	0
  5027  017114  22E2               	addwfc	fsr1h,f,c
  5028                           
  5029                           ;incstack = 0
  5030  017116  0EFE               	movlw	254
  5031  017118  6E3F               	movwf	(btemp+10)^0,c
  5032  01711A  0EFF               	movlw	255
  5033  01711C  6E40               	movwf	(btemp+11)^0,c
  5034                           
  5035                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5036  01711E  0EF5               	movlw	245
  5037  017120  24E1               	addwf	fsr1l,w,c
  5038  017122  6E3D               	movwf	(btemp+8)^0,c
  5039  017124  0EFF               	movlw	255
  5040  017126  20E2               	addwfc	fsr1h,w,c
  5041  017128  6E3E               	movwf	(btemp+9)^0,c
  5042  01712A  503F               	movf	(btemp+10)^0,w,c
  5043  01712C  263D               	addwf	(btemp+8)^0,f,c
  5044  01712E  5040               	movf	(btemp+11)^0,w,c
  5045  017130  223E               	addwfc	(btemp+9)^0,f,c
  5046                           
  5047                           ;stkvar	_ap @ sp[(-8)+6]
  5048  017132  0EFF               	movlw	-1
  5049  017134  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  5050  01713A  0EFE               	movlw	-2
  5051  01713C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  5052                           
  5053                           ;stkvar	_s @ sp[(-8)+-3]
  5054  017142  0EF5               	movlw	-11
  5055  017144  006F FF8C  F03F    	movff	plusw1,btemp+10
  5056  01714A  0EF6               	movlw	-10
  5057  01714C  006F FF8C  F040    	movff	plusw1,btemp+11
  5058                           
  5059                           ;stkvar	_f @ sp[(-8)+0]
  5060  017152  0EF9               	movlw	-7
  5061  017154  0060  F103  FFE3   	movff	btemp+11,plusw1
  5062  01715A  0EF8               	movlw	-8
  5063  01715C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5064                           
  5065                           ;stkvar	_f @ sp[(-8)+0]
  5066  017162  0EFA               	movlw	250
  5067  017164  24E1               	addwf	fsr1l,w,c
  5068  017166  6ED9               	movwf	fsr2l,c
  5069  017168  0EFF               	movlw	255
  5070  01716A  20E2               	addwfc	fsr1h,w,c
  5071  01716C  6EDA               	movwf	fsr2h,c
  5072  01716E  0E00               	movlw	0
  5073  017170  6EDE               	movwf	postinc2,c
  5074  017172  0E00               	movlw	0
  5075  017174  6EDD               	movwf	postdec2,c
  5076                           
  5077                           ;stkvar	_f @ sp[(-8)+0]
  5078  017176  0EFC               	movlw	252
  5079  017178  24E1               	addwf	fsr1l,w,c
  5080  01717A  6ED9               	movwf	fsr2l,c
  5081  01717C  0EFF               	movlw	255
  5082  01717E  20E2               	addwfc	fsr1h,w,c
  5083  017180  6EDA               	movwf	fsr2h,c
  5084  017182  0E00               	movlw	0
  5085  017184  6EDE               	movwf	postinc2,c
  5086  017186  0E00               	movlw	0
  5087  017188  6EDD               	movwf	postdec2,c
  5088                           
  5089                           ;stkvar	_ap @ sp[(-8)+6]
  5090  01718A  0EFE               	movlw	254
  5091  01718C  24E1               	addwf	fsr1l,w,c
  5092  01718E  6E35               	movwf	btemp^0,c
  5093  017190  0EFF               	movlw	255
  5094  017192  20E2               	addwfc	fsr1h,w,c
  5095  017194  6E36               	movwf	(btemp+1)^0,c
  5096  017196  0060  F0D7  FFE6   	movff	btemp,postinc1
  5097  01719C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5098                           
  5099                           ;stkvar	_fmt @ sp[(-10)+-5]
  5100  0171A2  0EF1               	movlw	-15
  5101  0171A4  006F FF8F FFE6     	movff	plusw1,postinc1
  5102  0171AA  006F FF8F FFE6     	movff	plusw1,postinc1
  5103                           
  5104                           ;stkvar	_f @ sp[(-12)+0]
  5105  0171B0  0EF4               	movlw	244
  5106  0171B2  24E1               	addwf	fsr1l,w,c
  5107  0171B4  6E35               	movwf	btemp^0,c
  5108  0171B6  0EFF               	movlw	255
  5109  0171B8  20E2               	addwfc	fsr1h,w,c
  5110  0171BA  6E36               	movwf	(btemp+1)^0,c
  5111  0171BC  0060  F0D7  FFE6   	movff	btemp,postinc1
  5112  0171C2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5113  0171C8  EC63  F0BB         	call	_vfprintf	;wreg free
  5114                           
  5115                           ;stkvar	_f @ sp[(-8)+0]
  5116  0171CC  0EFA               	movlw	250
  5117  0171CE  24E1               	addwf	fsr1l,w,c
  5118  0171D0  6ED9               	movwf	fsr2l,c
  5119  0171D2  0EFF               	movlw	255
  5120  0171D4  20E2               	addwfc	fsr1h,w,c
  5121  0171D6  6EDA               	movwf	fsr2h,c
  5122  0171D8  006F FF78  F03F    	movff	postinc2,btemp+10
  5123  0171DE  006F FF74  F040    	movff	postdec2,btemp+11
  5124                           
  5125                           ;stkvar	_s @ sp[(-8)+-3]
  5126  0171E4  0EF5               	movlw	-11
  5127  0171E6  006F FF8C  F03D    	movff	plusw1,btemp+8
  5128  0171EC  0EF6               	movlw	-10
  5129  0171EE  006F FF8C  F03E    	movff	plusw1,btemp+9
  5130  0171F4  503F               	movf	(btemp+10)^0,w,c
  5131  0171F6  243D               	addwf	(btemp+8)^0,w,c
  5132  0171F8  6ED9               	movwf	fsr2l,c
  5133  0171FA  5040               	movf	(btemp+11)^0,w,c
  5134  0171FC  203E               	addwfc	(btemp+9)^0,w,c
  5135  0171FE  6EDA               	movwf	fsr2h,c
  5136  017200  0E00               	movlw	0
  5137  017202  6EDF               	movwf	indf2,c
  5138                           
  5139                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5140  017204  0EF8               	movlw	248
  5141  017206  26E1               	addwf	fsr1l,f,c
  5142  017208  0EFF               	movlw	255
  5143  01720A  22E2               	addwfc	fsr1h,f,c
  5144  01720C  52E5               	movf	postdec1,f,c
  5145  01720E  50E7               	movf	indf1,w,c
  5146  017210  5EE1               	subwf	fsr1l,f,c
  5147  017212  0E00               	movlw	0
  5148  017214  5AE2               	subwfb	fsr1h,f,c
  5149  017216  0012               	return		;funcret
  5150  017218                     __end_of_sprintf:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function _get_vterm_ptr *****************
  5154 ;; Defined at:
  5155 ;;		line 113 in file "mconfig.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  line            1  [STACK] unsigned char 
  5158 ;;  vterm           1  [STACK] unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2  [STACK] PTR unsigned char 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/4
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;Total ram usage:        0 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    6
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_main
  5181 ;;		_check_help
  5182 ;;		_vterm_dump
  5183 ;; This function uses a reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text20
  5187  018714                     __ptext20:
  5188                           	opt callstack 0
  5189  018714                     _get_vterm_ptr:
  5190                           	opt callstack 24
  5191                           
  5192                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5193                           ;stkvar	_vterm @ sp[(0)+-2]
  5194                           
  5195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5196                           ;incstack = 0
  5197  018714  0EFE               	movlw	-2
  5198  018716  50E3               	movf	plusw1,w,c
  5199  018718  0B03               	andlw	3
  5200  01871A  0D36               	mullw	54
  5201  01871C  0E00               	movlw	low _D
  5202  01871E  6E35               	movwf	btemp^0,c
  5203  018720  0E04               	movlw	high _D
  5204  018722  6E36               	movwf	(btemp+1)^0,c
  5205  018724  50F3               	movf	243,w,c
  5206  018726  2635               	addwf	btemp^0,f,c
  5207  018728  50F4               	movf	244,w,c
  5208  01872A  2236               	addwfc	(btemp+1)^0,f,c
  5209                           
  5210                           ;stkvar	_line @ sp[(0)+-1]
  5211  01872C  0EFF               	movlw	-1
  5212  01872E  50E3               	movf	plusw1,w,c
  5213  018730  0B03               	andlw	3
  5214  018732  0D12               	mullw	18
  5215  018734  50F3               	movf	243,w,c
  5216  018736  2635               	addwf	btemp^0,f,c
  5217  018738  50F4               	movf	244,w,c
  5218  01873A  2236               	addwfc	(btemp+1)^0,f,c
  5219                           
  5220                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5221  01873C  52E5               	movf	postdec1,f,c
  5222  01873E  52E5               	movf	postdec1,f,c
  5223  018740  0012               	return		;funcret
  5224  018742                     __end_of_get_vterm_ptr:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function _WaitMs *****************
  5228 ;; Defined at:
  5229 ;;		line 32 in file "timers.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  numMilliseco    2  [STACK] const unsigned short 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1  [STACK] void 
  5236 ;; Registers used:
  5237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/1
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5247 ;;Total ram usage:        0 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    7
  5250 ;; This function calls:
  5251 ;;		_StartTimer
  5252 ;;		_TimerDone
  5253 ;; This function is called by:
  5254 ;;		_main
  5255 ;;		_vterm_dump
  5256 ;; This function uses a reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text21
  5260  0185B0                     __ptext21:
  5261                           	opt callstack 0
  5262  0185B0                     _WaitMs:
  5263                           	opt callstack 21
  5264                           
  5265                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5266                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5267                           
  5268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5269                           ;incstack = 0
  5270  0185B0  0EFE               	movlw	-2
  5271  0185B2  006F FF8F FFE6     	movff	plusw1,postinc1
  5272  0185B8  006F FF8F FFE6     	movff	plusw1,postinc1
  5273  0185BE  0E00               	movlw	0
  5274  0185C0  6EE6               	movwf	postinc1,c
  5275  0185C2  EC82  F0C2         	call	_StartTimer	;wreg free
  5276                           
  5277                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5278  0185C6  D005               	goto	l8109
  5279  0185C8                     l1484:
  5280                           
  5281                           ;timers.c: 36:   __nop();
  5282  0185C8  F000               	nop	
  5283                           
  5284                           ;timers.c: 37:   __nop();
  5285  0185CA  F000               	nop	
  5286                           
  5287                           ;timers.c: 38:   __nop();
  5288  0185CC  F000               	nop	
  5289                           
  5290                           ;timers.c: 39:   __nop();
  5291  0185CE  F000               	nop	
  5292  0185D0  0004               	clrwdt		;# 
  5293  0185D2                     l8109:
  5294                           
  5295                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5296  0185D2  0E00               	movlw	0
  5297  0185D4  6EE6               	movwf	postinc1,c
  5298  0185D6  EC49  F0C5         	call	_TimerDone	;wreg free
  5299  0185DA  5035               	movf	btemp^0,w,c
  5300  0185DC  B4D8               	btfsc	status,2,c
  5301  0185DE  D7F4               	goto	l1484
  5302                           
  5303                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5304  0185E0  52E5               	movf	postdec1,f,c
  5305  0185E2  52E5               	movf	postdec1,f,c
  5306  0185E4  0012               	return		;funcret
  5307  0185E6                     __end_of_WaitMs:
  5308                           	opt callstack 0
  5309                           
  5310 ;; *************** function _update_lcd *****************
  5311 ;; Defined at:
  5312 ;;		line 82 in file "mconfig.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  vterm           1  [STACK] unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1  [STACK] unsigned char 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/4
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:   17
  5333 ;; This function calls:
  5334 ;;		_eaDogM_WriteStringAtPos
  5335 ;;		_wait_lcd_done
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;;		_check_help
  5339 ;; This function uses a reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text22
  5343  017000                     __ptext22:
  5344                           	opt callstack 0
  5345  017000                     _update_lcd:
  5346                           	opt callstack 13
  5347                           
  5348                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5349                           ;stkvar	_vterm @ sp[(0)+-1]
  5350                           
  5351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5352                           ;incstack = 0
  5353  017000  0EFF               	movlw	-1
  5354  017002  006F FF8C  F035    	movff	plusw1,btemp
  5355  017008  0E03               	movlw	3
  5356  01700A  1635               	andwf	btemp^0,f,c
  5357  01700C  0EFF               	movlw	-1
  5358  01700E  0060  F0D7  FFE3   	movff	btemp,plusw1
  5359                           
  5360                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5361  017014  0104               	movlb	4	; () banked
  5362  017016  A1D8               	btfss	(_D+216)& (0+255),0,b
  5363  017018  D004               	goto	l10171
  5364                           
  5365                           ; BSR set to: 4
  5366                           ;stkvar	_vterm @ sp[(0)+-1]
  5367  01701A  0EFF               	movlw	-1
  5368  01701C  50E3               	movf	plusw1,w,c
  5369  01701E  B4D8               	btfsc	status,2,c
  5370  017020  D074               	goto	l1562
  5371  017022                     l10171:
  5372                           
  5373                           ; BSR set to: 4
  5374                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5375                           ;stkvar	_vterm @ sp[(0)+-1]
  5376  017022  0EFF               	movlw	-1
  5377  017024  50E3               	movf	plusw1,w,c
  5378  017026  0D36               	mullw	54
  5379  017028  0E10               	movlw	low (_D+16)
  5380  01702A  24F3               	addwf	243,w,c
  5381  01702C  6ED9               	movwf	fsr2l,c
  5382  01702E  0E04               	movlw	high (_D+16)
  5383  017030  20F4               	addwfc	prodh,w,c
  5384  017032  6EDA               	movwf	fsr2h,c
  5385  017034  0E00               	movlw	0
  5386  017036  6EDF               	movwf	indf2,c
  5387                           
  5388                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5389                           ;stkvar	_vterm @ sp[(0)+-1]
  5390  017038  0EFF               	movlw	-1
  5391  01703A  50E3               	movf	plusw1,w,c
  5392  01703C  0D36               	mullw	54
  5393  01703E  0E22               	movlw	low (_D+34)
  5394  017040  24F3               	addwf	243,w,c
  5395  017042  6ED9               	movwf	fsr2l,c
  5396  017044  0E04               	movlw	high (_D+34)
  5397  017046  20F4               	addwfc	prodh,w,c
  5398  017048  6EDA               	movwf	fsr2h,c
  5399  01704A  0E00               	movlw	0
  5400  01704C  6EDF               	movwf	indf2,c
  5401                           
  5402                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5403                           ;stkvar	_vterm @ sp[(0)+-1]
  5404  01704E  0EFF               	movlw	-1
  5405  017050  50E3               	movf	plusw1,w,c
  5406  017052  0D36               	mullw	54
  5407  017054  0E34               	movlw	low (_D+52)
  5408  017056  24F3               	addwf	243,w,c
  5409  017058  6ED9               	movwf	fsr2l,c
  5410  01705A  0E04               	movlw	high (_D+52)
  5411  01705C  20F4               	addwfc	prodh,w,c
  5412  01705E  6EDA               	movwf	fsr2h,c
  5413  017060  0E00               	movlw	0
  5414  017062  6EDF               	movwf	indf2,c
  5415                           
  5416                           ; BSR set to: 4
  5417                           ;mconfig.c: 92:  wait_lcd_done();
  5418  017064  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5422                           ;stkvar	_vterm @ sp[(0)+-1]
  5423  017068  0EFF               	movlw	-1
  5424  01706A  50E3               	movf	plusw1,w,c
  5425  01706C  0D36               	mullw	54
  5426  01706E  0E00               	movlw	low _D
  5427  017070  6E3F               	movwf	(btemp+10)^0,c
  5428  017072  0E04               	movlw	high _D
  5429  017074  6E40               	movwf	(btemp+11)^0,c
  5430  017076  50F3               	movf	243,w,c
  5431  017078  263F               	addwf	(btemp+10)^0,f,c
  5432  01707A  50F4               	movf	244,w,c
  5433  01707C  2240               	addwfc	(btemp+11)^0,f,c
  5434  01707E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5435  017084  0060  F103  FFE6   	movff	btemp+11,postinc1
  5436  01708A  0E00               	movlw	0
  5437  01708C  6EE6               	movwf	postinc1,c
  5438  01708E  0E00               	movlw	0
  5439  017090  6EE6               	movwf	postinc1,c
  5440  017092  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  5441                           
  5442                           ; BSR set to: 59
  5443                           ;mconfig.c: 94:  wait_lcd_done();
  5444  017096  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5448                           ;stkvar	_vterm @ sp[(0)+-1]
  5449  01709A  0EFF               	movlw	-1
  5450  01709C  50E3               	movf	plusw1,w,c
  5451  01709E  0D36               	mullw	54
  5452  0170A0  0E00               	movlw	low _D
  5453  0170A2  6E3F               	movwf	(btemp+10)^0,c
  5454  0170A4  0E04               	movlw	high _D
  5455  0170A6  6E40               	movwf	(btemp+11)^0,c
  5456  0170A8  0E12               	movlw	18
  5457  0170AA  263F               	addwf	(btemp+10)^0,f,c
  5458  0170AC  0E00               	movlw	0
  5459  0170AE  2240               	addwfc	(btemp+11)^0,f,c
  5460  0170B0  50F3               	movf	243,w,c
  5461  0170B2  263F               	addwf	(btemp+10)^0,f,c
  5462  0170B4  50F4               	movf	244,w,c
  5463  0170B6  2240               	addwfc	(btemp+11)^0,f,c
  5464  0170B8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5465  0170BE  0060  F103  FFE6   	movff	btemp+11,postinc1
  5466  0170C4  0E00               	movlw	0
  5467  0170C6  6EE6               	movwf	postinc1,c
  5468  0170C8  0E01               	movlw	1
  5469  0170CA  6EE6               	movwf	postinc1,c
  5470  0170CC  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  5471                           
  5472                           ; BSR set to: 59
  5473                           ;mconfig.c: 96:  wait_lcd_done();
  5474  0170D0  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5478                           ;stkvar	_vterm @ sp[(0)+-1]
  5479  0170D4  0EFF               	movlw	-1
  5480  0170D6  50E3               	movf	plusw1,w,c
  5481  0170D8  0D36               	mullw	54
  5482  0170DA  0E00               	movlw	low _D
  5483  0170DC  6E3F               	movwf	(btemp+10)^0,c
  5484  0170DE  0E04               	movlw	high _D
  5485  0170E0  6E40               	movwf	(btemp+11)^0,c
  5486  0170E2  0E24               	movlw	36
  5487  0170E4  263F               	addwf	(btemp+10)^0,f,c
  5488  0170E6  0E00               	movlw	0
  5489  0170E8  2240               	addwfc	(btemp+11)^0,f,c
  5490  0170EA  50F3               	movf	243,w,c
  5491  0170EC  263F               	addwf	(btemp+10)^0,f,c
  5492  0170EE  50F4               	movf	244,w,c
  5493  0170F0  2240               	addwfc	(btemp+11)^0,f,c
  5494  0170F2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5495  0170F8  0060  F103  FFE6   	movff	btemp+11,postinc1
  5496  0170FE  0E00               	movlw	0
  5497  017100  6EE6               	movwf	postinc1,c
  5498  017102  0E02               	movlw	2
  5499  017104  6EE6               	movwf	postinc1,c
  5500  017106  ECF3  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  5501  01710A                     l1562:
  5502                           
  5503                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5504  01710A  52E5               	movf	postdec1,f,c
  5505  01710C  0012               	return		;funcret
  5506  01710E                     __end_of_update_lcd:
  5507                           	opt callstack 0
  5508                           
  5509 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5510 ;; Defined at:
  5511 ;;		line 252 in file "eadog.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  r               1  [STACK] const unsigned char 
  5514 ;;  c               1  [STACK] const unsigned char 
  5515 ;;  strPtr          2  [STACK] PTR unsigned char 
  5516 ;;		 -> D.lcd(216), D(218), V(187), 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1  [STACK] void 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5523 ;; Tracked objects:
  5524 ;;		On entry : 3F/0
  5525 ;;		On exit  : 3F/3B
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:   16
  5535 ;; This function calls:
  5536 ;;		_eaDogM_WriteString
  5537 ;;		_send_lcd_cmd_dma
  5538 ;; This function is called by:
  5539 ;;		_update_lcd
  5540 ;;		_vterm_dump
  5541 ;; This function uses a reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text23
  5545  0185E6                     __ptext23:
  5546                           	opt callstack 0
  5547  0185E6                     _eaDogM_WriteStringAtPos:
  5548                           	opt callstack 13
  5549                           
  5550                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5551                           ;stkvar	_c @ sp[(0)+-2]
  5552                           
  5553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5554                           ;incstack = 0
  5555  0185E6  0EFE               	movlw	-2
  5556  0185E8  006F FF8C  F040    	movff	plusw1,btemp+11
  5557                           
  5558                           ;stkvar	_r @ sp[(0)+-1]
  5559  0185EE  0EFF               	movlw	-1
  5560  0185F0  50E3               	movf	plusw1,w,c
  5561  0185F2  0D10               	mullw	16
  5562  0185F4  50F3               	movf	243,w,c
  5563  0185F6  2440               	addwf	(btemp+11)^0,w,c
  5564  0185F8  0F80               	addlw	128
  5565  0185FA  6EE6               	movwf	postinc1,c
  5566  0185FC  ECD8  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  5567                           
  5568                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5569                           ;stkvar	_strPtr @ sp[(0)+-4]
  5570  018600  0EFC               	movlw	-4
  5571  018602  006F FF8F FFE6     	movff	plusw1,postinc1
  5572  018608  006F FF8F FFE6     	movff	plusw1,postinc1
  5573  01860E  ECB7  F0BB         	call	_eaDogM_WriteString	;wreg free
  5574                           
  5575                           ; BSR set to: 59
  5576                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5577  018612  52E5               	movf	postdec1,f,c
  5578  018614  52E5               	movf	postdec1,f,c
  5579  018616  52E5               	movf	postdec1,f,c
  5580  018618  52E5               	movf	postdec1,f,c
  5581  01861A  0012               	return		;funcret
  5582  01861C                     __end_of_eaDogM_WriteStringAtPos:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function _send_lcd_cmd_dma *****************
  5586 ;; Defined at:
  5587 ;;		line 205 in file "eadog.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  strPtr          1  [STACK] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1  [STACK] void 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/3D
  5598 ;;		On exit  : 3F/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   15
  5608 ;; This function calls:
  5609 ;;		_printf
  5610 ;;		_ringBufS_flush
  5611 ;;		_start_lcd
  5612 ;;		_wait_lcd_done
  5613 ;;		_wait_lcd_set
  5614 ;; This function is called by:
  5615 ;;		_eaDogM_WriteCommand
  5616 ;;		_eaDogM_WriteStringAtPos
  5617 ;; This function uses a reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text24
  5621  0181B0                     __ptext24:
  5622                           	opt callstack 0
  5623  0181B0                     _send_lcd_cmd_dma:
  5624                           	opt callstack 13
  5625                           
  5626                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5627                           
  5628                           ; BSR set to: 59
  5629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5630                           ;incstack = 0
  5631  0181B0  ECD8  F0C6         	call	_wait_lcd_set	;wreg free
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5635  0181B4  0E00               	movlw	0
  5636  0181B6  6EE6               	movwf	postinc1,c
  5637  0181B8  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5638  0181BE  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5639  0181C4  ECF4  F0BC         	call	_ringBufS_flush	;wreg free
  5640  0181C8  92BC               	bcf	188,1,c	;volatile
  5641  0181CA  94BC               	bcf	188,2,c	;volatile
  5642                           
  5643                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5644  0181CC  013B               	movlb	59	; () banked
  5645  0181CE  9FFC               	bcf	252,7,b	;volatile
  5646                           
  5647                           ; BSR set to: 59
  5648                           ;eadog.c: 214:  DMA1SSZ = 1;
  5649  0181D0  0E00               	movlw	0
  5650  0181D2  6FF8               	movwf	248,b	;volatile
  5651  0181D4  0E01               	movlw	1
  5652  0181D6  6FF7               	movwf	247,b	;volatile
  5653                           
  5654                           ; BSR set to: 59
  5655                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5656  0181D8  8FFC               	bsf	252,7,b	;volatile
  5657                           
  5658                           ; BSR set to: 59
  5659                           ;eadog.c: 216:  printf("%c", strPtr);
  5660                           ;stkvar	_strPtr @ sp[(0)+-1]
  5661  0181DA  0EFF               	movlw	-1
  5662  0181DC  50E3               	movf	plusw1,w,c
  5663  0181DE  6EE6               	movwf	postinc1,c
  5664  0181E0  0E00               	movlw	0
  5665  0181E2  6EE6               	movwf	postinc1,c
  5666  0181E4  0EF9               	movlw	low STR_13
  5667  0181E6  6EE6               	movwf	postinc1,c
  5668  0181E8  0EFF               	movlw	high STR_13
  5669  0181EA  6EE6               	movwf	postinc1,c
  5670  0181EC  0E04               	movlw	4
  5671  0181EE  6EE6               	movwf	postinc1,c
  5672  0181F0  ECF0  F0BF         	call	_printf	;wreg free
  5673                           
  5674                           ;eadog.c: 217:  start_lcd();
  5675  0181F4  ECDB  F0C6         	call	_start_lcd	;wreg free
  5676                           
  5677                           ; BSR set to: 59
  5678                           ;eadog.c: 218:  wait_lcd_done();
  5679  0181F8  ECFA  F0C5         	call	_wait_lcd_done	;wreg free
  5680                           
  5681                           ; BSR set to: 0
  5682  0181FC  82BC               	bsf	188,1,c	;volatile
  5683                           
  5684                           ; BSR set to: 0
  5685                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5686  0181FE  52E5               	movf	postdec1,f,c
  5687  018200  0012               	return		;funcret
  5688  018202                     __end_of_send_lcd_cmd_dma:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _wait_lcd_done *****************
  5692 ;; Defined at:
  5693 ;;		line 141 in file "eadog.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;		None
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1  [STACK] void 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/1
  5704 ;;		On exit  : 3F/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5711 ;;Total ram usage:        0 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    7
  5714 ;; This function calls:
  5715 ;;		_wdtdelay
  5716 ;; This function is called by:
  5717 ;;		_send_lcd_cmd_dma
  5718 ;;		_update_lcd
  5719 ;;		_vterm_dump
  5720 ;; This function uses a reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text25
  5724  018BF4                     __ptext25:
  5725                           	opt callstack 0
  5726  018BF4                     _wait_lcd_done:
  5727                           	opt callstack 22
  5728                           
  5729                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5730                           
  5731                           ; BSR set to: 0
  5732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5733                           ;incstack = 0
  5734  018BF4  0100               	movlb	0	; () banked
  5735  018BF6  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5736  018BF8  D7FD               	goto	_wait_lcd_done
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;eadog.c: 144:  wdtdelay(50);
  5740  018BFA  0E32               	movlw	50
  5741  018BFC  6EE6               	movwf	postinc1,c
  5742  018BFE  0E00               	movlw	0
  5743  018C00  6EE6               	movwf	postinc1,c
  5744  018C02  0E00               	movlw	0
  5745  018C04  6EE6               	movwf	postinc1,c
  5746  018C06  0E00               	movlw	0
  5747  018C08  6EE6               	movwf	postinc1,c
  5748  018C0A  EC7E  F0C0         	call	_wdtdelay	;wreg free
  5749                           
  5750                           ; BSR set to: 0
  5751                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5752  018C0E  0012               	return		;funcret
  5753  018C10                     __end_of_wait_lcd_done:
  5754                           	opt callstack 0
  5755                           
  5756 ;; *************** function _wdtdelay *****************
  5757 ;; Defined at:
  5758 ;;		line 22 in file "eadog.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  delay           4  [STACK] const unsigned long 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1  [STACK] void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 3F/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    6
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_init_display
  5783 ;;		_send_lcd_cmd
  5784 ;;		_send_lcd_cmd_long
  5785 ;;		_wait_lcd_done
  5786 ;; This function uses a reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text26
  5790  0180FC                     __ptext26:
  5791                           	opt callstack 0
  5792  0180FC                     _wdtdelay:
  5793                           	opt callstack 22
  5794                           
  5795                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5796                           
  5797                           ; BSR set to: 0
  5798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5799                           ;incstack = 0
  5800  0180FC  0100               	movlb	0	; () banked
  5801  0180FE  6B90               	clrf	wdtdelay@dcount& (0+255),b
  5802  018100  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5803  018102  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5804  018104  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5805  018106                     l1329:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;eadog.c: 27:   __nop();
  5809  018106  F000               	nop	
  5810  018108  0004               	clrwdt		;# 
  5811                           
  5812                           ;eadog.c: 29:  };
  5813  01810A  0E01               	movlw	1
  5814  01810C  0100               	movlb	0	; () banked
  5815  01810E  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  5816  018110  0E00               	movlw	0
  5817  018112  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5818  018114  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5819  018116  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;stkvar	_delay @ sp[(0)+-4]
  5823  018118  0EFC               	movlw	-4
  5824  01811A  006F FF8C  F035    	movff	plusw1,btemp
  5825  018120  5190               	movf	wdtdelay@dcount& (0+255),w,b
  5826  018122  5C35               	subwf	btemp^0,w,c
  5827  018124  0EFD               	movlw	-3
  5828  018126  006F FF8C  F035    	movff	plusw1,btemp
  5829  01812C  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5830  01812E  5835               	subwfb	btemp^0,w,c
  5831  018130  0EFE               	movlw	-2
  5832  018132  006F FF8C  F035    	movff	plusw1,btemp
  5833  018138  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5834  01813A  5835               	subwfb	btemp^0,w,c
  5835  01813C  0EFF               	movlw	-1
  5836  01813E  006F FF8C  F035    	movff	plusw1,btemp
  5837  018144  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5838  018146  5835               	subwfb	btemp^0,w,c
  5839  018148  B0D8               	btfsc	status,0,c
  5840  01814A  D7DD               	goto	l1329
  5841                           
  5842                           ; BSR set to: 0
  5843                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5844  01814C  52E5               	movf	postdec1,f,c
  5845  01814E  52E5               	movf	postdec1,f,c
  5846  018150  52E5               	movf	postdec1,f,c
  5847  018152  52E5               	movf	postdec1,f,c
  5848  018154  0012               	return		;funcret
  5849  018156                     __end_of_wdtdelay:
  5850                           	opt callstack 0
  5851                           
  5852 ;; *************** function _eaDogM_WriteString *****************
  5853 ;; Defined at:
  5854 ;;		line 184 in file "eadog.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  strPtr          2  [STACK] PTR unsigned char 
  5857 ;;		 -> D.lcd(216), D(218), V(187), 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1  [STACK] void 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5864 ;; Tracked objects:
  5865 ;;		On entry : 3F/0
  5866 ;;		On exit  : 3F/3B
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5873 ;;Total ram usage:        0 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:   15
  5876 ;; This function calls:
  5877 ;;		_printf
  5878 ;;		_ringBufS_flush
  5879 ;;		_start_lcd
  5880 ;;		_strlen
  5881 ;;		_wait_lcd_set
  5882 ;; This function is called by:
  5883 ;;		_eaDogM_WriteStringAtPos
  5884 ;; This function uses a reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text27
  5888  01776E                     __ptext27:
  5889                           	opt callstack 0
  5890  01776E                     _eaDogM_WriteString:
  5891                           	opt callstack 13
  5892                           
  5893                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5894                           
  5895                           ; BSR set to: 0
  5896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5897                           ;incstack = 0
  5898  01776E  ECD8  F0C6         	call	_wait_lcd_set	;wreg free
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5902  017772  0E00               	movlw	0
  5903  017774  6EE6               	movwf	postinc1,c
  5904  017776  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5905  01777C  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5906  017782  ECF4  F0BC         	call	_ringBufS_flush	;wreg free
  5907  017786  94BC               	bcf	188,2,c	;volatile
  5908                           
  5909                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5910                           ;stkvar	_strPtr @ sp[(0)+-2]
  5911  017788  0EFE               	movlw	-2
  5912  01778A  006F FF8F FFE6     	movff	plusw1,postinc1
  5913  017790  006F FF8F FFE6     	movff	plusw1,postinc1
  5914  017796  EC0A  F0BC         	call	_strlen	;wreg free
  5915  01779A  5036               	movf	(btemp+1)^0,w,c
  5916  01779C  E104               	bnz	u10560
  5917  01779E  0E41               	movlw	65
  5918  0177A0  5C35               	subwf	btemp^0,w,c
  5919  0177A2  A0D8               	btfss	status,0,c
  5920  0177A4  D010               	goto	l10137
  5921  0177A6                     u10560:
  5922                           
  5923                           ;stkvar	_strPtr @ sp[(0)+-2]
  5924  0177A6  0EFE               	movlw	-2
  5925  0177A8  006F FF8C  F03F    	movff	plusw1,btemp+10
  5926  0177AE  0EFF               	movlw	-1
  5927  0177B0  006F FF8C  F040    	movff	plusw1,btemp+11
  5928  0177B6  0E40               	movlw	64
  5929  0177B8  243F               	addwf	(btemp+10)^0,w,c
  5930  0177BA  6ED9               	movwf	fsr2l,c
  5931  0177BC  0E00               	movlw	0
  5932  0177BE  2040               	addwfc	(btemp+11)^0,w,c
  5933  0177C0  6EDA               	movwf	fsr2h,c
  5934  0177C2  0E00               	movlw	0
  5935  0177C4  6EDF               	movwf	indf2,c
  5936  0177C6                     l10137:
  5937                           
  5938                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5939  0177C6  013B               	movlb	59	; () banked
  5940  0177C8  9FFC               	bcf	252,7,b	;volatile
  5941                           
  5942                           ; BSR set to: 59
  5943                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5944                           ;stkvar	_strPtr @ sp[(0)+-2]
  5945  0177CA  0EFE               	movlw	-2
  5946  0177CC  006F FF8F FFE6     	movff	plusw1,postinc1
  5947  0177D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5948  0177D8  EC0A  F0BC         	call	_strlen	;wreg free
  5949  0177DC  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5950  0177E2  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5951                           
  5952                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5953  0177E8  013B               	movlb	59	; () banked
  5954  0177EA  8FFC               	bsf	252,7,b	;volatile
  5955                           
  5956                           ; BSR set to: 59
  5957                           ;eadog.c: 195:  printf("%s", strPtr);
  5958                           ;stkvar	_strPtr @ sp[(0)+-2]
  5959  0177EC  0EFE               	movlw	-2
  5960  0177EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5961  0177F4  006F FF8F FFE6     	movff	plusw1,postinc1
  5962  0177FA  0EFC               	movlw	low STR_12
  5963  0177FC  6EE6               	movwf	postinc1,c
  5964  0177FE  0EFF               	movlw	high STR_12
  5965  017800  6EE6               	movwf	postinc1,c
  5966  017802  0E04               	movlw	4
  5967  017804  6EE6               	movwf	postinc1,c
  5968  017806  ECF0  F0BF         	call	_printf	;wreg free
  5969                           
  5970                           ;eadog.c: 196:  start_lcd();
  5971  01780A  ECDB  F0C6         	call	_start_lcd	;wreg free
  5972                           
  5973                           ; BSR set to: 59
  5974                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5975  01780E  52E5               	movf	postdec1,f,c
  5976  017810  52E5               	movf	postdec1,f,c
  5977  017812  0012               	return		;funcret
  5978  017814                     __end_of_eaDogM_WriteString:
  5979                           	opt callstack 0
  5980                           
  5981 ;; *************** function _wait_lcd_set *****************
  5982 ;; Defined at:
  5983 ;;		line 131 in file "eadog.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1  [STACK] void 
  5990 ;; Registers used:
  5991 ;;		None
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/3D
  5994 ;;		On exit  : 3F/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    6
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_eaDogM_WriteString
  6008 ;;		_send_lcd_cmd_dma
  6009 ;; This function uses a reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text28
  6013  018DB0                     __ptext28:
  6014                           	opt callstack 0
  6015  018DB0                     _wait_lcd_set:
  6016                           	opt callstack 21
  6017                           
  6018                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6019                           
  6020                           ; BSR set to: 59
  6021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6022                           ;incstack = 0
  6023  018DB0  0100               	movlb	0	; () banked
  6024  018DB2  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6025                           
  6026                           ; BSR set to: 0
  6027                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6028  018DB4  0012               	return		;funcret
  6029  018DB6                     __end_of_wait_lcd_set:
  6030                           	opt callstack 0
  6031                           
  6032 ;; *************** function _start_lcd *****************
  6033 ;; Defined at:
  6034 ;;		line 126 in file "eadog.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1  [STACK] void 
  6041 ;; Registers used:
  6042 ;;		None
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/3B
  6045 ;;		On exit  : 3F/3B
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6052 ;;Total ram usage:        0 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    6
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_eaDogM_WriteString
  6059 ;;		_send_lcd_cmd_dma
  6060 ;; This function uses a reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text29
  6064  018DB6                     __ptext29:
  6065                           	opt callstack 0
  6066  018DB6                     _start_lcd:
  6067                           	opt callstack 21
  6068                           
  6069                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6070                           
  6071                           ; BSR set to: 0
  6072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6073                           ;incstack = 0
  6074  018DB6  013B               	movlb	59	; () banked
  6075  018DB8  8DFC               	bsf	252,6,b	;volatile
  6076                           
  6077                           ; BSR set to: 59
  6078                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6079  018DBA  0012               	return		;funcret
  6080  018DBC                     __end_of_start_lcd:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function _ringBufS_flush *****************
  6084 ;; Defined at:
  6085 ;;		line 76 in file "ringbufs.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6088 ;;		 -> ring_buf1(67), 
  6089 ;;  clearBuffer     1  [STACK] const char 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1  [STACK] void 
  6094 ;; Registers used:
  6095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6096 ;; Tracked objects:
  6097 ;;		On entry : 3F/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    7
  6108 ;; This function calls:
  6109 ;;		_memset
  6110 ;; This function is called by:
  6111 ;;		_eaDogM_WriteString
  6112 ;;		_send_lcd_cmd_dma
  6113 ;; This function uses a reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text30
  6117  0179E8                     __ptext30:
  6118                           	opt callstack 0
  6119  0179E8                     _ringBufS_flush:
  6120                           	opt callstack 20
  6121                           
  6122                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6123                           ;stkvar	__this @ sp[(0)+-2]
  6124                           
  6125                           ; BSR set to: 59
  6126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6127                           ;incstack = 0
  6128  0179E8  0EFE               	movlw	-2
  6129  0179EA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6130  0179F0  0EFF               	movlw	-1
  6131  0179F2  006F FF8C  F040    	movff	plusw1,btemp+11
  6132  0179F8  0E42               	movlw	66
  6133  0179FA  243F               	addwf	(btemp+10)^0,w,c
  6134  0179FC  6ED9               	movwf	fsr2l,c
  6135  0179FE  0E00               	movlw	0
  6136  017A00  2040               	addwfc	(btemp+11)^0,w,c
  6137  017A02  6EDA               	movwf	fsr2h,c
  6138  017A04  0E00               	movlw	0
  6139  017A06  6EDF               	movwf	indf2,c
  6140                           
  6141                           ;ringbufs.c: 79:  _this->head = 0;
  6142                           ;stkvar	__this @ sp[(0)+-2]
  6143  017A08  0EFE               	movlw	-2
  6144  017A0A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6145  017A10  0EFF               	movlw	-1
  6146  017A12  006F FF8C  F040    	movff	plusw1,btemp+11
  6147  017A18  0E40               	movlw	64
  6148  017A1A  243F               	addwf	(btemp+10)^0,w,c
  6149  017A1C  6ED9               	movwf	fsr2l,c
  6150  017A1E  0E00               	movlw	0
  6151  017A20  2040               	addwfc	(btemp+11)^0,w,c
  6152  017A22  6EDA               	movwf	fsr2h,c
  6153  017A24  0E00               	movlw	0
  6154  017A26  6EDF               	movwf	indf2,c
  6155                           
  6156                           ;ringbufs.c: 80:  _this->tail = 0;
  6157                           ;stkvar	__this @ sp[(0)+-2]
  6158  017A28  0EFE               	movlw	-2
  6159  017A2A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6160  017A30  0EFF               	movlw	-1
  6161  017A32  006F FF8C  F040    	movff	plusw1,btemp+11
  6162  017A38  0E41               	movlw	65
  6163  017A3A  243F               	addwf	(btemp+10)^0,w,c
  6164  017A3C  6ED9               	movwf	fsr2l,c
  6165  017A3E  0E00               	movlw	0
  6166  017A40  2040               	addwfc	(btemp+11)^0,w,c
  6167  017A42  6EDA               	movwf	fsr2h,c
  6168  017A44  0E00               	movlw	0
  6169  017A46  6EDF               	movwf	indf2,c
  6170                           
  6171                           ;ringbufs.c: 81:  if (clearBuffer) {
  6172                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6173  017A48  0EFD               	movlw	-3
  6174  017A4A  50E3               	movf	plusw1,w,c
  6175  017A4C  B4D8               	btfsc	status,2,c
  6176  017A4E  D011               	goto	l1469
  6177                           
  6178                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6179  017A50  0E40               	movlw	64
  6180  017A52  6EE6               	movwf	postinc1,c
  6181  017A54  0E00               	movlw	0
  6182  017A56  6EE6               	movwf	postinc1,c
  6183  017A58  0E00               	movlw	0
  6184  017A5A  6EE6               	movwf	postinc1,c
  6185  017A5C  0E00               	movlw	0
  6186  017A5E  6EE6               	movwf	postinc1,c
  6187                           
  6188                           ;stkvar	__this @ sp[(-4)+-2]
  6189  017A60  0EFA               	movlw	-6
  6190  017A62  006F FF8F FFE6     	movff	plusw1,postinc1
  6191  017A68  006F FF8F FFE6     	movff	plusw1,postinc1
  6192  017A6E  EC1B  F0A7         	call	_memset	;wreg free
  6193  017A72                     l1469:
  6194                           
  6195                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6196  017A72  52E5               	movf	postdec1,f,c
  6197  017A74  52E5               	movf	postdec1,f,c
  6198  017A76  52E5               	movf	postdec1,f,c
  6199  017A78  0012               	return		;funcret
  6200  017A7A                     __end_of_ringBufS_flush:
  6201                           	opt callstack 0
  6202                           
  6203 ;; *************** function _memset *****************
  6204 ;; Defined at:
  6205 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  dest            2  [STACK] PTR void 
  6208 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6209 ;;  c               2  [STACK] int 
  6210 ;;  n               2  [STACK] unsigned int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  s               2  [STACK] PTR unsigned char 
  6213 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6214 ;;  k               2  [STACK] unsigned int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2  [STACK] PTR void 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    6
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_ringBufS_init
  6235 ;;		_ringBufS_flush
  6236 ;; This function uses a reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text31
  6240  014E36                     __ptext31:
  6241                           	opt callstack 0
  6242  014E36                     _memset:
  6243                           	opt callstack 0
  6244                           
  6245                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6246  014E36  52E6               	movf	postinc1,f,c
  6247  014E38  52E6               	movf	postinc1,f,c
  6248  014E3A  52E6               	movf	postinc1,f,c
  6249  014E3C  52E6               	movf	postinc1,f,c
  6250                           
  6251                           ;stkvar	_dest @ sp[(-4)+-2]
  6252                           
  6253                           ;incstack = 0
  6254  014E3E  0EFA               	movlw	-6
  6255  014E40  006F FF8C  F03F    	movff	plusw1,btemp+10
  6256  014E46  0EFB               	movlw	-5
  6257  014E48  006F FF8C  F040    	movff	plusw1,btemp+11
  6258                           
  6259                           ;stkvar	_s @ sp[(-4)+0]
  6260  014E4E  0EFD               	movlw	-3
  6261  014E50  0060  F103  FFE3   	movff	btemp+11,plusw1
  6262  014E56  0EFC               	movlw	-4
  6263  014E58  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6264                           
  6265                           ;stkvar	_n @ sp[(-4)+-6]
  6266  014E5E  0EF6               	movlw	-10
  6267  014E60  006F FF8C  F035    	movff	plusw1,btemp
  6268  014E66  0EF7               	movlw	-9
  6269  014E68  50E3               	movf	plusw1,w,c
  6270  014E6A  1035               	iorwf	btemp^0,w,c
  6271  014E6C  B4D8               	btfsc	status,2,c
  6272  014E6E  D154               	goto	u10530
  6273                           
  6274                           ;stkvar	_c @ sp[(-4)+-4]
  6275                           ;stkvar	_s @ sp[(-4)+0]
  6276  014E70  0EFC               	movlw	-4
  6277  014E72  006F FF8F FFD9     	movff	plusw1,fsr2l
  6278  014E78  0EFD               	movlw	-3
  6279  014E7A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6280  014E80  0EF8               	movlw	-8
  6281  014E82  006F FF8F FFDF     	movff	plusw1,indf2
  6282                           
  6283                           ;stkvar	_c @ sp[(-4)+-4]
  6284                           ;stkvar	_n @ sp[(-4)+-6]
  6285                           ;stkvar	_s @ sp[(-4)+0]
  6286  014E88  0EFC               	movlw	-4
  6287  014E8A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6288  014E90  0EFD               	movlw	-3
  6289  014E92  006F FF8C  F040    	movff	plusw1,btemp+11
  6290  014E98  0EF6               	movlw	-10
  6291  014E9A  50E3               	movf	plusw1,w,c
  6292  014E9C  263F               	addwf	(btemp+10)^0,f,c
  6293  014E9E  0EF7               	movlw	-9
  6294  014EA0  50E3               	movf	plusw1,w,c
  6295  014EA2  2240               	addwfc	(btemp+11)^0,f,c
  6296  014EA4  0EFF               	movlw	255
  6297  014EA6  243F               	addwf	(btemp+10)^0,w,c
  6298  014EA8  6ED9               	movwf	fsr2l,c
  6299  014EAA  0EFF               	movlw	255
  6300  014EAC  2040               	addwfc	(btemp+11)^0,w,c
  6301  014EAE  6EDA               	movwf	fsr2h,c
  6302  014EB0  0EF8               	movlw	-8
  6303  014EB2  006F FF8F FFDF     	movff	plusw1,indf2
  6304                           
  6305                           ;stkvar	_n @ sp[(-4)+-6]
  6306  014EB8  0EF7               	movlw	-9
  6307  014EBA  50E3               	movf	plusw1,w,c
  6308  014EBC  E108               	bnz	l10053
  6309  014EBE  0EF6               	movlw	-10
  6310  014EC0  006F FF8C  F035    	movff	plusw1,btemp
  6311  014EC6  0E03               	movlw	3
  6312  014EC8  5E35               	subwf	btemp^0,f,c
  6313  014ECA  A0D8               	btfss	status,0,c
  6314  014ECC  D125               	goto	u10530
  6315  014ECE                     l10053:
  6316                           
  6317                           ;stkvar	_c @ sp[(-4)+-4]
  6318                           ;stkvar	_s @ sp[(-4)+0]
  6319  014ECE  0EFC               	movlw	-4
  6320  014ED0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6321  014ED6  0EFD               	movlw	-3
  6322  014ED8  006F FF8C  F040    	movff	plusw1,btemp+11
  6323  014EDE  0E01               	movlw	1
  6324  014EE0  243F               	addwf	(btemp+10)^0,w,c
  6325  014EE2  6ED9               	movwf	fsr2l,c
  6326  014EE4  0E00               	movlw	0
  6327  014EE6  2040               	addwfc	(btemp+11)^0,w,c
  6328  014EE8  6EDA               	movwf	fsr2h,c
  6329  014EEA  0EF8               	movlw	-8
  6330  014EEC  006F FF8F FFDF     	movff	plusw1,indf2
  6331                           
  6332                           ;stkvar	_c @ sp[(-4)+-4]
  6333                           ;stkvar	_s @ sp[(-4)+0]
  6334  014EF2  0EFC               	movlw	-4
  6335  014EF4  006F FF8C  F03F    	movff	plusw1,btemp+10
  6336  014EFA  0EFD               	movlw	-3
  6337  014EFC  006F FF8C  F040    	movff	plusw1,btemp+11
  6338  014F02  0E02               	movlw	2
  6339  014F04  243F               	addwf	(btemp+10)^0,w,c
  6340  014F06  6ED9               	movwf	fsr2l,c
  6341  014F08  0E00               	movlw	0
  6342  014F0A  2040               	addwfc	(btemp+11)^0,w,c
  6343  014F0C  6EDA               	movwf	fsr2h,c
  6344  014F0E  0EF8               	movlw	-8
  6345  014F10  006F FF8F FFDF     	movff	plusw1,indf2
  6346                           
  6347                           ;stkvar	_c @ sp[(-4)+-4]
  6348                           ;stkvar	_n @ sp[(-4)+-6]
  6349                           ;stkvar	_s @ sp[(-4)+0]
  6350  014F16  0EFC               	movlw	-4
  6351  014F18  006F FF8C  F03F    	movff	plusw1,btemp+10
  6352  014F1E  0EFD               	movlw	-3
  6353  014F20  006F FF8C  F040    	movff	plusw1,btemp+11
  6354  014F26  0EF6               	movlw	-10
  6355  014F28  50E3               	movf	plusw1,w,c
  6356  014F2A  263F               	addwf	(btemp+10)^0,f,c
  6357  014F2C  0EF7               	movlw	-9
  6358  014F2E  50E3               	movf	plusw1,w,c
  6359  014F30  2240               	addwfc	(btemp+11)^0,f,c
  6360  014F32  0EFE               	movlw	254
  6361  014F34  243F               	addwf	(btemp+10)^0,w,c
  6362  014F36  6ED9               	movwf	fsr2l,c
  6363  014F38  0EFF               	movlw	255
  6364  014F3A  2040               	addwfc	(btemp+11)^0,w,c
  6365  014F3C  6EDA               	movwf	fsr2h,c
  6366  014F3E  0EF8               	movlw	-8
  6367  014F40  006F FF8F FFDF     	movff	plusw1,indf2
  6368                           
  6369                           ;stkvar	_c @ sp[(-4)+-4]
  6370                           ;stkvar	_n @ sp[(-4)+-6]
  6371                           ;stkvar	_s @ sp[(-4)+0]
  6372  014F46  0EFC               	movlw	-4
  6373  014F48  006F FF8C  F03F    	movff	plusw1,btemp+10
  6374  014F4E  0EFD               	movlw	-3
  6375  014F50  006F FF8C  F040    	movff	plusw1,btemp+11
  6376  014F56  0EF6               	movlw	-10
  6377  014F58  50E3               	movf	plusw1,w,c
  6378  014F5A  263F               	addwf	(btemp+10)^0,f,c
  6379  014F5C  0EF7               	movlw	-9
  6380  014F5E  50E3               	movf	plusw1,w,c
  6381  014F60  2240               	addwfc	(btemp+11)^0,f,c
  6382  014F62  0EFD               	movlw	253
  6383  014F64  243F               	addwf	(btemp+10)^0,w,c
  6384  014F66  6ED9               	movwf	fsr2l,c
  6385  014F68  0EFF               	movlw	255
  6386  014F6A  2040               	addwfc	(btemp+11)^0,w,c
  6387  014F6C  6EDA               	movwf	fsr2h,c
  6388  014F6E  0EF8               	movlw	-8
  6389  014F70  006F FF8F FFDF     	movff	plusw1,indf2
  6390                           
  6391                           ;stkvar	_n @ sp[(-4)+-6]
  6392  014F76  0EF7               	movlw	-9
  6393  014F78  50E3               	movf	plusw1,w,c
  6394  014F7A  E108               	bnz	l10059
  6395  014F7C  0EF6               	movlw	-10
  6396  014F7E  006F FF8C  F035    	movff	plusw1,btemp
  6397  014F84  0E07               	movlw	7
  6398  014F86  5E35               	subwf	btemp^0,f,c
  6399  014F88  A0D8               	btfss	status,0,c
  6400  014F8A  D0C6               	goto	u10530
  6401  014F8C                     l10059:
  6402                           
  6403                           ;stkvar	_c @ sp[(-4)+-4]
  6404                           ;stkvar	_s @ sp[(-4)+0]
  6405  014F8C  0EFC               	movlw	-4
  6406  014F8E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6407  014F94  0EFD               	movlw	-3
  6408  014F96  006F FF8C  F040    	movff	plusw1,btemp+11
  6409  014F9C  0E03               	movlw	3
  6410  014F9E  243F               	addwf	(btemp+10)^0,w,c
  6411  014FA0  6ED9               	movwf	fsr2l,c
  6412  014FA2  0E00               	movlw	0
  6413  014FA4  2040               	addwfc	(btemp+11)^0,w,c
  6414  014FA6  6EDA               	movwf	fsr2h,c
  6415  014FA8  0EF8               	movlw	-8
  6416  014FAA  006F FF8F FFDF     	movff	plusw1,indf2
  6417                           
  6418                           ;stkvar	_c @ sp[(-4)+-4]
  6419                           ;stkvar	_n @ sp[(-4)+-6]
  6420                           ;stkvar	_s @ sp[(-4)+0]
  6421  014FB0  0EFC               	movlw	-4
  6422  014FB2  006F FF8C  F03F    	movff	plusw1,btemp+10
  6423  014FB8  0EFD               	movlw	-3
  6424  014FBA  006F FF8C  F040    	movff	plusw1,btemp+11
  6425  014FC0  0EF6               	movlw	-10
  6426  014FC2  50E3               	movf	plusw1,w,c
  6427  014FC4  263F               	addwf	(btemp+10)^0,f,c
  6428  014FC6  0EF7               	movlw	-9
  6429  014FC8  50E3               	movf	plusw1,w,c
  6430  014FCA  2240               	addwfc	(btemp+11)^0,f,c
  6431  014FCC  0EFC               	movlw	252
  6432  014FCE  243F               	addwf	(btemp+10)^0,w,c
  6433  014FD0  6ED9               	movwf	fsr2l,c
  6434  014FD2  0EFF               	movlw	255
  6435  014FD4  2040               	addwfc	(btemp+11)^0,w,c
  6436  014FD6  6EDA               	movwf	fsr2h,c
  6437  014FD8  0EF8               	movlw	-8
  6438  014FDA  006F FF8F FFDF     	movff	plusw1,indf2
  6439                           
  6440                           ;stkvar	_n @ sp[(-4)+-6]
  6441  014FE0  0EF7               	movlw	-9
  6442  014FE2  50E3               	movf	plusw1,w,c
  6443  014FE4  E108               	bnz	l10065
  6444  014FE6  0EF6               	movlw	-10
  6445  014FE8  006F FF8C  F035    	movff	plusw1,btemp
  6446  014FEE  0E09               	movlw	9
  6447  014FF0  5E35               	subwf	btemp^0,f,c
  6448  014FF2  A0D8               	btfss	status,0,c
  6449  014FF4  D091               	goto	u10530
  6450  014FF6                     l10065:
  6451                           
  6452                           ;stkvar	_s @ sp[(-4)+0]
  6453  014FF6  0EFC               	movlw	-4
  6454  014FF8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6455  014FFE  1E3F               	comf	(btemp+10)^0,f,c
  6456  015000  0EFD               	movlw	-3
  6457  015002  006F FF8C  F040    	movff	plusw1,btemp+11
  6458  015008  1E40               	comf	(btemp+11)^0,f,c
  6459  01500A  2A3F               	incf	(btemp+10)^0,f,c
  6460  01500C  B4D8               	btfsc	status,2,c
  6461  01500E  2A40               	incf	(btemp+11)^0,f,c
  6462  015010  0E03               	movlw	3
  6463  015012  163F               	andwf	(btemp+10)^0,f,c
  6464  015014  0E00               	movlw	0
  6465  015016  1640               	andwf	(btemp+11)^0,f,c
  6466                           
  6467                           ;stkvar	_k @ sp[(-4)+2]
  6468  015018  0EFE               	movlw	-2
  6469  01501A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6470  015020  0EFF               	movlw	-1
  6471  015022  0060  F103  FFE3   	movff	btemp+11,plusw1
  6472                           
  6473                           ;stkvar	_k @ sp[(-4)+2]
  6474                           ;stkvar	_s @ sp[(-4)+0]
  6475  015028  0EFC               	movlw	-4
  6476  01502A  50E3               	movf	plusw1,w,c
  6477  01502C  6E35               	movwf	btemp^0,c
  6478  01502E  0EFE               	movlw	-2
  6479  015030  50E3               	movf	plusw1,w,c
  6480  015032  2635               	addwf	btemp^0,f,c
  6481  015034  0EFC               	movlw	-4
  6482  015036  0060  F0D7  FFE3   	movff	btemp,plusw1
  6483  01503C  0EFD               	movlw	-3
  6484  01503E  50E3               	movf	plusw1,w,c
  6485  015040  6E35               	movwf	btemp^0,c
  6486  015042  0EFF               	movlw	-1
  6487  015044  50E3               	movf	plusw1,w,c
  6488  015046  2235               	addwfc	btemp^0,f,c
  6489  015048  0EFD               	movlw	-3
  6490  01504A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6491                           
  6492                           ;stkvar	_k @ sp[(-4)+2]
  6493                           ;stkvar	_n @ sp[(-4)+-6]
  6494  015050  0EF6               	movlw	-10
  6495  015052  50E3               	movf	plusw1,w,c
  6496  015054  6E35               	movwf	btemp^0,c
  6497  015056  0EFE               	movlw	-2
  6498  015058  50E3               	movf	plusw1,w,c
  6499  01505A  5E35               	subwf	btemp^0,f,c
  6500  01505C  0EF6               	movlw	-10
  6501  01505E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6502  015064  0EF7               	movlw	-9
  6503  015066  50E3               	movf	plusw1,w,c
  6504  015068  6E35               	movwf	btemp^0,c
  6505  01506A  0EFF               	movlw	-1
  6506  01506C  50E3               	movf	plusw1,w,c
  6507  01506E  5A35               	subwfb	btemp^0,f,c
  6508  015070  0EF7               	movlw	-9
  6509  015072  0060  F0D7  FFE3   	movff	btemp,plusw1
  6510  015078  0EFC               	movlw	252
  6511  01507A  6E3F               	movwf	(btemp+10)^0,c
  6512  01507C  0EFF               	movlw	255
  6513  01507E  6E40               	movwf	(btemp+11)^0,c
  6514                           
  6515                           ;stkvar	_n @ sp[(-4)+-6]
  6516  015080  0EF6               	movlw	-10
  6517  015082  006F FF8C  F035    	movff	plusw1,btemp
  6518  015088  503F               	movf	(btemp+10)^0,w,c
  6519  01508A  1635               	andwf	btemp^0,f,c
  6520  01508C  0EF6               	movlw	-10
  6521  01508E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6522  015094  0EF7               	movlw	-9
  6523  015096  006F FF8C  F035    	movff	plusw1,btemp
  6524  01509C  5040               	movf	(btemp+11)^0,w,c
  6525  01509E  1635               	andwf	btemp^0,f,c
  6526  0150A0  0EF7               	movlw	-9
  6527  0150A2  D02E               	goto	L4
  6528  0150A4                     l10073:
  6529                           
  6530                           ;stkvar	_c @ sp[(-4)+-4]
  6531                           ;stkvar	_s @ sp[(-4)+0]
  6532  0150A4  0EFC               	movlw	-4
  6533  0150A6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6534  0150AC  0EFD               	movlw	-3
  6535  0150AE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6536  0150B4  0EF8               	movlw	-8
  6537  0150B6  006F FF8F FFDF     	movff	plusw1,indf2
  6538                           
  6539                           ;stkvar	_n @ sp[(-4)+-6]
  6540  0150BC  0EF6               	movlw	-10
  6541  0150BE  006F FF8C  F035    	movff	plusw1,btemp
  6542  0150C4  0E01               	movlw	1
  6543  0150C6  5E35               	subwf	btemp^0,f,c
  6544  0150C8  0EF6               	movlw	-10
  6545  0150CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6546  0150D0  0EF7               	movlw	-9
  6547  0150D2  006F FF8C  F035    	movff	plusw1,btemp
  6548  0150D8  0E00               	movlw	0
  6549  0150DA  5A35               	subwfb	btemp^0,f,c
  6550  0150DC  0EF7               	movlw	-9
  6551  0150DE  0060  F0D7  FFE3   	movff	btemp,plusw1
  6552                           
  6553                           ;stkvar	_s @ sp[(-4)+0]
  6554  0150E4  0EFC               	movlw	-4
  6555  0150E6  50E3               	movf	plusw1,w,c
  6556  0150E8  0F01               	addlw	1
  6557  0150EA  6E35               	movwf	btemp^0,c
  6558  0150EC  0EFC               	movlw	-4
  6559  0150EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  6560  0150F4  6A35               	clrf	btemp^0,c
  6561  0150F6  0EFD               	movlw	-3
  6562  0150F8  50E3               	movf	plusw1,w,c
  6563  0150FA  2035               	addwfc	btemp^0,w,c
  6564  0150FC  6E35               	movwf	btemp^0,c
  6565  0150FE  0EFD               	movlw	-3
  6566  015100                     L4:
  6567  015100  0060  F0D7  FFE3   	movff	btemp,plusw1
  6568                           
  6569                           ;stkvar	_n @ sp[(-4)+-6]
  6570  015106  0EF6               	movlw	-10
  6571  015108  006F FF8C  F035    	movff	plusw1,btemp
  6572  01510E  0EF7               	movlw	-9
  6573  015110  50E3               	movf	plusw1,w,c
  6574  015112  1035               	iorwf	btemp^0,w,c
  6575  015114  A4D8               	btfss	status,2,c
  6576  015116  D7C6               	goto	l10073
  6577  015118                     u10530:
  6578                           
  6579                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6580  015118  0EF6               	movlw	246
  6581  01511A  26E1               	addwf	fsr1l,f,c
  6582  01511C  0EFF               	movlw	255
  6583  01511E  22E2               	addwfc	fsr1h,f,c
  6584  015120  0012               	return		;funcret
  6585  015122                     __end_of_memset:
  6586                           	opt callstack 0
  6587                           
  6588 ;; *************** function _printf *****************
  6589 ;; Defined at:
  6590 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  fmt             2  [STACK] PTR const unsigned char 
  6593 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  ap              2  [STACK] PTR void [1]
  6596 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6597 ;;  ret             2    0        int 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  2  [STACK] int 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6602 ;; Tracked objects:
  6603 ;;		On entry : 3F/3B
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:   14
  6614 ;; This function calls:
  6615 ;;		_vfprintf
  6616 ;; This function is called by:
  6617 ;;		_eaDogM_WriteString
  6618 ;;		_send_lcd_cmd_dma
  6619 ;; This function uses a reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text32
  6623  017FE0                     __ptext32:
  6624                           	opt callstack 0
  6625  017FE0                     _printf:
  6626                           	opt callstack 0
  6627                           
  6628                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6629  017FE0  52E6               	movf	postinc1,f,c
  6630  017FE2  52E6               	movf	postinc1,f,c
  6631                           
  6632                           ;stkvar	?_printf @ sp[(-2)+-3]
  6633                           
  6634                           ;incstack = 0
  6635  017FE4  0EFB               	movlw	251
  6636  017FE6  24E1               	addwf	fsr1l,w,c
  6637  017FE8  6E3F               	movwf	(btemp+10)^0,c
  6638  017FEA  0EFF               	movlw	255
  6639  017FEC  20E2               	addwfc	fsr1h,w,c
  6640  017FEE  6E40               	movwf	(btemp+11)^0,c
  6641                           
  6642                           ;stkvar	_ap @ sp[(-2)+0]
  6643  017FF0  0EFF               	movlw	-1
  6644  017FF2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6645  017FF8  0EFE               	movlw	-2
  6646  017FFA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6647                           
  6648                           ;stkvar	_ap @ sp[(-2)+0]
  6649  018000  0EFE               	movlw	254
  6650  018002  24E1               	addwf	fsr1l,w,c
  6651  018004  6E35               	movwf	btemp^0,c
  6652  018006  0EFF               	movlw	255
  6653  018008  20E2               	addwfc	fsr1h,w,c
  6654  01800A  6E36               	movwf	(btemp+1)^0,c
  6655  01800C  0060  F0D7  FFE6   	movff	btemp,postinc1
  6656  018012  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6657                           
  6658                           ;stkvar	_fmt @ sp[(-4)+-3]
  6659  018018  0EF9               	movlw	-7
  6660  01801A  006F FF8F FFE6     	movff	plusw1,postinc1
  6661  018020  006F FF8F FFE6     	movff	plusw1,postinc1
  6662  018026  0E00               	movlw	0
  6663  018028  6EE6               	movwf	postinc1,c
  6664  01802A  0E00               	movlw	0
  6665  01802C  6EE6               	movwf	postinc1,c
  6666  01802E  EC63  F0BB         	call	_vfprintf	;wreg free
  6667                           
  6668                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6669  018032  52E5               	movf	postdec1,f,c
  6670  018034  52E5               	movf	postdec1,f,c
  6671  018036  52E5               	movf	postdec1,f,c
  6672  018038  50E7               	movf	indf1,w,c
  6673  01803A  5EE1               	subwf	fsr1l,f,c
  6674  01803C  0E00               	movlw	0
  6675  01803E  5AE2               	subwfb	fsr1h,f,c
  6676  018040  0012               	return		;funcret
  6677  018042                     __end_of_printf:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _vfprintf *****************
  6681 ;; Defined at:
  6682 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6685 ;;		 -> f(6), NULL(0), 
  6686 ;;  fmt             2  [STACK] PTR const unsigned char 
  6687 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6688 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6689 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6690 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6691 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6692 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6693 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6694 ;;  ap              2  [STACK] PTR PTR void 
  6695 ;;		 -> ap(2), ap(2), 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  cfmt            2  [STACK] PTR unsigned char 
  6698 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6699 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6700 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6701 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6702 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6703 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6704 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2  [STACK] int 
  6707 ;; Registers used:
  6708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/4
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:   13
  6721 ;; This function calls:
  6722 ;;		_vfpfcnvrt
  6723 ;; This function is called by:
  6724 ;;		_sprintf
  6725 ;;		_printf
  6726 ;; This function uses a reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text33
  6730  0176C6                     __ptext33:
  6731                           	opt callstack 0
  6732  0176C6                     _vfprintf:
  6733                           	opt callstack 0
  6734                           
  6735                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6736  0176C6  52E6               	movf	postinc1,f,c
  6737  0176C8  52E6               	movf	postinc1,f,c
  6738                           
  6739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6740                           ;stkvar	_fmt @ sp[(-2)+-4]
  6741                           
  6742                           ;incstack = 0
  6743  0176CA  0EFA               	movlw	-6
  6744  0176CC  006F FF8C  F03F    	movff	plusw1,btemp+10
  6745  0176D2  0EFB               	movlw	-5
  6746  0176D4  006F FF8C  F040    	movff	plusw1,btemp+11
  6747                           
  6748                           ;stkvar	_cfmt @ sp[(-2)+0]
  6749  0176DA  0EFF               	movlw	-1
  6750  0176DC  0060  F103  FFE3   	movff	btemp+11,plusw1
  6751  0176E2  0EFE               	movlw	-2
  6752  0176E4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6753                           
  6754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6755  0176EA  6A1C               	clrf	_nout^0,c
  6756  0176EC  6A1D               	clrf	(_nout+1)^0,c
  6757                           
  6758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6759  0176EE  D020               	goto	l10087
  6760  0176F0                     l10085:
  6761                           
  6762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6763                           ;stkvar	_ap @ sp[(-2)+-6]
  6764  0176F0  0EF8               	movlw	-8
  6765  0176F2  006F FF8F FFE6     	movff	plusw1,postinc1
  6766  0176F8  006F FF8F FFE6     	movff	plusw1,postinc1
  6767                           
  6768                           ;stkvar	_cfmt @ sp[(-4)+0]
  6769  0176FE  0EFC               	movlw	252
  6770  017700  24E1               	addwf	fsr1l,w,c
  6771  017702  6E35               	movwf	btemp^0,c
  6772  017704  0EFF               	movlw	255
  6773  017706  20E2               	addwfc	fsr1h,w,c
  6774  017708  6E36               	movwf	(btemp+1)^0,c
  6775  01770A  0060  F0D7  FFE6   	movff	btemp,postinc1
  6776  017710  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6777                           
  6778                           ;stkvar	_fp @ sp[(-6)+-2]
  6779  017716  0EF8               	movlw	-8
  6780  017718  006F FF8F FFE6     	movff	plusw1,postinc1
  6781  01771E  006F FF8F FFE6     	movff	plusw1,postinc1
  6782  017724  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6783  017728  5035               	movf	btemp^0,w,c
  6784  01772A  261C               	addwf	_nout^0,f,c
  6785  01772C  5036               	movf	(btemp+1)^0,w,c
  6786  01772E  221D               	addwfc	(_nout+1)^0,f,c
  6787  017730                     l10087:
  6788                           
  6789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6790                           ;stkvar	_cfmt @ sp[(-2)+0]
  6791  017730  50E1               	movf	fsr1l,w,c
  6792  017732  0FFE               	addlw	-2
  6793  017734  6ED9               	movwf	fsr2l,c
  6794  017736  50E2               	movf	fsr1h,w,c
  6795  017738  6EDA               	movwf	fsr2h,c
  6796  01773A  0EFF               	movlw	255
  6797  01773C  22DA               	addwfc	fsr2h,f,c
  6798  01773E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6799  017744  006F FF77 FFF7     	movff	postdec2,tblptrh
  6800  01774A                     	if	0	;tblptru may be non-zero
  6801  01774A                     	endif
  6802  01774A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6803  01774A  0E00               	movlw	low (__mediumconst shr (0+16))
  6804  01774C  6EF8               	movwf	tblptru,c
  6805  01774E                     	endif
  6806  01774E  0008               	tblrd		*
  6807  017750  50F5               	movf	tablat,w,c
  6808  017752  0900               	iorlw	0
  6809  017754  A4D8               	btfss	status,2,c
  6810  017756  D7CC               	goto	l10085
  6811                           
  6812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6813  017758  0060  F070  F035   	movff	_nout,btemp
  6814  01775E  0060  F074  F036   	movff	_nout+1,btemp+1
  6815                           
  6816                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6817  017764  0EF8               	movlw	248
  6818  017766  26E1               	addwf	fsr1l,f,c
  6819  017768  0EFF               	movlw	255
  6820  01776A  22E2               	addwfc	fsr1h,f,c
  6821  01776C  0012               	return		;funcret
  6822  01776E                     __end_of_vfprintf:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function _vfpfcnvrt *****************
  6826 ;; Defined at:
  6827 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6830 ;;		 -> f(6), NULL(0), 
  6831 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6832 ;;		 -> cfmt(2), 
  6833 ;;  ap              2  [STACK] PTR PTR void 
  6834 ;;		 -> ap(2), ap(2), 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  llu             8  [STACK] unsigned long long 
  6837 ;;  ll              8  [STACK] long long 
  6838 ;;  f               4  [STACK] long long 
  6839 ;;  ct              3  [STACK] unsigned char [3]
  6840 ;;  vp              3    0        PTR void 
  6841 ;;  cp              2  [STACK] PTR unsigned char 
  6842 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  6843 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  6844 ;;		 -> STR_3(5), V(187), 
  6845 ;;  i               2    0        int 
  6846 ;;  done            2    0        int 
  6847 ;;  c               1  [STACK] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2  [STACK] int 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/4
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:   12
  6864 ;; This function calls:
  6865 ;;		_atoi
  6866 ;;		_ctoa
  6867 ;;		_dtoa
  6868 ;;		_efgtoa
  6869 ;;		_fputc
  6870 ;;		_isdigit
  6871 ;;		_isupper
  6872 ;;		_stoa
  6873 ;;		_strncmp
  6874 ;;		_tolower
  6875 ;;		_utoa
  6876 ;;		_xtoa
  6877 ;; This function is called by:
  6878 ;;		_vfprintf
  6879 ;; This function uses a reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text34
  6883  011244                     __ptext34:
  6884                           	opt callstack 0
  6885  011244                     _vfpfcnvrt:
  6886                           	opt callstack 0
  6887                           
  6888                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6889  011244  0E20               	movlw	32
  6890  011246  26E1               	addwf	fsr1l,f,c
  6891  011248  0E00               	movlw	0
  6892  01124A  22E2               	addwfc	fsr1h,f,c
  6893                           
  6894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6895                           ;stkvar	_fmt @ sp[(-32)+-4]
  6896                           
  6897                           ;incstack = 0
  6898  01124C  0EDC               	movlw	-36
  6899  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6900  011254  0EDD               	movlw	-35
  6901  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6902  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6903  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6904  011268                     	if	0	;tblptru may be non-zero
  6905  011268                     	endif
  6906  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6907  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6908  01126A  6EF8               	movwf	tblptru,c
  6909  01126C                     	endif
  6910  01126C  0008               	tblrd		*
  6911  01126E  50F5               	movf	tablat,w,c
  6912  011270  0A25               	xorlw	37
  6913  011272  A4D8               	btfss	status,2,c
  6914  011274  EFC9  F090         	goto	l10031
  6915                           
  6916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6917                           ;stkvar	_fmt @ sp[(-32)+-4]
  6918  011278  0EDC               	movlw	-36
  6919  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6920  011280  0EDD               	movlw	-35
  6921  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6922  011288  2ADE               	incf	postinc2,f,c
  6923  01128A  0E00               	movlw	0
  6924  01128C  22DD               	addwfc	postdec2,f,c
  6925                           
  6926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6927  01128E  6A1E               	clrf	_width^0,c
  6928  011290  6A1F               	clrf	(_width+1)^0,c
  6929  011292  6A22               	clrf	_flags^0,c
  6930  011294  6A23               	clrf	(_flags+1)^0,c
  6931                           
  6932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6933  011296  6820               	setf	_prec^0,c
  6934  011298  6821               	setf	(_prec+1)^0,c
  6935                           
  6936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6937                           ;stkvar	_fmt @ sp[(-32)+-4]
  6938  01129A  0EDC               	movlw	-36
  6939  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6940  0112A2  0EDD               	movlw	-35
  6941  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6942  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6943  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6944  0112B6                     	if	0	;tblptru may be non-zero
  6945  0112B6                     	endif
  6946  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6947  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6948  0112B8  6EF8               	movwf	tblptru,c
  6949  0112BA                     	endif
  6950  0112BA  0008               	tblrd		*
  6951  0112BC  50F5               	movf	tablat,w,c
  6952  0112BE  0A2A               	xorlw	42
  6953  0112C0  A4D8               	btfss	status,2,c
  6954  0112C2  D031               	goto	l9849
  6955                           
  6956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6957                           ;stkvar	_fmt @ sp[(-32)+-4]
  6958  0112C4  0EDC               	movlw	-36
  6959  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6960  0112CC  0EDD               	movlw	-35
  6961  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6962  0112D4  2ADE               	incf	postinc2,f,c
  6963  0112D6  0E00               	movlw	0
  6964  0112D8  22DD               	addwfc	postdec2,f,c
  6965                           
  6966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6967                           ;stkvar	_ap @ sp[(-32)+-6]
  6968  0112DA  0EDA               	movlw	-38
  6969  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6970  0112E2  0EDB               	movlw	-37
  6971  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6972  0112EA  0E02               	movlw	2
  6973  0112EC  5EDE               	subwf	postinc2,f,c
  6974  0112EE  0E00               	movlw	0
  6975  0112F0  5ADD               	subwfb	postdec2,f,c
  6976  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6977  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6978  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6979  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6980  01130A  006F FF78  F01E    	movff	postinc2,_width
  6981  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6982                           
  6983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6984  011316  AE1F               	btfss	(_width+1)^0,7,c
  6985  011318  D066               	goto	u10230
  6986                           
  6987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6988  01131A  8022               	bsf	_flags^0,0,c
  6989                           
  6990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6991  01131C  6C1E               	negf	_width^0,c
  6992  01131E  1E1F               	comf	(_width+1)^0,f,c
  6993  011320  B0D8               	btfsc	status,0,c
  6994  011322  2A1F               	incf	(_width+1)^0,f,c
  6995  011324  D060               	goto	u10230
  6996  011326                     l9849:
  6997                           
  6998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6999                           ;stkvar	_fmt @ sp[(-32)+-4]
  7000  011326  0EDC               	movlw	-36
  7001  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7002  01132E  0EDD               	movlw	-35
  7003  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7004  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  7005  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  7006  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7007  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  7008  01134E  EC30  F0AB         	call	_atoi	;wreg free
  7009  011352  0060  F0D4  F01E   	movff	btemp,_width
  7010  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  7011                           
  7012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7013  01135E  D00B               	goto	l9853
  7014  011360                     l9851:
  7015                           
  7016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7017                           ;stkvar	_fmt @ sp[(-32)+-4]
  7018  011360  0EDC               	movlw	-36
  7019  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7020  011368  0EDD               	movlw	-35
  7021  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7022  011370  2ADE               	incf	postinc2,f,c
  7023  011372  0E00               	movlw	0
  7024  011374  22DD               	addwfc	postdec2,f,c
  7025  011376                     l9853:
  7026  011376  0ED0               	movlw	208
  7027  011378  6E3F               	movwf	(btemp+10)^0,c
  7028  01137A  0EFF               	movlw	255
  7029  01137C  6E40               	movwf	(btemp+11)^0,c
  7030                           
  7031                           ;stkvar	_fmt @ sp[(-32)+-4]
  7032  01137E  0EDC               	movlw	-36
  7033  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7034  011386  0EDD               	movlw	-35
  7035  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7036  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7037  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7038  01139A                     	if	0	;tblptru may be non-zero
  7039  01139A                     	endif
  7040  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7041  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7042  01139C  6EF8               	movwf	tblptru,c
  7043  01139E                     	endif
  7044  01139E  0008               	tblrd		*
  7045  0113A0  50F5               	movf	tablat,w,c
  7046  0113A2  6E3D               	movwf	(btemp+8)^0,c
  7047  0113A4  6A3E               	clrf	(btemp+9)^0,c
  7048  0113A6  503F               	movf	(btemp+10)^0,w,c
  7049  0113A8  263D               	addwf	(btemp+8)^0,f,c
  7050  0113AA  5040               	movf	(btemp+11)^0,w,c
  7051  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  7052  0113AE  503E               	movf	(btemp+9)^0,w,c
  7053  0113B0  E106               	bnz	u10210
  7054  0113B2  0E0A               	movlw	10
  7055  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  7056  0113B6  B0D8               	btfsc	status,0,c
  7057  0113B8  D002               	goto	u10210
  7058  0113BA  0E01               	movlw	1
  7059  0113BC  D001               	goto	u10220
  7060  0113BE                     u10210:
  7061  0113BE  0E00               	movlw	0
  7062  0113C0                     u10220:
  7063  0113C0  6E3F               	movwf	(btemp+10)^0,c
  7064  0113C2  6A40               	clrf	(btemp+11)^0,c
  7065                           
  7066                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7067  0113C4  0EE4               	movlw	-28
  7068  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7069  0113CC  0EE5               	movlw	-27
  7070  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7071                           
  7072                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7073  0113D4  0EE4               	movlw	-28
  7074  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  7075  0113DC  0EE5               	movlw	-27
  7076  0113DE  50E3               	movf	plusw1,w,c
  7077  0113E0  1035               	iorwf	btemp^0,w,c
  7078  0113E2  A4D8               	btfss	status,2,c
  7079  0113E4  D7BD               	goto	l9851
  7080  0113E6                     u10230:
  7081                           
  7082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7083                           ;stkvar	_fmt @ sp[(-32)+-4]
  7084  0113E6  0EDC               	movlw	-36
  7085  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7086  0113EE  0EDD               	movlw	-35
  7087  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7088  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7089  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7090  011402                     	if	0	;tblptru may be non-zero
  7091  011402                     	endif
  7092  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7093  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7094  011404  6EF8               	movwf	tblptru,c
  7095  011406                     	endif
  7096  011406  0008               	tblrd		*
  7097  011408  50F5               	movf	tablat,w,c
  7098  01140A  0A2E               	xorlw	46
  7099  01140C  A4D8               	btfss	status,2,c
  7100  01140E  D0AC               	goto	u10280
  7101                           
  7102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7103  011410  6A20               	clrf	_prec^0,c
  7104  011412  6A21               	clrf	(_prec+1)^0,c
  7105                           
  7106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7107                           ;stkvar	_fmt @ sp[(-32)+-4]
  7108  011414  0EDC               	movlw	-36
  7109  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7110  01141C  0EDD               	movlw	-35
  7111  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7112  011424  2ADE               	incf	postinc2,f,c
  7113  011426  0E00               	movlw	0
  7114  011428  22DD               	addwfc	postdec2,f,c
  7115                           
  7116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7117                           ;stkvar	_fmt @ sp[(-32)+-4]
  7118  01142A  0EDC               	movlw	-36
  7119  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7120  011432  0EDD               	movlw	-35
  7121  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7122  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7123  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7124  011446                     	if	0	;tblptru may be non-zero
  7125  011446                     	endif
  7126  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7127  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7128  011448  6EF8               	movwf	tblptru,c
  7129  01144A                     	endif
  7130  01144A  0008               	tblrd		*
  7131  01144C  50F5               	movf	tablat,w,c
  7132  01144E  0A2A               	xorlw	42
  7133  011450  A4D8               	btfss	status,2,c
  7134  011452  D02A               	goto	l9871
  7135                           
  7136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7137                           ;stkvar	_fmt @ sp[(-32)+-4]
  7138  011454  0EDC               	movlw	-36
  7139  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7140  01145C  0EDD               	movlw	-35
  7141  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7142  011464  2ADE               	incf	postinc2,f,c
  7143  011466  0E00               	movlw	0
  7144  011468  22DD               	addwfc	postdec2,f,c
  7145                           
  7146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7147                           ;stkvar	_ap @ sp[(-32)+-6]
  7148  01146A  0EDA               	movlw	-38
  7149  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7150  011472  0EDB               	movlw	-37
  7151  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7152  01147A  0E02               	movlw	2
  7153  01147C  5EDE               	subwf	postinc2,f,c
  7154  01147E  0E00               	movlw	0
  7155  011480  5ADD               	subwfb	postdec2,f,c
  7156  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7157  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7158  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7159  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7160  01149A  006F FF78  F020    	movff	postinc2,_prec
  7161  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7162                           
  7163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7164  0114A6  D060               	goto	u10280
  7165  0114A8                     l9871:
  7166                           
  7167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7168                           ;stkvar	_fmt @ sp[(-32)+-4]
  7169  0114A8  0EDC               	movlw	-36
  7170  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7171  0114B0  0EDD               	movlw	-35
  7172  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7173  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7174  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7175  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7176  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7177  0114D0  EC30  F0AB         	call	_atoi	;wreg free
  7178  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7179  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7180                           
  7181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7182  0114E0  D00B               	goto	l9875
  7183  0114E2                     l9873:
  7184                           
  7185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7186                           ;stkvar	_fmt @ sp[(-32)+-4]
  7187  0114E2  0EDC               	movlw	-36
  7188  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7189  0114EA  0EDD               	movlw	-35
  7190  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7191  0114F2  2ADE               	incf	postinc2,f,c
  7192  0114F4  0E00               	movlw	0
  7193  0114F6  22DD               	addwfc	postdec2,f,c
  7194  0114F8                     l9875:
  7195  0114F8  0ED0               	movlw	208
  7196  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7197  0114FC  0EFF               	movlw	255
  7198  0114FE  6E40               	movwf	(btemp+11)^0,c
  7199                           
  7200                           ;stkvar	_fmt @ sp[(-32)+-4]
  7201  011500  0EDC               	movlw	-36
  7202  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7203  011508  0EDD               	movlw	-35
  7204  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7205  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7206  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7207  01151C                     	if	0	;tblptru may be non-zero
  7208  01151C                     	endif
  7209  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7210  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7211  01151E  6EF8               	movwf	tblptru,c
  7212  011520                     	endif
  7213  011520  0008               	tblrd		*
  7214  011522  50F5               	movf	tablat,w,c
  7215  011524  6E3D               	movwf	(btemp+8)^0,c
  7216  011526  6A3E               	clrf	(btemp+9)^0,c
  7217  011528  503F               	movf	(btemp+10)^0,w,c
  7218  01152A  263D               	addwf	(btemp+8)^0,f,c
  7219  01152C  5040               	movf	(btemp+11)^0,w,c
  7220  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7221  011530  503E               	movf	(btemp+9)^0,w,c
  7222  011532  E106               	bnz	u10260
  7223  011534  0E0A               	movlw	10
  7224  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7225  011538  B0D8               	btfsc	status,0,c
  7226  01153A  D002               	goto	u10260
  7227  01153C  0E01               	movlw	1
  7228  01153E  D001               	goto	u10270
  7229  011540                     u10260:
  7230  011540  0E00               	movlw	0
  7231  011542                     u10270:
  7232  011542  6E3F               	movwf	(btemp+10)^0,c
  7233  011544  6A40               	clrf	(btemp+11)^0,c
  7234                           
  7235                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7236  011546  0EE0               	movlw	-32
  7237  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7238  01154E  0EE1               	movlw	-31
  7239  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7240                           
  7241                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7242  011556  0EE0               	movlw	-32
  7243  011558  006F FF8C  F035    	movff	plusw1,btemp
  7244  01155E  0EE1               	movlw	-31
  7245  011560  50E3               	movf	plusw1,w,c
  7246  011562  1035               	iorwf	btemp^0,w,c
  7247  011564  A4D8               	btfss	status,2,c
  7248  011566  D7BD               	goto	l9873
  7249  011568                     u10280:
  7250                           
  7251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7252                           ;stkvar	_fmt @ sp[(-32)+-4]
  7253  011568  0EDC               	movlw	-36
  7254  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7255  011570  0EDD               	movlw	-35
  7256  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7257  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7258  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7259  011584                     	if	0	;tblptru may be non-zero
  7260  011584                     	endif
  7261  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7262  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7263  011586  6EF8               	movwf	tblptru,c
  7264  011588                     	endif
  7265  011588  0008               	tblrd		*
  7266  01158A  50F5               	movf	tablat,w,c
  7267  01158C  6EE6               	movwf	postinc1,c
  7268  01158E  0E00               	movlw	0
  7269  011590  6EE6               	movwf	postinc1,c
  7270  011592  EC0B  F0BE         	call	_tolower	;wreg free
  7271                           
  7272                           ;stkvar	_ct @ sp[(-32)+26]
  7273  011596  0EFA               	movlw	-6
  7274  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7275                           
  7276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7277                           ;stkvar	_ct @ sp[(-32)+26]
  7278  01159E  0EFA               	movlw	-6
  7279  0115A0  50E3               	movf	plusw1,w,c
  7280  0115A2  B4D8               	btfsc	status,2,c
  7281  0115A4  D05B               	goto	l9891
  7282                           
  7283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7284                           ;stkvar	_ct @ sp[(-32)+26]
  7285  0115A6  0EFB               	movlw	251
  7286  0115A8  24E1               	addwf	fsr1l,w,c
  7287  0115AA  6ED9               	movwf	fsr2l,c
  7288  0115AC  0EFF               	movlw	255
  7289  0115AE  20E2               	addwfc	fsr1h,w,c
  7290  0115B0  6EDA               	movwf	fsr2h,c
  7291                           
  7292                           ;stkvar	_fmt @ sp[(-32)+-4]
  7293  0115B2  0EDC               	movlw	-36
  7294  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7295  0115BA  0EDD               	movlw	-35
  7296  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7297  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7298  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7299  0115CE  0E01               	movlw	1
  7300  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7301  0115D2  0E00               	movlw	0
  7302  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7303  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7304  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7305  0115E2                     	if	0	;tblptru may be non-zero
  7306  0115E2                     	endif
  7307  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7308  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7309  0115E4  6EF8               	movwf	tblptru,c
  7310  0115E6                     	endif
  7311  0115E6  0008               	tblrd		*
  7312  0115E8  50F5               	movf	tablat,w,c
  7313  0115EA  6EE6               	movwf	postinc1,c
  7314  0115EC  0E00               	movlw	0
  7315  0115EE  6EE6               	movwf	postinc1,c
  7316  0115F0  EC0B  F0BE         	call	_tolower	;wreg free
  7317  0115F4  5035               	movf	btemp^0,w,c
  7318  0115F6  6EDF               	movwf	indf2,c
  7319                           
  7320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7321                           ;stkvar	_ct @ sp[(-32)+26]
  7322  0115F8  0EFB               	movlw	251
  7323  0115FA  24E1               	addwf	fsr1l,w,c
  7324  0115FC  6ED9               	movwf	fsr2l,c
  7325  0115FE  0EFF               	movlw	255
  7326  011600  20E2               	addwfc	fsr1h,w,c
  7327  011602  6EDA               	movwf	fsr2h,c
  7328  011604  50DF               	movf	indf2,w,c
  7329  011606  B4D8               	btfsc	status,2,c
  7330  011608  D029               	goto	l9891
  7331                           
  7332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7333                           ;stkvar	_ct @ sp[(-32)+26]
  7334  01160A  0EFC               	movlw	252
  7335  01160C  24E1               	addwf	fsr1l,w,c
  7336  01160E  6ED9               	movwf	fsr2l,c
  7337  011610  0EFF               	movlw	255
  7338  011612  20E2               	addwfc	fsr1h,w,c
  7339  011614  6EDA               	movwf	fsr2h,c
  7340                           
  7341                           ;stkvar	_fmt @ sp[(-32)+-4]
  7342  011616  0EDC               	movlw	-36
  7343  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7344  01161E  0EDD               	movlw	-35
  7345  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7346  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7347  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7348  011632  0E02               	movlw	2
  7349  011634  263F               	addwf	(btemp+10)^0,f,c
  7350  011636  0E00               	movlw	0
  7351  011638  2240               	addwfc	(btemp+11)^0,f,c
  7352  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7353  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7354  011646                     	if	0	;tblptru may be non-zero
  7355  011646                     	endif
  7356  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7357  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7358  011648  6EF8               	movwf	tblptru,c
  7359  01164A                     	endif
  7360  01164A  0008               	tblrd		*
  7361  01164C  50F5               	movf	tablat,w,c
  7362  01164E  6EE6               	movwf	postinc1,c
  7363  011650  0E00               	movlw	0
  7364  011652  6EE6               	movwf	postinc1,c
  7365  011654  EC0B  F0BE         	call	_tolower	;wreg free
  7366  011658  5035               	movf	btemp^0,w,c
  7367  01165A  6EDF               	movwf	indf2,c
  7368  01165C                     l9891:
  7369                           
  7370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7371                           ;stkvar	_fmt @ sp[(-32)+-4]
  7372  01165C  0EDC               	movlw	-36
  7373  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7374  011664  0EDD               	movlw	-35
  7375  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7376  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7377  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7378  011678                     	if	0	;tblptru may be non-zero
  7379  011678                     	endif
  7380  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7381  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7382  01167A  6EF8               	movwf	tblptru,c
  7383  01167C                     	endif
  7384  01167C  0008               	tblrd		*
  7385  01167E  50F5               	movf	tablat,w,c
  7386  011680  0A63               	xorlw	99
  7387  011682  A4D8               	btfss	status,2,c
  7388  011684  D037               	goto	l9901
  7389                           
  7390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7391                           ;stkvar	_fmt @ sp[(-32)+-4]
  7392  011686  0EDC               	movlw	-36
  7393  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7394  01168E  0EDD               	movlw	-35
  7395  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7396  011696  2ADE               	incf	postinc2,f,c
  7397  011698  0E00               	movlw	0
  7398  01169A  22DD               	addwfc	postdec2,f,c
  7399                           
  7400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7401                           ;stkvar	_ap @ sp[(-32)+-6]
  7402  01169C  0EDA               	movlw	-38
  7403  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7404  0116A4  0EDB               	movlw	-37
  7405  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7406  0116AC  0E02               	movlw	2
  7407  0116AE  5EDE               	subwf	postinc2,f,c
  7408  0116B0  0E00               	movlw	0
  7409  0116B2  5ADD               	subwfb	postdec2,f,c
  7410  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7411  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7412  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7413  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7414  0116CC  50DF               	movf	indf2,w,c
  7415  0116CE  6E40               	movwf	(btemp+11)^0,c
  7416                           
  7417                           ;stkvar	_c @ sp[(-32)+31]
  7418  0116D0  0EFF               	movlw	-1
  7419  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7420                           
  7421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7422                           ;stkvar	_c @ sp[(-32)+31]
  7423  0116D8  0EFF               	movlw	-1
  7424  0116DA  50E3               	movf	plusw1,w,c
  7425  0116DC  6EE6               	movwf	postinc1,c
  7426                           
  7427                           ;stkvar	_fp @ sp[(-33)+-2]
  7428  0116DE  0EDD               	movlw	-35
  7429  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7430  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7431  0116EC  EC85  F0BD         	call	_ctoa	;wreg free
  7432  0116F0  EFF3  F090         	goto	l1975
  7433  0116F4                     l9901:
  7434                           
  7435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7436                           ;stkvar	_fmt @ sp[(-32)+-4]
  7437  0116F4  0EDC               	movlw	-36
  7438  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7439  0116FC  0EDD               	movlw	-35
  7440  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7441  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7442  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7443  011710                     	if	0	;tblptru may be non-zero
  7444  011710                     	endif
  7445  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7446  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7447  011712  6EF8               	movwf	tblptru,c
  7448  011714                     	endif
  7449  011714  0008               	tblrd		*
  7450  011716  50F5               	movf	tablat,w,c
  7451  011718  0A64               	xorlw	100
  7452  01171A  B4D8               	btfsc	status,2,c
  7453  01171C  D015               	goto	u10330
  7454                           
  7455                           ;stkvar	_fmt @ sp[(-32)+-4]
  7456  01171E  0EDC               	movlw	-36
  7457  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7458  011726  0EDD               	movlw	-35
  7459  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7460  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7461  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7462  01173A                     	if	0	;tblptru may be non-zero
  7463  01173A                     	endif
  7464  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7465  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7466  01173C  6EF8               	movwf	tblptru,c
  7467  01173E                     	endif
  7468  01173E  0008               	tblrd		*
  7469  011740  50F5               	movf	tablat,w,c
  7470  011742  0A69               	xorlw	105
  7471  011744  A4D8               	btfss	status,2,c
  7472  011746  D076               	goto	l9913
  7473  011748                     u10330:
  7474                           
  7475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7476                           ;stkvar	_fmt @ sp[(-32)+-4]
  7477  011748  0EDC               	movlw	-36
  7478  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7479  011750  0EDD               	movlw	-35
  7480  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7481  011758  2ADE               	incf	postinc2,f,c
  7482  01175A  0E00               	movlw	0
  7483  01175C  22DD               	addwfc	postdec2,f,c
  7484                           
  7485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7486                           ;stkvar	_ap @ sp[(-32)+-6]
  7487  01175E  0EDA               	movlw	-38
  7488  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7489  011766  0EDB               	movlw	-37
  7490  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7491  01176E  0E02               	movlw	2
  7492  011770  5EDE               	subwf	postinc2,f,c
  7493  011772  0E00               	movlw	0
  7494  011774  5ADD               	subwfb	postdec2,f,c
  7495  011776  006F FF78  F03F    	movff	postinc2,btemp+10
  7496  01177C  006F FF74  F040    	movff	postdec2,btemp+11
  7497  011782  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7498  011788  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7499  01178E  006F FF78  F03F    	movff	postinc2,btemp+10
  7500  011794  006F FF74  F040    	movff	postdec2,btemp+11
  7501                           
  7502                           ;stkvar	_ll @ sp[(-32)+14]
  7503  01179A  0EEE               	movlw	-18
  7504  01179C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7505  0117A2  0EEF               	movlw	-17
  7506  0117A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7507  0117AA  6A35               	clrf	btemp^0,c
  7508  0117AC  BEE3               	btfsc	plusw1,7,c
  7509  0117AE  6835               	setf	btemp^0,c
  7510  0117B0  0EF0               	movlw	-16
  7511  0117B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7512  0117B8  0EF1               	movlw	-15
  7513  0117BA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7514  0117C0  0EF2               	movlw	-14
  7515  0117C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7516  0117C8  0EF3               	movlw	-13
  7517  0117CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7518  0117D0  0EF4               	movlw	-12
  7519  0117D2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7520  0117D8  0EF5               	movlw	-11
  7521  0117DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7522  0117E0                     l9909:
  7523                           
  7524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7525                           ;stkvar	_ll @ sp[(-32)+14]
  7526  0117E0  50E1               	movf	fsr1l,w,c
  7527  0117E2  0FEE               	addlw	-18
  7528  0117E4  6ED9               	movwf	fsr2l,c
  7529  0117E6  50E2               	movf	fsr1h,w,c
  7530  0117E8  6EDA               	movwf	fsr2h,c
  7531  0117EA  0EFF               	movlw	255
  7532  0117EC  22DA               	addwfc	fsr2h,f,c
  7533  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7534  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7535  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7536  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7537  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7538  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7539  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7540  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7541                           
  7542                           ;stkvar	_fp @ sp[(-40)+-2]
  7543  01181E  0ED6               	movlw	-42
  7544  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7545  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7546  01182C  ECA8  F09B         	call	_dtoa	;wreg free
  7547  011830  EFF3  F090         	goto	l1975
  7548  011834                     l9913:
  7549                           
  7550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7551  011834  0E02               	movlw	2
  7552  011836  6EE6               	movwf	postinc1,c
  7553  011838  0E00               	movlw	0
  7554  01183A  6EE6               	movwf	postinc1,c
  7555  01183C  0EEA               	movlw	low STR_42
  7556  01183E  6EE6               	movwf	postinc1,c
  7557  011840  0EFF               	movlw	high STR_42
  7558  011842  6EE6               	movwf	postinc1,c
  7559                           
  7560                           ;stkvar	_fmt @ sp[(-36)+-4]
  7561  011844  0ED8               	movlw	-40
  7562  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7563  01184C  0ED9               	movlw	-39
  7564  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7565  011854  006F FF78  F03F    	movff	postinc2,btemp+10
  7566  01185A  006F FF74  F040    	movff	postdec2,btemp+11
  7567  011860  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7568  011866  0060  F103  FFE6   	movff	btemp+11,postinc1
  7569  01186C  EC8A  F0AD         	call	_strncmp	;wreg free
  7570  011870  5035               	movf	btemp^0,w,c
  7571  011872  1036               	iorwf	(btemp+1)^0,w,c
  7572  011874  B4D8               	btfsc	status,2,c
  7573  011876  D022               	goto	u10350
  7574  011878  0E02               	movlw	2
  7575  01187A  6EE6               	movwf	postinc1,c
  7576  01187C  0E00               	movlw	0
  7577  01187E  6EE6               	movwf	postinc1,c
  7578  011880  0EF0               	movlw	low STR_46
  7579  011882  6EE6               	movwf	postinc1,c
  7580  011884  0EFF               	movlw	high STR_46
  7581  011886  6EE6               	movwf	postinc1,c
  7582                           
  7583                           ;stkvar	_fmt @ sp[(-36)+-4]
  7584  011888  0ED8               	movlw	-40
  7585  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7586  011890  0ED9               	movlw	-39
  7587  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7588  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7589  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7590  0118A4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7591  0118AA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7592  0118B0  EC8A  F0AD         	call	_strncmp	;wreg free
  7593  0118B4  5035               	movf	btemp^0,w,c
  7594  0118B6  1036               	iorwf	(btemp+1)^0,w,c
  7595  0118B8  A4D8               	btfss	status,2,c
  7596  0118BA  D069               	goto	l9925
  7597  0118BC                     u10350:
  7598                           
  7599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7600                           ;stkvar	_fmt @ sp[(-32)+-4]
  7601  0118BC  0EDC               	movlw	-36
  7602  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7603  0118C4  0EDD               	movlw	-35
  7604  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7605  0118CC  0E02               	movlw	2
  7606  0118CE  26DE               	addwf	postinc2,f,c
  7607  0118D0  0E00               	movlw	0
  7608  0118D2  22DD               	addwfc	postdec2,f,c
  7609                           
  7610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7611                           ;stkvar	_ap @ sp[(-32)+-6]
  7612  0118D4  0EDA               	movlw	-38
  7613  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7614  0118DC  0EDB               	movlw	-37
  7615  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7616  0118E4  0E04               	movlw	4
  7617  0118E6  5EDE               	subwf	postinc2,f,c
  7618  0118E8  0E00               	movlw	0
  7619  0118EA  5ADD               	subwfb	postdec2,f,c
  7620  0118EC  006F FF78  F03F    	movff	postinc2,btemp+10
  7621  0118F2  006F FF74  F040    	movff	postdec2,btemp+11
  7622  0118F8  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7623  0118FE  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7624  011904  006F FF78  F03D    	movff	postinc2,btemp+8
  7625  01190A  006F FF78  F03E    	movff	postinc2,btemp+9
  7626  011910  006F FF78  F03F    	movff	postinc2,btemp+10
  7627  011916  006F FF78  F040    	movff	postinc2,btemp+11
  7628  01191C  0060  F0F4  F045   	movff	btemp+8,btemp+16
  7629  011922  0060  F0F8  F046   	movff	btemp+9,btemp+17
  7630  011928  0060  F0FC  F047   	movff	btemp+10,btemp+18
  7631  01192E  0060  F100  F048   	movff	btemp+11,btemp+19
  7632  011934  6A49               	clrf	(btemp+20)^0,c
  7633  011936  BE48               	btfsc	(btemp+19)^0,7,c
  7634  011938  6849               	setf	(btemp+20)^0,c
  7635  01193A  0060  F124  F04A   	movff	btemp+20,btemp+21
  7636  011940  0060  F124  F04B   	movff	btemp+20,btemp+22
  7637  011946  0060  F124  F04C   	movff	btemp+20,btemp+23
  7638                           
  7639                           ;stkvar	_ll @ sp[(-32)+14]
  7640  01194C  0EEE               	movlw	-18
  7641  01194E  0060  F117  FFE3   	movff	btemp+16,plusw1
  7642  011954  0EEF               	movlw	-17
  7643  011956  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7644  01195C  0EF0               	movlw	-16
  7645  01195E  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7646  011964  0EF1               	movlw	-15
  7647  011966  0060  F123  FFE3   	movff	btemp+19,plusw1
  7648  01196C  0EF2               	movlw	-14
  7649  01196E  0060  F127  FFE3   	movff	btemp+20,plusw1
  7650  011974  0EF3               	movlw	-13
  7651  011976  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7652  01197C  0EF4               	movlw	-12
  7653  01197E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7654  011984  0EF5               	movlw	-11
  7655  011986  0060  F133  FFE3   	movff	btemp+23,plusw1
  7656  01198C  D729               	goto	l9909
  7657  01198E                     l9925:
  7658                           
  7659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7660                           ;stkvar	_ct @ sp[(-32)+26]
  7661  01198E  0EFA               	movlw	-6
  7662  011990  006F FF8C  F035    	movff	plusw1,btemp
  7663  011996  0E66               	movlw	102
  7664  011998  1835               	xorwf	btemp^0,w,c
  7665  01199A  A4D8               	btfss	status,2,c
  7666  01199C  D06E               	goto	l9937
  7667                           
  7668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7669                           ;stkvar	_fmt @ sp[(-32)+-4]
  7670  01199E  0EDC               	movlw	-36
  7671  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7672  0119A6  0EDD               	movlw	-35
  7673  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7674  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7675  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7676  0119BA                     	if	0	;tblptru may be non-zero
  7677  0119BA                     	endif
  7678  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7679  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7680  0119BC  6EF8               	movwf	tblptru,c
  7681  0119BE                     	endif
  7682                           
  7683                           ;stkvar	_c @ sp[(-32)+31]
  7684  0119BE  0008               	tblrd		*
  7685  0119C0  0EFF               	movlw	-1
  7686  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7687                           
  7688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7689                           ;stkvar	_fmt @ sp[(-32)+-4]
  7690  0119C8  0EDC               	movlw	-36
  7691  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7692  0119D0  0EDD               	movlw	-35
  7693  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7694  0119D8  2ADE               	incf	postinc2,f,c
  7695  0119DA  0E00               	movlw	0
  7696  0119DC  22DD               	addwfc	postdec2,f,c
  7697                           
  7698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7699                           ;stkvar	_ap @ sp[(-32)+-6]
  7700  0119DE  0EDA               	movlw	-38
  7701  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7702  0119E6  0EDB               	movlw	-37
  7703  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7704  0119EE  0E04               	movlw	4
  7705  0119F0  5EDE               	subwf	postinc2,f,c
  7706  0119F2  0E00               	movlw	0
  7707  0119F4  5ADD               	subwfb	postdec2,f,c
  7708  0119F6  006F FF78  F03F    	movff	postinc2,btemp+10
  7709  0119FC  006F FF74  F040    	movff	postdec2,btemp+11
  7710  011A02  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7711  011A08  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7712  011A0E  006F FF78  F03D    	movff	postinc2,btemp+8
  7713  011A14  006F FF78  F03E    	movff	postinc2,btemp+9
  7714  011A1A  006F FF78  F03F    	movff	postinc2,btemp+10
  7715  011A20  006F FF78  F040    	movff	postinc2,btemp+11
  7716                           
  7717                           ;stkvar	_f @ sp[(-32)+22]
  7718  011A26  0EF6               	movlw	-10
  7719  011A28  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7720  011A2E  0EF7               	movlw	-9
  7721  011A30  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7722  011A36  0EF8               	movlw	-8
  7723  011A38  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7724  011A3E  0EF9               	movlw	-7
  7725  011A40  0060  F103  FFE3   	movff	btemp+11,plusw1
  7726  011A46                     l9933:
  7727                           
  7728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7729                           ;stkvar	_c @ sp[(-32)+31]
  7730  011A46  0EFF               	movlw	-1
  7731  011A48  50E3               	movf	plusw1,w,c
  7732  011A4A  6EE6               	movwf	postinc1,c
  7733                           
  7734                           ;stkvar	_f @ sp[(-33)+22]
  7735  011A4C  0EF5               	movlw	-11
  7736  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7737  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  7738  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  7739  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  7740                           
  7741                           ;stkvar	_fp @ sp[(-37)+-2]
  7742  011A66  0ED9               	movlw	-39
  7743  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  7744  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7745  011A74  EC00  F080         	call	_efgtoa	;wreg free
  7746  011A78  D3B6               	goto	l1975
  7747  011A7A                     l9937:
  7748                           
  7749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7750  011A7A  0E02               	movlw	2
  7751  011A7C  6EE6               	movwf	postinc1,c
  7752  011A7E  0E00               	movlw	0
  7753  011A80  6EE6               	movwf	postinc1,c
  7754  011A82  0EED               	movlw	low STR_51
  7755  011A84  6EE6               	movwf	postinc1,c
  7756  011A86  0EFF               	movlw	high STR_51
  7757  011A88  6EE6               	movwf	postinc1,c
  7758                           
  7759                           ;stkvar	_ct @ sp[(-36)+26]
  7760  011A8A  0EF6               	movlw	246
  7761  011A8C  24E1               	addwf	fsr1l,w,c
  7762  011A8E  6E35               	movwf	btemp^0,c
  7763  011A90  0EFF               	movlw	255
  7764  011A92  20E2               	addwfc	fsr1h,w,c
  7765  011A94  6E36               	movwf	(btemp+1)^0,c
  7766  011A96  0060  F0D7  FFE6   	movff	btemp,postinc1
  7767  011A9C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7768  011AA2  EC8A  F0AD         	call	_strncmp	;wreg free
  7769  011AA6  5035               	movf	btemp^0,w,c
  7770  011AA8  1036               	iorwf	(btemp+1)^0,w,c
  7771  011AAA  A4D8               	btfss	status,2,c
  7772  011AAC  D096               	goto	l9957
  7773                           
  7774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7775                           ;stkvar	_fmt @ sp[(-32)+-4]
  7776  011AAE  0EDC               	movlw	-36
  7777  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7778  011AB6  0EDD               	movlw	-35
  7779  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7780  011ABE  006F FF78  F03F    	movff	postinc2,btemp+10
  7781  011AC4  006F FF74  F040    	movff	postdec2,btemp+11
  7782  011ACA  0E01               	movlw	1
  7783  011ACC  263F               	addwf	(btemp+10)^0,f,c
  7784  011ACE  0E00               	movlw	0
  7785  011AD0  2240               	addwfc	(btemp+11)^0,f,c
  7786  011AD2  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7787  011AD8  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7788  011ADE                     	if	0	;tblptru may be non-zero
  7789  011ADE                     	endif
  7790  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7791  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  7792  011AE0  6EF8               	movwf	tblptru,c
  7793  011AE2                     	endif
  7794                           
  7795                           ;stkvar	_c @ sp[(-32)+31]
  7796  011AE2  0008               	tblrd		*
  7797  011AE4  0EFF               	movlw	-1
  7798  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  7799  011AEC  0EBF               	movlw	191
  7800  011AEE  6E3F               	movwf	(btemp+10)^0,c
  7801  011AF0  0EFF               	movlw	255
  7802  011AF2  6E40               	movwf	(btemp+11)^0,c
  7803                           
  7804                           ;stkvar	_fmt @ sp[(-32)+-4]
  7805  011AF4  0EDC               	movlw	-36
  7806  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7807  011AFC  0EDD               	movlw	-35
  7808  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7809  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  7810  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7811  011B10                     	if	0	;tblptru may be non-zero
  7812  011B10                     	endif
  7813  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7814  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  7815  011B12  6EF8               	movwf	tblptru,c
  7816  011B14                     	endif
  7817  011B14  0008               	tblrd		*
  7818  011B16  50F5               	movf	tablat,w,c
  7819  011B18  6E3D               	movwf	(btemp+8)^0,c
  7820  011B1A  6A3E               	clrf	(btemp+9)^0,c
  7821  011B1C  503F               	movf	(btemp+10)^0,w,c
  7822  011B1E  263D               	addwf	(btemp+8)^0,f,c
  7823  011B20  5040               	movf	(btemp+11)^0,w,c
  7824  011B22  223E               	addwfc	(btemp+9)^0,f,c
  7825  011B24  503E               	movf	(btemp+9)^0,w,c
  7826  011B26  E106               	bnz	u10380
  7827  011B28  0E1A               	movlw	26
  7828  011B2A  5C3D               	subwf	(btemp+8)^0,w,c
  7829  011B2C  B0D8               	btfsc	status,0,c
  7830  011B2E  D002               	goto	u10380
  7831  011B30  0E01               	movlw	1
  7832  011B32  D001               	goto	u10390
  7833  011B34                     u10380:
  7834  011B34  0E00               	movlw	0
  7835  011B36                     u10390:
  7836  011B36  6E3F               	movwf	(btemp+10)^0,c
  7837  011B38  6A40               	clrf	(btemp+11)^0,c
  7838                           
  7839                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  7840  011B3A  0EE2               	movlw	-30
  7841  011B3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7842  011B42  0EE3               	movlw	-29
  7843  011B44  0060  F103  FFE3   	movff	btemp+11,plusw1
  7844                           
  7845                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  7846  011B4A  0EE2               	movlw	-30
  7847  011B4C  006F FF8C  F035    	movff	plusw1,btemp
  7848  011B52  0EE3               	movlw	-29
  7849  011B54  50E3               	movf	plusw1,w,c
  7850  011B56  1035               	iorwf	btemp^0,w,c
  7851                           
  7852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7853                           ;stkvar	_ap @ sp[(-32)+-6]
  7854                           
  7855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7856                           
  7857                           ;stkvar	_f @ sp[(-32)+22]
  7858                           
  7859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7860                           ;stkvar	_ap @ sp[(-32)+-6]
  7861  011B58  0EDA               	movlw	-38
  7862  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7863  011B60  0EDB               	movlw	-37
  7864  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  7865  011B68  0E04               	movlw	4
  7866  011B6A  5EDE               	subwf	postinc2,f,c
  7867  011B6C  0E00               	movlw	0
  7868  011B6E  5ADD               	subwfb	postdec2,f,c
  7869  011B70  006F FF78  F03F    	movff	postinc2,btemp+10
  7870  011B76  006F FF74  F040    	movff	postdec2,btemp+11
  7871  011B7C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7872  011B82  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7873  011B88  006F FF78  F03D    	movff	postinc2,btemp+8
  7874  011B8E  006F FF78  F03E    	movff	postinc2,btemp+9
  7875  011B94  006F FF78  F03F    	movff	postinc2,btemp+10
  7876  011B9A  006F FF78  F040    	movff	postinc2,btemp+11
  7877                           
  7878                           ;stkvar	_f @ sp[(-32)+22]
  7879  011BA0  0EF6               	movlw	-10
  7880  011BA2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7881  011BA8  0EF7               	movlw	-9
  7882  011BAA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7883  011BB0  0EF8               	movlw	-8
  7884  011BB2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7885  011BB8  0EF9               	movlw	-7
  7886  011BBA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7887                           
  7888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7889                           ;stkvar	_fmt @ sp[(-32)+-4]
  7890  011BC0  0EDC               	movlw	-36
  7891  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7892  011BC8  0EDD               	movlw	-35
  7893  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7894  011BD0  0E02               	movlw	2
  7895  011BD2  26DE               	addwf	postinc2,f,c
  7896  011BD4  0E00               	movlw	0
  7897  011BD6  22DD               	addwfc	postdec2,f,c
  7898  011BD8  D736               	goto	l9933
  7899  011BDA                     l9957:
  7900                           
  7901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7902                           ;stkvar	_fmt @ sp[(-32)+-4]
  7903  011BDA  0EDC               	movlw	-36
  7904  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7905  011BE2  0EDD               	movlw	-35
  7906  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7907  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7908  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7909  011BF6                     	if	0	;tblptru may be non-zero
  7910  011BF6                     	endif
  7911  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7912  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  7913  011BF8  6EF8               	movwf	tblptru,c
  7914  011BFA                     	endif
  7915  011BFA  0008               	tblrd		*
  7916  011BFC  50F5               	movf	tablat,w,c
  7917  011BFE  0A73               	xorlw	115
  7918  011C00  A4D8               	btfss	status,2,c
  7919  011C02  D042               	goto	l9967
  7920                           
  7921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7922                           ;stkvar	_fmt @ sp[(-32)+-4]
  7923  011C04  0EDC               	movlw	-36
  7924  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7925  011C0C  0EDD               	movlw	-35
  7926  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7927  011C14  2ADE               	incf	postinc2,f,c
  7928  011C16  0E00               	movlw	0
  7929  011C18  22DD               	addwfc	postdec2,f,c
  7930                           
  7931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7932                           ;stkvar	_ap @ sp[(-32)+-6]
  7933  011C1A  0EDA               	movlw	-38
  7934  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7935  011C22  0EDB               	movlw	-37
  7936  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  7937  011C2A  0E02               	movlw	2
  7938  011C2C  5EDE               	subwf	postinc2,f,c
  7939  011C2E  0E00               	movlw	0
  7940  011C30  5ADD               	subwfb	postdec2,f,c
  7941  011C32  006F FF78  F03F    	movff	postinc2,btemp+10
  7942  011C38  006F FF74  F040    	movff	postdec2,btemp+11
  7943  011C3E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7944  011C44  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7945  011C4A  006F FF78  F03F    	movff	postinc2,btemp+10
  7946  011C50  006F FF74  F040    	movff	postdec2,btemp+11
  7947                           
  7948                           ;stkvar	_cp @ sp[(-32)+29]
  7949  011C56  0EFE               	movlw	-2
  7950  011C58  0060  F103  FFE3   	movff	btemp+11,plusw1
  7951  011C5E  0EFD               	movlw	-3
  7952  011C60  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7953                           
  7954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7955                           ;stkvar	_cp @ sp[(-32)+29]
  7956  011C66  0EFD               	movlw	-3
  7957  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  7958  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7959                           
  7960                           ;stkvar	_fp @ sp[(-34)+-2]
  7961  011C74  0EDC               	movlw	-36
  7962  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  7963  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7964  011C82  EC91  F0A8         	call	_stoa	;wreg free
  7965  011C86  D2AF               	goto	l1975
  7966  011C88                     l9967:
  7967                           
  7968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  7969                           ;stkvar	_fmt @ sp[(-32)+-4]
  7970  011C88  0EDC               	movlw	-36
  7971  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7972  011C90  0EDD               	movlw	-35
  7973  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  7974  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  7975  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7976  011CA4                     	if	0	;tblptru may be non-zero
  7977  011CA4                     	endif
  7978  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7979  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  7980  011CA6  6EF8               	movwf	tblptru,c
  7981  011CA8                     	endif
  7982  011CA8  0008               	tblrd		*
  7983  011CAA  50F5               	movf	tablat,w,c
  7984  011CAC  0A75               	xorlw	117
  7985  011CAE  A4D8               	btfss	status,2,c
  7986  011CB0  D07C               	goto	l9977
  7987                           
  7988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  7989                           ;stkvar	_fmt @ sp[(-32)+-4]
  7990  011CB2  0EDC               	movlw	-36
  7991  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7992  011CBA  0EDD               	movlw	-35
  7993  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7994  011CC2  2ADE               	incf	postinc2,f,c
  7995  011CC4  0E00               	movlw	0
  7996  011CC6  22DD               	addwfc	postdec2,f,c
  7997                           
  7998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7999                           ;stkvar	_ap @ sp[(-32)+-6]
  8000  011CC8  0EDA               	movlw	-38
  8001  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8002  011CD0  0EDB               	movlw	-37
  8003  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8004  011CD8  0E02               	movlw	2
  8005  011CDA  5EDE               	subwf	postinc2,f,c
  8006  011CDC  0E00               	movlw	0
  8007  011CDE  5ADD               	subwfb	postdec2,f,c
  8008  011CE0  006F FF78  F03F    	movff	postinc2,btemp+10
  8009  011CE6  006F FF74  F040    	movff	postdec2,btemp+11
  8010  011CEC  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8011  011CF2  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8012  011CF8  006F FF78  F03F    	movff	postinc2,btemp+10
  8013  011CFE  006F FF74  F040    	movff	postdec2,btemp+11
  8014  011D04  503F               	movf	(btemp+10)^0,w,c
  8015  011D06  6E45               	movwf	(btemp+16)^0,c
  8016  011D08  5040               	movf	(btemp+11)^0,w,c
  8017  011D0A  6E46               	movwf	(btemp+17)^0,c
  8018  011D0C  6A47               	clrf	(btemp+18)^0,c
  8019  011D0E  6A48               	clrf	(btemp+19)^0,c
  8020  011D10  6A49               	clrf	(btemp+20)^0,c
  8021  011D12  6A4A               	clrf	(btemp+21)^0,c
  8022  011D14  6A4B               	clrf	(btemp+22)^0,c
  8023  011D16  6A4C               	clrf	(btemp+23)^0,c
  8024                           
  8025                           ;stkvar	_llu @ sp[(-32)+6]
  8026  011D18  0EE6               	movlw	-26
  8027  011D1A  0060  F117  FFE3   	movff	btemp+16,plusw1
  8028  011D20  0EE7               	movlw	-25
  8029  011D22  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8030  011D28  0EE8               	movlw	-24
  8031  011D2A  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8032  011D30  0EE9               	movlw	-23
  8033  011D32  0060  F123  FFE3   	movff	btemp+19,plusw1
  8034  011D38  0EEA               	movlw	-22
  8035  011D3A  0060  F127  FFE3   	movff	btemp+20,plusw1
  8036  011D40  0EEB               	movlw	-21
  8037  011D42  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8038  011D48  0EEC               	movlw	-20
  8039  011D4A  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8040  011D50  0EED               	movlw	-19
  8041  011D52  0060  F133  FFE3   	movff	btemp+23,plusw1
  8042                           
  8043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8044                           ;stkvar	_llu @ sp[(-32)+6]
  8045  011D58  50E1               	movf	fsr1l,w,c
  8046  011D5A  0FE6               	addlw	-26
  8047  011D5C  6ED9               	movwf	fsr2l,c
  8048  011D5E  50E2               	movf	fsr1h,w,c
  8049  011D60  6EDA               	movwf	fsr2h,c
  8050  011D62  0EFF               	movlw	255
  8051  011D64  22DA               	addwfc	fsr2h,f,c
  8052  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8053  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8054  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8055  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8056  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8057  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8058  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8059  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8060                           
  8061                           ;stkvar	_fp @ sp[(-40)+-2]
  8062  011D96  0ED6               	movlw	-42
  8063  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8064  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8065  011DA4  EC7B  F0A5         	call	_utoa	;wreg free
  8066  011DA8  D21E               	goto	l1975
  8067  011DAA                     l9977:
  8068                           
  8069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8070  011DAA  0E02               	movlw	2
  8071  011DAC  6EE6               	movwf	postinc1,c
  8072  011DAE  0E00               	movlw	0
  8073  011DB0  6EE6               	movwf	postinc1,c
  8074  011DB2  0EF3               	movlw	low STR_56
  8075  011DB4  6EE6               	movwf	postinc1,c
  8076  011DB6  0EFF               	movlw	high STR_56
  8077  011DB8  6EE6               	movwf	postinc1,c
  8078                           
  8079                           ;stkvar	_fmt @ sp[(-36)+-4]
  8080  011DBA  0ED8               	movlw	-40
  8081  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8082  011DC2  0ED9               	movlw	-39
  8083  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8084  011DCA  006F FF78  F03F    	movff	postinc2,btemp+10
  8085  011DD0  006F FF74  F040    	movff	postdec2,btemp+11
  8086  011DD6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8087  011DDC  0060  F103  FFE6   	movff	btemp+11,postinc1
  8088  011DE2  EC8A  F0AD         	call	_strncmp	;wreg free
  8089  011DE6  5035               	movf	btemp^0,w,c
  8090  011DE8  1036               	iorwf	(btemp+1)^0,w,c
  8091  011DEA  A4D8               	btfss	status,2,c
  8092  011DEC  D039               	goto	l9987
  8093                           
  8094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8095                           ;stkvar	_fmt @ sp[(-32)+-4]
  8096  011DEE  0EDC               	movlw	-36
  8097  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8098  011DF6  0EDD               	movlw	-35
  8099  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8100  011DFE  0E02               	movlw	2
  8101  011E00  26DE               	addwf	postinc2,f,c
  8102  011E02  0E00               	movlw	0
  8103  011E04  22DD               	addwfc	postdec2,f,c
  8104                           
  8105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8106                           ;stkvar	_ap @ sp[(-32)+-6]
  8107  011E06  0EDA               	movlw	-38
  8108  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8109  011E0E  0EDB               	movlw	-37
  8110  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8111  011E16  0E04               	movlw	4
  8112  011E18  5EDE               	subwf	postinc2,f,c
  8113  011E1A  0E00               	movlw	0
  8114  011E1C  5ADD               	subwfb	postdec2,f,c
  8115  011E1E  006F FF78  F03F    	movff	postinc2,btemp+10
  8116  011E24  006F FF74  F040    	movff	postdec2,btemp+11
  8117  011E2A  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8118  011E30  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8119  011E36  006F FF78  F03D    	movff	postinc2,btemp+8
  8120  011E3C  006F FF78  F03E    	movff	postinc2,btemp+9
  8121  011E42  006F FF78  F03F    	movff	postinc2,btemp+10
  8122  011E48  006F FF78  F040    	movff	postinc2,btemp+11
  8123  011E4E  503D               	movf	(btemp+8)^0,w,c
  8124  011E50  6E45               	movwf	(btemp+16)^0,c
  8125  011E52  503E               	movf	(btemp+9)^0,w,c
  8126  011E54  6E46               	movwf	(btemp+17)^0,c
  8127  011E56  503F               	movf	(btemp+10)^0,w,c
  8128  011E58  6E47               	movwf	(btemp+18)^0,c
  8129  011E5A  5040               	movf	(btemp+11)^0,w,c
  8130  011E5C  6E48               	movwf	(btemp+19)^0,c
  8131  011E5E  D758               	goto	L5
  8132  011E60                     l9987:
  8133                           
  8134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8135                           ;stkvar	_fmt @ sp[(-32)+-4]
  8136  011E60  0EDC               	movlw	-36
  8137  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8138  011E68  0EDD               	movlw	-35
  8139  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8140  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8141  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8142  011E7C                     	if	0	;tblptru may be non-zero
  8143  011E7C                     	endif
  8144  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8145  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8146  011E7E  6EF8               	movwf	tblptru,c
  8147  011E80                     	endif
  8148  011E80  0008               	tblrd		*
  8149  011E82  50F5               	movf	tablat,w,c
  8150  011E84  0A78               	xorlw	120
  8151  011E86  B4D8               	btfsc	status,2,c
  8152  011E88  D015               	goto	u10450
  8153                           
  8154                           ;stkvar	_fmt @ sp[(-32)+-4]
  8155  011E8A  0EDC               	movlw	-36
  8156  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8157  011E92  0EDD               	movlw	-35
  8158  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8159  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8160  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8161  011EA6                     	if	0	;tblptru may be non-zero
  8162  011EA6                     	endif
  8163  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8164  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8165  011EA8  6EF8               	movwf	tblptru,c
  8166  011EAA                     	endif
  8167  011EAA  0008               	tblrd		*
  8168  011EAC  50F5               	movf	tablat,w,c
  8169  011EAE  0A58               	xorlw	88
  8170  011EB0  A4D8               	btfss	status,2,c
  8171  011EB2  D094               	goto	l10001
  8172  011EB4                     u10450:
  8173                           
  8174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8175                           ;stkvar	_fmt @ sp[(-32)+-4]
  8176  011EB4  0EDC               	movlw	-36
  8177  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8178  011EBC  0EDD               	movlw	-35
  8179  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8180  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8181  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8182  011ED0                     	if	0	;tblptru may be non-zero
  8183  011ED0                     	endif
  8184  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8185  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8186  011ED2  6EF8               	movwf	tblptru,c
  8187  011ED4                     	endif
  8188                           
  8189                           ;stkvar	_c @ sp[(-32)+31]
  8190  011ED4  0008               	tblrd		*
  8191  011ED6  0EFF               	movlw	-1
  8192  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8193                           
  8194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8195                           ;stkvar	_fmt @ sp[(-32)+-4]
  8196  011EDE  0EDC               	movlw	-36
  8197  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8198  011EE6  0EDD               	movlw	-35
  8199  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8200  011EEE  2ADE               	incf	postinc2,f,c
  8201  011EF0  0E00               	movlw	0
  8202  011EF2  22DD               	addwfc	postdec2,f,c
  8203                           
  8204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8205                           ;stkvar	_ap @ sp[(-32)+-6]
  8206  011EF4  0EDA               	movlw	-38
  8207  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8208  011EFC  0EDB               	movlw	-37
  8209  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8210  011F04  0E02               	movlw	2
  8211  011F06  5EDE               	subwf	postinc2,f,c
  8212  011F08  0E00               	movlw	0
  8213  011F0A  5ADD               	subwfb	postdec2,f,c
  8214  011F0C  006F FF78  F03F    	movff	postinc2,btemp+10
  8215  011F12  006F FF74  F040    	movff	postdec2,btemp+11
  8216  011F18  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8217  011F1E  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8218  011F24  006F FF78  F03F    	movff	postinc2,btemp+10
  8219  011F2A  006F FF74  F040    	movff	postdec2,btemp+11
  8220  011F30  503F               	movf	(btemp+10)^0,w,c
  8221  011F32  6E45               	movwf	(btemp+16)^0,c
  8222  011F34  5040               	movf	(btemp+11)^0,w,c
  8223  011F36  6E46               	movwf	(btemp+17)^0,c
  8224  011F38  6A47               	clrf	(btemp+18)^0,c
  8225  011F3A  6A48               	clrf	(btemp+19)^0,c
  8226  011F3C  6A49               	clrf	(btemp+20)^0,c
  8227  011F3E  6A4A               	clrf	(btemp+21)^0,c
  8228  011F40  6A4B               	clrf	(btemp+22)^0,c
  8229  011F42  6A4C               	clrf	(btemp+23)^0,c
  8230                           
  8231                           ;stkvar	_llu @ sp[(-32)+6]
  8232  011F44  0EE6               	movlw	-26
  8233  011F46  0060  F117  FFE3   	movff	btemp+16,plusw1
  8234  011F4C  0EE7               	movlw	-25
  8235  011F4E  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8236  011F54  0EE8               	movlw	-24
  8237  011F56  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8238  011F5C  0EE9               	movlw	-23
  8239  011F5E  0060  F123  FFE3   	movff	btemp+19,plusw1
  8240  011F64  0EEA               	movlw	-22
  8241  011F66  0060  F127  FFE3   	movff	btemp+20,plusw1
  8242  011F6C  0EEB               	movlw	-21
  8243  011F6E  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8244  011F74  0EEC               	movlw	-20
  8245  011F76  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8246  011F7C  0EED               	movlw	-19
  8247  011F7E  0060  F133  FFE3   	movff	btemp+23,plusw1
  8248                           
  8249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8250                           ;stkvar	_c @ sp[(-32)+31]
  8251  011F84  0EFF               	movlw	-1
  8252  011F86  50E3               	movf	plusw1,w,c
  8253  011F88  6EE6               	movwf	postinc1,c
  8254                           
  8255                           ;stkvar	_llu @ sp[(-33)+6]
  8256  011F8A  50E1               	movf	fsr1l,w,c
  8257  011F8C  0FE5               	addlw	-27
  8258  011F8E  6ED9               	movwf	fsr2l,c
  8259  011F90  50E2               	movf	fsr1h,w,c
  8260  011F92  6EDA               	movwf	fsr2h,c
  8261  011F94  0EFF               	movlw	255
  8262  011F96  22DA               	addwfc	fsr2h,f,c
  8263  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8264  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8265  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8266  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8267  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8268  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8269  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8270  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8271                           
  8272                           ;stkvar	_fp @ sp[(-41)+-2]
  8273  011FC8  0ED5               	movlw	-43
  8274  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8275  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8276  011FD6  ECE8  F0A1         	call	_xtoa	;wreg free
  8277  011FDA  D105               	goto	l1975
  8278  011FDC                     l10001:
  8279                           
  8280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8281  011FDC  0E02               	movlw	2
  8282  011FDE  6EE6               	movwf	postinc1,c
  8283  011FE0  0E00               	movlw	0
  8284  011FE2  6EE6               	movwf	postinc1,c
  8285  011FE4  0EF6               	movlw	low STR_61
  8286  011FE6  6EE6               	movwf	postinc1,c
  8287  011FE8  0EFF               	movlw	high STR_61
  8288  011FEA  6EE6               	movwf	postinc1,c
  8289                           
  8290                           ;stkvar	_fmt @ sp[(-36)+-4]
  8291  011FEC  0ED8               	movlw	-40
  8292  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8293  011FF4  0ED9               	movlw	-39
  8294  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8295  011FFC  006F FF78  F03F    	movff	postinc2,btemp+10
  8296  012002  006F FF74  F040    	movff	postdec2,btemp+11
  8297  012008  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8298  01200E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8299  012014  EC8A  F0AD         	call	_strncmp	;wreg free
  8300  012018  5035               	movf	btemp^0,w,c
  8301  01201A  1036               	iorwf	(btemp+1)^0,w,c
  8302  01201C  B4D8               	btfsc	status,2,c
  8303  01201E  D022               	goto	u10470
  8304  012020  0E02               	movlw	2
  8305  012022  6EE6               	movwf	postinc1,c
  8306  012024  0E00               	movlw	0
  8307  012026  6EE6               	movwf	postinc1,c
  8308  012028  0EE7               	movlw	low STR_65
  8309  01202A  6EE6               	movwf	postinc1,c
  8310  01202C  0EFF               	movlw	high STR_65
  8311  01202E  6EE6               	movwf	postinc1,c
  8312                           
  8313                           ;stkvar	_fmt @ sp[(-36)+-4]
  8314  012030  0ED8               	movlw	-40
  8315  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8316  012038  0ED9               	movlw	-39
  8317  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8318  012040  006F FF78  F03F    	movff	postinc2,btemp+10
  8319  012046  006F FF74  F040    	movff	postdec2,btemp+11
  8320  01204C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8321  012052  0060  F103  FFE6   	movff	btemp+11,postinc1
  8322  012058  EC8A  F0AD         	call	_strncmp	;wreg free
  8323  01205C  5035               	movf	btemp^0,w,c
  8324  01205E  1036               	iorwf	(btemp+1)^0,w,c
  8325  012060  A4D8               	btfss	status,2,c
  8326  012062  D058               	goto	l10015
  8327  012064                     u10470:
  8328                           
  8329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8330                           ;stkvar	_fmt @ sp[(-32)+-4]
  8331  012064  0EDC               	movlw	-36
  8332  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8333  01206C  0EDD               	movlw	-35
  8334  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8335  012074  006F FF78  F03F    	movff	postinc2,btemp+10
  8336  01207A  006F FF74  F040    	movff	postdec2,btemp+11
  8337  012080  0E01               	movlw	1
  8338  012082  263F               	addwf	(btemp+10)^0,f,c
  8339  012084  0E00               	movlw	0
  8340  012086  2240               	addwfc	(btemp+11)^0,f,c
  8341  012088  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  8342  01208E  0060  F103  FFF7   	movff	btemp+11,tblptrh
  8343  012094                     	if	0	;tblptru may be non-zero
  8344  012094                     	endif
  8345  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8346  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8347  012096  6EF8               	movwf	tblptru,c
  8348  012098                     	endif
  8349                           
  8350                           ;stkvar	_c @ sp[(-32)+31]
  8351  012098  0008               	tblrd		*
  8352  01209A  0EFF               	movlw	-1
  8353  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8354                           
  8355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8356                           ;stkvar	_fmt @ sp[(-32)+-4]
  8357  0120A2  0EDC               	movlw	-36
  8358  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8359  0120AA  0EDD               	movlw	-35
  8360  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8361  0120B2  0E02               	movlw	2
  8362  0120B4  26DE               	addwf	postinc2,f,c
  8363  0120B6  0E00               	movlw	0
  8364  0120B8  22DD               	addwfc	postdec2,f,c
  8365                           
  8366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8367                           ;stkvar	_ap @ sp[(-32)+-6]
  8368  0120BA  0EDA               	movlw	-38
  8369  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8370  0120C2  0EDB               	movlw	-37
  8371  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8372  0120CA  0E04               	movlw	4
  8373  0120CC  5EDE               	subwf	postinc2,f,c
  8374  0120CE  0E00               	movlw	0
  8375  0120D0  5ADD               	subwfb	postdec2,f,c
  8376  0120D2  006F FF78  F03F    	movff	postinc2,btemp+10
  8377  0120D8  006F FF74  F040    	movff	postdec2,btemp+11
  8378  0120DE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8379  0120E4  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8380  0120EA  006F FF78  F03D    	movff	postinc2,btemp+8
  8381  0120F0  006F FF78  F03E    	movff	postinc2,btemp+9
  8382  0120F6  006F FF78  F03F    	movff	postinc2,btemp+10
  8383  0120FC  006F FF78  F040    	movff	postinc2,btemp+11
  8384  012102  503D               	movf	(btemp+8)^0,w,c
  8385  012104  6E45               	movwf	(btemp+16)^0,c
  8386  012106  503E               	movf	(btemp+9)^0,w,c
  8387  012108  6E46               	movwf	(btemp+17)^0,c
  8388  01210A  503F               	movf	(btemp+10)^0,w,c
  8389  01210C  6E47               	movwf	(btemp+18)^0,c
  8390  01210E  5040               	movf	(btemp+11)^0,w,c
  8391  012110  6E48               	movwf	(btemp+19)^0,c
  8392  012112  D714               	goto	L6
  8393  012114                     l10015:
  8394                           
  8395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8396                           ;stkvar	_fmt @ sp[(-32)+-4]
  8397  012114  0EDC               	movlw	-36
  8398  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8399  01211C  0EDD               	movlw	-35
  8400  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8401  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8402  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8403  012130                     	if	0	;tblptru may be non-zero
  8404  012130                     	endif
  8405  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8406  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8407  012132  6EF8               	movwf	tblptru,c
  8408  012134                     	endif
  8409  012134  0008               	tblrd		*
  8410  012136  50F5               	movf	tablat,w,c
  8411  012138  0A25               	xorlw	37
  8412  01213A  A4D8               	btfss	status,2,c
  8413  01213C  D01A               	goto	l10025
  8414                           
  8415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8416                           ;stkvar	_fmt @ sp[(-32)+-4]
  8417  01213E  0EDC               	movlw	-36
  8418  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8419  012146  0EDD               	movlw	-35
  8420  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8421  01214E  2ADE               	incf	postinc2,f,c
  8422  012150  0E00               	movlw	0
  8423  012152  22DD               	addwfc	postdec2,f,c
  8424                           
  8425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8426                           ;stkvar	_fp @ sp[(-32)+-2]
  8427  012154  0EDE               	movlw	-34
  8428  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8429  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8430  012162  0E25               	movlw	37
  8431  012164  6EE6               	movwf	postinc1,c
  8432  012166  0E00               	movlw	0
  8433  012168  6EE6               	movwf	postinc1,c
  8434  01216A  EC58  F0B6         	call	_fputc	;wreg free
  8435  01216E                     l10021:
  8436                           
  8437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8438  01216E  0E01               	movlw	1
  8439  012170  D00C               	goto	L7
  8440  012172                     l10025:
  8441                           
  8442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8443                           ;stkvar	_fmt @ sp[(-32)+-4]
  8444  012172  0EDC               	movlw	-36
  8445  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8446  01217A  0EDD               	movlw	-35
  8447  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8448  012182  2ADE               	incf	postinc2,f,c
  8449  012184  0E00               	movlw	0
  8450  012186  22DD               	addwfc	postdec2,f,c
  8451                           
  8452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8453  012188  0E00               	movlw	0
  8454  01218A                     L7:
  8455  01218A  6E35               	movwf	btemp^0,c
  8456  01218C  0E00               	movlw	0
  8457  01218E  6E36               	movwf	(btemp+1)^0,c
  8458  012190  D02A               	goto	l1975
  8459  012192                     l10031:
  8460                           
  8461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8462                           ;stkvar	_fp @ sp[(-32)+-2]
  8463  012192  0EDE               	movlw	-34
  8464  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8465  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8466                           
  8467                           ;stkvar	_fmt @ sp[(-34)+-4]
  8468  0121A0  0EDA               	movlw	-38
  8469  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8470  0121A8  0EDB               	movlw	-37
  8471  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8472  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8473  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8474  0121BC                     	if	0	;tblptru may be non-zero
  8475  0121BC                     	endif
  8476  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8477  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8478  0121BE  6EF8               	movwf	tblptru,c
  8479  0121C0                     	endif
  8480  0121C0  0008               	tblrd		*
  8481  0121C2  50F5               	movf	tablat,w,c
  8482  0121C4  6EE6               	movwf	postinc1,c
  8483  0121C6  0E00               	movlw	0
  8484  0121C8  6EE6               	movwf	postinc1,c
  8485  0121CA  EC58  F0B6         	call	_fputc	;wreg free
  8486                           
  8487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8488                           ;stkvar	_fmt @ sp[(-32)+-4]
  8489  0121CE  0EDC               	movlw	-36
  8490  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8491  0121D6  0EDD               	movlw	-35
  8492  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8493  0121DE  2ADE               	incf	postinc2,f,c
  8494  0121E0  0E00               	movlw	0
  8495  0121E2  22DD               	addwfc	postdec2,f,c
  8496  0121E4  D7C4               	goto	l10021
  8497  0121E6                     l1975:
  8498                           
  8499                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8500  0121E6  0EDA               	movlw	218
  8501  0121E8  26E1               	addwf	fsr1l,f,c
  8502  0121EA  0EFF               	movlw	255
  8503  0121EC  22E2               	addwfc	fsr1h,f,c
  8504  0121EE  0012               	return		;funcret
  8505  0121F0                     __end_of_vfpfcnvrt:
  8506                           	opt callstack 0
  8507                           
  8508 ;; *************** function _xtoa *****************
  8509 ;; Defined at:
  8510 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8513 ;;		 -> f(6), NULL(0), 
  8514 ;;  d               8  [STACK] unsigned long long 
  8515 ;;  x               1  [STACK] unsigned char 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  n               8  [STACK] unsigned long long 
  8518 ;;  c               2  [STACK] int 
  8519 ;;  i               2  [STACK] int 
  8520 ;;  w               2  [STACK] int 
  8521 ;;  p               2  [STACK] int 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  2  [STACK] int 
  8524 ;; Registers used:
  8525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/4
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;Total ram usage:        0 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:   11
  8538 ;; This function calls:
  8539 ;;		_isalpha
  8540 ;;		_isupper
  8541 ;;		_pad
  8542 ;;		_toupper
  8543 ;; This function is called by:
  8544 ;;		_vfpfcnvrt
  8545 ;; This function uses a reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text35
  8549  0143D0                     __ptext35:
  8550                           	opt callstack 0
  8551  0143D0                     _xtoa:
  8552                           	opt callstack 0
  8553                           
  8554                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8555  0143D0  0E14               	movlw	20
  8556  0143D2  26E1               	addwf	fsr1l,f,c
  8557  0143D4  0E00               	movlw	0
  8558  0143D6  22E2               	addwfc	fsr1h,f,c
  8559                           
  8560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8561                           
  8562                           ;incstack = 0
  8563  0143D8  AE21               	btfss	(_prec+1)^0,7,c
  8564                           
  8565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8566  0143DA  9222               	bcf	_flags^0,1,c
  8567                           
  8568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8569  0143DC  BE21               	btfsc	(_prec+1)^0,7,c
  8570  0143DE  D005               	goto	u10010
  8571  0143E0  5021               	movf	(_prec+1)^0,w,c
  8572  0143E2  E110               	bnz	l9767
  8573  0143E4  0420               	decf	_prec^0,w,c
  8574  0143E6  B0D8               	btfsc	status,0,c
  8575  0143E8  D00D               	goto	l9767
  8576  0143EA                     u10010:
  8577  0143EA  0E01               	movlw	1
  8578  0143EC  6E3F               	movwf	(btemp+10)^0,c
  8579  0143EE  0E00               	movlw	0
  8580  0143F0  6E40               	movwf	(btemp+11)^0,c
  8581                           
  8582                           ;stkvar	_p @ sp[(-20)+18]
  8583  0143F2  0EFE               	movlw	-2
  8584  0143F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8585  0143FA  0EFF               	movlw	-1
  8586  0143FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  8587  014402  D008               	goto	l1925
  8588  014404                     l9767:
  8589                           
  8590                           ;stkvar	_p @ sp[(-20)+18]
  8591  014404  0EFE               	movlw	-2
  8592  014406  0060  F083  FFE3   	movff	_prec,plusw1
  8593  01440C  0EFF               	movlw	-1
  8594  01440E  0060  F087  FFE3   	movff	_prec+1,plusw1
  8595  014414                     l1925:
  8596                           
  8597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8598                           ;stkvar	_w @ sp[(-20)+16]
  8599  014414  0EFC               	movlw	-4
  8600  014416  0060  F07B  FFE3   	movff	_width,plusw1
  8601  01441C  0EFD               	movlw	-3
  8602  01441E  0060  F07F  FFE3   	movff	_width+1,plusw1
  8603                           
  8604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8605  014424  A822               	btfss	_flags^0,4,c
  8606  014426  D00B               	goto	l9773
  8607                           
  8608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8609                           ;stkvar	_w @ sp[(-20)+16]
  8610  014428  50E1               	movf	fsr1l,w,c
  8611  01442A  0FFC               	addlw	-4
  8612  01442C  6ED9               	movwf	fsr2l,c
  8613  01442E  50E2               	movf	fsr1h,w,c
  8614  014430  6EDA               	movwf	fsr2h,c
  8615  014432  0EFF               	movlw	255
  8616  014434  22DA               	addwfc	fsr2h,f,c
  8617  014436  0EFE               	movlw	254
  8618  014438  26DE               	addwf	postinc2,f,c
  8619  01443A  0EFF               	movlw	255
  8620  01443C  22DD               	addwfc	postdec2,f,c
  8621  01443E                     l9773:
  8622                           
  8623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8624                           ;stkvar	_d @ sp[(-20)+-10]
  8625  01443E  0EE2               	movlw	226
  8626  014440  24E1               	addwf	fsr1l,w,c
  8627  014442  6ED9               	movwf	fsr2l,c
  8628  014444  0EFF               	movlw	255
  8629  014446  20E2               	addwfc	fsr1h,w,c
  8630  014448  6EDA               	movwf	fsr2h,c
  8631                           
  8632                           ;stkvar	_n @ sp[(-20)+4]
  8633  01444A  0E08               	movlw	8
  8634  01444C  6E35               	movwf	btemp^0,c
  8635  01444E  0EF0               	movlw	-16
  8636  014450                     us1003999:
  8637  014450  006F FF7B FFE3     	movff	postinc2,plusw1
  8638  014456  28E8               	incf	wreg,w,c
  8639  014458  2E35               	decfsz	btemp^0,f,c
  8640  01445A  D7FA               	bra	us1003999
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8643  01445C  0E4F               	movlw	79
  8644  01445E  6E3F               	movwf	(btemp+10)^0,c
  8645  014460  0E00               	movlw	0
  8646  014462  6E40               	movwf	(btemp+11)^0,c
  8647                           
  8648                           ;stkvar	_i @ sp[(-20)+14]
  8649  014464  0EFA               	movlw	-6
  8650  014466  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8651  01446C  0EFB               	movlw	-5
  8652  01446E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8653                           
  8654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8655  014474  0102               	movlb	2	; () banked
  8656  014476  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8657                           
  8658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8659  014478  D0EE               	goto	l9811
  8660  01447A                     l9779:
  8661                           
  8662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8663                           ;stkvar	_i @ sp[(-20)+14]
  8664  01447A  50E1               	movf	fsr1l,w,c
  8665  01447C  0FFA               	addlw	-6
  8666  01447E  6ED9               	movwf	fsr2l,c
  8667  014480  50E2               	movf	fsr1h,w,c
  8668  014482  6EDA               	movwf	fsr2h,c
  8669  014484  0EFF               	movlw	255
  8670  014486  22DA               	addwfc	fsr2h,f,c
  8671  014488  06DE               	decf	postinc2,f,c
  8672  01448A  0E00               	movlw	0
  8673  01448C  5ADD               	subwfb	postdec2,f,c
  8674                           
  8675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8676                           ;stkvar	_n @ sp[(-20)+4]
  8677  01448E  0EF0               	movlw	-16
  8678  014490  006F FF8C  F03F    	movff	plusw1,btemp+10
  8679  014496  0EF1               	movlw	-15
  8680  014498  006F FF8C  F040    	movff	plusw1,btemp+11
  8681  01449E  0E0F               	movlw	15
  8682  0144A0  163F               	andwf	(btemp+10)^0,f,c
  8683  0144A2  0E00               	movlw	0
  8684  0144A4  1640               	andwf	(btemp+11)^0,f,c
  8685                           
  8686                           ;stkvar	_c @ sp[(-20)+12]
  8687  0144A6  0EF8               	movlw	-8
  8688  0144A8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8689  0144AE  0EF9               	movlw	-7
  8690  0144B0  0060  F103  FFE3   	movff	btemp+11,plusw1
  8691                           
  8692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8693                           ;stkvar	_c @ sp[(-20)+12]
  8694  0144B6  0EF9               	movlw	-7
  8695  0144B8  BEE3               	btfsc	plusw1,7,c
  8696  0144BA  D00F               	goto	l9787
  8697  0144BC  0EF9               	movlw	-7
  8698  0144BE  50E3               	movf	plusw1,w,c
  8699  0144C0  E108               	bnz	u10040
  8700  0144C2  0EF8               	movlw	-8
  8701  0144C4  006F FF8C  F035    	movff	plusw1,btemp
  8702  0144CA  0E0A               	movlw	10
  8703  0144CC  5E35               	subwf	btemp^0,f,c
  8704  0144CE  A0D8               	btfss	status,0,c
  8705  0144D0  D004               	goto	l9787
  8706  0144D2                     u10040:
  8707                           
  8708                           ;stkvar	_c @ sp[(-20)+12]
  8709  0144D2  0EF8               	movlw	-8
  8710  0144D4  50E3               	movf	plusw1,w,c
  8711  0144D6  0F57               	addlw	87
  8712  0144D8  D003               	goto	L8
  8713  0144DA                     l9787:
  8714                           
  8715                           ;stkvar	_c @ sp[(-20)+12]
  8716  0144DA  0EF8               	movlw	-8
  8717  0144DC  50E3               	movf	plusw1,w,c
  8718  0144DE  0F30               	addlw	48
  8719  0144E0                     L8:
  8720  0144E0  6E3F               	movwf	(btemp+10)^0,c
  8721  0144E2  0EF9               	movlw	-7
  8722  0144E4  006F FF8C  F040    	movff	plusw1,btemp+11
  8723  0144EA  0E00               	movlw	0
  8724  0144EC  2240               	addwfc	(btemp+11)^0,f,c
  8725                           
  8726                           ;stkvar	_c @ sp[(-20)+12]
  8727  0144EE  0EF8               	movlw	-8
  8728  0144F0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8729  0144F6  0EF9               	movlw	-7
  8730  0144F8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8731  0144FE  0EBF               	movlw	191
  8732  014500  6E3F               	movwf	(btemp+10)^0,c
  8733  014502  0EFF               	movlw	255
  8734  014504  6E40               	movwf	(btemp+11)^0,c
  8735                           
  8736                           ;stkvar	_x @ sp[(-20)+-11]
  8737  014506  0EE1               	movlw	-31
  8738  014508  50E3               	movf	plusw1,w,c
  8739  01450A  6E3D               	movwf	(btemp+8)^0,c
  8740  01450C  6A3E               	clrf	(btemp+9)^0,c
  8741  01450E  503F               	movf	(btemp+10)^0,w,c
  8742  014510  263D               	addwf	(btemp+8)^0,f,c
  8743  014512  5040               	movf	(btemp+11)^0,w,c
  8744  014514  223E               	addwfc	(btemp+9)^0,f,c
  8745  014516  503E               	movf	(btemp+9)^0,w,c
  8746  014518  E106               	bnz	u10050
  8747  01451A  0E1A               	movlw	26
  8748  01451C  5C3D               	subwf	(btemp+8)^0,w,c
  8749  01451E  B0D8               	btfsc	status,0,c
  8750  014520  D002               	goto	u10050
  8751  014522  0E01               	movlw	1
  8752  014524  D001               	goto	u10060
  8753  014526                     u10050:
  8754  014526  0E00               	movlw	0
  8755  014528                     u10060:
  8756  014528  6E3F               	movwf	(btemp+10)^0,c
  8757  01452A  6A40               	clrf	(btemp+11)^0,c
  8758                           
  8759                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8760  01452C  0EEE               	movlw	-18
  8761  01452E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8762  014534  0EEF               	movlw	-17
  8763  014536  0060  F103  FFE3   	movff	btemp+11,plusw1
  8764                           
  8765                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8766  01453C  0EEE               	movlw	-18
  8767  01453E  006F FF8C  F035    	movff	plusw1,btemp
  8768  014544  0EEF               	movlw	-17
  8769  014546  50E3               	movf	plusw1,w,c
  8770  014548  1035               	iorwf	btemp^0,w,c
  8771  01454A  B4D8               	btfsc	status,2,c
  8772  01454C  D041               	goto	l9803
  8773  01454E  0E9F               	movlw	159
  8774  014550  6E3F               	movwf	(btemp+10)^0,c
  8775  014552  0EFF               	movlw	255
  8776  014554  6E40               	movwf	(btemp+11)^0,c
  8777                           
  8778                           ;stkvar	_c @ sp[(-20)+12]
  8779  014556  0EF8               	movlw	-8
  8780  014558  006F FF8C  F03D    	movff	plusw1,btemp+8
  8781  01455E  0EF9               	movlw	-7
  8782  014560  006F FF8C  F03E    	movff	plusw1,btemp+9
  8783  014566  0E20               	movlw	32
  8784  014568  123D               	iorwf	(btemp+8)^0,f,c
  8785  01456A  0E00               	movlw	0
  8786  01456C  123E               	iorwf	(btemp+9)^0,f,c
  8787  01456E  503F               	movf	(btemp+10)^0,w,c
  8788  014570  263D               	addwf	(btemp+8)^0,f,c
  8789  014572  5040               	movf	(btemp+11)^0,w,c
  8790  014574  223E               	addwfc	(btemp+9)^0,f,c
  8791  014576  503E               	movf	(btemp+9)^0,w,c
  8792  014578  E106               	bnz	u10080
  8793  01457A  0E1A               	movlw	26
  8794  01457C  5C3D               	subwf	(btemp+8)^0,w,c
  8795  01457E  B0D8               	btfsc	status,0,c
  8796  014580  D002               	goto	u10080
  8797  014582  0E01               	movlw	1
  8798  014584  D001               	goto	u10090
  8799  014586                     u10080:
  8800  014586  0E00               	movlw	0
  8801  014588                     u10090:
  8802  014588  6E3F               	movwf	(btemp+10)^0,c
  8803  01458A  6A40               	clrf	(btemp+11)^0,c
  8804                           
  8805                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  8806  01458C  0EEC               	movlw	-20
  8807  01458E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8808  014594  0EED               	movlw	-19
  8809  014596  0060  F103  FFE3   	movff	btemp+11,plusw1
  8810                           
  8811                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  8812  01459C  0EEC               	movlw	-20
  8813  01459E  006F FF8C  F035    	movff	plusw1,btemp
  8814  0145A4  0EED               	movlw	-19
  8815  0145A6  50E3               	movf	plusw1,w,c
  8816  0145A8  1035               	iorwf	btemp^0,w,c
  8817  0145AA  B4D8               	btfsc	status,2,c
  8818  0145AC  D011               	goto	l9803
  8819                           
  8820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8821                           ;stkvar	_c @ sp[(-20)+12]
  8822  0145AE  0EF8               	movlw	-8
  8823  0145B0  006F FF8F FFE6     	movff	plusw1,postinc1
  8824  0145B6  006F FF8F FFE6     	movff	plusw1,postinc1
  8825  0145BC  ECC9  F0BD         	call	_toupper	;wreg free
  8826                           
  8827                           ;stkvar	_c @ sp[(-20)+12]
  8828  0145C0  0EF8               	movlw	-8
  8829  0145C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8830  0145C8  0EF9               	movlw	-7
  8831  0145CA  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8832  0145D0                     l9803:
  8833                           
  8834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8835                           ;stkvar	_c @ sp[(-20)+12]
  8836                           ;stkvar	_i @ sp[(-20)+14]
  8837  0145D0  0EFA               	movlw	-6
  8838  0145D2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8839  0145D8  0EFB               	movlw	-5
  8840  0145DA  006F FF8C  F040    	movff	plusw1,btemp+11
  8841  0145E0  0EAC               	movlw	low _dbuf
  8842  0145E2  243F               	addwf	(btemp+10)^0,w,c
  8843  0145E4  6ED9               	movwf	fsr2l,c
  8844  0145E6  0E02               	movlw	high _dbuf
  8845  0145E8  2040               	addwfc	(btemp+11)^0,w,c
  8846  0145EA  6EDA               	movwf	fsr2h,c
  8847  0145EC  0EF8               	movlw	-8
  8848  0145EE  006F FF8F FFDF     	movff	plusw1,indf2
  8849                           
  8850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8851                           ;stkvar	_p @ sp[(-20)+18]
  8852  0145F4  50E1               	movf	fsr1l,w,c
  8853  0145F6  0FFE               	addlw	-2
  8854  0145F8  6ED9               	movwf	fsr2l,c
  8855  0145FA  50E2               	movf	fsr1h,w,c
  8856  0145FC  6EDA               	movwf	fsr2h,c
  8857  0145FE  0EFF               	movlw	255
  8858  014600  22DA               	addwfc	fsr2h,f,c
  8859  014602  06DE               	decf	postinc2,f,c
  8860  014604  0E00               	movlw	0
  8861  014606  5ADD               	subwfb	postdec2,f,c
  8862                           
  8863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8864                           ;stkvar	_w @ sp[(-20)+16]
  8865  014608  50E1               	movf	fsr1l,w,c
  8866  01460A  0FFC               	addlw	-4
  8867  01460C  6ED9               	movwf	fsr2l,c
  8868  01460E  50E2               	movf	fsr1h,w,c
  8869  014610  6EDA               	movwf	fsr2h,c
  8870  014612  0EFF               	movlw	255
  8871  014614  22DA               	addwfc	fsr2h,f,c
  8872  014616  06DE               	decf	postinc2,f,c
  8873  014618  0E00               	movlw	0
  8874  01461A  5ADD               	subwfb	postdec2,f,c
  8875                           
  8876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8877  01461C  0E04               	movlw	4
  8878  01461E  6E40               	movwf	(btemp+11)^0,c
  8879                           
  8880                           ;stkvar	_n @ sp[(-20)+4]
  8881  014620  50E1               	movf	fsr1l,w,c
  8882  014622  0FF0               	addlw	-16
  8883  014624  6ED9               	movwf	fsr2l,c
  8884  014626  50E2               	movf	fsr1h,w,c
  8885  014628  6EDA               	movwf	fsr2h,c
  8886  01462A  0EFF               	movlw	255
  8887  01462C  22DA               	addwfc	fsr2h,f,c
  8888  01462E  2840               	incf	(btemp+11)^0,w,c
  8889  014630  52DE               	movf	postinc2,f,c
  8890  014632  D00F               	goto	u10110
  8891  014634                     u10115:
  8892  014634  52DE               	movf	postinc2,f,c
  8893  014636  52DE               	movf	postinc2,f,c
  8894  014638  52DE               	movf	postinc2,f,c
  8895  01463A  52DE               	movf	postinc2,f,c
  8896  01463C  52DE               	movf	postinc2,f,c
  8897  01463E  52DE               	movf	postinc2,f,c
  8898  014640  90D8               	bcf	status,0,c
  8899  014642  32DD               	rrcf	postdec2,f,c
  8900  014644  32DD               	rrcf	postdec2,f,c
  8901  014646  32DD               	rrcf	postdec2,f,c
  8902  014648  32DD               	rrcf	postdec2,f,c
  8903  01464A  32DD               	rrcf	postdec2,f,c
  8904  01464C  32DD               	rrcf	postdec2,f,c
  8905  01464E  32DD               	rrcf	postdec2,f,c
  8906  014650  32DE               	rrcf	postinc2,f,c
  8907  014652                     u10110:
  8908  014652  2EE8               	decfsz	wreg,f,c
  8909  014654  D7EF               	goto	u10115
  8910  014656                     l9811:
  8911                           
  8912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8913                           ;stkvar	_i @ sp[(-20)+14]
  8914  014656  0EFB               	movlw	-5
  8915  014658  BEE3               	btfsc	plusw1,7,c
  8916  01465A  D03A               	goto	u10160
  8917  01465C  0EFB               	movlw	-5
  8918  01465E  50E3               	movf	plusw1,w,c
  8919  014660  E108               	bnz	u10120
  8920  014662  0EFA               	movlw	-6
  8921  014664  006F FF8C  F035    	movff	plusw1,btemp
  8922  01466A  0E02               	movlw	2
  8923  01466C  5E35               	subwf	btemp^0,f,c
  8924  01466E  A0D8               	btfss	status,0,c
  8925  014670  D02F               	goto	u10160
  8926  014672                     u10120:
  8927                           
  8928                           ;stkvar	_n @ sp[(-20)+4]
  8929  014672  0EF0               	movlw	-16
  8930  014674  50E3               	movf	plusw1,w,c
  8931  014676  E115               	bnz	u10131
  8932  014678  0EF1               	movlw	-15
  8933  01467A  50E3               	movf	plusw1,w,c
  8934  01467C  E112               	bnz	u10131
  8935  01467E  0EF2               	movlw	-14
  8936  014680  50E3               	movf	plusw1,w,c
  8937  014682  E10F               	bnz	u10131
  8938  014684  0EF3               	movlw	-13
  8939  014686  50E3               	movf	plusw1,w,c
  8940  014688  E10C               	bnz	u10131
  8941  01468A  0EF4               	movlw	-12
  8942  01468C  50E3               	movf	plusw1,w,c
  8943  01468E  E109               	bnz	u10131
  8944  014690  0EF5               	movlw	-11
  8945  014692  50E3               	movf	plusw1,w,c
  8946  014694  E106               	bnz	u10131
  8947  014696  0EF6               	movlw	-10
  8948  014698  50E3               	movf	plusw1,w,c
  8949  01469A  E103               	bnz	u10131
  8950  01469C  0EF7               	movlw	-9
  8951  01469E  50E3               	movf	plusw1,w,c
  8952  0146A0  A4D8               	btfss	status,2,c
  8953  0146A2                     u10131:
  8954  0146A2  D6EB               	goto	l9779
  8955                           
  8956                           ;stkvar	_p @ sp[(-20)+18]
  8957  0146A4  0EFF               	movlw	-1
  8958  0146A6  BEE3               	btfsc	plusw1,7,c
  8959  0146A8  D007               	goto	u10140
  8960  0146AA  0EFF               	movlw	-1
  8961  0146AC  50E3               	movf	plusw1,w,c
  8962  0146AE  E103               	bnz	u10141
  8963  0146B0  0EFE               	movlw	-2
  8964  0146B2  04E3               	decf	plusw1,w,c
  8965  0146B4  B0D8               	btfsc	status,0,c
  8966  0146B6                     u10141:
  8967  0146B6  D6E1               	goto	l9779
  8968  0146B8                     u10140:
  8969                           
  8970                           ;stkvar	_w @ sp[(-20)+16]
  8971  0146B8  0EFD               	movlw	-3
  8972  0146BA  BEE3               	btfsc	plusw1,7,c
  8973  0146BC  D009               	goto	u10160
  8974  0146BE  0EFD               	movlw	-3
  8975  0146C0  50E3               	movf	plusw1,w,c
  8976  0146C2  E104               	bnz	u10150
  8977  0146C4  0EFC               	movlw	-4
  8978  0146C6  04E3               	decf	plusw1,w,c
  8979  0146C8  A0D8               	btfss	status,0,c
  8980  0146CA  D002               	goto	u10160
  8981  0146CC                     u10150:
  8982  0146CC  B222               	btfsc	_flags^0,1,c
  8983  0146CE  D6D5               	goto	l9779
  8984  0146D0                     u10160:
  8985                           
  8986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8987  0146D0  A822               	btfss	_flags^0,4,c
  8988  0146D2  D036               	goto	l9827
  8989                           
  8990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8991                           ;stkvar	_i @ sp[(-20)+14]
  8992  0146D4  50E1               	movf	fsr1l,w,c
  8993  0146D6  0FFA               	addlw	-6
  8994  0146D8  6ED9               	movwf	fsr2l,c
  8995  0146DA  50E2               	movf	fsr1h,w,c
  8996  0146DC  6EDA               	movwf	fsr2h,c
  8997  0146DE  0EFF               	movlw	255
  8998  0146E0  22DA               	addwfc	fsr2h,f,c
  8999  0146E2  06DE               	decf	postinc2,f,c
  9000  0146E4  0E00               	movlw	0
  9001  0146E6  5ADD               	subwfb	postdec2,f,c
  9002                           
  9003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9004                           ;stkvar	_x @ sp[(-20)+-11]
  9005                           ;stkvar	_i @ sp[(-20)+14]
  9006  0146E8  0EFA               	movlw	-6
  9007  0146EA  006F FF8C  F03F    	movff	plusw1,btemp+10
  9008  0146F0  0EFB               	movlw	-5
  9009  0146F2  006F FF8C  F040    	movff	plusw1,btemp+11
  9010  0146F8  0EAC               	movlw	low _dbuf
  9011  0146FA  243F               	addwf	(btemp+10)^0,w,c
  9012  0146FC  6ED9               	movwf	fsr2l,c
  9013  0146FE  0E02               	movlw	high _dbuf
  9014  014700  2040               	addwfc	(btemp+11)^0,w,c
  9015  014702  6EDA               	movwf	fsr2h,c
  9016  014704  0EE1               	movlw	-31
  9017  014706  006F FF8F FFDF     	movff	plusw1,indf2
  9018                           
  9019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9020                           ;stkvar	_i @ sp[(-20)+14]
  9021  01470C  50E1               	movf	fsr1l,w,c
  9022  01470E  0FFA               	addlw	-6
  9023  014710  6ED9               	movwf	fsr2l,c
  9024  014712  50E2               	movf	fsr1h,w,c
  9025  014714  6EDA               	movwf	fsr2h,c
  9026  014716  0EFF               	movlw	255
  9027  014718  22DA               	addwfc	fsr2h,f,c
  9028  01471A  06DE               	decf	postinc2,f,c
  9029  01471C  0E00               	movlw	0
  9030  01471E  5ADD               	subwfb	postdec2,f,c
  9031                           
  9032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9033                           ;stkvar	_i @ sp[(-20)+14]
  9034  014720  0EFA               	movlw	-6
  9035  014722  006F FF8C  F03F    	movff	plusw1,btemp+10
  9036  014728  0EFB               	movlw	-5
  9037  01472A  006F FF8C  F040    	movff	plusw1,btemp+11
  9038  014730  0EAC               	movlw	low _dbuf
  9039  014732  243F               	addwf	(btemp+10)^0,w,c
  9040  014734  6ED9               	movwf	fsr2l,c
  9041  014736  0E02               	movlw	high _dbuf
  9042  014738  2040               	addwfc	(btemp+11)^0,w,c
  9043  01473A  6EDA               	movwf	fsr2h,c
  9044  01473C  0E30               	movlw	48
  9045  01473E  6EDF               	movwf	indf2,c
  9046  014740                     l9827:
  9047                           
  9048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9049                           ;stkvar	_w @ sp[(-20)+16]
  9050  014740  0EFC               	movlw	-4
  9051  014742  006F FF8F FFE6     	movff	plusw1,postinc1
  9052  014748  006F FF8F FFE6     	movff	plusw1,postinc1
  9053                           
  9054                           ;stkvar	_i @ sp[(-22)+14]
  9055  01474E  0EAC               	movlw	low _dbuf
  9056  014750  6E3F               	movwf	(btemp+10)^0,c
  9057  014752  0E02               	movlw	high _dbuf
  9058  014754  6E40               	movwf	(btemp+11)^0,c
  9059  014756  0EF8               	movlw	-8
  9060  014758  50E3               	movf	plusw1,w,c
  9061  01475A  263F               	addwf	(btemp+10)^0,f,c
  9062  01475C  0EF9               	movlw	-7
  9063  01475E  50E3               	movf	plusw1,w,c
  9064  014760  2240               	addwfc	(btemp+11)^0,f,c
  9065  014762  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9066  014768  0060  F103  FFE6   	movff	btemp+11,postinc1
  9067                           
  9068                           ;stkvar	_fp @ sp[(-24)+-2]
  9069  01476E  0EE6               	movlw	-26
  9070  014770  006F FF8F FFE6     	movff	plusw1,postinc1
  9071  014776  006F FF8F FFE6     	movff	plusw1,postinc1
  9072  01477C  EC76  F0B7         	call	_pad	;wreg free
  9073                           
  9074                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9075  014780  0EE1               	movlw	225
  9076  014782  26E1               	addwf	fsr1l,f,c
  9077  014784  0EFF               	movlw	255
  9078  014786  22E2               	addwfc	fsr1h,f,c
  9079  014788  0012               	return		;funcret
  9080  01478A                     __end_of_xtoa:
  9081                           	opt callstack 0
  9082                           
  9083 ;; *************** function _toupper *****************
  9084 ;; Defined at:
  9085 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  c               2  [STACK] int 
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  2  [STACK] int 
  9092 ;; Registers used:
  9093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/2
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    7
  9106 ;; This function calls:
  9107 ;;		_islower
  9108 ;; This function is called by:
  9109 ;;		_xtoa
  9110 ;; This function uses a reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text36
  9114  017B92                     __ptext36:
  9115                           	opt callstack 0
  9116  017B92                     _toupper:
  9117                           	opt callstack 0
  9118                           
  9119                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9120  017B92  52E6               	movf	postinc1,f,c
  9121  017B94  52E6               	movf	postinc1,f,c
  9122                           
  9123                           ;stkvar	_c @ sp[(-2)+-2]
  9124                           
  9125                           ;incstack = 0
  9126  017B96  0EFC               	movlw	-4
  9127  017B98  50E3               	movf	plusw1,w,c
  9128  017B9A  0F9F               	addlw	159
  9129  017B9C  6E3F               	movwf	(btemp+10)^0,c
  9130  017B9E  0EFD               	movlw	-3
  9131  017BA0  006F FF8C  F040    	movff	plusw1,btemp+11
  9132  017BA6  0EFF               	movlw	255
  9133  017BA8  2240               	addwfc	(btemp+11)^0,f,c
  9134  017BAA  5040               	movf	(btemp+11)^0,w,c
  9135  017BAC  E106               	bnz	u5370
  9136  017BAE  0E1A               	movlw	26
  9137  017BB0  5C3F               	subwf	(btemp+10)^0,w,c
  9138  017BB2  B0D8               	btfsc	status,0,c
  9139  017BB4  D002               	goto	u5370
  9140  017BB6  0E01               	movlw	1
  9141  017BB8  D001               	goto	u5380
  9142  017BBA                     u5370:
  9143  017BBA  0E00               	movlw	0
  9144  017BBC                     u5380:
  9145  017BBC  6E3F               	movwf	(btemp+10)^0,c
  9146  017BBE  6A40               	clrf	(btemp+11)^0,c
  9147                           
  9148                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9149  017BC0  0EFE               	movlw	-2
  9150  017BC2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9151  017BC8  0EFF               	movlw	-1
  9152  017BCA  0060  F103  FFE3   	movff	btemp+11,plusw1
  9153                           
  9154                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9155  017BD0  0EFE               	movlw	-2
  9156  017BD2  006F FF8C  F035    	movff	plusw1,btemp
  9157  017BD8  0EFF               	movlw	-1
  9158  017BDA  50E3               	movf	plusw1,w,c
  9159  017BDC  1035               	iorwf	btemp^0,w,c
  9160  017BDE  B4D8               	btfsc	status,2,c
  9161  017BE0  D00D               	goto	l6473
  9162                           
  9163                           ;stkvar	_c @ sp[(-2)+-2]
  9164  017BE2  0EFC               	movlw	-4
  9165  017BE4  006F FF8C  F035    	movff	plusw1,btemp
  9166  017BEA  0EFD               	movlw	-3
  9167  017BEC  006F FF8C  F036    	movff	plusw1,btemp+1
  9168  017BF2  0E5F               	movlw	95
  9169  017BF4  1635               	andwf	btemp^0,f,c
  9170  017BF6  0E00               	movlw	0
  9171  017BF8  1636               	andwf	(btemp+1)^0,f,c
  9172  017BFA  D008               	goto	l2866
  9173  017BFC                     l6473:
  9174                           
  9175                           ;stkvar	_c @ sp[(-2)+-2]
  9176  017BFC  0EFC               	movlw	-4
  9177  017BFE  006F FF8C  F035    	movff	plusw1,btemp
  9178  017C04  0EFD               	movlw	-3
  9179  017C06  006F FF8C  F036    	movff	plusw1,btemp+1
  9180  017C0C                     l2866:
  9181                           
  9182                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9183  017C0C  52E5               	movf	postdec1,f,c
  9184  017C0E  52E5               	movf	postdec1,f,c
  9185  017C10  52E5               	movf	postdec1,f,c
  9186  017C12  52E5               	movf	postdec1,f,c
  9187  017C14  0012               	return		;funcret
  9188  017C16                     __end_of_toupper:
  9189                           	opt callstack 0
  9190                           
  9191 ;; *************** function _islower *****************
  9192 ;; Defined at:
  9193 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  c               2  [STACK] int 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  2  [STACK] int 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;Total ram usage:        0 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    6
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_toupper
  9218 ;; This function uses a reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text37
  9222  018684                     __ptext37:
  9223                           	opt callstack 0
  9224  018684                     _islower:
  9225                           	opt callstack 16
  9226                           
  9227                           ;stkvar	_c @ sp[(0)+-2]
  9228                           
  9229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9230                           ;incstack = 0
  9231  018684  0EFE               	movlw	-2
  9232  018686  50E3               	movf	plusw1,w,c
  9233  018688  0F9F               	addlw	159
  9234  01868A  6E3F               	movwf	(btemp+10)^0,c
  9235  01868C  0EFF               	movlw	-1
  9236  01868E  006F FF8C  F040    	movff	plusw1,btemp+11
  9237  018694  0EFF               	movlw	255
  9238  018696  2240               	addwfc	(btemp+11)^0,f,c
  9239  018698  5040               	movf	(btemp+11)^0,w,c
  9240  01869A  E106               	bnz	u5060
  9241  01869C  0E1A               	movlw	26
  9242  01869E  5C3F               	subwf	(btemp+10)^0,w,c
  9243  0186A0  B0D8               	btfsc	status,0,c
  9244  0186A2  D002               	goto	u5060
  9245  0186A4  0E01               	movlw	1
  9246  0186A6  D001               	goto	u5070
  9247  0186A8                     u5060:
  9248  0186A8  0E00               	movlw	0
  9249  0186AA                     u5070:
  9250  0186AA  6E35               	movwf	btemp^0,c
  9251  0186AC  6A36               	clrf	(btemp+1)^0,c
  9252                           
  9253                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9254  0186AE  52E5               	movf	postdec1,f,c
  9255  0186B0  52E5               	movf	postdec1,f,c
  9256  0186B2  0012               	return		;funcret
  9257  0186B4                     __end_of_islower:
  9258                           	opt callstack 0
  9259                           
  9260 ;; *************** function _isalpha *****************
  9261 ;; Defined at:
  9262 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  c               2  [STACK] int 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;		None
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2  [STACK] int 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9280 ;;Total ram usage:        0 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    6
  9283 ;; This function calls:
  9284 ;;		Nothing
  9285 ;; This function is called by:
  9286 ;;		_xtoa
  9287 ;; This function uses a reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text38
  9291  0183FA                     __ptext38:
  9292                           	opt callstack 0
  9293  0183FA                     _isalpha:
  9294                           	opt callstack 17
  9295                           
  9296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9297                           ;incstack = 0
  9298  0183FA  0E9F               	movlw	159
  9299  0183FC  6E3F               	movwf	(btemp+10)^0,c
  9300  0183FE  0EFF               	movlw	255
  9301  018400  6E40               	movwf	(btemp+11)^0,c
  9302                           
  9303                           ;stkvar	_c @ sp[(0)+-2]
  9304  018402  0EFE               	movlw	-2
  9305  018404  006F FF8C  F03D    	movff	plusw1,btemp+8
  9306  01840A  0EFF               	movlw	-1
  9307  01840C  006F FF8C  F03E    	movff	plusw1,btemp+9
  9308  018412  0E20               	movlw	32
  9309  018414  123D               	iorwf	(btemp+8)^0,f,c
  9310  018416  0E00               	movlw	0
  9311  018418  123E               	iorwf	(btemp+9)^0,f,c
  9312  01841A  503F               	movf	(btemp+10)^0,w,c
  9313  01841C  263D               	addwf	(btemp+8)^0,f,c
  9314  01841E  5040               	movf	(btemp+11)^0,w,c
  9315  018420  223E               	addwfc	(btemp+9)^0,f,c
  9316  018422  503E               	movf	(btemp+9)^0,w,c
  9317  018424  E106               	bnz	u5350
  9318  018426  0E1A               	movlw	26
  9319  018428  5C3D               	subwf	(btemp+8)^0,w,c
  9320  01842A  B0D8               	btfsc	status,0,c
  9321  01842C  D002               	goto	u5350
  9322  01842E  0E01               	movlw	1
  9323  018430  D001               	goto	u5360
  9324  018432                     u5350:
  9325  018432  0E00               	movlw	0
  9326  018434                     u5360:
  9327  018434  6E35               	movwf	btemp^0,c
  9328  018436  6A36               	clrf	(btemp+1)^0,c
  9329                           
  9330                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9331  018438  52E5               	movf	postdec1,f,c
  9332  01843A  52E5               	movf	postdec1,f,c
  9333  01843C  0012               	return		;funcret
  9334  01843E                     __end_of_isalpha:
  9335                           	opt callstack 0
  9336                           
  9337 ;; *************** function _utoa *****************
  9338 ;; Defined at:
  9339 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9342 ;;		 -> f(6), NULL(0), 
  9343 ;;  d               8  [STACK] unsigned long long 
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;  n               8  [STACK] unsigned long long 
  9346 ;;  i               2  [STACK] int 
  9347 ;;  w               2  [STACK] int 
  9348 ;;  p               2  [STACK] int 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2  [STACK] int 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/4
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;Total ram usage:        0 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:   11
  9365 ;; This function calls:
  9366 ;;		___lodiv
  9367 ;;		___lomod
  9368 ;;		_pad
  9369 ;; This function is called by:
  9370 ;;		_vfpfcnvrt
  9371 ;; This function uses a reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text39
  9375  014AF6                     __ptext39:
  9376                           	opt callstack 0
  9377  014AF6                     _utoa:
  9378                           	opt callstack 0
  9379                           
  9380                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9381  014AF6  0E0E               	movlw	14
  9382  014AF8  26E1               	addwf	fsr1l,f,c
  9383  014AFA  0E00               	movlw	0
  9384  014AFC  22E2               	addwfc	fsr1h,f,c
  9385                           
  9386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9387                           
  9388                           ;incstack = 0
  9389  014AFE  AE21               	btfss	(_prec+1)^0,7,c
  9390                           
  9391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9392  014B00  9222               	bcf	_flags^0,1,c
  9393                           
  9394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9395  014B02  BE21               	btfsc	(_prec+1)^0,7,c
  9396  014B04  D005               	goto	u9930
  9397  014B06  5021               	movf	(_prec+1)^0,w,c
  9398  014B08  E110               	bnz	l9727
  9399  014B0A  0420               	decf	_prec^0,w,c
  9400  014B0C  B0D8               	btfsc	status,0,c
  9401  014B0E  D00D               	goto	l9727
  9402  014B10                     u9930:
  9403  014B10  0E01               	movlw	1
  9404  014B12  6E3F               	movwf	(btemp+10)^0,c
  9405  014B14  0E00               	movlw	0
  9406  014B16  6E40               	movwf	(btemp+11)^0,c
  9407                           
  9408                           ;stkvar	_p @ sp[(-14)+12]
  9409  014B18  0EFE               	movlw	-2
  9410  014B1A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9411  014B20  0EFF               	movlw	-1
  9412  014B22  0060  F103  FFE3   	movff	btemp+11,plusw1
  9413  014B28  D008               	goto	l1910
  9414  014B2A                     l9727:
  9415                           
  9416                           ;stkvar	_p @ sp[(-14)+12]
  9417  014B2A  0EFE               	movlw	-2
  9418  014B2C  0060  F083  FFE3   	movff	_prec,plusw1
  9419  014B32  0EFF               	movlw	-1
  9420  014B34  0060  F087  FFE3   	movff	_prec+1,plusw1
  9421  014B3A                     l1910:
  9422                           
  9423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9424                           ;stkvar	_w @ sp[(-14)+10]
  9425  014B3A  0EFC               	movlw	-4
  9426  014B3C  0060  F07B  FFE3   	movff	_width,plusw1
  9427  014B42  0EFD               	movlw	-3
  9428  014B44  0060  F07F  FFE3   	movff	_width+1,plusw1
  9429                           
  9430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9431                           ;stkvar	_d @ sp[(-14)+-10]
  9432  014B4A  0EE8               	movlw	232
  9433  014B4C  24E1               	addwf	fsr1l,w,c
  9434  014B4E  6ED9               	movwf	fsr2l,c
  9435  014B50  0EFF               	movlw	255
  9436  014B52  20E2               	addwfc	fsr1h,w,c
  9437  014B54  6EDA               	movwf	fsr2h,c
  9438                           
  9439                           ;stkvar	_n @ sp[(-14)+0]
  9440  014B56  0E08               	movlw	8
  9441  014B58  6E35               	movwf	btemp^0,c
  9442  014B5A  0EF2               	movlw	-14
  9443  014B5C                     us994999:
  9444  014B5C  006F FF7B FFE3     	movff	postinc2,plusw1
  9445  014B62  28E8               	incf	wreg,w,c
  9446  014B64  2E35               	decfsz	btemp^0,f,c
  9447  014B66  D7FA               	bra	us994999
  9448                           
  9449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9450  014B68  0E4F               	movlw	79
  9451  014B6A  6E3F               	movwf	(btemp+10)^0,c
  9452  014B6C  0E00               	movlw	0
  9453  014B6E  6E40               	movwf	(btemp+11)^0,c
  9454                           
  9455                           ;stkvar	_i @ sp[(-14)+8]
  9456  014B70  0EFA               	movlw	-6
  9457  014B72  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9458  014B78  0EFB               	movlw	-5
  9459  014B7A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9460                           
  9461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9462  014B80  0102               	movlb	2	; () banked
  9463  014B82  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9464                           
  9465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9466  014B84  D0FB               	goto	l9745
  9467  014B86                     l9735:
  9468                           
  9469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9470                           ;stkvar	_i @ sp[(-14)+8]
  9471  014B86  50E1               	movf	fsr1l,w,c
  9472  014B88  0FFA               	addlw	-6
  9473  014B8A  6ED9               	movwf	fsr2l,c
  9474  014B8C  50E2               	movf	fsr1h,w,c
  9475  014B8E  6EDA               	movwf	fsr2h,c
  9476  014B90  0EFF               	movlw	255
  9477  014B92  22DA               	addwfc	fsr2h,f,c
  9478  014B94  06DE               	decf	postinc2,f,c
  9479  014B96  0E00               	movlw	0
  9480  014B98  5ADD               	subwfb	postdec2,f,c
  9481                           
  9482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9483  014B9A  0E0A               	movlw	10
  9484  014B9C  6EE6               	movwf	postinc1,c
  9485  014B9E  0E00               	movlw	0
  9486  014BA0  6EE6               	movwf	postinc1,c
  9487  014BA2  0E00               	movlw	0
  9488  014BA4  6EE6               	movwf	postinc1,c
  9489  014BA6  0E00               	movlw	0
  9490  014BA8  6EE6               	movwf	postinc1,c
  9491  014BAA  0E00               	movlw	0
  9492  014BAC  6EE6               	movwf	postinc1,c
  9493  014BAE  0E00               	movlw	0
  9494  014BB0  6EE6               	movwf	postinc1,c
  9495  014BB2  0E00               	movlw	0
  9496  014BB4  6EE6               	movwf	postinc1,c
  9497  014BB6  0E00               	movlw	0
  9498  014BB8  6EE6               	movwf	postinc1,c
  9499                           
  9500                           ;stkvar	_n @ sp[(-22)+0]
  9501  014BBA  50E1               	movf	fsr1l,w,c
  9502  014BBC  0FEA               	addlw	-22
  9503  014BBE  6ED9               	movwf	fsr2l,c
  9504  014BC0  50E2               	movf	fsr1h,w,c
  9505  014BC2  6EDA               	movwf	fsr2h,c
  9506  014BC4  0EFF               	movlw	255
  9507  014BC6  22DA               	addwfc	fsr2h,f,c
  9508  014BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  9509  014BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  9510  014BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  9511  014BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  9512  014BE0  006F FF7B FFE6     	movff	postinc2,postinc1
  9513  014BE6  006F FF7B FFE6     	movff	postinc2,postinc1
  9514  014BEC  006F FF7B FFE6     	movff	postinc2,postinc1
  9515  014BF2  006F FF7B FFE6     	movff	postinc2,postinc1
  9516  014BF8  EC21  F0B5         	call	___lomod	;wreg free
  9517  014BFC  52E5               	movf	postdec1,f,c
  9518  014BFE  006F FF9C  F04C    	movff	indf1,btemp+23
  9519  014C04  52E5               	movf	postdec1,f,c
  9520  014C06  006F FF9C  F04B    	movff	indf1,btemp+22
  9521  014C0C  52E5               	movf	postdec1,f,c
  9522  014C0E  006F FF9C  F04A    	movff	indf1,btemp+21
  9523  014C14  52E5               	movf	postdec1,f,c
  9524  014C16  006F FF9C  F049    	movff	indf1,btemp+20
  9525  014C1C  52E5               	movf	postdec1,f,c
  9526  014C1E  006F FF9C  F048    	movff	indf1,btemp+19
  9527  014C24  52E5               	movf	postdec1,f,c
  9528  014C26  006F FF9C  F047    	movff	indf1,btemp+18
  9529  014C2C  52E5               	movf	postdec1,f,c
  9530  014C2E  006F FF9C  F046    	movff	indf1,btemp+17
  9531  014C34  52E5               	movf	postdec1,f,c
  9532  014C36  006F FF9C  F045    	movff	indf1,btemp+16
  9533  014C3C  0EF8               	movlw	248
  9534  014C3E  26E1               	addwf	fsr1l,f,c
  9535  014C40  0EFF               	movlw	255
  9536  014C42  22E2               	addwfc	fsr1h,f,c
  9537  014C44  0E30               	movlw	48
  9538  014C46  2645               	addwf	(btemp+16)^0,f,c
  9539                           
  9540                           ;stkvar	_i @ sp[(-14)+8]
  9541  014C48  0EFA               	movlw	-6
  9542  014C4A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9543  014C50  0EFB               	movlw	-5
  9544  014C52  006F FF8C  F040    	movff	plusw1,btemp+11
  9545  014C58  0EAC               	movlw	low _dbuf
  9546  014C5A  243F               	addwf	(btemp+10)^0,w,c
  9547  014C5C  6ED9               	movwf	fsr2l,c
  9548  014C5E  0E02               	movlw	high _dbuf
  9549  014C60  2040               	addwfc	(btemp+11)^0,w,c
  9550  014C62  6EDA               	movwf	fsr2h,c
  9551  014C64  0060  F117  FFDF   	movff	btemp+16,indf2
  9552                           
  9553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9554                           ;stkvar	_p @ sp[(-14)+12]
  9555  014C6A  50E1               	movf	fsr1l,w,c
  9556  014C6C  0FFE               	addlw	-2
  9557  014C6E  6ED9               	movwf	fsr2l,c
  9558  014C70  50E2               	movf	fsr1h,w,c
  9559  014C72  6EDA               	movwf	fsr2h,c
  9560  014C74  0EFF               	movlw	255
  9561  014C76  22DA               	addwfc	fsr2h,f,c
  9562  014C78  06DE               	decf	postinc2,f,c
  9563  014C7A  0E00               	movlw	0
  9564  014C7C  5ADD               	subwfb	postdec2,f,c
  9565                           
  9566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9567                           ;stkvar	_w @ sp[(-14)+10]
  9568  014C7E  50E1               	movf	fsr1l,w,c
  9569  014C80  0FFC               	addlw	-4
  9570  014C82  6ED9               	movwf	fsr2l,c
  9571  014C84  50E2               	movf	fsr1h,w,c
  9572  014C86  6EDA               	movwf	fsr2h,c
  9573  014C88  0EFF               	movlw	255
  9574  014C8A  22DA               	addwfc	fsr2h,f,c
  9575  014C8C  06DE               	decf	postinc2,f,c
  9576  014C8E  0E00               	movlw	0
  9577  014C90  5ADD               	subwfb	postdec2,f,c
  9578                           
  9579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9580  014C92  0E0A               	movlw	10
  9581  014C94  6EE6               	movwf	postinc1,c
  9582  014C96  0E00               	movlw	0
  9583  014C98  6EE6               	movwf	postinc1,c
  9584  014C9A  0E00               	movlw	0
  9585  014C9C  6EE6               	movwf	postinc1,c
  9586  014C9E  0E00               	movlw	0
  9587  014CA0  6EE6               	movwf	postinc1,c
  9588  014CA2  0E00               	movlw	0
  9589  014CA4  6EE6               	movwf	postinc1,c
  9590  014CA6  0E00               	movlw	0
  9591  014CA8  6EE6               	movwf	postinc1,c
  9592  014CAA  0E00               	movlw	0
  9593  014CAC  6EE6               	movwf	postinc1,c
  9594  014CAE  0E00               	movlw	0
  9595  014CB0  6EE6               	movwf	postinc1,c
  9596                           
  9597                           ;stkvar	_n @ sp[(-22)+0]
  9598  014CB2  50E1               	movf	fsr1l,w,c
  9599  014CB4  0FEA               	addlw	-22
  9600  014CB6  6ED9               	movwf	fsr2l,c
  9601  014CB8  50E2               	movf	fsr1h,w,c
  9602  014CBA  6EDA               	movwf	fsr2h,c
  9603  014CBC  0EFF               	movlw	255
  9604  014CBE  22DA               	addwfc	fsr2h,f,c
  9605  014CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  9606  014CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  9607  014CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  9608  014CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  9609  014CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  9610  014CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  9611  014CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  9612  014CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  9613  014CF0  EC50  F0B2         	call	___lodiv	;wreg free
  9614  014CF4  52E5               	movf	postdec1,f,c
  9615  014CF6  006F FF9C  F04C    	movff	indf1,btemp+23
  9616  014CFC  52E5               	movf	postdec1,f,c
  9617  014CFE  006F FF9C  F04B    	movff	indf1,btemp+22
  9618  014D04  52E5               	movf	postdec1,f,c
  9619  014D06  006F FF9C  F04A    	movff	indf1,btemp+21
  9620  014D0C  52E5               	movf	postdec1,f,c
  9621  014D0E  006F FF9C  F049    	movff	indf1,btemp+20
  9622  014D14  52E5               	movf	postdec1,f,c
  9623  014D16  006F FF9C  F048    	movff	indf1,btemp+19
  9624  014D1C  52E5               	movf	postdec1,f,c
  9625  014D1E  006F FF9C  F047    	movff	indf1,btemp+18
  9626  014D24  52E5               	movf	postdec1,f,c
  9627  014D26  006F FF9C  F046    	movff	indf1,btemp+17
  9628  014D2C  52E5               	movf	postdec1,f,c
  9629  014D2E  006F FF9C  F045    	movff	indf1,btemp+16
  9630  014D34  0EF8               	movlw	248
  9631  014D36  26E1               	addwf	fsr1l,f,c
  9632  014D38  0EFF               	movlw	255
  9633  014D3A  22E2               	addwfc	fsr1h,f,c
  9634                           
  9635                           ;stkvar	_n @ sp[(-14)+0]
  9636  014D3C  0EF2               	movlw	-14
  9637  014D3E  0060  F117  FFE3   	movff	btemp+16,plusw1
  9638  014D44  0EF3               	movlw	-13
  9639  014D46  0060  F11B  FFE3   	movff	btemp+17,plusw1
  9640  014D4C  0EF4               	movlw	-12
  9641  014D4E  0060  F11F  FFE3   	movff	btemp+18,plusw1
  9642  014D54  0EF5               	movlw	-11
  9643  014D56  0060  F123  FFE3   	movff	btemp+19,plusw1
  9644  014D5C  0EF6               	movlw	-10
  9645  014D5E  0060  F127  FFE3   	movff	btemp+20,plusw1
  9646  014D64  0EF7               	movlw	-9
  9647  014D66  0060  F12B  FFE3   	movff	btemp+21,plusw1
  9648  014D6C  0EF8               	movlw	-8
  9649  014D6E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  9650  014D74  0EF9               	movlw	-7
  9651  014D76  0060  F133  FFE3   	movff	btemp+23,plusw1
  9652  014D7C                     l9745:
  9653                           
  9654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9655                           ;stkvar	_i @ sp[(-14)+8]
  9656  014D7C  0EFA               	movlw	-6
  9657  014D7E  006F FF8C  F035    	movff	plusw1,btemp
  9658  014D84  0EFB               	movlw	-5
  9659  014D86  50E3               	movf	plusw1,w,c
  9660  014D88  1035               	iorwf	btemp^0,w,c
  9661  014D8A  B4D8               	btfsc	status,2,c
  9662  014D8C  D02F               	goto	u9990
  9663                           
  9664                           ;stkvar	_n @ sp[(-14)+0]
  9665  014D8E  0EF2               	movlw	-14
  9666  014D90  50E3               	movf	plusw1,w,c
  9667  014D92  E115               	bnz	u9961
  9668  014D94  0EF3               	movlw	-13
  9669  014D96  50E3               	movf	plusw1,w,c
  9670  014D98  E112               	bnz	u9961
  9671  014D9A  0EF4               	movlw	-12
  9672  014D9C  50E3               	movf	plusw1,w,c
  9673  014D9E  E10F               	bnz	u9961
  9674  014DA0  0EF5               	movlw	-11
  9675  014DA2  50E3               	movf	plusw1,w,c
  9676  014DA4  E10C               	bnz	u9961
  9677  014DA6  0EF6               	movlw	-10
  9678  014DA8  50E3               	movf	plusw1,w,c
  9679  014DAA  E109               	bnz	u9961
  9680  014DAC  0EF7               	movlw	-9
  9681  014DAE  50E3               	movf	plusw1,w,c
  9682  014DB0  E106               	bnz	u9961
  9683  014DB2  0EF8               	movlw	-8
  9684  014DB4  50E3               	movf	plusw1,w,c
  9685  014DB6  E103               	bnz	u9961
  9686  014DB8  0EF9               	movlw	-7
  9687  014DBA  50E3               	movf	plusw1,w,c
  9688  014DBC  A4D8               	btfss	status,2,c
  9689  014DBE                     u9961:
  9690  014DBE  D6E3               	goto	l9735
  9691                           
  9692                           ;stkvar	_p @ sp[(-14)+12]
  9693  014DC0  0EFF               	movlw	-1
  9694  014DC2  BEE3               	btfsc	plusw1,7,c
  9695  014DC4  D007               	goto	u9970
  9696  014DC6  0EFF               	movlw	-1
  9697  014DC8  50E3               	movf	plusw1,w,c
  9698  014DCA  E103               	bnz	u9971
  9699  014DCC  0EFE               	movlw	-2
  9700  014DCE  04E3               	decf	plusw1,w,c
  9701  014DD0  B0D8               	btfsc	status,0,c
  9702  014DD2                     u9971:
  9703  014DD2  D6D9               	goto	l9735
  9704  014DD4                     u9970:
  9705                           
  9706                           ;stkvar	_w @ sp[(-14)+10]
  9707  014DD4  0EFD               	movlw	-3
  9708  014DD6  BEE3               	btfsc	plusw1,7,c
  9709  014DD8  D009               	goto	u9990
  9710  014DDA  0EFD               	movlw	-3
  9711  014DDC  50E3               	movf	plusw1,w,c
  9712  014DDE  E104               	bnz	u9980
  9713  014DE0  0EFC               	movlw	-4
  9714  014DE2  04E3               	decf	plusw1,w,c
  9715  014DE4  A0D8               	btfss	status,0,c
  9716  014DE6  D002               	goto	u9990
  9717  014DE8                     u9980:
  9718  014DE8  B222               	btfsc	_flags^0,1,c
  9719  014DEA  D6CD               	goto	l9735
  9720  014DEC                     u9990:
  9721                           
  9722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  9723                           ;stkvar	_w @ sp[(-14)+10]
  9724  014DEC  0EFC               	movlw	-4
  9725  014DEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9726  014DF4  006F FF8F FFE6     	movff	plusw1,postinc1
  9727                           
  9728                           ;stkvar	_i @ sp[(-16)+8]
  9729  014DFA  0EAC               	movlw	low _dbuf
  9730  014DFC  6E3F               	movwf	(btemp+10)^0,c
  9731  014DFE  0E02               	movlw	high _dbuf
  9732  014E00  6E40               	movwf	(btemp+11)^0,c
  9733  014E02  0EF8               	movlw	-8
  9734  014E04  50E3               	movf	plusw1,w,c
  9735  014E06  263F               	addwf	(btemp+10)^0,f,c
  9736  014E08  0EF9               	movlw	-7
  9737  014E0A  50E3               	movf	plusw1,w,c
  9738  014E0C  2240               	addwfc	(btemp+11)^0,f,c
  9739  014E0E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9740  014E14  0060  F103  FFE6   	movff	btemp+11,postinc1
  9741                           
  9742                           ;stkvar	_fp @ sp[(-18)+-2]
  9743  014E1A  0EEC               	movlw	-20
  9744  014E1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9745  014E22  006F FF8F FFE6     	movff	plusw1,postinc1
  9746  014E28  EC76  F0B7         	call	_pad	;wreg free
  9747                           
  9748                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9749  014E2C  0EE8               	movlw	232
  9750  014E2E  26E1               	addwf	fsr1l,f,c
  9751  014E30  0EFF               	movlw	255
  9752  014E32  22E2               	addwfc	fsr1h,f,c
  9753  014E34  0012               	return		;funcret
  9754  014E36                     __end_of_utoa:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function ___lomod *****************
  9758 ;; Defined at:
  9759 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  dividend        8  [STACK] unsigned long long 
  9762 ;;  divisor         8  [STACK] unsigned long long 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  counter         1  [STACK] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  8  [STACK] unsigned long long 
  9767 ;; Registers used:
  9768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/2
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    6
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_utoa
  9785 ;; This function uses a reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text40
  9789  016A42                     __ptext40:
  9790                           	opt callstack 0
  9791  016A42                     ___lomod:
  9792                           	opt callstack 0
  9793                           
  9794                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9795  016A42  52E6               	movf	postinc1,f,c
  9796                           
  9797                           ;stkvar	_divisor @ sp[(-1)+-16]
  9798                           
  9799                           ;incstack = 0
  9800  016A44  0EEF               	movlw	-17
  9801  016A46  50E3               	movf	plusw1,w,c
  9802  016A48  E116               	bnz	u6500
  9803  016A4A  0EF0               	movlw	-16
  9804  016A4C  50E3               	movf	plusw1,w,c
  9805  016A4E  E113               	bnz	u6500
  9806  016A50  0EF1               	movlw	-15
  9807  016A52  50E3               	movf	plusw1,w,c
  9808  016A54  E110               	bnz	u6500
  9809  016A56  0EF2               	movlw	-14
  9810  016A58  50E3               	movf	plusw1,w,c
  9811  016A5A  E10D               	bnz	u6500
  9812  016A5C  0EF3               	movlw	-13
  9813  016A5E  50E3               	movf	plusw1,w,c
  9814  016A60  E10A               	bnz	u6500
  9815  016A62  0EF4               	movlw	-12
  9816  016A64  50E3               	movf	plusw1,w,c
  9817  016A66  E107               	bnz	u6500
  9818  016A68  0EF5               	movlw	-11
  9819  016A6A  50E3               	movf	plusw1,w,c
  9820  016A6C  E104               	bnz	u6500
  9821  016A6E  0EF6               	movlw	-10
  9822  016A70  50E3               	movf	plusw1,w,c
  9823  016A72  B4D8               	btfsc	status,2,c
  9824  016A74  D075               	goto	u6530
  9825  016A76                     u6500:
  9826                           
  9827                           ;stkvar	_counter @ sp[(-1)+0]
  9828  016A76  0EFF               	movlw	-1
  9829  016A78  6AE3               	clrf	plusw1,c
  9830  016A7A  D012               	goto	L9
  9831  016A7C                     l7083:
  9832                           
  9833                           ;stkvar	_divisor @ sp[(-1)+-16]
  9834  016A7C  90D8               	bcf	status,0,c
  9835  016A7E  0EEF               	movlw	-17
  9836  016A80  36E3               	rlcf	plusw1,f,c
  9837  016A82  0EF0               	movlw	-16
  9838  016A84  36E3               	rlcf	plusw1,f,c
  9839  016A86  0EF1               	movlw	-15
  9840  016A88  36E3               	rlcf	plusw1,f,c
  9841  016A8A  0EF2               	movlw	-14
  9842  016A8C  36E3               	rlcf	plusw1,f,c
  9843  016A8E  0EF3               	movlw	-13
  9844  016A90  36E3               	rlcf	plusw1,f,c
  9845  016A92  0EF4               	movlw	-12
  9846  016A94  36E3               	rlcf	plusw1,f,c
  9847  016A96  0EF5               	movlw	-11
  9848  016A98  36E3               	rlcf	plusw1,f,c
  9849  016A9A  0EF6               	movlw	-10
  9850  016A9C  36E3               	rlcf	plusw1,f,c
  9851                           
  9852                           ;stkvar	_counter @ sp[(-1)+0]
  9853  016A9E  0EFF               	movlw	-1
  9854  016AA0                     L9:
  9855  016AA0  2AE3               	incf	plusw1,f,c
  9856                           
  9857                           ;stkvar	_divisor @ sp[(-1)+-16]
  9858  016AA2  0EF6               	movlw	-10
  9859  016AA4  AEE3               	btfss	plusw1,7,c
  9860  016AA6  D7EA               	goto	l7083
  9861  016AA8                     u6510:
  9862                           
  9863                           ;stkvar	_divisor @ sp[(-1)+-16]
  9864                           ;stkvar	_dividend @ sp[(-1)+-8]
  9865  016AA8  50E1               	movf	fsr1l,w,c
  9866  016AAA  0FF7               	addlw	-9
  9867  016AAC  6ED9               	movwf	fsr2l,c
  9868  016AAE  50E2               	movf	fsr1h,w,c
  9869  016AB0  6EDA               	movwf	fsr2h,c
  9870  016AB2  0EFF               	movlw	255
  9871  016AB4  22DA               	addwfc	fsr2h,f,c
  9872  016AB6  0EEF               	movlw	-17
  9873  016AB8  50E3               	movf	plusw1,w,c
  9874  016ABA  5CDE               	subwf	postinc2,w,c
  9875  016ABC  0EF0               	movlw	-16
  9876  016ABE  50E3               	movf	plusw1,w,c
  9877  016AC0  58DE               	subwfb	postinc2,w,c
  9878  016AC2  0EF1               	movlw	-15
  9879  016AC4  50E3               	movf	plusw1,w,c
  9880  016AC6  58DE               	subwfb	postinc2,w,c
  9881  016AC8  0EF2               	movlw	-14
  9882  016ACA  50E3               	movf	plusw1,w,c
  9883  016ACC  58DE               	subwfb	postinc2,w,c
  9884  016ACE  0EF3               	movlw	-13
  9885  016AD0  50E3               	movf	plusw1,w,c
  9886  016AD2  58DE               	subwfb	postinc2,w,c
  9887  016AD4  0EF4               	movlw	-12
  9888  016AD6  50E3               	movf	plusw1,w,c
  9889  016AD8  58DE               	subwfb	postinc2,w,c
  9890  016ADA  0EF5               	movlw	-11
  9891  016ADC  50E3               	movf	plusw1,w,c
  9892  016ADE  58DE               	subwfb	postinc2,w,c
  9893  016AE0  0EF6               	movlw	-10
  9894  016AE2  50E3               	movf	plusw1,w,c
  9895  016AE4  58DE               	subwfb	postinc2,w,c
  9896  016AE6  A0D8               	btfss	status,0,c
  9897  016AE8  D01F               	goto	l7091
  9898                           
  9899                           ;stkvar	_divisor @ sp[(-1)+-16]
  9900                           ;stkvar	_dividend @ sp[(-1)+-8]
  9901  016AEA  50E1               	movf	fsr1l,w,c
  9902  016AEC  0FF7               	addlw	-9
  9903  016AEE  6ED9               	movwf	fsr2l,c
  9904  016AF0  50E2               	movf	fsr1h,w,c
  9905  016AF2  6EDA               	movwf	fsr2h,c
  9906  016AF4  0EFF               	movlw	255
  9907  016AF6  22DA               	addwfc	fsr2h,f,c
  9908  016AF8  0EEF               	movlw	-17
  9909  016AFA  50E3               	movf	plusw1,w,c
  9910  016AFC  5EDE               	subwf	postinc2,f,c
  9911  016AFE  0EF0               	movlw	-16
  9912  016B00  50E3               	movf	plusw1,w,c
  9913  016B02  5ADE               	subwfb	postinc2,f,c
  9914  016B04  0EF1               	movlw	-15
  9915  016B06  50E3               	movf	plusw1,w,c
  9916  016B08  5ADE               	subwfb	postinc2,f,c
  9917  016B0A  0EF2               	movlw	-14
  9918  016B0C  50E3               	movf	plusw1,w,c
  9919  016B0E  5ADE               	subwfb	postinc2,f,c
  9920  016B10  0EF3               	movlw	-13
  9921  016B12  50E3               	movf	plusw1,w,c
  9922  016B14  5ADE               	subwfb	postinc2,f,c
  9923  016B16  0EF4               	movlw	-12
  9924  016B18  50E3               	movf	plusw1,w,c
  9925  016B1A  5ADE               	subwfb	postinc2,f,c
  9926  016B1C  0EF5               	movlw	-11
  9927  016B1E  50E3               	movf	plusw1,w,c
  9928  016B20  5ADE               	subwfb	postinc2,f,c
  9929  016B22  0EF6               	movlw	-10
  9930  016B24  50E3               	movf	plusw1,w,c
  9931  016B26  5ADE               	subwfb	postinc2,f,c
  9932  016B28                     l7091:
  9933                           
  9934                           ;stkvar	_divisor @ sp[(-1)+-16]
  9935  016B28  90D8               	bcf	status,0,c
  9936  016B2A  0EF6               	movlw	-10
  9937  016B2C  32E3               	rrcf	plusw1,f,c
  9938  016B2E  0EF5               	movlw	-11
  9939  016B30  32E3               	rrcf	plusw1,f,c
  9940  016B32  0EF4               	movlw	-12
  9941  016B34  32E3               	rrcf	plusw1,f,c
  9942  016B36  0EF3               	movlw	-13
  9943  016B38  32E3               	rrcf	plusw1,f,c
  9944  016B3A  0EF2               	movlw	-14
  9945  016B3C  32E3               	rrcf	plusw1,f,c
  9946  016B3E  0EF1               	movlw	-15
  9947  016B40  32E3               	rrcf	plusw1,f,c
  9948  016B42  0EF0               	movlw	-16
  9949  016B44  32E3               	rrcf	plusw1,f,c
  9950  016B46  0EEF               	movlw	-17
  9951  016B48  32E3               	rrcf	plusw1,f,c
  9952                           
  9953                           ;stkvar	_counter @ sp[(-1)+0]
  9954  016B4A  0EFF               	movlw	-1
  9955  016B4C  50E3               	movf	plusw1,w,c
  9956  016B4E  6E35               	movwf	btemp^0,c
  9957  016B50  0E01               	movlw	1
  9958  016B52  5E35               	subwf	btemp^0,f,c
  9959  016B54  0EFF               	movlw	-1
  9960  016B56  0060  F0D7  FFE3   	movff	btemp,plusw1
  9961  016B5C  A4D8               	btfss	status,2,c
  9962  016B5E  D7A4               	goto	u6510
  9963  016B60                     u6530:
  9964                           
  9965                           ;stkvar	_dividend @ sp[(-1)+-8]
  9966  016B60  0EF7               	movlw	247
  9967  016B62  24E1               	addwf	fsr1l,w,c
  9968  016B64  6ED9               	movwf	fsr2l,c
  9969  016B66  0EFF               	movlw	255
  9970  016B68  20E2               	addwfc	fsr1h,w,c
  9971  016B6A  6EDA               	movwf	fsr2h,c
  9972                           
  9973                           ;stkvar	?___lomod @ sp[(-1)+-8]
  9974  016B6C  0E08               	movlw	8
  9975  016B6E  6E35               	movwf	btemp^0,c
  9976  016B70  0EF7               	movlw	-9
  9977  016B72                     us654999:
  9978  016B72  006F FF7B FFE3     	movff	postinc2,plusw1
  9979  016B78  28E8               	incf	wreg,w,c
  9980  016B7A  2E35               	decfsz	btemp^0,f,c
  9981  016B7C  D7FA               	bra	us654999
  9982                           
  9983                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9984  016B7E  52E5               	movf	postdec1,f,c
  9985  016B80  0012               	return		;funcret
  9986  016B82                     __end_of___lomod:
  9987                           	opt callstack 0
  9988                           
  9989 ;; *************** function ___lodiv *****************
  9990 ;; Defined at:
  9991 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  dividend        8  [STACK] unsigned long long 
  9994 ;;  divisor         8  [STACK] unsigned long long 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;  quotient        8  [STACK] unsigned long long 
  9997 ;;  counter         1  [STACK] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  8  [STACK] unsigned long long 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/2
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10011 ;;Total ram usage:        0 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    6
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_utoa
 10018 ;; This function uses a reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text41
 10022  0164A0                     __ptext41:
 10023                           	opt callstack 0
 10024  0164A0                     ___lodiv:
 10025                           	opt callstack 0
 10026                           
 10027                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10028  0164A0  0E09               	movlw	9
 10029  0164A2  26E1               	addwf	fsr1l,f,c
 10030  0164A4  0E00               	movlw	0
 10031  0164A6  22E2               	addwfc	fsr1h,f,c
 10032                           
 10033                           ;stkvar	_quotient @ sp[(-9)+0]
 10034                           
 10035                           ;incstack = 0
 10036  0164A8  0E07               	movlw	7
 10037  0164AA  6E35               	movwf	btemp^0,c
 10038  0164AC  0EF7               	movlw	-9
 10039  0164AE                     u6441:
 10040  0164AE  6AE3               	clrf	plusw1,c
 10041  0164B0  2AE8               	incf	wreg,f,c
 10042  0164B2  0635               	decf	btemp^0,f,c
 10043  0164B4  E2FC               	bc	u6441
 10044                           
 10045                           ;stkvar	_divisor @ sp[(-9)+-16]
 10046  0164B6  0EE7               	movlw	-25
 10047  0164B8  50E3               	movf	plusw1,w,c
 10048  0164BA  E116               	bnz	u6450
 10049  0164BC  0EE8               	movlw	-24
 10050  0164BE  50E3               	movf	plusw1,w,c
 10051  0164C0  E113               	bnz	u6450
 10052  0164C2  0EE9               	movlw	-23
 10053  0164C4  50E3               	movf	plusw1,w,c
 10054  0164C6  E110               	bnz	u6450
 10055  0164C8  0EEA               	movlw	-22
 10056  0164CA  50E3               	movf	plusw1,w,c
 10057  0164CC  E10D               	bnz	u6450
 10058  0164CE  0EEB               	movlw	-21
 10059  0164D0  50E3               	movf	plusw1,w,c
 10060  0164D2  E10A               	bnz	u6450
 10061  0164D4  0EEC               	movlw	-20
 10062  0164D6  50E3               	movf	plusw1,w,c
 10063  0164D8  E107               	bnz	u6450
 10064  0164DA  0EED               	movlw	-19
 10065  0164DC  50E3               	movf	plusw1,w,c
 10066  0164DE  E104               	bnz	u6450
 10067  0164E0  0EEE               	movlw	-18
 10068  0164E2  50E3               	movf	plusw1,w,c
 10069  0164E4  B4D8               	btfsc	status,2,c
 10070  0164E6  D088               	goto	u6480
 10071  0164E8                     u6450:
 10072                           
 10073                           ;stkvar	_counter @ sp[(-9)+8]
 10074  0164E8  0EFF               	movlw	-1
 10075  0164EA  6AE3               	clrf	plusw1,c
 10076  0164EC  D012               	goto	L10
 10077  0164EE                     l7059:
 10078                           
 10079                           ;stkvar	_divisor @ sp[(-9)+-16]
 10080  0164EE  90D8               	bcf	status,0,c
 10081  0164F0  0EE7               	movlw	-25
 10082  0164F2  36E3               	rlcf	plusw1,f,c
 10083  0164F4  0EE8               	movlw	-24
 10084  0164F6  36E3               	rlcf	plusw1,f,c
 10085  0164F8  0EE9               	movlw	-23
 10086  0164FA  36E3               	rlcf	plusw1,f,c
 10087  0164FC  0EEA               	movlw	-22
 10088  0164FE  36E3               	rlcf	plusw1,f,c
 10089  016500  0EEB               	movlw	-21
 10090  016502  36E3               	rlcf	plusw1,f,c
 10091  016504  0EEC               	movlw	-20
 10092  016506  36E3               	rlcf	plusw1,f,c
 10093  016508  0EED               	movlw	-19
 10094  01650A  36E3               	rlcf	plusw1,f,c
 10095  01650C  0EEE               	movlw	-18
 10096  01650E  36E3               	rlcf	plusw1,f,c
 10097                           
 10098                           ;stkvar	_counter @ sp[(-9)+8]
 10099  016510  0EFF               	movlw	-1
 10100  016512                     L10:
 10101  016512  2AE3               	incf	plusw1,f,c
 10102                           
 10103                           ;stkvar	_divisor @ sp[(-9)+-16]
 10104  016514  0EEE               	movlw	-18
 10105  016516  AEE3               	btfss	plusw1,7,c
 10106  016518  D7EA               	goto	l7059
 10107  01651A                     u6460:
 10108                           
 10109                           ;stkvar	_quotient @ sp[(-9)+0]
 10110  01651A  90D8               	bcf	status,0,c
 10111  01651C  0EF7               	movlw	-9
 10112  01651E  36E3               	rlcf	plusw1,f,c
 10113  016520  0EF8               	movlw	-8
 10114  016522  36E3               	rlcf	plusw1,f,c
 10115  016524  0EF9               	movlw	-7
 10116  016526  36E3               	rlcf	plusw1,f,c
 10117  016528  0EFA               	movlw	-6
 10118  01652A  36E3               	rlcf	plusw1,f,c
 10119  01652C  0EFB               	movlw	-5
 10120  01652E  36E3               	rlcf	plusw1,f,c
 10121  016530  0EFC               	movlw	-4
 10122  016532  36E3               	rlcf	plusw1,f,c
 10123  016534  0EFD               	movlw	-3
 10124  016536  36E3               	rlcf	plusw1,f,c
 10125  016538  0EFE               	movlw	-2
 10126  01653A  36E3               	rlcf	plusw1,f,c
 10127                           
 10128                           ;stkvar	_divisor @ sp[(-9)+-16]
 10129                           ;stkvar	_dividend @ sp[(-9)+-8]
 10130  01653C  50E1               	movf	fsr1l,w,c
 10131  01653E  0FEF               	addlw	-17
 10132  016540  6ED9               	movwf	fsr2l,c
 10133  016542  50E2               	movf	fsr1h,w,c
 10134  016544  6EDA               	movwf	fsr2h,c
 10135  016546  0EFF               	movlw	255
 10136  016548  22DA               	addwfc	fsr2h,f,c
 10137  01654A  0EE7               	movlw	-25
 10138  01654C  50E3               	movf	plusw1,w,c
 10139  01654E  5CDE               	subwf	postinc2,w,c
 10140  016550  0EE8               	movlw	-24
 10141  016552  50E3               	movf	plusw1,w,c
 10142  016554  58DE               	subwfb	postinc2,w,c
 10143  016556  0EE9               	movlw	-23
 10144  016558  50E3               	movf	plusw1,w,c
 10145  01655A  58DE               	subwfb	postinc2,w,c
 10146  01655C  0EEA               	movlw	-22
 10147  01655E  50E3               	movf	plusw1,w,c
 10148  016560  58DE               	subwfb	postinc2,w,c
 10149  016562  0EEB               	movlw	-21
 10150  016564  50E3               	movf	plusw1,w,c
 10151  016566  58DE               	subwfb	postinc2,w,c
 10152  016568  0EEC               	movlw	-20
 10153  01656A  50E3               	movf	plusw1,w,c
 10154  01656C  58DE               	subwfb	postinc2,w,c
 10155  01656E  0EED               	movlw	-19
 10156  016570  50E3               	movf	plusw1,w,c
 10157  016572  58DE               	subwfb	postinc2,w,c
 10158  016574  0EEE               	movlw	-18
 10159  016576  50E3               	movf	plusw1,w,c
 10160  016578  58DE               	subwfb	postinc2,w,c
 10161  01657A  A0D8               	btfss	status,0,c
 10162  01657C  D021               	goto	l7071
 10163                           
 10164                           ;stkvar	_divisor @ sp[(-9)+-16]
 10165                           ;stkvar	_dividend @ sp[(-9)+-8]
 10166  01657E  50E1               	movf	fsr1l,w,c
 10167  016580  0FEF               	addlw	-17
 10168  016582  6ED9               	movwf	fsr2l,c
 10169  016584  50E2               	movf	fsr1h,w,c
 10170  016586  6EDA               	movwf	fsr2h,c
 10171  016588  0EFF               	movlw	255
 10172  01658A  22DA               	addwfc	fsr2h,f,c
 10173  01658C  0EE7               	movlw	-25
 10174  01658E  50E3               	movf	plusw1,w,c
 10175  016590  5EDE               	subwf	postinc2,f,c
 10176  016592  0EE8               	movlw	-24
 10177  016594  50E3               	movf	plusw1,w,c
 10178  016596  5ADE               	subwfb	postinc2,f,c
 10179  016598  0EE9               	movlw	-23
 10180  01659A  50E3               	movf	plusw1,w,c
 10181  01659C  5ADE               	subwfb	postinc2,f,c
 10182  01659E  0EEA               	movlw	-22
 10183  0165A0  50E3               	movf	plusw1,w,c
 10184  0165A2  5ADE               	subwfb	postinc2,f,c
 10185  0165A4  0EEB               	movlw	-21
 10186  0165A6  50E3               	movf	plusw1,w,c
 10187  0165A8  5ADE               	subwfb	postinc2,f,c
 10188  0165AA  0EEC               	movlw	-20
 10189  0165AC  50E3               	movf	plusw1,w,c
 10190  0165AE  5ADE               	subwfb	postinc2,f,c
 10191  0165B0  0EED               	movlw	-19
 10192  0165B2  50E3               	movf	plusw1,w,c
 10193  0165B4  5ADE               	subwfb	postinc2,f,c
 10194  0165B6  0EEE               	movlw	-18
 10195  0165B8  50E3               	movf	plusw1,w,c
 10196  0165BA  5ADE               	subwfb	postinc2,f,c
 10197                           
 10198                           ;stkvar	_quotient @ sp[(-9)+0]
 10199  0165BC  0EF7               	movlw	-9
 10200  0165BE  80E3               	bsf	plusw1,0,c
 10201  0165C0                     l7071:
 10202                           
 10203                           ;stkvar	_divisor @ sp[(-9)+-16]
 10204  0165C0  90D8               	bcf	status,0,c
 10205  0165C2  0EEE               	movlw	-18
 10206  0165C4  32E3               	rrcf	plusw1,f,c
 10207  0165C6  0EED               	movlw	-19
 10208  0165C8  32E3               	rrcf	plusw1,f,c
 10209  0165CA  0EEC               	movlw	-20
 10210  0165CC  32E3               	rrcf	plusw1,f,c
 10211  0165CE  0EEB               	movlw	-21
 10212  0165D0  32E3               	rrcf	plusw1,f,c
 10213  0165D2  0EEA               	movlw	-22
 10214  0165D4  32E3               	rrcf	plusw1,f,c
 10215  0165D6  0EE9               	movlw	-23
 10216  0165D8  32E3               	rrcf	plusw1,f,c
 10217  0165DA  0EE8               	movlw	-24
 10218  0165DC  32E3               	rrcf	plusw1,f,c
 10219  0165DE  0EE7               	movlw	-25
 10220  0165E0  32E3               	rrcf	plusw1,f,c
 10221                           
 10222                           ;stkvar	_counter @ sp[(-9)+8]
 10223  0165E2  0EFF               	movlw	-1
 10224  0165E4  50E3               	movf	plusw1,w,c
 10225  0165E6  6E35               	movwf	btemp^0,c
 10226  0165E8  0E01               	movlw	1
 10227  0165EA  5E35               	subwf	btemp^0,f,c
 10228  0165EC  0EFF               	movlw	-1
 10229  0165EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10230  0165F4  A4D8               	btfss	status,2,c
 10231  0165F6  D791               	goto	u6460
 10232  0165F8                     u6480:
 10233                           
 10234                           ;stkvar	_quotient @ sp[(-9)+0]
 10235  0165F8  0EF7               	movlw	247
 10236  0165FA  24E1               	addwf	fsr1l,w,c
 10237  0165FC  6ED9               	movwf	fsr2l,c
 10238  0165FE  0EFF               	movlw	255
 10239  016600  20E2               	addwfc	fsr1h,w,c
 10240  016602  6EDA               	movwf	fsr2h,c
 10241                           
 10242                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10243  016604  0E08               	movlw	8
 10244  016606  6E35               	movwf	btemp^0,c
 10245  016608  0EEF               	movlw	-17
 10246  01660A                     us649999:
 10247  01660A  006F FF7B FFE3     	movff	postinc2,plusw1
 10248  016610  28E8               	incf	wreg,w,c
 10249  016612  2E35               	decfsz	btemp^0,f,c
 10250  016614  D7FA               	bra	us649999
 10251                           
 10252                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10253  016616  0EF7               	movlw	247
 10254  016618  26E1               	addwf	fsr1l,f,c
 10255  01661A  0EFF               	movlw	255
 10256  01661C  22E2               	addwfc	fsr1h,f,c
 10257  01661E  0012               	return		;funcret
 10258  016620                     __end_of___lodiv:
 10259                           	opt callstack 0
 10260                           
 10261 ;; *************** function _strncmp *****************
 10262 ;; Defined at:
 10263 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;  _l              2  [STACK] PTR const unsigned char 
 10266 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10267 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10268 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10269 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10270 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10271 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10272 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10273 ;;		 -> STR_1(17), 
 10274 ;;  _r              2  [STACK] PTR const unsigned char 
 10275 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10276 ;;		 -> STR_48(3), STR_44(3), 
 10277 ;;  n               2  [STACK] unsigned int 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  r               2  [STACK] PTR const unsigned char 
 10280 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10281 ;;		 -> STR_48(3), STR_44(3), 
 10282 ;;  l               2  [STACK] PTR const unsigned char 
 10283 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10284 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10285 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10286 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10287 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10288 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10289 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10290 ;;		 -> STR_1(17), 
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  2  [STACK] int 
 10293 ;; Registers used:
 10294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/4
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10304 ;;Total ram usage:        0 bytes
 10305 ;; Hardware stack levels used:    1
 10306 ;; Hardware stack levels required when called:    6
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_vfpfcnvrt
 10311 ;; This function uses a reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text42
 10315  015B14                     __ptext42:
 10316                           	opt callstack 0
 10317  015B14                     _strncmp:
 10318                           	opt callstack 0
 10319                           
 10320                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10321  015B14  52E6               	movf	postinc1,f,c
 10322  015B16  52E6               	movf	postinc1,f,c
 10323  015B18  52E6               	movf	postinc1,f,c
 10324  015B1A  52E6               	movf	postinc1,f,c
 10325                           
 10326                           ;stkvar	__l @ sp[(-4)+-2]
 10327                           
 10328                           ;incstack = 0
 10329  015B1C  0EFA               	movlw	-6
 10330  015B1E  006F FF8C  F03F    	movff	plusw1,btemp+10
 10331  015B24  0EFB               	movlw	-5
 10332  015B26  006F FF8C  F040    	movff	plusw1,btemp+11
 10333                           
 10334                           ;stkvar	_l @ sp[(-4)+2]
 10335  015B2C  0EFF               	movlw	-1
 10336  015B2E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10337  015B34  0EFE               	movlw	-2
 10338  015B36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10339                           
 10340                           ;stkvar	__r @ sp[(-4)+-4]
 10341  015B3C  0EF8               	movlw	-8
 10342  015B3E  006F FF8C  F03F    	movff	plusw1,btemp+10
 10343  015B44  0EF9               	movlw	-7
 10344  015B46  006F FF8C  F040    	movff	plusw1,btemp+11
 10345                           
 10346                           ;stkvar	_r @ sp[(-4)+0]
 10347  015B4C  0EFD               	movlw	-3
 10348  015B4E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10349  015B54  0EFC               	movlw	-4
 10350  015B56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10351                           
 10352                           ;stkvar	_n @ sp[(-4)+-6]
 10353  015B5C  0EF6               	movlw	-10
 10354  015B5E  006F FF8C  F035    	movff	plusw1,btemp
 10355  015B64  0E01               	movlw	1
 10356  015B66  5E35               	subwf	btemp^0,f,c
 10357  015B68  0EF6               	movlw	-10
 10358  015B6A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10359  015B70  0EF7               	movlw	-9
 10360  015B72  006F FF8C  F035    	movff	plusw1,btemp
 10361  015B78  0E00               	movlw	0
 10362  015B7A  5A35               	subwfb	btemp^0,f,c
 10363  015B7C  0EF7               	movlw	-9
 10364  015B7E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10365  015B84  0EF6               	movlw	-10
 10366  015B86  28E3               	incf	plusw1,w,c
 10367  015B88  E13F               	bnz	l7715
 10368  015B8A  0EF7               	movlw	-9
 10369  015B8C  28E3               	incf	plusw1,w,c
 10370  015B8E  A4D8               	btfss	status,2,c
 10371  015B90  D03B               	goto	l7715
 10372  015B92  0E00               	movlw	0
 10373  015B94  6E35               	movwf	btemp^0,c
 10374  015B96  0E00               	movlw	0
 10375  015B98  6E36               	movwf	(btemp+1)^0,c
 10376  015B9A  D0C7               	goto	l2838
 10377  015B9C                     l7713:
 10378                           
 10379                           ;stkvar	_l @ sp[(-4)+2]
 10380  015B9C  0EFE               	movlw	-2
 10381  015B9E  50E3               	movf	plusw1,w,c
 10382  015BA0  0F01               	addlw	1
 10383  015BA2  6E35               	movwf	btemp^0,c
 10384  015BA4  0EFE               	movlw	-2
 10385  015BA6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10386  015BAC  6A35               	clrf	btemp^0,c
 10387  015BAE  0EFF               	movlw	-1
 10388  015BB0  50E3               	movf	plusw1,w,c
 10389  015BB2  2035               	addwfc	btemp^0,w,c
 10390  015BB4  6E35               	movwf	btemp^0,c
 10391  015BB6  0EFF               	movlw	-1
 10392  015BB8  0060  F0D7  FFE3   	movff	btemp,plusw1
 10393                           
 10394                           ;stkvar	_r @ sp[(-4)+0]
 10395  015BBE  0EFC               	movlw	-4
 10396  015BC0  50E3               	movf	plusw1,w,c
 10397  015BC2  0F01               	addlw	1
 10398  015BC4  6E35               	movwf	btemp^0,c
 10399  015BC6  0EFC               	movlw	-4
 10400  015BC8  0060  F0D7  FFE3   	movff	btemp,plusw1
 10401  015BCE  6A35               	clrf	btemp^0,c
 10402  015BD0  0EFD               	movlw	-3
 10403  015BD2  50E3               	movf	plusw1,w,c
 10404  015BD4  2035               	addwfc	btemp^0,w,c
 10405  015BD6  6E35               	movwf	btemp^0,c
 10406  015BD8  0EFD               	movlw	-3
 10407  015BDA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10408                           
 10409                           ;stkvar	_n @ sp[(-4)+-6]
 10410  015BE0  0EF6               	movlw	-10
 10411  015BE2  006F FF8C  F035    	movff	plusw1,btemp
 10412  015BE8  0E01               	movlw	1
 10413  015BEA  5E35               	subwf	btemp^0,f,c
 10414  015BEC  0EF6               	movlw	-10
 10415  015BEE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10416  015BF4  0EF7               	movlw	-9
 10417  015BF6  006F FF8C  F035    	movff	plusw1,btemp
 10418  015BFC  0E00               	movlw	0
 10419  015BFE  5A35               	subwfb	btemp^0,f,c
 10420  015C00  0EF7               	movlw	-9
 10421  015C02  0060  F0D7  FFE3   	movff	btemp,plusw1
 10422  015C08                     l7715:
 10423                           
 10424                           ;stkvar	_l @ sp[(-4)+2]
 10425  015C08  0EFE               	movlw	-2
 10426  015C0A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10427  015C10  0EFF               	movlw	-1
 10428  015C12  006F FF8F FFF7     	movff	plusw1,tblptrh
 10429  015C18  0E00               	movlw	low (__mediumconst shr (0+16))
 10430  015C1A  6EF8               	movwf	tblptru,c
 10431  015C1C  0E1F               	movlw	(high __ramtop+-1)
 10432  015C1E  64F7               	cpfsgt	tblptrh,c
 10433  015C20  D003               	bra	u7717
 10434  015C22  0008               	tblrd		*
 10435  015C24  50F5               	movf	tablat,w,c
 10436  015C26  D007               	bra	u7710
 10437  015C28                     u7717:
 10438  015C28  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10439  015C2E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10440  015C34  50EF               	movf	indf0,w,c
 10441  015C36                     u7710:
 10442  015C36  0900               	iorlw	0
 10443  015C38  B4D8               	btfsc	status,2,c
 10444  015C3A  D04A               	goto	u7750
 10445                           
 10446                           ;stkvar	_r @ sp[(-4)+0]
 10447  015C3C  50E1               	movf	fsr1l,w,c
 10448  015C3E  0FFC               	addlw	-4
 10449  015C40  6ED9               	movwf	fsr2l,c
 10450  015C42  50E2               	movf	fsr1h,w,c
 10451  015C44  6EDA               	movwf	fsr2h,c
 10452  015C46  0EFF               	movlw	255
 10453  015C48  22DA               	addwfc	fsr2h,f,c
 10454  015C4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10455  015C50  006F FF77 FFF7     	movff	postdec2,tblptrh
 10456  015C56                     	if	0	;tblptru may be non-zero
 10457  015C56                     	endif
 10458  015C56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10459  015C56  0E00               	movlw	low (__mediumconst shr (0+16))
 10460  015C58  6EF8               	movwf	tblptru,c
 10461  015C5A                     	endif
 10462  015C5A  0008               	tblrd		*
 10463  015C5C  50F5               	movf	tablat,w,c
 10464  015C5E  0900               	iorlw	0
 10465  015C60  B4D8               	btfsc	status,2,c
 10466  015C62  D036               	goto	u7750
 10467                           
 10468                           ;stkvar	_n @ sp[(-4)+-6]
 10469  015C64  0EF6               	movlw	-10
 10470  015C66  006F FF8C  F035    	movff	plusw1,btemp
 10471  015C6C  0EF7               	movlw	-9
 10472  015C6E  50E3               	movf	plusw1,w,c
 10473  015C70  1035               	iorwf	btemp^0,w,c
 10474  015C72  B4D8               	btfsc	status,2,c
 10475  015C74  D02D               	goto	u7750
 10476                           
 10477                           ;stkvar	_r @ sp[(-4)+0]
 10478  015C76  50E1               	movf	fsr1l,w,c
 10479  015C78  0FFC               	addlw	-4
 10480  015C7A  6ED9               	movwf	fsr2l,c
 10481  015C7C  50E2               	movf	fsr1h,w,c
 10482  015C7E  6EDA               	movwf	fsr2h,c
 10483  015C80  0EFF               	movlw	255
 10484  015C82  22DA               	addwfc	fsr2h,f,c
 10485  015C84  006F FF7B FFF6     	movff	postinc2,tblptrl
 10486  015C8A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10487  015C90                     	if	0	;tblptru may be non-zero
 10488  015C90                     	endif
 10489  015C90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10490  015C90  0E00               	movlw	low (__mediumconst shr (0+16))
 10491  015C92  6EF8               	movwf	tblptru,c
 10492  015C94                     	endif
 10493  015C94  0008               	tblrd		*
 10494  015C96  006F FFD4  F040    	movff	tablat,btemp+11
 10495                           
 10496                           ;stkvar	_l @ sp[(-4)+2]
 10497  015C9C  0EFE               	movlw	-2
 10498  015C9E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10499  015CA4  0EFF               	movlw	-1
 10500  015CA6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10501  015CAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10502  015CAE  6EF8               	movwf	tblptru,c
 10503  015CB0  0E1F               	movlw	(high __ramtop+-1)
 10504  015CB2  64F7               	cpfsgt	tblptrh,c
 10505  015CB4  D003               	bra	u7757
 10506  015CB6  0008               	tblrd		*
 10507  015CB8  50F5               	movf	tablat,w,c
 10508  015CBA  D007               	bra	u7755
 10509  015CBC                     u7757:
 10510  015CBC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10511  015CC2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10512  015CC8  50EF               	movf	indf0,w,c
 10513  015CCA                     u7755:
 10514  015CCA  1840               	xorwf	(btemp+11)^0,w,c
 10515  015CCC  B4D8               	btfsc	status,2,c
 10516  015CCE  D766               	goto	l7713
 10517  015CD0                     u7750:
 10518                           
 10519                           ;stkvar	_l @ sp[(-4)+2]
 10520  015CD0  0EFE               	movlw	-2
 10521  015CD2  006F FF8F FFF6     	movff	plusw1,tblptrl
 10522  015CD8  0EFF               	movlw	-1
 10523  015CDA  006F FF8F FFF7     	movff	plusw1,tblptrh
 10524  015CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 10525  015CE2  6EF8               	movwf	tblptru,c
 10526  015CE4  0E1F               	movlw	(high __ramtop+-1)
 10527  015CE6  64F7               	cpfsgt	tblptrh,c
 10528  015CE8  D003               	bra	u7767
 10529  015CEA  0008               	tblrd		*
 10530  015CEC  50F5               	movf	tablat,w,c
 10531  015CEE  D007               	bra	u7760
 10532  015CF0                     u7767:
 10533  015CF0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10534  015CF6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10535  015CFC  50EF               	movf	indf0,w,c
 10536  015CFE                     u7760:
 10537  015CFE  6E35               	movwf	btemp^0,c
 10538  015D00  6A36               	clrf	(btemp+1)^0,c
 10539                           
 10540                           ;stkvar	_r @ sp[(-4)+0]
 10541  015D02  50E1               	movf	fsr1l,w,c
 10542  015D04  0FFC               	addlw	-4
 10543  015D06  6ED9               	movwf	fsr2l,c
 10544  015D08  50E2               	movf	fsr1h,w,c
 10545  015D0A  6EDA               	movwf	fsr2h,c
 10546  015D0C  0EFF               	movlw	255
 10547  015D0E  22DA               	addwfc	fsr2h,f,c
 10548  015D10  006F FF7B FFF6     	movff	postinc2,tblptrl
 10549  015D16  006F FF77 FFF7     	movff	postdec2,tblptrh
 10550  015D1C                     	if	0	;tblptru may be non-zero
 10551  015D1C                     	endif
 10552  015D1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10553  015D1C  0E00               	movlw	low (__mediumconst shr (0+16))
 10554  015D1E  6EF8               	movwf	tblptru,c
 10555  015D20                     	endif
 10556  015D20  0008               	tblrd		*
 10557  015D22  50F5               	movf	tablat,w,c
 10558  015D24  5E35               	subwf	btemp^0,f,c
 10559  015D26  0E00               	movlw	0
 10560  015D28  5A36               	subwfb	(btemp+1)^0,f,c
 10561  015D2A                     l2838:
 10562                           
 10563                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10564  015D2A  0EF6               	movlw	246
 10565  015D2C  26E1               	addwf	fsr1l,f,c
 10566  015D2E  0EFF               	movlw	255
 10567  015D30  22E2               	addwfc	fsr1h,f,c
 10568  015D32  0012               	return		;funcret
 10569  015D34                     __end_of_strncmp:
 10570                           	opt callstack 0
 10571                           
 10572 ;; *************** function _stoa *****************
 10573 ;; Defined at:
 10574 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10577 ;;		 -> f(6), NULL(0), 
 10578 ;;  s               2  [STACK] PTR unsigned char 
 10579 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10580 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10581 ;;		 -> STR_3(5), V(187), 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;  nuls            7  [STACK] unsigned char [7]
 10584 ;;  l               2  [STACK] int 
 10585 ;;  p               2  [STACK] int 
 10586 ;;  cp              2  [STACK] PTR unsigned char 
 10587 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10588 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10589 ;;		 -> STR_7(5), STR_3(5), V(187), 
 10590 ;;  w               2  [STACK] int 
 10591 ;;  i               2  [STACK] int 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  2  [STACK] int 
 10594 ;; Registers used:
 10595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/4
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; Hardware stack levels required when called:    9
 10608 ;; This function calls:
 10609 ;;		_fputc
 10610 ;;		_strlen
 10611 ;; This function is called by:
 10612 ;;		_vfpfcnvrt
 10613 ;; This function uses a reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text43
 10617  015122                     __ptext43:
 10618                           	opt callstack 0
 10619  015122                     _stoa:
 10620                           	opt callstack 0
 10621                           
 10622                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10623  015122  0E11               	movlw	17
 10624  015124  26E1               	addwf	fsr1l,f,c
 10625  015126  0E00               	movlw	0
 10626  015128  22E2               	addwfc	fsr1h,f,c
 10627                           
 10628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10629                           
 10630                           ;incstack = 0
 10631  01512A  EE20  F0CF         	lfsr	2,stoa@F1166
 10632                           
 10633                           ;stkvar	_nuls @ sp[(-17)+0]
 10634  01512E  0E07               	movlw	7
 10635  015130  6E35               	movwf	btemp^0,c
 10636  015132  0EEF               	movlw	-17
 10637  015134                     us982999:
 10638  015134  006F FF7B FFE3     	movff	postinc2,plusw1
 10639  01513A  28E8               	incf	wreg,w,c
 10640  01513C  2E35               	decfsz	btemp^0,f,c
 10641  01513E  D7FA               	bra	us982999
 10642                           
 10643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10644                           ;stkvar	_s @ sp[(-17)+-4]
 10645  015140  0EEB               	movlw	-21
 10646  015142  006F FF8C  F03F    	movff	plusw1,btemp+10
 10647  015148  0EEC               	movlw	-20
 10648  01514A  006F FF8C  F040    	movff	plusw1,btemp+11
 10649                           
 10650                           ;stkvar	_cp @ sp[(-17)+11]
 10651  015150  0EFB               	movlw	-5
 10652  015152  0060  F103  FFE3   	movff	btemp+11,plusw1
 10653  015158  0EFA               	movlw	-6
 10654  01515A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10655                           
 10656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10657                           ;stkvar	_cp @ sp[(-17)+11]
 10658  015160  0EFA               	movlw	-6
 10659  015162  006F FF8C  F035    	movff	plusw1,btemp
 10660  015168  0EFB               	movlw	-5
 10661  01516A  50E3               	movf	plusw1,w,c
 10662  01516C  1035               	iorwf	btemp^0,w,c
 10663  01516E  A4D8               	btfss	status,2,c
 10664  015170  D00E               	goto	l9675
 10665                           
 10666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10667                           ;stkvar	_nuls @ sp[(-17)+0]
 10668  015172  0EEF               	movlw	239
 10669  015174  24E1               	addwf	fsr1l,w,c
 10670  015176  6E3F               	movwf	(btemp+10)^0,c
 10671  015178  0EFF               	movlw	255
 10672  01517A  20E2               	addwfc	fsr1h,w,c
 10673  01517C  6E40               	movwf	(btemp+11)^0,c
 10674                           
 10675                           ;stkvar	_cp @ sp[(-17)+11]
 10676  01517E  0EFB               	movlw	-5
 10677  015180  0060  F103  FFE3   	movff	btemp+11,plusw1
 10678  015186  0EFA               	movlw	-6
 10679  015188  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10680  01518E                     l9675:
 10681                           
 10682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10683                           ;stkvar	_cp @ sp[(-17)+11]
 10684  01518E  0EFA               	movlw	-6
 10685  015190  006F FF8F FFE6     	movff	plusw1,postinc1
 10686  015196  006F FF8F FFE6     	movff	plusw1,postinc1
 10687  01519C  EC0A  F0BC         	call	_strlen	;wreg free
 10688                           
 10689                           ;stkvar	_l @ sp[(-17)+7]
 10690  0151A0  0EF6               	movlw	-10
 10691  0151A2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10692  0151A8  0EF7               	movlw	-9
 10693  0151AA  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10694                           
 10695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10696                           ;stkvar	_p @ sp[(-17)+9]
 10697  0151B0  0EF8               	movlw	-8
 10698  0151B2  0060  F083  FFE3   	movff	_prec,plusw1
 10699  0151B8  0EF9               	movlw	-7
 10700  0151BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 10701                           
 10702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10703                           ;stkvar	_p @ sp[(-17)+9]
 10704  0151C0  0EF9               	movlw	-7
 10705  0151C2  BEE3               	btfsc	plusw1,7,c
 10706  0151C4  D023               	goto	l1889
 10707                           
 10708                           ;stkvar	_l @ sp[(-17)+7]
 10709                           ;stkvar	_p @ sp[(-17)+9]
 10710  0151C6  50E1               	movf	fsr1l,w,c
 10711  0151C8  0FF8               	addlw	-8
 10712  0151CA  6ED9               	movwf	fsr2l,c
 10713  0151CC  50E2               	movf	fsr1h,w,c
 10714  0151CE  6EDA               	movwf	fsr2h,c
 10715  0151D0  0EFF               	movlw	255
 10716  0151D2  22DA               	addwfc	fsr2h,f,c
 10717  0151D4  0EF6               	movlw	-10
 10718  0151D6  50E3               	movf	plusw1,w,c
 10719  0151D8  5CDE               	subwf	postinc2,w,c
 10720  0151DA  50DE               	movf	postinc2,w,c
 10721  0151DC  0A80               	xorlw	128
 10722  0151DE  6E35               	movwf	btemp^0,c
 10723  0151E0  0EF7               	movlw	-9
 10724  0151E2  50E3               	movf	plusw1,w,c
 10725  0151E4  0A80               	xorlw	128
 10726  0151E6  5835               	subwfb	btemp^0,w,c
 10727  0151E8  B0D8               	btfsc	status,0,c
 10728  0151EA  D010               	goto	l1889
 10729                           
 10730                           ;stkvar	_p @ sp[(-17)+9]
 10731                           ;stkvar	_l @ sp[(-17)+7]
 10732  0151EC  0EF8               	movlw	-8
 10733  0151EE  006F FF8C  F035    	movff	plusw1,btemp
 10734  0151F4  0EF6               	movlw	-10
 10735  0151F6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10736  0151FC  0EF9               	movlw	-7
 10737  0151FE  006F FF8C  F035    	movff	plusw1,btemp
 10738  015204  0EF7               	movlw	-9
 10739  015206  0060  F0D7  FFE3   	movff	btemp,plusw1
 10740  01520C                     l1889:
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10743                           ;stkvar	_l @ sp[(-17)+7]
 10744                           ;stkvar	_p @ sp[(-17)+9]
 10745  01520C  0EF6               	movlw	-10
 10746  01520E  006F FF8C  F035    	movff	plusw1,btemp
 10747  015214  0EF8               	movlw	-8
 10748  015216  0060  F0D7  FFE3   	movff	btemp,plusw1
 10749  01521C  0EF7               	movlw	-9
 10750  01521E  006F FF8C  F035    	movff	plusw1,btemp
 10751  015224  0EF9               	movlw	-7
 10752  015226  0060  F0D7  FFE3   	movff	btemp,plusw1
 10753                           
 10754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10755                           ;stkvar	_w @ sp[(-17)+13]
 10756  01522C  0EFC               	movlw	-4
 10757  01522E  0060  F07B  FFE3   	movff	_width,plusw1
 10758  015234  0EFD               	movlw	-3
 10759  015236  0060  F07F  FFE3   	movff	_width+1,plusw1
 10760                           
 10761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10762  01523C  A022               	btfss	_flags^0,0,c
 10763  01523E  D01F               	goto	l9695
 10764  015240  D031               	goto	u9870
 10765  015242                     l9691:
 10766                           
 10767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10768                           ;stkvar	_fp @ sp[(-17)+-2]
 10769  015242  0EED               	movlw	-19
 10770  015244  006F FF8F FFE6     	movff	plusw1,postinc1
 10771  01524A  006F FF8F FFE6     	movff	plusw1,postinc1
 10772  015250  0E20               	movlw	32
 10773  015252  6EE6               	movwf	postinc1,c
 10774  015254  0E00               	movlw	0
 10775  015256  6EE6               	movwf	postinc1,c
 10776  015258  EC58  F0B6         	call	_fputc	;wreg free
 10777                           
 10778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10779                           ;stkvar	_l @ sp[(-17)+7]
 10780  01525C  0EF6               	movlw	-10
 10781  01525E  50E3               	movf	plusw1,w,c
 10782  015260  0F01               	addlw	1
 10783  015262  6E35               	movwf	btemp^0,c
 10784  015264  0EF6               	movlw	-10
 10785  015266  0060  F0D7  FFE3   	movff	btemp,plusw1
 10786  01526C  6A35               	clrf	btemp^0,c
 10787  01526E  0EF7               	movlw	-9
 10788  015270  50E3               	movf	plusw1,w,c
 10789  015272  2035               	addwfc	btemp^0,w,c
 10790  015274  6E35               	movwf	btemp^0,c
 10791  015276  0EF7               	movlw	-9
 10792  015278  0060  F0D7  FFE3   	movff	btemp,plusw1
 10793  01527E                     l9695:
 10794                           
 10795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10796                           ;stkvar	_w @ sp[(-17)+13]
 10797                           ;stkvar	_l @ sp[(-17)+7]
 10798  01527E  50E1               	movf	fsr1l,w,c
 10799  015280  0FF6               	addlw	-10
 10800  015282  6ED9               	movwf	fsr2l,c
 10801  015284  50E2               	movf	fsr1h,w,c
 10802  015286  6EDA               	movwf	fsr2h,c
 10803  015288  0EFF               	movlw	255
 10804  01528A  22DA               	addwfc	fsr2h,f,c
 10805  01528C  0EFC               	movlw	-4
 10806  01528E  50E3               	movf	plusw1,w,c
 10807  015290  5CDE               	subwf	postinc2,w,c
 10808  015292  50DE               	movf	postinc2,w,c
 10809  015294  0A80               	xorlw	128
 10810  015296  6E35               	movwf	btemp^0,c
 10811  015298  0EFD               	movlw	-3
 10812  01529A  50E3               	movf	plusw1,w,c
 10813  01529C  0A80               	xorlw	128
 10814  01529E  5835               	subwfb	btemp^0,w,c
 10815  0152A0  A0D8               	btfss	status,0,c
 10816  0152A2  D7CF               	goto	l9691
 10817  0152A4                     u9870:
 10818                           
 10819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10820                           ;stkvar	_i @ sp[(-17)+15]
 10821  0152A4  0EFE               	movlw	-2
 10822  0152A6  6AE3               	clrf	plusw1,c
 10823  0152A8  0EFF               	movlw	-1
 10824  0152AA  6AE3               	clrf	plusw1,c
 10825                           
 10826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10827  0152AC  D045               	goto	l9705
 10828  0152AE                     l9699:
 10829                           
 10830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10831                           ;stkvar	_fp @ sp[(-17)+-2]
 10832  0152AE  0EED               	movlw	-19
 10833  0152B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10834  0152B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10835                           
 10836                           ;stkvar	_cp @ sp[(-19)+11]
 10837  0152BC  0EF8               	movlw	-8
 10838  0152BE  006F FF8F FFF6     	movff	plusw1,tblptrl
 10839  0152C4  0EF9               	movlw	-7
 10840  0152C6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10841  0152CC  0E00               	movlw	low (__mediumconst shr (0+16))
 10842  0152CE  6EF8               	movwf	tblptru,c
 10843  0152D0  0E1F               	movlw	(high __ramtop+-1)
 10844  0152D2  64F7               	cpfsgt	tblptrh,c
 10845  0152D4  D003               	bra	u9887
 10846  0152D6  0008               	tblrd		*
 10847  0152D8  50F5               	movf	tablat,w,c
 10848  0152DA  D007               	bra	u9880
 10849  0152DC                     u9887:
 10850  0152DC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10851  0152E2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10852  0152E8  50EF               	movf	indf0,w,c
 10853  0152EA                     u9880:
 10854  0152EA  6EE6               	movwf	postinc1,c
 10855  0152EC  0E00               	movlw	0
 10856  0152EE  6EE6               	movwf	postinc1,c
 10857  0152F0  EC58  F0B6         	call	_fputc	;wreg free
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10860                           ;stkvar	_cp @ sp[(-17)+11]
 10861  0152F4  0EFA               	movlw	-6
 10862  0152F6  50E3               	movf	plusw1,w,c
 10863  0152F8  0F01               	addlw	1
 10864  0152FA  6E35               	movwf	btemp^0,c
 10865  0152FC  0EFA               	movlw	-6
 10866  0152FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10867  015304  6A35               	clrf	btemp^0,c
 10868  015306  0EFB               	movlw	-5
 10869  015308  50E3               	movf	plusw1,w,c
 10870  01530A  2035               	addwfc	btemp^0,w,c
 10871  01530C  6E35               	movwf	btemp^0,c
 10872  01530E  0EFB               	movlw	-5
 10873  015310  0060  F0D7  FFE3   	movff	btemp,plusw1
 10874                           
 10875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10876                           ;stkvar	_i @ sp[(-17)+15]
 10877  015316  0EFE               	movlw	-2
 10878  015318  50E3               	movf	plusw1,w,c
 10879  01531A  0F01               	addlw	1
 10880  01531C  6E35               	movwf	btemp^0,c
 10881  01531E  0EFE               	movlw	-2
 10882  015320  0060  F0D7  FFE3   	movff	btemp,plusw1
 10883  015326  6A35               	clrf	btemp^0,c
 10884  015328  0EFF               	movlw	-1
 10885  01532A  50E3               	movf	plusw1,w,c
 10886  01532C  2035               	addwfc	btemp^0,w,c
 10887  01532E  6E35               	movwf	btemp^0,c
 10888  015330  0EFF               	movlw	-1
 10889  015332  0060  F0D7  FFE3   	movff	btemp,plusw1
 10890  015338                     l9705:
 10891                           
 10892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10893                           ;stkvar	_p @ sp[(-17)+9]
 10894                           ;stkvar	_i @ sp[(-17)+15]
 10895  015338  50E1               	movf	fsr1l,w,c
 10896  01533A  0FFE               	addlw	-2
 10897  01533C  6ED9               	movwf	fsr2l,c
 10898  01533E  50E2               	movf	fsr1h,w,c
 10899  015340  6EDA               	movwf	fsr2h,c
 10900  015342  0EFF               	movlw	255
 10901  015344  22DA               	addwfc	fsr2h,f,c
 10902  015346  0EF8               	movlw	-8
 10903  015348  50E3               	movf	plusw1,w,c
 10904  01534A  5CDE               	subwf	postinc2,w,c
 10905  01534C  50DE               	movf	postinc2,w,c
 10906  01534E  0A80               	xorlw	128
 10907  015350  6E35               	movwf	btemp^0,c
 10908  015352  0EF9               	movlw	-7
 10909  015354  50E3               	movf	plusw1,w,c
 10910  015356  0A80               	xorlw	128
 10911  015358  5835               	subwfb	btemp^0,w,c
 10912  01535A  A0D8               	btfss	status,0,c
 10913  01535C  D7A8               	goto	l9699
 10914                           
 10915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10916  01535E  B022               	btfsc	_flags^0,0,c
 10917  015360  D01F               	goto	l9713
 10918  015362  D031               	goto	u9910
 10919  015364                     l9709:
 10920                           
 10921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10922                           ;stkvar	_fp @ sp[(-17)+-2]
 10923  015364  0EED               	movlw	-19
 10924  015366  006F FF8F FFE6     	movff	plusw1,postinc1
 10925  01536C  006F FF8F FFE6     	movff	plusw1,postinc1
 10926  015372  0E20               	movlw	32
 10927  015374  6EE6               	movwf	postinc1,c
 10928  015376  0E00               	movlw	0
 10929  015378  6EE6               	movwf	postinc1,c
 10930  01537A  EC58  F0B6         	call	_fputc	;wreg free
 10931                           
 10932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10933                           ;stkvar	_l @ sp[(-17)+7]
 10934  01537E  0EF6               	movlw	-10
 10935  015380  50E3               	movf	plusw1,w,c
 10936  015382  0F01               	addlw	1
 10937  015384  6E35               	movwf	btemp^0,c
 10938  015386  0EF6               	movlw	-10
 10939  015388  0060  F0D7  FFE3   	movff	btemp,plusw1
 10940  01538E  6A35               	clrf	btemp^0,c
 10941  015390  0EF7               	movlw	-9
 10942  015392  50E3               	movf	plusw1,w,c
 10943  015394  2035               	addwfc	btemp^0,w,c
 10944  015396  6E35               	movwf	btemp^0,c
 10945  015398  0EF7               	movlw	-9
 10946  01539A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10947  0153A0                     l9713:
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10950                           ;stkvar	_w @ sp[(-17)+13]
 10951                           ;stkvar	_l @ sp[(-17)+7]
 10952  0153A0  50E1               	movf	fsr1l,w,c
 10953  0153A2  0FF6               	addlw	-10
 10954  0153A4  6ED9               	movwf	fsr2l,c
 10955  0153A6  50E2               	movf	fsr1h,w,c
 10956  0153A8  6EDA               	movwf	fsr2h,c
 10957  0153AA  0EFF               	movlw	255
 10958  0153AC  22DA               	addwfc	fsr2h,f,c
 10959  0153AE  0EFC               	movlw	-4
 10960  0153B0  50E3               	movf	plusw1,w,c
 10961  0153B2  5CDE               	subwf	postinc2,w,c
 10962  0153B4  50DE               	movf	postinc2,w,c
 10963  0153B6  0A80               	xorlw	128
 10964  0153B8  6E35               	movwf	btemp^0,c
 10965  0153BA  0EFD               	movlw	-3
 10966  0153BC  50E3               	movf	plusw1,w,c
 10967  0153BE  0A80               	xorlw	128
 10968  0153C0  5835               	subwfb	btemp^0,w,c
 10969  0153C2  A0D8               	btfss	status,0,c
 10970  0153C4  D7CF               	goto	l9709
 10971  0153C6                     u9910:
 10972                           
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10974                           ;stkvar	_l @ sp[(-17)+7]
 10975  0153C6  0EF6               	movlw	-10
 10976  0153C8  006F FF8C  F035    	movff	plusw1,btemp
 10977  0153CE  0EF7               	movlw	-9
 10978  0153D0  006F FF8C  F036    	movff	plusw1,btemp+1
 10979                           
 10980                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10981  0153D6  0EEB               	movlw	235
 10982  0153D8  26E1               	addwf	fsr1l,f,c
 10983  0153DA  0EFF               	movlw	255
 10984  0153DC  22E2               	addwfc	fsr1h,f,c
 10985  0153DE  0012               	return		;funcret
 10986  0153E0                     __end_of_stoa:
 10987                           	opt callstack 0
 10988                           
 10989 ;; *************** function _efgtoa *****************
 10990 ;; Defined at:
 10991 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10994 ;;		 -> f(6), NULL(0), 
 10995 ;;  f               4  [STACK] PTR struct _IO_FILE
 10996 ;;  c               1  [STACK] unsigned char 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  u               4  [STACK] unsigned char 
 10999 ;;  g               4  [STACK] unsigned char 
 11000 ;;  l               4  [STACK] unsigned char 
 11001 ;;  h               4  [STACK] unsigned char 
 11002 ;;  ou              4  [STACK] unsigned char 
 11003 ;;  n               2  [STACK] int 
 11004 ;;  e               2  [STACK] int 
 11005 ;;  i               2  [STACK] int 
 11006 ;;  w               2  [STACK] int 
 11007 ;;  p               2  [STACK] int 
 11008 ;;  sign            2  [STACK] int 
 11009 ;;  d               2  [STACK] int 
 11010 ;;  ne              2  [STACK] int 
 11011 ;;  m               2  [STACK] int 
 11012 ;;  pp              2  [STACK] int 
 11013 ;;  t               2  [STACK] int 
 11014 ;;  mode            1  [STACK] unsigned char 
 11015 ;;  nmode           1  [STACK] unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  2  [STACK] int 
 11018 ;; Registers used:
 11019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/4
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;Total ram usage:        0 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:   11
 11032 ;; This function calls:
 11033 ;;		___awdiv
 11034 ;;		___awmod
 11035 ;;		___fladd
 11036 ;;		___fldiv
 11037 ;;		___fleq
 11038 ;;		___flge
 11039 ;;		___flmul
 11040 ;;		___flneg
 11041 ;;		___flsub
 11042 ;;		___fltol
 11043 ;;		___fpclassifyf
 11044 ;;		_floorf
 11045 ;;		_isupper
 11046 ;;		_pad
 11047 ;;		_strcpy
 11048 ;;		_tolower
 11049 ;; This function is called by:
 11050 ;;		_vfpfcnvrt
 11051 ;; This function uses a reentrant model
 11052 ;;
 11053                           
 11054                           	psect	text44
 11055  010000                     __ptext44:
 11056                           	opt callstack 0
 11057  010000                     _efgtoa:
 11058                           	opt callstack 0
 11059                           
 11060                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11061  010000  0E38               	movlw	56
 11062  010002  26E1               	addwf	fsr1l,f,c
 11063  010004  0E00               	movlw	0
 11064  010006  22E2               	addwfc	fsr1h,f,c
 11065                           
 11066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11067                           ;stkvar	_sign @ sp[(-56)+42]
 11068                           
 11069                           ;incstack = 0
 11070  010008  0EF2               	movlw	-14
 11071  01000A  6AE3               	clrf	plusw1,c
 11072  01000C  0EF3               	movlw	-13
 11073  01000E  6AE3               	clrf	plusw1,c
 11074                           
 11075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11076                           ;stkvar	_f @ sp[(-56)+-6]
 11077  010010  0EC2               	movlw	-62
 11078  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
 11079  010018  0EC3               	movlw	-61
 11080  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
 11081  010020  0EC4               	movlw	-60
 11082  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
 11083  010028  0EC5               	movlw	-59
 11084  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
 11085                           
 11086                           ;stkvar	_g @ sp[(-56)+16]
 11087  010030  0ED8               	movlw	-40
 11088  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11089  010038  0ED9               	movlw	-39
 11090  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11091  010040  0EDA               	movlw	-38
 11092  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11093  010048  0EDB               	movlw	-37
 11094  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
 11095                           
 11096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11097                           ;stkvar	_g @ sp[(-56)+16]
 11098  010050  0EDB               	movlw	-37
 11099  010052  AEE3               	btfss	plusw1,7,c
 11100  010054  D02B               	goto	l9373
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11103  010056  0E01               	movlw	1
 11104  010058  6E3F               	movwf	(btemp+10)^0,c
 11105  01005A  0E00               	movlw	0
 11106  01005C  6E40               	movwf	(btemp+11)^0,c
 11107                           
 11108                           ;stkvar	_sign @ sp[(-56)+42]
 11109  01005E  0EF2               	movlw	-14
 11110  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11111  010066  0EF3               	movlw	-13
 11112  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11115                           ;stkvar	_g @ sp[(-56)+16]
 11116  01006E  0ED8               	movlw	-40
 11117  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11119  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11120  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  010088  EC2A  F0C1         	call	___flneg	;wreg free
 11122                           
 11123                           ;stkvar	_g @ sp[(-56)+16]
 11124  01008C  0ED8               	movlw	-40
 11125  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11126  010094  0ED9               	movlw	-39
 11127  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11128  01009C  0EDA               	movlw	-38
 11129  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11130  0100A4  0EDB               	movlw	-37
 11131  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11132  0100AC                     l9373:
 11133                           
 11134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11135                           ;stkvar	_n @ sp[(-56)+32]
 11136  0100AC  0EE8               	movlw	-24
 11137  0100AE  6AE3               	clrf	plusw1,c
 11138  0100B0  0EE9               	movlw	-23
 11139  0100B2  6AE3               	clrf	plusw1,c
 11140                           
 11141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11142                           ;stkvar	_w @ sp[(-56)+38]
 11143  0100B4  0EEE               	movlw	-18
 11144  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
 11145  0100BC  0EEF               	movlw	-17
 11146  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11149                           ;stkvar	_sign @ sp[(-56)+42]
 11150  0100C4  0EF2               	movlw	-14
 11151  0100C6  006F FF8C  F035    	movff	plusw1,btemp
 11152  0100CC  0EF3               	movlw	-13
 11153  0100CE  50E3               	movf	plusw1,w,c
 11154  0100D0  1035               	iorwf	btemp^0,w,c
 11155  0100D2  A4D8               	btfss	status,2,c
 11156  0100D4  D002               	goto	u9320
 11157  0100D6  A422               	btfss	_flags^0,2,c
 11158  0100D8  D036               	goto	l9393
 11159  0100DA                     u9320:
 11160                           
 11161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11162                           ;stkvar	_sign @ sp[(-56)+42]
 11163  0100DA  0EF2               	movlw	-14
 11164  0100DC  006F FF8C  F035    	movff	plusw1,btemp
 11165  0100E2  0EF3               	movlw	-13
 11166  0100E4  50E3               	movf	plusw1,w,c
 11167  0100E6  1035               	iorwf	btemp^0,w,c
 11168  0100E8  A4D8               	btfss	status,2,c
 11169  0100EA  D002               	goto	l9385
 11170  0100EC  0E2B               	movlw	43
 11171  0100EE  D001               	goto	L11
 11172  0100F0                     l9385:
 11173  0100F0  0E2D               	movlw	45
 11174  0100F2                     L11:
 11175  0100F2  6E3F               	movwf	(btemp+10)^0,c
 11176  0100F4  0E00               	movlw	0
 11177  0100F6  6E40               	movwf	(btemp+11)^0,c
 11178                           
 11179                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11180  0100F8  0ED2               	movlw	-46
 11181  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11182  010100  0ED3               	movlw	-45
 11183  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
 11184                           
 11185                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11186  010108  0ED2               	movlw	-46
 11187  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11188                           
 11189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11190                           ;stkvar	_n @ sp[(-56)+32]
 11191  010110  0EE8               	movlw	-24
 11192  010112  50E3               	movf	plusw1,w,c
 11193  010114  0F01               	addlw	1
 11194  010116  6E35               	movwf	btemp^0,c
 11195  010118  0EE8               	movlw	-24
 11196  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11197  010120  6A35               	clrf	btemp^0,c
 11198  010122  0EE9               	movlw	-23
 11199  010124  50E3               	movf	plusw1,w,c
 11200  010126  2035               	addwfc	btemp^0,w,c
 11201  010128  6E35               	movwf	btemp^0,c
 11202  01012A  0EE9               	movlw	-23
 11203  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11206                           ;stkvar	_w @ sp[(-56)+38]
 11207  010132  50E1               	movf	fsr1l,w,c
 11208  010134  0FEE               	addlw	-18
 11209  010136  6ED9               	movwf	fsr2l,c
 11210  010138  50E2               	movf	fsr1h,w,c
 11211  01013A  6EDA               	movwf	fsr2h,c
 11212  01013C  0EFF               	movlw	255
 11213  01013E  22DA               	addwfc	fsr2h,f,c
 11214  010140  06DE               	decf	postinc2,f,c
 11215  010142  0E00               	movlw	0
 11216  010144  5ADD               	subwfb	postdec2,f,c
 11217  010146                     l9393:
 11218                           
 11219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11220                           ;stkvar	_g @ sp[(-56)+16]
 11221  010146  0ED8               	movlw	-40
 11222  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11223  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11224  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11225  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11226  010160  EC85  F0B1         	call	___fpclassifyf	;wreg free
 11227  010164  0435               	decf	btemp^0,w,c
 11228  010166  1036               	iorwf	(btemp+1)^0,w,c
 11229  010168  A4D8               	btfss	status,2,c
 11230  01016A  D076               	goto	l9411
 11231  01016C  0EBF               	movlw	191
 11232  01016E  6E3F               	movwf	(btemp+10)^0,c
 11233  010170  0EFF               	movlw	255
 11234  010172  6E40               	movwf	(btemp+11)^0,c
 11235                           
 11236                           ;stkvar	_c @ sp[(-56)+-7]
 11237  010174  0EC1               	movlw	-63
 11238  010176  50E3               	movf	plusw1,w,c
 11239  010178  6E3D               	movwf	(btemp+8)^0,c
 11240  01017A  6A3E               	clrf	(btemp+9)^0,c
 11241  01017C  503F               	movf	(btemp+10)^0,w,c
 11242  01017E  263D               	addwf	(btemp+8)^0,f,c
 11243  010180  5040               	movf	(btemp+11)^0,w,c
 11244  010182  223E               	addwfc	(btemp+9)^0,f,c
 11245  010184  503E               	movf	(btemp+9)^0,w,c
 11246  010186  E106               	bnz	u9350
 11247  010188  0E1A               	movlw	26
 11248  01018A  5C3D               	subwf	(btemp+8)^0,w,c
 11249  01018C  B0D8               	btfsc	status,0,c
 11250  01018E  D002               	goto	u9350
 11251  010190  0E01               	movlw	1
 11252  010192  D001               	goto	u9360
 11253  010194                     u9350:
 11254  010194  0E00               	movlw	0
 11255  010196                     u9360:
 11256  010196  6E3F               	movwf	(btemp+10)^0,c
 11257  010198  6A40               	clrf	(btemp+11)^0,c
 11258                           
 11259                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11260  01019A  0ED0               	movlw	-48
 11261  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11262  0101A2  0ED1               	movlw	-47
 11263  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11264                           
 11265                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11266  0101AA  0ED0               	movlw	-48
 11267  0101AC  006F FF8C  F035    	movff	plusw1,btemp
 11268  0101B2  0ED1               	movlw	-47
 11269  0101B4  50E3               	movf	plusw1,w,c
 11270  0101B6  1035               	iorwf	btemp^0,w,c
 11271  0101B8  B4D8               	btfsc	status,2,c
 11272  0101BA  D017               	goto	l9403
 11273                           
 11274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11275  0101BC  0ED7               	movlw	low STR_34
 11276  0101BE  6EE6               	movwf	postinc1,c
 11277  0101C0  0EFF               	movlw	high STR_34
 11278  0101C2  6EE6               	movwf	postinc1,c
 11279                           
 11280                           ;stkvar	_n @ sp[(-58)+32]
 11281  0101C4  0EAC               	movlw	low _dbuf
 11282  0101C6  6E3F               	movwf	(btemp+10)^0,c
 11283  0101C8  0E02               	movlw	high _dbuf
 11284  0101CA  6E40               	movwf	(btemp+11)^0,c
 11285  0101CC  0EE6               	movlw	-26
 11286  0101CE  50E3               	movf	plusw1,w,c
 11287  0101D0  263F               	addwf	(btemp+10)^0,f,c
 11288  0101D2  0EE7               	movlw	-25
 11289  0101D4  50E3               	movf	plusw1,w,c
 11290  0101D6  2240               	addwfc	(btemp+11)^0,f,c
 11291  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11292  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
 11293  0101E4  EC81  F0B9         	call	_strcpy	;wreg free
 11294                           
 11295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11296  0101E8  D016               	goto	l9405
 11297  0101EA                     l9403:
 11298                           
 11299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11300  0101EA  0EDF               	movlw	low STR_35
 11301  0101EC  6EE6               	movwf	postinc1,c
 11302  0101EE  0EFF               	movlw	high STR_35
 11303  0101F0  6EE6               	movwf	postinc1,c
 11304                           
 11305                           ;stkvar	_n @ sp[(-58)+32]
 11306  0101F2  0EAC               	movlw	low _dbuf
 11307  0101F4  6E3F               	movwf	(btemp+10)^0,c
 11308  0101F6  0E02               	movlw	high _dbuf
 11309  0101F8  6E40               	movwf	(btemp+11)^0,c
 11310  0101FA  0EE6               	movlw	-26
 11311  0101FC  50E3               	movf	plusw1,w,c
 11312  0101FE  263F               	addwf	(btemp+10)^0,f,c
 11313  010200  0EE7               	movlw	-25
 11314  010202  50E3               	movf	plusw1,w,c
 11315  010204  2240               	addwfc	(btemp+11)^0,f,c
 11316  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11317  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11318  010212  EC81  F0B9         	call	_strcpy	;wreg free
 11319  010216                     l9405:
 11320                           
 11321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11322                           ;stkvar	_w @ sp[(-56)+38]
 11323  010216  50E1               	movf	fsr1l,w,c
 11324  010218  0FEE               	addlw	-18
 11325  01021A  6ED9               	movwf	fsr2l,c
 11326  01021C  50E2               	movf	fsr1h,w,c
 11327  01021E  6EDA               	movwf	fsr2h,c
 11328  010220  0EFF               	movlw	255
 11329  010222  22DA               	addwfc	fsr2h,f,c
 11330  010224  0EFD               	movlw	253
 11331  010226  26DE               	addwf	postinc2,f,c
 11332  010228  0EFF               	movlw	255
 11333  01022A  22DD               	addwfc	postdec2,f,c
 11334  01022C                     l9407:
 11335                           
 11336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11337                           ;stkvar	_w @ sp[(-56)+38]
 11338  01022C  0EEE               	movlw	-18
 11339  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11340  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11341  01023A  0EAC               	movlw	low _dbuf
 11342  01023C  6EE6               	movwf	postinc1,c
 11343  01023E  0E02               	movlw	high _dbuf
 11344  010240  6EE6               	movwf	postinc1,c
 11345                           
 11346                           ;stkvar	_fp @ sp[(-60)+-2]
 11347  010242  0EC2               	movlw	-62
 11348  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11349  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11350  010250  EC76  F0B7         	call	_pad	;wreg free
 11351  010254  EF1D  F089         	goto	l1807
 11352  010258                     l9411:
 11353                           
 11354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11355                           ;stkvar	_g @ sp[(-56)+16]
 11356  010258  0ED8               	movlw	-40
 11357  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11360  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11361  010272  EC85  F0B1         	call	___fpclassifyf	;wreg free
 11362  010276  5035               	movf	btemp^0,w,c
 11363  010278  1036               	iorwf	(btemp+1)^0,w,c
 11364  01027A  A4D8               	btfss	status,2,c
 11365  01027C  D056               	goto	l9429
 11366  01027E  0EBF               	movlw	191
 11367  010280  6E3F               	movwf	(btemp+10)^0,c
 11368  010282  0EFF               	movlw	255
 11369  010284  6E40               	movwf	(btemp+11)^0,c
 11370                           
 11371                           ;stkvar	_c @ sp[(-56)+-7]
 11372  010286  0EC1               	movlw	-63
 11373  010288  50E3               	movf	plusw1,w,c
 11374  01028A  6E3D               	movwf	(btemp+8)^0,c
 11375  01028C  6A3E               	clrf	(btemp+9)^0,c
 11376  01028E  503F               	movf	(btemp+10)^0,w,c
 11377  010290  263D               	addwf	(btemp+8)^0,f,c
 11378  010292  5040               	movf	(btemp+11)^0,w,c
 11379  010294  223E               	addwfc	(btemp+9)^0,f,c
 11380  010296  503E               	movf	(btemp+9)^0,w,c
 11381  010298  E106               	bnz	u9390
 11382  01029A  0E1A               	movlw	26
 11383  01029C  5C3D               	subwf	(btemp+8)^0,w,c
 11384  01029E  B0D8               	btfsc	status,0,c
 11385  0102A0  D002               	goto	u9390
 11386  0102A2  0E01               	movlw	1
 11387  0102A4  D001               	goto	u9400
 11388  0102A6                     u9390:
 11389  0102A6  0E00               	movlw	0
 11390  0102A8                     u9400:
 11391  0102A8  6E3F               	movwf	(btemp+10)^0,c
 11392  0102AA  6A40               	clrf	(btemp+11)^0,c
 11393                           
 11394                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11395  0102AC  0ECE               	movlw	-50
 11396  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11397  0102B4  0ECF               	movlw	-49
 11398  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 11399                           
 11400                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11401  0102BC  0ECE               	movlw	-50
 11402  0102BE  006F FF8C  F035    	movff	plusw1,btemp
 11403  0102C4  0ECF               	movlw	-49
 11404  0102C6  50E3               	movf	plusw1,w,c
 11405  0102C8  1035               	iorwf	btemp^0,w,c
 11406  0102CA  B4D8               	btfsc	status,2,c
 11407  0102CC  D017               	goto	l9421
 11408                           
 11409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11410  0102CE  0EDB               	movlw	low STR_38
 11411  0102D0  6EE6               	movwf	postinc1,c
 11412  0102D2  0EFF               	movlw	high STR_38
 11413  0102D4  6EE6               	movwf	postinc1,c
 11414                           
 11415                           ;stkvar	_n @ sp[(-58)+32]
 11416  0102D6  0EAC               	movlw	low _dbuf
 11417  0102D8  6E3F               	movwf	(btemp+10)^0,c
 11418  0102DA  0E02               	movlw	high _dbuf
 11419  0102DC  6E40               	movwf	(btemp+11)^0,c
 11420  0102DE  0EE6               	movlw	-26
 11421  0102E0  50E3               	movf	plusw1,w,c
 11422  0102E2  263F               	addwf	(btemp+10)^0,f,c
 11423  0102E4  0EE7               	movlw	-25
 11424  0102E6  50E3               	movf	plusw1,w,c
 11425  0102E8  2240               	addwfc	(btemp+11)^0,f,c
 11426  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11427  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
 11428  0102F6  EC81  F0B9         	call	_strcpy	;wreg free
 11429                           
 11430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11431  0102FA  D78D               	goto	l9405
 11432  0102FC                     l9421:
 11433                           
 11434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11435  0102FC  0EE3               	movlw	low STR_39
 11436  0102FE  6EE6               	movwf	postinc1,c
 11437  010300  0EFF               	movlw	high STR_39
 11438  010302  6EE6               	movwf	postinc1,c
 11439                           
 11440                           ;stkvar	_n @ sp[(-58)+32]
 11441  010304  0EAC               	movlw	low _dbuf
 11442  010306  6E3F               	movwf	(btemp+10)^0,c
 11443  010308  0E02               	movlw	high _dbuf
 11444  01030A  6E40               	movwf	(btemp+11)^0,c
 11445  01030C  0EE6               	movlw	-26
 11446  01030E  50E3               	movf	plusw1,w,c
 11447  010310  263F               	addwf	(btemp+10)^0,f,c
 11448  010312  0EE7               	movlw	-25
 11449  010314  50E3               	movf	plusw1,w,c
 11450  010316  2240               	addwfc	(btemp+11)^0,f,c
 11451  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11452  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
 11453  010324  EC81  F0B9         	call	_strcpy	;wreg free
 11454  010328  D776               	goto	l9405
 11455  01032A                     l9429:
 11456                           
 11457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11458  01032A  0E00               	movlw	0
 11459  01032C  6E3D               	movwf	(btemp+8)^0,c
 11460  01032E  0E00               	movlw	0
 11461  010330  6E3E               	movwf	(btemp+9)^0,c
 11462  010332  0E80               	movlw	128
 11463  010334  6E3F               	movwf	(btemp+10)^0,c
 11464  010336  0E3F               	movlw	63
 11465  010338  6E40               	movwf	(btemp+11)^0,c
 11466                           
 11467                           ;stkvar	_u @ sp[(-56)+12]
 11468  01033A  0ED4               	movlw	-44
 11469  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11470  010342  0ED5               	movlw	-43
 11471  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11472  01034A  0ED6               	movlw	-42
 11473  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11474  010352  0ED7               	movlw	-41
 11475  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
 11476                           
 11477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11478                           ;stkvar	_e @ sp[(-56)+34]
 11479  01035A  0EEA               	movlw	-22
 11480  01035C  6AE3               	clrf	plusw1,c
 11481  01035E  0EEB               	movlw	-21
 11482  010360  6AE3               	clrf	plusw1,c
 11483                           
 11484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11485  010362  0E00               	movlw	0
 11486  010364  6EE6               	movwf	postinc1,c
 11487  010366  0E00               	movlw	0
 11488  010368  6EE6               	movwf	postinc1,c
 11489  01036A  0E00               	movlw	0
 11490  01036C  6EE6               	movwf	postinc1,c
 11491  01036E  0E00               	movlw	0
 11492  010370  6EE6               	movwf	postinc1,c
 11493                           
 11494                           ;stkvar	_g @ sp[(-60)+16]
 11495  010372  0ED4               	movlw	-44
 11496  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11497  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11498  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11500  01038C  EC4E  F0BA         	call	___fleq	;wreg free
 11501  010390  A035               	btfss	btemp& (0+255),0,c
 11502  010392  D039               	goto	l9441
 11503  010394  D0BC               	goto	u9440
 11504  010396                     l9437:
 11505                           
 11506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11507  010396  0E00               	movlw	0
 11508  010398  6EE6               	movwf	postinc1,c
 11509  01039A  0E00               	movlw	0
 11510  01039C  6EE6               	movwf	postinc1,c
 11511  01039E  0E20               	movlw	32
 11512  0103A0  6EE6               	movwf	postinc1,c
 11513  0103A2  0E41               	movlw	65
 11514  0103A4  6EE6               	movwf	postinc1,c
 11515                           
 11516                           ;stkvar	_u @ sp[(-60)+12]
 11517  0103A6  0ED0               	movlw	-48
 11518  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11519  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11520  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11521  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11522  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11523                           
 11524                           ;stkvar	_u @ sp[(-56)+12]
 11525  0103C4  0ED4               	movlw	-44
 11526  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11527  0103CC  0ED5               	movlw	-43
 11528  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11529  0103D4  0ED6               	movlw	-42
 11530  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11531  0103DC  0ED7               	movlw	-41
 11532  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11533                           
 11534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11535                           ;stkvar	_e @ sp[(-56)+34]
 11536  0103E4  0EEA               	movlw	-22
 11537  0103E6  50E3               	movf	plusw1,w,c
 11538  0103E8  0F01               	addlw	1
 11539  0103EA  6E35               	movwf	btemp^0,c
 11540  0103EC  0EEA               	movlw	-22
 11541  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 11542  0103F4  6A35               	clrf	btemp^0,c
 11543  0103F6  0EEB               	movlw	-21
 11544  0103F8  50E3               	movf	plusw1,w,c
 11545  0103FA  2035               	addwfc	btemp^0,w,c
 11546  0103FC  6E35               	movwf	btemp^0,c
 11547  0103FE  0EEB               	movlw	-21
 11548  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 11549  010406                     l9441:
 11550                           
 11551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11552  010406  0E00               	movlw	0
 11553  010408  6EE6               	movwf	postinc1,c
 11554  01040A  0E00               	movlw	0
 11555  01040C  6EE6               	movwf	postinc1,c
 11556  01040E  0E20               	movlw	32
 11557  010410  6EE6               	movwf	postinc1,c
 11558  010412  0E41               	movlw	65
 11559  010414  6EE6               	movwf	postinc1,c
 11560                           
 11561                           ;stkvar	_u @ sp[(-60)+12]
 11562  010416  0ED0               	movlw	-48
 11563  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11564  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11565  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  010430  ECF8  F090         	call	___flmul	;wreg free
 11568  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 11569  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11570  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11571  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11572                           
 11573                           ;stkvar	_g @ sp[(-60)+16]
 11574  01044C  0ED4               	movlw	-44
 11575  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11576  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11577  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11578  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11579  010466  ECC9  F0B3         	call	___flge	;wreg free
 11580  01046A  A035               	btfss	btemp& (0+255),0,c
 11581  01046C  D032               	goto	l9447
 11582  01046E  D793               	goto	l9437
 11583  010470                     l9443:
 11584                           
 11585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11586  010470  0E00               	movlw	0
 11587  010472  6EE6               	movwf	postinc1,c
 11588  010474  0E00               	movlw	0
 11589  010476  6EE6               	movwf	postinc1,c
 11590  010478  0E20               	movlw	32
 11591  01047A  6EE6               	movwf	postinc1,c
 11592  01047C  0E41               	movlw	65
 11593  01047E  6EE6               	movwf	postinc1,c
 11594                           
 11595                           ;stkvar	_u @ sp[(-60)+12]
 11596  010480  0ED0               	movlw	-48
 11597  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11598  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11599  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11600  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11601  01049A  ECEB  F098         	call	___fldiv	;wreg free
 11602                           
 11603                           ;stkvar	_u @ sp[(-56)+12]
 11604  01049E  0ED4               	movlw	-44
 11605  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 11606  0104A6  0ED5               	movlw	-43
 11607  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11608  0104AE  0ED6               	movlw	-42
 11609  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11610  0104B6  0ED7               	movlw	-41
 11611  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11612                           
 11613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11614                           ;stkvar	_e @ sp[(-56)+34]
 11615  0104BE  50E1               	movf	fsr1l,w,c
 11616  0104C0  0FEA               	addlw	-22
 11617  0104C2  6ED9               	movwf	fsr2l,c
 11618  0104C4  50E2               	movf	fsr1h,w,c
 11619  0104C6  6EDA               	movwf	fsr2h,c
 11620  0104C8  0EFF               	movlw	255
 11621  0104CA  22DA               	addwfc	fsr2h,f,c
 11622  0104CC  06DE               	decf	postinc2,f,c
 11623  0104CE  0E00               	movlw	0
 11624  0104D0  5ADD               	subwfb	postdec2,f,c
 11625  0104D2                     l9447:
 11626                           
 11627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11628                           ;stkvar	_u @ sp[(-56)+12]
 11629  0104D2  0ED4               	movlw	-44
 11630  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11631  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11632  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11633  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11634                           
 11635                           ;stkvar	_g @ sp[(-60)+16]
 11636  0104EC  0ED4               	movlw	-44
 11637  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11638  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11639  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11640  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11641  010506  ECC9  F0B3         	call	___flge	;wreg free
 11642  01050A  A035               	btfss	btemp& (0+255),0,c
 11643  01050C  D7B1               	goto	l9443
 11644  01050E                     u9440:
 11645                           
 11646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11647                           ;stkvar	_c @ sp[(-56)+-7]
 11648  01050E  0EC1               	movlw	-63
 11649  010510  50E3               	movf	plusw1,w,c
 11650  010512  6EE6               	movwf	postinc1,c
 11651  010514  0E00               	movlw	0
 11652  010516  6EE6               	movwf	postinc1,c
 11653  010518  EC0B  F0BE         	call	_tolower	;wreg free
 11654                           
 11655                           ;stkvar	_mode @ sp[(-56)+54]
 11656  01051C  0EFE               	movlw	-2
 11657  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11658                           
 11659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11660                           ;stkvar	_mode @ sp[(-56)+54]
 11661                           ;stkvar	_nmode @ sp[(-56)+55]
 11662  010524  0EFE               	movlw	-2
 11663  010526  006F FF8C  F035    	movff	plusw1,btemp
 11664  01052C  0EFF               	movlw	-1
 11665  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11666                           
 11667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11668                           ;stkvar	_mode @ sp[(-56)+54]
 11669  010534  0EFE               	movlw	-2
 11670  010536  006F FF8C  F035    	movff	plusw1,btemp
 11671  01053C  0E67               	movlw	103
 11672  01053E  1835               	xorwf	btemp^0,w,c
 11673  010540  A4D8               	btfss	status,2,c
 11674  010542  D025               	goto	l9465
 11675                           
 11676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11677  010544  5020               	movf	_prec^0,w,c
 11678  010546  1021               	iorwf	(_prec+1)^0,w,c
 11679  010548  A4D8               	btfss	status,2,c
 11680  01054A  D004               	goto	l9459
 11681                           
 11682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11683  01054C  0E00               	movlw	0
 11684  01054E  6E21               	movwf	(_prec+1)^0,c
 11685  010550  0E01               	movlw	1
 11686  010552  6E20               	movwf	_prec^0,c
 11687  010554                     l9459:
 11688                           
 11689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11690  010554  BE21               	btfsc	(_prec+1)^0,7,c
 11691  010556  D005               	goto	u9470
 11692  010558  5021               	movf	(_prec+1)^0,w,c
 11693  01055A  E110               	bnz	l9463
 11694  01055C  0420               	decf	_prec^0,w,c
 11695  01055E  B0D8               	btfsc	status,0,c
 11696  010560  D00D               	goto	l9463
 11697  010562                     u9470:
 11698  010562  0E06               	movlw	6
 11699  010564  6E3F               	movwf	(btemp+10)^0,c
 11700  010566  0E00               	movlw	0
 11701  010568  6E40               	movwf	(btemp+11)^0,c
 11702                           
 11703                           ;stkvar	_p @ sp[(-56)+40]
 11704  01056A  0EF0               	movlw	-16
 11705  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11706  010572  0EF1               	movlw	-15
 11707  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 11708  01057A  D00C               	goto	l9471
 11709  01057C                     l9463:
 11710                           
 11711                           ;stkvar	_p @ sp[(-56)+40]
 11712  01057C  0EF0               	movlw	-16
 11713  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 11714  010584  0EF1               	movlw	-15
 11715  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 11716  01058C  D003               	goto	l9471
 11717  01058E                     l9465:
 11718                           
 11719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11720  01058E  AE21               	btfss	(_prec+1)^0,7,c
 11721  010590  D7F5               	goto	l9463
 11722  010592  D7E7               	goto	u9470
 11723  010594                     l9471:
 11724                           
 11725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11726                           ;stkvar	_mode @ sp[(-56)+54]
 11727  010594  0EFE               	movlw	-2
 11728  010596  006F FF8C  F035    	movff	plusw1,btemp
 11729  01059C  0E67               	movlw	103
 11730  01059E  1835               	xorwf	btemp^0,w,c
 11731  0105A0  A4D8               	btfss	status,2,c
 11732  0105A2  D02F               	goto	l9481
 11733                           
 11734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11735                           ;stkvar	_e @ sp[(-56)+34]
 11736  0105A4  0EEB               	movlw	-21
 11737  0105A6  AEE3               	btfss	plusw1,7,c
 11738  0105A8  D00E               	goto	u9500
 11739  0105AA  0EEA               	movlw	-22
 11740  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 11741  0105B2  0EFC               	movlw	252
 11742  0105B4  5E35               	subwf	btemp^0,f,c
 11743  0105B6  0EEB               	movlw	-21
 11744  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 11745  0105BE  0EFF               	movlw	255
 11746  0105C0  5A35               	subwfb	btemp^0,f,c
 11747  0105C2  A0D8               	btfss	status,0,c
 11748  0105C4  D018               	goto	l9479
 11749  0105C6                     u9500:
 11750                           
 11751                           ;stkvar	_e @ sp[(-56)+34]
 11752                           ;stkvar	_p @ sp[(-56)+40]
 11753  0105C6  0EF0               	movlw	-16
 11754  0105C8  50E3               	movf	plusw1,w,c
 11755  0105CA  0FFF               	addlw	255
 11756  0105CC  6E3F               	movwf	(btemp+10)^0,c
 11757  0105CE  0EF1               	movlw	-15
 11758  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 11759  0105D6  0EFF               	movlw	255
 11760  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 11761  0105DA  0EEA               	movlw	-22
 11762  0105DC  50E3               	movf	plusw1,w,c
 11763  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 11764  0105E0  5040               	movf	(btemp+11)^0,w,c
 11765  0105E2  0A80               	xorlw	128
 11766  0105E4  6E35               	movwf	btemp^0,c
 11767  0105E6  0EEB               	movlw	-21
 11768  0105E8  50E3               	movf	plusw1,w,c
 11769  0105EA  0A80               	xorlw	128
 11770  0105EC  5835               	subwfb	btemp^0,w,c
 11771  0105EE  A0D8               	btfss	status,0,c
 11772  0105F0  D002               	goto	l9479
 11773                           
 11774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11775  0105F2  0E66               	movlw	102
 11776  0105F4  D001               	goto	L12
 11777  0105F6                     l9479:
 11778                           
 11779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11780  0105F6  0E65               	movlw	101
 11781  0105F8                     L12:
 11782  0105F8  6E40               	movwf	(btemp+11)^0,c
 11783                           
 11784                           ;stkvar	_nmode @ sp[(-56)+55]
 11785  0105FA  0EFF               	movlw	-1
 11786  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11787  010602                     l9481:
 11788                           
 11789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11790                           ;stkvar	_p @ sp[(-56)+40]
 11791                           ;stkvar	_m @ sp[(-56)+48]
 11792  010602  0EF0               	movlw	-16
 11793  010604  006F FF8C  F035    	movff	plusw1,btemp
 11794  01060A  0EF8               	movlw	-8
 11795  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11796  010612  0EF1               	movlw	-15
 11797  010614  006F FF8C  F035    	movff	plusw1,btemp
 11798  01061A  0EF9               	movlw	-7
 11799  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11800                           
 11801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11802                           ;stkvar	_mode @ sp[(-56)+54]
 11803  010622  0EFE               	movlw	-2
 11804  010624  006F FF8C  F035    	movff	plusw1,btemp
 11805  01062A  0E67               	movlw	103
 11806  01062C  1835               	xorwf	btemp^0,w,c
 11807  01062E  A4D8               	btfss	status,2,c
 11808  010630  D00B               	goto	u9540
 11809                           
 11810                           ;stkvar	_nmode @ sp[(-56)+55]
 11811  010632  0EFF               	movlw	-1
 11812  010634  006F FF8C  F035    	movff	plusw1,btemp
 11813  01063A  0E66               	movlw	102
 11814  01063C  1835               	xorwf	btemp^0,w,c
 11815  01063E  A4D8               	btfss	status,2,c
 11816  010640  D014               	goto	l1836
 11817                           
 11818                           ;stkvar	_e @ sp[(-56)+34]
 11819  010642  0EEB               	movlw	-21
 11820  010644  AEE3               	btfss	plusw1,7,c
 11821  010646  D011               	goto	l1836
 11822  010648                     u9540:
 11823                           
 11824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11825                           ;stkvar	_m @ sp[(-56)+48]
 11826  010648  0EF8               	movlw	-8
 11827  01064A  50E3               	movf	plusw1,w,c
 11828  01064C  0F01               	addlw	1
 11829  01064E  6E35               	movwf	btemp^0,c
 11830  010650  0EF8               	movlw	-8
 11831  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 11832  010658  6A35               	clrf	btemp^0,c
 11833  01065A  0EF9               	movlw	-7
 11834  01065C  50E3               	movf	plusw1,w,c
 11835  01065E  2035               	addwfc	btemp^0,w,c
 11836  010660  6E35               	movwf	btemp^0,c
 11837  010662  0EF9               	movlw	-7
 11838  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 11839  01066A                     l1836:
 11840                           
 11841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11842                           ;stkvar	_nmode @ sp[(-56)+55]
 11843  01066A  0EFF               	movlw	-1
 11844  01066C  006F FF8C  F035    	movff	plusw1,btemp
 11845  010672  0E66               	movlw	102
 11846  010674  1835               	xorwf	btemp^0,w,c
 11847  010676  A4D8               	btfss	status,2,c
 11848  010678  D03B               	goto	l9501
 11849                           
 11850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11851                           ;stkvar	_e @ sp[(-56)+34]
 11852  01067A  0EEB               	movlw	-21
 11853  01067C  AEE3               	btfss	plusw1,7,c
 11854  01067E  D01C               	goto	l9497
 11855                           
 11856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11857  010680  0E00               	movlw	0
 11858  010682  6E3D               	movwf	(btemp+8)^0,c
 11859  010684  0E00               	movlw	0
 11860  010686  6E3E               	movwf	(btemp+9)^0,c
 11861  010688  0E80               	movlw	128
 11862  01068A  6E3F               	movwf	(btemp+10)^0,c
 11863  01068C  0E3F               	movlw	63
 11864  01068E  6E40               	movwf	(btemp+11)^0,c
 11865                           
 11866                           ;stkvar	_u @ sp[(-56)+12]
 11867  010690  0ED4               	movlw	-44
 11868  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11869  010698  0ED5               	movlw	-43
 11870  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11871  0106A0  0ED6               	movlw	-42
 11872  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11873  0106A8  0ED7               	movlw	-41
 11874  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 11875                           
 11876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11877                           ;stkvar	_e @ sp[(-56)+34]
 11878  0106B0  0EEA               	movlw	-22
 11879  0106B2  6AE3               	clrf	plusw1,c
 11880  0106B4  0EEB               	movlw	-21
 11881  0106B6  6AE3               	clrf	plusw1,c
 11882  0106B8                     l9497:
 11883                           
 11884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11885                           ;stkvar	_mode @ sp[(-56)+54]
 11886  0106B8  0EFE               	movlw	-2
 11887  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 11888  0106C0  0E67               	movlw	103
 11889  0106C2  1835               	xorwf	btemp^0,w,c
 11890  0106C4  B4D8               	btfsc	status,2,c
 11891  0106C6  D014               	goto	l9501
 11892                           
 11893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11894                           ;stkvar	_e @ sp[(-56)+34]
 11895                           ;stkvar	_m @ sp[(-56)+48]
 11896  0106C8  0EF8               	movlw	-8
 11897  0106CA  50E3               	movf	plusw1,w,c
 11898  0106CC  6E35               	movwf	btemp^0,c
 11899  0106CE  0EEA               	movlw	-22
 11900  0106D0  50E3               	movf	plusw1,w,c
 11901  0106D2  2635               	addwf	btemp^0,f,c
 11902  0106D4  0EF8               	movlw	-8
 11903  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11904  0106DC  0EF9               	movlw	-7
 11905  0106DE  50E3               	movf	plusw1,w,c
 11906  0106E0  6E35               	movwf	btemp^0,c
 11907  0106E2  0EEB               	movlw	-21
 11908  0106E4  50E3               	movf	plusw1,w,c
 11909  0106E6  2235               	addwfc	btemp^0,f,c
 11910  0106E8  0EF9               	movlw	-7
 11911  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 11912  0106F0                     l9501:
 11913                           
 11914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11915                           ;stkvar	_i @ sp[(-56)+36]
 11916  0106F0  0EEC               	movlw	-20
 11917  0106F2  6AE3               	clrf	plusw1,c
 11918  0106F4  0EED               	movlw	-19
 11919  0106F6  6AE3               	clrf	plusw1,c
 11920                           
 11921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11922                           ;stkvar	_g @ sp[(-56)+16]
 11923  0106F8  0ED8               	movlw	-40
 11924  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 11925  010700  0ED9               	movlw	-39
 11926  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 11927  010708  0EDA               	movlw	-38
 11928  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 11929  010710  0EDB               	movlw	-37
 11930  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 11931                           
 11932                           ;stkvar	_h @ sp[(-56)+24]
 11933  010718  0EE0               	movlw	-32
 11934  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11935  010720  0EE1               	movlw	-31
 11936  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11937  010728  0EE2               	movlw	-30
 11938  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11939  010730  0EE3               	movlw	-29
 11940  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 11941                           
 11942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11943                           ;stkvar	_u @ sp[(-56)+12]
 11944  010738  0ED4               	movlw	-44
 11945  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 11946  010740  0ED5               	movlw	-43
 11947  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 11948  010748  0ED6               	movlw	-42
 11949  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 11950  010750  0ED7               	movlw	-41
 11951  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 11952                           
 11953                           ;stkvar	_ou @ sp[(-56)+28]
 11954  010758  0EE4               	movlw	-28
 11955  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11956  010760  0EE5               	movlw	-27
 11957  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11958  010768  0EE6               	movlw	-26
 11959  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11960  010770  0EE7               	movlw	-25
 11961  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11964  010778  D0D6               	goto	l9517
 11965  01077A                     l9507:
 11966                           
 11967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11968                           ;stkvar	_u @ sp[(-56)+12]
 11969  01077A  0ED4               	movlw	-44
 11970  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11971  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11972  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11973  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11974                           
 11975                           ;stkvar	_h @ sp[(-60)+24]
 11976  010794  0EDC               	movlw	-36
 11977  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11978  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11979  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11980  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11981  0107AE  ECEB  F098         	call	___fldiv	;wreg free
 11982  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 11983  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11984  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11985  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11986  0107CA  ECC5  F0A3         	call	_floorf	;wreg free
 11987                           
 11988                           ;stkvar	_l @ sp[(-56)+20]
 11989  0107CE  0EDC               	movlw	-36
 11990  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 11991  0107D6  0EDD               	movlw	-35
 11992  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11993  0107DE  0EDE               	movlw	-34
 11994  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11995  0107E6  0EDF               	movlw	-33
 11996  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11997                           
 11998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11999                           ;stkvar	_l @ sp[(-56)+20]
 12000  0107EE  0EDC               	movlw	-36
 12001  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12002  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12003  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12004  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12005  010808  EC10  F0B3         	call	___fltol	;wreg free
 12006  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 12007  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12008                           
 12009                           ;stkvar	_d @ sp[(-56)+44]
 12010  010818  0EF4               	movlw	-12
 12011  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12012  010820  0EF5               	movlw	-11
 12013  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 12014                           
 12015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12016                           ;stkvar	_u @ sp[(-56)+12]
 12017  010828  0ED4               	movlw	-44
 12018  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12019  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12020  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12021  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12022                           
 12023                           ;stkvar	_l @ sp[(-60)+20]
 12024  010842  0ED8               	movlw	-40
 12025  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12026  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12027  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12028  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12029  01085C  ECF8  F090         	call	___flmul	;wreg free
 12030  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 12031  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12032  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12033  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12034                           
 12035                           ;stkvar	_h @ sp[(-60)+24]
 12036  010878  0EDC               	movlw	-36
 12037  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12038  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12039  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12040  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12041  010892  EC4E  F0C1         	call	___flsub	;wreg free
 12042                           
 12043                           ;stkvar	_h @ sp[(-56)+24]
 12044  010896  0EE0               	movlw	-32
 12045  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 12046  01089E  0EE1               	movlw	-31
 12047  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12048  0108A6  0EE2               	movlw	-30
 12049  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12050  0108AE  0EE3               	movlw	-29
 12051  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12052                           
 12053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12054  0108B6  0E00               	movlw	0
 12055  0108B8  6EE6               	movwf	postinc1,c
 12056  0108BA  0E00               	movlw	0
 12057  0108BC  6EE6               	movwf	postinc1,c
 12058  0108BE  0E20               	movlw	32
 12059  0108C0  6EE6               	movwf	postinc1,c
 12060  0108C2  0E41               	movlw	65
 12061  0108C4  6EE6               	movwf	postinc1,c
 12062                           
 12063                           ;stkvar	_u @ sp[(-60)+12]
 12064  0108C6  0ED0               	movlw	-48
 12065  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12066  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12067  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12068  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12069  0108E0  ECEB  F098         	call	___fldiv	;wreg free
 12070                           
 12071                           ;stkvar	_u @ sp[(-56)+12]
 12072  0108E4  0ED4               	movlw	-44
 12073  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12074  0108EC  0ED5               	movlw	-43
 12075  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12076  0108F4  0ED6               	movlw	-42
 12077  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12078  0108FC  0ED7               	movlw	-41
 12079  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12080                           
 12081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12082                           ;stkvar	_i @ sp[(-56)+36]
 12083  010904  0EEC               	movlw	-20
 12084  010906  50E3               	movf	plusw1,w,c
 12085  010908  0F01               	addlw	1
 12086  01090A  6E35               	movwf	btemp^0,c
 12087  01090C  0EEC               	movlw	-20
 12088  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12089  010914  6A35               	clrf	btemp^0,c
 12090  010916  0EED               	movlw	-19
 12091  010918  50E3               	movf	plusw1,w,c
 12092  01091A  2035               	addwfc	btemp^0,w,c
 12093  01091C  6E35               	movwf	btemp^0,c
 12094  01091E  0EED               	movlw	-19
 12095  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 12096  010926                     l9517:
 12097                           
 12098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12099                           ;stkvar	_m @ sp[(-56)+48]
 12100                           ;stkvar	_i @ sp[(-56)+36]
 12101  010926  50E1               	movf	fsr1l,w,c
 12102  010928  0FEC               	addlw	-20
 12103  01092A  6ED9               	movwf	fsr2l,c
 12104  01092C  50E2               	movf	fsr1h,w,c
 12105  01092E  6EDA               	movwf	fsr2h,c
 12106  010930  0EFF               	movlw	255
 12107  010932  22DA               	addwfc	fsr2h,f,c
 12108  010934  0EF8               	movlw	-8
 12109  010936  50E3               	movf	plusw1,w,c
 12110  010938  5CDE               	subwf	postinc2,w,c
 12111  01093A  50DE               	movf	postinc2,w,c
 12112  01093C  0A80               	xorlw	128
 12113  01093E  6E35               	movwf	btemp^0,c
 12114  010940  0EF9               	movlw	-7
 12115  010942  50E3               	movf	plusw1,w,c
 12116  010944  0A80               	xorlw	128
 12117  010946  5835               	subwfb	btemp^0,w,c
 12118  010948  A0D8               	btfss	status,0,c
 12119  01094A  D717               	goto	l9507
 12120                           
 12121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12122  01094C  0E00               	movlw	0
 12123  01094E  6EE6               	movwf	postinc1,c
 12124  010950  0E00               	movlw	0
 12125  010952  6EE6               	movwf	postinc1,c
 12126  010954  0EA0               	movlw	160
 12127  010956  6EE6               	movwf	postinc1,c
 12128  010958  0E40               	movlw	64
 12129  01095A  6EE6               	movwf	postinc1,c
 12130                           
 12131                           ;stkvar	_u @ sp[(-60)+12]
 12132  01095C  0ED0               	movlw	-48
 12133  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12134  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12135  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12136  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  010976  ECF8  F090         	call	___flmul	;wreg free
 12138                           
 12139                           ;stkvar	_l @ sp[(-56)+20]
 12140  01097A  0EDC               	movlw	-36
 12141  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12142  010982  0EDD               	movlw	-35
 12143  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12144  01098A  0EDE               	movlw	-34
 12145  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12146  010992  0EDF               	movlw	-33
 12147  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12148                           
 12149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12150                           ;stkvar	_l @ sp[(-56)+20]
 12151  01099A  0EDC               	movlw	-36
 12152  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12153  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12154  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12155  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12156                           
 12157                           ;stkvar	_h @ sp[(-60)+24]
 12158  0109B4  0EDC               	movlw	-36
 12159  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12160  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12161  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12162  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12163  0109CE  ECC9  F0B3         	call	___flge	;wreg free
 12164  0109D2  A035               	btfss	btemp& (0+255),0,c
 12165  0109D4  D021               	goto	u9610
 12166                           
 12167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12168                           ;stkvar	_l @ sp[(-56)+20]
 12169                           
 12170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12171                           
 12172                           ;stkvar	_l @ sp[(-56)+20]
 12173                           
 12174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12175  0109D6  0EDC               	movlw	-36
 12176  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12179  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12180                           
 12181                           ;stkvar	_h @ sp[(-60)+24]
 12182  0109F0  0EDC               	movlw	-36
 12183  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12184  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12185  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12186  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12187  010A0A  EC4E  F0BA         	call	___fleq	;wreg free
 12188  010A0E  A035               	btfss	btemp& (0+255),0,c
 12189  010A10  D01B               	goto	l9531
 12190                           
 12191                           ;stkvar	_d @ sp[(-56)+44]
 12192  010A12  0EF4               	movlw	-12
 12193  010A14  B0E3               	btfsc	plusw1,0,c
 12194  010A16  D018               	goto	l9531
 12195  010A18                     u9610:
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12198  010A18  0E00               	movlw	0
 12199  010A1A  6E3D               	movwf	(btemp+8)^0,c
 12200  010A1C  0E00               	movlw	0
 12201  010A1E  6E3E               	movwf	(btemp+9)^0,c
 12202  010A20  0E00               	movlw	0
 12203  010A22  6E3F               	movwf	(btemp+10)^0,c
 12204  010A24  0E00               	movlw	0
 12205  010A26  6E40               	movwf	(btemp+11)^0,c
 12206                           
 12207                           ;stkvar	_l @ sp[(-56)+20]
 12208  010A28  0EDC               	movlw	-36
 12209  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12210  010A30  0EDD               	movlw	-35
 12211  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12212  010A38  0EDE               	movlw	-34
 12213  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12214  010A40  0EDF               	movlw	-33
 12215  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 12216  010A48                     l9531:
 12217                           
 12218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12219                           ;stkvar	_l @ sp[(-56)+20]
 12220  010A48  0EDC               	movlw	-36
 12221  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12222  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12223  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12224  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12225                           
 12226                           ;stkvar	_g @ sp[(-60)+16]
 12227  010A62  0ED4               	movlw	-44
 12228  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12229  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12232  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12233                           
 12234                           ;stkvar	_h @ sp[(-56)+24]
 12235  010A80  0EE0               	movlw	-32
 12236  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 12237  010A88  0EE1               	movlw	-31
 12238  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12239  010A90  0EE2               	movlw	-30
 12240  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12241  010A98  0EE3               	movlw	-29
 12242  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12243                           
 12244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12245                           ;stkvar	_ou @ sp[(-56)+28]
 12246  010AA0  0EE4               	movlw	-28
 12247  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12248  010AA8  0EE5               	movlw	-27
 12249  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12250  010AB0  0EE6               	movlw	-26
 12251  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12252  010AB8  0EE7               	movlw	-25
 12253  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 12254                           
 12255                           ;stkvar	_u @ sp[(-56)+12]
 12256  010AC0  0ED4               	movlw	-44
 12257  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12258  010AC8  0ED5               	movlw	-43
 12259  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12260  010AD0  0ED6               	movlw	-42
 12261  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12262  010AD8  0ED7               	movlw	-41
 12263  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12264                           
 12265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12266                           ;stkvar	_nmode @ sp[(-56)+55]
 12267  010AE0  0EFF               	movlw	-1
 12268  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 12269  010AE8  0E65               	movlw	101
 12270  010AEA  1835               	xorwf	btemp^0,w,c
 12271  010AEC  B4D8               	btfsc	status,2,c
 12272  010AEE  D011               	goto	l9539
 12273                           
 12274                           ;stkvar	_e @ sp[(-56)+34]
 12275                           ;stkvar	_ne @ sp[(-56)+46]
 12276  010AF0  0EEA               	movlw	-22
 12277  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 12278  010AF8  0EF6               	movlw	-10
 12279  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12280  010B00  0EEB               	movlw	-21
 12281  010B02  006F FF8C  F035    	movff	plusw1,btemp
 12282  010B08  0EF7               	movlw	-9
 12283  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12284  010B10  D004               	goto	l1851
 12285  010B12                     l9539:
 12286                           
 12287                           ;stkvar	_ne @ sp[(-56)+46]
 12288  010B12  0EF6               	movlw	-10
 12289  010B14  6AE3               	clrf	plusw1,c
 12290  010B16  0EF7               	movlw	-9
 12291  010B18  6AE3               	clrf	plusw1,c
 12292  010B1A                     l1851:
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12295                           ;stkvar	_pp @ sp[(-56)+50]
 12296  010B1A  0EFA               	movlw	-6
 12297  010B1C  6AE3               	clrf	plusw1,c
 12298  010B1E  0EFB               	movlw	-5
 12299  010B20  6AE3               	clrf	plusw1,c
 12300                           
 12301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12302                           ;stkvar	_t @ sp[(-56)+52]
 12303  010B22  0EFC               	movlw	-4
 12304  010B24  6AE3               	clrf	plusw1,c
 12305  010B26  0EFD               	movlw	-3
 12306  010B28  6AE3               	clrf	plusw1,c
 12307                           
 12308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12309                           ;stkvar	_i @ sp[(-56)+36]
 12310  010B2A  0EEC               	movlw	-20
 12311  010B2C  6AE3               	clrf	plusw1,c
 12312  010B2E  0EED               	movlw	-19
 12313  010B30  6AE3               	clrf	plusw1,c
 12314                           
 12315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12316  010B32  D1B7               	goto	l9591
 12317  010B34                     l9541:
 12318                           
 12319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12320                           ;stkvar	_u @ sp[(-56)+12]
 12321  010B34  0ED4               	movlw	-44
 12322  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12326                           
 12327                           ;stkvar	_h @ sp[(-60)+24]
 12328  010B4E  0EDC               	movlw	-36
 12329  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12330  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12331  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  010B68  ECEB  F098         	call	___fldiv	;wreg free
 12334  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 12335  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12336  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12337  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12338  010B84  ECC5  F0A3         	call	_floorf	;wreg free
 12339                           
 12340                           ;stkvar	_l @ sp[(-56)+20]
 12341  010B88  0EDC               	movlw	-36
 12342  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12343  010B90  0EDD               	movlw	-35
 12344  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12345  010B98  0EDE               	movlw	-34
 12346  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12347  010BA0  0EDF               	movlw	-33
 12348  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12349                           
 12350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12351                           ;stkvar	_l @ sp[(-56)+20]
 12352  010BA8  0EDC               	movlw	-36
 12353  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12354  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12355  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12357  010BC2  EC10  F0B3         	call	___fltol	;wreg free
 12358  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 12359  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12360                           
 12361                           ;stkvar	_d @ sp[(-56)+44]
 12362  010BD2  0EF4               	movlw	-12
 12363  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12364  010BDA  0EF5               	movlw	-11
 12365  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12366                           
 12367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12368  010BE2  B822               	btfsc	_flags^0,4,c
 12369  010BE4  D026               	goto	l9555
 12370                           
 12371                           ;stkvar	_d @ sp[(-56)+44]
 12372  010BE6  0EF4               	movlw	-12
 12373  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 12374  010BEE  0EF5               	movlw	-11
 12375  010BF0  50E3               	movf	plusw1,w,c
 12376  010BF2  1035               	iorwf	btemp^0,w,c
 12377  010BF4  A4D8               	btfss	status,2,c
 12378  010BF6  D01D               	goto	l9555
 12379                           
 12380                           ;stkvar	_mode @ sp[(-56)+54]
 12381  010BF8  0EFE               	movlw	-2
 12382  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 12383  010C00  0E67               	movlw	103
 12384  010C02  1835               	xorwf	btemp^0,w,c
 12385  010C04  A4D8               	btfss	status,2,c
 12386  010C06  D015               	goto	l9555
 12387                           
 12388                           ;stkvar	_ne @ sp[(-56)+46]
 12389  010C08  0EF7               	movlw	-9
 12390  010C0A  AEE3               	btfss	plusw1,7,c
 12391  010C0C  D012               	goto	l9555
 12392                           
 12393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12394                           ;stkvar	_t @ sp[(-56)+52]
 12395  010C0E  0EFC               	movlw	-4
 12396  010C10  50E3               	movf	plusw1,w,c
 12397  010C12  0F01               	addlw	1
 12398  010C14  6E35               	movwf	btemp^0,c
 12399  010C16  0EFC               	movlw	-4
 12400  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 12401  010C1E  6A35               	clrf	btemp^0,c
 12402  010C20  0EFD               	movlw	-3
 12403  010C22  50E3               	movf	plusw1,w,c
 12404  010C24  2035               	addwfc	btemp^0,w,c
 12405  010C26  6E35               	movwf	btemp^0,c
 12406  010C28  0EFD               	movlw	-3
 12407  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12408                           
 12409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12410  010C30  D0AF               	goto	l9583
 12411  010C32                     l9555:
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12414                           ;stkvar	_pp @ sp[(-56)+50]
 12415  010C32  0EFA               	movlw	-6
 12416  010C34  006F FF8C  F035    	movff	plusw1,btemp
 12417  010C3A  0EFB               	movlw	-5
 12418  010C3C  50E3               	movf	plusw1,w,c
 12419  010C3E  1035               	iorwf	btemp^0,w,c
 12420  010C40  A4D8               	btfss	status,2,c
 12421  010C42  D070               	goto	l9575
 12422                           
 12423                           ;stkvar	_ne @ sp[(-56)+46]
 12424  010C44  0EF7               	movlw	-9
 12425  010C46  AEE3               	btfss	plusw1,7,c
 12426  010C48  D06D               	goto	l9575
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12429                           ;stkvar	_n @ sp[(-56)+32]
 12430  010C4A  0EE8               	movlw	-24
 12431  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12432  010C52  0EE9               	movlw	-23
 12433  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 12434  010C5A  0EAC               	movlw	low _dbuf
 12435  010C5C  243F               	addwf	(btemp+10)^0,w,c
 12436  010C5E  6ED9               	movwf	fsr2l,c
 12437  010C60  0E02               	movlw	high _dbuf
 12438  010C62  2040               	addwfc	(btemp+11)^0,w,c
 12439  010C64  6EDA               	movwf	fsr2h,c
 12440  010C66  0E2E               	movlw	46
 12441  010C68  6EDF               	movwf	indf2,c
 12442                           
 12443                           ;stkvar	_n @ sp[(-56)+32]
 12444  010C6A  0EE8               	movlw	-24
 12445  010C6C  50E3               	movf	plusw1,w,c
 12446  010C6E  0F01               	addlw	1
 12447  010C70  6E35               	movwf	btemp^0,c
 12448  010C72  0EE8               	movlw	-24
 12449  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 12450  010C7A  6A35               	clrf	btemp^0,c
 12451  010C7C  0EE9               	movlw	-23
 12452  010C7E  50E3               	movf	plusw1,w,c
 12453  010C80  2035               	addwfc	btemp^0,w,c
 12454  010C82  6E35               	movwf	btemp^0,c
 12455  010C84  0EE9               	movlw	-23
 12456  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 12457                           
 12458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12459                           ;stkvar	_w @ sp[(-56)+38]
 12460  010C8C  50E1               	movf	fsr1l,w,c
 12461  010C8E  0FEE               	addlw	-18
 12462  010C90  6ED9               	movwf	fsr2l,c
 12463  010C92  50E2               	movf	fsr1h,w,c
 12464  010C94  6EDA               	movwf	fsr2h,c
 12465  010C96  0EFF               	movlw	255
 12466  010C98  22DA               	addwfc	fsr2h,f,c
 12467  010C9A  06DE               	decf	postinc2,f,c
 12468  010C9C  0E00               	movlw	0
 12469  010C9E  5ADD               	subwfb	postdec2,f,c
 12470                           
 12471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12472  010CA0  0E01               	movlw	1
 12473  010CA2  6E3F               	movwf	(btemp+10)^0,c
 12474  010CA4  0E00               	movlw	0
 12475  010CA6  6E40               	movwf	(btemp+11)^0,c
 12476                           
 12477                           ;stkvar	_pp @ sp[(-56)+50]
 12478  010CA8  0EFA               	movlw	-6
 12479  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12480  010CB0  0EFB               	movlw	-5
 12481  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 12482  010CB8  D035               	goto	l9575
 12483  010CBA                     l9567:
 12484                           
 12485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12486                           ;stkvar	_n @ sp[(-56)+32]
 12487  010CBA  0EE8               	movlw	-24
 12488  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12489  010CC2  0EE9               	movlw	-23
 12490  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12491  010CCA  0EAC               	movlw	low _dbuf
 12492  010CCC  243F               	addwf	(btemp+10)^0,w,c
 12493  010CCE  6ED9               	movwf	fsr2l,c
 12494  010CD0  0E02               	movlw	high _dbuf
 12495  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 12496  010CD4  6EDA               	movwf	fsr2h,c
 12497  010CD6  0E30               	movlw	48
 12498  010CD8  6EDF               	movwf	indf2,c
 12499                           
 12500                           ;stkvar	_n @ sp[(-56)+32]
 12501  010CDA  0EE8               	movlw	-24
 12502  010CDC  50E3               	movf	plusw1,w,c
 12503  010CDE  0F01               	addlw	1
 12504  010CE0  6E35               	movwf	btemp^0,c
 12505  010CE2  0EE8               	movlw	-24
 12506  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12507  010CEA  6A35               	clrf	btemp^0,c
 12508  010CEC  0EE9               	movlw	-23
 12509  010CEE  50E3               	movf	plusw1,w,c
 12510  010CF0  2035               	addwfc	btemp^0,w,c
 12511  010CF2  6E35               	movwf	btemp^0,c
 12512  010CF4  0EE9               	movlw	-23
 12513  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12516                           ;stkvar	_w @ sp[(-56)+38]
 12517  010CFC  50E1               	movf	fsr1l,w,c
 12518  010CFE  0FEE               	addlw	-18
 12519  010D00  6ED9               	movwf	fsr2l,c
 12520  010D02  50E2               	movf	fsr1h,w,c
 12521  010D04  6EDA               	movwf	fsr2h,c
 12522  010D06  0EFF               	movlw	255
 12523  010D08  22DA               	addwfc	fsr2h,f,c
 12524  010D0A  06DE               	decf	postinc2,f,c
 12525  010D0C  0E00               	movlw	0
 12526  010D0E  5ADD               	subwfb	postdec2,f,c
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12529                           ;stkvar	_t @ sp[(-56)+52]
 12530  010D10  50E1               	movf	fsr1l,w,c
 12531  010D12  0FFC               	addlw	-4
 12532  010D14  6ED9               	movwf	fsr2l,c
 12533  010D16  50E2               	movf	fsr1h,w,c
 12534  010D18  6EDA               	movwf	fsr2h,c
 12535  010D1A  0EFF               	movlw	255
 12536  010D1C  22DA               	addwfc	fsr2h,f,c
 12537  010D1E  06DE               	decf	postinc2,f,c
 12538  010D20  0E00               	movlw	0
 12539  010D22  5ADD               	subwfb	postdec2,f,c
 12540  010D24                     l9575:
 12541                           
 12542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12543                           ;stkvar	_t @ sp[(-56)+52]
 12544  010D24  0EFC               	movlw	-4
 12545  010D26  006F FF8C  F035    	movff	plusw1,btemp
 12546  010D2C  0EFD               	movlw	-3
 12547  010D2E  50E3               	movf	plusw1,w,c
 12548  010D30  1035               	iorwf	btemp^0,w,c
 12549  010D32  A4D8               	btfss	status,2,c
 12550  010D34  D7C2               	goto	l9567
 12551                           
 12552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12553                           ;stkvar	_n @ sp[(-56)+32]
 12554  010D36  0EE8               	movlw	-24
 12555  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12556  010D3E  0EE9               	movlw	-23
 12557  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 12558  010D46  0EAC               	movlw	low _dbuf
 12559  010D48  243F               	addwf	(btemp+10)^0,w,c
 12560  010D4A  6ED9               	movwf	fsr2l,c
 12561  010D4C  0E02               	movlw	high _dbuf
 12562  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 12563  010D50  6EDA               	movwf	fsr2h,c
 12564                           
 12565                           ;stkvar	_d @ sp[(-56)+44]
 12566  010D52  0EF4               	movlw	-12
 12567  010D54  50E3               	movf	plusw1,w,c
 12568  010D56  0F30               	addlw	48
 12569  010D58  6EDF               	movwf	indf2,c
 12570                           
 12571                           ;stkvar	_n @ sp[(-56)+32]
 12572  010D5A  0EE8               	movlw	-24
 12573  010D5C  50E3               	movf	plusw1,w,c
 12574  010D5E  0F01               	addlw	1
 12575  010D60  6E35               	movwf	btemp^0,c
 12576  010D62  0EE8               	movlw	-24
 12577  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 12578  010D6A  6A35               	clrf	btemp^0,c
 12579  010D6C  0EE9               	movlw	-23
 12580  010D6E  50E3               	movf	plusw1,w,c
 12581  010D70  2035               	addwfc	btemp^0,w,c
 12582  010D72  6E35               	movwf	btemp^0,c
 12583  010D74  0EE9               	movlw	-23
 12584  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 12585                           
 12586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12587                           ;stkvar	_w @ sp[(-56)+38]
 12588  010D7C  50E1               	movf	fsr1l,w,c
 12589  010D7E  0FEE               	addlw	-18
 12590  010D80  6ED9               	movwf	fsr2l,c
 12591  010D82  50E2               	movf	fsr1h,w,c
 12592  010D84  6EDA               	movwf	fsr2h,c
 12593  010D86  0EFF               	movlw	255
 12594  010D88  22DA               	addwfc	fsr2h,f,c
 12595  010D8A  06DE               	decf	postinc2,f,c
 12596  010D8C  0E00               	movlw	0
 12597  010D8E  5ADD               	subwfb	postdec2,f,c
 12598  010D90                     l9583:
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12601                           ;stkvar	_u @ sp[(-56)+12]
 12602  010D90  0ED4               	movlw	-44
 12603  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12604  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12605  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12606  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12607                           
 12608                           ;stkvar	_l @ sp[(-60)+20]
 12609  010DAA  0ED8               	movlw	-40
 12610  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12611  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12612  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12613  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12614  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12615  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 12616  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12617  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12618  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12619                           
 12620                           ;stkvar	_h @ sp[(-60)+24]
 12621  010DE0  0EDC               	movlw	-36
 12622  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12623  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12624  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12625  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12626  010DFA  EC4E  F0C1         	call	___flsub	;wreg free
 12627                           
 12628                           ;stkvar	_h @ sp[(-56)+24]
 12629  010DFE  0EE0               	movlw	-32
 12630  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 12631  010E06  0EE1               	movlw	-31
 12632  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12633  010E0E  0EE2               	movlw	-30
 12634  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12635  010E16  0EE3               	movlw	-29
 12636  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12637                           
 12638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12639  010E1E  0E00               	movlw	0
 12640  010E20  6EE6               	movwf	postinc1,c
 12641  010E22  0E00               	movlw	0
 12642  010E24  6EE6               	movwf	postinc1,c
 12643  010E26  0E20               	movlw	32
 12644  010E28  6EE6               	movwf	postinc1,c
 12645  010E2A  0E41               	movlw	65
 12646  010E2C  6EE6               	movwf	postinc1,c
 12647                           
 12648                           ;stkvar	_u @ sp[(-60)+12]
 12649  010E2E  0ED0               	movlw	-48
 12650  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12651  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12652  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12654  010E48  ECEB  F098         	call	___fldiv	;wreg free
 12655                           
 12656                           ;stkvar	_u @ sp[(-56)+12]
 12657  010E4C  0ED4               	movlw	-44
 12658  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12659  010E54  0ED5               	movlw	-43
 12660  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12661  010E5C  0ED6               	movlw	-42
 12662  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12663  010E64  0ED7               	movlw	-41
 12664  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12665                           
 12666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12667                           ;stkvar	_ne @ sp[(-56)+46]
 12668  010E6C  50E1               	movf	fsr1l,w,c
 12669  010E6E  0FF6               	addlw	-10
 12670  010E70  6ED9               	movwf	fsr2l,c
 12671  010E72  50E2               	movf	fsr1h,w,c
 12672  010E74  6EDA               	movwf	fsr2h,c
 12673  010E76  0EFF               	movlw	255
 12674  010E78  22DA               	addwfc	fsr2h,f,c
 12675  010E7A  06DE               	decf	postinc2,f,c
 12676  010E7C  0E00               	movlw	0
 12677  010E7E  5ADD               	subwfb	postdec2,f,c
 12678                           
 12679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12680                           ;stkvar	_i @ sp[(-56)+36]
 12681  010E80  0EEC               	movlw	-20
 12682  010E82  50E3               	movf	plusw1,w,c
 12683  010E84  0F01               	addlw	1
 12684  010E86  6E35               	movwf	btemp^0,c
 12685  010E88  0EEC               	movlw	-20
 12686  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12687  010E90  6A35               	clrf	btemp^0,c
 12688  010E92  0EED               	movlw	-19
 12689  010E94  50E3               	movf	plusw1,w,c
 12690  010E96  2035               	addwfc	btemp^0,w,c
 12691  010E98  6E35               	movwf	btemp^0,c
 12692  010E9A  0EED               	movlw	-19
 12693  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12694  010EA2                     l9591:
 12695                           
 12696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12697                           ;stkvar	_m @ sp[(-56)+48]
 12698                           ;stkvar	_i @ sp[(-56)+36]
 12699  010EA2  50E1               	movf	fsr1l,w,c
 12700  010EA4  0FEC               	addlw	-20
 12701  010EA6  6ED9               	movwf	fsr2l,c
 12702  010EA8  50E2               	movf	fsr1h,w,c
 12703  010EAA  6EDA               	movwf	fsr2h,c
 12704  010EAC  0EFF               	movlw	255
 12705  010EAE  22DA               	addwfc	fsr2h,f,c
 12706  010EB0  0EF8               	movlw	-8
 12707  010EB2  50E3               	movf	plusw1,w,c
 12708  010EB4  5CDE               	subwf	postinc2,w,c
 12709  010EB6  50DE               	movf	postinc2,w,c
 12710  010EB8  0A80               	xorlw	128
 12711  010EBA  6E35               	movwf	btemp^0,c
 12712  010EBC  0EF9               	movlw	-7
 12713  010EBE  50E3               	movf	plusw1,w,c
 12714  010EC0  0A80               	xorlw	128
 12715  010EC2  5835               	subwfb	btemp^0,w,c
 12716  010EC4  B0D8               	btfsc	status,0,c
 12717  010EC6  D00E               	goto	u9710
 12718                           
 12719                           ;stkvar	_n @ sp[(-56)+32]
 12720  010EC8  0EE9               	movlw	-23
 12721  010ECA  BEE3               	btfsc	plusw1,7,c
 12722  010ECC  D633               	goto	l9541
 12723  010ECE  0EE9               	movlw	-23
 12724  010ED0  50E3               	movf	plusw1,w,c
 12725  010ED2  E108               	bnz	u9710
 12726  010ED4  0EE8               	movlw	-24
 12727  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 12728  010EDC  0E4B               	movlw	75
 12729  010EDE  5E35               	subwf	btemp^0,f,c
 12730  010EE0  A0D8               	btfss	status,0,c
 12731  010EE2  D628               	goto	l9541
 12732  010EE4                     u9710:
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12735                           ;stkvar	_pp @ sp[(-56)+50]
 12736  010EE4  0EFA               	movlw	-6
 12737  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 12738  010EEC  0EFB               	movlw	-5
 12739  010EEE  50E3               	movf	plusw1,w,c
 12740  010EF0  1035               	iorwf	btemp^0,w,c
 12741  010EF2  B4D8               	btfsc	status,2,c
 12742  010EF4  A822               	btfss	_flags^0,4,c
 12743  010EF6  D021               	goto	l9603
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12746                           ;stkvar	_n @ sp[(-56)+32]
 12747  010EF8  0EE8               	movlw	-24
 12748  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12749  010F00  0EE9               	movlw	-23
 12750  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 12751  010F08  0EAC               	movlw	low _dbuf
 12752  010F0A  243F               	addwf	(btemp+10)^0,w,c
 12753  010F0C  6ED9               	movwf	fsr2l,c
 12754  010F0E  0E02               	movlw	high _dbuf
 12755  010F10  2040               	addwfc	(btemp+11)^0,w,c
 12756  010F12  6EDA               	movwf	fsr2h,c
 12757  010F14  0E2E               	movlw	46
 12758  010F16  6EDF               	movwf	indf2,c
 12759                           
 12760                           ;stkvar	_n @ sp[(-56)+32]
 12761  010F18  0EE8               	movlw	-24
 12762  010F1A  50E3               	movf	plusw1,w,c
 12763  010F1C  0F01               	addlw	1
 12764  010F1E  6E35               	movwf	btemp^0,c
 12765  010F20  0EE8               	movlw	-24
 12766  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 12767  010F28  6A35               	clrf	btemp^0,c
 12768  010F2A  0EE9               	movlw	-23
 12769  010F2C  50E3               	movf	plusw1,w,c
 12770  010F2E  2035               	addwfc	btemp^0,w,c
 12771  010F30  6E35               	movwf	btemp^0,c
 12772  010F32  0EE9               	movlw	-23
 12773  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 12774  010F3A                     l9603:
 12775                           
 12776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12777                           ;stkvar	_n @ sp[(-56)+32]
 12778  010F3A  0EE8               	movlw	-24
 12779  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12780  010F42  0EE9               	movlw	-23
 12781  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 12782  010F4A  0EAC               	movlw	low _dbuf
 12783  010F4C  243F               	addwf	(btemp+10)^0,w,c
 12784  010F4E  6ED9               	movwf	fsr2l,c
 12785  010F50  0E02               	movlw	high _dbuf
 12786  010F52  2040               	addwfc	(btemp+11)^0,w,c
 12787  010F54  6EDA               	movwf	fsr2h,c
 12788  010F56  0E00               	movlw	0
 12789  010F58  6EDF               	movwf	indf2,c
 12790                           
 12791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12792                           ;stkvar	_nmode @ sp[(-56)+55]
 12793  010F5A  0EFF               	movlw	-1
 12794  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 12795  010F62  0E65               	movlw	101
 12796  010F64  1835               	xorwf	btemp^0,w,c
 12797  010F66  A4D8               	btfss	status,2,c
 12798  010F68  EF16  F081         	goto	l9407
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12801  010F6C  0E4F               	movlw	79
 12802  010F6E  6E3F               	movwf	(btemp+10)^0,c
 12803  010F70  0E00               	movlw	0
 12804  010F72  6E40               	movwf	(btemp+11)^0,c
 12805                           
 12806                           ;stkvar	_i @ sp[(-56)+36]
 12807  010F74  0EEC               	movlw	-20
 12808  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12809  010F7C  0EED               	movlw	-19
 12810  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12811                           
 12812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12813                           ;stkvar	_i @ sp[(-56)+36]
 12814  010F84  0EEC               	movlw	-20
 12815  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12816  010F8C  0EED               	movlw	-19
 12817  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12818  010F94  0EAC               	movlw	low _dbuf
 12819  010F96  243F               	addwf	(btemp+10)^0,w,c
 12820  010F98  6ED9               	movwf	fsr2l,c
 12821  010F9A  0E02               	movlw	high _dbuf
 12822  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 12823  010F9E  6EDA               	movwf	fsr2h,c
 12824  010FA0  0E00               	movlw	0
 12825  010FA2  6EDF               	movwf	indf2,c
 12826                           
 12827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12828                           ;stkvar	_sign @ sp[(-56)+42]
 12829  010FA4  0EF2               	movlw	-14
 12830  010FA6  6AE3               	clrf	plusw1,c
 12831  010FA8  0EF3               	movlw	-13
 12832  010FAA  6AE3               	clrf	plusw1,c
 12833                           
 12834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12835                           ;stkvar	_e @ sp[(-56)+34]
 12836  010FAC  0EEB               	movlw	-21
 12837  010FAE  AEE3               	btfss	plusw1,7,c
 12838  010FB0  D012               	goto	l9617
 12839                           
 12840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12841  010FB2  0E01               	movlw	1
 12842  010FB4  6E3F               	movwf	(btemp+10)^0,c
 12843  010FB6  0E00               	movlw	0
 12844  010FB8  6E40               	movwf	(btemp+11)^0,c
 12845                           
 12846                           ;stkvar	_sign @ sp[(-56)+42]
 12847  010FBA  0EF2               	movlw	-14
 12848  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12849  010FC2  0EF3               	movlw	-13
 12850  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 12851                           
 12852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12853                           ;stkvar	_e @ sp[(-56)+34]
 12854                           ;stkvar	_e @ sp[(-56)+34]
 12855  010FCA  0EEA               	movlw	-22
 12856  010FCC  6CE3               	negf	plusw1,c
 12857  010FCE  0EEB               	movlw	-21
 12858  010FD0  1EE3               	comf	plusw1,f,c
 12859  010FD2  B0D8               	btfsc	status,0,c
 12860  010FD4  2AE3               	incf	plusw1,f,c
 12861  010FD6                     l9617:
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12864  010FD6  0E02               	movlw	2
 12865  010FD8  6E3F               	movwf	(btemp+10)^0,c
 12866  010FDA  0E00               	movlw	0
 12867  010FDC  6E40               	movwf	(btemp+11)^0,c
 12868                           
 12869                           ;stkvar	_p @ sp[(-56)+40]
 12870  010FDE  0EF0               	movlw	-16
 12871  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12872  010FE6  0EF1               	movlw	-15
 12873  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 12874                           
 12875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12876  010FEE  D051               	goto	l9629
 12877  010FF0                     l9619:
 12878                           
 12879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12880                           ;stkvar	_i @ sp[(-56)+36]
 12881  010FF0  50E1               	movf	fsr1l,w,c
 12882  010FF2  0FEC               	addlw	-20
 12883  010FF4  6ED9               	movwf	fsr2l,c
 12884  010FF6  50E2               	movf	fsr1h,w,c
 12885  010FF8  6EDA               	movwf	fsr2h,c
 12886  010FFA  0EFF               	movlw	255
 12887  010FFC  22DA               	addwfc	fsr2h,f,c
 12888  010FFE  06DE               	decf	postinc2,f,c
 12889  011000  0E00               	movlw	0
 12890  011002  5ADD               	subwfb	postdec2,f,c
 12891                           
 12892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12893                           ;stkvar	_i @ sp[(-56)+36]
 12894  011004  0EEC               	movlw	-20
 12895  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 12896  01100C  0EED               	movlw	-19
 12897  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 12898  011014  0EAC               	movlw	low _dbuf
 12899  011016  243F               	addwf	(btemp+10)^0,w,c
 12900  011018  6ED9               	movwf	fsr2l,c
 12901  01101A  0E02               	movlw	high _dbuf
 12902  01101C  2040               	addwfc	(btemp+11)^0,w,c
 12903  01101E  6EDA               	movwf	fsr2h,c
 12904  011020  0E0A               	movlw	10
 12905  011022  6EE6               	movwf	postinc1,c
 12906  011024  0E00               	movlw	0
 12907  011026  6EE6               	movwf	postinc1,c
 12908                           
 12909                           ;stkvar	_e @ sp[(-58)+34]
 12910  011028  0EE8               	movlw	-24
 12911  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12912  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12913  011036  ECEA  F0B6         	call	___awmod	;wreg free
 12914  01103A  5035               	movf	btemp^0,w,c
 12915  01103C  0F30               	addlw	48
 12916  01103E  6EDF               	movwf	indf2,c
 12917                           
 12918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12919  011040  0E0A               	movlw	10
 12920  011042  6EE6               	movwf	postinc1,c
 12921  011044  0E00               	movlw	0
 12922  011046  6EE6               	movwf	postinc1,c
 12923                           
 12924                           ;stkvar	_e @ sp[(-58)+34]
 12925  011048  0EE8               	movlw	-24
 12926  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12927  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12928  011056  EC7A  F0B4         	call	___awdiv	;wreg free
 12929                           
 12930                           ;stkvar	_e @ sp[(-56)+34]
 12931  01105A  0EEA               	movlw	-22
 12932  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12933  011062  0EEB               	movlw	-21
 12934  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12935                           
 12936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12937                           ;stkvar	_p @ sp[(-56)+40]
 12938  01106A  50E1               	movf	fsr1l,w,c
 12939  01106C  0FF0               	addlw	-16
 12940  01106E  6ED9               	movwf	fsr2l,c
 12941  011070  50E2               	movf	fsr1h,w,c
 12942  011072  6EDA               	movwf	fsr2h,c
 12943  011074  0EFF               	movlw	255
 12944  011076  22DA               	addwfc	fsr2h,f,c
 12945  011078  06DE               	decf	postinc2,f,c
 12946  01107A  0E00               	movlw	0
 12947  01107C  5ADD               	subwfb	postdec2,f,c
 12948                           
 12949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12950                           ;stkvar	_w @ sp[(-56)+38]
 12951  01107E  50E1               	movf	fsr1l,w,c
 12952  011080  0FEE               	addlw	-18
 12953  011082  6ED9               	movwf	fsr2l,c
 12954  011084  50E2               	movf	fsr1h,w,c
 12955  011086  6EDA               	movwf	fsr2h,c
 12956  011088  0EFF               	movlw	255
 12957  01108A  22DA               	addwfc	fsr2h,f,c
 12958  01108C  06DE               	decf	postinc2,f,c
 12959  01108E  0E00               	movlw	0
 12960  011090  5ADD               	subwfb	postdec2,f,c
 12961  011092                     l9629:
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12964                           ;stkvar	_e @ sp[(-56)+34]
 12965  011092  0EEA               	movlw	-22
 12966  011094  006F FF8C  F035    	movff	plusw1,btemp
 12967  01109A  0EEB               	movlw	-21
 12968  01109C  50E3               	movf	plusw1,w,c
 12969  01109E  1035               	iorwf	btemp^0,w,c
 12970  0110A0  A4D8               	btfss	status,2,c
 12971  0110A2  D7A6               	goto	l9619
 12972                           
 12973                           ;stkvar	_p @ sp[(-56)+40]
 12974  0110A4  0EF1               	movlw	-15
 12975  0110A6  BEE3               	btfsc	plusw1,7,c
 12976  0110A8  D007               	goto	u9770
 12977  0110AA  0EF1               	movlw	-15
 12978  0110AC  50E3               	movf	plusw1,w,c
 12979  0110AE  E1A0               	bnz	l9619
 12980  0110B0  0EF0               	movlw	-16
 12981  0110B2  04E3               	decf	plusw1,w,c
 12982  0110B4  B0D8               	btfsc	status,0,c
 12983  0110B6  D79C               	goto	l9619
 12984  0110B8                     u9770:
 12985                           
 12986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12987                           ;stkvar	_i @ sp[(-56)+36]
 12988  0110B8  50E1               	movf	fsr1l,w,c
 12989  0110BA  0FEC               	addlw	-20
 12990  0110BC  6ED9               	movwf	fsr2l,c
 12991  0110BE  50E2               	movf	fsr1h,w,c
 12992  0110C0  6EDA               	movwf	fsr2h,c
 12993  0110C2  0EFF               	movlw	255
 12994  0110C4  22DA               	addwfc	fsr2h,f,c
 12995  0110C6  06DE               	decf	postinc2,f,c
 12996  0110C8  0E00               	movlw	0
 12997  0110CA  5ADD               	subwfb	postdec2,f,c
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13000                           ;stkvar	_sign @ sp[(-56)+42]
 13001  0110CC  0EF2               	movlw	-14
 13002  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 13003  0110D4  0EF3               	movlw	-13
 13004  0110D6  50E3               	movf	plusw1,w,c
 13005  0110D8  1035               	iorwf	btemp^0,w,c
 13006  0110DA  A4D8               	btfss	status,2,c
 13007  0110DC  D002               	goto	l9639
 13008  0110DE  0E2B               	movlw	43
 13009  0110E0  D001               	goto	L13
 13010  0110E2                     l9639:
 13011  0110E2  0E2D               	movlw	45
 13012  0110E4                     L13:
 13013  0110E4  6E3F               	movwf	(btemp+10)^0,c
 13014  0110E6  0E00               	movlw	0
 13015  0110E8  6E40               	movwf	(btemp+11)^0,c
 13016                           
 13017                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13018  0110EA  0ECC               	movlw	-52
 13019  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13020  0110F2  0ECD               	movlw	-51
 13021  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13022                           
 13023                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13024                           ;stkvar	_i @ sp[(-56)+36]
 13025  0110FA  0EEC               	movlw	-20
 13026  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13027  011102  0EED               	movlw	-19
 13028  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 13029  01110A  0EAC               	movlw	low _dbuf
 13030  01110C  243F               	addwf	(btemp+10)^0,w,c
 13031  01110E  6ED9               	movwf	fsr2l,c
 13032  011110  0E02               	movlw	high _dbuf
 13033  011112  2040               	addwfc	(btemp+11)^0,w,c
 13034  011114  6EDA               	movwf	fsr2h,c
 13035  011116  0ECC               	movlw	-52
 13036  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13037                           
 13038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13039                           ;stkvar	_w @ sp[(-56)+38]
 13040  01111E  50E1               	movf	fsr1l,w,c
 13041  011120  0FEE               	addlw	-18
 13042  011122  6ED9               	movwf	fsr2l,c
 13043  011124  50E2               	movf	fsr1h,w,c
 13044  011126  6EDA               	movwf	fsr2h,c
 13045  011128  0EFF               	movlw	255
 13046  01112A  22DA               	addwfc	fsr2h,f,c
 13047  01112C  06DE               	decf	postinc2,f,c
 13048  01112E  0E00               	movlw	0
 13049  011130  5ADD               	subwfb	postdec2,f,c
 13050                           
 13051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13052                           ;stkvar	_i @ sp[(-56)+36]
 13053  011132  50E1               	movf	fsr1l,w,c
 13054  011134  0FEC               	addlw	-20
 13055  011136  6ED9               	movwf	fsr2l,c
 13056  011138  50E2               	movf	fsr1h,w,c
 13057  01113A  6EDA               	movwf	fsr2h,c
 13058  01113C  0EFF               	movlw	255
 13059  01113E  22DA               	addwfc	fsr2h,f,c
 13060  011140  06DE               	decf	postinc2,f,c
 13061  011142  0E00               	movlw	0
 13062  011144  5ADD               	subwfb	postdec2,f,c
 13063  011146  0EBF               	movlw	191
 13064  011148  6E3F               	movwf	(btemp+10)^0,c
 13065  01114A  0EFF               	movlw	255
 13066  01114C  6E40               	movwf	(btemp+11)^0,c
 13067                           
 13068                           ;stkvar	_c @ sp[(-56)+-7]
 13069  01114E  0EC1               	movlw	-63
 13070  011150  50E3               	movf	plusw1,w,c
 13071  011152  6E3D               	movwf	(btemp+8)^0,c
 13072  011154  6A3E               	clrf	(btemp+9)^0,c
 13073  011156  503F               	movf	(btemp+10)^0,w,c
 13074  011158  263D               	addwf	(btemp+8)^0,f,c
 13075  01115A  5040               	movf	(btemp+11)^0,w,c
 13076  01115C  223E               	addwfc	(btemp+9)^0,f,c
 13077  01115E  503E               	movf	(btemp+9)^0,w,c
 13078  011160  E106               	bnz	u9790
 13079  011162  0E1A               	movlw	26
 13080  011164  5C3D               	subwf	(btemp+8)^0,w,c
 13081  011166  B0D8               	btfsc	status,0,c
 13082  011168  D002               	goto	u9790
 13083  01116A  0E01               	movlw	1
 13084  01116C  D001               	goto	u9800
 13085  01116E                     u9790:
 13086  01116E  0E00               	movlw	0
 13087  011170                     u9800:
 13088  011170  6E3F               	movwf	(btemp+10)^0,c
 13089  011172  6A40               	clrf	(btemp+11)^0,c
 13090                           
 13091                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13092  011174  0EC8               	movlw	-56
 13093  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13094  01117C  0EC9               	movlw	-55
 13095  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13096                           
 13097                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13098  011184  0EC8               	movlw	-56
 13099  011186  006F FF8C  F035    	movff	plusw1,btemp
 13100  01118C  0EC9               	movlw	-55
 13101  01118E  50E3               	movf	plusw1,w,c
 13102  011190  1035               	iorwf	btemp^0,w,c
 13103  011192  A4D8               	btfss	status,2,c
 13104  011194  D002               	goto	l9655
 13105  011196  0E65               	movlw	101
 13106  011198  D001               	goto	L14
 13107  01119A                     l9655:
 13108  01119A  0E45               	movlw	69
 13109  01119C                     L14:
 13110  01119C  6E3F               	movwf	(btemp+10)^0,c
 13111  01119E  0E00               	movlw	0
 13112  0111A0  6E40               	movwf	(btemp+11)^0,c
 13113                           
 13114                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13115  0111A2  0ECA               	movlw	-54
 13116  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13117  0111AA  0ECB               	movlw	-53
 13118  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13119                           
 13120                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13121                           ;stkvar	_i @ sp[(-56)+36]
 13122  0111B2  0EEC               	movlw	-20
 13123  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13124  0111BA  0EED               	movlw	-19
 13125  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 13126  0111C2  0EAC               	movlw	low _dbuf
 13127  0111C4  243F               	addwf	(btemp+10)^0,w,c
 13128  0111C6  6ED9               	movwf	fsr2l,c
 13129  0111C8  0E02               	movlw	high _dbuf
 13130  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 13131  0111CC  6EDA               	movwf	fsr2h,c
 13132  0111CE  0ECA               	movlw	-54
 13133  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13134                           
 13135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13136                           ;stkvar	_w @ sp[(-56)+38]
 13137  0111D6  50E1               	movf	fsr1l,w,c
 13138  0111D8  0FEE               	addlw	-18
 13139  0111DA  6ED9               	movwf	fsr2l,c
 13140  0111DC  50E2               	movf	fsr1h,w,c
 13141  0111DE  6EDA               	movwf	fsr2h,c
 13142  0111E0  0EFF               	movlw	255
 13143  0111E2  22DA               	addwfc	fsr2h,f,c
 13144  0111E4  06DE               	decf	postinc2,f,c
 13145  0111E6  0E00               	movlw	0
 13146  0111E8  5ADD               	subwfb	postdec2,f,c
 13147                           
 13148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13149                           ;stkvar	_i @ sp[(-56)+36]
 13150  0111EA  0EEC               	movlw	-20
 13151  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13152  0111F2  0EED               	movlw	-19
 13153  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 13154  0111FA  0EAC               	movlw	low _dbuf
 13155  0111FC  243F               	addwf	(btemp+10)^0,w,c
 13156  0111FE  6E3D               	movwf	(btemp+8)^0,c
 13157  011200  0E02               	movlw	high _dbuf
 13158  011202  2040               	addwfc	(btemp+11)^0,w,c
 13159  011204  6E3E               	movwf	(btemp+9)^0,c
 13160  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 13161  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 13162                           
 13163                           ;stkvar	_n @ sp[(-58)+32]
 13164  011212  0EAC               	movlw	low _dbuf
 13165  011214  6E3F               	movwf	(btemp+10)^0,c
 13166  011216  0E02               	movlw	high _dbuf
 13167  011218  6E40               	movwf	(btemp+11)^0,c
 13168  01121A  0EE6               	movlw	-26
 13169  01121C  50E3               	movf	plusw1,w,c
 13170  01121E  263F               	addwf	(btemp+10)^0,f,c
 13171  011220  0EE7               	movlw	-25
 13172  011222  50E3               	movf	plusw1,w,c
 13173  011224  2240               	addwfc	(btemp+11)^0,f,c
 13174  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 13175  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 13176  011232  EC81  F0B9         	call	_strcpy	;wreg free
 13177  011236  EF16  F081         	goto	l9407
 13178  01123A                     l1807:
 13179                           
 13180                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13181  01123A  0EC1               	movlw	193
 13182  01123C  26E1               	addwf	fsr1l,f,c
 13183  01123E  0EFF               	movlw	255
 13184  011240  22E2               	addwfc	fsr1h,f,c
 13185  011242  0012               	return		;funcret
 13186  011244                     __end_of_efgtoa:
 13187                           	opt callstack 0
 13188                           
 13189 ;; *************** function _tolower *****************
 13190 ;; Defined at:
 13191 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;  c               2  [STACK] int 
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;		None
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  2  [STACK] int 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/4
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;Total ram usage:        0 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:    7
 13212 ;; This function calls:
 13213 ;;		_isupper
 13214 ;; This function is called by:
 13215 ;;		_efgtoa
 13216 ;;		_vfpfcnvrt
 13217 ;; This function uses a reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text45
 13221  017C16                     __ptext45:
 13222                           	opt callstack 0
 13223  017C16                     _tolower:
 13224                           	opt callstack 0
 13225                           
 13226                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13227  017C16  52E6               	movf	postinc1,f,c
 13228  017C18  52E6               	movf	postinc1,f,c
 13229                           
 13230                           ;stkvar	_c @ sp[(-2)+-2]
 13231                           
 13232                           ;incstack = 0
 13233  017C1A  0EFC               	movlw	-4
 13234  017C1C  50E3               	movf	plusw1,w,c
 13235  017C1E  0FBF               	addlw	191
 13236  017C20  6E3F               	movwf	(btemp+10)^0,c
 13237  017C22  0EFD               	movlw	-3
 13238  017C24  006F FF8C  F040    	movff	plusw1,btemp+11
 13239  017C2A  0EFF               	movlw	255
 13240  017C2C  2240               	addwfc	(btemp+11)^0,f,c
 13241  017C2E  5040               	movf	(btemp+11)^0,w,c
 13242  017C30  E106               	bnz	u5220
 13243  017C32  0E1A               	movlw	26
 13244  017C34  5C3F               	subwf	(btemp+10)^0,w,c
 13245  017C36  B0D8               	btfsc	status,0,c
 13246  017C38  D002               	goto	u5220
 13247  017C3A  0E01               	movlw	1
 13248  017C3C  D001               	goto	u5230
 13249  017C3E                     u5220:
 13250  017C3E  0E00               	movlw	0
 13251  017C40                     u5230:
 13252  017C40  6E3F               	movwf	(btemp+10)^0,c
 13253  017C42  6A40               	clrf	(btemp+11)^0,c
 13254                           
 13255                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13256  017C44  0EFE               	movlw	-2
 13257  017C46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13258  017C4C  0EFF               	movlw	-1
 13259  017C4E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13260                           
 13261                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13262  017C54  0EFE               	movlw	-2
 13263  017C56  006F FF8C  F035    	movff	plusw1,btemp
 13264  017C5C  0EFF               	movlw	-1
 13265  017C5E  50E3               	movf	plusw1,w,c
 13266  017C60  1035               	iorwf	btemp^0,w,c
 13267  017C62  B4D8               	btfsc	status,2,c
 13268  017C64  D00D               	goto	l6417
 13269                           
 13270                           ;stkvar	_c @ sp[(-2)+-2]
 13271  017C66  0EFC               	movlw	-4
 13272  017C68  006F FF8C  F035    	movff	plusw1,btemp
 13273  017C6E  0EFD               	movlw	-3
 13274  017C70  006F FF8C  F036    	movff	plusw1,btemp+1
 13275  017C76  0E20               	movlw	32
 13276  017C78  1235               	iorwf	btemp^0,f,c
 13277  017C7A  0E00               	movlw	0
 13278  017C7C  1236               	iorwf	(btemp+1)^0,f,c
 13279  017C7E  D008               	goto	l2853
 13280  017C80                     l6417:
 13281                           
 13282                           ;stkvar	_c @ sp[(-2)+-2]
 13283  017C80  0EFC               	movlw	-4
 13284  017C82  006F FF8C  F035    	movff	plusw1,btemp
 13285  017C88  0EFD               	movlw	-3
 13286  017C8A  006F FF8C  F036    	movff	plusw1,btemp+1
 13287  017C90                     l2853:
 13288                           
 13289                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13290  017C90  52E5               	movf	postdec1,f,c
 13291  017C92  52E5               	movf	postdec1,f,c
 13292  017C94  52E5               	movf	postdec1,f,c
 13293  017C96  52E5               	movf	postdec1,f,c
 13294  017C98  0012               	return		;funcret
 13295  017C9A                     __end_of_tolower:
 13296                           	opt callstack 0
 13297                           
 13298 ;; *************** function _isupper *****************
 13299 ;; Defined at:
 13300 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  c               2  [STACK] int 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  2  [STACK] int 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:    6
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		_efgtoa
 13325 ;;		_xtoa
 13326 ;;		_vfpfcnvrt
 13327 ;;		_tolower
 13328 ;; This function uses a reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text46
 13332  0186B4                     __ptext46:
 13333                           	opt callstack 0
 13334  0186B4                     _isupper:
 13335                           	opt callstack 17
 13336                           
 13337                           ;stkvar	_c @ sp[(0)+-2]
 13338                           
 13339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13340                           ;incstack = 0
 13341  0186B4  0EFE               	movlw	-2
 13342  0186B6  50E3               	movf	plusw1,w,c
 13343  0186B8  0FBF               	addlw	191
 13344  0186BA  6E3F               	movwf	(btemp+10)^0,c
 13345  0186BC  0EFF               	movlw	-1
 13346  0186BE  006F FF8C  F040    	movff	plusw1,btemp+11
 13347  0186C4  0EFF               	movlw	255
 13348  0186C6  2240               	addwfc	(btemp+11)^0,f,c
 13349  0186C8  5040               	movf	(btemp+11)^0,w,c
 13350  0186CA  E106               	bnz	u4620
 13351  0186CC  0E1A               	movlw	26
 13352  0186CE  5C3F               	subwf	(btemp+10)^0,w,c
 13353  0186D0  B0D8               	btfsc	status,0,c
 13354  0186D2  D002               	goto	u4620
 13355  0186D4  0E01               	movlw	1
 13356  0186D6  D001               	goto	u4630
 13357  0186D8                     u4620:
 13358  0186D8  0E00               	movlw	0
 13359  0186DA                     u4630:
 13360  0186DA  6E35               	movwf	btemp^0,c
 13361  0186DC  6A36               	clrf	(btemp+1)^0,c
 13362                           
 13363                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13364  0186DE  52E5               	movf	postdec1,f,c
 13365  0186E0  52E5               	movf	postdec1,f,c
 13366  0186E2  0012               	return		;funcret
 13367  0186E4                     __end_of_isupper:
 13368                           	opt callstack 0
 13369                           
 13370 ;; *************** function _strcpy *****************
 13371 ;; Defined at:
 13372 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13373 ;; Parameters:    Size  Location     Type
 13374 ;;  dest            2  [STACK] PTR unsigned char 
 13375 ;;		 -> dbuf(80), 
 13376 ;;  src             2  [STACK] PTR const unsigned char 
 13377 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13378 ;;		 -> dbuf(80), 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;  d               2  [STACK] PTR unsigned char 
 13381 ;;		 -> dbuf(80), 
 13382 ;;  s               2  [STACK] PTR const unsigned char 
 13383 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13384 ;;		 -> dbuf(80), 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  2  [STACK] PTR unsigned char 
 13387 ;; Registers used:
 13388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/4
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;Total ram usage:        0 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:    6
 13401 ;; This function calls:
 13402 ;;		Nothing
 13403 ;; This function is called by:
 13404 ;;		_efgtoa
 13405 ;; This function uses a reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text47
 13409  017302                     __ptext47:
 13410                           	opt callstack 0
 13411  017302                     _strcpy:
 13412                           	opt callstack 0
 13413                           
 13414                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13415  017302  52E6               	movf	postinc1,f,c
 13416  017304  52E6               	movf	postinc1,f,c
 13417  017306  52E6               	movf	postinc1,f,c
 13418  017308  52E6               	movf	postinc1,f,c
 13419                           
 13420                           ;stkvar	_src @ sp[(-4)+-4]
 13421                           
 13422                           ;incstack = 0
 13423  01730A  0EF8               	movlw	-8
 13424  01730C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13425  017312  0EF9               	movlw	-7
 13426  017314  006F FF8C  F040    	movff	plusw1,btemp+11
 13427                           
 13428                           ;stkvar	_s @ sp[(-4)+2]
 13429  01731A  0EFF               	movlw	-1
 13430  01731C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13431  017322  0EFE               	movlw	-2
 13432  017324  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13433                           
 13434                           ;stkvar	_dest @ sp[(-4)+-2]
 13435  01732A  0EFA               	movlw	-6
 13436  01732C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13437  017332  0EFB               	movlw	-5
 13438  017334  006F FF8C  F040    	movff	plusw1,btemp+11
 13439                           
 13440                           ;stkvar	_d @ sp[(-4)+0]
 13441  01733A  0EFD               	movlw	-3
 13442  01733C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13443  017342  0EFC               	movlw	-4
 13444  017344  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13445  01734A                     l9281:
 13446                           
 13447                           ;stkvar	_s @ sp[(-4)+2]
 13448  01734A  50E1               	movf	fsr1l,w,c
 13449  01734C  0FFE               	addlw	-2
 13450  01734E  6ED9               	movwf	fsr2l,c
 13451  017350  50E2               	movf	fsr1h,w,c
 13452  017352  6EDA               	movwf	fsr2h,c
 13453  017354  0EFF               	movlw	255
 13454  017356  22DA               	addwfc	fsr2h,f,c
 13455  017358  006F FF7C  F03F    	movff	indf2,btemp+10
 13456  01735E  0E01               	movlw	1
 13457  017360  26DE               	addwf	postinc2,f,c
 13458  017362  006F FF7C  F040    	movff	indf2,btemp+11
 13459  017368  0E00               	movlw	0
 13460  01736A  22DD               	addwfc	postdec2,f,c
 13461  01736C  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 13462  017372  0060  F103  FFF7   	movff	btemp+11,tblptrh
 13463  017378  0E00               	movlw	low (__mediumconst shr (0+16))
 13464  01737A  6EF8               	movwf	tblptru,c
 13465                           
 13466                           ;stkvar	_d @ sp[(-4)+0]
 13467  01737C  50E1               	movf	fsr1l,w,c
 13468  01737E  0FFC               	addlw	-4
 13469  017380  6ED9               	movwf	fsr2l,c
 13470  017382  50E2               	movf	fsr1h,w,c
 13471  017384  6EDA               	movwf	fsr2h,c
 13472  017386  0EFF               	movlw	255
 13473  017388  22DA               	addwfc	fsr2h,f,c
 13474  01738A  006F FF7C  F03F    	movff	indf2,btemp+10
 13475  017390  0E01               	movlw	1
 13476  017392  26DE               	addwf	postinc2,f,c
 13477  017394  006F FF7C  F040    	movff	indf2,btemp+11
 13478  01739A  0E00               	movlw	0
 13479  01739C  22DD               	addwfc	postdec2,f,c
 13480  01739E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 13481  0173A4  0060  F103  FFDA   	movff	btemp+11,fsr2h
 13482  0173AA  0E1F               	movlw	(high __ramtop+-1)
 13483  0173AC  64F7               	cpfsgt	tblptrh,c
 13484  0173AE  D003               	bra	u9107
 13485  0173B0  0008               	tblrd		*
 13486  0173B2  50F5               	movf	tablat,w,c
 13487  0173B4  D007               	bra	u9100
 13488  0173B6                     u9107:
 13489  0173B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13490  0173BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13491  0173C2  50EF               	movf	indf0,w,c
 13492  0173C4                     u9100:
 13493  0173C4  6EDF               	movwf	indf2,c
 13494  0173C6  50DF               	movf	indf2,w,c
 13495  0173C8  A4D8               	btfss	status,2,c
 13496  0173CA  D7BF               	goto	l9281
 13497                           
 13498                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13499  0173CC  0EF8               	movlw	248
 13500  0173CE  26E1               	addwf	fsr1l,f,c
 13501  0173D0  0EFF               	movlw	255
 13502  0173D2  22E2               	addwfc	fsr1h,f,c
 13503  0173D4  0012               	return		;funcret
 13504  0173D6                     __end_of_strcpy:
 13505                           	opt callstack 0
 13506                           
 13507 ;; *************** function _floorf *****************
 13508 ;; Defined at:
 13509 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  x               4  [STACK] float 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  u               4  [STACK] struct .
 13514 ;;  m               4  [STACK] unsigned long 
 13515 ;;  e               2  [STACK] int 
 13516 ;; Return value:  Size  Location     Type
 13517 ;;                  4  [STACK] float 
 13518 ;; Registers used:
 13519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13520 ;; Tracked objects:
 13521 ;;		On entry : 0/4
 13522 ;;		On exit  : 0/0
 13523 ;;		Unchanged: 0/0
 13524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;Total ram usage:        0 bytes
 13530 ;; Hardware stack levels used:    1
 13531 ;; Hardware stack levels required when called:    6
 13532 ;; This function calls:
 13533 ;;		Nothing
 13534 ;; This function is called by:
 13535 ;;		_efgtoa
 13536 ;; This function uses a reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text48
 13540  01478A                     __ptext48:
 13541                           	opt callstack 0
 13542  01478A                     _floorf:
 13543                           	opt callstack 0
 13544                           
 13545                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13546  01478A  0E0A               	movlw	10
 13547  01478C  26E1               	addwf	fsr1l,f,c
 13548  01478E  0E00               	movlw	0
 13549  014790  22E2               	addwfc	fsr1h,f,c
 13550                           
 13551                           ;incstack = 0
 13552  014792  0060  F210  F03D   	movff	floorf@F524,btemp+8
 13553  014798  0060  F214  F03E   	movff	floorf@F524+1,btemp+9
 13554  01479E  0060  F218  F03F   	movff	floorf@F524+2,btemp+10
 13555  0147A4  0060  F21C  F040   	movff	floorf@F524+3,btemp+11
 13556                           
 13557                           ;stkvar	_u @ sp[(-10)+0]
 13558  0147AA  0EF6               	movlw	-10
 13559  0147AC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13560  0147B2  0EF7               	movlw	-9
 13561  0147B4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13562  0147BA  0EF8               	movlw	-8
 13563  0147BC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13564  0147C2  0EF9               	movlw	-7
 13565  0147C4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13566                           
 13567                           ;stkvar	_x @ sp[(-10)+-4]
 13568  0147CA  0EF2               	movlw	-14
 13569  0147CC  006F FF8C  F03D    	movff	plusw1,btemp+8
 13570  0147D2  0EF3               	movlw	-13
 13571  0147D4  006F FF8C  F03E    	movff	plusw1,btemp+9
 13572  0147DA  0EF4               	movlw	-12
 13573  0147DC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13574  0147E2  0EF5               	movlw	-11
 13575  0147E4  006F FF8C  F040    	movff	plusw1,btemp+11
 13576                           
 13577                           ;stkvar	_u @ sp[(-10)+0]
 13578  0147EA  0EF6               	movlw	-10
 13579  0147EC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13580  0147F2  0EF7               	movlw	-9
 13581  0147F4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13582  0147FA  0EF8               	movlw	-8
 13583  0147FC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13584  014802  0EF9               	movlw	-7
 13585  014804  0060  F103  FFE3   	movff	btemp+11,plusw1
 13586  01480A  0E81               	movlw	129
 13587  01480C  6E3F               	movwf	(btemp+10)^0,c
 13588  01480E  0EFF               	movlw	255
 13589  014810  6E40               	movwf	(btemp+11)^0,c
 13590                           
 13591                           ;stkvar	_u @ sp[(-10)+0]
 13592  014812  0EF6               	movlw	-10
 13593  014814  006F FF8C  F039    	movff	plusw1,btemp+4
 13594  01481A  0EF7               	movlw	-9
 13595  01481C  006F FF8C  F03A    	movff	plusw1,btemp+5
 13596  014822  0EF8               	movlw	-8
 13597  014824  006F FF8C  F03B    	movff	plusw1,btemp+6
 13598  01482A  0EF9               	movlw	-7
 13599  01482C  006F FF8C  F03C    	movff	plusw1,btemp+7
 13600  014832  0E18               	movlw	24
 13601  014834  D005               	goto	u5250
 13602  014836                     u5255:
 13603  014836  90D8               	bcf	status,0,c
 13604  014838  323C               	rrcf	(btemp+7)^0,f,c
 13605  01483A  323B               	rrcf	(btemp+6)^0,f,c
 13606  01483C  323A               	rrcf	(btemp+5)^0,f,c
 13607  01483E  3239               	rrcf	(btemp+4)^0,f,c
 13608  014840                     u5250:
 13609  014840  2EE8               	decfsz	wreg,f,c
 13610  014842  D7F9               	goto	u5255
 13611  014844  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 13612  01484A  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 13613  014850  0EFF               	movlw	255
 13614  014852  163D               	andwf	(btemp+8)^0,f,c
 13615  014854  0E00               	movlw	0
 13616  014856  163E               	andwf	(btemp+9)^0,f,c
 13617  014858  503F               	movf	(btemp+10)^0,w,c
 13618  01485A  263D               	addwf	(btemp+8)^0,f,c
 13619  01485C  5040               	movf	(btemp+11)^0,w,c
 13620  01485E  223E               	addwfc	(btemp+9)^0,f,c
 13621                           
 13622                           ;stkvar	_e @ sp[(-10)+8]
 13623  014860  0EFE               	movlw	-2
 13624  014862  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13625  014868  0EFF               	movlw	-1
 13626  01486A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13627                           
 13628                           ;stkvar	_e @ sp[(-10)+8]
 13629  014870  0EFF               	movlw	-1
 13630  014872  BEE3               	btfsc	plusw1,7,c
 13631  014874  D019               	goto	l6431
 13632  014876  0EFF               	movlw	-1
 13633  014878  50E3               	movf	plusw1,w,c
 13634  01487A  E108               	bnz	u5260
 13635  01487C  0EFE               	movlw	-2
 13636  01487E  006F FF8C  F035    	movff	plusw1,btemp
 13637  014884  0E17               	movlw	23
 13638  014886  5E35               	subwf	btemp^0,f,c
 13639  014888  A0D8               	btfss	status,0,c
 13640  01488A  D00E               	goto	l6431
 13641  01488C                     u5260:
 13642                           
 13643                           ;stkvar	_x @ sp[(-10)+-4]
 13644  01488C  0EF2               	movlw	-14
 13645  01488E  006F FF8C  F035    	movff	plusw1,btemp
 13646  014894  0EF3               	movlw	-13
 13647  014896  006F FF8C  F036    	movff	plusw1,btemp+1
 13648  01489C  0EF4               	movlw	-12
 13649  01489E  006F FF8C  F037    	movff	plusw1,btemp+2
 13650  0148A4  0EF5               	movlw	-11
 13651  0148A6  D11F               	goto	L15
 13652  0148A8                     l6431:
 13653                           
 13654                           ;stkvar	_e @ sp[(-10)+8]
 13655  0148A8  0EFF               	movlw	-1
 13656  0148AA  BEE3               	btfsc	plusw1,7,c
 13657  0148AC  D0B4               	goto	l6447
 13658                           
 13659                           ;stkvar	_e @ sp[(-10)+8]
 13660  0148AE  0EFE               	movlw	-2
 13661  0148B0  006F FF8C  F040    	movff	plusw1,btemp+11
 13662  0148B6  0EFF               	movlw	255
 13663  0148B8  6E39               	movwf	(btemp+4)^0,c
 13664  0148BA  0EFF               	movlw	255
 13665  0148BC  6E3A               	movwf	(btemp+5)^0,c
 13666  0148BE  0E7F               	movlw	127
 13667  0148C0  6E3B               	movwf	(btemp+6)^0,c
 13668  0148C2  0E00               	movlw	0
 13669  0148C4  6E3C               	movwf	(btemp+7)^0,c
 13670  0148C6                     u5285:
 13671  0148C6  6640               	tstfsz	(btemp+11)^0,c
 13672  0148C8  D001               	goto	u5286
 13673  0148CA  D007               	goto	u5287
 13674  0148CC                     u5286:
 13675  0148CC  343C               	rlcf	(btemp+7)^0,w,c
 13676  0148CE  323C               	rrcf	(btemp+7)^0,f,c
 13677  0148D0  323B               	rrcf	(btemp+6)^0,f,c
 13678  0148D2  323A               	rrcf	(btemp+5)^0,f,c
 13679  0148D4  3239               	rrcf	(btemp+4)^0,f,c
 13680  0148D6  2E40               	decfsz	(btemp+11)^0,f,c
 13681  0148D8  D7F6               	goto	u5285
 13682  0148DA                     u5287:
 13683                           
 13684                           ;stkvar	_m @ sp[(-10)+4]
 13685  0148DA  0EFA               	movlw	-6
 13686  0148DC  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13687  0148E2  0EFB               	movlw	-5
 13688  0148E4  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13689  0148EA  0EFC               	movlw	-4
 13690  0148EC  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13691  0148F2  0EFD               	movlw	-3
 13692  0148F4  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13693                           
 13694                           ;stkvar	_m @ sp[(-10)+4]
 13695                           ;stkvar	_u @ sp[(-10)+0]
 13696  0148FA  0EF6               	movlw	-10
 13697  0148FC  006F FF8C  F03D    	movff	plusw1,btemp+8
 13698  014902  0EF7               	movlw	-9
 13699  014904  006F FF8C  F03E    	movff	plusw1,btemp+9
 13700  01490A  0EF8               	movlw	-8
 13701  01490C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13702  014912  0EF9               	movlw	-7
 13703  014914  006F FF8C  F040    	movff	plusw1,btemp+11
 13704  01491A  0EFA               	movlw	-6
 13705  01491C  50E3               	movf	plusw1,w,c
 13706  01491E  163D               	andwf	(btemp+8)^0,f,c
 13707  014920  0EFB               	movlw	-5
 13708  014922  50E3               	movf	plusw1,w,c
 13709  014924  163E               	andwf	(btemp+9)^0,f,c
 13710  014926  0EFC               	movlw	-4
 13711  014928  50E3               	movf	plusw1,w,c
 13712  01492A  163F               	andwf	(btemp+10)^0,f,c
 13713  01492C  0EFD               	movlw	-3
 13714  01492E  50E3               	movf	plusw1,w,c
 13715  014930  1640               	andwf	(btemp+11)^0,f,c
 13716  014932  503D               	movf	(btemp+8)^0,w,c
 13717  014934  103E               	iorwf	(btemp+9)^0,w,c
 13718  014936  103F               	iorwf	(btemp+10)^0,w,c
 13719  014938  1040               	iorwf	(btemp+11)^0,w,c
 13720  01493A  B4D8               	btfsc	status,2,c
 13721  01493C  D7A7               	goto	u5260
 13722                           
 13723                           ;stkvar	_u @ sp[(-10)+0]
 13724  01493E  0EF6               	movlw	-10
 13725  014940  006F FF8C  F03D    	movff	plusw1,btemp+8
 13726  014946  0EF7               	movlw	-9
 13727  014948  006F FF8C  F03E    	movff	plusw1,btemp+9
 13728  01494E  0EF8               	movlw	-8
 13729  014950  006F FF8C  F03F    	movff	plusw1,btemp+10
 13730  014956  0EF9               	movlw	-7
 13731  014958  006F FF8C  F040    	movff	plusw1,btemp+11
 13732  01495E  0E20               	movlw	32
 13733  014960  D005               	goto	u5300
 13734  014962                     u5305:
 13735  014962  90D8               	bcf	status,0,c
 13736  014964  3240               	rrcf	(btemp+11)^0,f,c
 13737  014966  323F               	rrcf	(btemp+10)^0,f,c
 13738  014968  323E               	rrcf	(btemp+9)^0,f,c
 13739  01496A  323D               	rrcf	(btemp+8)^0,f,c
 13740  01496C                     u5300:
 13741  01496C  2EE8               	decfsz	wreg,f,c
 13742  01496E  D7F9               	goto	u5305
 13743  014970  503D               	movf	(btemp+8)^0,w,c
 13744  014972  B4D8               	btfsc	status,2,c
 13745  014974  D028               	goto	l6445
 13746                           
 13747                           ;stkvar	_m @ sp[(-10)+4]
 13748                           ;stkvar	_u @ sp[(-10)+0]
 13749  014976  0EF6               	movlw	-10
 13750  014978  50E3               	movf	plusw1,w,c
 13751  01497A  6E35               	movwf	btemp^0,c
 13752  01497C  0EFA               	movlw	-6
 13753  01497E  50E3               	movf	plusw1,w,c
 13754  014980  2635               	addwf	btemp^0,f,c
 13755  014982  0EF6               	movlw	-10
 13756  014984  0060  F0D7  FFE3   	movff	btemp,plusw1
 13757  01498A  0EF7               	movlw	-9
 13758  01498C  50E3               	movf	plusw1,w,c
 13759  01498E  6E35               	movwf	btemp^0,c
 13760  014990  0EFB               	movlw	-5
 13761  014992  50E3               	movf	plusw1,w,c
 13762  014994  2235               	addwfc	btemp^0,f,c
 13763  014996  0EF7               	movlw	-9
 13764  014998  0060  F0D7  FFE3   	movff	btemp,plusw1
 13765  01499E  0EF8               	movlw	-8
 13766  0149A0  50E3               	movf	plusw1,w,c
 13767  0149A2  6E35               	movwf	btemp^0,c
 13768  0149A4  0EFC               	movlw	-4
 13769  0149A6  50E3               	movf	plusw1,w,c
 13770  0149A8  2235               	addwfc	btemp^0,f,c
 13771  0149AA  0EF8               	movlw	-8
 13772  0149AC  0060  F0D7  FFE3   	movff	btemp,plusw1
 13773  0149B2  0EF9               	movlw	-7
 13774  0149B4  50E3               	movf	plusw1,w,c
 13775  0149B6  6E35               	movwf	btemp^0,c
 13776  0149B8  0EFD               	movlw	-3
 13777  0149BA  50E3               	movf	plusw1,w,c
 13778  0149BC  2235               	addwfc	btemp^0,f,c
 13779  0149BE  0EF9               	movlw	-7
 13780  0149C0  0060  F0D7  FFE3   	movff	btemp,plusw1
 13781  0149C6                     l6445:
 13782                           
 13783                           ;stkvar	_m @ sp[(-10)+4]
 13784  0149C6  0EFA               	movlw	-6
 13785  0149C8  006F FF8C  F03D    	movff	plusw1,btemp+8
 13786  0149CE  0EFB               	movlw	-5
 13787  0149D0  006F FF8C  F03E    	movff	plusw1,btemp+9
 13788  0149D6  0EFC               	movlw	-4
 13789  0149D8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13790  0149DE  0EFD               	movlw	-3
 13791  0149E0  006F FF8C  F040    	movff	plusw1,btemp+11
 13792  0149E6  1C3D               	comf	(btemp+8)^0,w,c
 13793  0149E8  6E39               	movwf	(btemp+4)^0,c
 13794  0149EA  1C3E               	comf	(btemp+9)^0,w,c
 13795  0149EC  6E3A               	movwf	(btemp+5)^0,c
 13796  0149EE  1C3F               	comf	(btemp+10)^0,w,c
 13797  0149F0  6E3B               	movwf	(btemp+6)^0,c
 13798  0149F2  1C40               	comf	(btemp+11)^0,w,c
 13799  0149F4  6E3C               	movwf	(btemp+7)^0,c
 13800                           
 13801                           ;stkvar	_u @ sp[(-10)+0]
 13802  0149F6  50E1               	movf	fsr1l,w,c
 13803  0149F8  0FF6               	addlw	-10
 13804  0149FA  6ED9               	movwf	fsr2l,c
 13805  0149FC  50E2               	movf	fsr1h,w,c
 13806  0149FE  6EDA               	movwf	fsr2h,c
 13807  014A00  0EFF               	movlw	255
 13808  014A02  22DA               	addwfc	fsr2h,f,c
 13809  014A04  5039               	movf	(btemp+4)^0,w,c
 13810  014A06  16DE               	andwf	postinc2,f,c
 13811  014A08  503A               	movf	(btemp+5)^0,w,c
 13812  014A0A  16DE               	andwf	postinc2,f,c
 13813  014A0C  503B               	movf	(btemp+6)^0,w,c
 13814  014A0E  16DE               	andwf	postinc2,f,c
 13815  014A10  503C               	movf	(btemp+7)^0,w,c
 13816  014A12  16DE               	andwf	postinc2,f,c
 13817  014A14  D05B               	goto	l6455
 13818  014A16                     l6447:
 13819                           
 13820                           ;stkvar	_u @ sp[(-10)+0]
 13821  014A16  0EF6               	movlw	-10
 13822  014A18  006F FF8C  F03D    	movff	plusw1,btemp+8
 13823  014A1E  0EF7               	movlw	-9
 13824  014A20  006F FF8C  F03E    	movff	plusw1,btemp+9
 13825  014A26  0EF8               	movlw	-8
 13826  014A28  006F FF8C  F03F    	movff	plusw1,btemp+10
 13827  014A2E  0EF9               	movlw	-7
 13828  014A30  006F FF8C  F040    	movff	plusw1,btemp+11
 13829  014A36  0E20               	movlw	32
 13830  014A38  D005               	goto	u5320
 13831  014A3A                     u5325:
 13832  014A3A  90D8               	bcf	status,0,c
 13833  014A3C  3240               	rrcf	(btemp+11)^0,f,c
 13834  014A3E  323F               	rrcf	(btemp+10)^0,f,c
 13835  014A40  323E               	rrcf	(btemp+9)^0,f,c
 13836  014A42  323D               	rrcf	(btemp+8)^0,f,c
 13837  014A44                     u5320:
 13838  014A44  2EE8               	decfsz	wreg,f,c
 13839  014A46  D7F9               	goto	u5325
 13840  014A48  663D               	tstfsz	(btemp+8)^0,c
 13841  014A4A  D009               	goto	l6451
 13842                           
 13843                           ;stkvar	_u @ sp[(-10)+0]
 13844  014A4C  0EF6               	movlw	-10
 13845  014A4E  6AE3               	clrf	plusw1,c
 13846  014A50  0EF7               	movlw	-9
 13847  014A52  6AE3               	clrf	plusw1,c
 13848  014A54  0EF8               	movlw	-8
 13849  014A56  6AE3               	clrf	plusw1,c
 13850  014A58  0EF9               	movlw	-7
 13851  014A5A  6AE3               	clrf	plusw1,c
 13852  014A5C  D037               	goto	l6455
 13853  014A5E                     l6451:
 13854                           
 13855                           ;stkvar	_u @ sp[(-10)+0]
 13856  014A5E  0EF6               	movlw	-10
 13857  014A60  006F FF8C  F03D    	movff	plusw1,btemp+8
 13858  014A66  0EF7               	movlw	-9
 13859  014A68  006F FF8C  F03E    	movff	plusw1,btemp+9
 13860  014A6E  0EF8               	movlw	-8
 13861  014A70  006F FF8C  F03F    	movff	plusw1,btemp+10
 13862  014A76  0EF9               	movlw	-7
 13863  014A78  006F FF8C  F040    	movff	plusw1,btemp+11
 13864  014A7E  90D8               	bcf	status,0,c
 13865  014A80  343D               	rlcf	(btemp+8)^0,w,c
 13866  014A82  6E39               	movwf	(btemp+4)^0,c
 13867  014A84  343E               	rlcf	(btemp+9)^0,w,c
 13868  014A86  6E3A               	movwf	(btemp+5)^0,c
 13869  014A88  343F               	rlcf	(btemp+10)^0,w,c
 13870  014A8A  6E3B               	movwf	(btemp+6)^0,c
 13871  014A8C  3440               	rlcf	(btemp+11)^0,w,c
 13872  014A8E  6E3C               	movwf	(btemp+7)^0,c
 13873  014A90  5039               	movf	(btemp+4)^0,w,c
 13874  014A92  103A               	iorwf	(btemp+5)^0,w,c
 13875  014A94  103B               	iorwf	(btemp+6)^0,w,c
 13876  014A96  103C               	iorwf	(btemp+7)^0,w,c
 13877  014A98  B4D8               	btfsc	status,2,c
 13878  014A9A  D018               	goto	l6455
 13879  014A9C  0E00               	movlw	0
 13880  014A9E  6E3D               	movwf	(btemp+8)^0,c
 13881  014AA0  0E00               	movlw	0
 13882  014AA2  6E3E               	movwf	(btemp+9)^0,c
 13883  014AA4  0E80               	movlw	128
 13884  014AA6  6E3F               	movwf	(btemp+10)^0,c
 13885  014AA8  0EBF               	movlw	191
 13886  014AAA  6E40               	movwf	(btemp+11)^0,c
 13887                           
 13888                           ;stkvar	_u @ sp[(-10)+0]
 13889  014AAC  0EF6               	movlw	-10
 13890  014AAE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13891  014AB4  0EF7               	movlw	-9
 13892  014AB6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13893  014ABC  0EF8               	movlw	-8
 13894  014ABE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13895  014AC4  0EF9               	movlw	-7
 13896  014AC6  0060  F103  FFE3   	movff	btemp+11,plusw1
 13897  014ACC                     l6455:
 13898                           
 13899                           ;stkvar	_u @ sp[(-10)+0]
 13900  014ACC  0EF6               	movlw	-10
 13901  014ACE  006F FF8C  F035    	movff	plusw1,btemp
 13902  014AD4  0EF7               	movlw	-9
 13903  014AD6  006F FF8C  F036    	movff	plusw1,btemp+1
 13904  014ADC  0EF8               	movlw	-8
 13905  014ADE  006F FF8C  F037    	movff	plusw1,btemp+2
 13906  014AE4  0EF9               	movlw	-7
 13907  014AE6                     L15:
 13908  014AE6  006F FF8C  F038    	movff	plusw1,btemp+3
 13909                           
 13910                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13911  014AEC  0EF2               	movlw	242
 13912  014AEE  26E1               	addwf	fsr1l,f,c
 13913  014AF0  0EFF               	movlw	255
 13914  014AF2  22E2               	addwfc	fsr1h,f,c
 13915  014AF4  0012               	return		;funcret
 13916  014AF6                     __end_of_floorf:
 13917                           	opt callstack 0
 13918                           
 13919 ;; *************** function ___fpclassifyf *****************
 13920 ;; Defined at:
 13921 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;  x               4  [STACK] float 
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;  u               4  [STACK] struct .
 13926 ;;  e               2  [STACK] int 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  2  [STACK] int 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/4
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:    6
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_efgtoa
 13947 ;; This function uses a reentrant model
 13948 ;;
 13949                           
 13950                           	psect	text49
 13951  01630A                     __ptext49:
 13952                           	opt callstack 0
 13953  01630A                     ___fpclassifyf:
 13954                           	opt callstack 0
 13955                           
 13956                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13957  01630A  0E06               	movlw	6
 13958  01630C  26E1               	addwf	fsr1l,f,c
 13959  01630E  0E00               	movlw	0
 13960  016310  22E2               	addwfc	fsr1h,f,c
 13961                           
 13962                           ;incstack = 0
 13963  016312  0060  F220  F03D   	movff	___fpclassifyf@F463,btemp+8
 13964  016318  0060  F224  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 13965  01631E  0060  F228  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 13966  016324  0060  F22C  F040   	movff	___fpclassifyf@F463+3,btemp+11
 13967                           
 13968                           ;stkvar	_u @ sp[(-6)+0]
 13969  01632A  0EFA               	movlw	-6
 13970  01632C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13971  016332  0EFB               	movlw	-5
 13972  016334  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13973  01633A  0EFC               	movlw	-4
 13974  01633C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13975  016342  0EFD               	movlw	-3
 13976  016344  0060  F103  FFE3   	movff	btemp+11,plusw1
 13977                           
 13978                           ;stkvar	_x @ sp[(-6)+-4]
 13979  01634A  0EF6               	movlw	-10
 13980  01634C  006F FF8C  F03D    	movff	plusw1,btemp+8
 13981  016352  0EF7               	movlw	-9
 13982  016354  006F FF8C  F03E    	movff	plusw1,btemp+9
 13983  01635A  0EF8               	movlw	-8
 13984  01635C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13985  016362  0EF9               	movlw	-7
 13986  016364  006F FF8C  F040    	movff	plusw1,btemp+11
 13987                           
 13988                           ;stkvar	_u @ sp[(-6)+0]
 13989  01636A  0EFA               	movlw	-6
 13990  01636C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13991  016372  0EFB               	movlw	-5
 13992  016374  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13993  01637A  0EFC               	movlw	-4
 13994  01637C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13995  016382  0EFD               	movlw	-3
 13996  016384  0060  F103  FFE3   	movff	btemp+11,plusw1
 13997                           
 13998                           ;stkvar	_u @ sp[(-6)+0]
 13999  01638A  0EFA               	movlw	-6
 14000  01638C  006F FF8C  F03D    	movff	plusw1,btemp+8
 14001  016392  0EFB               	movlw	-5
 14002  016394  006F FF8C  F03E    	movff	plusw1,btemp+9
 14003  01639A  0EFC               	movlw	-4
 14004  01639C  006F FF8C  F03F    	movff	plusw1,btemp+10
 14005  0163A2  0EFD               	movlw	-3
 14006  0163A4  006F FF8C  F040    	movff	plusw1,btemp+11
 14007  0163AA  0E18               	movlw	24
 14008  0163AC  D005               	goto	u5130
 14009  0163AE                     u5135:
 14010  0163AE  90D8               	bcf	status,0,c
 14011  0163B0  3240               	rrcf	(btemp+11)^0,f,c
 14012  0163B2  323F               	rrcf	(btemp+10)^0,f,c
 14013  0163B4  323E               	rrcf	(btemp+9)^0,f,c
 14014  0163B6  323D               	rrcf	(btemp+8)^0,f,c
 14015  0163B8                     u5130:
 14016  0163B8  2EE8               	decfsz	wreg,f,c
 14017  0163BA  D7F9               	goto	u5135
 14018  0163BC  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 14019  0163C2  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 14020  0163C8  0EFF               	movlw	255
 14021  0163CA  163B               	andwf	(btemp+6)^0,f,c
 14022  0163CC  0E00               	movlw	0
 14023  0163CE  163C               	andwf	(btemp+7)^0,f,c
 14024                           
 14025                           ;stkvar	_e @ sp[(-6)+4]
 14026  0163D0  0EFE               	movlw	-2
 14027  0163D2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14028  0163D8  0EFF               	movlw	-1
 14029  0163DA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14030                           
 14031                           ;stkvar	_e @ sp[(-6)+4]
 14032  0163E0  0EFE               	movlw	-2
 14033  0163E2  006F FF8C  F035    	movff	plusw1,btemp
 14034  0163E8  0EFF               	movlw	-1
 14035  0163EA  50E3               	movf	plusw1,w,c
 14036  0163EC  1035               	iorwf	btemp^0,w,c
 14037  0163EE  A4D8               	btfss	status,2,c
 14038  0163F0  D023               	goto	l6393
 14039                           
 14040                           ;stkvar	_u @ sp[(-6)+0]
 14041  0163F2  0EFA               	movlw	-6
 14042  0163F4  006F FF8C  F03D    	movff	plusw1,btemp+8
 14043  0163FA  0EFB               	movlw	-5
 14044  0163FC  006F FF8C  F03E    	movff	plusw1,btemp+9
 14045  016402  0EFC               	movlw	-4
 14046  016404  006F FF8C  F03F    	movff	plusw1,btemp+10
 14047  01640A  0EFD               	movlw	-3
 14048  01640C  006F FF8C  F040    	movff	plusw1,btemp+11
 14049  016412  90D8               	bcf	status,0,c
 14050  016414  343D               	rlcf	(btemp+8)^0,w,c
 14051  016416  6E39               	movwf	(btemp+4)^0,c
 14052  016418  343E               	rlcf	(btemp+9)^0,w,c
 14053  01641A  6E3A               	movwf	(btemp+5)^0,c
 14054  01641C  343F               	rlcf	(btemp+10)^0,w,c
 14055  01641E  6E3B               	movwf	(btemp+6)^0,c
 14056  016420  3440               	rlcf	(btemp+11)^0,w,c
 14057  016422  6E3C               	movwf	(btemp+7)^0,c
 14058  016424  5039               	movf	(btemp+4)^0,w,c
 14059  016426  103A               	iorwf	(btemp+5)^0,w,c
 14060  016428  103B               	iorwf	(btemp+6)^0,w,c
 14061  01642A  103C               	iorwf	(btemp+7)^0,w,c
 14062  01642C  A4D8               	btfss	status,2,c
 14063  01642E  D002               	goto	l6389
 14064  016430  0E02               	movlw	2
 14065  016432  D02E               	goto	L16
 14066  016434                     l6389:
 14067  016434  0E03               	movlw	3
 14068  016436  D02C               	goto	L16
 14069  016438                     l6393:
 14070                           
 14071                           ;stkvar	_e @ sp[(-6)+4]
 14072  016438  0EFE               	movlw	-2
 14073  01643A  28E3               	incf	plusw1,w,c
 14074  01643C  E128               	bnz	l6399
 14075  01643E  0EFF               	movlw	-1
 14076  016440  50E3               	movf	plusw1,w,c
 14077  016442  A4D8               	btfss	status,2,c
 14078  016444  D024               	goto	l6399
 14079                           
 14080                           ;stkvar	_u @ sp[(-6)+0]
 14081  016446  0EFA               	movlw	-6
 14082  016448  006F FF8C  F03D    	movff	plusw1,btemp+8
 14083  01644E  0EFB               	movlw	-5
 14084  016450  006F FF8C  F03E    	movff	plusw1,btemp+9
 14085  016456  0EFC               	movlw	-4
 14086  016458  006F FF8C  F03F    	movff	plusw1,btemp+10
 14087  01645E  0EFD               	movlw	-3
 14088  016460  006F FF8C  F040    	movff	plusw1,btemp+11
 14089  016466  0E09               	movlw	9
 14090  016468                     u5175:
 14091  016468  90D8               	bcf	status,0,c
 14092  01646A  363D               	rlcf	(btemp+8)^0,f,c
 14093  01646C  363E               	rlcf	(btemp+9)^0,f,c
 14094  01646E  363F               	rlcf	(btemp+10)^0,f,c
 14095  016470  3640               	rlcf	(btemp+11)^0,f,c
 14096  016472  2EE8               	decfsz	wreg,f,c
 14097  016474  D7F9               	goto	u5175
 14098  016476  503D               	movf	(btemp+8)^0,w,c
 14099  016478  103E               	iorwf	(btemp+9)^0,w,c
 14100  01647A  103F               	iorwf	(btemp+10)^0,w,c
 14101  01647C  1040               	iorwf	(btemp+11)^0,w,c
 14102  01647E  A4D8               	btfss	status,2,c
 14103  016480  D002               	goto	u5180
 14104  016482  0E01               	movlw	1
 14105  016484  D001               	goto	u5190
 14106  016486                     u5180:
 14107  016486  0E00               	movlw	0
 14108  016488                     u5190:
 14109  016488  6E35               	movwf	btemp^0,c
 14110  01648A  6A36               	clrf	(btemp+1)^0,c
 14111  01648C  D004               	goto	l2689
 14112  01648E                     l6399:
 14113  01648E  0E04               	movlw	4
 14114  016490                     L16:
 14115  016490  6E35               	movwf	btemp^0,c
 14116  016492  0E00               	movlw	0
 14117  016494  6E36               	movwf	(btemp+1)^0,c
 14118  016496                     l2689:
 14119                           
 14120                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14121  016496  0EF6               	movlw	246
 14122  016498  26E1               	addwf	fsr1l,f,c
 14123  01649A  0EFF               	movlw	255
 14124  01649C  22E2               	addwfc	fsr1h,f,c
 14125  01649E  0012               	return		;funcret
 14126  0164A0                     __end_of___fpclassifyf:
 14127                           	opt callstack 0
 14128                           
 14129 ;; *************** function ___fltol *****************
 14130 ;; Defined at:
 14131 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;  f1              4  [STACK] int 
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;  exp1            1  [STACK] unsigned char 
 14136 ;;  sign1           1  [STACK] unsigned char 
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  4  [STACK] long 
 14139 ;; Registers used:
 14140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14141 ;; Tracked objects:
 14142 ;;		On entry : 0/4
 14143 ;;		On exit  : 0/0
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;Total ram usage:        0 bytes
 14151 ;; Hardware stack levels used:    1
 14152 ;; Hardware stack levels required when called:    6
 14153 ;; This function calls:
 14154 ;;		Nothing
 14155 ;; This function is called by:
 14156 ;;		_efgtoa
 14157 ;; This function uses a reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text50
 14161  016620                     __ptext50:
 14162                           	opt callstack 0
 14163  016620                     ___fltol:
 14164                           	opt callstack 0
 14165                           
 14166                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14167  016620  52E6               	movf	postinc1,f,c
 14168  016622  52E6               	movf	postinc1,f,c
 14169                           
 14170                           ;stkvar	_f1 @ sp[(-2)+-4]
 14171                           
 14172                           ;incstack = 0
 14173  016624  0EFA               	movlw	-6
 14174  016626  006F FF8C  F03D    	movff	plusw1,btemp+8
 14175  01662C  0EFB               	movlw	-5
 14176  01662E  006F FF8C  F03E    	movff	plusw1,btemp+9
 14177  016634  0EFC               	movlw	-4
 14178  016636  006F FF8C  F03F    	movff	plusw1,btemp+10
 14179  01663C  0EFD               	movlw	-3
 14180  01663E  006F FF8C  F040    	movff	plusw1,btemp+11
 14181  016644  0E18               	movlw	24
 14182  016646  D005               	goto	u6340
 14183  016648                     u6345:
 14184  016648  90D8               	bcf	status,0,c
 14185  01664A  3240               	rrcf	(btemp+11)^0,f,c
 14186  01664C  323F               	rrcf	(btemp+10)^0,f,c
 14187  01664E  323E               	rrcf	(btemp+9)^0,f,c
 14188  016650  323D               	rrcf	(btemp+8)^0,f,c
 14189  016652                     u6340:
 14190  016652  2EE8               	decfsz	wreg,f,c
 14191  016654  D7F9               	goto	u6345
 14192                           
 14193                           ;stkvar	_exp1 @ sp[(-2)+0]
 14194  016656  0EFE               	movlw	-2
 14195  016658  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14196  01665E  0EFE               	movlw	-2
 14197  016660  50E3               	movf	plusw1,w,c
 14198  016662  A4D8               	btfss	status,2,c
 14199  016664  D006               	goto	l7019
 14200  016666                     u6350:
 14201  016666  0E00               	movlw	0
 14202  016668  6E35               	movwf	btemp^0,c
 14203  01666A  6A36               	clrf	(btemp+1)^0,c
 14204  01666C  6A37               	clrf	(btemp+2)^0,c
 14205  01666E  6A38               	clrf	(btemp+3)^0,c
 14206  016670  D08B               	goto	l2305
 14207  016672                     l7019:
 14208                           
 14209                           ;stkvar	_f1 @ sp[(-2)+-4]
 14210  016672  0EFA               	movlw	-6
 14211  016674  006F FF8C  F03D    	movff	plusw1,btemp+8
 14212  01667A  0EFB               	movlw	-5
 14213  01667C  006F FF8C  F03E    	movff	plusw1,btemp+9
 14214  016682  0EFC               	movlw	-4
 14215  016684  006F FF8C  F03F    	movff	plusw1,btemp+10
 14216  01668A  0EFD               	movlw	-3
 14217  01668C  006F FF8C  F040    	movff	plusw1,btemp+11
 14218  016692  0E20               	movlw	32
 14219  016694  D005               	goto	u6360
 14220  016696                     u6365:
 14221  016696  90D8               	bcf	status,0,c
 14222  016698  3240               	rrcf	(btemp+11)^0,f,c
 14223  01669A  323F               	rrcf	(btemp+10)^0,f,c
 14224  01669C  323E               	rrcf	(btemp+9)^0,f,c
 14225  01669E  323D               	rrcf	(btemp+8)^0,f,c
 14226  0166A0                     u6360:
 14227  0166A0  2EE8               	decfsz	wreg,f,c
 14228  0166A2  D7F9               	goto	u6365
 14229                           
 14230                           ;stkvar	_sign1 @ sp[(-2)+1]
 14231  0166A4  0EFF               	movlw	-1
 14232  0166A6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14233                           
 14234                           ;stkvar	_f1 @ sp[(-2)+-4]
 14235  0166AC  0EFC               	movlw	-4
 14236  0166AE  8EE3               	bsf	plusw1,7,c
 14237                           
 14238                           ;stkvar	_f1 @ sp[(-2)+-4]
 14239  0166B0  50E1               	movf	fsr1l,w,c
 14240  0166B2  0FFA               	addlw	-6
 14241  0166B4  6ED9               	movwf	fsr2l,c
 14242  0166B6  50E2               	movf	fsr1h,w,c
 14243  0166B8  6EDA               	movwf	fsr2h,c
 14244  0166BA  0EFF               	movlw	255
 14245  0166BC  22DA               	addwfc	fsr2h,f,c
 14246  0166BE  0EFF               	movlw	255
 14247  0166C0  16DE               	andwf	postinc2,f,c
 14248  0166C2  0EFF               	movlw	255
 14249  0166C4  16DE               	andwf	postinc2,f,c
 14250  0166C6  0EFF               	movlw	255
 14251  0166C8  16DE               	andwf	postinc2,f,c
 14252  0166CA  0E00               	movlw	0
 14253  0166CC  16DE               	andwf	postinc2,f,c
 14254                           
 14255                           ;stkvar	_exp1 @ sp[(-2)+0]
 14256  0166CE  0EFE               	movlw	-2
 14257  0166D0  006F FF8C  F035    	movff	plusw1,btemp
 14258  0166D6  0E96               	movlw	150
 14259  0166D8  5E35               	subwf	btemp^0,f,c
 14260  0166DA  0EFE               	movlw	-2
 14261  0166DC  0060  F0D7  FFE3   	movff	btemp,plusw1
 14262                           
 14263                           ;stkvar	_exp1 @ sp[(-2)+0]
 14264  0166E2  0EFE               	movlw	-2
 14265  0166E4  AEE3               	btfss	plusw1,7,c
 14266  0166E6  D014               	goto	l7037
 14267                           
 14268                           ;stkvar	_exp1 @ sp[(-2)+0]
 14269  0166E8  0EFE               	movlw	-2
 14270  0166EA  50E3               	movf	plusw1,w,c
 14271  0166EC  0A80               	xorlw	128
 14272  0166EE  0F97               	addlw	151
 14273  0166F0  A0D8               	btfss	status,0,c
 14274  0166F2  D7B9               	goto	u6350
 14275  0166F4                     l7035:
 14276                           
 14277                           ;stkvar	_f1 @ sp[(-2)+-4]
 14278  0166F4  90D8               	bcf	status,0,c
 14279  0166F6  0EFD               	movlw	-3
 14280  0166F8  32E3               	rrcf	plusw1,f,c
 14281  0166FA  0EFC               	movlw	-4
 14282  0166FC  32E3               	rrcf	plusw1,f,c
 14283  0166FE  0EFB               	movlw	-5
 14284  016700  32E3               	rrcf	plusw1,f,c
 14285  016702  0EFA               	movlw	-6
 14286  016704  32E3               	rrcf	plusw1,f,c
 14287                           
 14288                           ;stkvar	_exp1 @ sp[(-2)+0]
 14289  016706  0EFE               	movlw	-2
 14290  016708  2AE3               	incf	plusw1,f,c
 14291  01670A  B4D8               	btfsc	status,2,c
 14292  01670C  D018               	goto	u6410
 14293  01670E  D7F2               	goto	l7035
 14294  016710                     l7037:
 14295                           
 14296                           ;stkvar	_exp1 @ sp[(-2)+0]
 14297  016710  0EFE               	movlw	-2
 14298  016712  006F FF8C  F035    	movff	plusw1,btemp
 14299  016718  0E1F               	movlw	31
 14300  01671A  6435               	cpfsgt	btemp^0,c
 14301  01671C  D00C               	goto	l7045
 14302  01671E  D7A3               	goto	u6350
 14303  016720                     l7043:
 14304                           
 14305                           ;stkvar	_f1 @ sp[(-2)+-4]
 14306  016720  90D8               	bcf	status,0,c
 14307  016722  0EFA               	movlw	-6
 14308  016724  36E3               	rlcf	plusw1,f,c
 14309  016726  0EFB               	movlw	-5
 14310  016728  36E3               	rlcf	plusw1,f,c
 14311  01672A  0EFC               	movlw	-4
 14312  01672C  36E3               	rlcf	plusw1,f,c
 14313  01672E  0EFD               	movlw	-3
 14314  016730  36E3               	rlcf	plusw1,f,c
 14315                           
 14316                           ;stkvar	_exp1 @ sp[(-2)+0]
 14317  016732  0EFE               	movlw	-2
 14318  016734  06E3               	decf	plusw1,f,c
 14319  016736                     l7045:
 14320                           
 14321                           ;stkvar	_exp1 @ sp[(-2)+0]
 14322  016736  0EFE               	movlw	-2
 14323  016738  50E3               	movf	plusw1,w,c
 14324  01673A  A4D8               	btfss	status,2,c
 14325  01673C  D7F1               	goto	l7043
 14326  01673E                     u6410:
 14327                           
 14328                           ;stkvar	_sign1 @ sp[(-2)+1]
 14329  01673E  0EFF               	movlw	-1
 14330  016740  50E3               	movf	plusw1,w,c
 14331  016742  B4D8               	btfsc	status,2,c
 14332  016744  D011               	goto	u6430
 14333                           
 14334                           ;stkvar	_f1 @ sp[(-2)+-4]
 14335                           ;stkvar	_f1 @ sp[(-2)+-4]
 14336  016746  0EFA               	movlw	-6
 14337  016748  6CE3               	negf	plusw1,c
 14338  01674A  0EFB               	movlw	-5
 14339  01674C  1EE3               	comf	plusw1,f,c
 14340  01674E  0EFC               	movlw	-4
 14341  016750  1EE3               	comf	plusw1,f,c
 14342  016752  0EFD               	movlw	-3
 14343  016754  1EE3               	comf	plusw1,f,c
 14344  016756  E308               	bnc	u6430
 14345  016758  0EFB               	movlw	-5
 14346  01675A  2AE3               	incf	plusw1,f,c
 14347  01675C  E305               	bnc	u6430
 14348  01675E  0EFC               	movlw	-4
 14349  016760  2AE3               	incf	plusw1,f,c
 14350  016762  E302               	bnc	u6430
 14351  016764  0EFD               	movlw	-3
 14352  016766  2AE3               	incf	plusw1,f,c
 14353  016768                     u6430:
 14354                           
 14355                           ;stkvar	_f1 @ sp[(-2)+-4]
 14356  016768  0EFA               	movlw	-6
 14357  01676A  006F FF8C  F035    	movff	plusw1,btemp
 14358  016770  0EFB               	movlw	-5
 14359  016772  006F FF8C  F036    	movff	plusw1,btemp+1
 14360  016778  0EFC               	movlw	-4
 14361  01677A  006F FF8C  F037    	movff	plusw1,btemp+2
 14362  016780  0EFD               	movlw	-3
 14363  016782  006F FF8C  F038    	movff	plusw1,btemp+3
 14364  016788                     l2305:
 14365                           
 14366                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14367  016788  0EFA               	movlw	250
 14368  01678A  26E1               	addwf	fsr1l,f,c
 14369  01678C  0EFF               	movlw	255
 14370  01678E  22E2               	addwfc	fsr1h,f,c
 14371  016790  0012               	return		;funcret
 14372  016792                     __end_of___fltol:
 14373                           	opt callstack 0
 14374                           
 14375 ;; *************** function ___flsub *****************
 14376 ;; Defined at:
 14377 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  b               4  [STACK] long 
 14380 ;;  a               4  [STACK] long 
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;		None
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  4  [STACK] long 
 14385 ;; Registers used:
 14386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/4
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14396 ;;Total ram usage:        0 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; Hardware stack levels required when called:    7
 14399 ;; This function calls:
 14400 ;;		___fladd
 14401 ;; This function is called by:
 14402 ;;		_conv_raw_result
 14403 ;;		_lp_filter
 14404 ;;		_efgtoa
 14405 ;; This function uses a reentrant model
 14406 ;;
 14407                           
 14408                           	psect	text51
 14409  01829C                     __ptext51:
 14410                           	opt callstack 0
 14411  01829C                     ___flsub:
 14412                           	opt callstack 16
 14413                           
 14414                           ;stkvar	_a @ sp[(0)+-8]
 14415                           
 14416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14417                           ;incstack = 0
 14418  01829C  0EFB               	movlw	-5
 14419  01829E  7EE3               	btg	plusw1,7,c
 14420                           
 14421                           ;stkvar	_a @ sp[(0)+-8]
 14422  0182A0  0EF8               	movlw	-8
 14423  0182A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14424  0182A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14425  0182AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14426  0182B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14427                           
 14428                           ;stkvar	_b @ sp[(-4)+-4]
 14429  0182BA  0EF8               	movlw	-8
 14430  0182BC  006F FF8F FFE6     	movff	plusw1,postinc1
 14431  0182C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14432  0182C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14433  0182CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14434  0182D4  EC0D  F095         	call	___fladd	;wreg free
 14435                           
 14436                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14437  0182D8  0EF8               	movlw	248
 14438  0182DA  26E1               	addwf	fsr1l,f,c
 14439  0182DC  0EFF               	movlw	255
 14440  0182DE  22E2               	addwfc	fsr1h,f,c
 14441  0182E0  0012               	return		;funcret
 14442  0182E2                     __end_of___flsub:
 14443                           	opt callstack 0
 14444                           
 14445 ;; *************** function ___fladd *****************
 14446 ;; Defined at:
 14447 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  b               4  [STACK] long 
 14450 ;;  a               4  [STACK] long 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  grs             1  [STACK] unsigned char 
 14453 ;;  bexp            1  [STACK] unsigned char 
 14454 ;;  aexp            1  [STACK] unsigned char 
 14455 ;;  signs           1  [STACK] unsigned char 
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  4  [STACK] unsigned char 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/4
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;Total ram usage:        0 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:    6
 14472 ;; This function calls:
 14473 ;;		Nothing
 14474 ;; This function is called by:
 14475 ;;		_lp_filter
 14476 ;;		_efgtoa
 14477 ;;		___flsub
 14478 ;; This function uses a reentrant model
 14479 ;;
 14480                           
 14481                           	psect	text52
 14482  012A1A                     __ptext52:
 14483                           	opt callstack 0
 14484  012A1A                     ___fladd:
 14485                           	opt callstack 0
 14486                           
 14487                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14488  012A1A  52E6               	movf	postinc1,f,c
 14489  012A1C  52E6               	movf	postinc1,f,c
 14490  012A1E  52E6               	movf	postinc1,f,c
 14491  012A20  52E6               	movf	postinc1,f,c
 14492                           
 14493                           ;stkvar	_b @ sp[(-4)+-4]
 14494                           
 14495                           ;incstack = 0
 14496  012A22  0EFB               	movlw	251
 14497  012A24  24E1               	addwf	fsr1l,w,c
 14498  012A26  6ED9               	movwf	fsr2l,c
 14499  012A28  0EFF               	movlw	255
 14500  012A2A  20E2               	addwfc	fsr1h,w,c
 14501  012A2C  6EDA               	movwf	fsr2h,c
 14502  012A2E  50DF               	movf	indf2,w,c
 14503  012A30  6E40               	movwf	(btemp+11)^0,c
 14504  012A32  0E80               	movlw	128
 14505  012A34  1640               	andwf	(btemp+11)^0,f,c
 14506                           
 14507                           ;stkvar	_signs @ sp[(-4)+3]
 14508  012A36  0EFF               	movlw	-1
 14509  012A38  0060  F103  FFE3   	movff	btemp+11,plusw1
 14510                           
 14511                           ;stkvar	_b @ sp[(-4)+-4]
 14512  012A3E  0EFB               	movlw	251
 14513  012A40  24E1               	addwf	fsr1l,w,c
 14514  012A42  6ED9               	movwf	fsr2l,c
 14515  012A44  0EFF               	movlw	255
 14516  012A46  20E2               	addwfc	fsr1h,w,c
 14517  012A48  6EDA               	movwf	fsr2h,c
 14518  012A4A  50DF               	movf	indf2,w,c
 14519  012A4C  6E40               	movwf	(btemp+11)^0,c
 14520  012A4E  90D8               	bcf	status,0,c
 14521  012A50  3440               	rlcf	(btemp+11)^0,w,c
 14522  012A52  6E3F               	movwf	(btemp+10)^0,c
 14523                           
 14524                           ;stkvar	_bexp @ sp[(-4)+1]
 14525  012A54  0EFD               	movlw	-3
 14526  012A56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14527                           
 14528                           ;stkvar	_b @ sp[(-4)+-4]
 14529  012A5C  0EFA               	movlw	250
 14530  012A5E  24E1               	addwf	fsr1l,w,c
 14531  012A60  6ED9               	movwf	fsr2l,c
 14532  012A62  0EFF               	movlw	255
 14533  012A64  20E2               	addwfc	fsr1h,w,c
 14534  012A66  6EDA               	movwf	fsr2h,c
 14535  012A68  AEDF               	btfss	indf2,7,c
 14536  012A6A  D002               	goto	l6133
 14537                           
 14538                           ;stkvar	_bexp @ sp[(-4)+1]
 14539  012A6C  0EFD               	movlw	-3
 14540  012A6E  80E3               	bsf	plusw1,0,c
 14541  012A70                     l6133:
 14542                           
 14543                           ;stkvar	_bexp @ sp[(-4)+1]
 14544  012A70  0EFD               	movlw	-3
 14545  012A72  50E3               	movf	plusw1,w,c
 14546  012A74  B4D8               	btfsc	status,2,c
 14547  012A76  D027               	goto	l6143
 14548                           
 14549                           ;stkvar	_bexp @ sp[(-4)+1]
 14550  012A78  0EFD               	movlw	-3
 14551  012A7A  28E3               	incf	plusw1,w,c
 14552  012A7C  A4D8               	btfss	status,2,c
 14553  012A7E  D018               	goto	l6139
 14554  012A80  0E00               	movlw	0
 14555  012A82  6E3D               	movwf	(btemp+8)^0,c
 14556  012A84  0E00               	movlw	0
 14557  012A86  6E3E               	movwf	(btemp+9)^0,c
 14558  012A88  0E00               	movlw	0
 14559  012A8A  6E3F               	movwf	(btemp+10)^0,c
 14560  012A8C  0E00               	movlw	0
 14561  012A8E  6E40               	movwf	(btemp+11)^0,c
 14562                           
 14563                           ;stkvar	_b @ sp[(-4)+-4]
 14564  012A90  0EF8               	movlw	-8
 14565  012A92  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14566  012A98  0EF9               	movlw	-7
 14567  012A9A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14568  012AA0  0EFA               	movlw	-6
 14569  012AA2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14570  012AA8  0EFB               	movlw	-5
 14571  012AAA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14572  012AB0                     l6139:
 14573                           
 14574                           ;stkvar	_b @ sp[(-4)+-4]
 14575  012AB0  0EFA               	movlw	-6
 14576  012AB2  8EE3               	bsf	plusw1,7,c
 14577                           
 14578                           ;stkvar	_b @ sp[(-4)+-4]
 14579  012AB4  0EFB               	movlw	251
 14580  012AB6  24E1               	addwf	fsr1l,w,c
 14581  012AB8  6ED9               	movwf	fsr2l,c
 14582  012ABA  0EFF               	movlw	255
 14583  012ABC  20E2               	addwfc	fsr1h,w,c
 14584  012ABE  6EDA               	movwf	fsr2h,c
 14585  012AC0  0E00               	movlw	0
 14586  012AC2  6EDF               	movwf	indf2,c
 14587  012AC4  D018               	goto	l6145
 14588  012AC6                     l6143:
 14589  012AC6  0E00               	movlw	0
 14590  012AC8  6E3D               	movwf	(btemp+8)^0,c
 14591  012ACA  0E00               	movlw	0
 14592  012ACC  6E3E               	movwf	(btemp+9)^0,c
 14593  012ACE  0E00               	movlw	0
 14594  012AD0  6E3F               	movwf	(btemp+10)^0,c
 14595  012AD2  0E00               	movlw	0
 14596  012AD4  6E40               	movwf	(btemp+11)^0,c
 14597                           
 14598                           ;stkvar	_b @ sp[(-4)+-4]
 14599  012AD6  0EF8               	movlw	-8
 14600  012AD8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14601  012ADE  0EF9               	movlw	-7
 14602  012AE0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14603  012AE6  0EFA               	movlw	-6
 14604  012AE8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14605  012AEE  0EFB               	movlw	-5
 14606  012AF0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14607  012AF6                     l6145:
 14608                           
 14609                           ;stkvar	_a @ sp[(-4)+-8]
 14610  012AF6  0EF7               	movlw	247
 14611  012AF8  24E1               	addwf	fsr1l,w,c
 14612  012AFA  6ED9               	movwf	fsr2l,c
 14613  012AFC  0EFF               	movlw	255
 14614  012AFE  20E2               	addwfc	fsr1h,w,c
 14615  012B00  6EDA               	movwf	fsr2h,c
 14616  012B02  50DF               	movf	indf2,w,c
 14617  012B04  6E40               	movwf	(btemp+11)^0,c
 14618  012B06  0E80               	movlw	128
 14619  012B08  1640               	andwf	(btemp+11)^0,f,c
 14620                           
 14621                           ;stkvar	_aexp @ sp[(-4)+2]
 14622  012B0A  0EFE               	movlw	-2
 14623  012B0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 14624                           
 14625                           ;stkvar	_signs @ sp[(-4)+3]
 14626                           ;stkvar	_aexp @ sp[(-4)+2]
 14627  012B12  50E1               	movf	fsr1l,w,c
 14628  012B14  0FFE               	addlw	-2
 14629  012B16  6ED9               	movwf	fsr2l,c
 14630  012B18  50E2               	movf	fsr1h,w,c
 14631  012B1A  6EDA               	movwf	fsr2h,c
 14632  012B1C  0EFF               	movlw	255
 14633  012B1E  22DA               	addwfc	fsr2h,f,c
 14634  012B20  0EFF               	movlw	-1
 14635  012B22  50E3               	movf	plusw1,w,c
 14636  012B24  18DE               	xorwf	postinc2,w,c
 14637  012B26  B4D8               	btfsc	status,2,c
 14638  012B28  D002               	goto	l6151
 14639                           
 14640                           ;stkvar	_signs @ sp[(-4)+3]
 14641  012B2A  0EFF               	movlw	-1
 14642  012B2C  8CE3               	bsf	plusw1,6,c
 14643  012B2E                     l6151:
 14644                           
 14645                           ;stkvar	_a @ sp[(-4)+-8]
 14646  012B2E  0EF7               	movlw	247
 14647  012B30  24E1               	addwf	fsr1l,w,c
 14648  012B32  6ED9               	movwf	fsr2l,c
 14649  012B34  0EFF               	movlw	255
 14650  012B36  20E2               	addwfc	fsr1h,w,c
 14651  012B38  6EDA               	movwf	fsr2h,c
 14652  012B3A  50DF               	movf	indf2,w,c
 14653  012B3C  6E40               	movwf	(btemp+11)^0,c
 14654  012B3E  90D8               	bcf	status,0,c
 14655  012B40  3440               	rlcf	(btemp+11)^0,w,c
 14656  012B42  6E3F               	movwf	(btemp+10)^0,c
 14657                           
 14658                           ;stkvar	_aexp @ sp[(-4)+2]
 14659  012B44  0EFE               	movlw	-2
 14660  012B46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14661                           
 14662                           ;stkvar	_a @ sp[(-4)+-8]
 14663  012B4C  0EF6               	movlw	246
 14664  012B4E  24E1               	addwf	fsr1l,w,c
 14665  012B50  6ED9               	movwf	fsr2l,c
 14666  012B52  0EFF               	movlw	255
 14667  012B54  20E2               	addwfc	fsr1h,w,c
 14668  012B56  6EDA               	movwf	fsr2h,c
 14669  012B58  AEDF               	btfss	indf2,7,c
 14670  012B5A  D002               	goto	l6157
 14671                           
 14672                           ;stkvar	_aexp @ sp[(-4)+2]
 14673  012B5C  0EFE               	movlw	-2
 14674  012B5E  80E3               	bsf	plusw1,0,c
 14675  012B60                     l6157:
 14676                           
 14677                           ;stkvar	_aexp @ sp[(-4)+2]
 14678  012B60  0EFE               	movlw	-2
 14679  012B62  50E3               	movf	plusw1,w,c
 14680  012B64  B4D8               	btfsc	status,2,c
 14681  012B66  D027               	goto	l6167
 14682                           
 14683                           ;stkvar	_aexp @ sp[(-4)+2]
 14684  012B68  0EFE               	movlw	-2
 14685  012B6A  28E3               	incf	plusw1,w,c
 14686  012B6C  A4D8               	btfss	status,2,c
 14687  012B6E  D018               	goto	l6163
 14688  012B70  0E00               	movlw	0
 14689  012B72  6E3D               	movwf	(btemp+8)^0,c
 14690  012B74  0E00               	movlw	0
 14691  012B76  6E3E               	movwf	(btemp+9)^0,c
 14692  012B78  0E00               	movlw	0
 14693  012B7A  6E3F               	movwf	(btemp+10)^0,c
 14694  012B7C  0E00               	movlw	0
 14695  012B7E  6E40               	movwf	(btemp+11)^0,c
 14696                           
 14697                           ;stkvar	_a @ sp[(-4)+-8]
 14698  012B80  0EF4               	movlw	-12
 14699  012B82  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14700  012B88  0EF5               	movlw	-11
 14701  012B8A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14702  012B90  0EF6               	movlw	-10
 14703  012B92  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14704  012B98  0EF7               	movlw	-9
 14705  012B9A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14706  012BA0                     l6163:
 14707                           
 14708                           ;stkvar	_a @ sp[(-4)+-8]
 14709  012BA0  0EF6               	movlw	-10
 14710  012BA2  8EE3               	bsf	plusw1,7,c
 14711                           
 14712                           ;stkvar	_a @ sp[(-4)+-8]
 14713  012BA4  0EF7               	movlw	247
 14714  012BA6  24E1               	addwf	fsr1l,w,c
 14715  012BA8  6ED9               	movwf	fsr2l,c
 14716  012BAA  0EFF               	movlw	255
 14717  012BAC  20E2               	addwfc	fsr1h,w,c
 14718  012BAE  6EDA               	movwf	fsr2h,c
 14719  012BB0  0E00               	movlw	0
 14720  012BB2  6EDF               	movwf	indf2,c
 14721  012BB4  D018               	goto	l6169
 14722  012BB6                     l6167:
 14723  012BB6  0E00               	movlw	0
 14724  012BB8  6E3D               	movwf	(btemp+8)^0,c
 14725  012BBA  0E00               	movlw	0
 14726  012BBC  6E3E               	movwf	(btemp+9)^0,c
 14727  012BBE  0E00               	movlw	0
 14728  012BC0  6E3F               	movwf	(btemp+10)^0,c
 14729  012BC2  0E00               	movlw	0
 14730  012BC4  6E40               	movwf	(btemp+11)^0,c
 14731                           
 14732                           ;stkvar	_a @ sp[(-4)+-8]
 14733  012BC6  0EF4               	movlw	-12
 14734  012BC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14735  012BCE  0EF5               	movlw	-11
 14736  012BD0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14737  012BD6  0EF6               	movlw	-10
 14738  012BD8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14739  012BDE  0EF7               	movlw	-9
 14740  012BE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14741  012BE6                     l6169:
 14742                           
 14743                           ;stkvar	_bexp @ sp[(-4)+1]
 14744                           ;stkvar	_aexp @ sp[(-4)+2]
 14745  012BE6  50E1               	movf	fsr1l,w,c
 14746  012BE8  0FFE               	addlw	-2
 14747  012BEA  6ED9               	movwf	fsr2l,c
 14748  012BEC  50E2               	movf	fsr1h,w,c
 14749  012BEE  6EDA               	movwf	fsr2h,c
 14750  012BF0  0EFF               	movlw	255
 14751  012BF2  22DA               	addwfc	fsr2h,f,c
 14752  012BF4  0EFD               	movlw	-3
 14753  012BF6  50E3               	movf	plusw1,w,c
 14754  012BF8  5CDE               	subwf	postinc2,w,c
 14755  012BFA  B0D8               	btfsc	status,0,c
 14756  012BFC  D0A4               	goto	l6205
 14757                           
 14758                           ;stkvar	_signs @ sp[(-4)+3]
 14759  012BFE  0EFF               	movlw	-1
 14760  012C00  ACE3               	btfss	plusw1,6,c
 14761  012C02  D002               	goto	l6175
 14762                           
 14763                           ;stkvar	_signs @ sp[(-4)+3]
 14764  012C04  0EFF               	movlw	-1
 14765  012C06  7EE3               	btg	plusw1,7,c
 14766  012C08                     l6175:
 14767                           
 14768                           ;stkvar	_bexp @ sp[(-4)+1]
 14769                           ;stkvar	_grs @ sp[(-4)+0]
 14770  012C08  0EFD               	movlw	-3
 14771  012C0A  006F FF8C  F035    	movff	plusw1,btemp
 14772  012C10  0EFC               	movlw	-4
 14773  012C12  0060  F0D7  FFE3   	movff	btemp,plusw1
 14774                           
 14775                           ;stkvar	_aexp @ sp[(-4)+2]
 14776                           ;stkvar	_bexp @ sp[(-4)+1]
 14777  012C18  0EFE               	movlw	-2
 14778  012C1A  006F FF8C  F035    	movff	plusw1,btemp
 14779  012C20  0EFD               	movlw	-3
 14780  012C22  0060  F0D7  FFE3   	movff	btemp,plusw1
 14781                           
 14782                           ;stkvar	_grs @ sp[(-4)+0]
 14783                           ;stkvar	_aexp @ sp[(-4)+2]
 14784  012C28  0EFC               	movlw	-4
 14785  012C2A  006F FF8C  F035    	movff	plusw1,btemp
 14786  012C30  0EFE               	movlw	-2
 14787  012C32  0060  F0D7  FFE3   	movff	btemp,plusw1
 14788                           
 14789                           ;stkvar	_b @ sp[(-4)+-4]
 14790                           ;stkvar	_grs @ sp[(-4)+0]
 14791  012C38  0EF8               	movlw	-8
 14792  012C3A  006F FF8C  F035    	movff	plusw1,btemp
 14793  012C40  0EFC               	movlw	-4
 14794  012C42  0060  F0D7  FFE3   	movff	btemp,plusw1
 14795                           
 14796                           ;stkvar	_a @ sp[(-4)+-8]
 14797                           ;stkvar	_b @ sp[(-4)+-4]
 14798  012C48  0EF4               	movlw	-12
 14799  012C4A  006F FF8C  F035    	movff	plusw1,btemp
 14800  012C50  0EF8               	movlw	-8
 14801  012C52  0060  F0D7  FFE3   	movff	btemp,plusw1
 14802                           
 14803                           ;stkvar	_grs @ sp[(-4)+0]
 14804                           ;stkvar	_a @ sp[(-4)+-8]
 14805  012C58  0EFC               	movlw	-4
 14806  012C5A  006F FF8C  F035    	movff	plusw1,btemp
 14807  012C60  0EF4               	movlw	-12
 14808  012C62  0060  F0D7  FFE3   	movff	btemp,plusw1
 14809                           
 14810                           ;stkvar	_b @ sp[(-4)+-4]
 14811  012C68  0EF9               	movlw	249
 14812  012C6A  24E1               	addwf	fsr1l,w,c
 14813  012C6C  6ED9               	movwf	fsr2l,c
 14814  012C6E  0EFF               	movlw	255
 14815  012C70  20E2               	addwfc	fsr1h,w,c
 14816  012C72  6EDA               	movwf	fsr2h,c
 14817  012C74  50DF               	movf	indf2,w,c
 14818  012C76  6E40               	movwf	(btemp+11)^0,c
 14819                           
 14820                           ;stkvar	_grs @ sp[(-4)+0]
 14821  012C78  0EFC               	movlw	-4
 14822  012C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14823                           
 14824                           ;stkvar	_a @ sp[(-4)+-8]
 14825  012C80  0EF5               	movlw	245
 14826  012C82  24E1               	addwf	fsr1l,w,c
 14827  012C84  6ED9               	movwf	fsr2l,c
 14828  012C86  0EFF               	movlw	255
 14829  012C88  20E2               	addwfc	fsr1h,w,c
 14830  012C8A  6EDA               	movwf	fsr2h,c
 14831                           
 14832                           ;stkvar	_b @ sp[(-4)+-4]
 14833  012C8C  0EF9               	movlw	249
 14834  012C8E  24E1               	addwf	fsr1l,w,c
 14835  012C90  6EE9               	movwf	fsr0l,c
 14836  012C92  0EFF               	movlw	255
 14837  012C94  20E2               	addwfc	fsr1h,w,c
 14838  012C96  6EEA               	movwf	fsr0h,c
 14839  012C98  006F FF7F FFEF     	movff	indf2,indf0
 14840                           
 14841                           ;stkvar	_grs @ sp[(-4)+0]
 14842                           ;stkvar	_a @ sp[(-4)+-8]
 14843  012C9E  0EF5               	movlw	245
 14844  012CA0  24E1               	addwf	fsr1l,w,c
 14845  012CA2  6ED9               	movwf	fsr2l,c
 14846  012CA4  0EFF               	movlw	255
 14847  012CA6  20E2               	addwfc	fsr1h,w,c
 14848  012CA8  6EDA               	movwf	fsr2h,c
 14849  012CAA  0EFC               	movlw	-4
 14850  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 14851                           
 14852                           ;stkvar	_b @ sp[(-4)+-4]
 14853  012CB2  0EFA               	movlw	250
 14854  012CB4  24E1               	addwf	fsr1l,w,c
 14855  012CB6  6ED9               	movwf	fsr2l,c
 14856  012CB8  0EFF               	movlw	255
 14857  012CBA  20E2               	addwfc	fsr1h,w,c
 14858  012CBC  6EDA               	movwf	fsr2h,c
 14859  012CBE  50DF               	movf	indf2,w,c
 14860  012CC0  6E40               	movwf	(btemp+11)^0,c
 14861                           
 14862                           ;stkvar	_grs @ sp[(-4)+0]
 14863  012CC2  0EFC               	movlw	-4
 14864  012CC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 14865                           
 14866                           ;stkvar	_a @ sp[(-4)+-8]
 14867  012CCA  0EF6               	movlw	246
 14868  012CCC  24E1               	addwf	fsr1l,w,c
 14869  012CCE  6ED9               	movwf	fsr2l,c
 14870  012CD0  0EFF               	movlw	255
 14871  012CD2  20E2               	addwfc	fsr1h,w,c
 14872  012CD4  6EDA               	movwf	fsr2h,c
 14873                           
 14874                           ;stkvar	_b @ sp[(-4)+-4]
 14875  012CD6  0EFA               	movlw	250
 14876  012CD8  24E1               	addwf	fsr1l,w,c
 14877  012CDA  6EE9               	movwf	fsr0l,c
 14878  012CDC  0EFF               	movlw	255
 14879  012CDE  20E2               	addwfc	fsr1h,w,c
 14880  012CE0  6EEA               	movwf	fsr0h,c
 14881  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 14882                           
 14883                           ;stkvar	_grs @ sp[(-4)+0]
 14884                           ;stkvar	_a @ sp[(-4)+-8]
 14885  012CE8  0EF6               	movlw	246
 14886  012CEA  24E1               	addwf	fsr1l,w,c
 14887  012CEC  6ED9               	movwf	fsr2l,c
 14888  012CEE  0EFF               	movlw	255
 14889  012CF0  20E2               	addwfc	fsr1h,w,c
 14890  012CF2  6EDA               	movwf	fsr2h,c
 14891  012CF4  0EFC               	movlw	-4
 14892  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 14893                           
 14894                           ;stkvar	_b @ sp[(-4)+-4]
 14895  012CFC  0EFB               	movlw	251
 14896  012CFE  24E1               	addwf	fsr1l,w,c
 14897  012D00  6ED9               	movwf	fsr2l,c
 14898  012D02  0EFF               	movlw	255
 14899  012D04  20E2               	addwfc	fsr1h,w,c
 14900  012D06  6EDA               	movwf	fsr2h,c
 14901  012D08  50DF               	movf	indf2,w,c
 14902  012D0A  6E40               	movwf	(btemp+11)^0,c
 14903                           
 14904                           ;stkvar	_grs @ sp[(-4)+0]
 14905  012D0C  0EFC               	movlw	-4
 14906  012D0E  0060  F103  FFE3   	movff	btemp+11,plusw1
 14907                           
 14908                           ;stkvar	_a @ sp[(-4)+-8]
 14909  012D14  0EF7               	movlw	247
 14910  012D16  24E1               	addwf	fsr1l,w,c
 14911  012D18  6ED9               	movwf	fsr2l,c
 14912  012D1A  0EFF               	movlw	255
 14913  012D1C  20E2               	addwfc	fsr1h,w,c
 14914  012D1E  6EDA               	movwf	fsr2h,c
 14915                           
 14916                           ;stkvar	_b @ sp[(-4)+-4]
 14917  012D20  0EFB               	movlw	251
 14918  012D22  24E1               	addwf	fsr1l,w,c
 14919  012D24  6EE9               	movwf	fsr0l,c
 14920  012D26  0EFF               	movlw	255
 14921  012D28  20E2               	addwfc	fsr1h,w,c
 14922  012D2A  6EEA               	movwf	fsr0h,c
 14923  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 14924                           
 14925                           ;stkvar	_grs @ sp[(-4)+0]
 14926                           ;stkvar	_a @ sp[(-4)+-8]
 14927  012D32  0EF7               	movlw	247
 14928  012D34  24E1               	addwf	fsr1l,w,c
 14929  012D36  6ED9               	movwf	fsr2l,c
 14930  012D38  0EFF               	movlw	255
 14931  012D3A  20E2               	addwfc	fsr1h,w,c
 14932  012D3C  6EDA               	movwf	fsr2h,c
 14933  012D3E  0EFC               	movlw	-4
 14934  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 14935  012D46                     l6205:
 14936                           
 14937                           ;stkvar	_grs @ sp[(-4)+0]
 14938  012D46  0EFC               	movlw	-4
 14939  012D48  6AE3               	clrf	plusw1,c
 14940                           
 14941                           ;stkvar	_aexp @ sp[(-4)+2]
 14942  012D4A  0EFE               	movlw	-2
 14943  012D4C  50E3               	movf	plusw1,w,c
 14944  012D4E  6E3F               	movwf	(btemp+10)^0,c
 14945  012D50  6A40               	clrf	(btemp+11)^0,c
 14946                           
 14947                           ;stkvar	_bexp @ sp[(-4)+1]
 14948  012D52  0EFD               	movlw	-3
 14949  012D54  50E3               	movf	plusw1,w,c
 14950  012D56  5E3F               	subwf	(btemp+10)^0,f,c
 14951  012D58  0E00               	movlw	0
 14952  012D5A  5A40               	subwfb	(btemp+11)^0,f,c
 14953  012D5C  BE40               	btfsc	(btemp+11)^0,7,c
 14954  012D5E  D062               	goto	l6229
 14955  012D60  5040               	movf	(btemp+11)^0,w,c
 14956  012D62  E104               	bnz	u4730
 14957  012D64  0E1A               	movlw	26
 14958  012D66  5C3F               	subwf	(btemp+10)^0,w,c
 14959  012D68  A0D8               	btfss	status,0,c
 14960  012D6A  D05C               	goto	l6229
 14961  012D6C                     u4730:
 14962                           
 14963                           ;stkvar	_b @ sp[(-4)+-4]
 14964  012D6C  0EF8               	movlw	-8
 14965  012D6E  50E3               	movf	plusw1,w,c
 14966  012D70  E10A               	bnz	u4741
 14967  012D72  0EF9               	movlw	-7
 14968  012D74  50E3               	movf	plusw1,w,c
 14969  012D76  E107               	bnz	u4741
 14970  012D78  0EFA               	movlw	-6
 14971  012D7A  50E3               	movf	plusw1,w,c
 14972  012D7C  E104               	bnz	u4741
 14973  012D7E  0EFB               	movlw	-5
 14974  012D80  50E3               	movf	plusw1,w,c
 14975  012D82  B4D8               	btfsc	status,2,c
 14976  012D84  D003               	goto	u4740
 14977  012D86                     u4741:
 14978  012D86  6A40               	clrf	(btemp+11)^0,c
 14979  012D88  2A40               	incf	(btemp+11)^0,f,c
 14980  012D8A  D001               	goto	u4758
 14981  012D8C                     u4740:
 14982  012D8C  6A40               	clrf	(btemp+11)^0,c
 14983  012D8E                     u4758:
 14984                           
 14985                           ;stkvar	_grs @ sp[(-4)+0]
 14986  012D8E  0EFC               	movlw	-4
 14987  012D90  0060  F103  FFE3   	movff	btemp+11,plusw1
 14988                           
 14989                           ;stkvar	_b @ sp[(-4)+-4]
 14990  012D96  0EF8               	movlw	-8
 14991  012D98  6AE3               	clrf	plusw1,c
 14992  012D9A  0EF9               	movlw	-7
 14993  012D9C  6AE3               	clrf	plusw1,c
 14994  012D9E  0EFA               	movlw	-6
 14995  012DA0  6AE3               	clrf	plusw1,c
 14996  012DA2  0EFB               	movlw	-5
 14997  012DA4  6AE3               	clrf	plusw1,c
 14998                           
 14999                           ;stkvar	_aexp @ sp[(-4)+2]
 15000                           ;stkvar	_bexp @ sp[(-4)+1]
 15001  012DA6  0EFE               	movlw	-2
 15002  012DA8  006F FF8C  F035    	movff	plusw1,btemp
 15003  012DAE  0EFD               	movlw	-3
 15004  012DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 15005  012DB6  D042               	goto	u4790
 15006  012DB8                     l6215:
 15007                           
 15008                           ;stkvar	_grs @ sp[(-4)+0]
 15009  012DB8  0EFC               	movlw	-4
 15010  012DBA  A0E3               	btfss	plusw1,0,c
 15011  012DBC  D00D               	goto	l6219
 15012                           
 15013                           ;stkvar	_grs @ sp[(-4)+0]
 15014  012DBE  0EFC               	movlw	-4
 15015  012DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 15016  012DC6  90D8               	bcf	status,0,c
 15017  012DC8  3240               	rrcf	(btemp+11)^0,f,c
 15018  012DCA  0E01               	movlw	1
 15019  012DCC  1240               	iorwf	(btemp+11)^0,f,c
 15020                           
 15021                           ;stkvar	_grs @ sp[(-4)+0]
 15022  012DCE  0EFC               	movlw	-4
 15023  012DD0  0060  F103  FFE3   	movff	btemp+11,plusw1
 15024  012DD6  D009               	goto	l6221
 15025  012DD8                     l6219:
 15026                           
 15027                           ;stkvar	_grs @ sp[(-4)+0]
 15028  012DD8  50E1               	movf	fsr1l,w,c
 15029  012DDA  0FFC               	addlw	-4
 15030  012DDC  6ED9               	movwf	fsr2l,c
 15031  012DDE  50E2               	movf	fsr1h,w,c
 15032  012DE0  6EDA               	movwf	fsr2h,c
 15033  012DE2  0EFF               	movlw	255
 15034  012DE4  22DA               	addwfc	fsr2h,f,c
 15035  012DE6  90D8               	bcf	status,0,c
 15036  012DE8  32DF               	rrcf	indf2,f,c
 15037  012DEA                     l6221:
 15038                           
 15039                           ;stkvar	_b @ sp[(-4)+-4]
 15040  012DEA  0EF8               	movlw	-8
 15041  012DEC  A0E3               	btfss	plusw1,0,c
 15042  012DEE  D002               	goto	l6225
 15043                           
 15044                           ;stkvar	_grs @ sp[(-4)+0]
 15045  012DF0  0EFC               	movlw	-4
 15046  012DF2  8EE3               	bsf	plusw1,7,c
 15047  012DF4                     l6225:
 15048  012DF4  0E01               	movlw	1
 15049  012DF6  6E40               	movwf	(btemp+11)^0,c
 15050                           
 15051                           ;stkvar	_b @ sp[(-4)+-4]
 15052  012DF8  50E1               	movf	fsr1l,w,c
 15053  012DFA  0FF8               	addlw	-8
 15054  012DFC  6ED9               	movwf	fsr2l,c
 15055  012DFE  50E2               	movf	fsr1h,w,c
 15056  012E00  6EDA               	movwf	fsr2h,c
 15057  012E02  0EFF               	movlw	255
 15058  012E04  22DA               	addwfc	fsr2h,f,c
 15059  012E06  2840               	incf	(btemp+11)^0,w,c
 15060  012E08  52DE               	movf	postinc2,f,c
 15061  012E0A  D008               	goto	u4780
 15062  012E0C                     u4785:
 15063  012E0C  52DE               	movf	postinc2,f,c
 15064  012E0E  90D8               	bcf	status,0,c
 15065  012E10  BEDC               	btfsc	preinc2,7,c
 15066  012E12  80D8               	bsf	status,0,c
 15067  012E14  32DD               	rrcf	postdec2,f,c
 15068  012E16  32DD               	rrcf	postdec2,f,c
 15069  012E18  32DD               	rrcf	postdec2,f,c
 15070  012E1A  32DE               	rrcf	postinc2,f,c
 15071  012E1C                     u4780:
 15072  012E1C  2EE8               	decfsz	wreg,f,c
 15073  012E1E  D7F6               	goto	u4785
 15074                           
 15075                           ;stkvar	_bexp @ sp[(-4)+1]
 15076  012E20  0EFD               	movlw	-3
 15077  012E22  2AE3               	incf	plusw1,f,c
 15078  012E24                     l6229:
 15079                           
 15080                           ;stkvar	_aexp @ sp[(-4)+2]
 15081                           ;stkvar	_bexp @ sp[(-4)+1]
 15082  012E24  50E1               	movf	fsr1l,w,c
 15083  012E26  0FFD               	addlw	-3
 15084  012E28  6ED9               	movwf	fsr2l,c
 15085  012E2A  50E2               	movf	fsr1h,w,c
 15086  012E2C  6EDA               	movwf	fsr2h,c
 15087  012E2E  0EFF               	movlw	255
 15088  012E30  22DA               	addwfc	fsr2h,f,c
 15089  012E32  0EFE               	movlw	-2
 15090  012E34  50E3               	movf	plusw1,w,c
 15091  012E36  5CDE               	subwf	postinc2,w,c
 15092  012E38  A0D8               	btfss	status,0,c
 15093  012E3A  D7BE               	goto	l6215
 15094  012E3C                     u4790:
 15095                           
 15096                           ;stkvar	_signs @ sp[(-4)+3]
 15097  012E3C  0EFF               	movlw	-1
 15098  012E3E  BCE3               	btfsc	plusw1,6,c
 15099  012E40  D066               	goto	l6257
 15100                           
 15101                           ;stkvar	_bexp @ sp[(-4)+1]
 15102  012E42  0EFD               	movlw	-3
 15103  012E44  50E3               	movf	plusw1,w,c
 15104  012E46  B4D8               	btfsc	status,2,c
 15105  012E48  D0F2               	goto	u4890
 15106                           
 15107                           ;stkvar	_a @ sp[(-4)+-8]
 15108                           ;stkvar	_b @ sp[(-4)+-4]
 15109  012E4A  0EF8               	movlw	-8
 15110  012E4C  50E3               	movf	plusw1,w,c
 15111  012E4E  6E35               	movwf	btemp^0,c
 15112  012E50  0EF4               	movlw	-12
 15113  012E52  50E3               	movf	plusw1,w,c
 15114  012E54  2635               	addwf	btemp^0,f,c
 15115  012E56  0EF8               	movlw	-8
 15116  012E58  0060  F0D7  FFE3   	movff	btemp,plusw1
 15117  012E5E  0EF9               	movlw	-7
 15118  012E60  50E3               	movf	plusw1,w,c
 15119  012E62  6E35               	movwf	btemp^0,c
 15120  012E64  0EF5               	movlw	-11
 15121  012E66  50E3               	movf	plusw1,w,c
 15122  012E68  2235               	addwfc	btemp^0,f,c
 15123  012E6A  0EF9               	movlw	-7
 15124  012E6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 15125  012E72  0EFA               	movlw	-6
 15126  012E74  50E3               	movf	plusw1,w,c
 15127  012E76  6E35               	movwf	btemp^0,c
 15128  012E78  0EF6               	movlw	-10
 15129  012E7A  50E3               	movf	plusw1,w,c
 15130  012E7C  2235               	addwfc	btemp^0,f,c
 15131  012E7E  0EFA               	movlw	-6
 15132  012E80  0060  F0D7  FFE3   	movff	btemp,plusw1
 15133  012E86  0EFB               	movlw	-5
 15134  012E88  50E3               	movf	plusw1,w,c
 15135  012E8A  6E35               	movwf	btemp^0,c
 15136  012E8C  0EF7               	movlw	-9
 15137  012E8E  50E3               	movf	plusw1,w,c
 15138  012E90  2235               	addwfc	btemp^0,f,c
 15139  012E92  0EFB               	movlw	-5
 15140  012E94  0060  F0D7  FFE3   	movff	btemp,plusw1
 15141                           
 15142                           ;stkvar	_b @ sp[(-4)+-4]
 15143  012E9A  0EFB               	movlw	-5
 15144  012E9C  A0E3               	btfss	plusw1,0,c
 15145  012E9E  D101               	goto	u4930
 15146                           
 15147                           ;stkvar	_grs @ sp[(-4)+0]
 15148  012EA0  0EFC               	movlw	-4
 15149  012EA2  A0E3               	btfss	plusw1,0,c
 15150  012EA4  D00D               	goto	l6247
 15151                           
 15152                           ;stkvar	_grs @ sp[(-4)+0]
 15153  012EA6  0EFC               	movlw	-4
 15154  012EA8  006F FF8C  F040    	movff	plusw1,btemp+11
 15155  012EAE  90D8               	bcf	status,0,c
 15156  012EB0  3240               	rrcf	(btemp+11)^0,f,c
 15157  012EB2  0E01               	movlw	1
 15158  012EB4  1240               	iorwf	(btemp+11)^0,f,c
 15159                           
 15160                           ;stkvar	_grs @ sp[(-4)+0]
 15161  012EB6  0EFC               	movlw	-4
 15162  012EB8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15163  012EBE  D009               	goto	l6249
 15164  012EC0                     l6247:
 15165                           
 15166                           ;stkvar	_grs @ sp[(-4)+0]
 15167  012EC0  50E1               	movf	fsr1l,w,c
 15168  012EC2  0FFC               	addlw	-4
 15169  012EC4  6ED9               	movwf	fsr2l,c
 15170  012EC6  50E2               	movf	fsr1h,w,c
 15171  012EC8  6EDA               	movwf	fsr2h,c
 15172  012ECA  0EFF               	movlw	255
 15173  012ECC  22DA               	addwfc	fsr2h,f,c
 15174  012ECE  90D8               	bcf	status,0,c
 15175  012ED0  32DF               	rrcf	indf2,f,c
 15176  012ED2                     l6249:
 15177                           
 15178                           ;stkvar	_b @ sp[(-4)+-4]
 15179  012ED2  0EF8               	movlw	-8
 15180  012ED4  A0E3               	btfss	plusw1,0,c
 15181  012ED6  D002               	goto	l6253
 15182                           
 15183                           ;stkvar	_grs @ sp[(-4)+0]
 15184  012ED8  0EFC               	movlw	-4
 15185  012EDA  8EE3               	bsf	plusw1,7,c
 15186  012EDC                     l6253:
 15187  012EDC  0E01               	movlw	1
 15188  012EDE  6E40               	movwf	(btemp+11)^0,c
 15189                           
 15190                           ;stkvar	_b @ sp[(-4)+-4]
 15191  012EE0  50E1               	movf	fsr1l,w,c
 15192  012EE2  0FF8               	addlw	-8
 15193  012EE4  6ED9               	movwf	fsr2l,c
 15194  012EE6  50E2               	movf	fsr1h,w,c
 15195  012EE8  6EDA               	movwf	fsr2h,c
 15196  012EEA  0EFF               	movlw	255
 15197  012EEC  22DA               	addwfc	fsr2h,f,c
 15198  012EEE  2840               	incf	(btemp+11)^0,w,c
 15199  012EF0  52DE               	movf	postinc2,f,c
 15200  012EF2  D008               	goto	u4850
 15201  012EF4                     u4855:
 15202  012EF4  52DE               	movf	postinc2,f,c
 15203  012EF6  90D8               	bcf	status,0,c
 15204  012EF8  BEDC               	btfsc	preinc2,7,c
 15205  012EFA  80D8               	bsf	status,0,c
 15206  012EFC  32DD               	rrcf	postdec2,f,c
 15207  012EFE  32DD               	rrcf	postdec2,f,c
 15208  012F00  32DD               	rrcf	postdec2,f,c
 15209  012F02  32DE               	rrcf	postinc2,f,c
 15210  012F04                     u4850:
 15211  012F04  2EE8               	decfsz	wreg,f,c
 15212  012F06  D7F6               	goto	u4855
 15213                           
 15214                           ;stkvar	_bexp @ sp[(-4)+1]
 15215  012F08  0EFD               	movlw	-3
 15216  012F0A  2AE3               	incf	plusw1,f,c
 15217  012F0C  D0CA               	goto	u4930
 15218  012F0E                     l6257:
 15219                           
 15220                           ;stkvar	_a @ sp[(-4)+-8]
 15221                           ;stkvar	_b @ sp[(-4)+-4]
 15222  012F0E  50E1               	movf	fsr1l,w,c
 15223  012F10  0FF8               	addlw	-8
 15224  012F12  6ED9               	movwf	fsr2l,c
 15225  012F14  50E2               	movf	fsr1h,w,c
 15226  012F16  6EDA               	movwf	fsr2h,c
 15227  012F18  0EFF               	movlw	255
 15228  012F1A  22DA               	addwfc	fsr2h,f,c
 15229  012F1C  0EF4               	movlw	-12
 15230  012F1E  50E3               	movf	plusw1,w,c
 15231  012F20  5CDE               	subwf	postinc2,w,c
 15232  012F22  0EF5               	movlw	-11
 15233  012F24  50E3               	movf	plusw1,w,c
 15234  012F26  58DE               	subwfb	postinc2,w,c
 15235  012F28  0EF6               	movlw	-10
 15236  012F2A  50E3               	movf	plusw1,w,c
 15237  012F2C  58DE               	subwfb	postinc2,w,c
 15238  012F2E  50DE               	movf	postinc2,w,c
 15239  012F30  0A80               	xorlw	128
 15240  012F32  6E35               	movwf	btemp^0,c
 15241  012F34  0EF7               	movlw	-9
 15242  012F36  50E3               	movf	plusw1,w,c
 15243  012F38  0A80               	xorlw	128
 15244  012F3A  5835               	subwfb	btemp^0,w,c
 15245  012F3C  B0D8               	btfsc	status,0,c
 15246  012F3E  D053               	goto	l6269
 15247                           
 15248                           ;stkvar	_b @ sp[(-4)+-4]
 15249                           ;stkvar	_a @ sp[(-4)+-8]
 15250  012F40  0EF4               	movlw	-12
 15251  012F42  006F FF8C  F03D    	movff	plusw1,btemp+8
 15252  012F48  0EF5               	movlw	-11
 15253  012F4A  006F FF8C  F03E    	movff	plusw1,btemp+9
 15254  012F50  0EF6               	movlw	-10
 15255  012F52  006F FF8C  F03F    	movff	plusw1,btemp+10
 15256  012F58  0EF7               	movlw	-9
 15257  012F5A  006F FF8C  F040    	movff	plusw1,btemp+11
 15258  012F60  0EF8               	movlw	-8
 15259  012F62  50E3               	movf	plusw1,w,c
 15260  012F64  5E3D               	subwf	(btemp+8)^0,f,c
 15261  012F66  0EF9               	movlw	-7
 15262  012F68  50E3               	movf	plusw1,w,c
 15263  012F6A  5A3E               	subwfb	(btemp+9)^0,f,c
 15264  012F6C  0EFA               	movlw	-6
 15265  012F6E  50E3               	movf	plusw1,w,c
 15266  012F70  5A3F               	subwfb	(btemp+10)^0,f,c
 15267  012F72  0EFB               	movlw	-5
 15268  012F74  50E3               	movf	plusw1,w,c
 15269  012F76  5A40               	subwfb	(btemp+11)^0,f,c
 15270  012F78  0EFF               	movlw	255
 15271  012F7A  243D               	addwf	(btemp+8)^0,w,c
 15272  012F7C  6E39               	movwf	(btemp+4)^0,c
 15273  012F7E  0EFF               	movlw	255
 15274  012F80  203E               	addwfc	(btemp+9)^0,w,c
 15275  012F82  6E3A               	movwf	(btemp+5)^0,c
 15276  012F84  0EFF               	movlw	255
 15277  012F86  203F               	addwfc	(btemp+10)^0,w,c
 15278  012F88  6E3B               	movwf	(btemp+6)^0,c
 15279  012F8A  0EFF               	movlw	255
 15280  012F8C  2040               	addwfc	(btemp+11)^0,w,c
 15281  012F8E  6E3C               	movwf	(btemp+7)^0,c
 15282                           
 15283                           ;stkvar	_b @ sp[(-4)+-4]
 15284  012F90  0EF8               	movlw	-8
 15285  012F92  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 15286  012F98  0EF9               	movlw	-7
 15287  012F9A  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 15288  012FA0  0EFA               	movlw	-6
 15289  012FA2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 15290  012FA8  0EFB               	movlw	-5
 15291  012FAA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 15292                           
 15293                           ;stkvar	_signs @ sp[(-4)+3]
 15294  012FB0  0EFF               	movlw	-1
 15295  012FB2  7EE3               	btg	plusw1,7,c
 15296                           
 15297                           ;stkvar	_grs @ sp[(-4)+0]
 15298  012FB4  0EFC               	movlw	-4
 15299  012FB6  50E3               	movf	plusw1,w,c
 15300  012FB8  0800               	sublw	0
 15301  012FBA  6E40               	movwf	(btemp+11)^0,c
 15302                           
 15303                           ;stkvar	_grs @ sp[(-4)+0]
 15304  012FBC  0EFC               	movlw	-4
 15305  012FBE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15306                           
 15307                           ;stkvar	_grs @ sp[(-4)+0]
 15308  012FC4  0EFC               	movlw	-4
 15309  012FC6  50E3               	movf	plusw1,w,c
 15310  012FC8  A4D8               	btfss	status,2,c
 15311  012FCA  D020               	goto	l6271
 15312                           
 15313                           ;stkvar	_b @ sp[(-4)+-4]
 15314  012FCC  50E1               	movf	fsr1l,w,c
 15315  012FCE  0FF8               	addlw	-8
 15316  012FD0  6ED9               	movwf	fsr2l,c
 15317  012FD2  50E2               	movf	fsr1h,w,c
 15318  012FD4  6EDA               	movwf	fsr2h,c
 15319  012FD6  0EFF               	movlw	255
 15320  012FD8  22DA               	addwfc	fsr2h,f,c
 15321  012FDA  2ADE               	incf	postinc2,f,c
 15322  012FDC  0E00               	movlw	0
 15323  012FDE  22DE               	addwfc	postinc2,f,c
 15324  012FE0  22DE               	addwfc	postinc2,f,c
 15325  012FE2  22DE               	addwfc	postinc2,f,c
 15326  012FE4  D013               	goto	l6271
 15327  012FE6                     l6269:
 15328                           
 15329                           ;stkvar	_a @ sp[(-4)+-8]
 15330                           ;stkvar	_b @ sp[(-4)+-4]
 15331  012FE6  50E1               	movf	fsr1l,w,c
 15332  012FE8  0FF8               	addlw	-8
 15333  012FEA  6ED9               	movwf	fsr2l,c
 15334  012FEC  50E2               	movf	fsr1h,w,c
 15335  012FEE  6EDA               	movwf	fsr2h,c
 15336  012FF0  0EFF               	movlw	255
 15337  012FF2  22DA               	addwfc	fsr2h,f,c
 15338  012FF4  0EF4               	movlw	-12
 15339  012FF6  50E3               	movf	plusw1,w,c
 15340  012FF8  5EDE               	subwf	postinc2,f,c
 15341  012FFA  0EF5               	movlw	-11
 15342  012FFC  50E3               	movf	plusw1,w,c
 15343  012FFE  5ADE               	subwfb	postinc2,f,c
 15344  013000  0EF6               	movlw	-10
 15345  013002  50E3               	movf	plusw1,w,c
 15346  013004  5ADE               	subwfb	postinc2,f,c
 15347  013006  0EF7               	movlw	-9
 15348  013008  50E3               	movf	plusw1,w,c
 15349  01300A  5ADE               	subwfb	postinc2,f,c
 15350  01300C                     l6271:
 15351                           
 15352                           ;stkvar	_b @ sp[(-4)+-4]
 15353  01300C  0EF8               	movlw	-8
 15354  01300E  50E3               	movf	plusw1,w,c
 15355  013010  E145               	bnz	l6293
 15356  013012  0EF9               	movlw	-7
 15357  013014  50E3               	movf	plusw1,w,c
 15358  013016  E142               	bnz	l6293
 15359  013018  0EFA               	movlw	-6
 15360  01301A  50E3               	movf	plusw1,w,c
 15361  01301C  E13F               	bnz	l6293
 15362  01301E  0EFB               	movlw	-5
 15363  013020  50E3               	movf	plusw1,w,c
 15364  013022  A4D8               	btfss	status,2,c
 15365  013024  D03B               	goto	l6293
 15366                           
 15367                           ;stkvar	_grs @ sp[(-4)+0]
 15368  013026  0EFC               	movlw	-4
 15369  013028  50E3               	movf	plusw1,w,c
 15370  01302A  A4D8               	btfss	status,2,c
 15371  01302C  D037               	goto	l6293
 15372  01302E                     u4890:
 15373  01302E  0E00               	movlw	0
 15374  013030  6E35               	movwf	btemp^0,c
 15375  013032  0E00               	movlw	0
 15376  013034  6E36               	movwf	(btemp+1)^0,c
 15377  013036  0E00               	movlw	0
 15378  013038  6E37               	movwf	(btemp+2)^0,c
 15379  01303A  0E00               	movlw	0
 15380  01303C  6E38               	movwf	(btemp+3)^0,c
 15381  01303E  D0C6               	goto	l2545
 15382  013040                     l6279:
 15383                           
 15384                           ;stkvar	_b @ sp[(-4)+-4]
 15385  013040  90D8               	bcf	status,0,c
 15386  013042  0EF8               	movlw	-8
 15387  013044  36E3               	rlcf	plusw1,f,c
 15388  013046  0EF9               	movlw	-7
 15389  013048  36E3               	rlcf	plusw1,f,c
 15390  01304A  0EFA               	movlw	-6
 15391  01304C  36E3               	rlcf	plusw1,f,c
 15392  01304E  0EFB               	movlw	-5
 15393  013050  36E3               	rlcf	plusw1,f,c
 15394                           
 15395                           ;stkvar	_grs @ sp[(-4)+0]
 15396  013052  0EFC               	movlw	-4
 15397  013054  AEE3               	btfss	plusw1,7,c
 15398  013056  D002               	goto	l2557
 15399                           
 15400                           ;stkvar	_b @ sp[(-4)+-4]
 15401  013058  0EF8               	movlw	-8
 15402  01305A  80E3               	bsf	plusw1,0,c
 15403  01305C                     l2557:
 15404                           
 15405                           ;stkvar	_grs @ sp[(-4)+0]
 15406  01305C  0EFC               	movlw	-4
 15407  01305E  A0E3               	btfss	plusw1,0,c
 15408  013060  D00E               	goto	l6287
 15409                           
 15410                           ;stkvar	_grs @ sp[(-4)+0]
 15411  013062  0EFC               	movlw	-4
 15412  013064  006F FF8C  F040    	movff	plusw1,btemp+11
 15413  01306A  90D8               	bcf	status,0,c
 15414  01306C  3440               	rlcf	(btemp+11)^0,w,c
 15415  01306E  6E3F               	movwf	(btemp+10)^0,c
 15416  013070  0E01               	movlw	1
 15417  013072  123F               	iorwf	(btemp+10)^0,f,c
 15418                           
 15419                           ;stkvar	_grs @ sp[(-4)+0]
 15420  013074  0EFC               	movlw	-4
 15421  013076  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15422  01307C  D009               	goto	l6289
 15423  01307E                     l6287:
 15424                           
 15425                           ;stkvar	_grs @ sp[(-4)+0]
 15426  01307E  50E1               	movf	fsr1l,w,c
 15427  013080  0FFC               	addlw	-4
 15428  013082  6ED9               	movwf	fsr2l,c
 15429  013084  50E2               	movf	fsr1h,w,c
 15430  013086  6EDA               	movwf	fsr2h,c
 15431  013088  0EFF               	movlw	255
 15432  01308A  22DA               	addwfc	fsr2h,f,c
 15433  01308C  90D8               	bcf	status,0,c
 15434  01308E  36DF               	rlcf	indf2,f,c
 15435  013090                     l6289:
 15436                           
 15437                           ;stkvar	_bexp @ sp[(-4)+1]
 15438  013090  0EFD               	movlw	-3
 15439  013092  50E3               	movf	plusw1,w,c
 15440  013094  B4D8               	btfsc	status,2,c
 15441  013096  D002               	goto	l6293
 15442                           
 15443                           ;stkvar	_bexp @ sp[(-4)+1]
 15444  013098  0EFD               	movlw	-3
 15445  01309A  06E3               	decf	plusw1,f,c
 15446  01309C                     l6293:
 15447                           
 15448                           ;stkvar	_b @ sp[(-4)+-4]
 15449  01309C  0EFA               	movlw	-6
 15450  01309E  AEE3               	btfss	plusw1,7,c
 15451  0130A0  D7CF               	goto	l6279
 15452  0130A2                     u4930:
 15453                           
 15454                           ;stkvar	_aexp @ sp[(-4)+2]
 15455  0130A2  0EFE               	movlw	-2
 15456  0130A4  6AE3               	clrf	plusw1,c
 15457                           
 15458                           ;stkvar	_grs @ sp[(-4)+0]
 15459  0130A6  0EFC               	movlw	-4
 15460  0130A8  AEE3               	btfss	plusw1,7,c
 15461  0130AA  D00F               	goto	l6307
 15462                           
 15463                           ;stkvar	_grs @ sp[(-4)+0]
 15464  0130AC  0EFC               	movlw	-4
 15465  0130AE  006F FF8C  F040    	movff	plusw1,btemp+11
 15466  0130B4  0E7F               	movlw	127
 15467  0130B6  1640               	andwf	(btemp+11)^0,f,c
 15468  0130B8  B4D8               	btfsc	status,2,c
 15469  0130BA  D004               	goto	l6303
 15470  0130BC                     u4950:
 15471                           
 15472                           ;stkvar	_aexp @ sp[(-4)+2]
 15473  0130BC  0EFE               	movlw	-2
 15474  0130BE  6AE3               	clrf	plusw1,c
 15475  0130C0  2AE3               	incf	plusw1,f,c
 15476  0130C2  D003               	goto	l6307
 15477  0130C4                     l6303:
 15478                           
 15479                           ;stkvar	_b @ sp[(-4)+-4]
 15480  0130C4  0EF8               	movlw	-8
 15481  0130C6  B0E3               	btfsc	plusw1,0,c
 15482  0130C8  D7F9               	goto	u4950
 15483  0130CA                     l6307:
 15484                           
 15485                           ;stkvar	_aexp @ sp[(-4)+2]
 15486  0130CA  0EFE               	movlw	-2
 15487  0130CC  50E3               	movf	plusw1,w,c
 15488  0130CE  B4D8               	btfsc	status,2,c
 15489  0130D0  D02B               	goto	l6319
 15490                           
 15491                           ;stkvar	_b @ sp[(-4)+-4]
 15492  0130D2  50E1               	movf	fsr1l,w,c
 15493  0130D4  0FF8               	addlw	-8
 15494  0130D6  6ED9               	movwf	fsr2l,c
 15495  0130D8  50E2               	movf	fsr1h,w,c
 15496  0130DA  6EDA               	movwf	fsr2h,c
 15497  0130DC  0EFF               	movlw	255
 15498  0130DE  22DA               	addwfc	fsr2h,f,c
 15499  0130E0  2ADE               	incf	postinc2,f,c
 15500  0130E2  0E00               	movlw	0
 15501  0130E4  22DE               	addwfc	postinc2,f,c
 15502  0130E6  22DE               	addwfc	postinc2,f,c
 15503  0130E8  22DE               	addwfc	postinc2,f,c
 15504                           
 15505                           ;stkvar	_b @ sp[(-4)+-4]
 15506  0130EA  0EFB               	movlw	-5
 15507  0130EC  A0E3               	btfss	plusw1,0,c
 15508  0130EE  D01C               	goto	l6319
 15509  0130F0  0E01               	movlw	1
 15510  0130F2  6E40               	movwf	(btemp+11)^0,c
 15511                           
 15512                           ;stkvar	_b @ sp[(-4)+-4]
 15513  0130F4  50E1               	movf	fsr1l,w,c
 15514  0130F6  0FF8               	addlw	-8
 15515  0130F8  6ED9               	movwf	fsr2l,c
 15516  0130FA  50E2               	movf	fsr1h,w,c
 15517  0130FC  6EDA               	movwf	fsr2h,c
 15518  0130FE  0EFF               	movlw	255
 15519  013100  22DA               	addwfc	fsr2h,f,c
 15520  013102  2840               	incf	(btemp+11)^0,w,c
 15521  013104  52DE               	movf	postinc2,f,c
 15522  013106  D008               	goto	u4990
 15523  013108                     u4995:
 15524  013108  52DE               	movf	postinc2,f,c
 15525  01310A  90D8               	bcf	status,0,c
 15526  01310C  BEDC               	btfsc	preinc2,7,c
 15527  01310E  80D8               	bsf	status,0,c
 15528  013110  32DD               	rrcf	postdec2,f,c
 15529  013112  32DD               	rrcf	postdec2,f,c
 15530  013114  32DD               	rrcf	postdec2,f,c
 15531  013116  32DE               	rrcf	postinc2,f,c
 15532  013118                     u4990:
 15533  013118  2EE8               	decfsz	wreg,f,c
 15534  01311A  D7F6               	goto	u4995
 15535                           
 15536                           ;stkvar	_bexp @ sp[(-4)+1]
 15537  01311C  0EFD               	movlw	-3
 15538  01311E  28E3               	incf	plusw1,w,c
 15539  013120  B4D8               	btfsc	status,2,c
 15540  013122  D002               	goto	l6319
 15541                           
 15542                           ;stkvar	_bexp @ sp[(-4)+1]
 15543  013124  0EFD               	movlw	-3
 15544  013126  2AE3               	incf	plusw1,f,c
 15545  013128                     l6319:
 15546                           
 15547                           ;stkvar	_bexp @ sp[(-4)+1]
 15548  013128  0EFD               	movlw	-3
 15549  01312A  28E3               	incf	plusw1,w,c
 15550  01312C  B4D8               	btfsc	status,2,c
 15551  01312E  D004               	goto	u5020
 15552                           
 15553                           ;stkvar	_bexp @ sp[(-4)+1]
 15554  013130  0EFD               	movlw	-3
 15555  013132  50E3               	movf	plusw1,w,c
 15556  013134  A4D8               	btfss	status,2,c
 15557  013136  D00E               	goto	l6329
 15558  013138                     u5020:
 15559                           
 15560                           ;stkvar	_b @ sp[(-4)+-4]
 15561  013138  0EF8               	movlw	-8
 15562  01313A  6AE3               	clrf	plusw1,c
 15563  01313C  0EF9               	movlw	-7
 15564  01313E  6AE3               	clrf	plusw1,c
 15565  013140  0EFA               	movlw	-6
 15566  013142  6AE3               	clrf	plusw1,c
 15567  013144  0EFB               	movlw	-5
 15568  013146  6AE3               	clrf	plusw1,c
 15569                           
 15570                           ;stkvar	_bexp @ sp[(-4)+1]
 15571  013148  0EFD               	movlw	-3
 15572  01314A  50E3               	movf	plusw1,w,c
 15573  01314C  A4D8               	btfss	status,2,c
 15574  01314E  D002               	goto	l6329
 15575                           
 15576                           ;stkvar	_signs @ sp[(-4)+3]
 15577  013150  0EFF               	movlw	-1
 15578  013152  6AE3               	clrf	plusw1,c
 15579  013154                     l6329:
 15580                           
 15581                           ;stkvar	_bexp @ sp[(-4)+1]
 15582  013154  0EFD               	movlw	-3
 15583  013156  A0E3               	btfss	plusw1,0,c
 15584  013158  D009               	goto	l6333
 15585                           
 15586                           ;stkvar	_b @ sp[(-4)+-4]
 15587  01315A  0EFA               	movlw	250
 15588  01315C  24E1               	addwf	fsr1l,w,c
 15589  01315E  6ED9               	movwf	fsr2l,c
 15590  013160  0EFF               	movlw	255
 15591  013162  20E2               	addwfc	fsr1h,w,c
 15592  013164  6EDA               	movwf	fsr2h,c
 15593  013166  0E00               	movlw	0
 15594  013168  8EDB               	bsf	plusw2,7,c
 15595  01316A  D008               	goto	l6335
 15596  01316C                     l6333:
 15597                           
 15598                           ;stkvar	_b @ sp[(-4)+-4]
 15599  01316C  0EFA               	movlw	250
 15600  01316E  24E1               	addwf	fsr1l,w,c
 15601  013170  6ED9               	movwf	fsr2l,c
 15602  013172  0EFF               	movlw	255
 15603  013174  20E2               	addwfc	fsr1h,w,c
 15604  013176  6EDA               	movwf	fsr2h,c
 15605  013178  0E7F               	movlw	127
 15606  01317A  16DF               	andwf	indf2,f,c
 15607  01317C                     l6335:
 15608                           
 15609                           ;stkvar	_b @ sp[(-4)+-4]
 15610  01317C  0EFB               	movlw	251
 15611  01317E  24E1               	addwf	fsr1l,w,c
 15612  013180  6ED9               	movwf	fsr2l,c
 15613  013182  0EFF               	movlw	255
 15614  013184  20E2               	addwfc	fsr1h,w,c
 15615  013186  6EDA               	movwf	fsr2h,c
 15616                           
 15617                           ;stkvar	_bexp @ sp[(-4)+1]
 15618  013188  0EFD               	movlw	-3
 15619  01318A  006F FF8C  F040    	movff	plusw1,btemp+11
 15620  013190  90D8               	bcf	status,0,c
 15621  013192  3040               	rrcf	(btemp+11)^0,w,c
 15622  013194  6EDF               	movwf	indf2,c
 15623                           
 15624                           ;stkvar	_signs @ sp[(-4)+3]
 15625  013196  0EFF               	movlw	-1
 15626  013198  AEE3               	btfss	plusw1,7,c
 15627  01319A  D008               	goto	l6341
 15628                           
 15629                           ;stkvar	_b @ sp[(-4)+-4]
 15630  01319C  0EFB               	movlw	251
 15631  01319E  24E1               	addwf	fsr1l,w,c
 15632  0131A0  6ED9               	movwf	fsr2l,c
 15633  0131A2  0EFF               	movlw	255
 15634  0131A4  20E2               	addwfc	fsr1h,w,c
 15635  0131A6  6EDA               	movwf	fsr2h,c
 15636  0131A8  0E00               	movlw	0
 15637  0131AA  8EDB               	bsf	plusw2,7,c
 15638  0131AC                     l6341:
 15639                           
 15640                           ;stkvar	_b @ sp[(-4)+-4]
 15641  0131AC  0EF8               	movlw	-8
 15642  0131AE  006F FF8C  F035    	movff	plusw1,btemp
 15643  0131B4  0EF9               	movlw	-7
 15644  0131B6  006F FF8C  F036    	movff	plusw1,btemp+1
 15645  0131BC  0EFA               	movlw	-6
 15646  0131BE  006F FF8C  F037    	movff	plusw1,btemp+2
 15647  0131C4  0EFB               	movlw	-5
 15648  0131C6  006F FF8C  F038    	movff	plusw1,btemp+3
 15649  0131CC                     l2545:
 15650                           
 15651                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15652  0131CC  0EF4               	movlw	244
 15653  0131CE  26E1               	addwf	fsr1l,f,c
 15654  0131D0  0EFF               	movlw	255
 15655  0131D2  22E2               	addwfc	fsr1h,f,c
 15656  0131D4  0012               	return		;funcret
 15657  0131D6                     __end_of___fladd:
 15658                           	opt callstack 0
 15659                           
 15660 ;; *************** function ___flneg *****************
 15661 ;; Defined at:
 15662 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  f1              4  [STACK] unsigned char 
 15665 ;; Auto vars:     Size  Location     Type
 15666 ;;		None
 15667 ;; Return value:  Size  Location     Type
 15668 ;;                  4  [STACK] unsigned char 
 15669 ;; Registers used:
 15670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15671 ;; Tracked objects:
 15672 ;;		On entry : 0/4
 15673 ;;		On exit  : 0/0
 15674 ;;		Unchanged: 0/0
 15675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15680 ;;Total ram usage:        0 bytes
 15681 ;; Hardware stack levels used:    1
 15682 ;; Hardware stack levels required when called:    6
 15683 ;; This function calls:
 15684 ;;		Nothing
 15685 ;; This function is called by:
 15686 ;;		_efgtoa
 15687 ;; This function uses a reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text53
 15691  018254                     __ptext53:
 15692                           	opt callstack 0
 15693  018254                     ___flneg:
 15694                           	opt callstack 17
 15695                           
 15696                           ;stkvar	_f1 @ sp[(0)+-4]
 15697                           
 15698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15699                           ;incstack = 0
 15700  018254  0EFC               	movlw	-4
 15701  018256  50E3               	movf	plusw1,w,c
 15702  018258  E10A               	bnz	u6330
 15703  01825A  0EFD               	movlw	-3
 15704  01825C  50E3               	movf	plusw1,w,c
 15705  01825E  E107               	bnz	u6330
 15706  018260  0EFE               	movlw	-2
 15707  018262  50E3               	movf	plusw1,w,c
 15708  018264  E104               	bnz	u6330
 15709  018266  0EFF               	movlw	-1
 15710  018268  50E3               	movf	plusw1,w,c
 15711  01826A  B4D8               	btfsc	status,2,c
 15712  01826C  D002               	goto	l7009
 15713  01826E                     u6330:
 15714                           
 15715                           ;stkvar	_f1 @ sp[(0)+-4]
 15716  01826E  0EFF               	movlw	-1
 15717  018270  7EE3               	btg	plusw1,7,c
 15718  018272                     l7009:
 15719                           
 15720                           ;stkvar	_f1 @ sp[(0)+-4]
 15721  018272  0EFC               	movlw	-4
 15722  018274  006F FF8C  F035    	movff	plusw1,btemp
 15723  01827A  0EFD               	movlw	-3
 15724  01827C  006F FF8C  F036    	movff	plusw1,btemp+1
 15725  018282  0EFE               	movlw	-2
 15726  018284  006F FF8C  F037    	movff	plusw1,btemp+2
 15727  01828A  0EFF               	movlw	-1
 15728  01828C  006F FF8C  F038    	movff	plusw1,btemp+3
 15729                           
 15730                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15731  018292  52E5               	movf	postdec1,f,c
 15732  018294  52E5               	movf	postdec1,f,c
 15733  018296  52E5               	movf	postdec1,f,c
 15734  018298  52E5               	movf	postdec1,f,c
 15735  01829A  0012               	return		;funcret
 15736  01829C                     __end_of___flneg:
 15737                           	opt callstack 0
 15738                           
 15739 ;; *************** function ___flmul *****************
 15740 ;; Defined at:
 15741 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;  b               4  [STACK] unsigned char 
 15744 ;;  a               4  [STACK] unsigned char 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;  prod            4  [STACK] struct .
 15747 ;;  grs             4  [STACK] unsigned long 
 15748 ;;  temp            2  [STACK] struct .
 15749 ;;  bexp            1  [STACK] unsigned char 
 15750 ;;  aexp            1  [STACK] unsigned char 
 15751 ;;  sign            1  [STACK] unsigned char 
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  4  [STACK] unsigned char 
 15754 ;; Registers used:
 15755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/4
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15765 ;;Total ram usage:        0 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; Hardware stack levels required when called:    6
 15768 ;; This function calls:
 15769 ;;		Nothing
 15770 ;; This function is called by:
 15771 ;;		_conv_raw_result
 15772 ;;		_lp_filter
 15773 ;;		_efgtoa
 15774 ;; This function uses a reentrant model
 15775 ;;
 15776                           
 15777                           	psect	text54
 15778  0121F0                     __ptext54:
 15779                           	opt callstack 0
 15780  0121F0                     ___flmul:
 15781                           	opt callstack 0
 15782                           
 15783                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15784  0121F0  0E0D               	movlw	13
 15785  0121F2  26E1               	addwf	fsr1l,f,c
 15786  0121F4  0E00               	movlw	0
 15787  0121F6  22E2               	addwfc	fsr1h,f,c
 15788                           
 15789                           ;stkvar	_b @ sp[(-13)+-4]
 15790                           
 15791                           ;incstack = 0
 15792  0121F8  0EF2               	movlw	242
 15793  0121FA  24E1               	addwf	fsr1l,w,c
 15794  0121FC  6ED9               	movwf	fsr2l,c
 15795  0121FE  0EFF               	movlw	255
 15796  012200  20E2               	addwfc	fsr1h,w,c
 15797  012202  6EDA               	movwf	fsr2h,c
 15798  012204  50DF               	movf	indf2,w,c
 15799  012206  6E40               	movwf	(btemp+11)^0,c
 15800  012208  0E80               	movlw	128
 15801  01220A  1640               	andwf	(btemp+11)^0,f,c
 15802                           
 15803                           ;stkvar	_sign @ sp[(-13)+12]
 15804  01220C  0EFF               	movlw	-1
 15805  01220E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15806                           
 15807                           ;stkvar	_b @ sp[(-13)+-4]
 15808  012214  0EF2               	movlw	242
 15809  012216  24E1               	addwf	fsr1l,w,c
 15810  012218  6ED9               	movwf	fsr2l,c
 15811  01221A  0EFF               	movlw	255
 15812  01221C  20E2               	addwfc	fsr1h,w,c
 15813  01221E  6EDA               	movwf	fsr2h,c
 15814  012220  50DF               	movf	indf2,w,c
 15815  012222  6E40               	movwf	(btemp+11)^0,c
 15816  012224  90D8               	bcf	status,0,c
 15817  012226  3440               	rlcf	(btemp+11)^0,w,c
 15818  012228  6E3F               	movwf	(btemp+10)^0,c
 15819                           
 15820                           ;stkvar	_bexp @ sp[(-13)+10]
 15821  01222A  0EFD               	movlw	-3
 15822  01222C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15823                           
 15824                           ;stkvar	_b @ sp[(-13)+-4]
 15825  012232  0EF1               	movlw	241
 15826  012234  24E1               	addwf	fsr1l,w,c
 15827  012236  6ED9               	movwf	fsr2l,c
 15828  012238  0EFF               	movlw	255
 15829  01223A  20E2               	addwfc	fsr1h,w,c
 15830  01223C  6EDA               	movwf	fsr2h,c
 15831  01223E  AEDF               	btfss	indf2,7,c
 15832  012240  D002               	goto	l6725
 15833                           
 15834                           ;stkvar	_bexp @ sp[(-13)+10]
 15835  012242  0EFD               	movlw	-3
 15836  012244  80E3               	bsf	plusw1,0,c
 15837  012246                     l6725:
 15838                           
 15839                           ;stkvar	_bexp @ sp[(-13)+10]
 15840  012246  0EFD               	movlw	-3
 15841  012248  50E3               	movf	plusw1,w,c
 15842  01224A  B4D8               	btfsc	status,2,c
 15843  01224C  D01F               	goto	l6733
 15844                           
 15845                           ;stkvar	_bexp @ sp[(-13)+10]
 15846  01224E  0EFD               	movlw	-3
 15847  012250  28E3               	incf	plusw1,w,c
 15848  012252  A4D8               	btfss	status,2,c
 15849  012254  D018               	goto	l6731
 15850  012256  0E00               	movlw	0
 15851  012258  6E3D               	movwf	(btemp+8)^0,c
 15852  01225A  0E00               	movlw	0
 15853  01225C  6E3E               	movwf	(btemp+9)^0,c
 15854  01225E  0E00               	movlw	0
 15855  012260  6E3F               	movwf	(btemp+10)^0,c
 15856  012262  0E00               	movlw	0
 15857  012264  6E40               	movwf	(btemp+11)^0,c
 15858                           
 15859                           ;stkvar	_b @ sp[(-13)+-4]
 15860  012266  0EEF               	movlw	-17
 15861  012268  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15862  01226E  0EF0               	movlw	-16
 15863  012270  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15864  012276  0EF1               	movlw	-15
 15865  012278  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15866  01227E  0EF2               	movlw	-14
 15867  012280  0060  F103  FFE3   	movff	btemp+11,plusw1
 15868  012286                     l6731:
 15869                           
 15870                           ;stkvar	_b @ sp[(-13)+-4]
 15871  012286  0EF1               	movlw	-15
 15872  012288  8EE3               	bsf	plusw1,7,c
 15873  01228A  D018               	goto	l6735
 15874  01228C                     l6733:
 15875  01228C  0E00               	movlw	0
 15876  01228E  6E3D               	movwf	(btemp+8)^0,c
 15877  012290  0E00               	movlw	0
 15878  012292  6E3E               	movwf	(btemp+9)^0,c
 15879  012294  0E00               	movlw	0
 15880  012296  6E3F               	movwf	(btemp+10)^0,c
 15881  012298  0E00               	movlw	0
 15882  01229A  6E40               	movwf	(btemp+11)^0,c
 15883                           
 15884                           ;stkvar	_b @ sp[(-13)+-4]
 15885  01229C  0EEF               	movlw	-17
 15886  01229E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15887  0122A4  0EF0               	movlw	-16
 15888  0122A6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15889  0122AC  0EF1               	movlw	-15
 15890  0122AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15891  0122B4  0EF2               	movlw	-14
 15892  0122B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 15893  0122BC                     l6735:
 15894                           
 15895                           ;stkvar	_a @ sp[(-13)+-8]
 15896  0122BC  0EEE               	movlw	238
 15897  0122BE  24E1               	addwf	fsr1l,w,c
 15898  0122C0  6ED9               	movwf	fsr2l,c
 15899  0122C2  0EFF               	movlw	255
 15900  0122C4  20E2               	addwfc	fsr1h,w,c
 15901  0122C6  6EDA               	movwf	fsr2h,c
 15902  0122C8  50DF               	movf	indf2,w,c
 15903  0122CA  6E40               	movwf	(btemp+11)^0,c
 15904  0122CC  0E80               	movlw	128
 15905  0122CE  1640               	andwf	(btemp+11)^0,f,c
 15906                           
 15907                           ;stkvar	_sign @ sp[(-13)+12]
 15908  0122D0  50E1               	movf	fsr1l,w,c
 15909  0122D2  0FFF               	addlw	-1
 15910  0122D4  6ED9               	movwf	fsr2l,c
 15911  0122D6  50E2               	movf	fsr1h,w,c
 15912  0122D8  6EDA               	movwf	fsr2h,c
 15913  0122DA  0EFF               	movlw	255
 15914  0122DC  22DA               	addwfc	fsr2h,f,c
 15915  0122DE  5040               	movf	(btemp+11)^0,w,c
 15916  0122E0  1ADF               	xorwf	indf2,f,c
 15917                           
 15918                           ;stkvar	_a @ sp[(-13)+-8]
 15919  0122E2  0EEE               	movlw	238
 15920  0122E4  24E1               	addwf	fsr1l,w,c
 15921  0122E6  6ED9               	movwf	fsr2l,c
 15922  0122E8  0EFF               	movlw	255
 15923  0122EA  20E2               	addwfc	fsr1h,w,c
 15924  0122EC  6EDA               	movwf	fsr2h,c
 15925  0122EE  50DF               	movf	indf2,w,c
 15926  0122F0  6E40               	movwf	(btemp+11)^0,c
 15927  0122F2  90D8               	bcf	status,0,c
 15928  0122F4  3440               	rlcf	(btemp+11)^0,w,c
 15929  0122F6  6E3F               	movwf	(btemp+10)^0,c
 15930                           
 15931                           ;stkvar	_aexp @ sp[(-13)+11]
 15932  0122F8  0EFE               	movlw	-2
 15933  0122FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15934                           
 15935                           ;stkvar	_a @ sp[(-13)+-8]
 15936  012300  0EED               	movlw	237
 15937  012302  24E1               	addwf	fsr1l,w,c
 15938  012304  6ED9               	movwf	fsr2l,c
 15939  012306  0EFF               	movlw	255
 15940  012308  20E2               	addwfc	fsr1h,w,c
 15941  01230A  6EDA               	movwf	fsr2h,c
 15942  01230C  AEDF               	btfss	indf2,7,c
 15943  01230E  D002               	goto	l6743
 15944                           
 15945                           ;stkvar	_aexp @ sp[(-13)+11]
 15946  012310  0EFE               	movlw	-2
 15947  012312  80E3               	bsf	plusw1,0,c
 15948  012314                     l6743:
 15949                           
 15950                           ;stkvar	_aexp @ sp[(-13)+11]
 15951  012314  0EFE               	movlw	-2
 15952  012316  50E3               	movf	plusw1,w,c
 15953  012318  B4D8               	btfsc	status,2,c
 15954  01231A  D01F               	goto	l6751
 15955                           
 15956                           ;stkvar	_aexp @ sp[(-13)+11]
 15957  01231C  0EFE               	movlw	-2
 15958  01231E  28E3               	incf	plusw1,w,c
 15959  012320  A4D8               	btfss	status,2,c
 15960  012322  D018               	goto	l6749
 15961  012324  0E00               	movlw	0
 15962  012326  6E3D               	movwf	(btemp+8)^0,c
 15963  012328  0E00               	movlw	0
 15964  01232A  6E3E               	movwf	(btemp+9)^0,c
 15965  01232C  0E00               	movlw	0
 15966  01232E  6E3F               	movwf	(btemp+10)^0,c
 15967  012330  0E00               	movlw	0
 15968  012332  6E40               	movwf	(btemp+11)^0,c
 15969                           
 15970                           ;stkvar	_a @ sp[(-13)+-8]
 15971  012334  0EEB               	movlw	-21
 15972  012336  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15973  01233C  0EEC               	movlw	-20
 15974  01233E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15975  012344  0EED               	movlw	-19
 15976  012346  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15977  01234C  0EEE               	movlw	-18
 15978  01234E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15979  012354                     l6749:
 15980                           
 15981                           ;stkvar	_a @ sp[(-13)+-8]
 15982  012354  0EED               	movlw	-19
 15983  012356  8EE3               	bsf	plusw1,7,c
 15984  012358  D018               	goto	l6753
 15985  01235A                     l6751:
 15986  01235A  0E00               	movlw	0
 15987  01235C  6E3D               	movwf	(btemp+8)^0,c
 15988  01235E  0E00               	movlw	0
 15989  012360  6E3E               	movwf	(btemp+9)^0,c
 15990  012362  0E00               	movlw	0
 15991  012364  6E3F               	movwf	(btemp+10)^0,c
 15992  012366  0E00               	movlw	0
 15993  012368  6E40               	movwf	(btemp+11)^0,c
 15994                           
 15995                           ;stkvar	_a @ sp[(-13)+-8]
 15996  01236A  0EEB               	movlw	-21
 15997  01236C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15998  012372  0EEC               	movlw	-20
 15999  012374  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16000  01237A  0EED               	movlw	-19
 16001  01237C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16002  012382  0EEE               	movlw	-18
 16003  012384  0060  F103  FFE3   	movff	btemp+11,plusw1
 16004  01238A                     l6753:
 16005                           
 16006                           ;stkvar	_aexp @ sp[(-13)+11]
 16007  01238A  0EFE               	movlw	-2
 16008  01238C  50E3               	movf	plusw1,w,c
 16009  01238E  B4D8               	btfsc	status,2,c
 16010  012390  D004               	goto	u5960
 16011                           
 16012                           ;stkvar	_bexp @ sp[(-13)+10]
 16013  012392  0EFD               	movlw	-3
 16014  012394  50E3               	movf	plusw1,w,c
 16015  012396  A4D8               	btfss	status,2,c
 16016  012398  D009               	goto	l6761
 16017  01239A                     u5960:
 16018  01239A  0E00               	movlw	0
 16019  01239C  6E35               	movwf	btemp^0,c
 16020  01239E  0E00               	movlw	0
 16021  0123A0  6E36               	movwf	(btemp+1)^0,c
 16022  0123A2  0E00               	movlw	0
 16023  0123A4  6E37               	movwf	(btemp+2)^0,c
 16024  0123A6  0E00               	movlw	0
 16025  0123A8  6E38               	movwf	(btemp+3)^0,c
 16026  0123AA  D332               	goto	l2626
 16027  0123AC                     l6761:
 16028                           
 16029                           ;stkvar	_b @ sp[(-13)+-4]
 16030  0123AC  0EEF               	movlw	-17
 16031  0123AE  006F FF8C  F040    	movff	plusw1,btemp+11
 16032                           
 16033                           ;stkvar	_a @ sp[(-13)+-8]
 16034  0123B4  0EED               	movlw	237
 16035  0123B6  24E1               	addwf	fsr1l,w,c
 16036  0123B8  6ED9               	movwf	fsr2l,c
 16037  0123BA  0EFF               	movlw	255
 16038  0123BC  20E2               	addwfc	fsr1h,w,c
 16039  0123BE  6EDA               	movwf	fsr2h,c
 16040  0123C0  50DF               	movf	indf2,w,c
 16041  0123C2  0240               	mulwf	(btemp+11)^0,c
 16042                           
 16043                           ;stkvar	_temp @ sp[(-13)+8]
 16044  0123C4  0EFB               	movlw	-5
 16045  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16046  0123CC  0EFC               	movlw	-4
 16047  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16048                           
 16049                           ;stkvar	_temp @ sp[(-13)+8]
 16050  0123D4  0EFB               	movlw	-5
 16051  0123D6  006F FF8C  F040    	movff	plusw1,btemp+11
 16052  0123DC  0060  F100  F039   	movff	btemp+11,btemp+4
 16053  0123E2  6A3A               	clrf	(btemp+5)^0,c
 16054  0123E4  6A3B               	clrf	(btemp+6)^0,c
 16055  0123E6  6A3C               	clrf	(btemp+7)^0,c
 16056                           
 16057                           ;stkvar	_grs @ sp[(-13)+4]
 16058  0123E8  0EF7               	movlw	-9
 16059  0123EA  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16060  0123F0  0EF8               	movlw	-8
 16061  0123F2  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16062  0123F8  0EF9               	movlw	-7
 16063  0123FA  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16064  012400  0EFA               	movlw	-6
 16065  012402  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16066                           
 16067                           ;stkvar	_temp @ sp[(-13)+8]
 16068  012408  0EFC               	movlw	252
 16069  01240A  24E1               	addwf	fsr1l,w,c
 16070  01240C  6ED9               	movwf	fsr2l,c
 16071  01240E  0EFF               	movlw	255
 16072  012410  20E2               	addwfc	fsr1h,w,c
 16073  012412  6EDA               	movwf	fsr2h,c
 16074  012414  50DF               	movf	indf2,w,c
 16075  012416  6E40               	movwf	(btemp+11)^0,c
 16076  012418  0060  F100  F039   	movff	btemp+11,btemp+4
 16077  01241E  6A3A               	clrf	(btemp+5)^0,c
 16078  012420  6A3B               	clrf	(btemp+6)^0,c
 16079  012422  6A3C               	clrf	(btemp+7)^0,c
 16080                           
 16081                           ;stkvar	_prod @ sp[(-13)+0]
 16082  012424  0EF3               	movlw	-13
 16083  012426  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16084  01242C  0EF4               	movlw	-12
 16085  01242E  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16086  012434  0EF5               	movlw	-11
 16087  012436  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16088  01243C  0EF6               	movlw	-10
 16089  01243E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16090                           
 16091                           ;stkvar	_b @ sp[(-13)+-4]
 16092  012444  0EF0               	movlw	240
 16093  012446  24E1               	addwf	fsr1l,w,c
 16094  012448  6ED9               	movwf	fsr2l,c
 16095  01244A  0EFF               	movlw	255
 16096  01244C  20E2               	addwfc	fsr1h,w,c
 16097  01244E  6EDA               	movwf	fsr2h,c
 16098  012450  50DF               	movf	indf2,w,c
 16099  012452  6E40               	movwf	(btemp+11)^0,c
 16100                           
 16101                           ;stkvar	_a @ sp[(-13)+-8]
 16102  012454  0EEC               	movlw	236
 16103  012456  24E1               	addwf	fsr1l,w,c
 16104  012458  6ED9               	movwf	fsr2l,c
 16105  01245A  0EFF               	movlw	255
 16106  01245C  20E2               	addwfc	fsr1h,w,c
 16107  01245E  6EDA               	movwf	fsr2h,c
 16108  012460  50DF               	movf	indf2,w,c
 16109  012462  0240               	mulwf	(btemp+11)^0,c
 16110                           
 16111                           ;stkvar	_temp @ sp[(-13)+8]
 16112  012464  0EFB               	movlw	-5
 16113  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16114  01246C  0EFC               	movlw	-4
 16115  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16116                           
 16117                           ;stkvar	_grs @ sp[(-13)+4]
 16118  012474  50E1               	movf	fsr1l,w,c
 16119  012476  0FF7               	addlw	-9
 16120  012478  6ED9               	movwf	fsr2l,c
 16121  01247A  50E2               	movf	fsr1h,w,c
 16122  01247C  6EDA               	movwf	fsr2h,c
 16123  01247E  0EFF               	movlw	255
 16124  012480  22DA               	addwfc	fsr2h,f,c
 16125                           
 16126                           ;stkvar	_temp @ sp[(-13)+8]
 16127  012482  0EFB               	movlw	-5
 16128  012484  50E3               	movf	plusw1,w,c
 16129  012486  26DE               	addwf	postinc2,f,c
 16130  012488  0E00               	movlw	0
 16131  01248A  22DE               	addwfc	postinc2,f,c
 16132  01248C  22DE               	addwfc	postinc2,f,c
 16133  01248E  22DE               	addwfc	postinc2,f,c
 16134                           
 16135                           ;stkvar	_prod @ sp[(-13)+0]
 16136  012490  50E1               	movf	fsr1l,w,c
 16137  012492  0FF3               	addlw	-13
 16138  012494  6ED9               	movwf	fsr2l,c
 16139  012496  50E2               	movf	fsr1h,w,c
 16140  012498  6EDA               	movwf	fsr2h,c
 16141  01249A  0EFF               	movlw	255
 16142  01249C  22DA               	addwfc	fsr2h,f,c
 16143                           
 16144                           ;stkvar	_temp @ sp[(-13)+8]
 16145  01249E  0EFC               	movlw	252
 16146  0124A0  24E1               	addwf	fsr1l,w,c
 16147  0124A2  6EE9               	movwf	fsr0l,c
 16148  0124A4  0EFF               	movlw	255
 16149  0124A6  20E2               	addwfc	fsr1h,w,c
 16150  0124A8  6EEA               	movwf	fsr0h,c
 16151  0124AA  50EF               	movf	indf0,w,c
 16152  0124AC  26DE               	addwf	postinc2,f,c
 16153  0124AE  0E00               	movlw	0
 16154  0124B0  22DE               	addwfc	postinc2,f,c
 16155  0124B2  22DE               	addwfc	postinc2,f,c
 16156  0124B4  22DE               	addwfc	postinc2,f,c
 16157                           
 16158                           ;stkvar	_b @ sp[(-13)+-4]
 16159  0124B6  0EF1               	movlw	241
 16160  0124B8  24E1               	addwf	fsr1l,w,c
 16161  0124BA  6ED9               	movwf	fsr2l,c
 16162  0124BC  0EFF               	movlw	255
 16163  0124BE  20E2               	addwfc	fsr1h,w,c
 16164  0124C0  6EDA               	movwf	fsr2h,c
 16165  0124C2  50DF               	movf	indf2,w,c
 16166  0124C4  6E40               	movwf	(btemp+11)^0,c
 16167                           
 16168                           ;stkvar	_a @ sp[(-13)+-8]
 16169  0124C6  0EEB               	movlw	-21
 16170  0124C8  50E3               	movf	plusw1,w,c
 16171  0124CA  0240               	mulwf	(btemp+11)^0,c
 16172                           
 16173                           ;stkvar	_temp @ sp[(-13)+8]
 16174  0124CC  0EFB               	movlw	-5
 16175  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16176  0124D4  0EFC               	movlw	-4
 16177  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16178                           
 16179                           ;stkvar	_grs @ sp[(-13)+4]
 16180  0124DC  50E1               	movf	fsr1l,w,c
 16181  0124DE  0FF7               	addlw	-9
 16182  0124E0  6ED9               	movwf	fsr2l,c
 16183  0124E2  50E2               	movf	fsr1h,w,c
 16184  0124E4  6EDA               	movwf	fsr2h,c
 16185  0124E6  0EFF               	movlw	255
 16186  0124E8  22DA               	addwfc	fsr2h,f,c
 16187                           
 16188                           ;stkvar	_temp @ sp[(-13)+8]
 16189  0124EA  0EFB               	movlw	-5
 16190  0124EC  50E3               	movf	plusw1,w,c
 16191  0124EE  26DE               	addwf	postinc2,f,c
 16192  0124F0  0E00               	movlw	0
 16193  0124F2  22DE               	addwfc	postinc2,f,c
 16194  0124F4  22DE               	addwfc	postinc2,f,c
 16195  0124F6  22DE               	addwfc	postinc2,f,c
 16196                           
 16197                           ;stkvar	_prod @ sp[(-13)+0]
 16198  0124F8  50E1               	movf	fsr1l,w,c
 16199  0124FA  0FF3               	addlw	-13
 16200  0124FC  6ED9               	movwf	fsr2l,c
 16201  0124FE  50E2               	movf	fsr1h,w,c
 16202  012500  6EDA               	movwf	fsr2h,c
 16203  012502  0EFF               	movlw	255
 16204  012504  22DA               	addwfc	fsr2h,f,c
 16205                           
 16206                           ;stkvar	_temp @ sp[(-13)+8]
 16207  012506  0EFC               	movlw	252
 16208  012508  24E1               	addwf	fsr1l,w,c
 16209  01250A  6EE9               	movwf	fsr0l,c
 16210  01250C  0EFF               	movlw	255
 16211  01250E  20E2               	addwfc	fsr1h,w,c
 16212  012510  6EEA               	movwf	fsr0h,c
 16213  012512  50EF               	movf	indf0,w,c
 16214  012514  26DE               	addwf	postinc2,f,c
 16215  012516  0E00               	movlw	0
 16216  012518  22DE               	addwfc	postinc2,f,c
 16217  01251A  22DE               	addwfc	postinc2,f,c
 16218  01251C  22DE               	addwfc	postinc2,f,c
 16219                           
 16220                           ;stkvar	_grs @ sp[(-13)+4]
 16221  01251E  50E1               	movf	fsr1l,w,c
 16222  012520  0FF7               	addlw	-9
 16223  012522  6ED9               	movwf	fsr2l,c
 16224  012524  50E2               	movf	fsr1h,w,c
 16225  012526  6EDA               	movwf	fsr2h,c
 16226  012528  0EFF               	movlw	255
 16227  01252A  22DA               	addwfc	fsr2h,f,c
 16228  01252C  0E08               	movlw	8
 16229  01252E                     u5975:
 16230  01252E  90D8               	bcf	status,0,c
 16231  012530  36DE               	rlcf	postinc2,f,c
 16232  012532  36DE               	rlcf	postinc2,f,c
 16233  012534  36DE               	rlcf	postinc2,f,c
 16234  012536  36DD               	rlcf	postdec2,f,c
 16235  012538  52DD               	movf	postdec2,f,c
 16236  01253A  52DD               	movf	postdec2,f,c
 16237  01253C  2EE8               	decfsz	wreg,f,c
 16238  01253E  D7F7               	goto	u5975
 16239                           
 16240                           ;stkvar	_b @ sp[(-13)+-4]
 16241  012540  0EF0               	movlw	240
 16242  012542  24E1               	addwf	fsr1l,w,c
 16243  012544  6ED9               	movwf	fsr2l,c
 16244  012546  0EFF               	movlw	255
 16245  012548  20E2               	addwfc	fsr1h,w,c
 16246  01254A  6EDA               	movwf	fsr2h,c
 16247  01254C  50DF               	movf	indf2,w,c
 16248  01254E  6E40               	movwf	(btemp+11)^0,c
 16249                           
 16250                           ;stkvar	_a @ sp[(-13)+-8]
 16251  012550  0EEB               	movlw	-21
 16252  012552  50E3               	movf	plusw1,w,c
 16253  012554  0240               	mulwf	(btemp+11)^0,c
 16254                           
 16255                           ;stkvar	_temp @ sp[(-13)+8]
 16256  012556  0EFB               	movlw	-5
 16257  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16258  01255E  0EFC               	movlw	-4
 16259  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16260                           
 16261                           ;stkvar	_temp @ sp[(-13)+8]
 16262  012566  0EFB               	movlw	-5
 16263  012568  006F FF8C  F03F    	movff	plusw1,btemp+10
 16264  01256E  0EFC               	movlw	-4
 16265  012570  006F FF8C  F040    	movff	plusw1,btemp+11
 16266                           
 16267                           ;stkvar	_grs @ sp[(-13)+4]
 16268  012576  50E1               	movf	fsr1l,w,c
 16269  012578  0FF7               	addlw	-9
 16270  01257A  6ED9               	movwf	fsr2l,c
 16271  01257C  50E2               	movf	fsr1h,w,c
 16272  01257E  6EDA               	movwf	fsr2h,c
 16273  012580  0EFF               	movlw	255
 16274  012582  22DA               	addwfc	fsr2h,f,c
 16275  012584  503F               	movf	(btemp+10)^0,w,c
 16276  012586  26DE               	addwf	postinc2,f,c
 16277  012588  5040               	movf	(btemp+11)^0,w,c
 16278  01258A  22DE               	addwfc	postinc2,f,c
 16279  01258C  0E00               	movlw	0
 16280  01258E  22DE               	addwfc	postinc2,f,c
 16281  012590  22DE               	addwfc	postinc2,f,c
 16282                           
 16283                           ;stkvar	_b @ sp[(-13)+-4]
 16284  012592  0EEF               	movlw	-17
 16285  012594  006F FF8C  F040    	movff	plusw1,btemp+11
 16286                           
 16287                           ;stkvar	_a @ sp[(-13)+-8]
 16288  01259A  0EEC               	movlw	236
 16289  01259C  24E1               	addwf	fsr1l,w,c
 16290  01259E  6ED9               	movwf	fsr2l,c
 16291  0125A0  0EFF               	movlw	255
 16292  0125A2  20E2               	addwfc	fsr1h,w,c
 16293  0125A4  6EDA               	movwf	fsr2h,c
 16294  0125A6  50DF               	movf	indf2,w,c
 16295  0125A8  0240               	mulwf	(btemp+11)^0,c
 16296                           
 16297                           ;stkvar	_temp @ sp[(-13)+8]
 16298  0125AA  0EFB               	movlw	-5
 16299  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16300  0125B2  0EFC               	movlw	-4
 16301  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16302                           
 16303                           ;stkvar	_temp @ sp[(-13)+8]
 16304  0125BA  0EFB               	movlw	-5
 16305  0125BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 16306  0125C2  0EFC               	movlw	-4
 16307  0125C4  006F FF8C  F040    	movff	plusw1,btemp+11
 16308                           
 16309                           ;stkvar	_grs @ sp[(-13)+4]
 16310  0125CA  50E1               	movf	fsr1l,w,c
 16311  0125CC  0FF7               	addlw	-9
 16312  0125CE  6ED9               	movwf	fsr2l,c
 16313  0125D0  50E2               	movf	fsr1h,w,c
 16314  0125D2  6EDA               	movwf	fsr2h,c
 16315  0125D4  0EFF               	movlw	255
 16316  0125D6  22DA               	addwfc	fsr2h,f,c
 16317  0125D8  503F               	movf	(btemp+10)^0,w,c
 16318  0125DA  26DE               	addwf	postinc2,f,c
 16319  0125DC  5040               	movf	(btemp+11)^0,w,c
 16320  0125DE  22DE               	addwfc	postinc2,f,c
 16321  0125E0  0E00               	movlw	0
 16322  0125E2  22DE               	addwfc	postinc2,f,c
 16323  0125E4  22DE               	addwfc	postinc2,f,c
 16324                           
 16325                           ;stkvar	_grs @ sp[(-13)+4]
 16326  0125E6  50E1               	movf	fsr1l,w,c
 16327  0125E8  0FF7               	addlw	-9
 16328  0125EA  6ED9               	movwf	fsr2l,c
 16329  0125EC  50E2               	movf	fsr1h,w,c
 16330  0125EE  6EDA               	movwf	fsr2h,c
 16331  0125F0  0EFF               	movlw	255
 16332  0125F2  22DA               	addwfc	fsr2h,f,c
 16333  0125F4  0E08               	movlw	8
 16334  0125F6                     u5985:
 16335  0125F6  90D8               	bcf	status,0,c
 16336  0125F8  36DE               	rlcf	postinc2,f,c
 16337  0125FA  36DE               	rlcf	postinc2,f,c
 16338  0125FC  36DE               	rlcf	postinc2,f,c
 16339  0125FE  36DD               	rlcf	postdec2,f,c
 16340  012600  52DD               	movf	postdec2,f,c
 16341  012602  52DD               	movf	postdec2,f,c
 16342  012604  2EE8               	decfsz	wreg,f,c
 16343  012606  D7F7               	goto	u5985
 16344                           
 16345                           ;stkvar	_b @ sp[(-13)+-4]
 16346  012608  0EEF               	movlw	-17
 16347  01260A  006F FF8C  F040    	movff	plusw1,btemp+11
 16348                           
 16349                           ;stkvar	_a @ sp[(-13)+-8]
 16350  012610  0EEB               	movlw	-21
 16351  012612  50E3               	movf	plusw1,w,c
 16352  012614  0240               	mulwf	(btemp+11)^0,c
 16353                           
 16354                           ;stkvar	_temp @ sp[(-13)+8]
 16355  012616  0EFB               	movlw	-5
 16356  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16357  01261E  0EFC               	movlw	-4
 16358  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16359                           
 16360                           ;stkvar	_temp @ sp[(-13)+8]
 16361  012626  0EFB               	movlw	-5
 16362  012628  006F FF8C  F03F    	movff	plusw1,btemp+10
 16363  01262E  0EFC               	movlw	-4
 16364  012630  006F FF8C  F040    	movff	plusw1,btemp+11
 16365                           
 16366                           ;stkvar	_grs @ sp[(-13)+4]
 16367  012636  50E1               	movf	fsr1l,w,c
 16368  012638  0FF7               	addlw	-9
 16369  01263A  6ED9               	movwf	fsr2l,c
 16370  01263C  50E2               	movf	fsr1h,w,c
 16371  01263E  6EDA               	movwf	fsr2h,c
 16372  012640  0EFF               	movlw	255
 16373  012642  22DA               	addwfc	fsr2h,f,c
 16374  012644  503F               	movf	(btemp+10)^0,w,c
 16375  012646  26DE               	addwf	postinc2,f,c
 16376  012648  5040               	movf	(btemp+11)^0,w,c
 16377  01264A  22DE               	addwfc	postinc2,f,c
 16378  01264C  0E00               	movlw	0
 16379  01264E  22DE               	addwfc	postinc2,f,c
 16380  012650  22DE               	addwfc	postinc2,f,c
 16381                           
 16382                           ;stkvar	_b @ sp[(-13)+-4]
 16383  012652  0EF0               	movlw	240
 16384  012654  24E1               	addwf	fsr1l,w,c
 16385  012656  6ED9               	movwf	fsr2l,c
 16386  012658  0EFF               	movlw	255
 16387  01265A  20E2               	addwfc	fsr1h,w,c
 16388  01265C  6EDA               	movwf	fsr2h,c
 16389  01265E  50DF               	movf	indf2,w,c
 16390  012660  6E40               	movwf	(btemp+11)^0,c
 16391                           
 16392                           ;stkvar	_a @ sp[(-13)+-8]
 16393  012662  0EED               	movlw	237
 16394  012664  24E1               	addwf	fsr1l,w,c
 16395  012666  6ED9               	movwf	fsr2l,c
 16396  012668  0EFF               	movlw	255
 16397  01266A  20E2               	addwfc	fsr1h,w,c
 16398  01266C  6EDA               	movwf	fsr2h,c
 16399  01266E  50DF               	movf	indf2,w,c
 16400  012670  0240               	mulwf	(btemp+11)^0,c
 16401                           
 16402                           ;stkvar	_temp @ sp[(-13)+8]
 16403  012672  0EFB               	movlw	-5
 16404  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16405  01267A  0EFC               	movlw	-4
 16406  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16407                           
 16408                           ;stkvar	_temp @ sp[(-13)+8]
 16409  012682  0EFB               	movlw	-5
 16410  012684  006F FF8C  F03F    	movff	plusw1,btemp+10
 16411  01268A  0EFC               	movlw	-4
 16412  01268C  006F FF8C  F040    	movff	plusw1,btemp+11
 16413                           
 16414                           ;stkvar	_prod @ sp[(-13)+0]
 16415  012692  50E1               	movf	fsr1l,w,c
 16416  012694  0FF3               	addlw	-13
 16417  012696  6ED9               	movwf	fsr2l,c
 16418  012698  50E2               	movf	fsr1h,w,c
 16419  01269A  6EDA               	movwf	fsr2h,c
 16420  01269C  0EFF               	movlw	255
 16421  01269E  22DA               	addwfc	fsr2h,f,c
 16422  0126A0  503F               	movf	(btemp+10)^0,w,c
 16423  0126A2  26DE               	addwf	postinc2,f,c
 16424  0126A4  5040               	movf	(btemp+11)^0,w,c
 16425  0126A6  22DE               	addwfc	postinc2,f,c
 16426  0126A8  0E00               	movlw	0
 16427  0126AA  22DE               	addwfc	postinc2,f,c
 16428  0126AC  22DE               	addwfc	postinc2,f,c
 16429                           
 16430                           ;stkvar	_b @ sp[(-13)+-4]
 16431  0126AE  0EF1               	movlw	241
 16432  0126B0  24E1               	addwf	fsr1l,w,c
 16433  0126B2  6ED9               	movwf	fsr2l,c
 16434  0126B4  0EFF               	movlw	255
 16435  0126B6  20E2               	addwfc	fsr1h,w,c
 16436  0126B8  6EDA               	movwf	fsr2h,c
 16437  0126BA  50DF               	movf	indf2,w,c
 16438  0126BC  6E40               	movwf	(btemp+11)^0,c
 16439                           
 16440                           ;stkvar	_a @ sp[(-13)+-8]
 16441  0126BE  0EEC               	movlw	236
 16442  0126C0  24E1               	addwf	fsr1l,w,c
 16443  0126C2  6ED9               	movwf	fsr2l,c
 16444  0126C4  0EFF               	movlw	255
 16445  0126C6  20E2               	addwfc	fsr1h,w,c
 16446  0126C8  6EDA               	movwf	fsr2h,c
 16447  0126CA  50DF               	movf	indf2,w,c
 16448  0126CC  0240               	mulwf	(btemp+11)^0,c
 16449                           
 16450                           ;stkvar	_temp @ sp[(-13)+8]
 16451  0126CE  0EFB               	movlw	-5
 16452  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16453  0126D6  0EFC               	movlw	-4
 16454  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16455                           
 16456                           ;stkvar	_temp @ sp[(-13)+8]
 16457  0126DE  0EFB               	movlw	-5
 16458  0126E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16459  0126E6  0EFC               	movlw	-4
 16460  0126E8  006F FF8C  F040    	movff	plusw1,btemp+11
 16461                           
 16462                           ;stkvar	_prod @ sp[(-13)+0]
 16463  0126EE  50E1               	movf	fsr1l,w,c
 16464  0126F0  0FF3               	addlw	-13
 16465  0126F2  6ED9               	movwf	fsr2l,c
 16466  0126F4  50E2               	movf	fsr1h,w,c
 16467  0126F6  6EDA               	movwf	fsr2h,c
 16468  0126F8  0EFF               	movlw	255
 16469  0126FA  22DA               	addwfc	fsr2h,f,c
 16470  0126FC  503F               	movf	(btemp+10)^0,w,c
 16471  0126FE  26DE               	addwf	postinc2,f,c
 16472  012700  5040               	movf	(btemp+11)^0,w,c
 16473  012702  22DE               	addwfc	postinc2,f,c
 16474  012704  0E00               	movlw	0
 16475  012706  22DE               	addwfc	postinc2,f,c
 16476  012708  22DE               	addwfc	postinc2,f,c
 16477                           
 16478                           ;stkvar	_b @ sp[(-13)+-4]
 16479  01270A  0EF1               	movlw	241
 16480  01270C  24E1               	addwf	fsr1l,w,c
 16481  01270E  6ED9               	movwf	fsr2l,c
 16482  012710  0EFF               	movlw	255
 16483  012712  20E2               	addwfc	fsr1h,w,c
 16484  012714  6EDA               	movwf	fsr2h,c
 16485  012716  50DF               	movf	indf2,w,c
 16486  012718  6E40               	movwf	(btemp+11)^0,c
 16487                           
 16488                           ;stkvar	_a @ sp[(-13)+-8]
 16489  01271A  0EED               	movlw	237
 16490  01271C  24E1               	addwf	fsr1l,w,c
 16491  01271E  6ED9               	movwf	fsr2l,c
 16492  012720  0EFF               	movlw	255
 16493  012722  20E2               	addwfc	fsr1h,w,c
 16494  012724  6EDA               	movwf	fsr2h,c
 16495  012726  50DF               	movf	indf2,w,c
 16496  012728  0240               	mulwf	(btemp+11)^0,c
 16497                           
 16498                           ;stkvar	_temp @ sp[(-13)+8]
 16499  01272A  0EFB               	movlw	-5
 16500  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16501  012732  0EFC               	movlw	-4
 16502  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16503                           
 16504                           ;stkvar	_temp @ sp[(-13)+8]
 16505  01273A  0EFB               	movlw	-5
 16506  01273C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16507  012742  0EFC               	movlw	-4
 16508  012744  006F FF8C  F040    	movff	plusw1,btemp+11
 16509  01274A  503F               	movf	(btemp+10)^0,w,c
 16510  01274C  6E39               	movwf	(btemp+4)^0,c
 16511  01274E  5040               	movf	(btemp+11)^0,w,c
 16512  012750  6E3A               	movwf	(btemp+5)^0,c
 16513  012752  6A3B               	clrf	(btemp+6)^0,c
 16514  012754  6A3C               	clrf	(btemp+7)^0,c
 16515  012756  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 16516  01275C  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 16517  012762  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 16518  012768  6A39               	clrf	(btemp+4)^0,c
 16519                           
 16520                           ;stkvar	_prod @ sp[(-13)+0]
 16521  01276A  50E1               	movf	fsr1l,w,c
 16522  01276C  0FF3               	addlw	-13
 16523  01276E  6ED9               	movwf	fsr2l,c
 16524  012770  50E2               	movf	fsr1h,w,c
 16525  012772  6EDA               	movwf	fsr2h,c
 16526  012774  0EFF               	movlw	255
 16527  012776  22DA               	addwfc	fsr2h,f,c
 16528  012778  5039               	movf	(btemp+4)^0,w,c
 16529  01277A  26DE               	addwf	postinc2,f,c
 16530  01277C  503A               	movf	(btemp+5)^0,w,c
 16531  01277E  22DE               	addwfc	postinc2,f,c
 16532  012780  503B               	movf	(btemp+6)^0,w,c
 16533  012782  22DE               	addwfc	postinc2,f,c
 16534  012784  503C               	movf	(btemp+7)^0,w,c
 16535  012786  22DE               	addwfc	postinc2,f,c
 16536                           
 16537                           ;stkvar	_prod @ sp[(-13)+0]
 16538  012788  50E1               	movf	fsr1l,w,c
 16539  01278A  0FF3               	addlw	-13
 16540  01278C  6ED9               	movwf	fsr2l,c
 16541  01278E  50E2               	movf	fsr1h,w,c
 16542  012790  6EDA               	movwf	fsr2h,c
 16543  012792  0EFF               	movlw	255
 16544  012794  22DA               	addwfc	fsr2h,f,c
 16545                           
 16546                           ;stkvar	_grs @ sp[(-13)+4]
 16547  012796  0EFA               	movlw	250
 16548  012798  24E1               	addwf	fsr1l,w,c
 16549  01279A  6EE9               	movwf	fsr0l,c
 16550  01279C  0EFF               	movlw	255
 16551  01279E  20E2               	addwfc	fsr1h,w,c
 16552  0127A0  6EEA               	movwf	fsr0h,c
 16553  0127A2  50EF               	movf	indf0,w,c
 16554  0127A4  26DE               	addwf	postinc2,f,c
 16555  0127A6  0E00               	movlw	0
 16556  0127A8  22DE               	addwfc	postinc2,f,c
 16557  0127AA  22DE               	addwfc	postinc2,f,c
 16558  0127AC  22DE               	addwfc	postinc2,f,c
 16559                           
 16560                           ;stkvar	_grs @ sp[(-13)+4]
 16561  0127AE  50E1               	movf	fsr1l,w,c
 16562  0127B0  0FF7               	addlw	-9
 16563  0127B2  6ED9               	movwf	fsr2l,c
 16564  0127B4  50E2               	movf	fsr1h,w,c
 16565  0127B6  6EDA               	movwf	fsr2h,c
 16566  0127B8  0EFF               	movlw	255
 16567  0127BA  22DA               	addwfc	fsr2h,f,c
 16568  0127BC  0E08               	movlw	8
 16569  0127BE                     u5995:
 16570  0127BE  90D8               	bcf	status,0,c
 16571  0127C0  36DE               	rlcf	postinc2,f,c
 16572  0127C2  36DE               	rlcf	postinc2,f,c
 16573  0127C4  36DE               	rlcf	postinc2,f,c
 16574  0127C6  36DD               	rlcf	postdec2,f,c
 16575  0127C8  52DD               	movf	postdec2,f,c
 16576  0127CA  52DD               	movf	postdec2,f,c
 16577  0127CC  2EE8               	decfsz	wreg,f,c
 16578  0127CE  D7F7               	goto	u5995
 16579  0127D0  0E82               	movlw	130
 16580  0127D2  6E3F               	movwf	(btemp+10)^0,c
 16581  0127D4  0EFF               	movlw	255
 16582  0127D6  6E40               	movwf	(btemp+11)^0,c
 16583                           
 16584                           ;stkvar	_bexp @ sp[(-13)+10]
 16585  0127D8  0EFD               	movlw	-3
 16586  0127DA  50E3               	movf	plusw1,w,c
 16587  0127DC  6E3D               	movwf	(btemp+8)^0,c
 16588  0127DE  6A3E               	clrf	(btemp+9)^0,c
 16589                           
 16590                           ;stkvar	_aexp @ sp[(-13)+11]
 16591  0127E0  0EFE               	movlw	-2
 16592  0127E2  50E3               	movf	plusw1,w,c
 16593  0127E4  263D               	addwf	(btemp+8)^0,f,c
 16594  0127E6  0E00               	movlw	0
 16595  0127E8  223E               	addwfc	(btemp+9)^0,f,c
 16596  0127EA  503F               	movf	(btemp+10)^0,w,c
 16597  0127EC  263D               	addwf	(btemp+8)^0,f,c
 16598  0127EE  5040               	movf	(btemp+11)^0,w,c
 16599  0127F0  223E               	addwfc	(btemp+9)^0,f,c
 16600                           
 16601                           ;stkvar	_temp @ sp[(-13)+8]
 16602  0127F2  0EFB               	movlw	-5
 16603  0127F4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16604  0127FA  0EFC               	movlw	-4
 16605  0127FC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16606  012802  D021               	goto	l6823
 16607  012804                     l6813:
 16608                           
 16609                           ;stkvar	_prod @ sp[(-13)+0]
 16610  012804  90D8               	bcf	status,0,c
 16611  012806  0EF3               	movlw	-13
 16612  012808  36E3               	rlcf	plusw1,f,c
 16613  01280A  0EF4               	movlw	-12
 16614  01280C  36E3               	rlcf	plusw1,f,c
 16615  01280E  0EF5               	movlw	-11
 16616  012810  36E3               	rlcf	plusw1,f,c
 16617  012812  0EF6               	movlw	-10
 16618  012814  36E3               	rlcf	plusw1,f,c
 16619                           
 16620                           ;stkvar	_grs @ sp[(-13)+4]
 16621  012816  0EFA               	movlw	-6
 16622  012818  AEE3               	btfss	plusw1,7,c
 16623  01281A  D002               	goto	l6819
 16624                           
 16625                           ;stkvar	_prod @ sp[(-13)+0]
 16626  01281C  0EF3               	movlw	-13
 16627  01281E  80E3               	bsf	plusw1,0,c
 16628  012820                     l6819:
 16629                           
 16630                           ;stkvar	_grs @ sp[(-13)+4]
 16631  012820  90D8               	bcf	status,0,c
 16632  012822  0EF7               	movlw	-9
 16633  012824  36E3               	rlcf	plusw1,f,c
 16634  012826  0EF8               	movlw	-8
 16635  012828  36E3               	rlcf	plusw1,f,c
 16636  01282A  0EF9               	movlw	-7
 16637  01282C  36E3               	rlcf	plusw1,f,c
 16638  01282E  0EFA               	movlw	-6
 16639  012830  36E3               	rlcf	plusw1,f,c
 16640                           
 16641                           ;stkvar	_temp @ sp[(-13)+8]
 16642  012832  50E1               	movf	fsr1l,w,c
 16643  012834  0FFB               	addlw	-5
 16644  012836  6ED9               	movwf	fsr2l,c
 16645  012838  50E2               	movf	fsr1h,w,c
 16646  01283A  6EDA               	movwf	fsr2h,c
 16647  01283C  0EFF               	movlw	255
 16648  01283E  22DA               	addwfc	fsr2h,f,c
 16649  012840  06DE               	decf	postinc2,f,c
 16650  012842  0E00               	movlw	0
 16651  012844  5ADD               	subwfb	postdec2,f,c
 16652  012846                     l6823:
 16653                           
 16654                           ;stkvar	_prod @ sp[(-13)+0]
 16655  012846  0EF5               	movlw	-11
 16656  012848  AEE3               	btfss	plusw1,7,c
 16657  01284A  D7DC               	goto	l6813
 16658                           
 16659                           ;stkvar	_aexp @ sp[(-13)+11]
 16660  01284C  0EFE               	movlw	-2
 16661  01284E  6AE3               	clrf	plusw1,c
 16662                           
 16663                           ;stkvar	_grs @ sp[(-13)+4]
 16664  012850  0EFA               	movlw	-6
 16665  012852  AEE3               	btfss	plusw1,7,c
 16666  012854  D020               	goto	l6837
 16667                           
 16668                           ;stkvar	_grs @ sp[(-13)+4]
 16669  012856  50E1               	movf	fsr1l,w,c
 16670  012858  0FF7               	addlw	-9
 16671  01285A  6ED9               	movwf	fsr2l,c
 16672  01285C  50E2               	movf	fsr1h,w,c
 16673  01285E  6EDA               	movwf	fsr2h,c
 16674  012860  0EFF               	movlw	255
 16675  012862  22DA               	addwfc	fsr2h,f,c
 16676  012864  0EFF               	movlw	255
 16677  012866  14DE               	andwf	postinc2,w,c
 16678  012868  6E3D               	movwf	(btemp+8)^0,c
 16679  01286A  0EFF               	movlw	255
 16680  01286C  14DE               	andwf	postinc2,w,c
 16681  01286E  6E3E               	movwf	(btemp+9)^0,c
 16682  012870  0EFF               	movlw	255
 16683  012872  14DE               	andwf	postinc2,w,c
 16684  012874  6E3F               	movwf	(btemp+10)^0,c
 16685  012876  0E7F               	movlw	127
 16686  012878  14DE               	andwf	postinc2,w,c
 16687  01287A  6E40               	movwf	(btemp+11)^0,c
 16688  01287C  503D               	movf	(btemp+8)^0,w,c
 16689  01287E  103E               	iorwf	(btemp+9)^0,w,c
 16690  012880  103F               	iorwf	(btemp+10)^0,w,c
 16691  012882  1040               	iorwf	(btemp+11)^0,w,c
 16692  012884  B4D8               	btfsc	status,2,c
 16693  012886  D004               	goto	l6833
 16694  012888                     u6030:
 16695                           
 16696                           ;stkvar	_aexp @ sp[(-13)+11]
 16697  012888  0EFE               	movlw	-2
 16698  01288A  6AE3               	clrf	plusw1,c
 16699  01288C  2AE3               	incf	plusw1,f,c
 16700  01288E  D003               	goto	l6837
 16701  012890                     l6833:
 16702                           
 16703                           ;stkvar	_prod @ sp[(-13)+0]
 16704  012890  0EF3               	movlw	-13
 16705  012892  B0E3               	btfsc	plusw1,0,c
 16706  012894  D7F9               	goto	u6030
 16707  012896                     l6837:
 16708                           
 16709                           ;stkvar	_aexp @ sp[(-13)+11]
 16710  012896  0EFE               	movlw	-2
 16711  012898  50E3               	movf	plusw1,w,c
 16712  01289A  B4D8               	btfsc	status,2,c
 16713  01289C  D036               	goto	l6847
 16714                           
 16715                           ;stkvar	_prod @ sp[(-13)+0]
 16716  01289E  50E1               	movf	fsr1l,w,c
 16717  0128A0  0FF3               	addlw	-13
 16718  0128A2  6ED9               	movwf	fsr2l,c
 16719  0128A4  50E2               	movf	fsr1h,w,c
 16720  0128A6  6EDA               	movwf	fsr2h,c
 16721  0128A8  0EFF               	movlw	255
 16722  0128AA  22DA               	addwfc	fsr2h,f,c
 16723  0128AC  2ADE               	incf	postinc2,f,c
 16724  0128AE  0E00               	movlw	0
 16725  0128B0  22DE               	addwfc	postinc2,f,c
 16726  0128B2  22DE               	addwfc	postinc2,f,c
 16727  0128B4  22DE               	addwfc	postinc2,f,c
 16728                           
 16729                           ;stkvar	_prod @ sp[(-13)+0]
 16730  0128B6  0EF6               	movlw	-10
 16731  0128B8  A0E3               	btfss	plusw1,0,c
 16732  0128BA  D027               	goto	l6847
 16733  0128BC  0E01               	movlw	1
 16734  0128BE  6E40               	movwf	(btemp+11)^0,c
 16735                           
 16736                           ;stkvar	_prod @ sp[(-13)+0]
 16737  0128C0  50E1               	movf	fsr1l,w,c
 16738  0128C2  0FF3               	addlw	-13
 16739  0128C4  6ED9               	movwf	fsr2l,c
 16740  0128C6  50E2               	movf	fsr1h,w,c
 16741  0128C8  6EDA               	movwf	fsr2h,c
 16742  0128CA  0EFF               	movlw	255
 16743  0128CC  22DA               	addwfc	fsr2h,f,c
 16744  0128CE  2840               	incf	(btemp+11)^0,w,c
 16745  0128D0  52DE               	movf	postinc2,f,c
 16746  0128D2  D008               	goto	u6070
 16747  0128D4                     u6075:
 16748  0128D4  52DE               	movf	postinc2,f,c
 16749  0128D6  90D8               	bcf	status,0,c
 16750  0128D8  BEDC               	btfsc	preinc2,7,c
 16751  0128DA  80D8               	bsf	status,0,c
 16752  0128DC  32DD               	rrcf	postdec2,f,c
 16753  0128DE  32DD               	rrcf	postdec2,f,c
 16754  0128E0  32DD               	rrcf	postdec2,f,c
 16755  0128E2  32DE               	rrcf	postinc2,f,c
 16756  0128E4                     u6070:
 16757  0128E4  2EE8               	decfsz	wreg,f,c
 16758  0128E6  D7F6               	goto	u6075
 16759                           
 16760                           ;stkvar	_temp @ sp[(-13)+8]
 16761  0128E8  0EFB               	movlw	-5
 16762  0128EA  50E3               	movf	plusw1,w,c
 16763  0128EC  0F01               	addlw	1
 16764  0128EE  6E35               	movwf	btemp^0,c
 16765  0128F0  0EFB               	movlw	-5
 16766  0128F2  0060  F0D7  FFE3   	movff	btemp,plusw1
 16767  0128F8  6A35               	clrf	btemp^0,c
 16768  0128FA  0EFC               	movlw	-4
 16769  0128FC  50E3               	movf	plusw1,w,c
 16770  0128FE  2035               	addwfc	btemp^0,w,c
 16771  012900  6E35               	movwf	btemp^0,c
 16772  012902  0EFC               	movlw	-4
 16773  012904  0060  F0D7  FFE3   	movff	btemp,plusw1
 16774  01290A                     l6847:
 16775                           
 16776                           ;stkvar	_temp @ sp[(-13)+8]
 16777  01290A  0EFC               	movlw	-4
 16778  01290C  BEE3               	btfsc	plusw1,7,c
 16779  01290E  D020               	goto	l6851
 16780  012910  0EFC               	movlw	-4
 16781  012912  50E3               	movf	plusw1,w,c
 16782  012914  E104               	bnz	u6080
 16783  012916  0EFB               	movlw	-5
 16784  012918  28E3               	incf	plusw1,w,c
 16785  01291A  A0D8               	btfss	status,0,c
 16786  01291C  D019               	goto	l6851
 16787  01291E                     u6080:
 16788  01291E  0E00               	movlw	0
 16789  012920  6E3D               	movwf	(btemp+8)^0,c
 16790  012922  0E00               	movlw	0
 16791  012924  6E3E               	movwf	(btemp+9)^0,c
 16792  012926  0E80               	movlw	128
 16793  012928  6E3F               	movwf	(btemp+10)^0,c
 16794  01292A  0E7F               	movlw	127
 16795  01292C  6E40               	movwf	(btemp+11)^0,c
 16796                           
 16797                           ;stkvar	_prod @ sp[(-13)+0]
 16798  01292E  0EF3               	movlw	-13
 16799  012930  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16800  012936  0EF4               	movlw	-12
 16801  012938  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16802  01293E  0EF5               	movlw	-11
 16803  012940  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16804  012946  0EF6               	movlw	-10
 16805  012948  0060  F103  FFE3   	movff	btemp+11,plusw1
 16806  01294E  D044               	goto	l6867
 16807  012950                     l6851:
 16808                           
 16809                           ;stkvar	_temp @ sp[(-13)+8]
 16810  012950  0EFC               	movlw	-4
 16811  012952  BEE3               	btfsc	plusw1,7,c
 16812  012954  D007               	goto	u6090
 16813  012956  0EFC               	movlw	-4
 16814  012958  50E3               	movf	plusw1,w,c
 16815  01295A  E10F               	bnz	l6857
 16816  01295C  0EFB               	movlw	-5
 16817  01295E  04E3               	decf	plusw1,w,c
 16818  012960  B0D8               	btfsc	status,0,c
 16819  012962  D00B               	goto	l6857
 16820  012964                     u6090:
 16821                           
 16822                           ;stkvar	_prod @ sp[(-13)+0]
 16823  012964  0EF3               	movlw	-13
 16824  012966  6AE3               	clrf	plusw1,c
 16825  012968  0EF4               	movlw	-12
 16826  01296A  6AE3               	clrf	plusw1,c
 16827  01296C  0EF5               	movlw	-11
 16828  01296E  6AE3               	clrf	plusw1,c
 16829  012970  0EF6               	movlw	-10
 16830  012972  6AE3               	clrf	plusw1,c
 16831                           
 16832                           ;stkvar	_sign @ sp[(-13)+12]
 16833  012974  0EFF               	movlw	-1
 16834  012976  6AE3               	clrf	plusw1,c
 16835  012978  D02F               	goto	l6867
 16836  01297A                     l6857:
 16837                           
 16838                           ;stkvar	_temp @ sp[(-13)+8]
 16839                           ;stkvar	_bexp @ sp[(-13)+10]
 16840  01297A  0EFB               	movlw	-5
 16841  01297C  006F FF8C  F035    	movff	plusw1,btemp
 16842  012982  0EFD               	movlw	-3
 16843  012984  0060  F0D7  FFE3   	movff	btemp,plusw1
 16844                           
 16845                           ;stkvar	_prod @ sp[(-13)+0]
 16846  01298A  50E1               	movf	fsr1l,w,c
 16847  01298C  0FF3               	addlw	-13
 16848  01298E  6ED9               	movwf	fsr2l,c
 16849  012990  50E2               	movf	fsr1h,w,c
 16850  012992  6EDA               	movwf	fsr2h,c
 16851  012994  0EFF               	movlw	255
 16852  012996  22DA               	addwfc	fsr2h,f,c
 16853  012998  0EFF               	movlw	255
 16854  01299A  16DE               	andwf	postinc2,f,c
 16855  01299C  0EFF               	movlw	255
 16856  01299E  16DE               	andwf	postinc2,f,c
 16857  0129A0  0E7F               	movlw	127
 16858  0129A2  16DE               	andwf	postinc2,f,c
 16859  0129A4  0E00               	movlw	0
 16860  0129A6  16DE               	andwf	postinc2,f,c
 16861                           
 16862                           ;stkvar	_bexp @ sp[(-13)+10]
 16863  0129A8  0EFD               	movlw	-3
 16864  0129AA  A0E3               	btfss	plusw1,0,c
 16865  0129AC  D008               	goto	l6865
 16866                           
 16867                           ;stkvar	_prod @ sp[(-13)+0]
 16868  0129AE  0EF5               	movlw	245
 16869  0129B0  24E1               	addwf	fsr1l,w,c
 16870  0129B2  6ED9               	movwf	fsr2l,c
 16871  0129B4  0EFF               	movlw	255
 16872  0129B6  20E2               	addwfc	fsr1h,w,c
 16873  0129B8  6EDA               	movwf	fsr2h,c
 16874  0129BA  0E00               	movlw	0
 16875  0129BC  8EDB               	bsf	plusw2,7,c
 16876  0129BE                     l6865:
 16877                           
 16878                           ;stkvar	_prod @ sp[(-13)+0]
 16879  0129BE  0EF6               	movlw	246
 16880  0129C0  24E1               	addwf	fsr1l,w,c
 16881  0129C2  6ED9               	movwf	fsr2l,c
 16882  0129C4  0EFF               	movlw	255
 16883  0129C6  20E2               	addwfc	fsr1h,w,c
 16884  0129C8  6EDA               	movwf	fsr2h,c
 16885                           
 16886                           ;stkvar	_bexp @ sp[(-13)+10]
 16887  0129CA  0EFD               	movlw	-3
 16888  0129CC  006F FF8C  F040    	movff	plusw1,btemp+11
 16889  0129D2  90D8               	bcf	status,0,c
 16890  0129D4  3040               	rrcf	(btemp+11)^0,w,c
 16891  0129D6  6EDF               	movwf	indf2,c
 16892  0129D8                     l6867:
 16893                           
 16894                           ;stkvar	_sign @ sp[(-13)+12]
 16895  0129D8  0EFF               	movlw	-1
 16896  0129DA  006F FF8C  F040    	movff	plusw1,btemp+11
 16897                           
 16898                           ;stkvar	_prod @ sp[(-13)+0]
 16899  0129E0  0EF6               	movlw	246
 16900  0129E2  24E1               	addwf	fsr1l,w,c
 16901  0129E4  6ED9               	movwf	fsr2l,c
 16902  0129E6  0EFF               	movlw	255
 16903  0129E8  20E2               	addwfc	fsr1h,w,c
 16904  0129EA  6EDA               	movwf	fsr2h,c
 16905  0129EC  5040               	movf	(btemp+11)^0,w,c
 16906  0129EE  12DF               	iorwf	indf2,f,c
 16907                           
 16908                           ;stkvar	_prod @ sp[(-13)+0]
 16909  0129F0  0EF3               	movlw	-13
 16910  0129F2  006F FF8C  F035    	movff	plusw1,btemp
 16911  0129F8  0EF4               	movlw	-12
 16912  0129FA  006F FF8C  F036    	movff	plusw1,btemp+1
 16913  012A00  0EF5               	movlw	-11
 16914  012A02  006F FF8C  F037    	movff	plusw1,btemp+2
 16915  012A08  0EF6               	movlw	-10
 16916  012A0A  006F FF8C  F038    	movff	plusw1,btemp+3
 16917  012A10                     l2626:
 16918                           
 16919                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16920  012A10  0EEB               	movlw	235
 16921  012A12  26E1               	addwf	fsr1l,f,c
 16922  012A14  0EFF               	movlw	255
 16923  012A16  22E2               	addwfc	fsr1h,f,c
 16924  012A18  0012               	return		;funcret
 16925  012A1A                     __end_of___flmul:
 16926                           	opt callstack 0
 16927                           
 16928 ;; *************** function ___flge *****************
 16929 ;; Defined at:
 16930 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;  ff1             4  [STACK] unsigned char 
 16933 ;;  ff2             4  [STACK] unsigned char 
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;		None               void
 16938 ;; Registers used:
 16939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/4
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; Hardware stack levels required when called:    6
 16952 ;; This function calls:
 16953 ;;		Nothing
 16954 ;; This function is called by:
 16955 ;;		_efgtoa
 16956 ;; This function uses a reentrant model
 16957 ;;
 16958                           
 16959                           	psect	text55
 16960  016792                     __ptext55:
 16961                           	opt callstack 0
 16962  016792                     ___flge:
 16963                           	opt callstack 17
 16964                           
 16965                           ;stkvar	_ff1 @ sp[(0)+-4]
 16966                           
 16967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16968                           ;incstack = 0
 16969  016792  50E1               	movf	fsr1l,w,c
 16970  016794  0FFC               	addlw	-4
 16971  016796  6ED9               	movwf	fsr2l,c
 16972  016798  50E2               	movf	fsr1h,w,c
 16973  01679A  6EDA               	movwf	fsr2h,c
 16974  01679C  0EFF               	movlw	255
 16975  01679E  22DA               	addwfc	fsr2h,f,c
 16976  0167A0  0E00               	movlw	0
 16977  0167A2  14DE               	andwf	postinc2,w,c
 16978  0167A4  6E3D               	movwf	(btemp+8)^0,c
 16979  0167A6  0E00               	movlw	0
 16980  0167A8  14DE               	andwf	postinc2,w,c
 16981  0167AA  6E3E               	movwf	(btemp+9)^0,c
 16982  0167AC  0E80               	movlw	128
 16983  0167AE  14DE               	andwf	postinc2,w,c
 16984  0167B0  6E3F               	movwf	(btemp+10)^0,c
 16985  0167B2  0E7F               	movlw	127
 16986  0167B4  14DE               	andwf	postinc2,w,c
 16987  0167B6  6E40               	movwf	(btemp+11)^0,c
 16988  0167B8  503D               	movf	(btemp+8)^0,w,c
 16989  0167BA  103E               	iorwf	(btemp+9)^0,w,c
 16990  0167BC  103F               	iorwf	(btemp+10)^0,w,c
 16991  0167BE  1040               	iorwf	(btemp+11)^0,w,c
 16992  0167C0  A4D8               	btfss	status,2,c
 16993  0167C2  D008               	goto	l6983
 16994                           
 16995                           ;stkvar	_ff1 @ sp[(0)+-4]
 16996  0167C4  0EFC               	movlw	-4
 16997  0167C6  6AE3               	clrf	plusw1,c
 16998  0167C8  0EFD               	movlw	-3
 16999  0167CA  6AE3               	clrf	plusw1,c
 17000  0167CC  0EFE               	movlw	-2
 17001  0167CE  6AE3               	clrf	plusw1,c
 17002  0167D0  0EFF               	movlw	-1
 17003  0167D2  6AE3               	clrf	plusw1,c
 17004  0167D4                     l6983:
 17005                           
 17006                           ;stkvar	_ff2 @ sp[(0)+-8]
 17007  0167D4  50E1               	movf	fsr1l,w,c
 17008  0167D6  0FF8               	addlw	-8
 17009  0167D8  6ED9               	movwf	fsr2l,c
 17010  0167DA  50E2               	movf	fsr1h,w,c
 17011  0167DC  6EDA               	movwf	fsr2h,c
 17012  0167DE  0EFF               	movlw	255
 17013  0167E0  22DA               	addwfc	fsr2h,f,c
 17014  0167E2  0E00               	movlw	0
 17015  0167E4  14DE               	andwf	postinc2,w,c
 17016  0167E6  6E3D               	movwf	(btemp+8)^0,c
 17017  0167E8  0E00               	movlw	0
 17018  0167EA  14DE               	andwf	postinc2,w,c
 17019  0167EC  6E3E               	movwf	(btemp+9)^0,c
 17020  0167EE  0E80               	movlw	128
 17021  0167F0  14DE               	andwf	postinc2,w,c
 17022  0167F2  6E3F               	movwf	(btemp+10)^0,c
 17023  0167F4  0E7F               	movlw	127
 17024  0167F6  14DE               	andwf	postinc2,w,c
 17025  0167F8  6E40               	movwf	(btemp+11)^0,c
 17026  0167FA  503D               	movf	(btemp+8)^0,w,c
 17027  0167FC  103E               	iorwf	(btemp+9)^0,w,c
 17028  0167FE  103F               	iorwf	(btemp+10)^0,w,c
 17029  016800  1040               	iorwf	(btemp+11)^0,w,c
 17030  016802  A4D8               	btfss	status,2,c
 17031  016804  D008               	goto	l2271
 17032                           
 17033                           ;stkvar	_ff2 @ sp[(0)+-8]
 17034  016806  0EF8               	movlw	-8
 17035  016808  6AE3               	clrf	plusw1,c
 17036  01680A  0EF9               	movlw	-7
 17037  01680C  6AE3               	clrf	plusw1,c
 17038  01680E  0EFA               	movlw	-6
 17039  016810  6AE3               	clrf	plusw1,c
 17040  016812  0EFB               	movlw	-5
 17041  016814  6AE3               	clrf	plusw1,c
 17042  016816                     l2271:
 17043                           
 17044                           ;stkvar	_ff1 @ sp[(0)+-4]
 17045  016816  0EFF               	movlw	-1
 17046  016818  AEE3               	btfss	plusw1,7,c
 17047  01681A  D024               	goto	l6989
 17048                           
 17049                           ;stkvar	_ff1 @ sp[(0)+-4]
 17050  01681C  0E00               	movlw	0
 17051  01681E  6E3D               	movwf	(btemp+8)^0,c
 17052  016820  0E00               	movlw	0
 17053  016822  6E3E               	movwf	(btemp+9)^0,c
 17054  016824  0E00               	movlw	0
 17055  016826  6E3F               	movwf	(btemp+10)^0,c
 17056  016828  0E80               	movlw	128
 17057  01682A  6E40               	movwf	(btemp+11)^0,c
 17058  01682C  0EFC               	movlw	-4
 17059  01682E  50E3               	movf	plusw1,w,c
 17060  016830  5E3D               	subwf	(btemp+8)^0,f,c
 17061  016832  0EFD               	movlw	-3
 17062  016834  50E3               	movf	plusw1,w,c
 17063  016836  5A3E               	subwfb	(btemp+9)^0,f,c
 17064  016838  0EFE               	movlw	-2
 17065  01683A  50E3               	movf	plusw1,w,c
 17066  01683C  5A3F               	subwfb	(btemp+10)^0,f,c
 17067  01683E  0EFF               	movlw	-1
 17068  016840  50E3               	movf	plusw1,w,c
 17069  016842  5A40               	subwfb	(btemp+11)^0,f,c
 17070                           
 17071                           ;stkvar	_ff1 @ sp[(0)+-4]
 17072  016844  0EFC               	movlw	-4
 17073  016846  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17074  01684C  0EFD               	movlw	-3
 17075  01684E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17076  016854  0EFE               	movlw	-2
 17077  016856  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17078  01685C  0EFF               	movlw	-1
 17079  01685E  0060  F103  FFE3   	movff	btemp+11,plusw1
 17080  016864                     l6989:
 17081                           
 17082                           ;stkvar	_ff2 @ sp[(0)+-8]
 17083  016864  0EFB               	movlw	-5
 17084  016866  AEE3               	btfss	plusw1,7,c
 17085  016868  D024               	goto	l6993
 17086                           
 17087                           ;stkvar	_ff2 @ sp[(0)+-8]
 17088  01686A  0E00               	movlw	0
 17089  01686C  6E3D               	movwf	(btemp+8)^0,c
 17090  01686E  0E00               	movlw	0
 17091  016870  6E3E               	movwf	(btemp+9)^0,c
 17092  016872  0E00               	movlw	0
 17093  016874  6E3F               	movwf	(btemp+10)^0,c
 17094  016876  0E80               	movlw	128
 17095  016878  6E40               	movwf	(btemp+11)^0,c
 17096  01687A  0EF8               	movlw	-8
 17097  01687C  50E3               	movf	plusw1,w,c
 17098  01687E  5E3D               	subwf	(btemp+8)^0,f,c
 17099  016880  0EF9               	movlw	-7
 17100  016882  50E3               	movf	plusw1,w,c
 17101  016884  5A3E               	subwfb	(btemp+9)^0,f,c
 17102  016886  0EFA               	movlw	-6
 17103  016888  50E3               	movf	plusw1,w,c
 17104  01688A  5A3F               	subwfb	(btemp+10)^0,f,c
 17105  01688C  0EFB               	movlw	-5
 17106  01688E  50E3               	movf	plusw1,w,c
 17107  016890  5A40               	subwfb	(btemp+11)^0,f,c
 17108                           
 17109                           ;stkvar	_ff2 @ sp[(0)+-8]
 17110  016892  0EF8               	movlw	-8
 17111  016894  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17112  01689A  0EF9               	movlw	-7
 17113  01689C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17114  0168A2  0EFA               	movlw	-6
 17115  0168A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17116  0168AA  0EFB               	movlw	-5
 17117  0168AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17118  0168B2                     l6993:
 17119                           
 17120                           ;stkvar	_ff1 @ sp[(0)+-4]
 17121  0168B2  0EFF               	movlw	-1
 17122  0168B4  7EE3               	btg	plusw1,7,c
 17123                           
 17124                           ;stkvar	_ff2 @ sp[(0)+-8]
 17125  0168B6  0EFB               	movlw	-5
 17126  0168B8  7EE3               	btg	plusw1,7,c
 17127                           
 17128                           ;stkvar	_ff2 @ sp[(0)+-8]
 17129                           ;stkvar	_ff1 @ sp[(0)+-4]
 17130  0168BA  50E1               	movf	fsr1l,w,c
 17131  0168BC  0FFC               	addlw	-4
 17132  0168BE  6ED9               	movwf	fsr2l,c
 17133  0168C0  50E2               	movf	fsr1h,w,c
 17134  0168C2  6EDA               	movwf	fsr2h,c
 17135  0168C4  0EFF               	movlw	255
 17136  0168C6  22DA               	addwfc	fsr2h,f,c
 17137  0168C8  0EF8               	movlw	-8
 17138  0168CA  50E3               	movf	plusw1,w,c
 17139  0168CC  5CDE               	subwf	postinc2,w,c
 17140  0168CE  0EF9               	movlw	-7
 17141  0168D0  50E3               	movf	plusw1,w,c
 17142  0168D2  58DE               	subwfb	postinc2,w,c
 17143  0168D4  0EFA               	movlw	-6
 17144  0168D6  50E3               	movf	plusw1,w,c
 17145  0168D8  58DE               	subwfb	postinc2,w,c
 17146  0168DA  0EFB               	movlw	-5
 17147  0168DC  50E3               	movf	plusw1,w,c
 17148  0168DE  58DE               	subwfb	postinc2,w,c
 17149  0168E0  B0D8               	btfsc	status,0,c
 17150  0168E2  D002               	goto	l7001
 17151  0168E4  9035               	bcf	btemp& (0+255),0,c
 17152  0168E6  D001               	goto	l2278
 17153  0168E8                     l7001:
 17154  0168E8  8035               	bsf	btemp& (0+255),0,c
 17155  0168EA                     l2278:
 17156                           
 17157                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17158  0168EA  0EF8               	movlw	248
 17159  0168EC  26E1               	addwf	fsr1l,f,c
 17160  0168EE  0EFF               	movlw	255
 17161  0168F0  22E2               	addwfc	fsr1h,f,c
 17162  0168F2  0012               	return		;funcret
 17163  0168F4                     __end_of___flge:
 17164                           	opt callstack 0
 17165                           
 17166 ;; *************** function ___fleq *****************
 17167 ;; Defined at:
 17168 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17169 ;; Parameters:    Size  Location     Type
 17170 ;;  ff1             4  [STACK] unsigned char 
 17171 ;;  ff2             4  [STACK] unsigned char 
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;		None
 17174 ;; Return value:  Size  Location     Type
 17175 ;;		None               void
 17176 ;; Registers used:
 17177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17178 ;; Tracked objects:
 17179 ;;		On entry : 0/4
 17180 ;;		On exit  : 0/0
 17181 ;;		Unchanged: 0/0
 17182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17187 ;;Total ram usage:        0 bytes
 17188 ;; Hardware stack levels used:    1
 17189 ;; Hardware stack levels required when called:    6
 17190 ;; This function calls:
 17191 ;;		Nothing
 17192 ;; This function is called by:
 17193 ;;		_efgtoa
 17194 ;; This function uses a reentrant model
 17195 ;;
 17196                           
 17197                           	psect	text56
 17198  01749C                     __ptext56:
 17199                           	opt callstack 0
 17200  01749C                     ___fleq:
 17201                           	opt callstack 17
 17202                           
 17203                           ;stkvar	_ff1 @ sp[(0)+-4]
 17204                           
 17205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17206                           ;incstack = 0
 17207  01749C  50E1               	movf	fsr1l,w,c
 17208  01749E  0FFC               	addlw	-4
 17209  0174A0  6ED9               	movwf	fsr2l,c
 17210  0174A2  50E2               	movf	fsr1h,w,c
 17211  0174A4  6EDA               	movwf	fsr2h,c
 17212  0174A6  0EFF               	movlw	255
 17213  0174A8  22DA               	addwfc	fsr2h,f,c
 17214  0174AA  0E00               	movlw	0
 17215  0174AC  14DE               	andwf	postinc2,w,c
 17216  0174AE  6E3D               	movwf	(btemp+8)^0,c
 17217  0174B0  0E00               	movlw	0
 17218  0174B2  14DE               	andwf	postinc2,w,c
 17219  0174B4  6E3E               	movwf	(btemp+9)^0,c
 17220  0174B6  0E80               	movlw	128
 17221  0174B8  14DE               	andwf	postinc2,w,c
 17222  0174BA  6E3F               	movwf	(btemp+10)^0,c
 17223  0174BC  0E7F               	movlw	127
 17224  0174BE  14DE               	andwf	postinc2,w,c
 17225  0174C0  6E40               	movwf	(btemp+11)^0,c
 17226  0174C2  503D               	movf	(btemp+8)^0,w,c
 17227  0174C4  103E               	iorwf	(btemp+9)^0,w,c
 17228  0174C6  103F               	iorwf	(btemp+10)^0,w,c
 17229  0174C8  1040               	iorwf	(btemp+11)^0,w,c
 17230  0174CA  A4D8               	btfss	status,2,c
 17231  0174CC  D008               	goto	l6967
 17232                           
 17233                           ;stkvar	_ff1 @ sp[(0)+-4]
 17234  0174CE  0EFC               	movlw	-4
 17235  0174D0  6AE3               	clrf	plusw1,c
 17236  0174D2  0EFD               	movlw	-3
 17237  0174D4  6AE3               	clrf	plusw1,c
 17238  0174D6  0EFE               	movlw	-2
 17239  0174D8  6AE3               	clrf	plusw1,c
 17240  0174DA  0EFF               	movlw	-1
 17241  0174DC  6AE3               	clrf	plusw1,c
 17242  0174DE                     l6967:
 17243                           
 17244                           ;stkvar	_ff2 @ sp[(0)+-8]
 17245  0174DE  50E1               	movf	fsr1l,w,c
 17246  0174E0  0FF8               	addlw	-8
 17247  0174E2  6ED9               	movwf	fsr2l,c
 17248  0174E4  50E2               	movf	fsr1h,w,c
 17249  0174E6  6EDA               	movwf	fsr2h,c
 17250  0174E8  0EFF               	movlw	255
 17251  0174EA  22DA               	addwfc	fsr2h,f,c
 17252  0174EC  0E00               	movlw	0
 17253  0174EE  14DE               	andwf	postinc2,w,c
 17254  0174F0  6E3D               	movwf	(btemp+8)^0,c
 17255  0174F2  0E00               	movlw	0
 17256  0174F4  14DE               	andwf	postinc2,w,c
 17257  0174F6  6E3E               	movwf	(btemp+9)^0,c
 17258  0174F8  0E80               	movlw	128
 17259  0174FA  14DE               	andwf	postinc2,w,c
 17260  0174FC  6E3F               	movwf	(btemp+10)^0,c
 17261  0174FE  0E7F               	movlw	127
 17262  017500  14DE               	andwf	postinc2,w,c
 17263  017502  6E40               	movwf	(btemp+11)^0,c
 17264  017504  503D               	movf	(btemp+8)^0,w,c
 17265  017506  103E               	iorwf	(btemp+9)^0,w,c
 17266  017508  103F               	iorwf	(btemp+10)^0,w,c
 17267  01750A  1040               	iorwf	(btemp+11)^0,w,c
 17268  01750C  A4D8               	btfss	status,2,c
 17269  01750E  D008               	goto	l6971
 17270                           
 17271                           ;stkvar	_ff2 @ sp[(0)+-8]
 17272  017510  0EF8               	movlw	-8
 17273  017512  6AE3               	clrf	plusw1,c
 17274  017514  0EF9               	movlw	-7
 17275  017516  6AE3               	clrf	plusw1,c
 17276  017518  0EFA               	movlw	-6
 17277  01751A  6AE3               	clrf	plusw1,c
 17278  01751C  0EFB               	movlw	-5
 17279  01751E  6AE3               	clrf	plusw1,c
 17280  017520                     l6971:
 17281                           
 17282                           ;stkvar	_ff2 @ sp[(0)+-8]
 17283                           ;stkvar	_ff1 @ sp[(0)+-4]
 17284  017520  50E1               	movf	fsr1l,w,c
 17285  017522  0FFC               	addlw	-4
 17286  017524  6ED9               	movwf	fsr2l,c
 17287  017526  50E2               	movf	fsr1h,w,c
 17288  017528  6EDA               	movwf	fsr2h,c
 17289  01752A  0EFF               	movlw	255
 17290  01752C  22DA               	addwfc	fsr2h,f,c
 17291  01752E  0EF8               	movlw	-8
 17292  017530  50E3               	movf	plusw1,w,c
 17293  017532  18DE               	xorwf	postinc2,w,c
 17294  017534  E10D               	bnz	u6270
 17295  017536  0EF9               	movlw	-7
 17296  017538  50E3               	movf	plusw1,w,c
 17297  01753A  18DE               	xorwf	postinc2,w,c
 17298  01753C  E109               	bnz	u6270
 17299  01753E  0EFA               	movlw	-6
 17300  017540  50E3               	movf	plusw1,w,c
 17301  017542  18DE               	xorwf	postinc2,w,c
 17302  017544  E105               	bnz	u6270
 17303  017546  0EFB               	movlw	-5
 17304  017548  50E3               	movf	plusw1,w,c
 17305  01754A  18DE               	xorwf	postinc2,w,c
 17306  01754C  B4D8               	btfsc	status,2,c
 17307  01754E  D002               	goto	l6975
 17308  017550                     u6270:
 17309  017550  9035               	bcf	btemp& (0+255),0,c
 17310  017552  D001               	goto	l2267
 17311  017554                     l6975:
 17312  017554  8035               	bsf	btemp& (0+255),0,c
 17313  017556                     l2267:
 17314                           
 17315                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17316  017556  0EF8               	movlw	248
 17317  017558  26E1               	addwf	fsr1l,f,c
 17318  01755A  0EFF               	movlw	255
 17319  01755C  22E2               	addwfc	fsr1h,f,c
 17320  01755E  0012               	return		;funcret
 17321  017560                     __end_of___fleq:
 17322                           	opt callstack 0
 17323                           
 17324 ;; *************** function ___fldiv *****************
 17325 ;; Defined at:
 17326 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  b               4  [STACK] unsigned char 
 17329 ;;  a               4  [STACK] unsigned char 
 17330 ;; Auto vars:     Size  Location     Type
 17331 ;;  grs             4  [STACK] unsigned long 
 17332 ;;  rem             4  [STACK] unsigned long 
 17333 ;;  new_exp         2  [STACK] short 
 17334 ;;  aexp            1  [STACK] unsigned char 
 17335 ;;  bexp            1  [STACK] unsigned char 
 17336 ;;  sign            1  [STACK] unsigned char 
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  4  [STACK] unsigned char 
 17339 ;; Registers used:
 17340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/4
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17350 ;;Total ram usage:        0 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:    6
 17353 ;; This function calls:
 17354 ;;		Nothing
 17355 ;; This function is called by:
 17356 ;;		_conv_raw_result
 17357 ;;		_efgtoa
 17358 ;; This function uses a reentrant model
 17359 ;;
 17360                           
 17361                           	psect	text57
 17362  0131D6                     __ptext57:
 17363                           	opt callstack 0
 17364  0131D6                     ___fldiv:
 17365                           	opt callstack 0
 17366                           
 17367                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17368  0131D6  0E0D               	movlw	13
 17369  0131D8  26E1               	addwf	fsr1l,f,c
 17370  0131DA  0E00               	movlw	0
 17371  0131DC  22E2               	addwfc	fsr1h,f,c
 17372                           
 17373                           ;stkvar	_b @ sp[(-13)+-4]
 17374                           
 17375                           ;incstack = 0
 17376  0131DE  0EF2               	movlw	242
 17377  0131E0  24E1               	addwf	fsr1l,w,c
 17378  0131E2  6ED9               	movwf	fsr2l,c
 17379  0131E4  0EFF               	movlw	255
 17380  0131E6  20E2               	addwfc	fsr1h,w,c
 17381  0131E8  6EDA               	movwf	fsr2h,c
 17382  0131EA  50DF               	movf	indf2,w,c
 17383  0131EC  6E40               	movwf	(btemp+11)^0,c
 17384  0131EE  0E80               	movlw	128
 17385  0131F0  1640               	andwf	(btemp+11)^0,f,c
 17386                           
 17387                           ;stkvar	_sign @ sp[(-13)+12]
 17388  0131F2  0EFF               	movlw	-1
 17389  0131F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 17390                           
 17391                           ;stkvar	_b @ sp[(-13)+-4]
 17392  0131FA  0EF2               	movlw	242
 17393  0131FC  24E1               	addwf	fsr1l,w,c
 17394  0131FE  6ED9               	movwf	fsr2l,c
 17395  013200  0EFF               	movlw	255
 17396  013202  20E2               	addwfc	fsr1h,w,c
 17397  013204  6EDA               	movwf	fsr2h,c
 17398  013206  50DF               	movf	indf2,w,c
 17399  013208  6E40               	movwf	(btemp+11)^0,c
 17400  01320A  90D8               	bcf	status,0,c
 17401  01320C  3440               	rlcf	(btemp+11)^0,w,c
 17402  01320E  6E3F               	movwf	(btemp+10)^0,c
 17403                           
 17404                           ;stkvar	_bexp @ sp[(-13)+11]
 17405  013210  0EFE               	movlw	-2
 17406  013212  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17407                           
 17408                           ;stkvar	_b @ sp[(-13)+-4]
 17409  013218  0EF1               	movlw	241
 17410  01321A  24E1               	addwf	fsr1l,w,c
 17411  01321C  6ED9               	movwf	fsr2l,c
 17412  01321E  0EFF               	movlw	255
 17413  013220  20E2               	addwfc	fsr1h,w,c
 17414  013222  6EDA               	movwf	fsr2h,c
 17415  013224  AEDF               	btfss	indf2,7,c
 17416  013226  D002               	goto	l6569
 17417                           
 17418                           ;stkvar	_bexp @ sp[(-13)+11]
 17419  013228  0EFE               	movlw	-2
 17420  01322A  80E3               	bsf	plusw1,0,c
 17421  01322C                     l6569:
 17422                           
 17423                           ;stkvar	_bexp @ sp[(-13)+11]
 17424  01322C  0EFE               	movlw	-2
 17425  01322E  50E3               	movf	plusw1,w,c
 17426  013230  B4D8               	btfsc	status,2,c
 17427  013232  D027               	goto	l6579
 17428                           
 17429                           ;stkvar	_bexp @ sp[(-13)+11]
 17430  013234  0EFE               	movlw	-2
 17431  013236  28E3               	incf	plusw1,w,c
 17432  013238  A4D8               	btfss	status,2,c
 17433  01323A  D018               	goto	l6575
 17434  01323C  0E00               	movlw	0
 17435  01323E  6E3D               	movwf	(btemp+8)^0,c
 17436  013240  0E00               	movlw	0
 17437  013242  6E3E               	movwf	(btemp+9)^0,c
 17438  013244  0E00               	movlw	0
 17439  013246  6E3F               	movwf	(btemp+10)^0,c
 17440  013248  0E00               	movlw	0
 17441  01324A  6E40               	movwf	(btemp+11)^0,c
 17442                           
 17443                           ;stkvar	_b @ sp[(-13)+-4]
 17444  01324C  0EEF               	movlw	-17
 17445  01324E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17446  013254  0EF0               	movlw	-16
 17447  013256  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17448  01325C  0EF1               	movlw	-15
 17449  01325E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17450  013264  0EF2               	movlw	-14
 17451  013266  0060  F103  FFE3   	movff	btemp+11,plusw1
 17452  01326C                     l6575:
 17453                           
 17454                           ;stkvar	_b @ sp[(-13)+-4]
 17455  01326C  0EF1               	movlw	-15
 17456  01326E  8EE3               	bsf	plusw1,7,c
 17457                           
 17458                           ;stkvar	_b @ sp[(-13)+-4]
 17459  013270  0EF2               	movlw	242
 17460  013272  24E1               	addwf	fsr1l,w,c
 17461  013274  6ED9               	movwf	fsr2l,c
 17462  013276  0EFF               	movlw	255
 17463  013278  20E2               	addwfc	fsr1h,w,c
 17464  01327A  6EDA               	movwf	fsr2h,c
 17465  01327C  0E00               	movlw	0
 17466  01327E  6EDF               	movwf	indf2,c
 17467  013280  D018               	goto	l6581
 17468  013282                     l6579:
 17469  013282  0E00               	movlw	0
 17470  013284  6E3D               	movwf	(btemp+8)^0,c
 17471  013286  0E00               	movlw	0
 17472  013288  6E3E               	movwf	(btemp+9)^0,c
 17473  01328A  0E00               	movlw	0
 17474  01328C  6E3F               	movwf	(btemp+10)^0,c
 17475  01328E  0E00               	movlw	0
 17476  013290  6E40               	movwf	(btemp+11)^0,c
 17477                           
 17478                           ;stkvar	_b @ sp[(-13)+-4]
 17479  013292  0EEF               	movlw	-17
 17480  013294  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17481  01329A  0EF0               	movlw	-16
 17482  01329C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17483  0132A2  0EF1               	movlw	-15
 17484  0132A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17485  0132AA  0EF2               	movlw	-14
 17486  0132AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17487  0132B2                     l6581:
 17488                           
 17489                           ;stkvar	_a @ sp[(-13)+-8]
 17490  0132B2  0EEE               	movlw	238
 17491  0132B4  24E1               	addwf	fsr1l,w,c
 17492  0132B6  6ED9               	movwf	fsr2l,c
 17493  0132B8  0EFF               	movlw	255
 17494  0132BA  20E2               	addwfc	fsr1h,w,c
 17495  0132BC  6EDA               	movwf	fsr2h,c
 17496  0132BE  50DF               	movf	indf2,w,c
 17497  0132C0  6E40               	movwf	(btemp+11)^0,c
 17498  0132C2  0E80               	movlw	128
 17499  0132C4  1640               	andwf	(btemp+11)^0,f,c
 17500                           
 17501                           ;stkvar	_sign @ sp[(-13)+12]
 17502  0132C6  50E1               	movf	fsr1l,w,c
 17503  0132C8  0FFF               	addlw	-1
 17504  0132CA  6ED9               	movwf	fsr2l,c
 17505  0132CC  50E2               	movf	fsr1h,w,c
 17506  0132CE  6EDA               	movwf	fsr2h,c
 17507  0132D0  0EFF               	movlw	255
 17508  0132D2  22DA               	addwfc	fsr2h,f,c
 17509  0132D4  5040               	movf	(btemp+11)^0,w,c
 17510  0132D6  1ADF               	xorwf	indf2,f,c
 17511                           
 17512                           ;stkvar	_a @ sp[(-13)+-8]
 17513  0132D8  0EEE               	movlw	238
 17514  0132DA  24E1               	addwf	fsr1l,w,c
 17515  0132DC  6ED9               	movwf	fsr2l,c
 17516  0132DE  0EFF               	movlw	255
 17517  0132E0  20E2               	addwfc	fsr1h,w,c
 17518  0132E2  6EDA               	movwf	fsr2h,c
 17519  0132E4  50DF               	movf	indf2,w,c
 17520  0132E6  6E40               	movwf	(btemp+11)^0,c
 17521  0132E8  90D8               	bcf	status,0,c
 17522  0132EA  3440               	rlcf	(btemp+11)^0,w,c
 17523  0132EC  6E3F               	movwf	(btemp+10)^0,c
 17524                           
 17525                           ;stkvar	_aexp @ sp[(-13)+10]
 17526  0132EE  0EFD               	movlw	-3
 17527  0132F0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17528                           
 17529                           ;stkvar	_a @ sp[(-13)+-8]
 17530  0132F6  0EED               	movlw	237
 17531  0132F8  24E1               	addwf	fsr1l,w,c
 17532  0132FA  6ED9               	movwf	fsr2l,c
 17533  0132FC  0EFF               	movlw	255
 17534  0132FE  20E2               	addwfc	fsr1h,w,c
 17535  013300  6EDA               	movwf	fsr2h,c
 17536  013302  AEDF               	btfss	indf2,7,c
 17537  013304  D002               	goto	l6589
 17538                           
 17539                           ;stkvar	_aexp @ sp[(-13)+10]
 17540  013306  0EFD               	movlw	-3
 17541  013308  80E3               	bsf	plusw1,0,c
 17542  01330A                     l6589:
 17543                           
 17544                           ;stkvar	_aexp @ sp[(-13)+10]
 17545  01330A  0EFD               	movlw	-3
 17546  01330C  50E3               	movf	plusw1,w,c
 17547  01330E  B4D8               	btfsc	status,2,c
 17548  013310  D027               	goto	l6599
 17549                           
 17550                           ;stkvar	_aexp @ sp[(-13)+10]
 17551  013312  0EFD               	movlw	-3
 17552  013314  28E3               	incf	plusw1,w,c
 17553  013316  A4D8               	btfss	status,2,c
 17554  013318  D018               	goto	l6595
 17555  01331A  0E00               	movlw	0
 17556  01331C  6E3D               	movwf	(btemp+8)^0,c
 17557  01331E  0E00               	movlw	0
 17558  013320  6E3E               	movwf	(btemp+9)^0,c
 17559  013322  0E00               	movlw	0
 17560  013324  6E3F               	movwf	(btemp+10)^0,c
 17561  013326  0E00               	movlw	0
 17562  013328  6E40               	movwf	(btemp+11)^0,c
 17563                           
 17564                           ;stkvar	_a @ sp[(-13)+-8]
 17565  01332A  0EEB               	movlw	-21
 17566  01332C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17567  013332  0EEC               	movlw	-20
 17568  013334  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17569  01333A  0EED               	movlw	-19
 17570  01333C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17571  013342  0EEE               	movlw	-18
 17572  013344  0060  F103  FFE3   	movff	btemp+11,plusw1
 17573  01334A                     l6595:
 17574                           
 17575                           ;stkvar	_a @ sp[(-13)+-8]
 17576  01334A  0EED               	movlw	-19
 17577  01334C  8EE3               	bsf	plusw1,7,c
 17578                           
 17579                           ;stkvar	_a @ sp[(-13)+-8]
 17580  01334E  0EEE               	movlw	238
 17581  013350  24E1               	addwf	fsr1l,w,c
 17582  013352  6ED9               	movwf	fsr2l,c
 17583  013354  0EFF               	movlw	255
 17584  013356  20E2               	addwfc	fsr1h,w,c
 17585  013358  6EDA               	movwf	fsr2h,c
 17586  01335A  0E00               	movlw	0
 17587  01335C  6EDF               	movwf	indf2,c
 17588  01335E  D018               	goto	l6601
 17589  013360                     l6599:
 17590  013360  0E00               	movlw	0
 17591  013362  6E3D               	movwf	(btemp+8)^0,c
 17592  013364  0E00               	movlw	0
 17593  013366  6E3E               	movwf	(btemp+9)^0,c
 17594  013368  0E00               	movlw	0
 17595  01336A  6E3F               	movwf	(btemp+10)^0,c
 17596  01336C  0E00               	movlw	0
 17597  01336E  6E40               	movwf	(btemp+11)^0,c
 17598                           
 17599                           ;stkvar	_a @ sp[(-13)+-8]
 17600  013370  0EEB               	movlw	-21
 17601  013372  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17602  013378  0EEC               	movlw	-20
 17603  01337A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17604  013380  0EED               	movlw	-19
 17605  013382  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17606  013388  0EEE               	movlw	-18
 17607  01338A  0060  F103  FFE3   	movff	btemp+11,plusw1
 17608  013390                     l6601:
 17609                           
 17610                           ;stkvar	_a @ sp[(-13)+-8]
 17611  013390  0EEB               	movlw	-21
 17612  013392  50E3               	movf	plusw1,w,c
 17613  013394  E139               	bnz	l6613
 17614  013396  0EEC               	movlw	-20
 17615  013398  50E3               	movf	plusw1,w,c
 17616  01339A  E136               	bnz	l6613
 17617  01339C  0EED               	movlw	-19
 17618  01339E  50E3               	movf	plusw1,w,c
 17619  0133A0  E133               	bnz	l6613
 17620  0133A2  0EEE               	movlw	-18
 17621  0133A4  50E3               	movf	plusw1,w,c
 17622  0133A6  A4D8               	btfss	status,2,c
 17623  0133A8  D02F               	goto	l6613
 17624                           
 17625                           ;stkvar	_b @ sp[(-13)+-4]
 17626  0133AA  0EEF               	movlw	-17
 17627  0133AC  6AE3               	clrf	plusw1,c
 17628  0133AE  0EF0               	movlw	-16
 17629  0133B0  6AE3               	clrf	plusw1,c
 17630  0133B2  0EF1               	movlw	-15
 17631  0133B4  6AE3               	clrf	plusw1,c
 17632  0133B6  0EF2               	movlw	-14
 17633  0133B8  6AE3               	clrf	plusw1,c
 17634                           
 17635                           ;stkvar	_b @ sp[(-13)+-4]
 17636  0133BA  0EF1               	movlw	241
 17637  0133BC  24E1               	addwf	fsr1l,w,c
 17638  0133BE  6ED9               	movwf	fsr2l,c
 17639  0133C0  0EFF               	movlw	255
 17640  0133C2  20E2               	addwfc	fsr1h,w,c
 17641  0133C4  6EDA               	movwf	fsr2h,c
 17642  0133C6  0E80               	movlw	128
 17643  0133C8  12DE               	iorwf	postinc2,f,c
 17644  0133CA  0E7F               	movlw	127
 17645  0133CC  12DD               	iorwf	postdec2,f,c
 17646  0133CE                     l6607:
 17647                           
 17648                           ;stkvar	_sign @ sp[(-13)+12]
 17649  0133CE  0EFF               	movlw	-1
 17650  0133D0  006F FF8C  F040    	movff	plusw1,btemp+11
 17651                           
 17652                           ;stkvar	_b @ sp[(-13)+-4]
 17653  0133D6  0EF2               	movlw	242
 17654  0133D8  24E1               	addwf	fsr1l,w,c
 17655  0133DA  6ED9               	movwf	fsr2l,c
 17656  0133DC  0EFF               	movlw	255
 17657  0133DE  20E2               	addwfc	fsr1h,w,c
 17658  0133E0  6EDA               	movwf	fsr2h,c
 17659  0133E2  5040               	movf	(btemp+11)^0,w,c
 17660  0133E4  12DF               	iorwf	indf2,f,c
 17661                           
 17662                           ;stkvar	_b @ sp[(-13)+-4]
 17663  0133E6  0EEF               	movlw	-17
 17664  0133E8  006F FF8C  F035    	movff	plusw1,btemp
 17665  0133EE  0EF0               	movlw	-16
 17666  0133F0  006F FF8C  F036    	movff	plusw1,btemp+1
 17667  0133F6  0EF1               	movlw	-15
 17668  0133F8  006F FF8C  F037    	movff	plusw1,btemp+2
 17669  0133FE  0EF2               	movlw	-14
 17670  013400  006F FF8C  F038    	movff	plusw1,btemp+3
 17671  013406  D19F               	goto	l2590
 17672  013408                     l6613:
 17673                           
 17674                           ;stkvar	_bexp @ sp[(-13)+11]
 17675  013408  0EFE               	movlw	-2
 17676  01340A  50E3               	movf	plusw1,w,c
 17677  01340C  A4D8               	btfss	status,2,c
 17678  01340E  D009               	goto	l6621
 17679  013410  0E00               	movlw	0
 17680  013412  6E35               	movwf	btemp^0,c
 17681  013414  0E00               	movlw	0
 17682  013416  6E36               	movwf	(btemp+1)^0,c
 17683  013418  0E00               	movlw	0
 17684  01341A  6E37               	movwf	(btemp+2)^0,c
 17685  01341C  0E00               	movlw	0
 17686  01341E  6E38               	movwf	(btemp+3)^0,c
 17687  013420  D192               	goto	l2590
 17688  013422                     l6621:
 17689                           
 17690                           ;stkvar	_bexp @ sp[(-13)+11]
 17691  013422  0EFE               	movlw	-2
 17692  013424  50E3               	movf	plusw1,w,c
 17693  013426  6E3F               	movwf	(btemp+10)^0,c
 17694  013428  6A40               	clrf	(btemp+11)^0,c
 17695                           
 17696                           ;stkvar	_aexp @ sp[(-13)+10]
 17697  01342A  0EFD               	movlw	-3
 17698  01342C  50E3               	movf	plusw1,w,c
 17699  01342E  5E3F               	subwf	(btemp+10)^0,f,c
 17700  013430  0E00               	movlw	0
 17701  013432  5A40               	subwfb	(btemp+11)^0,f,c
 17702  013434  0E7F               	movlw	127
 17703  013436  263F               	addwf	(btemp+10)^0,f,c
 17704  013438  0E00               	movlw	0
 17705  01343A  2240               	addwfc	(btemp+11)^0,f,c
 17706                           
 17707                           ;stkvar	_new_exp @ sp[(-13)+8]
 17708  01343C  0EFB               	movlw	-5
 17709  01343E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17710  013444  0EFC               	movlw	-4
 17711  013446  0060  F103  FFE3   	movff	btemp+11,plusw1
 17712                           
 17713                           ;stkvar	_b @ sp[(-13)+-4]
 17714  01344C  0EEF               	movlw	-17
 17715  01344E  006F FF8C  F03D    	movff	plusw1,btemp+8
 17716  013454  0EF0               	movlw	-16
 17717  013456  006F FF8C  F03E    	movff	plusw1,btemp+9
 17718  01345C  0EF1               	movlw	-15
 17719  01345E  006F FF8C  F03F    	movff	plusw1,btemp+10
 17720  013464  0EF2               	movlw	-14
 17721  013466  006F FF8C  F040    	movff	plusw1,btemp+11
 17722                           
 17723                           ;stkvar	_rem @ sp[(-13)+4]
 17724  01346C  0EF7               	movlw	-9
 17725  01346E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17726  013474  0EF8               	movlw	-8
 17727  013476  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17728  01347C  0EF9               	movlw	-7
 17729  01347E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17730  013484  0EFA               	movlw	-6
 17731  013486  0060  F103  FFE3   	movff	btemp+11,plusw1
 17732                           
 17733                           ;stkvar	_b @ sp[(-13)+-4]
 17734  01348C  0EEF               	movlw	-17
 17735  01348E  6AE3               	clrf	plusw1,c
 17736  013490  0EF0               	movlw	-16
 17737  013492  6AE3               	clrf	plusw1,c
 17738  013494  0EF1               	movlw	-15
 17739  013496  6AE3               	clrf	plusw1,c
 17740  013498  0EF2               	movlw	-14
 17741  01349A  6AE3               	clrf	plusw1,c
 17742                           
 17743                           ;stkvar	_grs @ sp[(-13)+0]
 17744  01349C  0EF3               	movlw	-13
 17745  01349E  6AE3               	clrf	plusw1,c
 17746  0134A0  0EF4               	movlw	-12
 17747  0134A2  6AE3               	clrf	plusw1,c
 17748  0134A4  0EF5               	movlw	-11
 17749  0134A6  6AE3               	clrf	plusw1,c
 17750  0134A8  0EF6               	movlw	-10
 17751  0134AA  6AE3               	clrf	plusw1,c
 17752                           
 17753                           ;stkvar	_aexp @ sp[(-13)+10]
 17754  0134AC  0EFD               	movlw	-3
 17755  0134AE  6AE3               	clrf	plusw1,c
 17756  0134B0  D050               	goto	l6649
 17757  0134B2                     l6631:
 17758                           
 17759                           ;stkvar	_aexp @ sp[(-13)+10]
 17760  0134B2  0EFD               	movlw	-3
 17761  0134B4  50E3               	movf	plusw1,w,c
 17762  0134B6  B4D8               	btfsc	status,2,c
 17763  0134B8  D020               	goto	l6641
 17764                           
 17765                           ;stkvar	_rem @ sp[(-13)+4]
 17766  0134BA  90D8               	bcf	status,0,c
 17767  0134BC  0EF7               	movlw	-9
 17768  0134BE  36E3               	rlcf	plusw1,f,c
 17769  0134C0  0EF8               	movlw	-8
 17770  0134C2  36E3               	rlcf	plusw1,f,c
 17771  0134C4  0EF9               	movlw	-7
 17772  0134C6  36E3               	rlcf	plusw1,f,c
 17773  0134C8  0EFA               	movlw	-6
 17774  0134CA  36E3               	rlcf	plusw1,f,c
 17775                           
 17776                           ;stkvar	_b @ sp[(-13)+-4]
 17777  0134CC  90D8               	bcf	status,0,c
 17778  0134CE  0EEF               	movlw	-17
 17779  0134D0  36E3               	rlcf	plusw1,f,c
 17780  0134D2  0EF0               	movlw	-16
 17781  0134D4  36E3               	rlcf	plusw1,f,c
 17782  0134D6  0EF1               	movlw	-15
 17783  0134D8  36E3               	rlcf	plusw1,f,c
 17784  0134DA  0EF2               	movlw	-14
 17785  0134DC  36E3               	rlcf	plusw1,f,c
 17786                           
 17787                           ;stkvar	_grs @ sp[(-13)+0]
 17788  0134DE  0EF6               	movlw	-10
 17789  0134E0  AEE3               	btfss	plusw1,7,c
 17790  0134E2  D002               	goto	l6639
 17791                           
 17792                           ;stkvar	_b @ sp[(-13)+-4]
 17793  0134E4  0EEF               	movlw	-17
 17794  0134E6  80E3               	bsf	plusw1,0,c
 17795  0134E8                     l6639:
 17796                           
 17797                           ;stkvar	_grs @ sp[(-13)+0]
 17798  0134E8  90D8               	bcf	status,0,c
 17799  0134EA  0EF3               	movlw	-13
 17800  0134EC  36E3               	rlcf	plusw1,f,c
 17801  0134EE  0EF4               	movlw	-12
 17802  0134F0  36E3               	rlcf	plusw1,f,c
 17803  0134F2  0EF5               	movlw	-11
 17804  0134F4  36E3               	rlcf	plusw1,f,c
 17805  0134F6  0EF6               	movlw	-10
 17806  0134F8  36E3               	rlcf	plusw1,f,c
 17807  0134FA                     l6641:
 17808                           
 17809                           ;stkvar	_a @ sp[(-13)+-8]
 17810                           ;stkvar	_rem @ sp[(-13)+4]
 17811  0134FA  50E1               	movf	fsr1l,w,c
 17812  0134FC  0FF7               	addlw	-9
 17813  0134FE  6ED9               	movwf	fsr2l,c
 17814  013500  50E2               	movf	fsr1h,w,c
 17815  013502  6EDA               	movwf	fsr2h,c
 17816  013504  0EFF               	movlw	255
 17817  013506  22DA               	addwfc	fsr2h,f,c
 17818  013508  0EEB               	movlw	-21
 17819  01350A  50E3               	movf	plusw1,w,c
 17820  01350C  5CDE               	subwf	postinc2,w,c
 17821  01350E  0EEC               	movlw	-20
 17822  013510  50E3               	movf	plusw1,w,c
 17823  013512  58DE               	subwfb	postinc2,w,c
 17824  013514  0EED               	movlw	-19
 17825  013516  50E3               	movf	plusw1,w,c
 17826  013518  58DE               	subwfb	postinc2,w,c
 17827  01351A  0EEE               	movlw	-18
 17828  01351C  50E3               	movf	plusw1,w,c
 17829  01351E  58DE               	subwfb	postinc2,w,c
 17830  013520  A0D8               	btfss	status,0,c
 17831  013522  D015               	goto	l6647
 17832                           
 17833                           ;stkvar	_grs @ sp[(-13)+0]
 17834  013524  0EF6               	movlw	-10
 17835  013526  8CE3               	bsf	plusw1,6,c
 17836                           
 17837                           ;stkvar	_a @ sp[(-13)+-8]
 17838                           ;stkvar	_rem @ sp[(-13)+4]
 17839  013528  50E1               	movf	fsr1l,w,c
 17840  01352A  0FF7               	addlw	-9
 17841  01352C  6ED9               	movwf	fsr2l,c
 17842  01352E  50E2               	movf	fsr1h,w,c
 17843  013530  6EDA               	movwf	fsr2h,c
 17844  013532  0EFF               	movlw	255
 17845  013534  22DA               	addwfc	fsr2h,f,c
 17846  013536  0EEB               	movlw	-21
 17847  013538  50E3               	movf	plusw1,w,c
 17848  01353A  5EDE               	subwf	postinc2,f,c
 17849  01353C  0EEC               	movlw	-20
 17850  01353E  50E3               	movf	plusw1,w,c
 17851  013540  5ADE               	subwfb	postinc2,f,c
 17852  013542  0EED               	movlw	-19
 17853  013544  50E3               	movf	plusw1,w,c
 17854  013546  5ADE               	subwfb	postinc2,f,c
 17855  013548  0EEE               	movlw	-18
 17856  01354A  50E3               	movf	plusw1,w,c
 17857  01354C  5ADE               	subwfb	postinc2,f,c
 17858  01354E                     l6647:
 17859                           
 17860                           ;stkvar	_aexp @ sp[(-13)+10]
 17861  01354E  0EFD               	movlw	-3
 17862  013550  2AE3               	incf	plusw1,f,c
 17863  013552                     l6649:
 17864                           
 17865                           ;stkvar	_aexp @ sp[(-13)+10]
 17866  013552  0EFD               	movlw	-3
 17867  013554  006F FF8C  F035    	movff	plusw1,btemp
 17868  01355A  0E19               	movlw	25
 17869  01355C  6435               	cpfsgt	btemp^0,c
 17870  01355E  D7A9               	goto	l6631
 17871                           
 17872                           ;stkvar	_rem @ sp[(-13)+4]
 17873  013560  0EF7               	movlw	-9
 17874  013562  50E3               	movf	plusw1,w,c
 17875  013564  E10A               	bnz	u5770
 17876  013566  0EF8               	movlw	-8
 17877  013568  50E3               	movf	plusw1,w,c
 17878  01356A  E107               	bnz	u5770
 17879  01356C  0EF9               	movlw	-7
 17880  01356E  50E3               	movf	plusw1,w,c
 17881  013570  E104               	bnz	u5770
 17882  013572  0EFA               	movlw	-6
 17883  013574  50E3               	movf	plusw1,w,c
 17884  013576  B4D8               	btfsc	status,2,c
 17885  013578  D024               	goto	l6665
 17886  01357A                     u5770:
 17887                           
 17888                           ;stkvar	_grs @ sp[(-13)+0]
 17889  01357A  0EF3               	movlw	-13
 17890  01357C  80E3               	bsf	plusw1,0,c
 17891  01357E  D021               	goto	l6665
 17892  013580                     l6655:
 17893                           
 17894                           ;stkvar	_b @ sp[(-13)+-4]
 17895  013580  90D8               	bcf	status,0,c
 17896  013582  0EEF               	movlw	-17
 17897  013584  36E3               	rlcf	plusw1,f,c
 17898  013586  0EF0               	movlw	-16
 17899  013588  36E3               	rlcf	plusw1,f,c
 17900  01358A  0EF1               	movlw	-15
 17901  01358C  36E3               	rlcf	plusw1,f,c
 17902  01358E  0EF2               	movlw	-14
 17903  013590  36E3               	rlcf	plusw1,f,c
 17904                           
 17905                           ;stkvar	_grs @ sp[(-13)+0]
 17906  013592  0EF6               	movlw	-10
 17907  013594  AEE3               	btfss	plusw1,7,c
 17908  013596  D002               	goto	l6661
 17909                           
 17910                           ;stkvar	_b @ sp[(-13)+-4]
 17911  013598  0EEF               	movlw	-17
 17912  01359A  80E3               	bsf	plusw1,0,c
 17913  01359C                     l6661:
 17914                           
 17915                           ;stkvar	_grs @ sp[(-13)+0]
 17916  01359C  90D8               	bcf	status,0,c
 17917  01359E  0EF3               	movlw	-13
 17918  0135A0  36E3               	rlcf	plusw1,f,c
 17919  0135A2  0EF4               	movlw	-12
 17920  0135A4  36E3               	rlcf	plusw1,f,c
 17921  0135A6  0EF5               	movlw	-11
 17922  0135A8  36E3               	rlcf	plusw1,f,c
 17923  0135AA  0EF6               	movlw	-10
 17924  0135AC  36E3               	rlcf	plusw1,f,c
 17925                           
 17926                           ;stkvar	_new_exp @ sp[(-13)+8]
 17927  0135AE  50E1               	movf	fsr1l,w,c
 17928  0135B0  0FFB               	addlw	-5
 17929  0135B2  6ED9               	movwf	fsr2l,c
 17930  0135B4  50E2               	movf	fsr1h,w,c
 17931  0135B6  6EDA               	movwf	fsr2h,c
 17932  0135B8  0EFF               	movlw	255
 17933  0135BA  22DA               	addwfc	fsr2h,f,c
 17934  0135BC  06DE               	decf	postinc2,f,c
 17935  0135BE  0E00               	movlw	0
 17936  0135C0  5ADD               	subwfb	postdec2,f,c
 17937  0135C2                     l6665:
 17938                           
 17939                           ;stkvar	_b @ sp[(-13)+-4]
 17940  0135C2  0EF1               	movlw	-15
 17941  0135C4  AEE3               	btfss	plusw1,7,c
 17942  0135C6  D7DC               	goto	l6655
 17943                           
 17944                           ;stkvar	_aexp @ sp[(-13)+10]
 17945  0135C8  0EFD               	movlw	-3
 17946  0135CA  6AE3               	clrf	plusw1,c
 17947                           
 17948                           ;stkvar	_grs @ sp[(-13)+0]
 17949  0135CC  0EF6               	movlw	-10
 17950  0135CE  AEE3               	btfss	plusw1,7,c
 17951  0135D0  D020               	goto	l6679
 17952                           
 17953                           ;stkvar	_grs @ sp[(-13)+0]
 17954  0135D2  50E1               	movf	fsr1l,w,c
 17955  0135D4  0FF3               	addlw	-13
 17956  0135D6  6ED9               	movwf	fsr2l,c
 17957  0135D8  50E2               	movf	fsr1h,w,c
 17958  0135DA  6EDA               	movwf	fsr2h,c
 17959  0135DC  0EFF               	movlw	255
 17960  0135DE  22DA               	addwfc	fsr2h,f,c
 17961  0135E0  0EFF               	movlw	255
 17962  0135E2  14DE               	andwf	postinc2,w,c
 17963  0135E4  6E3D               	movwf	(btemp+8)^0,c
 17964  0135E6  0EFF               	movlw	255
 17965  0135E8  14DE               	andwf	postinc2,w,c
 17966  0135EA  6E3E               	movwf	(btemp+9)^0,c
 17967  0135EC  0EFF               	movlw	255
 17968  0135EE  14DE               	andwf	postinc2,w,c
 17969  0135F0  6E3F               	movwf	(btemp+10)^0,c
 17970  0135F2  0E7F               	movlw	127
 17971  0135F4  14DE               	andwf	postinc2,w,c
 17972  0135F6  6E40               	movwf	(btemp+11)^0,c
 17973  0135F8  503D               	movf	(btemp+8)^0,w,c
 17974  0135FA  103E               	iorwf	(btemp+9)^0,w,c
 17975  0135FC  103F               	iorwf	(btemp+10)^0,w,c
 17976  0135FE  1040               	iorwf	(btemp+11)^0,w,c
 17977  013600  B4D8               	btfsc	status,2,c
 17978  013602  D004               	goto	l6675
 17979  013604                     u5810:
 17980                           
 17981                           ;stkvar	_aexp @ sp[(-13)+10]
 17982  013604  0EFD               	movlw	-3
 17983  013606  6AE3               	clrf	plusw1,c
 17984  013608  2AE3               	incf	plusw1,f,c
 17985  01360A  D003               	goto	l6679
 17986  01360C                     l6675:
 17987                           
 17988                           ;stkvar	_b @ sp[(-13)+-4]
 17989  01360C  0EEF               	movlw	-17
 17990  01360E  B0E3               	btfsc	plusw1,0,c
 17991  013610  D7F9               	goto	u5810
 17992  013612                     l6679:
 17993                           
 17994                           ;stkvar	_aexp @ sp[(-13)+10]
 17995  013612  0EFD               	movlw	-3
 17996  013614  50E3               	movf	plusw1,w,c
 17997  013616  B4D8               	btfsc	status,2,c
 17998  013618  D036               	goto	l6689
 17999                           
 18000                           ;stkvar	_b @ sp[(-13)+-4]
 18001  01361A  50E1               	movf	fsr1l,w,c
 18002  01361C  0FEF               	addlw	-17
 18003  01361E  6ED9               	movwf	fsr2l,c
 18004  013620  50E2               	movf	fsr1h,w,c
 18005  013622  6EDA               	movwf	fsr2h,c
 18006  013624  0EFF               	movlw	255
 18007  013626  22DA               	addwfc	fsr2h,f,c
 18008  013628  2ADE               	incf	postinc2,f,c
 18009  01362A  0E00               	movlw	0
 18010  01362C  22DE               	addwfc	postinc2,f,c
 18011  01362E  22DE               	addwfc	postinc2,f,c
 18012  013630  22DE               	addwfc	postinc2,f,c
 18013                           
 18014                           ;stkvar	_b @ sp[(-13)+-4]
 18015  013632  0EF2               	movlw	-14
 18016  013634  A0E3               	btfss	plusw1,0,c
 18017  013636  D027               	goto	l6689
 18018  013638  0E01               	movlw	1
 18019  01363A  6E40               	movwf	(btemp+11)^0,c
 18020                           
 18021                           ;stkvar	_b @ sp[(-13)+-4]
 18022  01363C  50E1               	movf	fsr1l,w,c
 18023  01363E  0FEF               	addlw	-17
 18024  013640  6ED9               	movwf	fsr2l,c
 18025  013642  50E2               	movf	fsr1h,w,c
 18026  013644  6EDA               	movwf	fsr2h,c
 18027  013646  0EFF               	movlw	255
 18028  013648  22DA               	addwfc	fsr2h,f,c
 18029  01364A  2840               	incf	(btemp+11)^0,w,c
 18030  01364C  52DE               	movf	postinc2,f,c
 18031  01364E  D008               	goto	u5850
 18032  013650                     u5855:
 18033  013650  52DE               	movf	postinc2,f,c
 18034  013652  90D8               	bcf	status,0,c
 18035  013654  BEDC               	btfsc	preinc2,7,c
 18036  013656  80D8               	bsf	status,0,c
 18037  013658  32DD               	rrcf	postdec2,f,c
 18038  01365A  32DD               	rrcf	postdec2,f,c
 18039  01365C  32DD               	rrcf	postdec2,f,c
 18040  01365E  32DE               	rrcf	postinc2,f,c
 18041  013660                     u5850:
 18042  013660  2EE8               	decfsz	wreg,f,c
 18043  013662  D7F6               	goto	u5855
 18044                           
 18045                           ;stkvar	_new_exp @ sp[(-13)+8]
 18046  013664  0EFB               	movlw	-5
 18047  013666  50E3               	movf	plusw1,w,c
 18048  013668  0F01               	addlw	1
 18049  01366A  6E35               	movwf	btemp^0,c
 18050  01366C  0EFB               	movlw	-5
 18051  01366E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18052  013674  6A35               	clrf	btemp^0,c
 18053  013676  0EFC               	movlw	-4
 18054  013678  50E3               	movf	plusw1,w,c
 18055  01367A  2035               	addwfc	btemp^0,w,c
 18056  01367C  6E35               	movwf	btemp^0,c
 18057  01367E  0EFC               	movlw	-4
 18058  013680  0060  F0D7  FFE3   	movff	btemp,plusw1
 18059  013686                     l6689:
 18060                           
 18061                           ;stkvar	_new_exp @ sp[(-13)+8]
 18062  013686  0EFC               	movlw	-4
 18063  013688  BEE3               	btfsc	plusw1,7,c
 18064  01368A  D01B               	goto	l6695
 18065  01368C  0EFC               	movlw	-4
 18066  01368E  50E3               	movf	plusw1,w,c
 18067  013690  E104               	bnz	u5860
 18068  013692  0EFB               	movlw	-5
 18069  013694  28E3               	incf	plusw1,w,c
 18070  013696  A0D8               	btfss	status,0,c
 18071  013698  D014               	goto	l6695
 18072  01369A                     u5860:
 18073  01369A  0EFF               	movlw	255
 18074  01369C  6E3F               	movwf	(btemp+10)^0,c
 18075  01369E  0E00               	movlw	0
 18076  0136A0  6E40               	movwf	(btemp+11)^0,c
 18077                           
 18078                           ;stkvar	_new_exp @ sp[(-13)+8]
 18079  0136A2  0EFB               	movlw	-5
 18080  0136A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18081  0136AA  0EFC               	movlw	-4
 18082  0136AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 18083                           
 18084                           ;stkvar	_b @ sp[(-13)+-4]
 18085  0136B2  0EEF               	movlw	-17
 18086  0136B4  6AE3               	clrf	plusw1,c
 18087  0136B6  0EF0               	movlw	-16
 18088  0136B8  6AE3               	clrf	plusw1,c
 18089  0136BA  0EF1               	movlw	-15
 18090  0136BC  6AE3               	clrf	plusw1,c
 18091  0136BE  0EF2               	movlw	-14
 18092  0136C0  6AE3               	clrf	plusw1,c
 18093  0136C2                     l6695:
 18094                           
 18095                           ;stkvar	_new_exp @ sp[(-13)+8]
 18096  0136C2  0EFC               	movlw	-4
 18097  0136C4  BEE3               	btfsc	plusw1,7,c
 18098  0136C6  D007               	goto	u5870
 18099  0136C8  0EFC               	movlw	-4
 18100  0136CA  50E3               	movf	plusw1,w,c
 18101  0136CC  E112               	bnz	l6701
 18102  0136CE  0EFB               	movlw	-5
 18103  0136D0  04E3               	decf	plusw1,w,c
 18104  0136D2  B0D8               	btfsc	status,0,c
 18105  0136D4  D00E               	goto	l6701
 18106  0136D6                     u5870:
 18107                           
 18108                           ;stkvar	_new_exp @ sp[(-13)+8]
 18109  0136D6  0EFB               	movlw	-5
 18110  0136D8  6AE3               	clrf	plusw1,c
 18111  0136DA  0EFC               	movlw	-4
 18112  0136DC  6AE3               	clrf	plusw1,c
 18113                           
 18114                           ;stkvar	_b @ sp[(-13)+-4]
 18115  0136DE  0EEF               	movlw	-17
 18116  0136E0  6AE3               	clrf	plusw1,c
 18117  0136E2  0EF0               	movlw	-16
 18118  0136E4  6AE3               	clrf	plusw1,c
 18119  0136E6  0EF1               	movlw	-15
 18120  0136E8  6AE3               	clrf	plusw1,c
 18121  0136EA  0EF2               	movlw	-14
 18122  0136EC  6AE3               	clrf	plusw1,c
 18123                           
 18124                           ;stkvar	_sign @ sp[(-13)+12]
 18125  0136EE  0EFF               	movlw	-1
 18126  0136F0  6AE3               	clrf	plusw1,c
 18127  0136F2                     l6701:
 18128                           
 18129                           ;stkvar	_new_exp @ sp[(-13)+8]
 18130                           ;stkvar	_bexp @ sp[(-13)+11]
 18131  0136F2  0EFB               	movlw	-5
 18132  0136F4  006F FF8C  F035    	movff	plusw1,btemp
 18133  0136FA  0EFE               	movlw	-2
 18134  0136FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 18135                           
 18136                           ;stkvar	_bexp @ sp[(-13)+11]
 18137  013702  0EFE               	movlw	-2
 18138  013704  A0E3               	btfss	plusw1,0,c
 18139  013706  D009               	goto	l6707
 18140                           
 18141                           ;stkvar	_b @ sp[(-13)+-4]
 18142  013708  0EF1               	movlw	241
 18143  01370A  24E1               	addwf	fsr1l,w,c
 18144  01370C  6ED9               	movwf	fsr2l,c
 18145  01370E  0EFF               	movlw	255
 18146  013710  20E2               	addwfc	fsr1h,w,c
 18147  013712  6EDA               	movwf	fsr2h,c
 18148  013714  0E00               	movlw	0
 18149  013716  8EDB               	bsf	plusw2,7,c
 18150  013718  D008               	goto	l6709
 18151  01371A                     l6707:
 18152                           
 18153                           ;stkvar	_b @ sp[(-13)+-4]
 18154  01371A  0EF1               	movlw	241
 18155  01371C  24E1               	addwf	fsr1l,w,c
 18156  01371E  6ED9               	movwf	fsr2l,c
 18157  013720  0EFF               	movlw	255
 18158  013722  20E2               	addwfc	fsr1h,w,c
 18159  013724  6EDA               	movwf	fsr2h,c
 18160  013726  0E7F               	movlw	127
 18161  013728  16DF               	andwf	indf2,f,c
 18162  01372A                     l6709:
 18163                           
 18164                           ;stkvar	_b @ sp[(-13)+-4]
 18165  01372A  0EF2               	movlw	242
 18166  01372C  24E1               	addwf	fsr1l,w,c
 18167  01372E  6ED9               	movwf	fsr2l,c
 18168  013730  0EFF               	movlw	255
 18169  013732  20E2               	addwfc	fsr1h,w,c
 18170  013734  6EDA               	movwf	fsr2h,c
 18171                           
 18172                           ;stkvar	_bexp @ sp[(-13)+11]
 18173  013736  0EFE               	movlw	-2
 18174  013738  006F FF8C  F040    	movff	plusw1,btemp+11
 18175  01373E  90D8               	bcf	status,0,c
 18176  013740  3040               	rrcf	(btemp+11)^0,w,c
 18177  013742  6EDF               	movwf	indf2,c
 18178  013744  D644               	goto	l6607
 18179  013746                     l2590:
 18180                           
 18181                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18182  013746  0EEB               	movlw	235
 18183  013748  26E1               	addwf	fsr1l,f,c
 18184  01374A  0EFF               	movlw	255
 18185  01374C  22E2               	addwfc	fsr1h,f,c
 18186  01374E  0012               	return		;funcret
 18187  013750                     __end_of___fldiv:
 18188                           	opt callstack 0
 18189                           
 18190 ;; *************** function ___awmod *****************
 18191 ;; Defined at:
 18192 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18193 ;; Parameters:    Size  Location     Type
 18194 ;;  dividend        2  [STACK] int 
 18195 ;;  divisor         2  [STACK] int 
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;  sign            1  [STACK] unsigned char 
 18198 ;;  counter         1  [STACK] unsigned char 
 18199 ;; Return value:  Size  Location     Type
 18200 ;;                  2  [STACK] int 
 18201 ;; Registers used:
 18202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18203 ;; Tracked objects:
 18204 ;;		On entry : 0/4
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18212 ;;Total ram usage:        0 bytes
 18213 ;; Hardware stack levels used:    1
 18214 ;; Hardware stack levels required when called:    6
 18215 ;; This function calls:
 18216 ;;		Nothing
 18217 ;; This function is called by:
 18218 ;;		_efgtoa
 18219 ;; This function uses a reentrant model
 18220 ;;
 18221                           
 18222                           	psect	text58
 18223  016DD4                     __ptext58:
 18224                           	opt callstack 0
 18225  016DD4                     ___awmod:
 18226                           	opt callstack 0
 18227                           
 18228                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18229  016DD4  52E6               	movf	postinc1,f,c
 18230  016DD6  52E6               	movf	postinc1,f,c
 18231                           
 18232                           ;stkvar	_sign @ sp[(-2)+0]
 18233                           
 18234                           ;incstack = 0
 18235  016DD8  0EFE               	movlw	-2
 18236  016DDA  6AE3               	clrf	plusw1,c
 18237                           
 18238                           ;stkvar	_dividend @ sp[(-2)+-2]
 18239  016DDC  0EFD               	movlw	-3
 18240  016DDE  AEE3               	btfss	plusw1,7,c
 18241  016DE0  D009               	goto	l6933
 18242                           
 18243                           ;stkvar	_dividend @ sp[(-2)+-2]
 18244                           ;stkvar	_dividend @ sp[(-2)+-2]
 18245  016DE2  0EFC               	movlw	-4
 18246  016DE4  6CE3               	negf	plusw1,c
 18247  016DE6  0EFD               	movlw	-3
 18248  016DE8  1EE3               	comf	plusw1,f,c
 18249  016DEA  B0D8               	btfsc	status,0,c
 18250  016DEC  2AE3               	incf	plusw1,f,c
 18251                           
 18252                           ;stkvar	_sign @ sp[(-2)+0]
 18253  016DEE  0EFE               	movlw	-2
 18254  016DF0  6AE3               	clrf	plusw1,c
 18255  016DF2  2AE3               	incf	plusw1,f,c
 18256  016DF4                     l6933:
 18257                           
 18258                           ;stkvar	_divisor @ sp[(-2)+-4]
 18259  016DF4  0EFB               	movlw	-5
 18260  016DF6  AEE3               	btfss	plusw1,7,c
 18261  016DF8  D006               	goto	l6937
 18262                           
 18263                           ;stkvar	_divisor @ sp[(-2)+-4]
 18264                           ;stkvar	_divisor @ sp[(-2)+-4]
 18265  016DFA  0EFA               	movlw	-6
 18266  016DFC  6CE3               	negf	plusw1,c
 18267  016DFE  0EFB               	movlw	-5
 18268  016E00  1EE3               	comf	plusw1,f,c
 18269  016E02  B0D8               	btfsc	status,0,c
 18270  016E04  2AE3               	incf	plusw1,f,c
 18271  016E06                     l6937:
 18272                           
 18273                           ;stkvar	_divisor @ sp[(-2)+-4]
 18274  016E06  0EFA               	movlw	-6
 18275  016E08  006F FF8C  F035    	movff	plusw1,btemp
 18276  016E0E  0EFB               	movlw	-5
 18277  016E10  50E3               	movf	plusw1,w,c
 18278  016E12  1035               	iorwf	btemp^0,w,c
 18279  016E14  B4D8               	btfsc	status,2,c
 18280  016E16  D053               	goto	u6230
 18281                           
 18282                           ;stkvar	_counter @ sp[(-2)+1]
 18283  016E18  0EFF               	movlw	-1
 18284  016E1A  6AE3               	clrf	plusw1,c
 18285  016E1C  D012               	goto	L17
 18286  016E1E                     l6941:
 18287                           
 18288                           ;stkvar	_divisor @ sp[(-2)+-4]
 18289  016E1E  0EFA               	movlw	-6
 18290  016E20  50E3               	movf	plusw1,w,c
 18291  016E22  90D8               	bcf	status,0,c
 18292  016E24  34E8               	rlcf	wreg,w,c
 18293  016E26  6E35               	movwf	btemp^0,c
 18294  016E28  0EFA               	movlw	-6
 18295  016E2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18296  016E30  0EFB               	movlw	-5
 18297  016E32  50E3               	movf	plusw1,w,c
 18298  016E34  34E8               	rlcf	wreg,w,c
 18299  016E36  6E35               	movwf	btemp^0,c
 18300  016E38  0EFB               	movlw	-5
 18301  016E3A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18302                           
 18303                           ;stkvar	_counter @ sp[(-2)+1]
 18304  016E40  0EFF               	movlw	-1
 18305  016E42                     L17:
 18306  016E42  2AE3               	incf	plusw1,f,c
 18307                           
 18308                           ;stkvar	_divisor @ sp[(-2)+-4]
 18309  016E44  0EFB               	movlw	-5
 18310  016E46  AEE3               	btfss	plusw1,7,c
 18311  016E48  D7EA               	goto	l6941
 18312  016E4A                     u6210:
 18313                           
 18314                           ;stkvar	_divisor @ sp[(-2)+-4]
 18315  016E4A  0EFA               	movlw	-6
 18316  016E4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 18317  016E52  0EFB               	movlw	-5
 18318  016E54  006F FF8C  F040    	movff	plusw1,btemp+11
 18319                           
 18320                           ;stkvar	_dividend @ sp[(-2)+-2]
 18321  016E5A  0EFC               	movlw	-4
 18322  016E5C  006F FF8C  F03D    	movff	plusw1,btemp+8
 18323  016E62  0EFD               	movlw	-3
 18324  016E64  006F FF8C  F03E    	movff	plusw1,btemp+9
 18325  016E6A  503F               	movf	(btemp+10)^0,w,c
 18326  016E6C  5C3D               	subwf	(btemp+8)^0,w,c
 18327  016E6E  5040               	movf	(btemp+11)^0,w,c
 18328  016E70  583E               	subwfb	(btemp+9)^0,w,c
 18329  016E72  A0D8               	btfss	status,0,c
 18330  016E74  D014               	goto	l6951
 18331                           
 18332                           ;stkvar	_divisor @ sp[(-2)+-4]
 18333                           ;stkvar	_dividend @ sp[(-2)+-2]
 18334  016E76  0EFC               	movlw	-4
 18335  016E78  50E3               	movf	plusw1,w,c
 18336  016E7A  6E35               	movwf	btemp^0,c
 18337  016E7C  0EFA               	movlw	-6
 18338  016E7E  50E3               	movf	plusw1,w,c
 18339  016E80  5E35               	subwf	btemp^0,f,c
 18340  016E82  0EFC               	movlw	-4
 18341  016E84  0060  F0D7  FFE3   	movff	btemp,plusw1
 18342  016E8A  0EFD               	movlw	-3
 18343  016E8C  50E3               	movf	plusw1,w,c
 18344  016E8E  6E35               	movwf	btemp^0,c
 18345  016E90  0EFB               	movlw	-5
 18346  016E92  50E3               	movf	plusw1,w,c
 18347  016E94  5A35               	subwfb	btemp^0,f,c
 18348  016E96  0EFD               	movlw	-3
 18349  016E98  0060  F0D7  FFE3   	movff	btemp,plusw1
 18350  016E9E                     l6951:
 18351                           
 18352                           ;stkvar	_divisor @ sp[(-2)+-4]
 18353  016E9E  90D8               	bcf	status,0,c
 18354  016EA0  0EFB               	movlw	-5
 18355  016EA2  32E3               	rrcf	plusw1,f,c
 18356  016EA4  0EFA               	movlw	-6
 18357  016EA6  32E3               	rrcf	plusw1,f,c
 18358                           
 18359                           ;stkvar	_counter @ sp[(-2)+1]
 18360  016EA8  0EFF               	movlw	-1
 18361  016EAA  50E3               	movf	plusw1,w,c
 18362  016EAC  6E35               	movwf	btemp^0,c
 18363  016EAE  0E01               	movlw	1
 18364  016EB0  5E35               	subwf	btemp^0,f,c
 18365  016EB2  0EFF               	movlw	-1
 18366  016EB4  0060  F0D7  FFE3   	movff	btemp,plusw1
 18367  016EBA  A4D8               	btfss	status,2,c
 18368  016EBC  D7C6               	goto	u6210
 18369  016EBE                     u6230:
 18370                           
 18371                           ;stkvar	_sign @ sp[(-2)+0]
 18372  016EBE  0EFE               	movlw	-2
 18373  016EC0  50E3               	movf	plusw1,w,c
 18374  016EC2  B4D8               	btfsc	status,2,c
 18375  016EC4  D006               	goto	l6959
 18376                           
 18377                           ;stkvar	_dividend @ sp[(-2)+-2]
 18378                           ;stkvar	_dividend @ sp[(-2)+-2]
 18379  016EC6  0EFC               	movlw	-4
 18380  016EC8  6CE3               	negf	plusw1,c
 18381  016ECA  0EFD               	movlw	-3
 18382  016ECC  1EE3               	comf	plusw1,f,c
 18383  016ECE  B0D8               	btfsc	status,0,c
 18384  016ED0  2AE3               	incf	plusw1,f,c
 18385  016ED2                     l6959:
 18386                           
 18387                           ;stkvar	_dividend @ sp[(-2)+-2]
 18388  016ED2  0EFC               	movlw	-4
 18389  016ED4  006F FF8C  F035    	movff	plusw1,btemp
 18390  016EDA  0EFD               	movlw	-3
 18391  016EDC  006F FF8C  F036    	movff	plusw1,btemp+1
 18392                           
 18393                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18394  016EE2  0EFA               	movlw	250
 18395  016EE4  26E1               	addwf	fsr1l,f,c
 18396  016EE6  0EFF               	movlw	255
 18397  016EE8  22E2               	addwfc	fsr1h,f,c
 18398  016EEA  0012               	return		;funcret
 18399  016EEC                     __end_of___awmod:
 18400                           	opt callstack 0
 18401                           
 18402 ;; *************** function ___awdiv *****************
 18403 ;; Defined at:
 18404 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18405 ;; Parameters:    Size  Location     Type
 18406 ;;  dividend        2  [STACK] int 
 18407 ;;  divisor         2  [STACK] int 
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;  quotient        2  [STACK] int 
 18410 ;;  sign            1  [STACK] unsigned char 
 18411 ;;  counter         1  [STACK] unsigned char 
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  2  [STACK] int 
 18414 ;; Registers used:
 18415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/4
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:    6
 18428 ;; This function calls:
 18429 ;;		Nothing
 18430 ;; This function is called by:
 18431 ;;		_efgtoa
 18432 ;; This function uses a reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text59
 18436  0168F4                     __ptext59:
 18437                           	opt callstack 0
 18438  0168F4                     ___awdiv:
 18439                           	opt callstack 0
 18440                           
 18441                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18442  0168F4  52E6               	movf	postinc1,f,c
 18443  0168F6  52E6               	movf	postinc1,f,c
 18444  0168F8  52E6               	movf	postinc1,f,c
 18445  0168FA  52E6               	movf	postinc1,f,c
 18446                           
 18447                           ;stkvar	_sign @ sp[(-4)+2]
 18448                           
 18449                           ;incstack = 0
 18450  0168FC  0EFE               	movlw	-2
 18451  0168FE  6AE3               	clrf	plusw1,c
 18452                           
 18453                           ;stkvar	_divisor @ sp[(-4)+-4]
 18454  016900  0EF9               	movlw	-7
 18455  016902  AEE3               	btfss	plusw1,7,c
 18456  016904  D009               	goto	l6887
 18457                           
 18458                           ;stkvar	_divisor @ sp[(-4)+-4]
 18459                           ;stkvar	_divisor @ sp[(-4)+-4]
 18460  016906  0EF8               	movlw	-8
 18461  016908  6CE3               	negf	plusw1,c
 18462  01690A  0EF9               	movlw	-7
 18463  01690C  1EE3               	comf	plusw1,f,c
 18464  01690E  B0D8               	btfsc	status,0,c
 18465  016910  2AE3               	incf	plusw1,f,c
 18466                           
 18467                           ;stkvar	_sign @ sp[(-4)+2]
 18468  016912  0EFE               	movlw	-2
 18469  016914  6AE3               	clrf	plusw1,c
 18470  016916  2AE3               	incf	plusw1,f,c
 18471  016918                     l6887:
 18472                           
 18473                           ;stkvar	_dividend @ sp[(-4)+-2]
 18474  016918  0EFB               	movlw	-5
 18475  01691A  AEE3               	btfss	plusw1,7,c
 18476  01691C  D008               	goto	l6893
 18477                           
 18478                           ;stkvar	_dividend @ sp[(-4)+-2]
 18479                           ;stkvar	_dividend @ sp[(-4)+-2]
 18480  01691E  0EFA               	movlw	-6
 18481  016920  6CE3               	negf	plusw1,c
 18482  016922  0EFB               	movlw	-5
 18483  016924  1EE3               	comf	plusw1,f,c
 18484  016926  B0D8               	btfsc	status,0,c
 18485  016928  2AE3               	incf	plusw1,f,c
 18486                           
 18487                           ;stkvar	_sign @ sp[(-4)+2]
 18488  01692A  0EFE               	movlw	-2
 18489  01692C  70E3               	btg	plusw1,0,c
 18490  01692E                     l6893:
 18491                           
 18492                           ;stkvar	_quotient @ sp[(-4)+0]
 18493  01692E  0EFC               	movlw	-4
 18494  016930  6AE3               	clrf	plusw1,c
 18495  016932  0EFD               	movlw	-3
 18496  016934  6AE3               	clrf	plusw1,c
 18497                           
 18498                           ;stkvar	_divisor @ sp[(-4)+-4]
 18499  016936  0EF8               	movlw	-8
 18500  016938  006F FF8C  F035    	movff	plusw1,btemp
 18501  01693E  0EF9               	movlw	-7
 18502  016940  50E3               	movf	plusw1,w,c
 18503  016942  1035               	iorwf	btemp^0,w,c
 18504  016944  B4D8               	btfsc	status,2,c
 18505  016946  D066               	goto	u6160
 18506                           
 18507                           ;stkvar	_counter @ sp[(-4)+3]
 18508  016948  0EFF               	movlw	-1
 18509  01694A  6AE3               	clrf	plusw1,c
 18510  01694C  D012               	goto	L18
 18511  01694E                     l6899:
 18512                           
 18513                           ;stkvar	_divisor @ sp[(-4)+-4]
 18514  01694E  0EF8               	movlw	-8
 18515  016950  50E3               	movf	plusw1,w,c
 18516  016952  90D8               	bcf	status,0,c
 18517  016954  34E8               	rlcf	wreg,w,c
 18518  016956  6E35               	movwf	btemp^0,c
 18519  016958  0EF8               	movlw	-8
 18520  01695A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18521  016960  0EF9               	movlw	-7
 18522  016962  50E3               	movf	plusw1,w,c
 18523  016964  34E8               	rlcf	wreg,w,c
 18524  016966  6E35               	movwf	btemp^0,c
 18525  016968  0EF9               	movlw	-7
 18526  01696A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18527                           
 18528                           ;stkvar	_counter @ sp[(-4)+3]
 18529  016970  0EFF               	movlw	-1
 18530  016972                     L18:
 18531  016972  2AE3               	incf	plusw1,f,c
 18532                           
 18533                           ;stkvar	_divisor @ sp[(-4)+-4]
 18534  016974  0EF9               	movlw	-7
 18535  016976  AEE3               	btfss	plusw1,7,c
 18536  016978  D7EA               	goto	l6899
 18537  01697A                     u6140:
 18538                           
 18539                           ;stkvar	_quotient @ sp[(-4)+0]
 18540  01697A  0EFC               	movlw	-4
 18541  01697C  50E3               	movf	plusw1,w,c
 18542  01697E  90D8               	bcf	status,0,c
 18543  016980  34E8               	rlcf	wreg,w,c
 18544  016982  6E35               	movwf	btemp^0,c
 18545  016984  0EFC               	movlw	-4
 18546  016986  0060  F0D7  FFE3   	movff	btemp,plusw1
 18547  01698C  0EFD               	movlw	-3
 18548  01698E  50E3               	movf	plusw1,w,c
 18549  016990  34E8               	rlcf	wreg,w,c
 18550  016992  6E35               	movwf	btemp^0,c
 18551  016994  0EFD               	movlw	-3
 18552  016996  0060  F0D7  FFE3   	movff	btemp,plusw1
 18553                           
 18554                           ;stkvar	_divisor @ sp[(-4)+-4]
 18555  01699C  0EF8               	movlw	-8
 18556  01699E  006F FF8C  F03F    	movff	plusw1,btemp+10
 18557  0169A4  0EF9               	movlw	-7
 18558  0169A6  006F FF8C  F040    	movff	plusw1,btemp+11
 18559                           
 18560                           ;stkvar	_dividend @ sp[(-4)+-2]
 18561  0169AC  0EFA               	movlw	-6
 18562  0169AE  006F FF8C  F03D    	movff	plusw1,btemp+8
 18563  0169B4  0EFB               	movlw	-5
 18564  0169B6  006F FF8C  F03E    	movff	plusw1,btemp+9
 18565  0169BC  503F               	movf	(btemp+10)^0,w,c
 18566  0169BE  5C3D               	subwf	(btemp+8)^0,w,c
 18567  0169C0  5040               	movf	(btemp+11)^0,w,c
 18568  0169C2  583E               	subwfb	(btemp+9)^0,w,c
 18569  0169C4  A0D8               	btfss	status,0,c
 18570  0169C6  D016               	goto	l6913
 18571                           
 18572                           ;stkvar	_divisor @ sp[(-4)+-4]
 18573                           ;stkvar	_dividend @ sp[(-4)+-2]
 18574  0169C8  0EFA               	movlw	-6
 18575  0169CA  50E3               	movf	plusw1,w,c
 18576  0169CC  6E35               	movwf	btemp^0,c
 18577  0169CE  0EF8               	movlw	-8
 18578  0169D0  50E3               	movf	plusw1,w,c
 18579  0169D2  5E35               	subwf	btemp^0,f,c
 18580  0169D4  0EFA               	movlw	-6
 18581  0169D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18582  0169DC  0EFB               	movlw	-5
 18583  0169DE  50E3               	movf	plusw1,w,c
 18584  0169E0  6E35               	movwf	btemp^0,c
 18585  0169E2  0EF9               	movlw	-7
 18586  0169E4  50E3               	movf	plusw1,w,c
 18587  0169E6  5A35               	subwfb	btemp^0,f,c
 18588  0169E8  0EFB               	movlw	-5
 18589  0169EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18590                           
 18591                           ;stkvar	_quotient @ sp[(-4)+0]
 18592  0169F0  0EFC               	movlw	-4
 18593  0169F2  80E3               	bsf	plusw1,0,c
 18594  0169F4                     l6913:
 18595                           
 18596                           ;stkvar	_divisor @ sp[(-4)+-4]
 18597  0169F4  90D8               	bcf	status,0,c
 18598  0169F6  0EF9               	movlw	-7
 18599  0169F8  32E3               	rrcf	plusw1,f,c
 18600  0169FA  0EF8               	movlw	-8
 18601  0169FC  32E3               	rrcf	plusw1,f,c
 18602                           
 18603                           ;stkvar	_counter @ sp[(-4)+3]
 18604  0169FE  0EFF               	movlw	-1
 18605  016A00  50E3               	movf	plusw1,w,c
 18606  016A02  6E35               	movwf	btemp^0,c
 18607  016A04  0E01               	movlw	1
 18608  016A06  5E35               	subwf	btemp^0,f,c
 18609  016A08  0EFF               	movlw	-1
 18610  016A0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18611  016A10  A4D8               	btfss	status,2,c
 18612  016A12  D7B3               	goto	u6140
 18613  016A14                     u6160:
 18614                           
 18615                           ;stkvar	_sign @ sp[(-4)+2]
 18616  016A14  0EFE               	movlw	-2
 18617  016A16  50E3               	movf	plusw1,w,c
 18618  016A18  B4D8               	btfsc	status,2,c
 18619  016A1A  D006               	goto	l6921
 18620                           
 18621                           ;stkvar	_quotient @ sp[(-4)+0]
 18622                           ;stkvar	_quotient @ sp[(-4)+0]
 18623  016A1C  0EFC               	movlw	-4
 18624  016A1E  6CE3               	negf	plusw1,c
 18625  016A20  0EFD               	movlw	-3
 18626  016A22  1EE3               	comf	plusw1,f,c
 18627  016A24  B0D8               	btfsc	status,0,c
 18628  016A26  2AE3               	incf	plusw1,f,c
 18629  016A28                     l6921:
 18630                           
 18631                           ;stkvar	_quotient @ sp[(-4)+0]
 18632  016A28  0EFC               	movlw	-4
 18633  016A2A  006F FF8C  F035    	movff	plusw1,btemp
 18634  016A30  0EFD               	movlw	-3
 18635  016A32  006F FF8C  F036    	movff	plusw1,btemp+1
 18636                           
 18637                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18638  016A38  0EF8               	movlw	248
 18639  016A3A  26E1               	addwf	fsr1l,f,c
 18640  016A3C  0EFF               	movlw	255
 18641  016A3E  22E2               	addwfc	fsr1h,f,c
 18642  016A40  0012               	return		;funcret
 18643  016A42                     __end_of___awdiv:
 18644                           	opt callstack 0
 18645                           
 18646 ;; *************** function _dtoa *****************
 18647 ;; Defined at:
 18648 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18649 ;; Parameters:    Size  Location     Type
 18650 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18651 ;;		 -> f(6), NULL(0), 
 18652 ;;  d               8  [STACK] long long 
 18653 ;; Auto vars:     Size  Location     Type
 18654 ;;  n               8  [STACK] long long 
 18655 ;;  i               2  [STACK] int 
 18656 ;;  s               2  [STACK] int 
 18657 ;;  w               2  [STACK] int 
 18658 ;;  p               2  [STACK] int 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  2  [STACK] int 
 18661 ;; Registers used:
 18662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/4
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18672 ;;Total ram usage:        0 bytes
 18673 ;; Hardware stack levels used:    1
 18674 ;; Hardware stack levels required when called:   11
 18675 ;; This function calls:
 18676 ;;		___aodiv
 18677 ;;		___aomod
 18678 ;;		_abs
 18679 ;;		_pad
 18680 ;; This function is called by:
 18681 ;;		_vfpfcnvrt
 18682 ;; This function uses a reentrant model
 18683 ;;
 18684                           
 18685                           	psect	text60
 18686  013750                     __ptext60:
 18687                           	opt callstack 0
 18688  013750                     _dtoa:
 18689                           	opt callstack 0
 18690                           
 18691                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18692  013750  0E12               	movlw	18
 18693  013752  26E1               	addwf	fsr1l,f,c
 18694  013754  0E00               	movlw	0
 18695  013756  22E2               	addwfc	fsr1h,f,c
 18696                           
 18697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18698                           ;stkvar	_d @ sp[(-18)+-10]
 18699                           
 18700                           ;incstack = 0
 18701  013758  0EE4               	movlw	228
 18702  01375A  24E1               	addwf	fsr1l,w,c
 18703  01375C  6ED9               	movwf	fsr2l,c
 18704  01375E  0EFF               	movlw	255
 18705  013760  20E2               	addwfc	fsr1h,w,c
 18706  013762  6EDA               	movwf	fsr2h,c
 18707                           
 18708                           ;stkvar	_n @ sp[(-18)+2]
 18709  013764  0E08               	movlw	8
 18710  013766  6E35               	movwf	btemp^0,c
 18711  013768  0EF0               	movlw	-16
 18712  01376A                     us913999:
 18713  01376A  006F FF7B FFE3     	movff	postinc2,plusw1
 18714  013770  28E8               	incf	wreg,w,c
 18715  013772  2E35               	decfsz	btemp^0,f,c
 18716  013774  D7FA               	bra	us913999
 18717                           
 18718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18719                           ;stkvar	_n @ sp[(-18)+2]
 18720  013776  0EF7               	movlw	-9
 18721  013778  AEE3               	btfss	plusw1,7,c
 18722  01377A  D002               	goto	u9140
 18723  01377C  0E01               	movlw	1
 18724  01377E  D001               	goto	u9150
 18725  013780                     u9140:
 18726  013780  0E00               	movlw	0
 18727  013782                     u9150:
 18728  013782  6E3F               	movwf	(btemp+10)^0,c
 18729  013784  6A40               	clrf	(btemp+11)^0,c
 18730                           
 18731                           ;stkvar	_s @ sp[(-18)+12]
 18732  013786  0EFA               	movlw	-6
 18733  013788  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18734  01378E  0EFB               	movlw	-5
 18735  013790  0060  F103  FFE3   	movff	btemp+11,plusw1
 18736                           
 18737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18738                           ;stkvar	_s @ sp[(-18)+12]
 18739  013796  0EFA               	movlw	-6
 18740  013798  006F FF8C  F035    	movff	plusw1,btemp
 18741  01379E  0EFB               	movlw	-5
 18742  0137A0  50E3               	movf	plusw1,w,c
 18743  0137A2  1035               	iorwf	btemp^0,w,c
 18744  0137A4  B4D8               	btfsc	status,2,c
 18745  0137A6  D025               	goto	u9170
 18746                           
 18747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18748                           ;stkvar	_n @ sp[(-18)+2]
 18749                           ;stkvar	_n @ sp[(-18)+2]
 18750  0137A8  0EF0               	movlw	-16
 18751  0137AA  6CE3               	negf	plusw1,c
 18752  0137AC  0EF1               	movlw	-15
 18753  0137AE  1EE3               	comf	plusw1,f,c
 18754  0137B0  0EF2               	movlw	-14
 18755  0137B2  1EE3               	comf	plusw1,f,c
 18756  0137B4  0EF3               	movlw	-13
 18757  0137B6  1EE3               	comf	plusw1,f,c
 18758  0137B8  0EF4               	movlw	-12
 18759  0137BA  1EE3               	comf	plusw1,f,c
 18760  0137BC  0EF5               	movlw	-11
 18761  0137BE  1EE3               	comf	plusw1,f,c
 18762  0137C0  0EF6               	movlw	-10
 18763  0137C2  1EE3               	comf	plusw1,f,c
 18764  0137C4  0EF7               	movlw	-9
 18765  0137C6  1EE3               	comf	plusw1,f,c
 18766  0137C8  E314               	bnc	u9170
 18767  0137CA  0EF1               	movlw	-15
 18768  0137CC  2AE3               	incf	plusw1,f,c
 18769  0137CE  E311               	bnc	u9170
 18770  0137D0  0EF2               	movlw	-14
 18771  0137D2  2AE3               	incf	plusw1,f,c
 18772  0137D4  E30E               	bnc	u9170
 18773  0137D6  0EF3               	movlw	-13
 18774  0137D8  2AE3               	incf	plusw1,f,c
 18775  0137DA  E30B               	bnc	u9170
 18776  0137DC  0EF4               	movlw	-12
 18777  0137DE  2AE3               	incf	plusw1,f,c
 18778  0137E0  E308               	bnc	u9170
 18779  0137E2  0EF5               	movlw	-11
 18780  0137E4  2AE3               	incf	plusw1,f,c
 18781  0137E6  E305               	bnc	u9170
 18782  0137E8  0EF6               	movlw	-10
 18783  0137EA  2AE3               	incf	plusw1,f,c
 18784  0137EC  E302               	bnc	u9170
 18785  0137EE  0EF7               	movlw	-9
 18786  0137F0  2AE3               	incf	plusw1,f,c
 18787  0137F2                     u9170:
 18788                           
 18789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18790  0137F2  AE21               	btfss	(_prec+1)^0,7,c
 18791                           
 18792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18793  0137F4  9222               	bcf	_flags^0,1,c
 18794                           
 18795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18796  0137F6  BE21               	btfsc	(_prec+1)^0,7,c
 18797  0137F8  D005               	goto	u9190
 18798  0137FA  5021               	movf	(_prec+1)^0,w,c
 18799  0137FC  E110               	bnz	l9313
 18800  0137FE  0420               	decf	_prec^0,w,c
 18801  013800  B0D8               	btfsc	status,0,c
 18802  013802  D00D               	goto	l9313
 18803  013804                     u9190:
 18804  013804  0E01               	movlw	1
 18805  013806  6E3F               	movwf	(btemp+10)^0,c
 18806  013808  0E00               	movlw	0
 18807  01380A  6E40               	movwf	(btemp+11)^0,c
 18808                           
 18809                           ;stkvar	_p @ sp[(-18)+16]
 18810  01380C  0EFE               	movlw	-2
 18811  01380E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18812  013814  0EFF               	movlw	-1
 18813  013816  0060  F103  FFE3   	movff	btemp+11,plusw1
 18814  01381C  D008               	goto	l1771
 18815  01381E                     l9313:
 18816                           
 18817                           ;stkvar	_p @ sp[(-18)+16]
 18818  01381E  0EFE               	movlw	-2
 18819  013820  0060  F083  FFE3   	movff	_prec,plusw1
 18820  013826  0EFF               	movlw	-1
 18821  013828  0060  F087  FFE3   	movff	_prec+1,plusw1
 18822  01382E                     l1771:
 18823                           
 18824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18825                           ;stkvar	_w @ sp[(-18)+14]
 18826  01382E  0EFC               	movlw	-4
 18827  013830  0060  F07B  FFE3   	movff	_width,plusw1
 18828  013836  0EFD               	movlw	-3
 18829  013838  0060  F07F  FFE3   	movff	_width+1,plusw1
 18830                           
 18831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18832                           ;stkvar	_s @ sp[(-18)+12]
 18833  01383E  0EFA               	movlw	-6
 18834  013840  006F FF8C  F035    	movff	plusw1,btemp
 18835  013846  0EFB               	movlw	-5
 18836  013848  50E3               	movf	plusw1,w,c
 18837  01384A  1035               	iorwf	btemp^0,w,c
 18838  01384C  A4D8               	btfss	status,2,c
 18839  01384E  D002               	goto	u9210
 18840  013850  A422               	btfss	_flags^0,2,c
 18841  013852  D00A               	goto	l9321
 18842  013854                     u9210:
 18843                           
 18844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18845                           ;stkvar	_w @ sp[(-18)+14]
 18846  013854  50E1               	movf	fsr1l,w,c
 18847  013856  0FFC               	addlw	-4
 18848  013858  6ED9               	movwf	fsr2l,c
 18849  01385A  50E2               	movf	fsr1h,w,c
 18850  01385C  6EDA               	movwf	fsr2h,c
 18851  01385E  0EFF               	movlw	255
 18852  013860  22DA               	addwfc	fsr2h,f,c
 18853  013862  06DE               	decf	postinc2,f,c
 18854  013864  0E00               	movlw	0
 18855  013866  5ADD               	subwfb	postdec2,f,c
 18856  013868                     l9321:
 18857                           
 18858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18859  013868  0E4F               	movlw	79
 18860  01386A  6E3F               	movwf	(btemp+10)^0,c
 18861  01386C  0E00               	movlw	0
 18862  01386E  6E40               	movwf	(btemp+11)^0,c
 18863                           
 18864                           ;stkvar	_i @ sp[(-18)+10]
 18865  013870  0EF8               	movlw	-8
 18866  013872  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18867  013878  0EF9               	movlw	-7
 18868  01387A  0060  F103  FFE3   	movff	btemp+11,plusw1
 18869                           
 18870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18871  013880  0102               	movlb	2	; () banked
 18872  013882  6BFB               	clrf	(_dbuf+79)& (0+255),b
 18873                           
 18874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18875  013884  D109               	goto	l9335
 18876  013886                     l9325:
 18877                           
 18878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18879                           ;stkvar	_i @ sp[(-18)+10]
 18880  013886  50E1               	movf	fsr1l,w,c
 18881  013888  0FF8               	addlw	-8
 18882  01388A  6ED9               	movwf	fsr2l,c
 18883  01388C  50E2               	movf	fsr1h,w,c
 18884  01388E  6EDA               	movwf	fsr2h,c
 18885  013890  0EFF               	movlw	255
 18886  013892  22DA               	addwfc	fsr2h,f,c
 18887  013894  06DE               	decf	postinc2,f,c
 18888  013896  0E00               	movlw	0
 18889  013898  5ADD               	subwfb	postdec2,f,c
 18890                           
 18891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18892  01389A  0E0A               	movlw	10
 18893  01389C  6EE6               	movwf	postinc1,c
 18894  01389E  0E00               	movlw	0
 18895  0138A0  6EE6               	movwf	postinc1,c
 18896  0138A2  0E00               	movlw	0
 18897  0138A4  6EE6               	movwf	postinc1,c
 18898  0138A6  0E00               	movlw	0
 18899  0138A8  6EE6               	movwf	postinc1,c
 18900  0138AA  0E00               	movlw	0
 18901  0138AC  6EE6               	movwf	postinc1,c
 18902  0138AE  0E00               	movlw	0
 18903  0138B0  6EE6               	movwf	postinc1,c
 18904  0138B2  0E00               	movlw	0
 18905  0138B4  6EE6               	movwf	postinc1,c
 18906  0138B6  0E00               	movlw	0
 18907  0138B8  6EE6               	movwf	postinc1,c
 18908                           
 18909                           ;stkvar	_n @ sp[(-26)+2]
 18910  0138BA  50E1               	movf	fsr1l,w,c
 18911  0138BC  0FE8               	addlw	-24
 18912  0138BE  6ED9               	movwf	fsr2l,c
 18913  0138C0  50E2               	movf	fsr1h,w,c
 18914  0138C2  6EDA               	movwf	fsr2h,c
 18915  0138C4  0EFF               	movlw	255
 18916  0138C6  22DA               	addwfc	fsr2h,f,c
 18917  0138C8  006F FF7B FFE6     	movff	postinc2,postinc1
 18918  0138CE  006F FF7B FFE6     	movff	postinc2,postinc1
 18919  0138D4  006F FF7B FFE6     	movff	postinc2,postinc1
 18920  0138DA  006F FF7B FFE6     	movff	postinc2,postinc1
 18921  0138E0  006F FF7B FFE6     	movff	postinc2,postinc1
 18922  0138E6  006F FF7B FFE6     	movff	postinc2,postinc1
 18923  0138EC  006F FF7B FFE6     	movff	postinc2,postinc1
 18924  0138F2  006F FF7B FFE6     	movff	postinc2,postinc1
 18925  0138F8  EC6A  F0AC         	call	___aomod	;wreg free
 18926  0138FC  52E5               	movf	postdec1,f,c
 18927  0138FE  006F FF9C  F04C    	movff	indf1,btemp+23
 18928  013904  52E5               	movf	postdec1,f,c
 18929  013906  006F FF9C  F04B    	movff	indf1,btemp+22
 18930  01390C  52E5               	movf	postdec1,f,c
 18931  01390E  006F FF9C  F04A    	movff	indf1,btemp+21
 18932  013914  52E5               	movf	postdec1,f,c
 18933  013916  006F FF9C  F049    	movff	indf1,btemp+20
 18934  01391C  52E5               	movf	postdec1,f,c
 18935  01391E  006F FF9C  F048    	movff	indf1,btemp+19
 18936  013924  52E5               	movf	postdec1,f,c
 18937  013926  006F FF9C  F047    	movff	indf1,btemp+18
 18938  01392C  52E5               	movf	postdec1,f,c
 18939  01392E  006F FF9C  F046    	movff	indf1,btemp+17
 18940  013934  52E5               	movf	postdec1,f,c
 18941  013936  006F FF9C  F045    	movff	indf1,btemp+16
 18942  01393C  0EF8               	movlw	248
 18943  01393E  26E1               	addwf	fsr1l,f,c
 18944  013940  0EFF               	movlw	255
 18945  013942  22E2               	addwfc	fsr1h,f,c
 18946  013944  0060  F114  F03F   	movff	btemp+16,btemp+10
 18947  01394A  0060  F118  F040   	movff	btemp+17,btemp+11
 18948  013950  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 18949  013956  0060  F103  FFE6   	movff	btemp+11,postinc1
 18950  01395C  EC71  F0C1         	call	_abs	;wreg free
 18951  013960  0E30               	movlw	48
 18952  013962  2635               	addwf	btemp^0,f,c
 18953                           
 18954                           ;stkvar	_i @ sp[(-18)+10]
 18955  013964  0EF8               	movlw	-8
 18956  013966  006F FF8C  F03F    	movff	plusw1,btemp+10
 18957  01396C  0EF9               	movlw	-7
 18958  01396E  006F FF8C  F040    	movff	plusw1,btemp+11
 18959  013974  0EAC               	movlw	low _dbuf
 18960  013976  243F               	addwf	(btemp+10)^0,w,c
 18961  013978  6ED9               	movwf	fsr2l,c
 18962  01397A  0E02               	movlw	high _dbuf
 18963  01397C  2040               	addwfc	(btemp+11)^0,w,c
 18964  01397E  6EDA               	movwf	fsr2h,c
 18965  013980  0060  F0D7  FFDF   	movff	btemp,indf2
 18966                           
 18967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18968                           ;stkvar	_p @ sp[(-18)+16]
 18969  013986  50E1               	movf	fsr1l,w,c
 18970  013988  0FFE               	addlw	-2
 18971  01398A  6ED9               	movwf	fsr2l,c
 18972  01398C  50E2               	movf	fsr1h,w,c
 18973  01398E  6EDA               	movwf	fsr2h,c
 18974  013990  0EFF               	movlw	255
 18975  013992  22DA               	addwfc	fsr2h,f,c
 18976  013994  06DE               	decf	postinc2,f,c
 18977  013996  0E00               	movlw	0
 18978  013998  5ADD               	subwfb	postdec2,f,c
 18979                           
 18980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18981                           ;stkvar	_w @ sp[(-18)+14]
 18982  01399A  50E1               	movf	fsr1l,w,c
 18983  01399C  0FFC               	addlw	-4
 18984  01399E  6ED9               	movwf	fsr2l,c
 18985  0139A0  50E2               	movf	fsr1h,w,c
 18986  0139A2  6EDA               	movwf	fsr2h,c
 18987  0139A4  0EFF               	movlw	255
 18988  0139A6  22DA               	addwfc	fsr2h,f,c
 18989  0139A8  06DE               	decf	postinc2,f,c
 18990  0139AA  0E00               	movlw	0
 18991  0139AC  5ADD               	subwfb	postdec2,f,c
 18992                           
 18993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18994  0139AE  0E0A               	movlw	10
 18995  0139B0  6EE6               	movwf	postinc1,c
 18996  0139B2  0E00               	movlw	0
 18997  0139B4  6EE6               	movwf	postinc1,c
 18998  0139B6  0E00               	movlw	0
 18999  0139B8  6EE6               	movwf	postinc1,c
 19000  0139BA  0E00               	movlw	0
 19001  0139BC  6EE6               	movwf	postinc1,c
 19002  0139BE  0E00               	movlw	0
 19003  0139C0  6EE6               	movwf	postinc1,c
 19004  0139C2  0E00               	movlw	0
 19005  0139C4  6EE6               	movwf	postinc1,c
 19006  0139C6  0E00               	movlw	0
 19007  0139C8  6EE6               	movwf	postinc1,c
 19008  0139CA  0E00               	movlw	0
 19009  0139CC  6EE6               	movwf	postinc1,c
 19010                           
 19011                           ;stkvar	_n @ sp[(-26)+2]
 19012  0139CE  50E1               	movf	fsr1l,w,c
 19013  0139D0  0FE8               	addlw	-24
 19014  0139D2  6ED9               	movwf	fsr2l,c
 19015  0139D4  50E2               	movf	fsr1h,w,c
 19016  0139D6  6EDA               	movwf	fsr2h,c
 19017  0139D8  0EFF               	movlw	255
 19018  0139DA  22DA               	addwfc	fsr2h,f,c
 19019  0139DC  006F FF7B FFE6     	movff	postinc2,postinc1
 19020  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 19021  0139E8  006F FF7B FFE6     	movff	postinc2,postinc1
 19022  0139EE  006F FF7B FFE6     	movff	postinc2,postinc1
 19023  0139F4  006F FF7B FFE6     	movff	postinc2,postinc1
 19024  0139FA  006F FF7B FFE6     	movff	postinc2,postinc1
 19025  013A00  006F FF7B FFE6     	movff	postinc2,postinc1
 19026  013A06  006F FF7B FFE6     	movff	postinc2,postinc1
 19027  013A0C  ECF0  F0A9         	call	___aodiv	;wreg free
 19028  013A10  52E5               	movf	postdec1,f,c
 19029  013A12  006F FF9C  F04C    	movff	indf1,btemp+23
 19030  013A18  52E5               	movf	postdec1,f,c
 19031  013A1A  006F FF9C  F04B    	movff	indf1,btemp+22
 19032  013A20  52E5               	movf	postdec1,f,c
 19033  013A22  006F FF9C  F04A    	movff	indf1,btemp+21
 19034  013A28  52E5               	movf	postdec1,f,c
 19035  013A2A  006F FF9C  F049    	movff	indf1,btemp+20
 19036  013A30  52E5               	movf	postdec1,f,c
 19037  013A32  006F FF9C  F048    	movff	indf1,btemp+19
 19038  013A38  52E5               	movf	postdec1,f,c
 19039  013A3A  006F FF9C  F047    	movff	indf1,btemp+18
 19040  013A40  52E5               	movf	postdec1,f,c
 19041  013A42  006F FF9C  F046    	movff	indf1,btemp+17
 19042  013A48  52E5               	movf	postdec1,f,c
 19043  013A4A  006F FF9C  F045    	movff	indf1,btemp+16
 19044  013A50  0EF8               	movlw	248
 19045  013A52  26E1               	addwf	fsr1l,f,c
 19046  013A54  0EFF               	movlw	255
 19047  013A56  22E2               	addwfc	fsr1h,f,c
 19048                           
 19049                           ;stkvar	_n @ sp[(-18)+2]
 19050  013A58  0EF0               	movlw	-16
 19051  013A5A  0060  F117  FFE3   	movff	btemp+16,plusw1
 19052  013A60  0EF1               	movlw	-15
 19053  013A62  0060  F11B  FFE3   	movff	btemp+17,plusw1
 19054  013A68  0EF2               	movlw	-14
 19055  013A6A  0060  F11F  FFE3   	movff	btemp+18,plusw1
 19056  013A70  0EF3               	movlw	-13
 19057  013A72  0060  F123  FFE3   	movff	btemp+19,plusw1
 19058  013A78  0EF4               	movlw	-12
 19059  013A7A  0060  F127  FFE3   	movff	btemp+20,plusw1
 19060  013A80  0EF5               	movlw	-11
 19061  013A82  0060  F12B  FFE3   	movff	btemp+21,plusw1
 19062  013A88  0EF6               	movlw	-10
 19063  013A8A  0060  F12F  FFE3   	movff	btemp+22,plusw1
 19064  013A90  0EF7               	movlw	-9
 19065  013A92  0060  F133  FFE3   	movff	btemp+23,plusw1
 19066  013A98                     l9335:
 19067                           
 19068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19069                           ;stkvar	_i @ sp[(-18)+10]
 19070  013A98  0EF9               	movlw	-7
 19071  013A9A  BEE3               	btfsc	plusw1,7,c
 19072  013A9C  D036               	goto	u9260
 19073  013A9E  0EF9               	movlw	-7
 19074  013AA0  50E3               	movf	plusw1,w,c
 19075  013AA2  E104               	bnz	u9220
 19076  013AA4  0EF8               	movlw	-8
 19077  013AA6  04E3               	decf	plusw1,w,c
 19078  013AA8  A0D8               	btfss	status,0,c
 19079  013AAA  D02F               	goto	u9260
 19080  013AAC                     u9220:
 19081                           
 19082                           ;stkvar	_n @ sp[(-18)+2]
 19083  013AAC  0EF0               	movlw	-16
 19084  013AAE  50E3               	movf	plusw1,w,c
 19085  013AB0  E115               	bnz	u9231
 19086  013AB2  0EF1               	movlw	-15
 19087  013AB4  50E3               	movf	plusw1,w,c
 19088  013AB6  E112               	bnz	u9231
 19089  013AB8  0EF2               	movlw	-14
 19090  013ABA  50E3               	movf	plusw1,w,c
 19091  013ABC  E10F               	bnz	u9231
 19092  013ABE  0EF3               	movlw	-13
 19093  013AC0  50E3               	movf	plusw1,w,c
 19094  013AC2  E10C               	bnz	u9231
 19095  013AC4  0EF4               	movlw	-12
 19096  013AC6  50E3               	movf	plusw1,w,c
 19097  013AC8  E109               	bnz	u9231
 19098  013ACA  0EF5               	movlw	-11
 19099  013ACC  50E3               	movf	plusw1,w,c
 19100  013ACE  E106               	bnz	u9231
 19101  013AD0  0EF6               	movlw	-10
 19102  013AD2  50E3               	movf	plusw1,w,c
 19103  013AD4  E103               	bnz	u9231
 19104  013AD6  0EF7               	movlw	-9
 19105  013AD8  50E3               	movf	plusw1,w,c
 19106  013ADA  A4D8               	btfss	status,2,c
 19107  013ADC                     u9231:
 19108  013ADC  D6D4               	goto	l9325
 19109                           
 19110                           ;stkvar	_p @ sp[(-18)+16]
 19111  013ADE  0EFF               	movlw	-1
 19112  013AE0  BEE3               	btfsc	plusw1,7,c
 19113  013AE2  D007               	goto	u9240
 19114  013AE4  0EFF               	movlw	-1
 19115  013AE6  50E3               	movf	plusw1,w,c
 19116  013AE8  E103               	bnz	u9241
 19117  013AEA  0EFE               	movlw	-2
 19118  013AEC  04E3               	decf	plusw1,w,c
 19119  013AEE  B0D8               	btfsc	status,0,c
 19120  013AF0                     u9241:
 19121  013AF0  D6CA               	goto	l9325
 19122  013AF2                     u9240:
 19123                           
 19124                           ;stkvar	_w @ sp[(-18)+14]
 19125  013AF2  0EFD               	movlw	-3
 19126  013AF4  BEE3               	btfsc	plusw1,7,c
 19127  013AF6  D009               	goto	u9260
 19128  013AF8  0EFD               	movlw	-3
 19129  013AFA  50E3               	movf	plusw1,w,c
 19130  013AFC  E104               	bnz	u9250
 19131  013AFE  0EFC               	movlw	-4
 19132  013B00  04E3               	decf	plusw1,w,c
 19133  013B02  A0D8               	btfss	status,0,c
 19134  013B04  D002               	goto	u9260
 19135  013B06                     u9250:
 19136  013B06  B222               	btfsc	_flags^0,1,c
 19137  013B08  D6BE               	goto	l9325
 19138  013B0A                     u9260:
 19139                           
 19140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19141                           ;stkvar	_s @ sp[(-18)+12]
 19142  013B0A  0EFA               	movlw	-6
 19143  013B0C  006F FF8C  F035    	movff	plusw1,btemp
 19144  013B12  0EFB               	movlw	-5
 19145  013B14  50E3               	movf	plusw1,w,c
 19146  013B16  1035               	iorwf	btemp^0,w,c
 19147  013B18  A4D8               	btfss	status,2,c
 19148  013B1A  D002               	goto	u9280
 19149  013B1C  A422               	btfss	_flags^0,2,c
 19150  013B1E  D033               	goto	l9359
 19151  013B20                     u9280:
 19152                           
 19153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19154                           ;stkvar	_i @ sp[(-18)+10]
 19155  013B20  50E1               	movf	fsr1l,w,c
 19156  013B22  0FF8               	addlw	-8
 19157  013B24  6ED9               	movwf	fsr2l,c
 19158  013B26  50E2               	movf	fsr1h,w,c
 19159  013B28  6EDA               	movwf	fsr2h,c
 19160  013B2A  0EFF               	movlw	255
 19161  013B2C  22DA               	addwfc	fsr2h,f,c
 19162  013B2E  06DE               	decf	postinc2,f,c
 19163  013B30  0E00               	movlw	0
 19164  013B32  5ADD               	subwfb	postdec2,f,c
 19165                           
 19166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19167                           ;stkvar	_s @ sp[(-18)+12]
 19168  013B34  0EFA               	movlw	-6
 19169  013B36  006F FF8C  F035    	movff	plusw1,btemp
 19170  013B3C  0EFB               	movlw	-5
 19171  013B3E  50E3               	movf	plusw1,w,c
 19172  013B40  1035               	iorwf	btemp^0,w,c
 19173  013B42  A4D8               	btfss	status,2,c
 19174  013B44  D002               	goto	l9355
 19175  013B46  0E2B               	movlw	43
 19176  013B48  D001               	goto	L19
 19177  013B4A                     l9355:
 19178  013B4A  0E2D               	movlw	45
 19179  013B4C                     L19:
 19180  013B4C  6E3F               	movwf	(btemp+10)^0,c
 19181  013B4E  0E00               	movlw	0
 19182  013B50  6E40               	movwf	(btemp+11)^0,c
 19183                           
 19184                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19185  013B52  0EEE               	movlw	-18
 19186  013B54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19187  013B5A  0EEF               	movlw	-17
 19188  013B5C  0060  F103  FFE3   	movff	btemp+11,plusw1
 19189                           
 19190                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19191                           ;stkvar	_i @ sp[(-18)+10]
 19192  013B62  0EF8               	movlw	-8
 19193  013B64  006F FF8C  F03F    	movff	plusw1,btemp+10
 19194  013B6A  0EF9               	movlw	-7
 19195  013B6C  006F FF8C  F040    	movff	plusw1,btemp+11
 19196  013B72  0EAC               	movlw	low _dbuf
 19197  013B74  243F               	addwf	(btemp+10)^0,w,c
 19198  013B76  6ED9               	movwf	fsr2l,c
 19199  013B78  0E02               	movlw	high _dbuf
 19200  013B7A  2040               	addwfc	(btemp+11)^0,w,c
 19201  013B7C  6EDA               	movwf	fsr2h,c
 19202  013B7E  0EEE               	movlw	-18
 19203  013B80  006F FF8F FFDF     	movff	plusw1,indf2
 19204  013B86                     l9359:
 19205                           
 19206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19207                           ;stkvar	_w @ sp[(-18)+14]
 19208  013B86  0EFC               	movlw	-4
 19209  013B88  006F FF8F FFE6     	movff	plusw1,postinc1
 19210  013B8E  006F FF8F FFE6     	movff	plusw1,postinc1
 19211                           
 19212                           ;stkvar	_i @ sp[(-20)+10]
 19213  013B94  0EAC               	movlw	low _dbuf
 19214  013B96  6E3F               	movwf	(btemp+10)^0,c
 19215  013B98  0E02               	movlw	high _dbuf
 19216  013B9A  6E40               	movwf	(btemp+11)^0,c
 19217  013B9C  0EF6               	movlw	-10
 19218  013B9E  50E3               	movf	plusw1,w,c
 19219  013BA0  263F               	addwf	(btemp+10)^0,f,c
 19220  013BA2  0EF7               	movlw	-9
 19221  013BA4  50E3               	movf	plusw1,w,c
 19222  013BA6  2240               	addwfc	(btemp+11)^0,f,c
 19223  013BA8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19224  013BAE  0060  F103  FFE6   	movff	btemp+11,postinc1
 19225                           
 19226                           ;stkvar	_fp @ sp[(-22)+-2]
 19227  013BB4  0EE8               	movlw	-24
 19228  013BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 19229  013BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 19230  013BC2  EC76  F0B7         	call	_pad	;wreg free
 19231                           
 19232                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19233  013BC6  0EE4               	movlw	228
 19234  013BC8  26E1               	addwf	fsr1l,f,c
 19235  013BCA  0EFF               	movlw	255
 19236  013BCC  22E2               	addwfc	fsr1h,f,c
 19237  013BCE  0012               	return		;funcret
 19238  013BD0                     __end_of_dtoa:
 19239                           	opt callstack 0
 19240                           
 19241 ;; *************** function _abs *****************
 19242 ;; Defined at:
 19243 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19244 ;; Parameters:    Size  Location     Type
 19245 ;;  a               2  [STACK] int 
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;		None
 19248 ;; Return value:  Size  Location     Type
 19249 ;;                  2  [STACK] int 
 19250 ;; Registers used:
 19251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19252 ;; Tracked objects:
 19253 ;;		On entry : 0/2
 19254 ;;		On exit  : 0/0
 19255 ;;		Unchanged: 0/0
 19256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19261 ;;Total ram usage:        0 bytes
 19262 ;; Hardware stack levels used:    1
 19263 ;; Hardware stack levels required when called:    6
 19264 ;; This function calls:
 19265 ;;		Nothing
 19266 ;; This function is called by:
 19267 ;;		_dtoa
 19268 ;; This function uses a reentrant model
 19269 ;;
 19270                           
 19271                           	psect	text61
 19272  0182E2                     __ptext61:
 19273                           	opt callstack 0
 19274  0182E2                     _abs:
 19275                           	opt callstack 17
 19276                           
 19277                           ;stkvar	_a @ sp[(0)+-2]
 19278                           
 19279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19280                           ;incstack = 0
 19281  0182E2  0EFF               	movlw	-1
 19282  0182E4  BEE3               	btfsc	plusw1,7,c
 19283  0182E6  D007               	goto	u5120
 19284  0182E8  0EFF               	movlw	-1
 19285  0182EA  50E3               	movf	plusw1,w,c
 19286  0182EC  E112               	bnz	l6375
 19287  0182EE  0EFE               	movlw	-2
 19288  0182F0  04E3               	decf	plusw1,w,c
 19289  0182F2  B0D8               	btfsc	status,0,c
 19290  0182F4  D00E               	goto	l6375
 19291  0182F6                     u5120:
 19292                           
 19293                           ;stkvar	_a @ sp[(0)+-2]
 19294  0182F6  0EFE               	movlw	-2
 19295  0182F8  006F FF8C  F035    	movff	plusw1,btemp
 19296  0182FE  1E35               	comf	btemp^0,f,c
 19297  018300  0EFF               	movlw	-1
 19298  018302  006F FF8C  F036    	movff	plusw1,btemp+1
 19299  018308  1E36               	comf	(btemp+1)^0,f,c
 19300  01830A  2A35               	incf	btemp^0,f,c
 19301  01830C  B4D8               	btfsc	status,2,c
 19302  01830E  2A36               	incf	(btemp+1)^0,f,c
 19303  018310  D008               	goto	l2697
 19304  018312                     l6375:
 19305                           
 19306                           ;stkvar	_a @ sp[(0)+-2]
 19307  018312  0EFE               	movlw	-2
 19308  018314  006F FF8C  F035    	movff	plusw1,btemp
 19309  01831A  0EFF               	movlw	-1
 19310  01831C  006F FF8C  F036    	movff	plusw1,btemp+1
 19311  018322                     l2697:
 19312                           
 19313                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19314  018322  52E5               	movf	postdec1,f,c
 19315  018324  52E5               	movf	postdec1,f,c
 19316  018326  0012               	return		;funcret
 19317  018328                     __end_of_abs:
 19318                           	opt callstack 0
 19319                           
 19320 ;; *************** function ___aomod *****************
 19321 ;; Defined at:
 19322 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19323 ;; Parameters:    Size  Location     Type
 19324 ;;  dividend        8  [STACK] long long 
 19325 ;;  divisor         8  [STACK] long long 
 19326 ;; Auto vars:     Size  Location     Type
 19327 ;;  sign            1  [STACK] unsigned char 
 19328 ;;  counter         1  [STACK] unsigned char 
 19329 ;; Return value:  Size  Location     Type
 19330 ;;                  8  [STACK] long long 
 19331 ;; Registers used:
 19332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19333 ;; Tracked objects:
 19334 ;;		On entry : 0/2
 19335 ;;		On exit  : 0/0
 19336 ;;		Unchanged: 0/0
 19337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19342 ;;Total ram usage:        0 bytes
 19343 ;; Hardware stack levels used:    1
 19344 ;; Hardware stack levels required when called:    6
 19345 ;; This function calls:
 19346 ;;		Nothing
 19347 ;; This function is called by:
 19348 ;;		_dtoa
 19349 ;; This function uses a reentrant model
 19350 ;;
 19351                           
 19352                           	psect	text62
 19353  0158D4                     __ptext62:
 19354                           	opt callstack 0
 19355  0158D4                     ___aomod:
 19356                           	opt callstack 0
 19357                           
 19358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19359  0158D4  52E6               	movf	postinc1,f,c
 19360  0158D6  52E6               	movf	postinc1,f,c
 19361                           
 19362                           ;stkvar	_sign @ sp[(-2)+0]
 19363                           
 19364                           ;incstack = 0
 19365  0158D8  0EFE               	movlw	-2
 19366  0158DA  6AE3               	clrf	plusw1,c
 19367                           
 19368                           ;stkvar	_dividend @ sp[(-2)+-8]
 19369  0158DC  0EFD               	movlw	-3
 19370  0158DE  AEE3               	btfss	plusw1,7,c
 19371  0158E0  D028               	goto	l6533
 19372                           
 19373                           ;stkvar	_dividend @ sp[(-2)+-8]
 19374                           ;stkvar	_dividend @ sp[(-2)+-8]
 19375  0158E2  0EF6               	movlw	-10
 19376  0158E4  6CE3               	negf	plusw1,c
 19377  0158E6  0EF7               	movlw	-9
 19378  0158E8  1EE3               	comf	plusw1,f,c
 19379  0158EA  0EF8               	movlw	-8
 19380  0158EC  1EE3               	comf	plusw1,f,c
 19381  0158EE  0EF9               	movlw	-7
 19382  0158F0  1EE3               	comf	plusw1,f,c
 19383  0158F2  0EFA               	movlw	-6
 19384  0158F4  1EE3               	comf	plusw1,f,c
 19385  0158F6  0EFB               	movlw	-5
 19386  0158F8  1EE3               	comf	plusw1,f,c
 19387  0158FA  0EFC               	movlw	-4
 19388  0158FC  1EE3               	comf	plusw1,f,c
 19389  0158FE  0EFD               	movlw	-3
 19390  015900  1EE3               	comf	plusw1,f,c
 19391  015902  E314               	bnc	u5550
 19392  015904  0EF7               	movlw	-9
 19393  015906  2AE3               	incf	plusw1,f,c
 19394  015908  E311               	bnc	u5550
 19395  01590A  0EF8               	movlw	-8
 19396  01590C  2AE3               	incf	plusw1,f,c
 19397  01590E  E30E               	bnc	u5550
 19398  015910  0EF9               	movlw	-7
 19399  015912  2AE3               	incf	plusw1,f,c
 19400  015914  E30B               	bnc	u5550
 19401  015916  0EFA               	movlw	-6
 19402  015918  2AE3               	incf	plusw1,f,c
 19403  01591A  E308               	bnc	u5550
 19404  01591C  0EFB               	movlw	-5
 19405  01591E  2AE3               	incf	plusw1,f,c
 19406  015920  E305               	bnc	u5550
 19407  015922  0EFC               	movlw	-4
 19408  015924  2AE3               	incf	plusw1,f,c
 19409  015926  E302               	bnc	u5550
 19410  015928  0EFD               	movlw	-3
 19411  01592A  2AE3               	incf	plusw1,f,c
 19412  01592C                     u5550:
 19413                           
 19414                           ;stkvar	_sign @ sp[(-2)+0]
 19415  01592C  0EFE               	movlw	-2
 19416  01592E  6AE3               	clrf	plusw1,c
 19417  015930  2AE3               	incf	plusw1,f,c
 19418  015932                     l6533:
 19419                           
 19420                           ;stkvar	_divisor @ sp[(-2)+-16]
 19421  015932  0EF5               	movlw	-11
 19422  015934  AEE3               	btfss	plusw1,7,c
 19423  015936  D025               	goto	u5570
 19424                           
 19425                           ;stkvar	_divisor @ sp[(-2)+-16]
 19426                           ;stkvar	_divisor @ sp[(-2)+-16]
 19427  015938  0EEE               	movlw	-18
 19428  01593A  6CE3               	negf	plusw1,c
 19429  01593C  0EEF               	movlw	-17
 19430  01593E  1EE3               	comf	plusw1,f,c
 19431  015940  0EF0               	movlw	-16
 19432  015942  1EE3               	comf	plusw1,f,c
 19433  015944  0EF1               	movlw	-15
 19434  015946  1EE3               	comf	plusw1,f,c
 19435  015948  0EF2               	movlw	-14
 19436  01594A  1EE3               	comf	plusw1,f,c
 19437  01594C  0EF3               	movlw	-13
 19438  01594E  1EE3               	comf	plusw1,f,c
 19439  015950  0EF4               	movlw	-12
 19440  015952  1EE3               	comf	plusw1,f,c
 19441  015954  0EF5               	movlw	-11
 19442  015956  1EE3               	comf	plusw1,f,c
 19443  015958  E314               	bnc	u5570
 19444  01595A  0EEF               	movlw	-17
 19445  01595C  2AE3               	incf	plusw1,f,c
 19446  01595E  E311               	bnc	u5570
 19447  015960  0EF0               	movlw	-16
 19448  015962  2AE3               	incf	plusw1,f,c
 19449  015964  E30E               	bnc	u5570
 19450  015966  0EF1               	movlw	-15
 19451  015968  2AE3               	incf	plusw1,f,c
 19452  01596A  E30B               	bnc	u5570
 19453  01596C  0EF2               	movlw	-14
 19454  01596E  2AE3               	incf	plusw1,f,c
 19455  015970  E308               	bnc	u5570
 19456  015972  0EF3               	movlw	-13
 19457  015974  2AE3               	incf	plusw1,f,c
 19458  015976  E305               	bnc	u5570
 19459  015978  0EF4               	movlw	-12
 19460  01597A  2AE3               	incf	plusw1,f,c
 19461  01597C  E302               	bnc	u5570
 19462  01597E  0EF5               	movlw	-11
 19463  015980  2AE3               	incf	plusw1,f,c
 19464  015982                     u5570:
 19465                           
 19466                           ;stkvar	_divisor @ sp[(-2)+-16]
 19467  015982  0EEE               	movlw	-18
 19468  015984  50E3               	movf	plusw1,w,c
 19469  015986  E116               	bnz	u5580
 19470  015988  0EEF               	movlw	-17
 19471  01598A  50E3               	movf	plusw1,w,c
 19472  01598C  E113               	bnz	u5580
 19473  01598E  0EF0               	movlw	-16
 19474  015990  50E3               	movf	plusw1,w,c
 19475  015992  E110               	bnz	u5580
 19476  015994  0EF1               	movlw	-15
 19477  015996  50E3               	movf	plusw1,w,c
 19478  015998  E10D               	bnz	u5580
 19479  01599A  0EF2               	movlw	-14
 19480  01599C  50E3               	movf	plusw1,w,c
 19481  01599E  E10A               	bnz	u5580
 19482  0159A0  0EF3               	movlw	-13
 19483  0159A2  50E3               	movf	plusw1,w,c
 19484  0159A4  E107               	bnz	u5580
 19485  0159A6  0EF4               	movlw	-12
 19486  0159A8  50E3               	movf	plusw1,w,c
 19487  0159AA  E104               	bnz	u5580
 19488  0159AC  0EF5               	movlw	-11
 19489  0159AE  50E3               	movf	plusw1,w,c
 19490  0159B0  B4D8               	btfsc	status,2,c
 19491  0159B2  D075               	goto	u5610
 19492  0159B4                     u5580:
 19493                           
 19494                           ;stkvar	_counter @ sp[(-2)+1]
 19495  0159B4  0EFF               	movlw	-1
 19496  0159B6  6AE3               	clrf	plusw1,c
 19497  0159B8  D012               	goto	L20
 19498  0159BA                     l6541:
 19499                           
 19500                           ;stkvar	_divisor @ sp[(-2)+-16]
 19501  0159BA  90D8               	bcf	status,0,c
 19502  0159BC  0EEE               	movlw	-18
 19503  0159BE  36E3               	rlcf	plusw1,f,c
 19504  0159C0  0EEF               	movlw	-17
 19505  0159C2  36E3               	rlcf	plusw1,f,c
 19506  0159C4  0EF0               	movlw	-16
 19507  0159C6  36E3               	rlcf	plusw1,f,c
 19508  0159C8  0EF1               	movlw	-15
 19509  0159CA  36E3               	rlcf	plusw1,f,c
 19510  0159CC  0EF2               	movlw	-14
 19511  0159CE  36E3               	rlcf	plusw1,f,c
 19512  0159D0  0EF3               	movlw	-13
 19513  0159D2  36E3               	rlcf	plusw1,f,c
 19514  0159D4  0EF4               	movlw	-12
 19515  0159D6  36E3               	rlcf	plusw1,f,c
 19516  0159D8  0EF5               	movlw	-11
 19517  0159DA  36E3               	rlcf	plusw1,f,c
 19518                           
 19519                           ;stkvar	_counter @ sp[(-2)+1]
 19520  0159DC  0EFF               	movlw	-1
 19521  0159DE                     L20:
 19522  0159DE  2AE3               	incf	plusw1,f,c
 19523                           
 19524                           ;stkvar	_divisor @ sp[(-2)+-16]
 19525  0159E0  0EF5               	movlw	-11
 19526  0159E2  AEE3               	btfss	plusw1,7,c
 19527  0159E4  D7EA               	goto	l6541
 19528  0159E6                     u5590:
 19529                           
 19530                           ;stkvar	_divisor @ sp[(-2)+-16]
 19531                           ;stkvar	_dividend @ sp[(-2)+-8]
 19532  0159E6  50E1               	movf	fsr1l,w,c
 19533  0159E8  0FF6               	addlw	-10
 19534  0159EA  6ED9               	movwf	fsr2l,c
 19535  0159EC  50E2               	movf	fsr1h,w,c
 19536  0159EE  6EDA               	movwf	fsr2h,c
 19537  0159F0  0EFF               	movlw	255
 19538  0159F2  22DA               	addwfc	fsr2h,f,c
 19539  0159F4  0EEE               	movlw	-18
 19540  0159F6  50E3               	movf	plusw1,w,c
 19541  0159F8  5CDE               	subwf	postinc2,w,c
 19542  0159FA  0EEF               	movlw	-17
 19543  0159FC  50E3               	movf	plusw1,w,c
 19544  0159FE  58DE               	subwfb	postinc2,w,c
 19545  015A00  0EF0               	movlw	-16
 19546  015A02  50E3               	movf	plusw1,w,c
 19547  015A04  58DE               	subwfb	postinc2,w,c
 19548  015A06  0EF1               	movlw	-15
 19549  015A08  50E3               	movf	plusw1,w,c
 19550  015A0A  58DE               	subwfb	postinc2,w,c
 19551  015A0C  0EF2               	movlw	-14
 19552  015A0E  50E3               	movf	plusw1,w,c
 19553  015A10  58DE               	subwfb	postinc2,w,c
 19554  015A12  0EF3               	movlw	-13
 19555  015A14  50E3               	movf	plusw1,w,c
 19556  015A16  58DE               	subwfb	postinc2,w,c
 19557  015A18  0EF4               	movlw	-12
 19558  015A1A  50E3               	movf	plusw1,w,c
 19559  015A1C  58DE               	subwfb	postinc2,w,c
 19560  015A1E  0EF5               	movlw	-11
 19561  015A20  50E3               	movf	plusw1,w,c
 19562  015A22  58DE               	subwfb	postinc2,w,c
 19563  015A24  A0D8               	btfss	status,0,c
 19564  015A26  D01F               	goto	l6549
 19565                           
 19566                           ;stkvar	_divisor @ sp[(-2)+-16]
 19567                           ;stkvar	_dividend @ sp[(-2)+-8]
 19568  015A28  50E1               	movf	fsr1l,w,c
 19569  015A2A  0FF6               	addlw	-10
 19570  015A2C  6ED9               	movwf	fsr2l,c
 19571  015A2E  50E2               	movf	fsr1h,w,c
 19572  015A30  6EDA               	movwf	fsr2h,c
 19573  015A32  0EFF               	movlw	255
 19574  015A34  22DA               	addwfc	fsr2h,f,c
 19575  015A36  0EEE               	movlw	-18
 19576  015A38  50E3               	movf	plusw1,w,c
 19577  015A3A  5EDE               	subwf	postinc2,f,c
 19578  015A3C  0EEF               	movlw	-17
 19579  015A3E  50E3               	movf	plusw1,w,c
 19580  015A40  5ADE               	subwfb	postinc2,f,c
 19581  015A42  0EF0               	movlw	-16
 19582  015A44  50E3               	movf	plusw1,w,c
 19583  015A46  5ADE               	subwfb	postinc2,f,c
 19584  015A48  0EF1               	movlw	-15
 19585  015A4A  50E3               	movf	plusw1,w,c
 19586  015A4C  5ADE               	subwfb	postinc2,f,c
 19587  015A4E  0EF2               	movlw	-14
 19588  015A50  50E3               	movf	plusw1,w,c
 19589  015A52  5ADE               	subwfb	postinc2,f,c
 19590  015A54  0EF3               	movlw	-13
 19591  015A56  50E3               	movf	plusw1,w,c
 19592  015A58  5ADE               	subwfb	postinc2,f,c
 19593  015A5A  0EF4               	movlw	-12
 19594  015A5C  50E3               	movf	plusw1,w,c
 19595  015A5E  5ADE               	subwfb	postinc2,f,c
 19596  015A60  0EF5               	movlw	-11
 19597  015A62  50E3               	movf	plusw1,w,c
 19598  015A64  5ADE               	subwfb	postinc2,f,c
 19599  015A66                     l6549:
 19600                           
 19601                           ;stkvar	_divisor @ sp[(-2)+-16]
 19602  015A66  90D8               	bcf	status,0,c
 19603  015A68  0EF5               	movlw	-11
 19604  015A6A  32E3               	rrcf	plusw1,f,c
 19605  015A6C  0EF4               	movlw	-12
 19606  015A6E  32E3               	rrcf	plusw1,f,c
 19607  015A70  0EF3               	movlw	-13
 19608  015A72  32E3               	rrcf	plusw1,f,c
 19609  015A74  0EF2               	movlw	-14
 19610  015A76  32E3               	rrcf	plusw1,f,c
 19611  015A78  0EF1               	movlw	-15
 19612  015A7A  32E3               	rrcf	plusw1,f,c
 19613  015A7C  0EF0               	movlw	-16
 19614  015A7E  32E3               	rrcf	plusw1,f,c
 19615  015A80  0EEF               	movlw	-17
 19616  015A82  32E3               	rrcf	plusw1,f,c
 19617  015A84  0EEE               	movlw	-18
 19618  015A86  32E3               	rrcf	plusw1,f,c
 19619                           
 19620                           ;stkvar	_counter @ sp[(-2)+1]
 19621  015A88  0EFF               	movlw	-1
 19622  015A8A  50E3               	movf	plusw1,w,c
 19623  015A8C  6E35               	movwf	btemp^0,c
 19624  015A8E  0E01               	movlw	1
 19625  015A90  5E35               	subwf	btemp^0,f,c
 19626  015A92  0EFF               	movlw	-1
 19627  015A94  0060  F0D7  FFE3   	movff	btemp,plusw1
 19628  015A9A  A4D8               	btfss	status,2,c
 19629  015A9C  D7A4               	goto	u5590
 19630  015A9E                     u5610:
 19631                           
 19632                           ;stkvar	_sign @ sp[(-2)+0]
 19633  015A9E  0EFE               	movlw	-2
 19634  015AA0  50E3               	movf	plusw1,w,c
 19635  015AA2  B4D8               	btfsc	status,2,c
 19636  015AA4  D025               	goto	u5630
 19637                           
 19638                           ;stkvar	_dividend @ sp[(-2)+-8]
 19639                           ;stkvar	_dividend @ sp[(-2)+-8]
 19640  015AA6  0EF6               	movlw	-10
 19641  015AA8  6CE3               	negf	plusw1,c
 19642  015AAA  0EF7               	movlw	-9
 19643  015AAC  1EE3               	comf	plusw1,f,c
 19644  015AAE  0EF8               	movlw	-8
 19645  015AB0  1EE3               	comf	plusw1,f,c
 19646  015AB2  0EF9               	movlw	-7
 19647  015AB4  1EE3               	comf	plusw1,f,c
 19648  015AB6  0EFA               	movlw	-6
 19649  015AB8  1EE3               	comf	plusw1,f,c
 19650  015ABA  0EFB               	movlw	-5
 19651  015ABC  1EE3               	comf	plusw1,f,c
 19652  015ABE  0EFC               	movlw	-4
 19653  015AC0  1EE3               	comf	plusw1,f,c
 19654  015AC2  0EFD               	movlw	-3
 19655  015AC4  1EE3               	comf	plusw1,f,c
 19656  015AC6  E314               	bnc	u5630
 19657  015AC8  0EF7               	movlw	-9
 19658  015ACA  2AE3               	incf	plusw1,f,c
 19659  015ACC  E311               	bnc	u5630
 19660  015ACE  0EF8               	movlw	-8
 19661  015AD0  2AE3               	incf	plusw1,f,c
 19662  015AD2  E30E               	bnc	u5630
 19663  015AD4  0EF9               	movlw	-7
 19664  015AD6  2AE3               	incf	plusw1,f,c
 19665  015AD8  E30B               	bnc	u5630
 19666  015ADA  0EFA               	movlw	-6
 19667  015ADC  2AE3               	incf	plusw1,f,c
 19668  015ADE  E308               	bnc	u5630
 19669  015AE0  0EFB               	movlw	-5
 19670  015AE2  2AE3               	incf	plusw1,f,c
 19671  015AE4  E305               	bnc	u5630
 19672  015AE6  0EFC               	movlw	-4
 19673  015AE8  2AE3               	incf	plusw1,f,c
 19674  015AEA  E302               	bnc	u5630
 19675  015AEC  0EFD               	movlw	-3
 19676  015AEE  2AE3               	incf	plusw1,f,c
 19677  015AF0                     u5630:
 19678                           
 19679                           ;stkvar	_dividend @ sp[(-2)+-8]
 19680  015AF0  0EF6               	movlw	246
 19681  015AF2  24E1               	addwf	fsr1l,w,c
 19682  015AF4  6ED9               	movwf	fsr2l,c
 19683  015AF6  0EFF               	movlw	255
 19684  015AF8  20E2               	addwfc	fsr1h,w,c
 19685  015AFA  6EDA               	movwf	fsr2h,c
 19686                           
 19687                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19688  015AFC  0E08               	movlw	8
 19689  015AFE  6E35               	movwf	btemp^0,c
 19690  015B00  0EF6               	movlw	-10
 19691  015B02                     us564999:
 19692  015B02  006F FF7B FFE3     	movff	postinc2,plusw1
 19693  015B08  28E8               	incf	wreg,w,c
 19694  015B0A  2E35               	decfsz	btemp^0,f,c
 19695  015B0C  D7FA               	bra	us564999
 19696                           
 19697                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19698  015B0E  52E5               	movf	postdec1,f,c
 19699  015B10  52E5               	movf	postdec1,f,c
 19700  015B12  0012               	return		;funcret
 19701  015B14                     __end_of___aomod:
 19702                           	opt callstack 0
 19703                           
 19704 ;; *************** function ___aodiv *****************
 19705 ;; Defined at:
 19706 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19707 ;; Parameters:    Size  Location     Type
 19708 ;;  dividend        8  [STACK] long long 
 19709 ;;  divisor         8  [STACK] long long 
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;  quotient        8  [STACK] long long 
 19712 ;;  sign            1  [STACK] unsigned char 
 19713 ;;  counter         1  [STACK] unsigned char 
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  8  [STACK] long long 
 19716 ;; Registers used:
 19717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19718 ;; Tracked objects:
 19719 ;;		On entry : 0/2
 19720 ;;		On exit  : 0/0
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;Total ram usage:        0 bytes
 19728 ;; Hardware stack levels used:    1
 19729 ;; Hardware stack levels required when called:    6
 19730 ;; This function calls:
 19731 ;;		Nothing
 19732 ;; This function is called by:
 19733 ;;		_dtoa
 19734 ;; This function uses a reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text63
 19738  0153E0                     __ptext63:
 19739                           	opt callstack 0
 19740  0153E0                     ___aodiv:
 19741                           	opt callstack 0
 19742                           
 19743                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19744  0153E0  0E0A               	movlw	10
 19745  0153E2  26E1               	addwf	fsr1l,f,c
 19746  0153E4  0E00               	movlw	0
 19747  0153E6  22E2               	addwfc	fsr1h,f,c
 19748                           
 19749                           ;stkvar	_sign @ sp[(-10)+8]
 19750                           
 19751                           ;incstack = 0
 19752  0153E8  0EFE               	movlw	-2
 19753  0153EA  6AE3               	clrf	plusw1,c
 19754                           
 19755                           ;stkvar	_divisor @ sp[(-10)+-16]
 19756  0153EC  0EED               	movlw	-19
 19757  0153EE  AEE3               	btfss	plusw1,7,c
 19758  0153F0  D028               	goto	l6489
 19759                           
 19760                           ;stkvar	_divisor @ sp[(-10)+-16]
 19761                           ;stkvar	_divisor @ sp[(-10)+-16]
 19762  0153F2  0EE6               	movlw	-26
 19763  0153F4  6CE3               	negf	plusw1,c
 19764  0153F6  0EE7               	movlw	-25
 19765  0153F8  1EE3               	comf	plusw1,f,c
 19766  0153FA  0EE8               	movlw	-24
 19767  0153FC  1EE3               	comf	plusw1,f,c
 19768  0153FE  0EE9               	movlw	-23
 19769  015400  1EE3               	comf	plusw1,f,c
 19770  015402  0EEA               	movlw	-22
 19771  015404  1EE3               	comf	plusw1,f,c
 19772  015406  0EEB               	movlw	-21
 19773  015408  1EE3               	comf	plusw1,f,c
 19774  01540A  0EEC               	movlw	-20
 19775  01540C  1EE3               	comf	plusw1,f,c
 19776  01540E  0EED               	movlw	-19
 19777  015410  1EE3               	comf	plusw1,f,c
 19778  015412  E314               	bnc	u5430
 19779  015414  0EE7               	movlw	-25
 19780  015416  2AE3               	incf	plusw1,f,c
 19781  015418  E311               	bnc	u5430
 19782  01541A  0EE8               	movlw	-24
 19783  01541C  2AE3               	incf	plusw1,f,c
 19784  01541E  E30E               	bnc	u5430
 19785  015420  0EE9               	movlw	-23
 19786  015422  2AE3               	incf	plusw1,f,c
 19787  015424  E30B               	bnc	u5430
 19788  015426  0EEA               	movlw	-22
 19789  015428  2AE3               	incf	plusw1,f,c
 19790  01542A  E308               	bnc	u5430
 19791  01542C  0EEB               	movlw	-21
 19792  01542E  2AE3               	incf	plusw1,f,c
 19793  015430  E305               	bnc	u5430
 19794  015432  0EEC               	movlw	-20
 19795  015434  2AE3               	incf	plusw1,f,c
 19796  015436  E302               	bnc	u5430
 19797  015438  0EED               	movlw	-19
 19798  01543A  2AE3               	incf	plusw1,f,c
 19799  01543C                     u5430:
 19800                           
 19801                           ;stkvar	_sign @ sp[(-10)+8]
 19802  01543C  0EFE               	movlw	-2
 19803  01543E  6AE3               	clrf	plusw1,c
 19804  015440  2AE3               	incf	plusw1,f,c
 19805  015442                     l6489:
 19806                           
 19807                           ;stkvar	_dividend @ sp[(-10)+-8]
 19808  015442  0EF5               	movlw	-11
 19809  015444  AEE3               	btfss	plusw1,7,c
 19810  015446  D027               	goto	l6495
 19811                           
 19812                           ;stkvar	_dividend @ sp[(-10)+-8]
 19813                           ;stkvar	_dividend @ sp[(-10)+-8]
 19814  015448  0EEE               	movlw	-18
 19815  01544A  6CE3               	negf	plusw1,c
 19816  01544C  0EEF               	movlw	-17
 19817  01544E  1EE3               	comf	plusw1,f,c
 19818  015450  0EF0               	movlw	-16
 19819  015452  1EE3               	comf	plusw1,f,c
 19820  015454  0EF1               	movlw	-15
 19821  015456  1EE3               	comf	plusw1,f,c
 19822  015458  0EF2               	movlw	-14
 19823  01545A  1EE3               	comf	plusw1,f,c
 19824  01545C  0EF3               	movlw	-13
 19825  01545E  1EE3               	comf	plusw1,f,c
 19826  015460  0EF4               	movlw	-12
 19827  015462  1EE3               	comf	plusw1,f,c
 19828  015464  0EF5               	movlw	-11
 19829  015466  1EE3               	comf	plusw1,f,c
 19830  015468  E314               	bnc	u5450
 19831  01546A  0EEF               	movlw	-17
 19832  01546C  2AE3               	incf	plusw1,f,c
 19833  01546E  E311               	bnc	u5450
 19834  015470  0EF0               	movlw	-16
 19835  015472  2AE3               	incf	plusw1,f,c
 19836  015474  E30E               	bnc	u5450
 19837  015476  0EF1               	movlw	-15
 19838  015478  2AE3               	incf	plusw1,f,c
 19839  01547A  E30B               	bnc	u5450
 19840  01547C  0EF2               	movlw	-14
 19841  01547E  2AE3               	incf	plusw1,f,c
 19842  015480  E308               	bnc	u5450
 19843  015482  0EF3               	movlw	-13
 19844  015484  2AE3               	incf	plusw1,f,c
 19845  015486  E305               	bnc	u5450
 19846  015488  0EF4               	movlw	-12
 19847  01548A  2AE3               	incf	plusw1,f,c
 19848  01548C  E302               	bnc	u5450
 19849  01548E  0EF5               	movlw	-11
 19850  015490  2AE3               	incf	plusw1,f,c
 19851  015492                     u5450:
 19852                           
 19853                           ;stkvar	_sign @ sp[(-10)+8]
 19854  015492  0EFE               	movlw	-2
 19855  015494  70E3               	btg	plusw1,0,c
 19856  015496                     l6495:
 19857                           
 19858                           ;stkvar	_quotient @ sp[(-10)+0]
 19859  015496  0E07               	movlw	7
 19860  015498  6E35               	movwf	btemp^0,c
 19861  01549A  0EF6               	movlw	-10
 19862  01549C                     u5461:
 19863  01549C  6AE3               	clrf	plusw1,c
 19864  01549E  2AE8               	incf	wreg,f,c
 19865  0154A0  0635               	decf	btemp^0,f,c
 19866  0154A2  E2FC               	bc	u5461
 19867                           
 19868                           ;stkvar	_divisor @ sp[(-10)+-16]
 19869  0154A4  0EE6               	movlw	-26
 19870  0154A6  50E3               	movf	plusw1,w,c
 19871  0154A8  E116               	bnz	u5470
 19872  0154AA  0EE7               	movlw	-25
 19873  0154AC  50E3               	movf	plusw1,w,c
 19874  0154AE  E113               	bnz	u5470
 19875  0154B0  0EE8               	movlw	-24
 19876  0154B2  50E3               	movf	plusw1,w,c
 19877  0154B4  E110               	bnz	u5470
 19878  0154B6  0EE9               	movlw	-23
 19879  0154B8  50E3               	movf	plusw1,w,c
 19880  0154BA  E10D               	bnz	u5470
 19881  0154BC  0EEA               	movlw	-22
 19882  0154BE  50E3               	movf	plusw1,w,c
 19883  0154C0  E10A               	bnz	u5470
 19884  0154C2  0EEB               	movlw	-21
 19885  0154C4  50E3               	movf	plusw1,w,c
 19886  0154C6  E107               	bnz	u5470
 19887  0154C8  0EEC               	movlw	-20
 19888  0154CA  50E3               	movf	plusw1,w,c
 19889  0154CC  E104               	bnz	u5470
 19890  0154CE  0EED               	movlw	-19
 19891  0154D0  50E3               	movf	plusw1,w,c
 19892  0154D2  B4D8               	btfsc	status,2,c
 19893  0154D4  D088               	goto	u5500
 19894  0154D6                     u5470:
 19895                           
 19896                           ;stkvar	_counter @ sp[(-10)+9]
 19897  0154D6  0EFF               	movlw	-1
 19898  0154D8  6AE3               	clrf	plusw1,c
 19899  0154DA  D012               	goto	L21
 19900  0154DC                     l6501:
 19901                           
 19902                           ;stkvar	_divisor @ sp[(-10)+-16]
 19903  0154DC  90D8               	bcf	status,0,c
 19904  0154DE  0EE6               	movlw	-26
 19905  0154E0  36E3               	rlcf	plusw1,f,c
 19906  0154E2  0EE7               	movlw	-25
 19907  0154E4  36E3               	rlcf	plusw1,f,c
 19908  0154E6  0EE8               	movlw	-24
 19909  0154E8  36E3               	rlcf	plusw1,f,c
 19910  0154EA  0EE9               	movlw	-23
 19911  0154EC  36E3               	rlcf	plusw1,f,c
 19912  0154EE  0EEA               	movlw	-22
 19913  0154F0  36E3               	rlcf	plusw1,f,c
 19914  0154F2  0EEB               	movlw	-21
 19915  0154F4  36E3               	rlcf	plusw1,f,c
 19916  0154F6  0EEC               	movlw	-20
 19917  0154F8  36E3               	rlcf	plusw1,f,c
 19918  0154FA  0EED               	movlw	-19
 19919  0154FC  36E3               	rlcf	plusw1,f,c
 19920                           
 19921                           ;stkvar	_counter @ sp[(-10)+9]
 19922  0154FE  0EFF               	movlw	-1
 19923  015500                     L21:
 19924  015500  2AE3               	incf	plusw1,f,c
 19925                           
 19926                           ;stkvar	_divisor @ sp[(-10)+-16]
 19927  015502  0EED               	movlw	-19
 19928  015504  AEE3               	btfss	plusw1,7,c
 19929  015506  D7EA               	goto	l6501
 19930  015508                     u5480:
 19931                           
 19932                           ;stkvar	_quotient @ sp[(-10)+0]
 19933  015508  90D8               	bcf	status,0,c
 19934  01550A  0EF6               	movlw	-10
 19935  01550C  36E3               	rlcf	plusw1,f,c
 19936  01550E  0EF7               	movlw	-9
 19937  015510  36E3               	rlcf	plusw1,f,c
 19938  015512  0EF8               	movlw	-8
 19939  015514  36E3               	rlcf	plusw1,f,c
 19940  015516  0EF9               	movlw	-7
 19941  015518  36E3               	rlcf	plusw1,f,c
 19942  01551A  0EFA               	movlw	-6
 19943  01551C  36E3               	rlcf	plusw1,f,c
 19944  01551E  0EFB               	movlw	-5
 19945  015520  36E3               	rlcf	plusw1,f,c
 19946  015522  0EFC               	movlw	-4
 19947  015524  36E3               	rlcf	plusw1,f,c
 19948  015526  0EFD               	movlw	-3
 19949  015528  36E3               	rlcf	plusw1,f,c
 19950                           
 19951                           ;stkvar	_divisor @ sp[(-10)+-16]
 19952                           ;stkvar	_dividend @ sp[(-10)+-8]
 19953  01552A  50E1               	movf	fsr1l,w,c
 19954  01552C  0FEE               	addlw	-18
 19955  01552E  6ED9               	movwf	fsr2l,c
 19956  015530  50E2               	movf	fsr1h,w,c
 19957  015532  6EDA               	movwf	fsr2h,c
 19958  015534  0EFF               	movlw	255
 19959  015536  22DA               	addwfc	fsr2h,f,c
 19960  015538  0EE6               	movlw	-26
 19961  01553A  50E3               	movf	plusw1,w,c
 19962  01553C  5CDE               	subwf	postinc2,w,c
 19963  01553E  0EE7               	movlw	-25
 19964  015540  50E3               	movf	plusw1,w,c
 19965  015542  58DE               	subwfb	postinc2,w,c
 19966  015544  0EE8               	movlw	-24
 19967  015546  50E3               	movf	plusw1,w,c
 19968  015548  58DE               	subwfb	postinc2,w,c
 19969  01554A  0EE9               	movlw	-23
 19970  01554C  50E3               	movf	plusw1,w,c
 19971  01554E  58DE               	subwfb	postinc2,w,c
 19972  015550  0EEA               	movlw	-22
 19973  015552  50E3               	movf	plusw1,w,c
 19974  015554  58DE               	subwfb	postinc2,w,c
 19975  015556  0EEB               	movlw	-21
 19976  015558  50E3               	movf	plusw1,w,c
 19977  01555A  58DE               	subwfb	postinc2,w,c
 19978  01555C  0EEC               	movlw	-20
 19979  01555E  50E3               	movf	plusw1,w,c
 19980  015560  58DE               	subwfb	postinc2,w,c
 19981  015562  0EED               	movlw	-19
 19982  015564  50E3               	movf	plusw1,w,c
 19983  015566  58DE               	subwfb	postinc2,w,c
 19984  015568  A0D8               	btfss	status,0,c
 19985  01556A  D021               	goto	l6513
 19986                           
 19987                           ;stkvar	_divisor @ sp[(-10)+-16]
 19988                           ;stkvar	_dividend @ sp[(-10)+-8]
 19989  01556C  50E1               	movf	fsr1l,w,c
 19990  01556E  0FEE               	addlw	-18
 19991  015570  6ED9               	movwf	fsr2l,c
 19992  015572  50E2               	movf	fsr1h,w,c
 19993  015574  6EDA               	movwf	fsr2h,c
 19994  015576  0EFF               	movlw	255
 19995  015578  22DA               	addwfc	fsr2h,f,c
 19996  01557A  0EE6               	movlw	-26
 19997  01557C  50E3               	movf	plusw1,w,c
 19998  01557E  5EDE               	subwf	postinc2,f,c
 19999  015580  0EE7               	movlw	-25
 20000  015582  50E3               	movf	plusw1,w,c
 20001  015584  5ADE               	subwfb	postinc2,f,c
 20002  015586  0EE8               	movlw	-24
 20003  015588  50E3               	movf	plusw1,w,c
 20004  01558A  5ADE               	subwfb	postinc2,f,c
 20005  01558C  0EE9               	movlw	-23
 20006  01558E  50E3               	movf	plusw1,w,c
 20007  015590  5ADE               	subwfb	postinc2,f,c
 20008  015592  0EEA               	movlw	-22
 20009  015594  50E3               	movf	plusw1,w,c
 20010  015596  5ADE               	subwfb	postinc2,f,c
 20011  015598  0EEB               	movlw	-21
 20012  01559A  50E3               	movf	plusw1,w,c
 20013  01559C  5ADE               	subwfb	postinc2,f,c
 20014  01559E  0EEC               	movlw	-20
 20015  0155A0  50E3               	movf	plusw1,w,c
 20016  0155A2  5ADE               	subwfb	postinc2,f,c
 20017  0155A4  0EED               	movlw	-19
 20018  0155A6  50E3               	movf	plusw1,w,c
 20019  0155A8  5ADE               	subwfb	postinc2,f,c
 20020                           
 20021                           ;stkvar	_quotient @ sp[(-10)+0]
 20022  0155AA  0EF6               	movlw	-10
 20023  0155AC  80E3               	bsf	plusw1,0,c
 20024  0155AE                     l6513:
 20025                           
 20026                           ;stkvar	_divisor @ sp[(-10)+-16]
 20027  0155AE  90D8               	bcf	status,0,c
 20028  0155B0  0EED               	movlw	-19
 20029  0155B2  32E3               	rrcf	plusw1,f,c
 20030  0155B4  0EEC               	movlw	-20
 20031  0155B6  32E3               	rrcf	plusw1,f,c
 20032  0155B8  0EEB               	movlw	-21
 20033  0155BA  32E3               	rrcf	plusw1,f,c
 20034  0155BC  0EEA               	movlw	-22
 20035  0155BE  32E3               	rrcf	plusw1,f,c
 20036  0155C0  0EE9               	movlw	-23
 20037  0155C2  32E3               	rrcf	plusw1,f,c
 20038  0155C4  0EE8               	movlw	-24
 20039  0155C6  32E3               	rrcf	plusw1,f,c
 20040  0155C8  0EE7               	movlw	-25
 20041  0155CA  32E3               	rrcf	plusw1,f,c
 20042  0155CC  0EE6               	movlw	-26
 20043  0155CE  32E3               	rrcf	plusw1,f,c
 20044                           
 20045                           ;stkvar	_counter @ sp[(-10)+9]
 20046  0155D0  0EFF               	movlw	-1
 20047  0155D2  50E3               	movf	plusw1,w,c
 20048  0155D4  6E35               	movwf	btemp^0,c
 20049  0155D6  0E01               	movlw	1
 20050  0155D8  5E35               	subwf	btemp^0,f,c
 20051  0155DA  0EFF               	movlw	-1
 20052  0155DC  0060  F0D7  FFE3   	movff	btemp,plusw1
 20053  0155E2  A4D8               	btfss	status,2,c
 20054  0155E4  D791               	goto	u5480
 20055  0155E6                     u5500:
 20056                           
 20057                           ;stkvar	_sign @ sp[(-10)+8]
 20058  0155E6  0EFE               	movlw	-2
 20059  0155E8  50E3               	movf	plusw1,w,c
 20060  0155EA  B4D8               	btfsc	status,2,c
 20061  0155EC  D025               	goto	u5520
 20062                           
 20063                           ;stkvar	_quotient @ sp[(-10)+0]
 20064                           ;stkvar	_quotient @ sp[(-10)+0]
 20065  0155EE  0EF6               	movlw	-10
 20066  0155F0  6CE3               	negf	plusw1,c
 20067  0155F2  0EF7               	movlw	-9
 20068  0155F4  1EE3               	comf	plusw1,f,c
 20069  0155F6  0EF8               	movlw	-8
 20070  0155F8  1EE3               	comf	plusw1,f,c
 20071  0155FA  0EF9               	movlw	-7
 20072  0155FC  1EE3               	comf	plusw1,f,c
 20073  0155FE  0EFA               	movlw	-6
 20074  015600  1EE3               	comf	plusw1,f,c
 20075  015602  0EFB               	movlw	-5
 20076  015604  1EE3               	comf	plusw1,f,c
 20077  015606  0EFC               	movlw	-4
 20078  015608  1EE3               	comf	plusw1,f,c
 20079  01560A  0EFD               	movlw	-3
 20080  01560C  1EE3               	comf	plusw1,f,c
 20081  01560E  E314               	bnc	u5520
 20082  015610  0EF7               	movlw	-9
 20083  015612  2AE3               	incf	plusw1,f,c
 20084  015614  E311               	bnc	u5520
 20085  015616  0EF8               	movlw	-8
 20086  015618  2AE3               	incf	plusw1,f,c
 20087  01561A  E30E               	bnc	u5520
 20088  01561C  0EF9               	movlw	-7
 20089  01561E  2AE3               	incf	plusw1,f,c
 20090  015620  E30B               	bnc	u5520
 20091  015622  0EFA               	movlw	-6
 20092  015624  2AE3               	incf	plusw1,f,c
 20093  015626  E308               	bnc	u5520
 20094  015628  0EFB               	movlw	-5
 20095  01562A  2AE3               	incf	plusw1,f,c
 20096  01562C  E305               	bnc	u5520
 20097  01562E  0EFC               	movlw	-4
 20098  015630  2AE3               	incf	plusw1,f,c
 20099  015632  E302               	bnc	u5520
 20100  015634  0EFD               	movlw	-3
 20101  015636  2AE3               	incf	plusw1,f,c
 20102  015638                     u5520:
 20103                           
 20104                           ;stkvar	_quotient @ sp[(-10)+0]
 20105  015638  0EF6               	movlw	246
 20106  01563A  24E1               	addwf	fsr1l,w,c
 20107  01563C  6ED9               	movwf	fsr2l,c
 20108  01563E  0EFF               	movlw	255
 20109  015640  20E2               	addwfc	fsr1h,w,c
 20110  015642  6EDA               	movwf	fsr2h,c
 20111                           
 20112                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20113  015644  0E08               	movlw	8
 20114  015646  6E35               	movwf	btemp^0,c
 20115  015648  0EEE               	movlw	-18
 20116  01564A                     us553999:
 20117  01564A  006F FF7B FFE3     	movff	postinc2,plusw1
 20118  015650  28E8               	incf	wreg,w,c
 20119  015652  2E35               	decfsz	btemp^0,f,c
 20120  015654  D7FA               	bra	us553999
 20121                           
 20122                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20123  015656  0EF6               	movlw	246
 20124  015658  26E1               	addwf	fsr1l,f,c
 20125  01565A  0EFF               	movlw	255
 20126  01565C  22E2               	addwfc	fsr1h,f,c
 20127  01565E  0012               	return		;funcret
 20128  015660                     __end_of___aodiv:
 20129                           	opt callstack 0
 20130                           
 20131 ;; *************** function _ctoa *****************
 20132 ;; Defined at:
 20133 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20136 ;;		 -> f(6), NULL(0), 
 20137 ;;  c               1  [STACK] unsigned char 
 20138 ;; Auto vars:     Size  Location     Type
 20139 ;;  w               2  [STACK] int 
 20140 ;;  l               2    0        int 
 20141 ;; Return value:  Size  Location     Type
 20142 ;;                  2  [STACK] int 
 20143 ;; Registers used:
 20144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20145 ;; Tracked objects:
 20146 ;;		On entry : 0/4
 20147 ;;		On exit  : 0/0
 20148 ;;		Unchanged: 0/0
 20149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20154 ;;Total ram usage:        0 bytes
 20155 ;; Hardware stack levels used:    1
 20156 ;; Hardware stack levels required when called:   11
 20157 ;; This function calls:
 20158 ;;		_pad
 20159 ;; This function is called by:
 20160 ;;		_vfpfcnvrt
 20161 ;; This function uses a reentrant model
 20162 ;;
 20163                           
 20164                           	psect	text64
 20165  017B0A                     __ptext64:
 20166                           	opt callstack 0
 20167  017B0A                     _ctoa:
 20168                           	opt callstack 0
 20169                           
 20170                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20171  017B0A  52E6               	movf	postinc1,f,c
 20172  017B0C  52E6               	movf	postinc1,f,c
 20173                           
 20174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20175                           
 20176                           ;incstack = 0
 20177  017B0E  501E               	movf	_width^0,w,c
 20178  017B10  101F               	iorwf	(_width+1)^0,w,c
 20179  017B12  A4D8               	btfss	status,2,c
 20180  017B14  D009               	goto	l9287
 20181                           
 20182                           ;stkvar	_w @ sp[(-2)+0]
 20183  017B16  0EFE               	movlw	-2
 20184  017B18  0060  F07B  FFE3   	movff	_width,plusw1
 20185  017B1E  0EFF               	movlw	-1
 20186  017B20  0060  F07F  FFE3   	movff	_width+1,plusw1
 20187  017B26  D016               	goto	l9289
 20188  017B28                     l9287:
 20189  017B28  0EFF               	movlw	255
 20190  017B2A  6E3F               	movwf	(btemp+10)^0,c
 20191  017B2C  0EFF               	movlw	255
 20192  017B2E  6E40               	movwf	(btemp+11)^0,c
 20193  017B30  0060  F078  F03D   	movff	_width,btemp+8
 20194  017B36  0060  F07C  F03E   	movff	_width+1,btemp+9
 20195  017B3C  503F               	movf	(btemp+10)^0,w,c
 20196  017B3E  263D               	addwf	(btemp+8)^0,f,c
 20197  017B40  5040               	movf	(btemp+11)^0,w,c
 20198  017B42  223E               	addwfc	(btemp+9)^0,f,c
 20199                           
 20200                           ;stkvar	_w @ sp[(-2)+0]
 20201  017B44  0EFE               	movlw	-2
 20202  017B46  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 20203  017B4C  0EFF               	movlw	-1
 20204  017B4E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 20205  017B54                     l9289:
 20206                           
 20207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20208                           ;stkvar	_c @ sp[(-2)+-3]
 20209  017B54  0EFB               	movlw	-5
 20210  017B56  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20211                           
 20212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20213  017B5C  0102               	movlb	2	; () banked
 20214  017B5E  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20215                           
 20216                           ; BSR set to: 2
 20217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20218                           ;stkvar	_w @ sp[(-2)+0]
 20219  017B60  0EFE               	movlw	-2
 20220  017B62  006F FF8F FFE6     	movff	plusw1,postinc1
 20221  017B68  006F FF8F FFE6     	movff	plusw1,postinc1
 20222  017B6E  0EAC               	movlw	low _dbuf
 20223  017B70  6EE6               	movwf	postinc1,c
 20224  017B72  0E02               	movlw	high _dbuf
 20225  017B74  6EE6               	movwf	postinc1,c
 20226                           
 20227                           ;stkvar	_fp @ sp[(-6)+-2]
 20228  017B76  0EF8               	movlw	-8
 20229  017B78  006F FF8F FFE6     	movff	plusw1,postinc1
 20230  017B7E  006F FF8F FFE6     	movff	plusw1,postinc1
 20231  017B84  EC76  F0B7         	call	_pad	;wreg free
 20232                           
 20233                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20234  017B88  0EFB               	movlw	251
 20235  017B8A  26E1               	addwf	fsr1l,f,c
 20236  017B8C  0EFF               	movlw	255
 20237  017B8E  22E2               	addwfc	fsr1h,f,c
 20238  017B90  0012               	return		;funcret
 20239  017B92                     __end_of_ctoa:
 20240                           	opt callstack 0
 20241                           
 20242 ;; *************** function _pad *****************
 20243 ;; Defined at:
 20244 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20247 ;;		 -> f(6), NULL(0), 
 20248 ;;  buf             2  [STACK] PTR unsigned char 
 20249 ;;		 -> dbuf(80), 
 20250 ;;  p               2  [STACK] int 
 20251 ;; Auto vars:     Size  Location     Type
 20252 ;;  w               2  [STACK] int 
 20253 ;;  i               2  [STACK] int 
 20254 ;; Return value:  Size  Location     Type
 20255 ;;                  2  [STACK] int 
 20256 ;; Registers used:
 20257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20258 ;; Tracked objects:
 20259 ;;		On entry : 0/2
 20260 ;;		On exit  : 0/0
 20261 ;;		Unchanged: 0/0
 20262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;Total ram usage:        0 bytes
 20268 ;; Hardware stack levels used:    1
 20269 ;; Hardware stack levels required when called:   10
 20270 ;; This function calls:
 20271 ;;		_fputc
 20272 ;;		_fputs
 20273 ;;		_strlen
 20274 ;; This function is called by:
 20275 ;;		_ctoa
 20276 ;;		_dtoa
 20277 ;;		_efgtoa
 20278 ;;		_utoa
 20279 ;;		_xtoa
 20280 ;; This function uses a reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text65
 20284  016EEC                     __ptext65:
 20285                           	opt callstack 0
 20286  016EEC                     _pad:
 20287                           	opt callstack 0
 20288                           
 20289                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20290  016EEC  52E6               	movf	postinc1,f,c
 20291  016EEE  52E6               	movf	postinc1,f,c
 20292  016EF0  52E6               	movf	postinc1,f,c
 20293  016EF2  52E6               	movf	postinc1,f,c
 20294                           
 20295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20296                           
 20297                           ;incstack = 0
 20298  016EF4  A022               	btfss	_flags^0,0,c
 20299  016EF6  D010               	goto	l9261
 20300                           
 20301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20302                           ;stkvar	_fp @ sp[(-4)+-2]
 20303  016EF8  0EFA               	movlw	-6
 20304  016EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 20305  016F00  006F FF8F FFE6     	movff	plusw1,postinc1
 20306                           
 20307                           ;stkvar	_buf @ sp[(-6)+-4]
 20308  016F06  0EF6               	movlw	-10
 20309  016F08  006F FF8F FFE6     	movff	plusw1,postinc1
 20310  016F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 20311  016F14  ECA8  F0BC         	call	_fputs	;wreg free
 20312  016F18                     l9261:
 20313                           
 20314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20315                           ;stkvar	_p @ sp[(-4)+-6]
 20316  016F18  0EF7               	movlw	-9
 20317  016F1A  BEE3               	btfsc	plusw1,7,c
 20318  016F1C  D011               	goto	l9265
 20319                           
 20320                           ;stkvar	_p @ sp[(-4)+-6]
 20321                           ;stkvar	_w @ sp[(-4)+0]
 20322  016F1E  0EF6               	movlw	-10
 20323  016F20  006F FF8C  F035    	movff	plusw1,btemp
 20324  016F26  0EFC               	movlw	-4
 20325  016F28  0060  F0D7  FFE3   	movff	btemp,plusw1
 20326  016F2E  0EF7               	movlw	-9
 20327  016F30  006F FF8C  F035    	movff	plusw1,btemp
 20328  016F36  0EFD               	movlw	-3
 20329  016F38  0060  F0D7  FFE3   	movff	btemp,plusw1
 20330  016F3E  D004               	goto	l1751
 20331  016F40                     l9265:
 20332                           
 20333                           ;stkvar	_w @ sp[(-4)+0]
 20334  016F40  0EFC               	movlw	-4
 20335  016F42  6AE3               	clrf	plusw1,c
 20336  016F44  0EFD               	movlw	-3
 20337  016F46  6AE3               	clrf	plusw1,c
 20338  016F48                     l1751:
 20339                           
 20340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20341                           ;stkvar	_i @ sp[(-4)+2]
 20342  016F48  0EFE               	movlw	-2
 20343  016F4A  6AE3               	clrf	plusw1,c
 20344  016F4C  0EFF               	movlw	-1
 20345  016F4E  6AE3               	clrf	plusw1,c
 20346                           
 20347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20348  016F50  D01E               	goto	l9271
 20349  016F52                     l9267:
 20350                           
 20351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20352                           ;stkvar	_fp @ sp[(-4)+-2]
 20353  016F52  0EFA               	movlw	-6
 20354  016F54  006F FF8F FFE6     	movff	plusw1,postinc1
 20355  016F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20356  016F60  0E20               	movlw	32
 20357  016F62  6EE6               	movwf	postinc1,c
 20358  016F64  0E00               	movlw	0
 20359  016F66  6EE6               	movwf	postinc1,c
 20360  016F68  EC58  F0B6         	call	_fputc	;wreg free
 20361                           
 20362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20363                           ;stkvar	_i @ sp[(-4)+2]
 20364  016F6C  0EFE               	movlw	-2
 20365  016F6E  50E3               	movf	plusw1,w,c
 20366  016F70  0F01               	addlw	1
 20367  016F72  6E35               	movwf	btemp^0,c
 20368  016F74  0EFE               	movlw	-2
 20369  016F76  0060  F0D7  FFE3   	movff	btemp,plusw1
 20370  016F7C  6A35               	clrf	btemp^0,c
 20371  016F7E  0EFF               	movlw	-1
 20372  016F80  50E3               	movf	plusw1,w,c
 20373  016F82  2035               	addwfc	btemp^0,w,c
 20374  016F84  6E35               	movwf	btemp^0,c
 20375  016F86  0EFF               	movlw	-1
 20376  016F88  0060  F0D7  FFE3   	movff	btemp,plusw1
 20377  016F8E                     l9271:
 20378                           
 20379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20380                           ;stkvar	_w @ sp[(-4)+0]
 20381                           ;stkvar	_i @ sp[(-4)+2]
 20382  016F8E  50E1               	movf	fsr1l,w,c
 20383  016F90  0FFE               	addlw	-2
 20384  016F92  6ED9               	movwf	fsr2l,c
 20385  016F94  50E2               	movf	fsr1h,w,c
 20386  016F96  6EDA               	movwf	fsr2h,c
 20387  016F98  0EFF               	movlw	255
 20388  016F9A  22DA               	addwfc	fsr2h,f,c
 20389  016F9C  0EFC               	movlw	-4
 20390  016F9E  50E3               	movf	plusw1,w,c
 20391  016FA0  5CDE               	subwf	postinc2,w,c
 20392  016FA2  50DE               	movf	postinc2,w,c
 20393  016FA4  0A80               	xorlw	128
 20394  016FA6  6E35               	movwf	btemp^0,c
 20395  016FA8  0EFD               	movlw	-3
 20396  016FAA  50E3               	movf	plusw1,w,c
 20397  016FAC  0A80               	xorlw	128
 20398  016FAE  5835               	subwfb	btemp^0,w,c
 20399  016FB0  A0D8               	btfss	status,0,c
 20400  016FB2  D7CF               	goto	l9267
 20401                           
 20402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20403  016FB4  B022               	btfsc	_flags^0,0,c
 20404  016FB6  D010               	goto	l9275
 20405                           
 20406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20407                           ;stkvar	_fp @ sp[(-4)+-2]
 20408  016FB8  0EFA               	movlw	-6
 20409  016FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20410  016FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20411                           
 20412                           ;stkvar	_buf @ sp[(-6)+-4]
 20413  016FC6  0EF6               	movlw	-10
 20414  016FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20415  016FCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20416  016FD4  ECA8  F0BC         	call	_fputs	;wreg free
 20417  016FD8                     l9275:
 20418                           
 20419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20420                           ;stkvar	_w @ sp[(-4)+0]
 20421                           ;stkvar	_buf @ sp[(-4)+-4]
 20422  016FD8  0EF8               	movlw	-8
 20423  016FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20424  016FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20425  016FE6  EC0A  F0BC         	call	_strlen	;wreg free
 20426  016FEA  0EFC               	movlw	-4
 20427  016FEC  50E3               	movf	plusw1,w,c
 20428  016FEE  2635               	addwf	btemp^0,f,c
 20429  016FF0  0EFD               	movlw	-3
 20430  016FF2  50E3               	movf	plusw1,w,c
 20431  016FF4  2236               	addwfc	(btemp+1)^0,f,c
 20432                           
 20433                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20434  016FF6  0EF6               	movlw	246
 20435  016FF8  26E1               	addwf	fsr1l,f,c
 20436  016FFA  0EFF               	movlw	255
 20437  016FFC  22E2               	addwfc	fsr1h,f,c
 20438  016FFE  0012               	return		;funcret
 20439  017000                     __end_of_pad:
 20440                           	opt callstack 0
 20441                           
 20442 ;; *************** function _strlen *****************
 20443 ;; Defined at:
 20444 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20445 ;; Parameters:    Size  Location     Type
 20446 ;;  s               2  [STACK] PTR const unsigned char 
 20447 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20448 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20449 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20450 ;; Auto vars:     Size  Location     Type
 20451 ;;  a               2  [STACK] PTR const unsigned char 
 20452 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20453 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20454 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  2  [STACK] unsigned int 
 20457 ;; Registers used:
 20458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20459 ;; Tracked objects:
 20460 ;;		On entry : 0/0
 20461 ;;		On exit  : 0/0
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20468 ;;Total ram usage:        0 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:    6
 20471 ;; This function calls:
 20472 ;;		Nothing
 20473 ;; This function is called by:
 20474 ;;		_eaDogM_WriteString
 20475 ;;		_pad
 20476 ;;		_stoa
 20477 ;; This function uses a reentrant model
 20478 ;;
 20479                           
 20480                           	psect	text66
 20481  017814                     __ptext66:
 20482                           	opt callstack 0
 20483  017814                     _strlen:
 20484                           	opt callstack 0
 20485                           
 20486                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20487  017814  52E6               	movf	postinc1,f,c
 20488  017816  52E6               	movf	postinc1,f,c
 20489                           
 20490                           ;stkvar	_s @ sp[(-2)+-2]
 20491                           
 20492                           ;incstack = 0
 20493  017818  0EFC               	movlw	-4
 20494  01781A  006F FF8C  F03F    	movff	plusw1,btemp+10
 20495  017820  0EFD               	movlw	-3
 20496  017822  006F FF8C  F040    	movff	plusw1,btemp+11
 20497                           
 20498                           ;stkvar	_a @ sp[(-2)+0]
 20499  017828  0EFF               	movlw	-1
 20500  01782A  0060  F103  FFE3   	movff	btemp+11,plusw1
 20501  017830  0EFE               	movlw	-2
 20502  017832  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 20503  017838  D011               	goto	l6107
 20504  01783A                     l6105:
 20505                           
 20506                           ;stkvar	_s @ sp[(-2)+-2]
 20507  01783A  0EFC               	movlw	-4
 20508  01783C  50E3               	movf	plusw1,w,c
 20509  01783E  0F01               	addlw	1
 20510  017840  6E35               	movwf	btemp^0,c
 20511  017842  0EFC               	movlw	-4
 20512  017844  0060  F0D7  FFE3   	movff	btemp,plusw1
 20513  01784A  6A35               	clrf	btemp^0,c
 20514  01784C  0EFD               	movlw	-3
 20515  01784E  50E3               	movf	plusw1,w,c
 20516  017850  2035               	addwfc	btemp^0,w,c
 20517  017852  6E35               	movwf	btemp^0,c
 20518  017854  0EFD               	movlw	-3
 20519  017856  0060  F0D7  FFE3   	movff	btemp,plusw1
 20520  01785C                     l6107:
 20521                           
 20522                           ;stkvar	_s @ sp[(-2)+-2]
 20523  01785C  0EFC               	movlw	-4
 20524  01785E  006F FF8F FFF6     	movff	plusw1,tblptrl
 20525  017864  0EFD               	movlw	-3
 20526  017866  006F FF8F FFF7     	movff	plusw1,tblptrh
 20527  01786C  0E00               	movlw	low (__mediumconst shr (0+16))
 20528  01786E  6EF8               	movwf	tblptru,c
 20529  017870  0E1F               	movlw	(high __ramtop+-1)
 20530  017872  64F7               	cpfsgt	tblptrh,c
 20531  017874  D003               	bra	u4597
 20532  017876  0008               	tblrd		*
 20533  017878  50F5               	movf	tablat,w,c
 20534  01787A  D007               	bra	u4590
 20535  01787C                     u4597:
 20536  01787C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20537  017882  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20538  017888  50EF               	movf	indf0,w,c
 20539  01788A                     u4590:
 20540  01788A  0900               	iorlw	0
 20541  01788C  A4D8               	btfss	status,2,c
 20542  01788E  D7D5               	goto	l6105
 20543                           
 20544                           ;stkvar	_a @ sp[(-2)+0]
 20545                           ;stkvar	_s @ sp[(-2)+-2]
 20546  017890  0EFC               	movlw	-4
 20547  017892  006F FF8C  F035    	movff	plusw1,btemp
 20548  017898  0EFD               	movlw	-3
 20549  01789A  006F FF8C  F036    	movff	plusw1,btemp+1
 20550  0178A0  0EFE               	movlw	-2
 20551  0178A2  50E3               	movf	plusw1,w,c
 20552  0178A4  5E35               	subwf	btemp^0,f,c
 20553  0178A6  0EFF               	movlw	-1
 20554  0178A8  50E3               	movf	plusw1,w,c
 20555  0178AA  5A36               	subwfb	(btemp+1)^0,f,c
 20556                           
 20557                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20558  0178AC  52E5               	movf	postdec1,f,c
 20559  0178AE  52E5               	movf	postdec1,f,c
 20560  0178B0  52E5               	movf	postdec1,f,c
 20561  0178B2  52E5               	movf	postdec1,f,c
 20562  0178B4  0012               	return		;funcret
 20563  0178B6                     __end_of_strlen:
 20564                           	opt callstack 0
 20565                           
 20566 ;; *************** function _fputs *****************
 20567 ;; Defined at:
 20568 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20569 ;; Parameters:    Size  Location     Type
 20570 ;;  s               2  [STACK] PTR const unsigned char 
 20571 ;;		 -> dbuf(80), 
 20572 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20573 ;;		 -> f(6), NULL(0), 
 20574 ;; Auto vars:     Size  Location     Type
 20575 ;;  i               2  [STACK] int 
 20576 ;;  c               1  [STACK] unsigned char 
 20577 ;; Return value:  Size  Location     Type
 20578 ;;                  2  [STACK] int 
 20579 ;; Registers used:
 20580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20581 ;; Tracked objects:
 20582 ;;		On entry : 0/2
 20583 ;;		On exit  : 0/0
 20584 ;;		Unchanged: 0/0
 20585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20590 ;;Total ram usage:        0 bytes
 20591 ;; Hardware stack levels used:    1
 20592 ;; Hardware stack levels required when called:    9
 20593 ;; This function calls:
 20594 ;;		_fputc
 20595 ;; This function is called by:
 20596 ;;		_pad
 20597 ;; This function uses a reentrant model
 20598 ;;
 20599                           
 20600                           	psect	text67
 20601  017950                     __ptext67:
 20602                           	opt callstack 0
 20603  017950                     _fputs:
 20604                           	opt callstack 0
 20605                           
 20606                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20607  017950  52E6               	movf	postinc1,f,c
 20608  017952  52E6               	movf	postinc1,f,c
 20609  017954  52E6               	movf	postinc1,f,c
 20610                           
 20611                           ;stkvar	_i @ sp[(-3)+0]
 20612                           
 20613                           ;incstack = 0
 20614  017956  0EFD               	movlw	-3
 20615  017958  6AE3               	clrf	plusw1,c
 20616  01795A  0EFE               	movlw	-2
 20617  01795C  6AE3               	clrf	plusw1,c
 20618  01795E  D01F               	goto	l9255
 20619  017960                     l9251:
 20620                           
 20621                           ;stkvar	_fp @ sp[(-3)+-4]
 20622  017960  0EF9               	movlw	-7
 20623  017962  006F FF8F FFE6     	movff	plusw1,postinc1
 20624  017968  006F FF8F FFE6     	movff	plusw1,postinc1
 20625                           
 20626                           ;stkvar	_c @ sp[(-5)+2]
 20627  01796E  0EFD               	movlw	-3
 20628  017970  50E3               	movf	plusw1,w,c
 20629  017972  6EE6               	movwf	postinc1,c
 20630  017974  0E00               	movlw	0
 20631  017976  6EE6               	movwf	postinc1,c
 20632  017978  EC58  F0B6         	call	_fputc	;wreg free
 20633                           
 20634                           ;stkvar	_i @ sp[(-3)+0]
 20635  01797C  0EFD               	movlw	-3
 20636  01797E  50E3               	movf	plusw1,w,c
 20637  017980  0F01               	addlw	1
 20638  017982  6E35               	movwf	btemp^0,c
 20639  017984  0EFD               	movlw	-3
 20640  017986  0060  F0D7  FFE3   	movff	btemp,plusw1
 20641  01798C  6A35               	clrf	btemp^0,c
 20642  01798E  0EFE               	movlw	-2
 20643  017990  50E3               	movf	plusw1,w,c
 20644  017992  2035               	addwfc	btemp^0,w,c
 20645  017994  6E35               	movwf	btemp^0,c
 20646  017996  0EFE               	movlw	-2
 20647  017998  0060  F0D7  FFE3   	movff	btemp,plusw1
 20648  01799E                     l9255:
 20649                           
 20650                           ;stkvar	_i @ sp[(-3)+0]
 20651  01799E  0EFD               	movlw	-3
 20652  0179A0  006F FF8C  F03F    	movff	plusw1,btemp+10
 20653  0179A6  0EFE               	movlw	-2
 20654  0179A8  006F FF8C  F040    	movff	plusw1,btemp+11
 20655                           
 20656                           ;stkvar	_s @ sp[(-3)+-2]
 20657  0179AE  0EFB               	movlw	-5
 20658  0179B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 20659  0179B6  0EFC               	movlw	-4
 20660  0179B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 20661  0179BE  503F               	movf	(btemp+10)^0,w,c
 20662  0179C0  243D               	addwf	(btemp+8)^0,w,c
 20663  0179C2  6ED9               	movwf	fsr2l,c
 20664  0179C4  5040               	movf	(btemp+11)^0,w,c
 20665  0179C6  203E               	addwfc	(btemp+9)^0,w,c
 20666  0179C8  6EDA               	movwf	fsr2h,c
 20667  0179CA  50DF               	movf	indf2,w,c
 20668  0179CC  6E40               	movwf	(btemp+11)^0,c
 20669                           
 20670                           ;stkvar	_c @ sp[(-3)+2]
 20671  0179CE  0EFF               	movlw	-1
 20672  0179D0  0060  F103  FFE3   	movff	btemp+11,plusw1
 20673  0179D6  0EFF               	movlw	-1
 20674  0179D8  50E3               	movf	plusw1,w,c
 20675  0179DA  A4D8               	btfss	status,2,c
 20676  0179DC  D7C1               	goto	l9251
 20677                           
 20678                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20679  0179DE  0EF9               	movlw	249
 20680  0179E0  26E1               	addwf	fsr1l,f,c
 20681  0179E2  0EFF               	movlw	255
 20682  0179E4  22E2               	addwfc	fsr1h,f,c
 20683  0179E6  0012               	return		;funcret
 20684  0179E8                     __end_of_fputs:
 20685                           	opt callstack 0
 20686                           
 20687 ;; *************** function _fputc *****************
 20688 ;; Defined at:
 20689 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20690 ;; Parameters:    Size  Location     Type
 20691 ;;  c               2  [STACK] int 
 20692 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20693 ;;		 -> f(6), NULL(0), 
 20694 ;; Auto vars:     Size  Location     Type
 20695 ;;		None
 20696 ;; Return value:  Size  Location     Type
 20697 ;;                  2  [STACK] int 
 20698 ;; Registers used:
 20699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20700 ;; Tracked objects:
 20701 ;;		On entry : 0/4
 20702 ;;		On exit  : 0/0
 20703 ;;		Unchanged: 0/0
 20704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20709 ;;Total ram usage:        0 bytes
 20710 ;; Hardware stack levels used:    1
 20711 ;; Hardware stack levels required when called:    8
 20712 ;; This function calls:
 20713 ;;		_putch
 20714 ;; This function is called by:
 20715 ;;		_pad
 20716 ;;		_stoa
 20717 ;;		_vfpfcnvrt
 20718 ;;		_fputs
 20719 ;; This function uses a reentrant model
 20720 ;;
 20721                           
 20722                           	psect	text68
 20723  016CB0                     __ptext68:
 20724                           	opt callstack 0
 20725  016CB0                     _fputc:
 20726                           	opt callstack 13
 20727                           
 20728                           ;stkvar	_fp @ sp[(0)+-4]
 20729                           
 20730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20731                           ;incstack = 0
 20732  016CB0  0EFC               	movlw	-4
 20733  016CB2  006F FF8C  F035    	movff	plusw1,btemp
 20734  016CB8  0EFD               	movlw	-3
 20735  016CBA  50E3               	movf	plusw1,w,c
 20736  016CBC  1035               	iorwf	btemp^0,w,c
 20737  016CBE  B4D8               	btfsc	status,2,c
 20738  016CC0  D009               	goto	u9020
 20739                           
 20740                           ;stkvar	_fp @ sp[(0)+-4]
 20741  016CC2  0EFC               	movlw	-4
 20742  016CC4  006F FF8C  F035    	movff	plusw1,btemp
 20743  016CCA  0EFD               	movlw	-3
 20744  016CCC  50E3               	movf	plusw1,w,c
 20745  016CCE  1035               	iorwf	btemp^0,w,c
 20746  016CD0  A4D8               	btfss	status,2,c
 20747  016CD2  D006               	goto	l9239
 20748  016CD4                     u9020:
 20749                           
 20750                           ;stkvar	_c @ sp[(0)+-2]
 20751  016CD4  0EFE               	movlw	-2
 20752  016CD6  50E3               	movf	plusw1,w,c
 20753  016CD8  6EE6               	movwf	postinc1,c
 20754  016CDA  EC16  F0C6         	call	_putch	;wreg free
 20755  016CDE  D075               	goto	l2792
 20756  016CE0                     l9239:
 20757                           
 20758                           ;stkvar	_fp @ sp[(0)+-4]
 20759  016CE0  0EFC               	movlw	-4
 20760  016CE2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20761  016CE8  0EFD               	movlw	-3
 20762  016CEA  006F FF8C  F040    	movff	plusw1,btemp+11
 20763  016CF0  0E04               	movlw	4
 20764  016CF2  243F               	addwf	(btemp+10)^0,w,c
 20765  016CF4  6ED9               	movwf	fsr2l,c
 20766  016CF6  0E00               	movlw	0
 20767  016CF8  2040               	addwfc	(btemp+11)^0,w,c
 20768  016CFA  6EDA               	movwf	fsr2h,c
 20769  016CFC  50DE               	movf	postinc2,w,c
 20770  016CFE  10DE               	iorwf	postinc2,w,c
 20771  016D00  B4D8               	btfsc	status,2,c
 20772  016D02  D026               	goto	u9040
 20773                           
 20774                           ;stkvar	_fp @ sp[(0)+-4]
 20775  016D04  0EFC               	movlw	-4
 20776  016D06  006F FF8C  F03F    	movff	plusw1,btemp+10
 20777  016D0C  0EFD               	movlw	-3
 20778  016D0E  006F FF8C  F040    	movff	plusw1,btemp+11
 20779  016D14  0E04               	movlw	4
 20780  016D16  243F               	addwf	(btemp+10)^0,w,c
 20781  016D18  6ED9               	movwf	fsr2l,c
 20782  016D1A  0E00               	movlw	0
 20783  016D1C  2040               	addwfc	(btemp+11)^0,w,c
 20784  016D1E  6EDA               	movwf	fsr2h,c
 20785                           
 20786                           ;stkvar	_fp @ sp[(0)+-4]
 20787  016D20  0EFC               	movlw	-4
 20788  016D22  006F FF8C  F03F    	movff	plusw1,btemp+10
 20789  016D28  0EFD               	movlw	-3
 20790  016D2A  006F FF8C  F040    	movff	plusw1,btemp+11
 20791  016D30  0E02               	movlw	2
 20792  016D32  243F               	addwf	(btemp+10)^0,w,c
 20793  016D34  6EE9               	movwf	fsr0l,c
 20794  016D36  0E00               	movlw	0
 20795  016D38  2040               	addwfc	(btemp+11)^0,w,c
 20796  016D3A  6EEA               	movwf	fsr0h,c
 20797  016D3C  50DE               	movf	postinc2,w,c
 20798  016D3E  5CEE               	subwf	postinc0,w,c
 20799  016D40  50EE               	movf	postinc0,w,c
 20800  016D42  0A80               	xorlw	128
 20801  016D44  6E35               	movwf	btemp^0,c
 20802  016D46  50DE               	movf	postinc2,w,c
 20803  016D48  0A80               	xorlw	128
 20804  016D4A  5835               	subwfb	btemp^0,w,c
 20805  016D4C  B0D8               	btfsc	status,0,c
 20806  016D4E  D03D               	goto	l2792
 20807  016D50                     u9040:
 20808                           
 20809                           ;stkvar	_c @ sp[(0)+-2]
 20810                           ;stkvar	_fp @ sp[(0)+-4]
 20811  016D50  0EFC               	movlw	-4
 20812  016D52  006F FF8C  F03F    	movff	plusw1,btemp+10
 20813  016D58  0EFD               	movlw	-3
 20814  016D5A  006F FF8C  F040    	movff	plusw1,btemp+11
 20815  016D60  0E02               	movlw	2
 20816  016D62  243F               	addwf	(btemp+10)^0,w,c
 20817  016D64  6ED9               	movwf	fsr2l,c
 20818  016D66  0E00               	movlw	0
 20819  016D68  2040               	addwfc	(btemp+11)^0,w,c
 20820  016D6A  6EDA               	movwf	fsr2h,c
 20821  016D6C  006F FF78  F03F    	movff	postinc2,btemp+10
 20822  016D72  006F FF74  F040    	movff	postdec2,btemp+11
 20823                           
 20824                           ;stkvar	_fp @ sp[(0)+-4]
 20825  016D78  0EFC               	movlw	-4
 20826  016D7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20827  016D80  0EFD               	movlw	-3
 20828  016D82  006F FF8F FFDA     	movff	plusw1,fsr2h
 20829  016D88  006F FF78  F03D    	movff	postinc2,btemp+8
 20830  016D8E  006F FF74  F03E    	movff	postdec2,btemp+9
 20831  016D94  503F               	movf	(btemp+10)^0,w,c
 20832  016D96  243D               	addwf	(btemp+8)^0,w,c
 20833  016D98  6ED9               	movwf	fsr2l,c
 20834  016D9A  5040               	movf	(btemp+11)^0,w,c
 20835  016D9C  203E               	addwfc	(btemp+9)^0,w,c
 20836  016D9E  6EDA               	movwf	fsr2h,c
 20837  016DA0  0EFE               	movlw	-2
 20838  016DA2  006F FF8F FFDF     	movff	plusw1,indf2
 20839                           
 20840                           ;stkvar	_fp @ sp[(0)+-4]
 20841  016DA8  0EFC               	movlw	-4
 20842  016DAA  006F FF8C  F03F    	movff	plusw1,btemp+10
 20843  016DB0  0EFD               	movlw	-3
 20844  016DB2  006F FF8C  F040    	movff	plusw1,btemp+11
 20845  016DB8  0E02               	movlw	2
 20846  016DBA  243F               	addwf	(btemp+10)^0,w,c
 20847  016DBC  6ED9               	movwf	fsr2l,c
 20848  016DBE  0E00               	movlw	0
 20849  016DC0  2040               	addwfc	(btemp+11)^0,w,c
 20850  016DC2  6EDA               	movwf	fsr2h,c
 20851  016DC4  2ADE               	incf	postinc2,f,c
 20852  016DC6  0E00               	movlw	0
 20853  016DC8  22DD               	addwfc	postdec2,f,c
 20854  016DCA                     l2792:
 20855                           
 20856                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20857  016DCA  52E5               	movf	postdec1,f,c
 20858  016DCC  52E5               	movf	postdec1,f,c
 20859  016DCE  52E5               	movf	postdec1,f,c
 20860  016DD0  52E5               	movf	postdec1,f,c
 20861  016DD2  0012               	return		;funcret
 20862  016DD4                     __end_of_fputc:
 20863                           	opt callstack 0
 20864                           
 20865 ;; *************** function _putch *****************
 20866 ;; Defined at:
 20867 ;;		line 155 in file "eadog.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;  c               1  [STACK] unsigned char 
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1  [STACK] void 
 20874 ;; Registers used:
 20875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/4
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:    7
 20888 ;; This function calls:
 20889 ;;		_ringBufS_put_dma
 20890 ;; This function is called by:
 20891 ;;		_fputc
 20892 ;; This function uses a reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text69
 20896  018C2C                     __ptext69:
 20897                           	opt callstack 0
 20898  018C2C                     _putch:
 20899                           	opt callstack 13
 20900                           
 20901                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20902                           ;stkvar	_c @ sp[(0)+-1]
 20903                           
 20904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20905                           ;incstack = 0
 20906  018C2C  0EFF               	movlw	-1
 20907  018C2E  50E3               	movf	plusw1,w,c
 20908  018C30  6EE6               	movwf	postinc1,c
 20909  018C32  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 20910  018C38  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 20911  018C3E  EC0E  F0BB         	call	_ringBufS_put_dma	;wreg free
 20912                           
 20913                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20914  018C42  52E5               	movf	postdec1,f,c
 20915  018C44  0012               	return		;funcret
 20916  018C46                     __end_of_putch:
 20917                           	opt callstack 0
 20918                           
 20919 ;; *************** function _ringBufS_put_dma *****************
 20920 ;; Defined at:
 20921 ;;		line 67 in file "ringbufs.c"
 20922 ;; Parameters:    Size  Location     Type
 20923 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20924 ;;		 -> ring_buf1(67), 
 20925 ;;  c               1  [STACK] const unsigned char 
 20926 ;; Auto vars:     Size  Location     Type
 20927 ;;		None
 20928 ;; Return value:  Size  Location     Type
 20929 ;;                  1  [STACK] void 
 20930 ;; Registers used:
 20931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20932 ;; Tracked objects:
 20933 ;;		On entry : 0/4
 20934 ;;		On exit  : 0/0
 20935 ;;		Unchanged: 0/0
 20936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20941 ;;Total ram usage:        0 bytes
 20942 ;; Hardware stack levels used:    1
 20943 ;; Hardware stack levels required when called:    6
 20944 ;; This function calls:
 20945 ;;		Nothing
 20946 ;; This function is called by:
 20947 ;;		_putch
 20948 ;; This function uses a reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text70
 20952  01761C                     __ptext70:
 20953                           	opt callstack 0
 20954  01761C                     _ringBufS_put_dma:
 20955                           	opt callstack 13
 20956                           
 20957                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20958                           ;stkvar	__this @ sp[(0)+-2]
 20959                           
 20960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20961                           ;incstack = 0
 20962  01761C  0EFE               	movlw	-2
 20963  01761E  006F FF8C  F03F    	movff	plusw1,btemp+10
 20964  017624  0EFF               	movlw	-1
 20965  017626  006F FF8C  F040    	movff	plusw1,btemp+11
 20966  01762C  0E42               	movlw	66
 20967  01762E  243F               	addwf	(btemp+10)^0,w,c
 20968  017630  6ED9               	movwf	fsr2l,c
 20969  017632  0E00               	movlw	0
 20970  017634  2040               	addwfc	(btemp+11)^0,w,c
 20971  017636  6EDA               	movwf	fsr2h,c
 20972  017638  0E40               	movlw	64
 20973  01763A  60DF               	cpfslt	indf2,c
 20974  01763C  D040               	goto	l1465
 20975                           
 20976                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20977                           ;stkvar	_c @ sp[(0)+-3]
 20978                           ;stkvar	__this @ sp[(0)+-2]
 20979  01763E  0EFE               	movlw	-2
 20980  017640  006F FF8C  F03F    	movff	plusw1,btemp+10
 20981  017646  0EFF               	movlw	-1
 20982  017648  006F FF8C  F040    	movff	plusw1,btemp+11
 20983  01764E  0E40               	movlw	64
 20984  017650  243F               	addwf	(btemp+10)^0,w,c
 20985  017652  6ED9               	movwf	fsr2l,c
 20986  017654  0E00               	movlw	0
 20987  017656  2040               	addwfc	(btemp+11)^0,w,c
 20988  017658  6EDA               	movwf	fsr2h,c
 20989  01765A  50DF               	movf	indf2,w,c
 20990  01765C  6E40               	movwf	(btemp+11)^0,c
 20991                           
 20992                           ;stkvar	__this @ sp[(0)+-2]
 20993  01765E  0EFE               	movlw	-2
 20994  017660  006F FF8C  F03D    	movff	plusw1,btemp+8
 20995  017666  0EFF               	movlw	-1
 20996  017668  006F FF8C  F03E    	movff	plusw1,btemp+9
 20997  01766E  5040               	movf	(btemp+11)^0,w,c
 20998  017670  243D               	addwf	(btemp+8)^0,w,c
 20999  017672  6ED9               	movwf	fsr2l,c
 21000  017674  0E00               	movlw	0
 21001  017676  203E               	addwfc	(btemp+9)^0,w,c
 21002  017678  6EDA               	movwf	fsr2h,c
 21003  01767A  0EFD               	movlw	-3
 21004  01767C  006F FF8F FFDF     	movff	plusw1,indf2
 21005                           
 21006                           ;ringbufs.c: 71:   ++_this->head;
 21007                           ;stkvar	__this @ sp[(0)+-2]
 21008  017682  0EFE               	movlw	-2
 21009  017684  006F FF8C  F03F    	movff	plusw1,btemp+10
 21010  01768A  0EFF               	movlw	-1
 21011  01768C  006F FF8C  F040    	movff	plusw1,btemp+11
 21012  017692  0E40               	movlw	64
 21013  017694  243F               	addwf	(btemp+10)^0,w,c
 21014  017696  6ED9               	movwf	fsr2l,c
 21015  017698  0E00               	movlw	0
 21016  01769A  2040               	addwfc	(btemp+11)^0,w,c
 21017  01769C  6EDA               	movwf	fsr2h,c
 21018  01769E  2ADF               	incf	indf2,f,c
 21019                           
 21020                           ;ringbufs.c: 72:   ++_this->count;
 21021                           ;stkvar	__this @ sp[(0)+-2]
 21022  0176A0  0EFE               	movlw	-2
 21023  0176A2  006F FF8C  F03F    	movff	plusw1,btemp+10
 21024  0176A8  0EFF               	movlw	-1
 21025  0176AA  006F FF8C  F040    	movff	plusw1,btemp+11
 21026  0176B0  0E42               	movlw	66
 21027  0176B2  243F               	addwf	(btemp+10)^0,w,c
 21028  0176B4  6ED9               	movwf	fsr2l,c
 21029  0176B6  0E00               	movlw	0
 21030  0176B8  2040               	addwfc	(btemp+11)^0,w,c
 21031  0176BA  6EDA               	movwf	fsr2h,c
 21032  0176BC  2ADF               	incf	indf2,f,c
 21033  0176BE                     l1465:
 21034                           
 21035                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21036  0176BE  52E5               	movf	postdec1,f,c
 21037  0176C0  52E5               	movf	postdec1,f,c
 21038  0176C2  52E5               	movf	postdec1,f,c
 21039  0176C4  0012               	return		;funcret
 21040  0176C6                     __end_of_ringBufS_put_dma:
 21041                           	opt callstack 0
 21042                           
 21043 ;; *************** function _atoi *****************
 21044 ;; Defined at:
 21045 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21046 ;; Parameters:    Size  Location     Type
 21047 ;;  s               2  [STACK] PTR const unsigned char 
 21048 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21049 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21050 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21051 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21052 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21053 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21054 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;  n               2  [STACK] int 
 21057 ;;  neg             2  [STACK] int 
 21058 ;; Return value:  Size  Location     Type
 21059 ;;                  2  [STACK] int 
 21060 ;; Registers used:
 21061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21062 ;; Tracked objects:
 21063 ;;		On entry : 0/4
 21064 ;;		On exit  : 0/0
 21065 ;;		Unchanged: 0/0
 21066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21071 ;;Total ram usage:        0 bytes
 21072 ;; Hardware stack levels used:    1
 21073 ;; Hardware stack levels required when called:    7
 21074 ;; This function calls:
 21075 ;;		_isdigit
 21076 ;;		_isspace
 21077 ;; This function is called by:
 21078 ;;		_vfpfcnvrt
 21079 ;; This function uses a reentrant model
 21080 ;;
 21081                           
 21082                           	psect	text71
 21083  015660                     __ptext71:
 21084                           	opt callstack 0
 21085  015660                     _atoi:
 21086                           	opt callstack 0
 21087                           
 21088                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21089  015660  0E09               	movlw	9
 21090  015662  26E1               	addwf	fsr1l,f,c
 21091  015664  0E00               	movlw	0
 21092  015666  22E2               	addwfc	fsr1h,f,c
 21093                           
 21094                           ;stkvar	_n @ sp[(-9)+5]
 21095                           
 21096                           ;incstack = 0
 21097  015668  0EFC               	movlw	-4
 21098  01566A  6AE3               	clrf	plusw1,c
 21099  01566C  0EFD               	movlw	-3
 21100  01566E  6AE3               	clrf	plusw1,c
 21101                           
 21102                           ;stkvar	_neg @ sp[(-9)+7]
 21103  015670  0EFE               	movlw	-2
 21104  015672  6AE3               	clrf	plusw1,c
 21105  015674  0EFF               	movlw	-1
 21106  015676  6AE3               	clrf	plusw1,c
 21107  015678  D011               	goto	l7663
 21108  01567A                     l7661:
 21109                           
 21110                           ;stkvar	_s @ sp[(-9)+-2]
 21111  01567A  0EF5               	movlw	-11
 21112  01567C  50E3               	movf	plusw1,w,c
 21113  01567E  0F01               	addlw	1
 21114  015680  6E35               	movwf	btemp^0,c
 21115  015682  0EF5               	movlw	-11
 21116  015684  0060  F0D7  FFE3   	movff	btemp,plusw1
 21117  01568A  6A35               	clrf	btemp^0,c
 21118  01568C  0EF6               	movlw	-10
 21119  01568E  50E3               	movf	plusw1,w,c
 21120  015690  2035               	addwfc	btemp^0,w,c
 21121  015692  6E35               	movwf	btemp^0,c
 21122  015694  0EF6               	movlw	-10
 21123  015696  0060  F0D7  FFE3   	movff	btemp,plusw1
 21124  01569C                     l7663:
 21125                           
 21126                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21127  01569C  0EFB               	movlw	-5
 21128  01569E  6AE3               	clrf	plusw1,c
 21129  0156A0  2AE3               	incf	plusw1,f,c
 21130                           
 21131                           ;stkvar	_s @ sp[(-9)+-2]
 21132  0156A2  50E1               	movf	fsr1l,w,c
 21133  0156A4  0FF5               	addlw	-11
 21134  0156A6  6ED9               	movwf	fsr2l,c
 21135  0156A8  50E2               	movf	fsr1h,w,c
 21136  0156AA  6EDA               	movwf	fsr2h,c
 21137  0156AC  0EFF               	movlw	255
 21138  0156AE  22DA               	addwfc	fsr2h,f,c
 21139  0156B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21140  0156B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21141  0156BC                     	if	0	;tblptru may be non-zero
 21142  0156BC                     	endif
 21143  0156BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21144  0156BC  0E00               	movlw	low (__mediumconst shr (0+16))
 21145  0156BE  6EF8               	movwf	tblptru,c
 21146  0156C0                     	endif
 21147  0156C0  0008               	tblrd		*
 21148  0156C2  50F5               	movf	tablat,w,c
 21149  0156C4  0A20               	xorlw	32
 21150  0156C6  B4D8               	btfsc	status,2,c
 21151  0156C8  D023               	goto	l7671
 21152  0156CA  0EF7               	movlw	247
 21153  0156CC  6E3F               	movwf	(btemp+10)^0,c
 21154  0156CE  0EFF               	movlw	255
 21155  0156D0  6E40               	movwf	(btemp+11)^0,c
 21156                           
 21157                           ;stkvar	_s @ sp[(-9)+-2]
 21158  0156D2  50E1               	movf	fsr1l,w,c
 21159  0156D4  0FF5               	addlw	-11
 21160  0156D6  6ED9               	movwf	fsr2l,c
 21161  0156D8  50E2               	movf	fsr1h,w,c
 21162  0156DA  6EDA               	movwf	fsr2h,c
 21163  0156DC  0EFF               	movlw	255
 21164  0156DE  22DA               	addwfc	fsr2h,f,c
 21165  0156E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21166  0156E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21167  0156EC                     	if	0	;tblptru may be non-zero
 21168  0156EC                     	endif
 21169  0156EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21170  0156EC  0E00               	movlw	low (__mediumconst shr (0+16))
 21171  0156EE  6EF8               	movwf	tblptru,c
 21172  0156F0                     	endif
 21173  0156F0  0008               	tblrd		*
 21174  0156F2  50F5               	movf	tablat,w,c
 21175  0156F4  6E3D               	movwf	(btemp+8)^0,c
 21176  0156F6  6A3E               	clrf	(btemp+9)^0,c
 21177  0156F8  503F               	movf	(btemp+10)^0,w,c
 21178  0156FA  263D               	addwf	(btemp+8)^0,f,c
 21179  0156FC  5040               	movf	(btemp+11)^0,w,c
 21180  0156FE  223E               	addwfc	(btemp+9)^0,f,c
 21181  015700  503E               	movf	(btemp+9)^0,w,c
 21182  015702  E104               	bnz	u7640
 21183  015704  0E05               	movlw	5
 21184  015706  5C3D               	subwf	(btemp+8)^0,w,c
 21185  015708  A0D8               	btfss	status,0,c
 21186  01570A  D002               	goto	l7671
 21187  01570C                     u7640:
 21188                           
 21189                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21190  01570C  0EFB               	movlw	-5
 21191  01570E  6AE3               	clrf	plusw1,c
 21192  015710                     l7671:
 21193                           
 21194                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21195  015710  0EFB               	movlw	-5
 21196  015712  50E3               	movf	plusw1,w,c
 21197  015714  6E3F               	movwf	(btemp+10)^0,c
 21198  015716  6A40               	clrf	(btemp+11)^0,c
 21199                           
 21200                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21201  015718  0EF9               	movlw	-7
 21202  01571A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21203  015720  0EFA               	movlw	-6
 21204  015722  0060  F103  FFE3   	movff	btemp+11,plusw1
 21205                           
 21206                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21207  015728  0EF9               	movlw	-7
 21208  01572A  006F FF8C  F035    	movff	plusw1,btemp
 21209  015730  0EFA               	movlw	-6
 21210  015732  50E3               	movf	plusw1,w,c
 21211  015734  1035               	iorwf	btemp^0,w,c
 21212  015736  B4D8               	btfsc	status,2,c
 21213  015738  D01F               	goto	l7681
 21214  01573A  D79F               	goto	l7661
 21215  01573C                     l7677:
 21216  01573C  0E01               	movlw	1
 21217  01573E  6E3F               	movwf	(btemp+10)^0,c
 21218  015740  0E00               	movlw	0
 21219  015742  6E40               	movwf	(btemp+11)^0,c
 21220                           
 21221                           ;stkvar	_neg @ sp[(-9)+7]
 21222  015744  0EFE               	movlw	-2
 21223  015746  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21224  01574C  0EFF               	movlw	-1
 21225  01574E  0060  F103  FFE3   	movff	btemp+11,plusw1
 21226  015754                     l7679:
 21227                           
 21228                           ;stkvar	_s @ sp[(-9)+-2]
 21229  015754  0EF5               	movlw	-11
 21230  015756  50E3               	movf	plusw1,w,c
 21231  015758  0F01               	addlw	1
 21232  01575A  6E35               	movwf	btemp^0,c
 21233  01575C  0EF5               	movlw	-11
 21234  01575E  0060  F0D7  FFE3   	movff	btemp,plusw1
 21235  015764  6A35               	clrf	btemp^0,c
 21236  015766  0EF6               	movlw	-10
 21237  015768  50E3               	movf	plusw1,w,c
 21238  01576A  2035               	addwfc	btemp^0,w,c
 21239  01576C  6E35               	movwf	btemp^0,c
 21240  01576E  0EF6               	movlw	-10
 21241  015770  0060  F0D7  FFE3   	movff	btemp,plusw1
 21242  015776  D053               	goto	l7687
 21243  015778                     l7681:
 21244                           
 21245                           ;stkvar	_s @ sp[(-9)+-2]
 21246  015778  50E1               	movf	fsr1l,w,c
 21247  01577A  0FF5               	addlw	-11
 21248  01577C  6ED9               	movwf	fsr2l,c
 21249  01577E  50E2               	movf	fsr1h,w,c
 21250  015780  6EDA               	movwf	fsr2h,c
 21251  015782  0EFF               	movlw	255
 21252  015784  22DA               	addwfc	fsr2h,f,c
 21253  015786  006F FF7B FFF6     	movff	postinc2,tblptrl
 21254  01578C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21255  015792                     	if	0	;tblptru may be non-zero
 21256  015792                     	endif
 21257  015792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21258  015792  0E00               	movlw	low (__mediumconst shr (0+16))
 21259  015794  6EF8               	movwf	tblptru,c
 21260  015796                     	endif
 21261  015796  0008               	tblrd		*
 21262  015798  50F5               	movf	tablat,w,c
 21263  01579A  6E3F               	movwf	(btemp+10)^0,c
 21264  01579C  6A40               	clrf	(btemp+11)^0,c
 21265                           
 21266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21267                           ; Switch size 1, requested type "simple"
 21268                           ; Number of cases is 1, Range of values is 0 to 0
 21269                           ; switch strategies available:
 21270                           ; Name         Instructions Cycles
 21271                           ; simple_byte            4     3 (average)
 21272                           ;	Chosen strategy is simple_byte
 21273  01579E  5040               	movf	(btemp+11)^0,w,c
 21274  0157A0  0A00               	xorlw	0	; case 0
 21275  0157A2  A4D8               	btfss	status,2,c
 21276  0157A4  D03C               	goto	l7687
 21277                           
 21278                           ; Switch size 1, requested type "simple"
 21279                           ; Number of cases is 2, Range of values is 43 to 45
 21280                           ; switch strategies available:
 21281                           ; Name         Instructions Cycles
 21282                           ; simple_byte            7     4 (average)
 21283                           ;	Chosen strategy is simple_byte
 21284  0157A6  503F               	movf	(btemp+10)^0,w,c
 21285  0157A8  0A2B               	xorlw	43	; case 43
 21286  0157AA  B4D8               	btfsc	status,2,c
 21287  0157AC  D7D3               	goto	l7679
 21288  0157AE  0A06               	xorlw	6	; case 45
 21289  0157B0  B4D8               	btfsc	status,2,c
 21290  0157B2  D7C4               	goto	l7677
 21291  0157B4  D034               	goto	l7687
 21292  0157B6                     l7683:
 21293                           
 21294                           ;stkvar	_n @ sp[(-9)+5]
 21295  0157B6  0EFC               	movlw	-4
 21296  0157B8  006F FF8C  F03F    	movff	plusw1,btemp+10
 21297  0157BE  0EFD               	movlw	-3
 21298  0157C0  006F FF8C  F040    	movff	plusw1,btemp+11
 21299  0157C6  0E0A               	movlw	10
 21300  0157C8  023F               	mulwf	(btemp+10)^0,c
 21301  0157CA  006F FFCC  F03D    	movff	prodl,btemp+8
 21302  0157D0  006F FFD0  F03E    	movff	prodh,btemp+9
 21303  0157D6  0240               	mulwf	(btemp+11)^0,c
 21304  0157D8  50F3               	movf	prodl,w,c
 21305  0157DA  263E               	addwf	(btemp+9)^0,f,c
 21306                           
 21307                           ;stkvar	_s @ sp[(-9)+-2]
 21308  0157DC  50E1               	movf	fsr1l,w,c
 21309  0157DE  0FF5               	addlw	-11
 21310  0157E0  6ED9               	movwf	fsr2l,c
 21311  0157E2  50E2               	movf	fsr1h,w,c
 21312  0157E4  6EDA               	movwf	fsr2h,c
 21313  0157E6  0EFF               	movlw	255
 21314  0157E8  22DA               	addwfc	fsr2h,f,c
 21315  0157EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 21316  0157F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21317  0157F6                     	if	0	;tblptru may be non-zero
 21318  0157F6                     	endif
 21319  0157F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21320  0157F6  0E00               	movlw	low (__mediumconst shr (0+16))
 21321  0157F8  6EF8               	movwf	tblptru,c
 21322  0157FA                     	endif
 21323  0157FA  0008               	tblrd		*
 21324  0157FC  50F5               	movf	tablat,w,c
 21325  0157FE  5E3D               	subwf	(btemp+8)^0,f,c
 21326  015800  0E00               	movlw	0
 21327  015802  5A3E               	subwfb	(btemp+9)^0,f,c
 21328  015804  0E30               	movlw	48
 21329  015806  263D               	addwf	(btemp+8)^0,f,c
 21330  015808  0E00               	movlw	0
 21331  01580A  223E               	addwfc	(btemp+9)^0,f,c
 21332                           
 21333                           ;stkvar	_n @ sp[(-9)+5]
 21334  01580C  0EFC               	movlw	-4
 21335  01580E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 21336  015814  0EFD               	movlw	-3
 21337  015816  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 21338  01581C  D79B               	goto	l7679
 21339  01581E                     l7687:
 21340  01581E  0ED0               	movlw	208
 21341  015820  6E3F               	movwf	(btemp+10)^0,c
 21342  015822  0EFF               	movlw	255
 21343  015824  6E40               	movwf	(btemp+11)^0,c
 21344                           
 21345                           ;stkvar	_s @ sp[(-9)+-2]
 21346  015826  50E1               	movf	fsr1l,w,c
 21347  015828  0FF5               	addlw	-11
 21348  01582A  6ED9               	movwf	fsr2l,c
 21349  01582C  50E2               	movf	fsr1h,w,c
 21350  01582E  6EDA               	movwf	fsr2h,c
 21351  015830  0EFF               	movlw	255
 21352  015832  22DA               	addwfc	fsr2h,f,c
 21353  015834  006F FF7B FFF6     	movff	postinc2,tblptrl
 21354  01583A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21355  015840                     	if	0	;tblptru may be non-zero
 21356  015840                     	endif
 21357  015840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21358  015840  0E00               	movlw	low (__mediumconst shr (0+16))
 21359  015842  6EF8               	movwf	tblptru,c
 21360  015844                     	endif
 21361  015844  0008               	tblrd		*
 21362  015846  50F5               	movf	tablat,w,c
 21363  015848  6E3D               	movwf	(btemp+8)^0,c
 21364  01584A  6A3E               	clrf	(btemp+9)^0,c
 21365  01584C  503F               	movf	(btemp+10)^0,w,c
 21366  01584E  263D               	addwf	(btemp+8)^0,f,c
 21367  015850  5040               	movf	(btemp+11)^0,w,c
 21368  015852  223E               	addwfc	(btemp+9)^0,f,c
 21369  015854  503E               	movf	(btemp+9)^0,w,c
 21370  015856  E106               	bnz	u7660
 21371  015858  0E0A               	movlw	10
 21372  01585A  5C3D               	subwf	(btemp+8)^0,w,c
 21373  01585C  B0D8               	btfsc	status,0,c
 21374  01585E  D002               	goto	u7660
 21375  015860  0E01               	movlw	1
 21376  015862  D001               	goto	u7670
 21377  015864                     u7660:
 21378  015864  0E00               	movlw	0
 21379  015866                     u7670:
 21380  015866  6E3F               	movwf	(btemp+10)^0,c
 21381  015868  6A40               	clrf	(btemp+11)^0,c
 21382                           
 21383                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21384  01586A  0EF7               	movlw	-9
 21385  01586C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21386  015872  0EF8               	movlw	-8
 21387  015874  0060  F103  FFE3   	movff	btemp+11,plusw1
 21388                           
 21389                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21390  01587A  0EF7               	movlw	-9
 21391  01587C  006F FF8C  F035    	movff	plusw1,btemp
 21392  015882  0EF8               	movlw	-8
 21393  015884  50E3               	movf	plusw1,w,c
 21394  015886  1035               	iorwf	btemp^0,w,c
 21395  015888  A4D8               	btfss	status,2,c
 21396  01588A  D795               	goto	l7683
 21397                           
 21398                           ;stkvar	_neg @ sp[(-9)+7]
 21399  01588C  0EFE               	movlw	-2
 21400  01588E  006F FF8C  F035    	movff	plusw1,btemp
 21401  015894  0EFF               	movlw	-1
 21402  015896  50E3               	movf	plusw1,w,c
 21403  015898  1035               	iorwf	btemp^0,w,c
 21404  01589A  A4D8               	btfss	status,2,c
 21405  01589C  D00E               	goto	l7697
 21406                           
 21407                           ;stkvar	_n @ sp[(-9)+5]
 21408  01589E  0EFC               	movlw	-4
 21409  0158A0  006F FF8C  F035    	movff	plusw1,btemp
 21410  0158A6  1E35               	comf	btemp^0,f,c
 21411  0158A8  0EFD               	movlw	-3
 21412  0158AA  006F FF8C  F036    	movff	plusw1,btemp+1
 21413  0158B0  1E36               	comf	(btemp+1)^0,f,c
 21414  0158B2  2A35               	incf	btemp^0,f,c
 21415  0158B4  B4D8               	btfsc	status,2,c
 21416  0158B6  2A36               	incf	(btemp+1)^0,f,c
 21417  0158B8  D008               	goto	l2728
 21418  0158BA                     l7697:
 21419                           
 21420                           ;stkvar	_n @ sp[(-9)+5]
 21421  0158BA  0EFC               	movlw	-4
 21422  0158BC  006F FF8C  F035    	movff	plusw1,btemp
 21423  0158C2  0EFD               	movlw	-3
 21424  0158C4  006F FF8C  F036    	movff	plusw1,btemp+1
 21425  0158CA                     l2728:
 21426                           
 21427                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21428  0158CA  0EF5               	movlw	245
 21429  0158CC  26E1               	addwf	fsr1l,f,c
 21430  0158CE  0EFF               	movlw	255
 21431  0158D0  22E2               	addwfc	fsr1h,f,c
 21432  0158D2  0012               	return		;funcret
 21433  0158D4                     __end_of_atoi:
 21434                           	opt callstack 0
 21435                           
 21436 ;; *************** function _isspace *****************
 21437 ;; Defined at:
 21438 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21439 ;; Parameters:    Size  Location     Type
 21440 ;;  c               2  [STACK] int 
 21441 ;; Auto vars:     Size  Location     Type
 21442 ;;		None
 21443 ;; Return value:  Size  Location     Type
 21444 ;;                  2  [STACK] int 
 21445 ;; Registers used:
 21446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21447 ;; Tracked objects:
 21448 ;;		On entry : 0/0
 21449 ;;		On exit  : 0/0
 21450 ;;		Unchanged: 0/0
 21451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21456 ;;Total ram usage:        0 bytes
 21457 ;; Hardware stack levels used:    1
 21458 ;; Hardware stack levels required when called:    6
 21459 ;; This function calls:
 21460 ;;		Nothing
 21461 ;; This function is called by:
 21462 ;;		_atoi
 21463 ;; This function uses a reentrant model
 21464 ;;
 21465                           
 21466                           	psect	text72
 21467  018202                     __ptext72:
 21468                           	opt callstack 0
 21469  018202                     _isspace:
 21470                           	opt callstack 0
 21471                           
 21472                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21473  018202  52E6               	movf	postinc1,f,c
 21474                           
 21475                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21476                           
 21477                           ;incstack = 0
 21478  018204  0EFF               	movlw	-1
 21479  018206  6AE3               	clrf	plusw1,c
 21480  018208  2AE3               	incf	plusw1,f,c
 21481                           
 21482                           ;stkvar	_c @ sp[(-1)+-2]
 21483  01820A  0EFD               	movlw	-3
 21484  01820C  006F FF8C  F035    	movff	plusw1,btemp
 21485  018212  0E20               	movlw	32
 21486  018214  1835               	xorwf	btemp^0,w,c
 21487  018216  E104               	bnz	u6550
 21488  018218  0EFE               	movlw	-2
 21489  01821A  50E3               	movf	plusw1,w,c
 21490  01821C  B4D8               	btfsc	status,2,c
 21491  01821E  D012               	goto	l7107
 21492  018220                     u6550:
 21493                           
 21494                           ;stkvar	_c @ sp[(-1)+-2]
 21495  018220  0EFD               	movlw	-3
 21496  018222  50E3               	movf	plusw1,w,c
 21497  018224  0FF7               	addlw	247
 21498  018226  6E3F               	movwf	(btemp+10)^0,c
 21499  018228  0EFE               	movlw	-2
 21500  01822A  006F FF8C  F040    	movff	plusw1,btemp+11
 21501  018230  0EFF               	movlw	255
 21502  018232  2240               	addwfc	(btemp+11)^0,f,c
 21503  018234  5040               	movf	(btemp+11)^0,w,c
 21504  018236  E104               	bnz	u6560
 21505  018238  0E05               	movlw	5
 21506  01823A  5C3F               	subwf	(btemp+10)^0,w,c
 21507  01823C  A0D8               	btfss	status,0,c
 21508  01823E  D002               	goto	l7107
 21509  018240                     u6560:
 21510                           
 21511                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21512  018240  0EFF               	movlw	-1
 21513  018242  6AE3               	clrf	plusw1,c
 21514  018244                     l7107:
 21515                           
 21516                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21517  018244  0EFF               	movlw	-1
 21518  018246  50E3               	movf	plusw1,w,c
 21519  018248  6E35               	movwf	btemp^0,c
 21520  01824A  6A36               	clrf	(btemp+1)^0,c
 21521                           
 21522                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21523  01824C  52E5               	movf	postdec1,f,c
 21524  01824E  52E5               	movf	postdec1,f,c
 21525  018250  52E5               	movf	postdec1,f,c
 21526  018252  0012               	return		;funcret
 21527  018254                     __end_of_isspace:
 21528                           	opt callstack 0
 21529                           
 21530 ;; *************** function _isdigit *****************
 21531 ;; Defined at:
 21532 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;  c               2  [STACK] int 
 21535 ;; Auto vars:     Size  Location     Type
 21536 ;;		None
 21537 ;; Return value:  Size  Location     Type
 21538 ;;                  2  [STACK] int 
 21539 ;; Registers used:
 21540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21541 ;; Tracked objects:
 21542 ;;		On entry : 0/0
 21543 ;;		On exit  : 0/0
 21544 ;;		Unchanged: 0/0
 21545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21550 ;;Total ram usage:        0 bytes
 21551 ;; Hardware stack levels used:    1
 21552 ;; Hardware stack levels required when called:    6
 21553 ;; This function calls:
 21554 ;;		Nothing
 21555 ;; This function is called by:
 21556 ;;		_vfpfcnvrt
 21557 ;;		_atoi
 21558 ;; This function uses a reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text73
 21562  0186E4                     __ptext73:
 21563                           	opt callstack 0
 21564  0186E4                     _isdigit:
 21565                           	opt callstack 18
 21566                           
 21567                           ;stkvar	_c @ sp[(0)+-2]
 21568                           
 21569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21570                           ;incstack = 0
 21571  0186E4  0EFE               	movlw	-2
 21572  0186E6  50E3               	movf	plusw1,w,c
 21573  0186E8  0FD0               	addlw	208
 21574  0186EA  6E3F               	movwf	(btemp+10)^0,c
 21575  0186EC  0EFF               	movlw	-1
 21576  0186EE  006F FF8C  F040    	movff	plusw1,btemp+11
 21577  0186F4  0EFF               	movlw	255
 21578  0186F6  2240               	addwfc	(btemp+11)^0,f,c
 21579  0186F8  5040               	movf	(btemp+11)^0,w,c
 21580  0186FA  E106               	bnz	u5400
 21581  0186FC  0E0A               	movlw	10
 21582  0186FE  5C3F               	subwf	(btemp+10)^0,w,c
 21583  018700  B0D8               	btfsc	status,0,c
 21584  018702  D002               	goto	u5400
 21585  018704  0E01               	movlw	1
 21586  018706  D001               	goto	u5410
 21587  018708                     u5400:
 21588  018708  0E00               	movlw	0
 21589  01870A                     u5410:
 21590  01870A  6E35               	movwf	btemp^0,c
 21591  01870C  6A36               	clrf	(btemp+1)^0,c
 21592                           
 21593                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21594  01870E  52E5               	movf	postdec1,f,c
 21595  018710  52E5               	movf	postdec1,f,c
 21596  018712  0012               	return		;funcret
 21597  018714                     __end_of_isdigit:
 21598                           	opt callstack 0
 21599                           
 21600 ;; *************** function _set_vterm *****************
 21601 ;; Defined at:
 21602 ;;		line 104 in file "mconfig.c"
 21603 ;; Parameters:    Size  Location     Type
 21604 ;;  vterm           1  [STACK] unsigned char 
 21605 ;; Auto vars:     Size  Location     Type
 21606 ;;		None
 21607 ;; Return value:  Size  Location     Type
 21608 ;;                  1  [STACK] unsigned char 
 21609 ;; Registers used:
 21610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21611 ;; Tracked objects:
 21612 ;;		On entry : 0/0
 21613 ;;		On exit  : 3F/4
 21614 ;;		Unchanged: 0/0
 21615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21620 ;;Total ram usage:        0 bytes
 21621 ;; Hardware stack levels used:    1
 21622 ;; Hardware stack levels required when called:    6
 21623 ;; This function calls:
 21624 ;;		Nothing
 21625 ;; This function is called by:
 21626 ;;		_main
 21627 ;;		_check_help
 21628 ;; This function uses a reentrant model
 21629 ;;
 21630                           
 21631                           	psect	text74
 21632  018C10                     __ptext74:
 21633                           	opt callstack 0
 21634  018C10                     _set_vterm:
 21635                           	opt callstack 24
 21636                           
 21637                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 21638                           ;stkvar	_vterm @ sp[(0)+-1]
 21639                           
 21640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21641                           ;incstack = 0
 21642  018C10  0EFF               	movlw	-1
 21643  018C12  006F FF8C  F040    	movff	plusw1,btemp+11
 21644  018C18  0E03               	movlw	3
 21645  018C1A  1640               	andwf	(btemp+11)^0,f,c
 21646  018C1C  0104               	movlb	4	; () banked
 21647  018C1E  51D8               	movf	(_D+216)& (0+255),w,b
 21648  018C20  1840               	xorwf	(btemp+11)^0,w,c
 21649  018C22  0BFE               	andlw	-2
 21650  018C24  1840               	xorwf	(btemp+11)^0,w,c
 21651  018C26  6FD8               	movwf	(_D+216)& (0+255),b
 21652                           
 21653                           ; BSR set to: 4
 21654                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21655  018C28  52E5               	movf	postdec1,f,c
 21656  018C2A  0012               	return		;funcret
 21657  018C2C                     __end_of_set_vterm:
 21658                           	opt callstack 0
 21659                           
 21660 ;; *************** function _set_temp_display_help *****************
 21661 ;; Defined at:
 21662 ;;		line 208 in file "mconfig.c"
 21663 ;; Parameters:    Size  Location     Type
 21664 ;;  new_response    1  [STACK] const enum E16501
 21665 ;; Auto vars:     Size  Location     Type
 21666 ;;		None
 21667 ;; Return value:  Size  Location     Type
 21668 ;;                  1  [STACK] enum E16501
 21669 ;; Registers used:
 21670 ;;		wreg, fsr1l, fsr1h
 21671 ;; Tracked objects:
 21672 ;;		On entry : 0/4
 21673 ;;		On exit  : 3F/1
 21674 ;;		Unchanged: 0/0
 21675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;Total ram usage:        0 bytes
 21681 ;; Hardware stack levels used:    1
 21682 ;; Hardware stack levels required when called:    6
 21683 ;; This function calls:
 21684 ;;		Nothing
 21685 ;; This function is called by:
 21686 ;;		_check_help
 21687 ;; This function uses a reentrant model
 21688 ;;
 21689                           
 21690                           	psect	text75
 21691  018CFA                     __ptext75:
 21692                           	opt callstack 0
 21693  018CFA                     _set_temp_display_help:
 21694                           	opt callstack 23
 21695                           
 21696                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21697                           
 21698                           ; BSR set to: 4
 21699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21700                           ;incstack = 0
 21701  018CFA  0101               	movlb	1	; () banked
 21702  018CFC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 21706                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21707  018CFE  0EFF               	movlw	-1
 21708  018D00  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 21709                           
 21710                           ; BSR set to: 1
 21711                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21712  018D06  52E5               	movf	postdec1,f,c
 21713  018D08  0012               	return		;funcret
 21714  018D0A                     __end_of_set_temp_display_help:
 21715                           	opt callstack 0
 21716                           
 21717 ;; *************** function _set_display_info *****************
 21718 ;; Defined at:
 21719 ;;		line 197 in file "mconfig.c"
 21720 ;; Parameters:    Size  Location     Type
 21721 ;;  new_response    1  [STACK] const enum E16501
 21722 ;; Auto vars:     Size  Location     Type
 21723 ;;		None
 21724 ;; Return value:  Size  Location     Type
 21725 ;;                  1  [STACK] enum E16986
 21726 ;; Registers used:
 21727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21728 ;; Tracked objects:
 21729 ;;		On entry : 0/4
 21730 ;;		On exit  : 0/0
 21731 ;;		Unchanged: 0/0
 21732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;Total ram usage:        0 bytes
 21738 ;; Hardware stack levels used:    1
 21739 ;; Hardware stack levels required when called:    7
 21740 ;; This function calls:
 21741 ;;		_TimerDone
 21742 ;; This function is called by:
 21743 ;;		_main
 21744 ;;		_check_help
 21745 ;; This function uses a reentrant model
 21746 ;;
 21747                           
 21748                           	psect	text76
 21749  018B7C                     __ptext76:
 21750                           	opt callstack 0
 21751  018B7C                     _set_display_info:
 21752                           	opt callstack 23
 21753                           
 21754                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 21755                           
 21756                           ; BSR set to: 1
 21757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21758                           ;incstack = 0
 21759  018B7C  0E07               	movlw	7
 21760  018B7E  6EE6               	movwf	postinc1,c
 21761  018B80  EC49  F0C5         	call	_TimerDone	;wreg free
 21762  018B84  5035               	movf	btemp^0,w,c
 21763  018B86  B4D8               	btfsc	status,2,c
 21764  018B88  D006               	goto	l1602
 21765                           
 21766                           ;mconfig.c: 202:   old_info = V.response.info;
 21767  018B8A  0101               	movlb	1	; () banked
 21768  018B8C  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21769                           
 21770                           ; BSR set to: 1
 21771                           ;mconfig.c: 203:   V.response.info = new_response_info;
 21772                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21773  018B8E  0EFF               	movlw	-1
 21774  018B90  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 21775  018B96                     l1602:
 21776                           
 21777                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21778  018B96  52E5               	movf	postdec1,f,c
 21779  018B98  0012               	return		;funcret
 21780  018B9A                     __end_of_set_display_info:
 21781                           	opt callstack 0
 21782                           
 21783 ;; *************** function _mode_lamp_dim *****************
 21784 ;; Defined at:
 21785 ;;		line 13 in file "mconfig.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  level           2  [STACK] const unsigned short 
 21788 ;; Auto vars:     Size  Location     Type
 21789 ;;		None
 21790 ;; Return value:  Size  Location     Type
 21791 ;;                  1  [STACK] void 
 21792 ;; Registers used:
 21793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21794 ;; Tracked objects:
 21795 ;;		On entry : 0/1
 21796 ;;		On exit  : 0/0
 21797 ;;		Unchanged: 0/0
 21798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;Total ram usage:        0 bytes
 21804 ;; Hardware stack levels used:    1
 21805 ;; Hardware stack levels required when called:    7
 21806 ;; This function calls:
 21807 ;;		_PWM8_LoadDutyValue
 21808 ;; This function is called by:
 21809 ;;		_main
 21810 ;;		_check_help
 21811 ;; This function uses a reentrant model
 21812 ;;
 21813                           
 21814                           	psect	text77
 21815  018C62                     __ptext77:
 21816                           	opt callstack 0
 21817  018C62                     _mode_lamp_dim:
 21818                           	opt callstack 23
 21819                           
 21820                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21821                           ;stkvar	_level @ sp[(0)+-2]
 21822                           
 21823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21824                           ;incstack = 0
 21825  018C62  0EFE               	movlw	-2
 21826  018C64  006F FF8F FFE6     	movff	plusw1,postinc1
 21827  018C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 21828  018C70  EC41  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 21829                           
 21830                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21831  018C74  52E5               	movf	postdec1,f,c
 21832  018C76  52E5               	movf	postdec1,f,c
 21833  018C78  0012               	return		;funcret
 21834  018C7A                     __end_of_mode_lamp_dim:
 21835                           	opt callstack 0
 21836                           
 21837 ;; *************** function _mode_lamp_bright *****************
 21838 ;; Defined at:
 21839 ;;		line 18 in file "mconfig.c"
 21840 ;; Parameters:    Size  Location     Type
 21841 ;;		None
 21842 ;; Auto vars:     Size  Location     Type
 21843 ;;		None
 21844 ;; Return value:  Size  Location     Type
 21845 ;;                  1  [STACK] void 
 21846 ;; Registers used:
 21847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21848 ;; Tracked objects:
 21849 ;;		On entry : 0/1
 21850 ;;		On exit  : 0/0
 21851 ;;		Unchanged: 0/0
 21852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;Total ram usage:        0 bytes
 21858 ;; Hardware stack levels used:    1
 21859 ;; Hardware stack levels required when called:    7
 21860 ;; This function calls:
 21861 ;;		_PWM8_LoadDutyValue
 21862 ;; This function is called by:
 21863 ;;		_check_help
 21864 ;; This function uses a reentrant model
 21865 ;;
 21866                           
 21867                           	psect	text78
 21868  018D18                     __ptext78:
 21869                           	opt callstack 0
 21870  018D18                     _mode_lamp_bright:
 21871                           	opt callstack 22
 21872                           
 21873                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21874                           
 21875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21876                           ;incstack = 0
 21877  018D18  0E2C               	movlw	44
 21878  018D1A  6EE6               	movwf	postinc1,c
 21879  018D1C  0E01               	movlw	1
 21880  018D1E  6EE6               	movwf	postinc1,c
 21881  018D20  EC41  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 21882                           
 21883                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21884  018D24  0012               	return		;funcret
 21885  018D26                     __end_of_mode_lamp_bright:
 21886                           	opt callstack 0
 21887                           
 21888 ;; *************** function _PWM8_LoadDutyValue *****************
 21889 ;; Defined at:
 21890 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21891 ;; Parameters:    Size  Location     Type
 21892 ;;  dutyValue       2  [STACK] unsigned short 
 21893 ;; Auto vars:     Size  Location     Type
 21894 ;;		None
 21895 ;; Return value:  Size  Location     Type
 21896 ;;                  1  [STACK] void 
 21897 ;; Registers used:
 21898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21899 ;; Tracked objects:
 21900 ;;		On entry : 0/1
 21901 ;;		On exit  : 0/0
 21902 ;;		Unchanged: 0/0
 21903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21908 ;;Total ram usage:        0 bytes
 21909 ;; Hardware stack levels used:    1
 21910 ;; Hardware stack levels required when called:    6
 21911 ;; This function calls:
 21912 ;;		Nothing
 21913 ;; This function is called by:
 21914 ;;		_mode_lamp_dim
 21915 ;;		_mode_lamp_bright
 21916 ;; This function uses a reentrant model
 21917 ;;
 21918                           
 21919                           	psect	text79
 21920  018482                     __ptext79:
 21921                           	opt callstack 0
 21922  018482                     _PWM8_LoadDutyValue:
 21923                           	opt callstack 23
 21924                           
 21925                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21926                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21927                           
 21928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21929                           ;incstack = 0
 21930  018482  0EFE               	movlw	-2
 21931  018484  006F FF8C  F03F    	movff	plusw1,btemp+10
 21932  01848A  0EFF               	movlw	-1
 21933  01848C  006F FF8C  F040    	movff	plusw1,btemp+11
 21934  018492  90D8               	bcf	status,0,c
 21935  018494  3240               	rrcf	(btemp+11)^0,f,c
 21936  018496  323F               	rrcf	(btemp+10)^0,f,c
 21937  018498  90D8               	bcf	status,0,c
 21938  01849A  3240               	rrcf	(btemp+11)^0,f,c
 21939  01849C  323F               	rrcf	(btemp+10)^0,f,c
 21940  01849E  503F               	movf	(btemp+10)^0,w,c
 21941  0184A0  6E61               	movwf	97,c	;volatile
 21942                           
 21943                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21944                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21945  0184A2  0EFE               	movlw	-2
 21946  0184A4  006F FF8C  F040    	movff	plusw1,btemp+11
 21947  0184AA  0E03               	movlw	3
 21948  0184AC  1640               	andwf	(btemp+11)^0,f,c
 21949  0184AE  0E06               	movlw	6
 21950  0184B0  6E35               	movwf	btemp^0,c
 21951  0184B2                     u8205:
 21952  0184B2  90D8               	bcf	status,0,c
 21953  0184B4  3640               	rlcf	(btemp+11)^0,f,c
 21954  0184B6  2E35               	decfsz	btemp^0,f,c
 21955  0184B8  D7FC               	goto	u8205
 21956  0184BA  5040               	movf	(btemp+11)^0,w,c
 21957  0184BC  6E60               	movwf	96,c	;volatile
 21958                           
 21959                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21960  0184BE  52E5               	movf	postdec1,f,c
 21961  0184C0  52E5               	movf	postdec1,f,c
 21962  0184C2  0012               	return		;funcret
 21963  0184C4                     __end_of_PWM8_LoadDutyValue:
 21964                           	opt callstack 0
 21965                           
 21966 ;; *************** function _help_button *****************
 21967 ;; Defined at:
 21968 ;;		line 26 in file "mconfig.c"
 21969 ;; Parameters:    Size  Location     Type
 21970 ;;		None
 21971 ;; Auto vars:     Size  Location     Type
 21972 ;;		None
 21973 ;; Return value:  Size  Location     Type
 21974 ;;                  1  [STACK] _Bool 
 21975 ;; Registers used:
 21976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21977 ;; Tracked objects:
 21978 ;;		On entry : 0/1
 21979 ;;		On exit  : 0/0
 21980 ;;		Unchanged: 0/0
 21981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21986 ;;Total ram usage:        0 bytes
 21987 ;; Hardware stack levels used:    1
 21988 ;; Hardware stack levels required when called:    7
 21989 ;; This function calls:
 21990 ;;		_StartTimer
 21991 ;;		_TimerDone
 21992 ;; This function is called by:
 21993 ;;		_check_help
 21994 ;; This function uses a reentrant model
 21995 ;;
 21996                           
 21997                           	psect	text80
 21998  018540                     __ptext80:
 21999                           	opt callstack 0
 22000  018540                     _help_button:
 22001                           	opt callstack 22
 22002                           
 22003                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22004                           
 22005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22006                           ;incstack = 0
 22007  018540  B0CB               	btfsc	203,0,c	;volatile
 22008  018542  D00C               	goto	l1545
 22009                           
 22010                           ;mconfig.c: 29:   V.help = 1;
 22011  018544  0101               	movlb	1	; () banked
 22012  018546  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22013                           
 22014                           ; BSR set to: 1
 22015                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22016  018548  0E08               	movlw	8
 22017  01854A  6EE6               	movwf	postinc1,c
 22018  01854C  EC49  F0C5         	call	_TimerDone	;wreg free
 22019  018550  5035               	movf	btemp^0,w,c
 22020  018552  B4D8               	btfsc	status,2,c
 22021  018554  D003               	goto	l1545
 22022                           
 22023                           ;mconfig.c: 31:    return 1;
 22024  018556  0E01               	movlw	1
 22025  018558  6E35               	movwf	btemp^0,c
 22026  01855A  0012               	return	
 22027  01855C                     l1545:
 22028                           
 22029                           ;mconfig.c: 34:  if (!V.help)
 22030  01855C  0101               	movlb	1	; () banked
 22031  01855E  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22032  018560  D008               	goto	l8637
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22036  018562  0E2C               	movlw	44
 22037  018564  6EE6               	movwf	postinc1,c
 22038  018566  0E01               	movlw	1
 22039  018568  6EE6               	movwf	postinc1,c
 22040  01856A  0E08               	movlw	8
 22041  01856C  6EE6               	movwf	postinc1,c
 22042  01856E  EC82  F0C2         	call	_StartTimer	;wreg free
 22043  018572                     l8637:
 22044                           
 22045                           ;mconfig.c: 37:  return 0;
 22046  018572  0E00               	movlw	0
 22047  018574  6E35               	movwf	btemp^0,c
 22048                           
 22049                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22050  018576  0012               	return		;funcret
 22051  018578                     __end_of_help_button:
 22052                           	opt callstack 0
 22053                           
 22054 ;; *************** function _TimerDone *****************
 22055 ;; Defined at:
 22056 ;;		line 20 in file "timers.c"
 22057 ;; Parameters:    Size  Location     Type
 22058 ;;  timer           1  [STACK] const unsigned char 
 22059 ;; Auto vars:     Size  Location     Type
 22060 ;;		None
 22061 ;; Return value:  Size  Location     Type
 22062 ;;                  1  [STACK] _Bool 
 22063 ;; Registers used:
 22064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22065 ;; Tracked objects:
 22066 ;;		On entry : 0/4
 22067 ;;		On exit  : 0/0
 22068 ;;		Unchanged: 0/0
 22069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22074 ;;Total ram usage:        0 bytes
 22075 ;; Hardware stack levels used:    1
 22076 ;; Hardware stack levels required when called:    6
 22077 ;; This function calls:
 22078 ;;		Nothing
 22079 ;; This function is called by:
 22080 ;;		_main
 22081 ;;		_WaitMs
 22082 ;;		_help_button
 22083 ;;		_check_help
 22084 ;;		_set_display_info
 22085 ;; This function uses a reentrant model
 22086 ;;
 22087                           
 22088                           	psect	text81
 22089  018A92                     __ptext81:
 22090                           	opt callstack 0
 22091  018A92                     _TimerDone:
 22092                           	opt callstack 23
 22093                           
 22094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22095                           ;incstack = 0
 22096  018A92  0004               	clrwdt		;# 
 22097                           
 22098                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22099                           ;stkvar	_timer @ sp[(0)+-1]
 22100  018A94  0EFF               	movlw	-1
 22101  018A96  50E3               	movf	plusw1,w,c
 22102  018A98  0D02               	mullw	2
 22103  018A9A  50F3               	movf	243,w,c
 22104  018A9C  0F60               	addlw	low _tickCount
 22105  018A9E  6ED9               	movwf	fsr2l,c
 22106  018AA0  6ADA               	clrf	fsr2h,c
 22107  018AA2  50DE               	movf	postinc2,w,c
 22108  018AA4  10DE               	iorwf	postinc2,w,c
 22109  018AA6  A4D8               	btfss	status,2,c
 22110  018AA8  D002               	goto	l8029
 22111                           
 22112                           ;timers.c: 24:   return 1;
 22113  018AAA  0E01               	movlw	1
 22114  018AAC  D001               	goto	L22
 22115  018AAE                     l8029:
 22116                           
 22117                           ;timers.c: 26:  return 0;
 22118  018AAE  0E00               	movlw	0
 22119  018AB0                     L22:
 22120  018AB0  6E35               	movwf	btemp^0,c
 22121                           
 22122                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22123  018AB2  52E5               	movf	postdec1,f,c
 22124  018AB4  0012               	return		;funcret
 22125  018AB6                     __end_of_TimerDone:
 22126                           	opt callstack 0
 22127                           
 22128 ;; *************** function _StartTimer *****************
 22129 ;; Defined at:
 22130 ;;		line 12 in file "timers.c"
 22131 ;; Parameters:    Size  Location     Type
 22132 ;;  timer           1  [STACK] const unsigned char 
 22133 ;;  count           2  [STACK] const unsigned short 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;		None
 22136 ;; Return value:  Size  Location     Type
 22137 ;;                  1  [STACK] void 
 22138 ;; Registers used:
 22139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22140 ;; Tracked objects:
 22141 ;;		On entry : 0/4
 22142 ;;		On exit  : 0/0
 22143 ;;		Unchanged: 0/0
 22144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;Total ram usage:        0 bytes
 22150 ;; Hardware stack levels used:    1
 22151 ;; Hardware stack levels required when called:    6
 22152 ;; This function calls:
 22153 ;;		Nothing
 22154 ;; This function is called by:
 22155 ;;		_main
 22156 ;;		_WaitMs
 22157 ;;		_help_button
 22158 ;;		_check_help
 22159 ;; This function uses a reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text82
 22163  018504                     __ptext82:
 22164                           	opt callstack 0
 22165  018504                     _StartTimer:
 22166                           	opt callstack 21
 22167                           
 22168                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 22169                           ;stkvar	_count @ sp[(0)+-3]
 22170                           
 22171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22172                           ;incstack = 0
 22173  018504  0EFD               	movlw	-3
 22174  018506  006F FF8C  F03F    	movff	plusw1,btemp+10
 22175  01850C  0EFE               	movlw	-2
 22176  01850E  006F FF8C  F040    	movff	plusw1,btemp+11
 22177  018514  90D8               	bcf	status,0,c
 22178  018516  343F               	rlcf	(btemp+10)^0,w,c
 22179  018518  6E3D               	movwf	(btemp+8)^0,c
 22180  01851A  3440               	rlcf	(btemp+11)^0,w,c
 22181  01851C  6E3E               	movwf	(btemp+9)^0,c
 22182                           
 22183                           ;stkvar	_timer @ sp[(0)+-1]
 22184  01851E  0EFF               	movlw	-1
 22185  018520  50E3               	movf	plusw1,w,c
 22186  018522  0D02               	mullw	2
 22187  018524  50F3               	movf	243,w,c
 22188  018526  0F60               	addlw	low _tickCount
 22189  018528  6ED9               	movwf	fsr2l,c
 22190  01852A  6ADA               	clrf	fsr2h,c
 22191  01852C  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 22192  018532  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 22193                           
 22194                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22195  018538  52E5               	movf	postdec1,f,c
 22196  01853A  52E5               	movf	postdec1,f,c
 22197  01853C  52E5               	movf	postdec1,f,c
 22198  01853E  0012               	return		;funcret
 22199  018540                     __end_of_StartTimer:
 22200                           	opt callstack 0
 22201                           
 22202 ;; *************** function _display_info *****************
 22203 ;; Defined at:
 22204 ;;		line 187 in file "mconfig.c"
 22205 ;; Parameters:    Size  Location     Type
 22206 ;;		None
 22207 ;; Auto vars:     Size  Location     Type
 22208 ;;		None
 22209 ;; Return value:  Size  Location     Type
 22210 ;;                  1  [STACK] enum E16501
 22211 ;; Registers used:
 22212 ;;		btemp
 22213 ;; Tracked objects:
 22214 ;;		On entry : 0/1
 22215 ;;		On exit  : 0/0
 22216 ;;		Unchanged: 0/0
 22217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22222 ;;Total ram usage:        0 bytes
 22223 ;; Hardware stack levels used:    1
 22224 ;; Hardware stack levels required when called:    6
 22225 ;; This function calls:
 22226 ;;		Nothing
 22227 ;; This function is called by:
 22228 ;;		_check_help
 22229 ;; This function uses a reentrant model
 22230 ;;
 22231                           
 22232                           	psect	text83
 22233  018D82                     __ptext83:
 22234                           	opt callstack 0
 22235  018D82                     _display_info:
 22236                           	opt callstack 23
 22237                           
 22238                           ;mconfig.c: 189:  return V.response.info;
 22239                           
 22240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22241                           ;incstack = 0
 22242  018D82  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 22243                           
 22244                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22245  018D88  0012               	return		;funcret
 22246  018D8A                     __end_of_display_info:
 22247                           	opt callstack 0
 22248                           
 22249 ;; *************** function _display_help *****************
 22250 ;; Defined at:
 22251 ;;		line 192 in file "mconfig.c"
 22252 ;; Parameters:    Size  Location     Type
 22253 ;;		None
 22254 ;; Auto vars:     Size  Location     Type
 22255 ;;		None
 22256 ;; Return value:  Size  Location     Type
 22257 ;;                  1  [STACK] enum E16501
 22258 ;; Registers used:
 22259 ;;		btemp
 22260 ;; Tracked objects:
 22261 ;;		On entry : 3F/1
 22262 ;;		On exit  : 0/0
 22263 ;;		Unchanged: 0/0
 22264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;Total ram usage:        0 bytes
 22270 ;; Hardware stack levels used:    1
 22271 ;; Hardware stack levels required when called:    6
 22272 ;; This function calls:
 22273 ;;		Nothing
 22274 ;; This function is called by:
 22275 ;;		_check_help
 22276 ;; This function uses a reentrant model
 22277 ;;
 22278                           
 22279                           	psect	text84
 22280  018D8A                     __ptext84:
 22281                           	opt callstack 0
 22282  018D8A                     _display_help:
 22283                           	opt callstack 23
 22284                           
 22285                           ;mconfig.c: 194:  return V.response.help_temp;
 22286                           
 22287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22288                           ;incstack = 0
 22289  018D8A  0060  F690  F035   	movff	_V+164,btemp	;volatile
 22290                           
 22291                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22292  018D90  0012               	return		;funcret
 22293  018D92                     __end_of_display_help:
 22294                           	opt callstack 0
 22295                           
 22296 ;; *************** function _check_adc_scan *****************
 22297 ;; Defined at:
 22298 ;;		line 55 in file "daq.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;		None
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;		None
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  1  [STACK] _Bool 
 22305 ;; Registers used:
 22306 ;;		btemp
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/4
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22316 ;;Total ram usage:        0 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:    6
 22319 ;; This function calls:
 22320 ;;		Nothing
 22321 ;; This function is called by:
 22322 ;;		_main
 22323 ;; This function uses a reentrant model
 22324 ;;
 22325                           
 22326                           	psect	text85
 22327  018D92                     __ptext85:
 22328                           	opt callstack 0
 22329  018D92                     _check_adc_scan:
 22330                           	opt callstack 24
 22331                           
 22332                           ;daq.c: 57:  return R.done;
 22333                           
 22334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22335                           ;incstack = 0
 22336  018D92  0060  F338  F035   	movff	_R+43,btemp	;volatile
 22337                           
 22338                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22339  018D98  0012               	return		;funcret
 22340  018D9A                     __end_of_check_adc_scan:
 22341                           	opt callstack 0
 22342                           
 22343 ;; *************** function _SYSTEM_Initialize *****************
 22344 ;; Defined at:
 22345 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22346 ;; Parameters:    Size  Location     Type
 22347 ;;		None
 22348 ;; Auto vars:     Size  Location     Type
 22349 ;;		None
 22350 ;; Return value:  Size  Location     Type
 22351 ;;                  1  [STACK] void 
 22352 ;; Registers used:
 22353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22354 ;; Tracked objects:
 22355 ;;		On entry : 0/0
 22356 ;;		On exit  : 3F/3C
 22357 ;;		Unchanged: 0/0
 22358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;Total ram usage:        0 bytes
 22364 ;; Hardware stack levels used:    1
 22365 ;; Hardware stack levels required when called:    8
 22366 ;; This function calls:
 22367 ;;		_ADCC_Initialize
 22368 ;;		_CLKREF_Initialize
 22369 ;;		_DMA1_Initialize
 22370 ;;		_DMA2_Initialize
 22371 ;;		_EXT_INT_Initialize
 22372 ;;		_FVR_Initialize
 22373 ;;		_INTERRUPT_Initialize
 22374 ;;		_OSCILLATOR_Initialize
 22375 ;;		_PIN_MANAGER_Initialize
 22376 ;;		_PMD_Initialize
 22377 ;;		_PWM8_Initialize
 22378 ;;		_SPI1_Initialize
 22379 ;;		_TMR2_Initialize
 22380 ;;		_TMR5_Initialize
 22381 ;;		_TMR6_Initialize
 22382 ;;		_UART1_Initialize
 22383 ;;		_UART2_Initialize
 22384 ;; This function is called by:
 22385 ;;		_main
 22386 ;; This function uses a reentrant model
 22387 ;;
 22388                           
 22389                           	psect	text86
 22390  018328                     __ptext86:
 22391                           	opt callstack 0
 22392  018328                     _SYSTEM_Initialize:
 22393                           	opt callstack 22
 22394                           
 22395                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22396                           
 22397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22398                           ;incstack = 0
 22399  018328  EC28  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22400                           
 22401                           ; BSR set to: 57
 22402                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22403  01832C  EC6A  F0C6         	call	_PMD_Initialize	;wreg free
 22404                           
 22405                           ; BSR set to: 57
 22406                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22407  018330  EC3D  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22408                           
 22409                           ; BSR set to: 58
 22410                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22411  018334  EC5F  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22412                           
 22413                           ; BSR set to: 57
 22414                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22415  018338  ECCD  F0C6         	call	_FVR_Initialize	;wreg free
 22416                           
 22417                           ; BSR set to: 62
 22418                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22419  01833C  ECBF  F0BE         	call	_ADCC_Initialize	;wreg free
 22420                           
 22421                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 22422  018340  EC54  F0C6         	call	_PWM8_Initialize	;wreg free
 22423                           
 22424                           ; BSR set to: 63
 22425                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 22426  018344  EC3D  F0C6         	call	_TMR2_Initialize	;wreg free
 22427                           
 22428                           ; BSR set to: 57
 22429                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22430  018348  EC28  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22431                           
 22432                           ; BSR set to: 57
 22433                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22434  01834C  ECCD  F0C3         	call	_TMR6_Initialize	;wreg free
 22435                           
 22436                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22437  018350  ECB7  F0C1         	call	_TMR5_Initialize	;wreg free
 22438                           
 22439                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22440  018354  EC8D  F0BF         	call	_UART1_Initialize	;wreg free
 22441                           
 22442                           ; BSR set to: 57
 22443                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22444  018358  EC21  F0C0         	call	_UART2_Initialize	;wreg free
 22445                           
 22446                           ; BSR set to: 57
 22447                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22448  01835C  EC49  F0C6         	call	_SPI1_Initialize	;wreg free
 22449                           
 22450                           ; BSR set to: 61
 22451                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22452  018360  ECAB  F0C0         	call	_DMA2_Initialize	;wreg free
 22453                           
 22454                           ; BSR set to: 59
 22455                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22456  018364  EC8A  F0BE         	call	_DMA1_Initialize	;wreg free
 22457                           
 22458                           ; BSR set to: 59
 22459                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22460  018368  ECAB  F0C6         	call	_CLKREF_Initialize	;wreg free
 22461                           
 22462                           ; BSR set to: 60
 22463                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22464  01836C  0012               	return		;funcret
 22465  01836E                     __end_of_SYSTEM_Initialize:
 22466                           	opt callstack 0
 22467                           
 22468 ;; *************** function _UART2_Initialize *****************
 22469 ;; Defined at:
 22470 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22471 ;; Parameters:    Size  Location     Type
 22472 ;;		None
 22473 ;; Auto vars:     Size  Location     Type
 22474 ;;		None
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  1  [STACK] void 
 22477 ;; Registers used:
 22478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22479 ;; Tracked objects:
 22480 ;;		On entry : 3F/39
 22481 ;;		On exit  : 3F/39
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22488 ;;Total ram usage:        0 bytes
 22489 ;; Hardware stack levels used:    1
 22490 ;; Hardware stack levels required when called:    7
 22491 ;; This function calls:
 22492 ;;		_UART2_SetRxInterruptHandler
 22493 ;;		_UART2_SetTxInterruptHandler
 22494 ;; This function is called by:
 22495 ;;		_SYSTEM_Initialize
 22496 ;; This function uses a reentrant model
 22497 ;;
 22498                           
 22499                           	psect	text87
 22500  018042                     __ptext87:
 22501                           	opt callstack 0
 22502  018042                     _UART2_Initialize:
 22503                           	opt callstack 22
 22504                           
 22505                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22506                           
 22507                           ; BSR set to: 60
 22508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22509                           ;incstack = 0
 22510  018042  0139               	movlb	57	; () banked
 22511  018044  9596               	bcf	150,2,b	;volatile
 22512                           
 22513                           ; BSR set to: 57
 22514                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22515  018046  0ED6               	movlw	low _UART2_Receive_ISR
 22516  018048  6EE6               	movwf	postinc1,c
 22517  01804A  0E8B               	movlw	high _UART2_Receive_ISR
 22518  01804C  6EE6               	movwf	postinc1,c
 22519  01804E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22520  018050  6EE6               	movwf	postinc1,c
 22521  018052  EC32  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22522                           
 22523                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22524  018056  0139               	movlb	57	; () banked
 22525  018058  9796               	bcf	150,3,b	;volatile
 22526                           
 22527                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22528  01805A  0E6E               	movlw	low _UART2_Transmit_ISR
 22529  01805C  6EE6               	movwf	postinc1,c
 22530  01805E  0E87               	movlw	high _UART2_Transmit_ISR
 22531  018060  6EE6               	movwf	postinc1,c
 22532  018062  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22533  018064  6EE6               	movwf	postinc1,c
 22534  018066  EC1E  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22535                           
 22536                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22537  01806A  013D               	movlb	61	; () banked
 22538  01806C  6BD4               	clrf	212,b	;volatile
 22539                           
 22540                           ; BSR set to: 61
 22541                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22542  01806E  6BD6               	clrf	214,b	;volatile
 22543                           
 22544                           ; BSR set to: 61
 22545                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22546  018070  6BD8               	clrf	216,b	;volatile
 22547                           
 22548                           ; BSR set to: 61
 22549                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22550  018072  0EB0               	movlw	176
 22551  018074  6FDA               	movwf	218,b	;volatile
 22552                           
 22553                           ; BSR set to: 61
 22554                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22555  018076  0E80               	movlw	128
 22556  018078  6FDB               	movwf	219,b	;volatile
 22557                           
 22558                           ; BSR set to: 61
 22559                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22560  01807A  6BDC               	clrf	220,b	;volatile
 22561                           
 22562                           ; BSR set to: 61
 22563                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22564  01807C  0E82               	movlw	130
 22565  01807E  6FDD               	movwf	221,b	;volatile
 22566                           
 22567                           ; BSR set to: 61
 22568                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22569  018080  0E06               	movlw	6
 22570  018082  6FDE               	movwf	222,b	;volatile
 22571                           
 22572                           ; BSR set to: 61
 22573                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22574  018084  6BDF               	clrf	223,b	;volatile
 22575                           
 22576                           ; BSR set to: 61
 22577                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22578  018086  6BE0               	clrf	224,b	;volatile
 22579                           
 22580                           ; BSR set to: 61
 22581                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22582  018088  6BE1               	clrf	225,b	;volatile
 22583                           
 22584                           ; BSR set to: 61
 22585                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22586  01808A  6BE2               	clrf	226,b	;volatile
 22587                           
 22588                           ; BSR set to: 61
 22589                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22590  01808C  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 22591                           
 22592                           ; BSR set to: 61
 22593                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22594  01808E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 22595                           
 22596                           ; BSR set to: 61
 22597                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22598  018090  0E40               	movlw	64
 22599  018092  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22600                           
 22601                           ; BSR set to: 61
 22602                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22603  018094  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 22604                           
 22605                           ; BSR set to: 61
 22606                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22607  018096  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 22608                           
 22609                           ; BSR set to: 61
 22610                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22611  018098  6A29               	clrf	_uart2RxCount^0,c	;volatile
 22612                           
 22613                           ; BSR set to: 61
 22614                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22615  01809A  0139               	movlb	57	; () banked
 22616  01809C  8596               	bsf	150,2,b	;volatile
 22617                           
 22618                           ; BSR set to: 57
 22619                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22620  01809E  0012               	return		;funcret
 22621  0180A0                     __end_of_UART2_Initialize:
 22622                           	opt callstack 0
 22623                           
 22624 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22625 ;; Defined at:
 22626 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22627 ;; Parameters:    Size  Location     Type
 22628 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22629 ;;		 -> UART2_Transmit_ISR(1), 
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;		None
 22632 ;; Return value:  Size  Location     Type
 22633 ;;                  1  [STACK] void 
 22634 ;; Registers used:
 22635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22636 ;; Tracked objects:
 22637 ;;		On entry : 3F/39
 22638 ;;		On exit  : 0/0
 22639 ;;		Unchanged: 0/0
 22640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22645 ;;Total ram usage:        0 bytes
 22646 ;; Hardware stack levels used:    1
 22647 ;; Hardware stack levels required when called:    6
 22648 ;; This function calls:
 22649 ;;		Nothing
 22650 ;; This function is called by:
 22651 ;;		_UART2_Initialize
 22652 ;; This function uses a reentrant model
 22653 ;;
 22654                           
 22655                           	psect	text88
 22656  01883C                     __ptext88:
 22657                           	opt callstack 0
 22658  01883C                     _UART2_SetTxInterruptHandler:
 22659                           	opt callstack 22
 22660                           
 22661                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22662                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22663                           
 22664                           ; BSR set to: 57
 22665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22666                           ;incstack = 0
 22667  01883C  50E1               	movf	fsr1l,w,c
 22668  01883E  0FFD               	addlw	-3
 22669  018840  6ED9               	movwf	fsr2l,c
 22670  018842  50E2               	movf	fsr1h,w,c
 22671  018844  6EDA               	movwf	fsr2h,c
 22672  018846  0EFF               	movlw	255
 22673  018848  22DA               	addwfc	fsr2h,f,c
 22674  01884A  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 22675  018850  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 22676  018856  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 22677                           
 22678                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22679  01885C  52E5               	movf	postdec1,f,c
 22680  01885E  52E5               	movf	postdec1,f,c
 22681  018860  52E5               	movf	postdec1,f,c
 22682  018862  0012               	return		;funcret
 22683  018864                     __end_of_UART2_SetTxInterruptHandler:
 22684                           	opt callstack 0
 22685                           
 22686 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22687 ;; Defined at:
 22688 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22689 ;; Parameters:    Size  Location     Type
 22690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22691 ;;		 -> UART2_Receive_ISR(1), 
 22692 ;; Auto vars:     Size  Location     Type
 22693 ;;		None
 22694 ;; Return value:  Size  Location     Type
 22695 ;;                  1  [STACK] void 
 22696 ;; Registers used:
 22697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22698 ;; Tracked objects:
 22699 ;;		On entry : 3F/39
 22700 ;;		On exit  : 0/0
 22701 ;;		Unchanged: 0/0
 22702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22707 ;;Total ram usage:        0 bytes
 22708 ;; Hardware stack levels used:    1
 22709 ;; Hardware stack levels required when called:    6
 22710 ;; This function calls:
 22711 ;;		Nothing
 22712 ;; This function is called by:
 22713 ;;		_UART2_Initialize
 22714 ;; This function uses a reentrant model
 22715 ;;
 22716                           
 22717                           	psect	text89
 22718  018864                     __ptext89:
 22719                           	opt callstack 0
 22720  018864                     _UART2_SetRxInterruptHandler:
 22721                           	opt callstack 22
 22722                           
 22723                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22725                           
 22726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22727                           ;incstack = 0
 22728  018864  50E1               	movf	fsr1l,w,c
 22729  018866  0FFD               	addlw	-3
 22730  018868  6ED9               	movwf	fsr2l,c
 22731  01886A  50E2               	movf	fsr1h,w,c
 22732  01886C  6EDA               	movwf	fsr2h,c
 22733  01886E  0EFF               	movlw	255
 22734  018870  22DA               	addwfc	fsr2h,f,c
 22735  018872  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 22736  018878  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 22737  01887E  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 22738                           
 22739                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22740  018884  52E5               	movf	postdec1,f,c
 22741  018886  52E5               	movf	postdec1,f,c
 22742  018888  52E5               	movf	postdec1,f,c
 22743  01888A  0012               	return		;funcret
 22744  01888C                     __end_of_UART2_SetRxInterruptHandler:
 22745                           	opt callstack 0
 22746                           
 22747 ;; *************** function _UART1_Initialize *****************
 22748 ;; Defined at:
 22749 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22750 ;; Parameters:    Size  Location     Type
 22751 ;;		None
 22752 ;; Auto vars:     Size  Location     Type
 22753 ;;		None
 22754 ;; Return value:  Size  Location     Type
 22755 ;;                  1  [STACK] void 
 22756 ;; Registers used:
 22757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22758 ;; Tracked objects:
 22759 ;;		On entry : 0/39
 22760 ;;		On exit  : 3F/39
 22761 ;;		Unchanged: 0/0
 22762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22767 ;;Total ram usage:        0 bytes
 22768 ;; Hardware stack levels used:    1
 22769 ;; Hardware stack levels required when called:    7
 22770 ;; This function calls:
 22771 ;;		_UART1_SetRxInterruptHandler
 22772 ;;		_UART1_SetTxInterruptHandler
 22773 ;; This function is called by:
 22774 ;;		_SYSTEM_Initialize
 22775 ;; This function uses a reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text90
 22779  017F1A                     __ptext90:
 22780                           	opt callstack 0
 22781  017F1A                     _UART1_Initialize:
 22782                           	opt callstack 22
 22783                           
 22784                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22785                           
 22786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22787                           ;incstack = 0
 22788  017F1A  0139               	movlb	57	; () banked
 22789  017F1C  9793               	bcf	147,3,b	;volatile
 22790                           
 22791                           ; BSR set to: 57
 22792                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22793  017F1E  0EB8               	movlw	low _UART1_Receive_ISR
 22794  017F20  6EE6               	movwf	postinc1,c
 22795  017F22  0E8B               	movlw	high _UART1_Receive_ISR
 22796  017F24  6EE6               	movwf	postinc1,c
 22797  017F26  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22798  017F28  6EE6               	movwf	postinc1,c
 22799  017F2A  EC5A  F0C4         	call	_UART1_SetRxInterruptHandler	;wreg free
 22800                           
 22801                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22802  017F2E  0139               	movlb	57	; () banked
 22803  017F30  9993               	bcf	147,4,b	;volatile
 22804                           
 22805                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22806  017F32  0E42               	movlw	low _UART1_Transmit_ISR
 22807  017F34  6EE6               	movwf	postinc1,c
 22808  017F36  0E87               	movlw	high _UART1_Transmit_ISR
 22809  017F38  6EE6               	movwf	postinc1,c
 22810  017F3A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22811  017F3C  6EE6               	movwf	postinc1,c
 22812  017F3E  EC46  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 22813                           
 22814                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22815  017F42  013D               	movlb	61	; () banked
 22816  017F44  6BEC               	clrf	236,b	;volatile
 22817                           
 22818                           ; BSR set to: 61
 22819                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22820  017F46  6BED               	clrf	237,b	;volatile
 22821                           
 22822                           ; BSR set to: 61
 22823                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22824  017F48  6BEE               	clrf	238,b	;volatile
 22825                           
 22826                           ; BSR set to: 61
 22827                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22828  017F4A  6BEF               	clrf	239,b	;volatile
 22829                           
 22830                           ; BSR set to: 61
 22831                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22832  017F4C  6BF0               	clrf	240,b	;volatile
 22833                           
 22834                           ; BSR set to: 61
 22835                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22836  017F4E  6BF1               	clrf	241,b	;volatile
 22837                           
 22838                           ; BSR set to: 61
 22839                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22840  017F50  0EB0               	movlw	176
 22841  017F52  6FF2               	movwf	242,b	;volatile
 22842                           
 22843                           ; BSR set to: 61
 22844                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22845  017F54  0E80               	movlw	128
 22846  017F56  6FF3               	movwf	243,b	;volatile
 22847                           
 22848                           ; BSR set to: 61
 22849                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22850  017F58  6BF4               	clrf	244,b	;volatile
 22851                           
 22852                           ; BSR set to: 61
 22853                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22854  017F5A  0E82               	movlw	130
 22855  017F5C  6FF5               	movwf	245,b	;volatile
 22856                           
 22857                           ; BSR set to: 61
 22858                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22859  017F5E  0E06               	movlw	6
 22860  017F60  6FF6               	movwf	246,b	;volatile
 22861                           
 22862                           ; BSR set to: 61
 22863                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22864  017F62  6BF7               	clrf	247,b	;volatile
 22865                           
 22866                           ; BSR set to: 61
 22867                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22868  017F64  6BF8               	clrf	248,b	;volatile
 22869                           
 22870                           ; BSR set to: 61
 22871                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22872  017F66  6BF9               	clrf	249,b	;volatile
 22873                           
 22874                           ; BSR set to: 61
 22875                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22876  017F68  6BFA               	clrf	250,b	;volatile
 22877                           
 22878                           ; BSR set to: 61
 22879                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22880  017F6A  6A34               	clrf	_uart1TxHead^0,c	;volatile
 22881                           
 22882                           ; BSR set to: 61
 22883                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22884  017F6C  6A33               	clrf	_uart1TxTail^0,c	;volatile
 22885                           
 22886                           ; BSR set to: 61
 22887                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22888  017F6E  0E40               	movlw	64
 22889  017F70  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22890                           
 22891                           ; BSR set to: 61
 22892                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22893  017F72  6A31               	clrf	_uart1RxHead^0,c	;volatile
 22894                           
 22895                           ; BSR set to: 61
 22896                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22897  017F74  6A30               	clrf	_uart1RxTail^0,c	;volatile
 22898                           
 22899                           ; BSR set to: 61
 22900                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22901  017F76  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 22902                           
 22903                           ; BSR set to: 61
 22904                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22905  017F78  0139               	movlb	57	; () banked
 22906  017F7A  8793               	bsf	147,3,b	;volatile
 22907                           
 22908                           ; BSR set to: 57
 22909                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22910  017F7C  0012               	return		;funcret
 22911  017F7E                     __end_of_UART1_Initialize:
 22912                           	opt callstack 0
 22913                           
 22914 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22915 ;; Defined at:
 22916 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22919 ;;		 -> UART1_Transmit_ISR(1), 
 22920 ;; Auto vars:     Size  Location     Type
 22921 ;;		None
 22922 ;; Return value:  Size  Location     Type
 22923 ;;                  1  [STACK] void 
 22924 ;; Registers used:
 22925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22926 ;; Tracked objects:
 22927 ;;		On entry : 3F/39
 22928 ;;		On exit  : 0/0
 22929 ;;		Unchanged: 0/0
 22930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22935 ;;Total ram usage:        0 bytes
 22936 ;; Hardware stack levels used:    1
 22937 ;; Hardware stack levels required when called:    6
 22938 ;; This function calls:
 22939 ;;		Nothing
 22940 ;; This function is called by:
 22941 ;;		_UART1_Initialize
 22942 ;; This function uses a reentrant model
 22943 ;;
 22944                           
 22945                           	psect	text91
 22946  01888C                     __ptext91:
 22947                           	opt callstack 0
 22948  01888C                     _UART1_SetTxInterruptHandler:
 22949                           	opt callstack 22
 22950                           
 22951                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22952                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22953                           
 22954                           ; BSR set to: 57
 22955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22956                           ;incstack = 0
 22957  01888C  50E1               	movf	fsr1l,w,c
 22958  01888E  0FFD               	addlw	-3
 22959  018890  6ED9               	movwf	fsr2l,c
 22960  018892  50E2               	movf	fsr1h,w,c
 22961  018894  6EDA               	movwf	fsr2h,c
 22962  018896  0EFF               	movlw	255
 22963  018898  22DA               	addwfc	fsr2h,f,c
 22964  01889A  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 22965  0188A0  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 22966  0188A6  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 22967                           
 22968                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22969  0188AC  52E5               	movf	postdec1,f,c
 22970  0188AE  52E5               	movf	postdec1,f,c
 22971  0188B0  52E5               	movf	postdec1,f,c
 22972  0188B2  0012               	return		;funcret
 22973  0188B4                     __end_of_UART1_SetTxInterruptHandler:
 22974                           	opt callstack 0
 22975                           
 22976 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22977 ;; Defined at:
 22978 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22979 ;; Parameters:    Size  Location     Type
 22980 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22981 ;;		 -> UART1_Receive_ISR(1), 
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;		None
 22984 ;; Return value:  Size  Location     Type
 22985 ;;                  1  [STACK] void 
 22986 ;; Registers used:
 22987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22988 ;; Tracked objects:
 22989 ;;		On entry : 3F/39
 22990 ;;		On exit  : 0/0
 22991 ;;		Unchanged: 0/0
 22992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22997 ;;Total ram usage:        0 bytes
 22998 ;; Hardware stack levels used:    1
 22999 ;; Hardware stack levels required when called:    6
 23000 ;; This function calls:
 23001 ;;		Nothing
 23002 ;; This function is called by:
 23003 ;;		_UART1_Initialize
 23004 ;; This function uses a reentrant model
 23005 ;;
 23006                           
 23007                           	psect	text92
 23008  0188B4                     __ptext92:
 23009                           	opt callstack 0
 23010  0188B4                     _UART1_SetRxInterruptHandler:
 23011                           	opt callstack 22
 23012                           
 23013                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23014                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23015                           
 23016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23017                           ;incstack = 0
 23018  0188B4  50E1               	movf	fsr1l,w,c
 23019  0188B6  0FFD               	addlw	-3
 23020  0188B8  6ED9               	movwf	fsr2l,c
 23021  0188BA  50E2               	movf	fsr1h,w,c
 23022  0188BC  6EDA               	movwf	fsr2h,c
 23023  0188BE  0EFF               	movlw	255
 23024  0188C0  22DA               	addwfc	fsr2h,f,c
 23025  0188C2  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 23026  0188C8  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 23027  0188CE  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 23028                           
 23029                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23030  0188D4  52E5               	movf	postdec1,f,c
 23031  0188D6  52E5               	movf	postdec1,f,c
 23032  0188D8  52E5               	movf	postdec1,f,c
 23033  0188DA  0012               	return		;funcret
 23034  0188DC                     __end_of_UART1_SetRxInterruptHandler:
 23035                           	opt callstack 0
 23036                           
 23037 ;; *************** function _TMR6_Initialize *****************
 23038 ;; Defined at:
 23039 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;		None
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  1  [STACK] void 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23048 ;; Tracked objects:
 23049 ;;		On entry : 3F/39
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23057 ;;Total ram usage:        0 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:    7
 23060 ;; This function calls:
 23061 ;;		_TMR6_SetInterruptHandler
 23062 ;; This function is called by:
 23063 ;;		_SYSTEM_Initialize
 23064 ;; This function uses a reentrant model
 23065 ;;
 23066                           
 23067                           	psect	text93
 23068  01879A                     __ptext93:
 23069                           	opt callstack 0
 23070  01879A                     _TMR6_Initialize:
 23071                           	opt callstack 22
 23072                           
 23073                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23074                           
 23075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23076                           ;incstack = 0
 23077  01879A  0E01               	movlw	1
 23078  01879C  6E96               	movwf	150,c	;volatile
 23079                           
 23080                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23081  01879E  6A95               	clrf	149,c	;volatile
 23082                           
 23083                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23084  0187A0  6A97               	clrf	151,c	;volatile
 23085                           
 23086                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23087  0187A2  0E7C               	movlw	124
 23088  0187A4  6E93               	movwf	147,c	;volatile
 23089                           
 23090                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23091  0187A6  6A92               	clrf	146,c	;volatile
 23092                           
 23093                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23094  0187A8  0139               	movlb	57	; () banked
 23095  0187AA  91A9               	bcf	169,0,b	;volatile
 23096                           
 23097                           ; BSR set to: 57
 23098                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23099  0187AC  8199               	bsf	153,0,b	;volatile
 23100                           
 23101                           ; BSR set to: 57
 23102                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23103  0187AE  0EB4               	movlw	low _TMR6_DefaultInterruptHandler
 23104  0187B0  6EE6               	movwf	postinc1,c
 23105  0187B2  0E83               	movlw	high _TMR6_DefaultInterruptHandler
 23106  0187B4  6EE6               	movwf	postinc1,c
 23107  0187B6  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23108  0187B8  6EE6               	movwf	postinc1,c
 23109  0187BA  EC6E  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 23110                           
 23111                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23112  0187BE  0EE0               	movlw	224
 23113  0187C0  6E94               	movwf	148,c	;volatile
 23114                           
 23115                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23116  0187C2  0012               	return		;funcret
 23117  0187C4                     __end_of_TMR6_Initialize:
 23118                           	opt callstack 0
 23119                           
 23120 ;; *************** function _TMR6_SetInterruptHandler *****************
 23121 ;; Defined at:
 23122 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23123 ;; Parameters:    Size  Location     Type
 23124 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23125 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23126 ;; Auto vars:     Size  Location     Type
 23127 ;;		None
 23128 ;; Return value:  Size  Location     Type
 23129 ;;                  1  [STACK] void 
 23130 ;; Registers used:
 23131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23132 ;; Tracked objects:
 23133 ;;		On entry : 3F/39
 23134 ;;		On exit  : 0/0
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23141 ;;Total ram usage:        0 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:    6
 23144 ;; This function calls:
 23145 ;;		Nothing
 23146 ;; This function is called by:
 23147 ;;		_TMR6_Initialize
 23148 ;; This function uses a reentrant model
 23149 ;;
 23150                           
 23151                           	psect	text94
 23152  0188DC                     __ptext94:
 23153                           	opt callstack 0
 23154  0188DC                     _TMR6_SetInterruptHandler:
 23155                           	opt callstack 22
 23156                           
 23157                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23158                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23159                           
 23160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23161                           ;incstack = 0
 23162  0188DC  50E1               	movf	fsr1l,w,c
 23163  0188DE  0FFD               	addlw	-3
 23164  0188E0  6ED9               	movwf	fsr2l,c
 23165  0188E2  50E2               	movf	fsr1h,w,c
 23166  0188E4  6EDA               	movwf	fsr2h,c
 23167  0188E6  0EFF               	movlw	255
 23168  0188E8  22DA               	addwfc	fsr2h,f,c
 23169  0188EA  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 23170  0188F0  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 23171  0188F6  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 23172                           
 23173                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23174  0188FC  52E5               	movf	postdec1,f,c
 23175  0188FE  52E5               	movf	postdec1,f,c
 23176  018900  52E5               	movf	postdec1,f,c
 23177  018902  0012               	return		;funcret
 23178  018904                     __end_of_TMR6_SetInterruptHandler:
 23179                           	opt callstack 0
 23180                           
 23181 ;; *************** function _TMR5_Initialize *****************
 23182 ;; Defined at:
 23183 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23184 ;; Parameters:    Size  Location     Type
 23185 ;;		None
 23186 ;; Auto vars:     Size  Location     Type
 23187 ;;		None
 23188 ;; Return value:  Size  Location     Type
 23189 ;;                  1  [STACK] void 
 23190 ;; Registers used:
 23191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23192 ;; Tracked objects:
 23193 ;;		On entry : 0/39
 23194 ;;		On exit  : 0/0
 23195 ;;		Unchanged: 0/0
 23196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23201 ;;Total ram usage:        0 bytes
 23202 ;; Hardware stack levels used:    1
 23203 ;; Hardware stack levels required when called:    7
 23204 ;; This function calls:
 23205 ;;		_TMR5_SetInterruptHandler
 23206 ;; This function is called by:
 23207 ;;		_SYSTEM_Initialize
 23208 ;; This function uses a reentrant model
 23209 ;;
 23210                           
 23211                           	psect	text95
 23212  01836E                     __ptext95:
 23213                           	opt callstack 0
 23214  01836E                     _TMR5_Initialize:
 23215                           	opt callstack 22
 23216                           
 23217                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23218                           
 23219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23220                           ;incstack = 0
 23221  01836E  6A9B               	clrf	155,c	;volatile
 23222                           
 23223                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23224  018370  6A9C               	clrf	156,c	;volatile
 23225                           
 23226                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23227  018372  0E01               	movlw	1
 23228  018374  6E9D               	movwf	157,c	;volatile
 23229                           
 23230                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23231  018376  0E63               	movlw	99
 23232  018378  6E99               	movwf	153,c	;volatile
 23233                           
 23234                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23235  01837A  0EC0               	movlw	192
 23236  01837C  6E98               	movwf	152,c	;volatile
 23237                           
 23238                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23239  01837E  5098               	movf	152,w,c	;volatile
 23240  018380  006F FE64  F035    	movff	16281,btemp	;volatile
 23241  018386  6A36               	clrf	(btemp+1)^0,c
 23242  018388  0060  F0D4  F036   	movff	btemp,btemp+1
 23243  01838E  6A35               	clrf	btemp^0,c
 23244  018390  1035               	iorwf	btemp^0,w,c
 23245  018392  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 23246  018394  5036               	movf	(btemp+1)^0,w,c
 23247  018396  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23248                           
 23249                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23250  018398  0139               	movlb	57	; () banked
 23251  01839A  9DA8               	bcf	168,6,b	;volatile
 23252                           
 23253                           ; BSR set to: 57
 23254                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23255  01839C  8D98               	bsf	152,6,b	;volatile
 23256                           
 23257                           ; BSR set to: 57
 23258                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23259  01839E  0ECC               	movlw	low _TMR5_DefaultInterruptHandler
 23260  0183A0  6EE6               	movwf	postinc1,c
 23261  0183A2  0E89               	movlw	high _TMR5_DefaultInterruptHandler
 23262  0183A4  6EE6               	movwf	postinc1,c
 23263  0183A6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23264  0183A8  6EE6               	movwf	postinc1,c
 23265  0183AA  EC82  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 23266                           
 23267                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23268  0183AE  0E31               	movlw	49
 23269  0183B0  6E9A               	movwf	154,c	;volatile
 23270                           
 23271                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23272  0183B2  0012               	return		;funcret
 23273  0183B4                     __end_of_TMR5_Initialize:
 23274                           	opt callstack 0
 23275                           
 23276 ;; *************** function _TMR5_SetInterruptHandler *****************
 23277 ;; Defined at:
 23278 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23281 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23282 ;; Auto vars:     Size  Location     Type
 23283 ;;		None
 23284 ;; Return value:  Size  Location     Type
 23285 ;;                  1  [STACK] void 
 23286 ;; Registers used:
 23287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23288 ;; Tracked objects:
 23289 ;;		On entry : 3F/39
 23290 ;;		On exit  : 0/0
 23291 ;;		Unchanged: 0/0
 23292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;Total ram usage:        0 bytes
 23298 ;; Hardware stack levels used:    1
 23299 ;; Hardware stack levels required when called:    6
 23300 ;; This function calls:
 23301 ;;		Nothing
 23302 ;; This function is called by:
 23303 ;;		_TMR5_Initialize
 23304 ;; This function uses a reentrant model
 23305 ;;
 23306                           
 23307                           	psect	text96
 23308  018904                     __ptext96:
 23309                           	opt callstack 0
 23310  018904                     _TMR5_SetInterruptHandler:
 23311                           	opt callstack 22
 23312                           
 23313                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23314                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23315                           
 23316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23317                           ;incstack = 0
 23318  018904  50E1               	movf	fsr1l,w,c
 23319  018906  0FFD               	addlw	-3
 23320  018908  6ED9               	movwf	fsr2l,c
 23321  01890A  50E2               	movf	fsr1h,w,c
 23322  01890C  6EDA               	movwf	fsr2h,c
 23323  01890E  0EFF               	movlw	255
 23324  018910  22DA               	addwfc	fsr2h,f,c
 23325  018912  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23326  018918  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23327  01891E  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23328                           
 23329                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23330  018924  52E5               	movf	postdec1,f,c
 23331  018926  52E5               	movf	postdec1,f,c
 23332  018928  52E5               	movf	postdec1,f,c
 23333  01892A  0012               	return		;funcret
 23334  01892C                     __end_of_TMR5_SetInterruptHandler:
 23335                           	opt callstack 0
 23336                           
 23337 ;; *************** function _TMR2_Initialize *****************
 23338 ;; Defined at:
 23339 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;		None
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  1  [STACK] void 
 23346 ;; Registers used:
 23347 ;;		wreg, status,2
 23348 ;; Tracked objects:
 23349 ;;		On entry : 3F/3F
 23350 ;;		On exit  : 3F/39
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;Total ram usage:        0 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:    6
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_SYSTEM_Initialize
 23364 ;; This function uses a reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text97
 23368  018C7A                     __ptext97:
 23369                           	opt callstack 0
 23370  018C7A                     _TMR2_Initialize:
 23371                           	opt callstack 23
 23372                           
 23373                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23374                           
 23375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23376                           ;incstack = 0
 23377  018C7A  0E01               	movlw	1
 23378  018C7C  6EAE               	movwf	174,c	;volatile
 23379                           
 23380                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23381  018C7E  6AAD               	clrf	173,c	;volatile
 23382                           
 23383                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23384  018C80  6AAF               	clrf	175,c	;volatile
 23385                           
 23386                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23387  018C82  0E63               	movlw	99
 23388  018C84  6EAB               	movwf	171,c	;volatile
 23389                           
 23390                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23391  018C86  6AAA               	clrf	170,c	;volatile
 23392                           
 23393                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23394  018C88  0139               	movlb	57	; () banked
 23395  018C8A  95A4               	bcf	164,2,b	;volatile
 23396                           
 23397                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23398  018C8C  0EC0               	movlw	192
 23399  018C8E  6EAC               	movwf	172,c	;volatile
 23400                           
 23401                           ; BSR set to: 57
 23402                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23403  018C90  0012               	return		;funcret
 23404  018C92                     __end_of_TMR2_Initialize:
 23405                           	opt callstack 0
 23406                           
 23407 ;; *************** function _SPI1_Initialize *****************
 23408 ;; Defined at:
 23409 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23410 ;; Parameters:    Size  Location     Type
 23411 ;;		None
 23412 ;; Auto vars:     Size  Location     Type
 23413 ;;		None
 23414 ;; Return value:  Size  Location     Type
 23415 ;;                  1  [STACK] void 
 23416 ;; Registers used:
 23417 ;;		wreg, status,2
 23418 ;; Tracked objects:
 23419 ;;		On entry : 3F/39
 23420 ;;		On exit  : 3F/3D
 23421 ;;		Unchanged: 0/0
 23422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23427 ;;Total ram usage:        0 bytes
 23428 ;; Hardware stack levels used:    1
 23429 ;; Hardware stack levels required when called:    6
 23430 ;; This function calls:
 23431 ;;		Nothing
 23432 ;; This function is called by:
 23433 ;;		_SYSTEM_Initialize
 23434 ;; This function uses a reentrant model
 23435 ;;
 23436                           
 23437                           	psect	text98
 23438  018C92                     __ptext98:
 23439                           	opt callstack 0
 23440  018C92                     _SPI1_Initialize:
 23441                           	opt callstack 23
 23442                           
 23443                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23444                           
 23445                           ; BSR set to: 57
 23446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23447                           ;incstack = 0
 23448  018C92  0E40               	movlw	64
 23449  018C94  013D               	movlb	61	; () banked
 23450  018C96  6F15               	movwf	21,b	;volatile
 23451                           
 23452                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23453  018C98  0E03               	movlw	3
 23454  018C9A  6F16               	movwf	22,b	;volatile
 23455                           
 23456                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23457  018C9C  0E4F               	movlw	79
 23458  018C9E  6F19               	movwf	25,b	;volatile
 23459                           
 23460                           ; BSR set to: 61
 23461                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23462  018CA0  6B1C               	clrf	28,b	;volatile
 23463                           
 23464                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23465  018CA2  0E83               	movlw	131
 23466  018CA4  6F14               	movwf	20,b	;volatile
 23467                           
 23468                           ; BSR set to: 61
 23469                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23470  018CA6  0012               	return		;funcret
 23471  018CA8                     __end_of_SPI1_Initialize:
 23472                           	opt callstack 0
 23473                           
 23474 ;; *************** function _PWM8_Initialize *****************
 23475 ;; Defined at:
 23476 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23477 ;; Parameters:    Size  Location     Type
 23478 ;;		None
 23479 ;; Auto vars:     Size  Location     Type
 23480 ;;		None
 23481 ;; Return value:  Size  Location     Type
 23482 ;;                  1  [STACK] void 
 23483 ;; Registers used:
 23484 ;;		wreg, status,2
 23485 ;; Tracked objects:
 23486 ;;		On entry : 0/3E
 23487 ;;		On exit  : 3F/3F
 23488 ;;		Unchanged: 0/0
 23489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23494 ;;Total ram usage:        0 bytes
 23495 ;; Hardware stack levels used:    1
 23496 ;; Hardware stack levels required when called:    6
 23497 ;; This function calls:
 23498 ;;		Nothing
 23499 ;; This function is called by:
 23500 ;;		_SYSTEM_Initialize
 23501 ;; This function uses a reentrant model
 23502 ;;
 23503                           
 23504                           	psect	text99
 23505  018CA8                     __ptext99:
 23506                           	opt callstack 0
 23507  018CA8                     _PWM8_Initialize:
 23508                           	opt callstack 23
 23509                           
 23510                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23511                           
 23512                           ; BSR set to: 61
 23513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23514                           ;incstack = 0
 23515  018CA8  0E80               	movlw	128
 23516  018CAA  6E62               	movwf	98,c	;volatile
 23517                           
 23518                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23519  018CAC  6A61               	clrf	97,c	;volatile
 23520                           
 23521                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23522  018CAE  0E40               	movlw	64
 23523  018CB0  6E60               	movwf	96,c	;volatile
 23524                           
 23525                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23526  018CB2  013F               	movlb	63	; () banked
 23527  018CB4  515F               	movf	95,w,b	;volatile
 23528  018CB6  0B3F               	andlw	-193
 23529  018CB8  0940               	iorlw	64
 23530  018CBA  6F5F               	movwf	95,b	;volatile
 23531                           
 23532                           ; BSR set to: 63
 23533                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23534  018CBC  0012               	return		;funcret
 23535  018CBE                     __end_of_PWM8_Initialize:
 23536                           	opt callstack 0
 23537                           
 23538 ;; *************** function _PMD_Initialize *****************
 23539 ;; Defined at:
 23540 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23541 ;; Parameters:    Size  Location     Type
 23542 ;;		None
 23543 ;; Auto vars:     Size  Location     Type
 23544 ;;		None
 23545 ;; Return value:  Size  Location     Type
 23546 ;;                  1  [STACK] void 
 23547 ;; Registers used:
 23548 ;;		None
 23549 ;; Tracked objects:
 23550 ;;		On entry : 3F/39
 23551 ;;		On exit  : 3F/39
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23558 ;;Total ram usage:        0 bytes
 23559 ;; Hardware stack levels used:    1
 23560 ;; Hardware stack levels required when called:    6
 23561 ;; This function calls:
 23562 ;;		Nothing
 23563 ;; This function is called by:
 23564 ;;		_SYSTEM_Initialize
 23565 ;; This function uses a reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text100
 23569  018CD4                     __ptext100:
 23570                           	opt callstack 0
 23571  018CD4                     _PMD_Initialize:
 23572                           	opt callstack 23
 23573                           
 23574                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23575                           
 23576                           ; BSR set to: 63
 23577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23578                           ;incstack = 0
 23579  018CD4  0139               	movlb	57	; () banked
 23580  018CD6  6BC0               	clrf	192,b	;volatile
 23581                           
 23582                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23583  018CD8  6BC1               	clrf	193,b	;volatile
 23584                           
 23585                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23586  018CDA  6BC2               	clrf	194,b	;volatile
 23587                           
 23588                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23589  018CDC  6BC3               	clrf	195,b	;volatile
 23590                           
 23591                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23592  018CDE  6BC4               	clrf	196,b	;volatile
 23593                           
 23594                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23595  018CE0  6BC5               	clrf	197,b	;volatile
 23596                           
 23597                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23598  018CE2  6BC6               	clrf	198,b	;volatile
 23599                           
 23600                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23601  018CE4  6BC7               	clrf	199,b	;volatile
 23602                           
 23603                           ; BSR set to: 57
 23604                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23605  018CE6  0012               	return		;funcret
 23606  018CE8                     __end_of_PMD_Initialize:
 23607                           	opt callstack 0
 23608                           
 23609 ;; *************** function _PIN_MANAGER_Initialize *****************
 23610 ;; Defined at:
 23611 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23612 ;; Parameters:    Size  Location     Type
 23613 ;;		None
 23614 ;; Auto vars:     Size  Location     Type
 23615 ;;		None
 23616 ;; Return value:  Size  Location     Type
 23617 ;;                  1  [STACK] void 
 23618 ;; Registers used:
 23619 ;;		wreg, status,2
 23620 ;; Tracked objects:
 23621 ;;		On entry : 3F/39
 23622 ;;		On exit  : 3F/3A
 23623 ;;		Unchanged: 0/0
 23624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23629 ;;Total ram usage:        0 bytes
 23630 ;; Hardware stack levels used:    1
 23631 ;; Hardware stack levels required when called:    6
 23632 ;; This function calls:
 23633 ;;		Nothing
 23634 ;; This function is called by:
 23635 ;;		_SYSTEM_Initialize
 23636 ;; This function uses a reentrant model
 23637 ;;
 23638                           
 23639                           	psect	text101
 23640  017A7A                     __ptext101:
 23641                           	opt callstack 0
 23642  017A7A                     _PIN_MANAGER_Initialize:
 23643                           	opt callstack 23
 23644                           
 23645                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23646                           
 23647                           ; BSR set to: 57
 23648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23649                           ;incstack = 0
 23650  017A7A  0E07               	movlw	7
 23651  017A7C  6EBE               	movwf	190,c	;volatile
 23652                           
 23653                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 23654  017A7E  6ABD               	clrf	189,c	;volatile
 23655                           
 23656                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23657  017A80  6ABA               	clrf	186,c	;volatile
 23658                           
 23659                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23660  017A82  6ABF               	clrf	191,c	;volatile
 23661                           
 23662                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23663  017A84  6ABB               	clrf	187,c	;volatile
 23664                           
 23665                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23666  017A86  0E07               	movlw	7
 23667  017A88  6EBC               	movwf	188,c	;volatile
 23668                           
 23669                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23670  017A8A  6AC6               	clrf	198,c	;volatile
 23671                           
 23672                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23673  017A8C  0E0F               	movlw	15
 23674  017A8E  6EC7               	movwf	199,c	;volatile
 23675                           
 23676                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23677  017A90  68C2               	setf	194,c	;volatile
 23678                           
 23679                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23680  017A92  0EBF               	movlw	191
 23681  017A94  6EC3               	movwf	195,c	;volatile
 23682                           
 23683                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23684  017A96  0E90               	movlw	144
 23685  017A98  6EC4               	movwf	196,c	;volatile
 23686                           
 23687                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23688  017A9A  0E0C               	movlw	12
 23689  017A9C  6EC5               	movwf	197,c	;volatile
 23690                           
 23691                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23692  017A9E  013A               	movlb	58	; () banked
 23693  017AA0  6B70               	clrf	112,b	;volatile
 23694                           
 23695                           ; BSR set to: 58
 23696                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23697  017AA2  6B60               	clrf	96,b	;volatile
 23698                           
 23699                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23700  017AA4  0E3C               	movlw	60
 23701  017AA6  6F50               	movwf	80,b	;volatile
 23702                           
 23703                           ; BSR set to: 58
 23704                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23705  017AA8  6B80               	clrf	128,b	;volatile
 23706                           
 23707                           ; BSR set to: 58
 23708                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23709  017AAA  6B90               	clrf	144,b	;volatile
 23710                           
 23711                           ; BSR set to: 58
 23712                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23713  017AAC  6940               	setf	64,b	;volatile
 23714                           
 23715                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23716  017AAE  0E0C               	movlw	12
 23717  017AB0  6F71               	movwf	113,b	;volatile
 23718                           
 23719                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23720  017AB2  0E0F               	movlw	15
 23721  017AB4  6F91               	movwf	145,b	;volatile
 23722                           
 23723                           ; BSR set to: 58
 23724                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23725  017AB6  6B81               	clrf	129,b	;volatile
 23726                           
 23727                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 23728  017AB8  0E87               	movlw	135
 23729  017ABA  6F51               	movwf	81,b	;volatile
 23730                           
 23731                           ; BSR set to: 58
 23732                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23733  017ABC  6B41               	clrf	65,b	;volatile
 23734                           
 23735                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23736  017ABE  0E97               	movlw	151
 23737  017AC0  6F61               	movwf	97,b	;volatile
 23738                           
 23739                           ; BSR set to: 58
 23740                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23741  017AC2  6B82               	clrf	130,b	;volatile
 23742                           
 23743                           ; BSR set to: 58
 23744                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23745  017AC4  6B92               	clrf	146,b	;volatile
 23746                           
 23747                           ; BSR set to: 58
 23748                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23749  017AC6  6B42               	clrf	66,b	;volatile
 23750                           
 23751                           ; BSR set to: 58
 23752                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23753  017AC8  6B52               	clrf	82,b	;volatile
 23754                           
 23755                           ; BSR set to: 58
 23756                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23757  017ACA  6B62               	clrf	98,b	;volatile
 23758                           
 23759                           ; BSR set to: 58
 23760                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23761  017ACC  6B72               	clrf	114,b	;volatile
 23762                           
 23763                           ; BSR set to: 58
 23764                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23765  017ACE  6943               	setf	67,b	;volatile
 23766                           
 23767                           ; BSR set to: 58
 23768                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23769  017AD0  6953               	setf	83,b	;volatile
 23770                           
 23771                           ; BSR set to: 58
 23772                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23773  017AD2  6963               	setf	99,b	;volatile
 23774                           
 23775                           ; BSR set to: 58
 23776                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23777  017AD4  6973               	setf	115,b	;volatile
 23778                           
 23779                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23780  017AD6  0E07               	movlw	7
 23781  017AD8  6F83               	movwf	131,b	;volatile
 23782                           
 23783                           ; BSR set to: 58
 23784                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23785  017ADA  6993               	setf	147,b	;volatile
 23786                           
 23787                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23788  017ADC  0E0F               	movlw	15
 23789  017ADE  6FE8               	movwf	232,b	;volatile
 23790                           
 23791                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23792  017AE0  0E13               	movlw	19
 23793  017AE2  6FDE               	movwf	222,b	;volatile
 23794                           
 23795                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23796  017AE4  0E16               	movlw	22
 23797  017AE6  6F0E               	movwf	14,b	;volatile
 23798                           
 23799                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23800  017AE8  0E1E               	movlw	30
 23801  017AEA  6F13               	movwf	19,b	;volatile
 23802                           
 23803                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23804  017AEC  0E08               	movlw	8
 23805  017AEE  6FC0               	movwf	192,b	;volatile
 23806                           
 23807                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23808  017AF0  0E10               	movlw	16
 23809  017AF2  6F19               	movwf	25,b	;volatile
 23810                           
 23811                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23812  017AF4  0E09               	movlw	9
 23813  017AF6  6FC1               	movwf	193,b	;volatile
 23814                           
 23815                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23816  017AF8  0E1F               	movlw	31
 23817  017AFA  6F15               	movwf	21,b	;volatile
 23818                           
 23819                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23820  017AFC  0E13               	movlw	19
 23821  017AFE  6F16               	movwf	22,b	;volatile
 23822                           
 23823                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23824  017B00  0E17               	movlw	23
 23825  017B02  6FE5               	movwf	229,b	;volatile
 23826                           
 23827                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23828  017B04  0E14               	movlw	20
 23829  017B06  6FDF               	movwf	223,b	;volatile
 23830                           
 23831                           ; BSR set to: 58
 23832                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23833  017B08  0012               	return		;funcret
 23834  017B0A                     __end_of_PIN_MANAGER_Initialize:
 23835                           	opt callstack 0
 23836                           
 23837 ;; *************** function _OSCILLATOR_Initialize *****************
 23838 ;; Defined at:
 23839 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;		None
 23842 ;; Auto vars:     Size  Location     Type
 23843 ;;		None
 23844 ;; Return value:  Size  Location     Type
 23845 ;;                  1  [STACK] void 
 23846 ;; Registers used:
 23847 ;;		wreg, status,2
 23848 ;; Tracked objects:
 23849 ;;		On entry : 3F/3A
 23850 ;;		On exit  : 3F/39
 23851 ;;		Unchanged: 0/0
 23852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23857 ;;Total ram usage:        0 bytes
 23858 ;; Hardware stack levels used:    1
 23859 ;; Hardware stack levels required when called:    6
 23860 ;; This function calls:
 23861 ;;		Nothing
 23862 ;; This function is called by:
 23863 ;;		_SYSTEM_Initialize
 23864 ;; This function uses a reentrant model
 23865 ;;
 23866                           
 23867                           	psect	text102
 23868  018CBE                     __ptext102:
 23869                           	opt callstack 0
 23870  018CBE                     _OSCILLATOR_Initialize:
 23871                           	opt callstack 23
 23872                           
 23873                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23874                           
 23875                           ; BSR set to: 58
 23876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23877                           ;incstack = 0
 23878  018CBE  0E20               	movlw	32
 23879  018CC0  0139               	movlb	57	; () banked
 23880  018CC2  6FD9               	movwf	217,b	;volatile
 23881                           
 23882                           ; BSR set to: 57
 23883                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23884  018CC4  6BDB               	clrf	219,b	;volatile
 23885                           
 23886                           ; BSR set to: 57
 23887                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23888  018CC6  6BDD               	clrf	221,b	;volatile
 23889                           
 23890                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23891  018CC8  0E02               	movlw	2
 23892  018CCA  6FDF               	movwf	223,b	;volatile
 23893                           
 23894                           ; BSR set to: 57
 23895                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23896  018CCC  6BDE               	clrf	222,b	;volatile
 23897  018CCE                     l171:
 23898                           
 23899                           ; BSR set to: 57
 23900                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23901  018CCE  B1DC               	btfsc	220,0,b	;volatile
 23902  018CD0  0012               	return	
 23903  018CD2  D7FD               	goto	l171
 23904  018CD4                     __end_of_OSCILLATOR_Initialize:
 23905                           	opt callstack 0
 23906                           
 23907 ;; *************** function _INTERRUPT_Initialize *****************
 23908 ;; Defined at:
 23909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23910 ;; Parameters:    Size  Location     Type
 23911 ;;		None
 23912 ;; Auto vars:     Size  Location     Type
 23913 ;;  state           1  [STACK] _Bool 
 23914 ;; Return value:  Size  Location     Type
 23915 ;;                  1  [STACK] void 
 23916 ;; Registers used:
 23917 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23918 ;; Tracked objects:
 23919 ;;		On entry : 0/0
 23920 ;;		On exit  : 3F/39
 23921 ;;		Unchanged: 0/0
 23922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23927 ;;Total ram usage:        0 bytes
 23928 ;; Hardware stack levels used:    1
 23929 ;; Hardware stack levels required when called:    6
 23930 ;; This function calls:
 23931 ;;		Nothing
 23932 ;; This function is called by:
 23933 ;;		_SYSTEM_Initialize
 23934 ;; This function uses a reentrant model
 23935 ;;
 23936                           
 23937                           	psect	text103
 23938  017E50                     __ptext103:
 23939                           	opt callstack 0
 23940  017E50                     _INTERRUPT_Initialize:
 23941                           	opt callstack 0
 23942                           
 23943                           ; BSR set to: 57
 23944                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23945  017E50  52E6               	movf	postinc1,f,c
 23946                           
 23947                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23948                           
 23949                           ;incstack = 0
 23950  017E52  8AD2               	bsf	210,5,c	;volatile
 23951                           
 23952                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23953  017E54  AED2               	btfss	16338,7,c	;volatile
 23954  017E56  D003               	goto	u8320
 23955  017E58  6A40               	clrf	(btemp+11)^0,c
 23956  017E5A  2A40               	incf	(btemp+11)^0,f,c
 23957  017E5C  D001               	goto	u8338
 23958  017E5E                     u8320:
 23959  017E5E  6A40               	clrf	(btemp+11)^0,c
 23960  017E60                     u8338:
 23961                           
 23962                           ;stkvar	_state @ sp[(-1)+0]
 23963  017E60  0EFF               	movlw	-1
 23964  017E62  0060  F103  FFE3   	movff	btemp+11,plusw1
 23965                           
 23966                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23967  017E68  9ED2               	bcf	16338,7,c	;volatile
 23968                           
 23969                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23970  017E6A  0E55               	movlw	85
 23971  017E6C  6ED4               	movwf	212,c	;volatile
 23972                           
 23973                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23974  017E6E  0EAA               	movlw	170
 23975  017E70  6ED4               	movwf	212,c	;volatile
 23976                           
 23977                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23978  017E72  90D4               	bcf	212,0,c	;volatile
 23979                           
 23980                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23981  017E74  0138               	movlb	56	; () banked
 23982  017E76  6B9F               	clrf	159,b	;volatile
 23983                           
 23984                           ; BSR set to: 56
 23985                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23986  017E78  6B9E               	clrf	158,b	;volatile
 23987                           
 23988                           ; BSR set to: 56
 23989                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23990  017E7A  0E08               	movlw	8
 23991  017E7C  6F9D               	movwf	157,b	;volatile
 23992                           
 23993                           ; BSR set to: 56
 23994                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23995  017E7E  0E55               	movlw	85
 23996  017E80  6ED4               	movwf	212,c	;volatile
 23997                           
 23998                           ; BSR set to: 56
 23999                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24000  017E82  0EAA               	movlw	170
 24001  017E84  6ED4               	movwf	212,c	;volatile
 24002                           
 24003                           ; BSR set to: 56
 24004                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24005  017E86  80D4               	bsf	212,0,c	;volatile
 24006                           
 24007                           ; BSR set to: 56
 24008                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24009                           ;stkvar	_state @ sp[(-1)+0]
 24010  017E88  0EFF               	movlw	-1
 24011  017E8A  B0E3               	btfsc	plusw1,0,c
 24012  017E8C  D002               	bra	u8345
 24013  017E8E  9ED2               	bcf	16338,7,c	;volatile
 24014  017E90  D001               	bra	u8346
 24015  017E92                     u8345:
 24016  017E92  8ED2               	bsf	16338,7,c	;volatile
 24017  017E94                     u8346:
 24018                           
 24019                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24020  017E94  0139               	movlb	57	; () banked
 24021  017E96  8782               	bsf	130,3,b	;volatile
 24022                           
 24023                           ; BSR set to: 57
 24024                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24025  017E98  8382               	bsf	130,1,b	;volatile
 24026                           
 24027                           ; BSR set to: 57
 24028                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24029  017E9A  8182               	bsf	130,0,b	;volatile
 24030                           
 24031                           ; BSR set to: 57
 24032                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24033  017E9C  8582               	bsf	130,2,b	;volatile
 24034                           
 24035                           ; BSR set to: 57
 24036                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24037  017E9E  8786               	bsf	134,3,b	;volatile
 24038                           
 24039                           ; BSR set to: 57
 24040                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24041  017EA0  8586               	bsf	134,2,b	;volatile
 24042                           
 24043                           ; BSR set to: 57
 24044                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24045  017EA2  8983               	bsf	131,4,b	;volatile
 24046                           
 24047                           ; BSR set to: 57
 24048                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24049  017EA4  8783               	bsf	131,3,b	;volatile
 24050                           
 24051                           ; BSR set to: 57
 24052                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24053  017EA6  8181               	bsf	129,0,b	;volatile
 24054                           
 24055                           ; BSR set to: 57
 24056                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 24057  017EA8  8185               	bsf	133,0,b	;volatile
 24058                           
 24059                           ; BSR set to: 57
 24060                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24061  017EAA  8189               	bsf	137,0,b	;volatile
 24062                           
 24063                           ; BSR set to: 57
 24064                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24065  017EAC  9D88               	bcf	136,6,b	;volatile
 24066                           
 24067                           ; BSR set to: 57
 24068                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24069  017EAE  8581               	bsf	129,2,b	;volatile
 24070                           
 24071                           ; BSR set to: 57
 24072                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24073  017EB0  8781               	bsf	129,3,b	;volatile
 24074                           
 24075                           ; BSR set to: 57
 24076                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24077  017EB2  52E5               	movf	postdec1,f,c
 24078  017EB4  0012               	return		;funcret
 24079  017EB6                     __end_of_INTERRUPT_Initialize:
 24080                           	opt callstack 0
 24081                           
 24082 ;; *************** function _FVR_Initialize *****************
 24083 ;; Defined at:
 24084 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  1  [STACK] void 
 24091 ;; Registers used:
 24092 ;;		wreg, status,2
 24093 ;; Tracked objects:
 24094 ;;		On entry : 3F/39
 24095 ;;		On exit  : 3F/3E
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:    6
 24105 ;; This function calls:
 24106 ;;		Nothing
 24107 ;; This function is called by:
 24108 ;;		_SYSTEM_Initialize
 24109 ;; This function uses a reentrant model
 24110 ;;
 24111                           
 24112                           	psect	text104
 24113  018D9A                     __ptext104:
 24114                           	opt callstack 0
 24115  018D9A                     _FVR_Initialize:
 24116                           	opt callstack 23
 24117                           
 24118                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24119                           
 24120                           ; BSR set to: 57
 24121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24122                           ;incstack = 0
 24123  018D9A  0EAF               	movlw	175
 24124  018D9C  013E               	movlb	62	; () banked
 24125  018D9E  6FC1               	movwf	193,b	;volatile
 24126                           
 24127                           ; BSR set to: 62
 24128                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24129  018DA0  0012               	return		;funcret
 24130  018DA2                     __end_of_FVR_Initialize:
 24131                           	opt callstack 0
 24132                           
 24133 ;; *************** function _EXT_INT_Initialize *****************
 24134 ;; Defined at:
 24135 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 24136 ;; Parameters:    Size  Location     Type
 24137 ;;		None
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;		None
 24140 ;; Return value:  Size  Location     Type
 24141 ;;                  1  [STACK] void 
 24142 ;; Registers used:
 24143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24144 ;; Tracked objects:
 24145 ;;		On entry : 3F/39
 24146 ;;		On exit  : 3F/39
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;Total ram usage:        0 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; Hardware stack levels required when called:    7
 24156 ;; This function calls:
 24157 ;;		_INT0_SetInterruptHandler
 24158 ;;		_INT1_SetInterruptHandler
 24159 ;; This function is called by:
 24160 ;;		_SYSTEM_Initialize
 24161 ;; This function uses a reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text105
 24165  018650                     __ptext105:
 24166                           	opt callstack 0
 24167  018650                     _EXT_INT_Initialize:
 24168                           	opt callstack 22
 24169                           
 24170                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 24171                           
 24172                           ; BSR set to: 62
 24173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24174                           ;incstack = 0
 24175  018650  0139               	movlb	57	; () banked
 24176  018652  91A1               	bcf	161,0,b	;volatile
 24177                           
 24178                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 24179  018654  90D2               	bcf	210,0,c	;volatile
 24180                           
 24181                           ; BSR set to: 57
 24182                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24183  018656  0EC2               	movlw	low _INT0_DefaultInterruptHandler
 24184  018658  6EE6               	movwf	postinc1,c
 24185  01865A  0E8D               	movlw	high _INT0_DefaultInterruptHandler
 24186  01865C  6EE6               	movwf	postinc1,c
 24187  01865E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24188  018660  6EE6               	movwf	postinc1,c
 24189  018662  ECAA  F0C4         	call	_INT0_SetInterruptHandler	;wreg free
 24190                           
 24191                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 24192  018666  0139               	movlb	57	; () banked
 24193  018668  8191               	bsf	145,0,b	;volatile
 24194                           
 24195                           ; BSR set to: 57
 24196                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 24197  01866A  91A5               	bcf	165,0,b	;volatile
 24198                           
 24199                           ; BSR set to: 57
 24200                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 24201  01866C  92D2               	bcf	210,1,c	;volatile
 24202                           
 24203                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24204  01866E  0EC4               	movlw	low _INT1_DefaultInterruptHandler
 24205  018670  6EE6               	movwf	postinc1,c
 24206  018672  0E8D               	movlw	high _INT1_DefaultInterruptHandler
 24207  018674  6EE6               	movwf	postinc1,c
 24208  018676  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24209  018678  6EE6               	movwf	postinc1,c
 24210  01867A  EC96  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
 24211                           
 24212                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 24213  01867E  0139               	movlb	57	; () banked
 24214  018680  8195               	bsf	149,0,b	;volatile
 24215                           
 24216                           ; BSR set to: 57
 24217                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24218  018682  0012               	return		;funcret
 24219  018684                     __end_of_EXT_INT_Initialize:
 24220                           	opt callstack 0
 24221                           
 24222 ;; *************** function _INT1_SetInterruptHandler *****************
 24223 ;; Defined at:
 24224 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 24225 ;; Parameters:    Size  Location     Type
 24226 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24227 ;;		 -> INT1_DefaultInterruptHandler(1), 
 24228 ;; Auto vars:     Size  Location     Type
 24229 ;;		None
 24230 ;; Return value:  Size  Location     Type
 24231 ;;                  1  [STACK] void 
 24232 ;; Registers used:
 24233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24234 ;; Tracked objects:
 24235 ;;		On entry : 3F/39
 24236 ;;		On exit  : 0/0
 24237 ;;		Unchanged: 0/0
 24238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24243 ;;Total ram usage:        0 bytes
 24244 ;; Hardware stack levels used:    1
 24245 ;; Hardware stack levels required when called:    6
 24246 ;; This function calls:
 24247 ;;		Nothing
 24248 ;; This function is called by:
 24249 ;;		_EXT_INT_Initialize
 24250 ;; This function uses a reentrant model
 24251 ;;
 24252                           
 24253                           	psect	text106
 24254  01892C                     __ptext106:
 24255                           	opt callstack 0
 24256  01892C                     _INT1_SetInterruptHandler:
 24257                           	opt callstack 22
 24258                           
 24259                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24260                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24261                           
 24262                           ; BSR set to: 57
 24263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24264                           ;incstack = 0
 24265  01892C  50E1               	movf	fsr1l,w,c
 24266  01892E  0FFD               	addlw	-3
 24267  018930  6ED9               	movwf	fsr2l,c
 24268  018932  50E2               	movf	fsr1h,w,c
 24269  018934  6EDA               	movwf	fsr2h,c
 24270  018936  0EFF               	movlw	255
 24271  018938  22DA               	addwfc	fsr2h,f,c
 24272  01893A  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 24273  018940  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 24274  018946  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 24275                           
 24276                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24277  01894C  52E5               	movf	postdec1,f,c
 24278  01894E  52E5               	movf	postdec1,f,c
 24279  018950  52E5               	movf	postdec1,f,c
 24280  018952  0012               	return		;funcret
 24281  018954                     __end_of_INT1_SetInterruptHandler:
 24282                           	opt callstack 0
 24283                           
 24284 ;; *************** function _INT0_SetInterruptHandler *****************
 24285 ;; Defined at:
 24286 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24287 ;; Parameters:    Size  Location     Type
 24288 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24289 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24290 ;; Auto vars:     Size  Location     Type
 24291 ;;		None
 24292 ;; Return value:  Size  Location     Type
 24293 ;;                  1  [STACK] void 
 24294 ;; Registers used:
 24295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24296 ;; Tracked objects:
 24297 ;;		On entry : 3F/39
 24298 ;;		On exit  : 0/0
 24299 ;;		Unchanged: 0/0
 24300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24305 ;;Total ram usage:        0 bytes
 24306 ;; Hardware stack levels used:    1
 24307 ;; Hardware stack levels required when called:    6
 24308 ;; This function calls:
 24309 ;;		Nothing
 24310 ;; This function is called by:
 24311 ;;		_EXT_INT_Initialize
 24312 ;; This function uses a reentrant model
 24313 ;;
 24314                           
 24315                           	psect	text107
 24316  018954                     __ptext107:
 24317                           	opt callstack 0
 24318  018954                     _INT0_SetInterruptHandler:
 24319                           	opt callstack 22
 24320                           
 24321                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24322                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24323                           
 24324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24325                           ;incstack = 0
 24326  018954  50E1               	movf	fsr1l,w,c
 24327  018956  0FFD               	addlw	-3
 24328  018958  6ED9               	movwf	fsr2l,c
 24329  01895A  50E2               	movf	fsr1h,w,c
 24330  01895C  6EDA               	movwf	fsr2h,c
 24331  01895E  0EFF               	movlw	255
 24332  018960  22DA               	addwfc	fsr2h,f,c
 24333  018962  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 24334  018968  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 24335  01896E  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 24336                           
 24337                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24338  018974  52E5               	movf	postdec1,f,c
 24339  018976  52E5               	movf	postdec1,f,c
 24340  018978  52E5               	movf	postdec1,f,c
 24341  01897A  0012               	return		;funcret
 24342  01897C                     __end_of_INT0_SetInterruptHandler:
 24343                           	opt callstack 0
 24344                           
 24345 ;; *************** function _DMA2_Initialize *****************
 24346 ;; Defined at:
 24347 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;		None
 24350 ;; Auto vars:     Size  Location     Type
 24351 ;;		None
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1  [STACK] void 
 24354 ;; Registers used:
 24355 ;;		wreg, status,2
 24356 ;; Tracked objects:
 24357 ;;		On entry : 3F/3D
 24358 ;;		On exit  : 3F/3B
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24365 ;;Total ram usage:        0 bytes
 24366 ;; Hardware stack levels used:    1
 24367 ;; Hardware stack levels required when called:    6
 24368 ;; This function calls:
 24369 ;;		Nothing
 24370 ;; This function is called by:
 24371 ;;		_SYSTEM_Initialize
 24372 ;; This function uses a reentrant model
 24373 ;;
 24374                           
 24375                           	psect	text108
 24376  018156                     __ptext108:
 24377                           	opt callstack 0
 24378  018156                     _DMA2_Initialize:
 24379                           	opt callstack 23
 24380                           
 24381                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24382                           
 24383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24384                           ;incstack = 0
 24385  018156  0E00               	movlw	0
 24386  018158  013B               	movlb	59	; () banked
 24387  01815A  6FD9               	movwf	217,b	;volatile
 24388  01815C  0E10               	movlw	16
 24389  01815E  6FDA               	movwf	218,b	;volatile
 24390  018160  0E00               	movlw	0
 24391  018162  6FDB               	movwf	219,b	;volatile
 24392                           
 24393                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24394  018164  0E3F               	movlw	63
 24395  018166  6FD1               	movwf	209,b	;volatile
 24396  018168  0EBB               	movlw	187
 24397  01816A  6FD0               	movwf	208,b	;volatile
 24398                           
 24399                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24400  01816C  0E03               	movlw	3
 24401  01816E  6FDD               	movwf	221,b	;volatile
 24402                           
 24403                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24404  018170  0E00               	movlw	0
 24405  018172  6FD8               	movwf	216,b	;volatile
 24406  018174  0E01               	movlw	1
 24407  018176  6FD7               	movwf	215,b	;volatile
 24408                           
 24409                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24410  018178  0E00               	movlw	0
 24411  01817A  6FCF               	movwf	207,b	;volatile
 24412  01817C  0E01               	movlw	1
 24413  01817E  6FCE               	movwf	206,b	;volatile
 24414                           
 24415                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24416  018180  0E46               	movlw	70
 24417  018182  6FDF               	movwf	223,b	;volatile
 24418                           
 24419                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24420  018184  0E3D               	movlw	61
 24421  018186  6FDE               	movwf	222,b	;volatile
 24422                           
 24423                           ; BSR set to: 59
 24424                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24425  018188  0139               	movlb	57	; () banked
 24426  01818A  97A5               	bcf	165,3,b	;volatile
 24427                           
 24428                           ; BSR set to: 57
 24429                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24430  01818C  95A5               	bcf	165,2,b	;volatile
 24431                           
 24432                           ; BSR set to: 57
 24433                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24434  01818E  9BA5               	bcf	165,5,b	;volatile
 24435                           
 24436                           ; BSR set to: 57
 24437                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24438  018190  99A5               	bcf	165,4,b	;volatile
 24439                           
 24440                           ; BSR set to: 57
 24441                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24442  018192  9795               	bcf	149,3,b	;volatile
 24443                           
 24444                           ; BSR set to: 57
 24445                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24446  018194  9595               	bcf	149,2,b	;volatile
 24447                           
 24448                           ; BSR set to: 57
 24449                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24450  018196  9B95               	bcf	149,5,b	;volatile
 24451                           
 24452                           ; BSR set to: 57
 24453                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24454  018198  9995               	bcf	149,4,b	;volatile
 24455  01819A  9ED2               	bcf	16338,7,c	;# 
 24456  01819C  0139               	banksel	14831	;# 
 24457  01819E  0E55               	movlw	85	;# 
 24458  0181A0  6FEF               	movwf	14831,b	;# 
 24459  0181A2  0EAA               	movlw	170	;# 
 24460  0181A4  6FEF               	movwf	14831,b	;# 
 24461  0181A6  81EF               	bsf	14831,0,b	;# 
 24462  0181A8  8ED2               	bsf	16338,7,c	;# 
 24463                           
 24464                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24465  0181AA  013B               	movlb	59	; () banked
 24466  0181AC  6BDC               	clrf	220,b	;volatile
 24467                           
 24468                           ; BSR set to: 59
 24469                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24470  0181AE  0012               	return		;funcret
 24471  0181B0                     __end_of_DMA2_Initialize:
 24472                           	opt callstack 0
 24473                           
 24474 ;; *************** function _DMA1_Initialize *****************
 24475 ;; Defined at:
 24476 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24477 ;; Parameters:    Size  Location     Type
 24478 ;;		None
 24479 ;; Auto vars:     Size  Location     Type
 24480 ;;		None
 24481 ;; Return value:  Size  Location     Type
 24482 ;;                  1  [STACK] void 
 24483 ;; Registers used:
 24484 ;;		wreg, status,2
 24485 ;; Tracked objects:
 24486 ;;		On entry : 3F/3B
 24487 ;;		On exit  : 3F/3B
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;Total ram usage:        0 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; Hardware stack levels required when called:    6
 24497 ;; This function calls:
 24498 ;;		Nothing
 24499 ;; This function is called by:
 24500 ;;		_SYSTEM_Initialize
 24501 ;; This function uses a reentrant model
 24502 ;;
 24503                           
 24504                           	psect	text109
 24505  017D14                     __ptext109:
 24506                           	opt callstack 0
 24507  017D14                     _DMA1_Initialize:
 24508                           	opt callstack 23
 24509                           
 24510                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24511                           
 24512                           ; BSR set to: 59
 24513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24514                           ;incstack = 0
 24515  017D14  0E00               	movlw	0
 24516  017D16  013B               	movlb	59	; () banked
 24517  017D18  6FF9               	movwf	249,b	;volatile
 24518  017D1A  0E10               	movlw	16
 24519  017D1C  6FFA               	movwf	250,b	;volatile
 24520  017D1E  0E00               	movlw	0
 24521  017D20  6FFB               	movwf	251,b	;volatile
 24522                           
 24523                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24524  017D22  0E3D               	movlw	61
 24525  017D24  6FF1               	movwf	241,b	;volatile
 24526  017D26  0E11               	movlw	17
 24527  017D28  6FF0               	movwf	240,b	;volatile
 24528                           
 24529                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24530  017D2A  0E03               	movlw	3
 24531  017D2C  6FFD               	movwf	253,b	;volatile
 24532                           
 24533                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24534  017D2E  0E00               	movlw	0
 24535  017D30  6FF8               	movwf	248,b	;volatile
 24536  017D32  0E01               	movlw	1
 24537  017D34  6FF7               	movwf	247,b	;volatile
 24538                           
 24539                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24540  017D36  0E00               	movlw	0
 24541  017D38  6FEF               	movwf	239,b	;volatile
 24542  017D3A  0E01               	movlw	1
 24543  017D3C  6FEE               	movwf	238,b	;volatile
 24544                           
 24545                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24546  017D3E  0E15               	movlw	21
 24547  017D40  6FFF               	movwf	255,b	;volatile
 24548                           
 24549                           ; BSR set to: 59
 24550                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24551  017D42  6BFE               	clrf	254,b	;volatile
 24552                           
 24553                           ; BSR set to: 59
 24554                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24555  017D44  0139               	movlb	57	; () banked
 24556  017D46  93A2               	bcf	162,1,b	;volatile
 24557                           
 24558                           ; BSR set to: 57
 24559                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24560  017D48  91A2               	bcf	162,0,b	;volatile
 24561                           
 24562                           ; BSR set to: 57
 24563                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24564  017D4A  97A2               	bcf	162,3,b	;volatile
 24565                           
 24566                           ; BSR set to: 57
 24567                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24568  017D4C  95A2               	bcf	162,2,b	;volatile
 24569                           
 24570                           ; BSR set to: 57
 24571                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24572  017D4E  8392               	bsf	146,1,b	;volatile
 24573                           
 24574                           ; BSR set to: 57
 24575                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24576  017D50  8192               	bsf	146,0,b	;volatile
 24577                           
 24578                           ; BSR set to: 57
 24579                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24580  017D52  8792               	bsf	146,3,b	;volatile
 24581                           
 24582                           ; BSR set to: 57
 24583                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24584  017D54  8592               	bsf	146,2,b	;volatile
 24585                           
 24586                           ; BSR set to: 57
 24587                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24588  017D56  6BF1               	clrf	241,b	;volatile
 24589                           
 24590                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24591  017D58  0E01               	movlw	1
 24592  017D5A  6FF2               	movwf	242,b	;volatile
 24593                           
 24594                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24595  017D5C  0E04               	movlw	4
 24596  017D5E  6FF3               	movwf	243,b	;volatile
 24597                           
 24598                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24599  017D60  0E02               	movlw	2
 24600  017D62  6FF4               	movwf	244,b	;volatile
 24601                           
 24602                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24603  017D64  0E03               	movlw	3
 24604  017D66  6FF7               	movwf	247,b	;volatile
 24605  017D68  9ED2               	bcf	16338,7,c	;# 
 24606  017D6A  0139               	banksel	14831	;# 
 24607  017D6C  0E55               	movlw	85	;# 
 24608  017D6E  6FEF               	movwf	14831,b	;# 
 24609  017D70  0EAA               	movlw	170	;# 
 24610  017D72  6FEF               	movwf	14831,b	;# 
 24611  017D74  81EF               	bsf	14831,0,b	;# 
 24612  017D76  8ED2               	bsf	16338,7,c	;# 
 24613                           
 24614                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24615  017D78  013B               	movlb	59	; () banked
 24616  017D7A  6BFC               	clrf	252,b	;volatile
 24617                           
 24618                           ; BSR set to: 59
 24619                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24620  017D7C  0012               	return		;funcret
 24621  017D7E                     __end_of_DMA1_Initialize:
 24622                           	opt callstack 0
 24623                           
 24624 ;; *************** function _CLKREF_Initialize *****************
 24625 ;; Defined at:
 24626 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24627 ;; Parameters:    Size  Location     Type
 24628 ;;		None
 24629 ;; Auto vars:     Size  Location     Type
 24630 ;;		None
 24631 ;; Return value:  Size  Location     Type
 24632 ;;                  1  [STACK] void 
 24633 ;; Registers used:
 24634 ;;		wreg, status,2
 24635 ;; Tracked objects:
 24636 ;;		On entry : 3F/3B
 24637 ;;		On exit  : 3F/3C
 24638 ;;		Unchanged: 0/0
 24639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24644 ;;Total ram usage:        0 bytes
 24645 ;; Hardware stack levels used:    1
 24646 ;; Hardware stack levels required when called:    6
 24647 ;; This function calls:
 24648 ;;		Nothing
 24649 ;; This function is called by:
 24650 ;;		_SYSTEM_Initialize
 24651 ;; This function uses a reentrant model
 24652 ;;
 24653                           
 24654                           	psect	text110
 24655  018D56                     __ptext110:
 24656                           	opt callstack 0
 24657  018D56                     _CLKREF_Initialize:
 24658                           	opt callstack 23
 24659                           
 24660                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24661                           
 24662                           ; BSR set to: 59
 24663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24664                           ;incstack = 0
 24665  018D56  013C               	movlb	60	; () banked
 24666  018D58  6BE6               	clrf	230,b	;volatile
 24667                           
 24668                           ; BSR set to: 60
 24669                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24670  018D5A  0E94               	movlw	148
 24671  018D5C  6FE5               	movwf	229,b	;volatile
 24672                           
 24673                           ; BSR set to: 60
 24674                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24675  018D5E  0012               	return		;funcret
 24676  018D60                     __end_of_CLKREF_Initialize:
 24677                           	opt callstack 0
 24678                           
 24679 ;; *************** function _ADCC_Initialize *****************
 24680 ;; Defined at:
 24681 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;		None
 24684 ;; Auto vars:     Size  Location     Type
 24685 ;;		None
 24686 ;; Return value:  Size  Location     Type
 24687 ;;                  1  [STACK] void 
 24688 ;; Registers used:
 24689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24690 ;; Tracked objects:
 24691 ;;		On entry : 3F/3E
 24692 ;;		On exit  : 0/0
 24693 ;;		Unchanged: 0/0
 24694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24699 ;;Total ram usage:        0 bytes
 24700 ;; Hardware stack levels used:    1
 24701 ;; Hardware stack levels required when called:    7
 24702 ;; This function calls:
 24703 ;;		_ADCC_SetADIInterruptHandler
 24704 ;;		_ADCC_SetADTIInterruptHandler
 24705 ;; This function is called by:
 24706 ;;		_SYSTEM_Initialize
 24707 ;; This function uses a reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text111
 24711  017D7E                     __ptext111:
 24712                           	opt callstack 0
 24713  017D7E                     _ADCC_Initialize:
 24714                           	opt callstack 22
 24715                           
 24716                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24717                           
 24718                           ; BSR set to: 60
 24719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24720                           ;incstack = 0
 24721  017D7E  013E               	movlb	62	; () banked
 24722  017D80  6BDE               	clrf	222,b	;volatile
 24723                           
 24724                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24725  017D82  6BDF               	clrf	223,b	;volatile
 24726                           
 24727                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24728  017D84  6BE0               	clrf	224,b	;volatile
 24729                           
 24730                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24731  017D86  6BE1               	clrf	225,b	;volatile
 24732                           
 24733                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24734  017D88  6BE4               	clrf	228,b	;volatile
 24735                           
 24736                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24737  017D8A  6BE5               	clrf	229,b	;volatile
 24738                           
 24739                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24740  017D8C  6BEA               	clrf	234,b	;volatile
 24741                           
 24742                           ; BSR set to: 62
 24743                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24744  017D8E  0E40               	movlw	64
 24745  017D90  6FEC               	movwf	236,b	;volatile
 24746                           
 24747                           ; BSR set to: 62
 24748                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24749  017D92  6BF1               	clrf	241,b	;volatile
 24750                           
 24751                           ; BSR set to: 62
 24752                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 24753  017D94  6BF3               	clrf	243,b	;volatile
 24754                           
 24755                           ; BSR set to: 62
 24756                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24757  017D96  6BF4               	clrf	244,b	;volatile
 24758                           
 24759                           ; BSR set to: 62
 24760                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24761  017D98  6BF5               	clrf	245,b	;volatile
 24762                           
 24763                           ; BSR set to: 62
 24764                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24765  017D9A  6BF6               	clrf	246,b	;volatile
 24766                           
 24767                           ; BSR set to: 62
 24768                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24769  017D9C  6BF7               	clrf	247,b	;volatile
 24770                           
 24771                           ; BSR set to: 62
 24772                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24773  017D9E  6BF9               	clrf	249,b	;volatile
 24774                           
 24775                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 24776  017DA0  0E6B               	movlw	107
 24777  017DA2  6FFA               	movwf	250,b	;volatile
 24778                           
 24779                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24780  017DA4  0E27               	movlw	39
 24781  017DA6  6FFB               	movwf	251,b	;volatile
 24782                           
 24783                           ; BSR set to: 62
 24784                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24785  017DA8  6BFC               	clrf	252,b	;volatile
 24786                           
 24787                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24788  017DAA  0E02               	movlw	2
 24789  017DAC  6FFD               	movwf	253,b	;volatile
 24790                           
 24791                           ; BSR set to: 62
 24792                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24793  017DAE  6BFE               	clrf	254,b	;volatile
 24794                           
 24795                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 24796  017DB0  0E02               	movlw	2
 24797  017DB2  6FFF               	movwf	255,b	;volatile
 24798                           
 24799                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 24800  017DB4  0E94               	movlw	148
 24801  017DB6  6FF8               	movwf	248,b	;volatile
 24802                           
 24803                           ; BSR set to: 62
 24804                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24805  017DB8  0139               	movlb	57	; () banked
 24806  017DBA  95A1               	bcf	161,2,b	;volatile
 24807                           
 24808                           ; BSR set to: 57
 24809                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24810  017DBC  8591               	bsf	145,2,b	;volatile
 24811                           
 24812                           ; BSR set to: 57
 24813                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24814  017DBE  0EC6               	movlw	low _ADCC_DefaultInterruptHandler
 24815  017DC0  6EE6               	movwf	postinc1,c
 24816  017DC2  0E8D               	movlw	high _ADCC_DefaultInterruptHandler
 24817  017DC4  6EE6               	movwf	postinc1,c
 24818  017DC6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24819  017DC8  6EE6               	movwf	postinc1,c
 24820  017DCA  ECD2  F0C4         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24821                           
 24822                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24823  017DCE  0139               	movlb	57	; () banked
 24824  017DD0  97A1               	bcf	161,3,b	;volatile
 24825                           
 24826                           ; BSR set to: 57
 24827                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24828  017DD2  8791               	bsf	145,3,b	;volatile
 24829                           
 24830                           ; BSR set to: 57
 24831                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24832  017DD4  0EC6               	movlw	low _ADCC_DefaultInterruptHandler
 24833  017DD6  6EE6               	movwf	postinc1,c
 24834  017DD8  0E8D               	movlw	high _ADCC_DefaultInterruptHandler
 24835  017DDA  6EE6               	movwf	postinc1,c
 24836  017DDC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24837  017DDE  6EE6               	movwf	postinc1,c
 24838  017DE0  ECBE  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24839                           
 24840                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24841  017DE4  0012               	return		;funcret
 24842  017DE6                     __end_of_ADCC_Initialize:
 24843                           	opt callstack 0
 24844                           
 24845 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24846 ;; Defined at:
 24847 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24848 ;; Parameters:    Size  Location     Type
 24849 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24850 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24851 ;; Auto vars:     Size  Location     Type
 24852 ;;		None
 24853 ;; Return value:  Size  Location     Type
 24854 ;;                  1  [STACK] void 
 24855 ;; Registers used:
 24856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24857 ;; Tracked objects:
 24858 ;;		On entry : 0/0
 24859 ;;		On exit  : 0/0
 24860 ;;		Unchanged: 0/0
 24861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;Total ram usage:        0 bytes
 24867 ;; Hardware stack levels used:    1
 24868 ;; Hardware stack levels required when called:    6
 24869 ;; This function calls:
 24870 ;;		Nothing
 24871 ;; This function is called by:
 24872 ;;		_ADCC_Initialize
 24873 ;;		_start_adc_scan
 24874 ;; This function uses a reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text112
 24878  01897C                     __ptext112:
 24879                           	opt callstack 0
 24880  01897C                     _ADCC_SetADTIInterruptHandler:
 24881                           	opt callstack 23
 24882                           
 24883                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24884                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24885                           
 24886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24887                           ;incstack = 0
 24888  01897C  50E1               	movf	fsr1l,w,c
 24889  01897E  0FFD               	addlw	-3
 24890  018980  6ED9               	movwf	fsr2l,c
 24891  018982  50E2               	movf	fsr1h,w,c
 24892  018984  6EDA               	movwf	fsr2h,c
 24893  018986  0EFF               	movlw	255
 24894  018988  22DA               	addwfc	fsr2h,f,c
 24895  01898A  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24896  018990  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24897  018996  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24898                           
 24899                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24900  01899C  52E5               	movf	postdec1,f,c
 24901  01899E  52E5               	movf	postdec1,f,c
 24902  0189A0  52E5               	movf	postdec1,f,c
 24903  0189A2  0012               	return		;funcret
 24904  0189A4                     __end_of_ADCC_SetADTIInterruptHandler:
 24905                           	opt callstack 0
 24906                           
 24907 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24908 ;; Defined at:
 24909 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24910 ;; Parameters:    Size  Location     Type
 24911 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24912 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24913 ;; Auto vars:     Size  Location     Type
 24914 ;;		None
 24915 ;; Return value:  Size  Location     Type
 24916 ;;                  1  [STACK] void 
 24917 ;; Registers used:
 24918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24919 ;; Tracked objects:
 24920 ;;		On entry : 6/0
 24921 ;;		On exit  : 0/0
 24922 ;;		Unchanged: 0/0
 24923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24928 ;;Total ram usage:        0 bytes
 24929 ;; Hardware stack levels used:    1
 24930 ;; Hardware stack levels required when called:    6
 24931 ;; This function calls:
 24932 ;;		Nothing
 24933 ;; This function is called by:
 24934 ;;		_ADCC_Initialize
 24935 ;;		_start_adc_scan
 24936 ;; This function uses a reentrant model
 24937 ;;
 24938                           
 24939                           	psect	text113
 24940  0189A4                     __ptext113:
 24941                           	opt callstack 0
 24942  0189A4                     _ADCC_SetADIInterruptHandler:
 24943                           	opt callstack 23
 24944                           
 24945                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24946                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24947                           
 24948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24949                           ;incstack = 0
 24950  0189A4  50E1               	movf	fsr1l,w,c
 24951  0189A6  0FFD               	addlw	-3
 24952  0189A8  6ED9               	movwf	fsr2l,c
 24953  0189AA  50E2               	movf	fsr1h,w,c
 24954  0189AC  6EDA               	movwf	fsr2h,c
 24955  0189AE  0EFF               	movlw	255
 24956  0189B0  22DA               	addwfc	fsr2h,f,c
 24957  0189B2  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24958  0189B8  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24959  0189BE  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24960                           
 24961                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24962  0189C4  52E5               	movf	postdec1,f,c
 24963  0189C6  52E5               	movf	postdec1,f,c
 24964  0189C8  52E5               	movf	postdec1,f,c
 24965  0189CA  0012               	return		;funcret
 24966  0189CC                     __end_of_ADCC_SetADIInterruptHandler:
 24967                           	opt callstack 0
 24968                           
 24969 ;; *************** function _TMR5_ISR *****************
 24970 ;; Defined at:
 24971 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24972 ;; Parameters:    Size  Location     Type
 24973 ;;		None
 24974 ;; Auto vars:     Size  Location     Type
 24975 ;;		None
 24976 ;; Return value:  Size  Location     Type
 24977 ;;                  1    wreg      void 
 24978 ;; Registers used:
 24979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24980 ;; Tracked objects:
 24981 ;;		On entry : 0/0
 24982 ;;		On exit  : 0/0
 24983 ;;		Unchanged: 0/0
 24984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;Total ram usage:        4 bytes
 24990 ;; Hardware stack levels used:    1
 24991 ;; Hardware stack levels required when called:    5
 24992 ;; This function calls:
 24993 ;;		_TMR5_CallBack
 24994 ;;		_TMR5_WriteTimer
 24995 ;; This function is called by:
 24996 ;;		Interrupt level 1
 24997 ;; This function uses a non-reentrant model
 24998 ;;
 24999                           
 25000                           	psect	text114
 25001  0180A0                     __ptext114:
 25002                           	opt callstack 0
 25003  0180A0                     _TMR5_ISR:
 25004                           	opt callstack 12
 25005                           
 25006                           ;incstack = 0
 25007  0180A0  006F FF60  F0E9    	movff	status,??_TMR5_ISR+2
 25008  0180A6  0060  F100  F0EA   	movff	btemp+11,??_TMR5_ISR+3
 25009  0180AC  EE15  F3AB         	lfsr	1,___intlo_sp
 25010                           
 25011                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25012  0180B0  0139               	movlb	57	; () banked
 25013  0180B2  9DA8               	bcf	168,6,b	;volatile
 25014                           
 25015                           ; BSR set to: 57
 25016                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25017  0180B4  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 25018  0180BA  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25019  0180C0  EC62  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25020                           
 25021                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25022  0180C4  0101               	movlb	1	; () banked
 25023  0180C6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25024  0180C8  0100               	movlb	0	; () banked
 25025  0180CA  6FE7               	movwf	??_TMR5_ISR& (0+255),b
 25026  0180CC  6BE8               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25027  0180CE  0E05               	movlw	5
 25028  0180D0  27E7               	addwf	??_TMR5_ISR& (0+255),f,b
 25029  0180D2  0E00               	movlw	0
 25030  0180D4  23E8               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25031  0180D6  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25032  0180D8  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25033  0180DA  51E7               	movf	??_TMR5_ISR& (0+255),w,b
 25034  0180DC  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25035  0180DE  51E8               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25036  0180E0  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25037  0180E2  A0D8               	btfss	status,0,c
 25038  0180E4  D004               	goto	i1l1045
 25039                           
 25040                           ; BSR set to: 0
 25041                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25042  0180E6  EC5B  F0C5         	call	_TMR5_CallBack	;wreg free
 25043                           
 25044                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25045  0180EA  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25046  0180EC  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25047  0180EE                     i1l1045:
 25048  0180EE  0060  F3A8  F040   	movff	??_TMR5_ISR+3,btemp+11
 25049  0180F4  0060  F3A7  FFD8   	movff	??_TMR5_ISR+2,status
 25050  0180FA  0011               	retfie		f
 25051  0180FC                     __end_of_TMR5_ISR:
 25052                           	opt callstack 0
 25053                           
 25054 ;; *************** function _TMR5_WriteTimer *****************
 25055 ;; Defined at:
 25056 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25057 ;; Parameters:    Size  Location     Type
 25058 ;;  timerVal        2  [STACK] unsigned short 
 25059 ;; Auto vars:     Size  Location     Type
 25060 ;;		None
 25061 ;; Return value:  Size  Location     Type
 25062 ;;                  1  [STACK] void 
 25063 ;; Registers used:
 25064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25065 ;; Tracked objects:
 25066 ;;		On entry : 3F/39
 25067 ;;		On exit  : 0/0
 25068 ;;		Unchanged: 0/0
 25069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25074 ;;Total ram usage:        0 bytes
 25075 ;; Hardware stack levels used:    1
 25076 ;; Hardware stack levels required when called:    3
 25077 ;; This function calls:
 25078 ;;		Nothing
 25079 ;; This function is called by:
 25080 ;;		_TMR5_ISR
 25081 ;; This function uses a reentrant model
 25082 ;;
 25083                           
 25084                           	psect	text115
 25085  0184C4                     __ptext115:
 25086                           	opt callstack 0
 25087  0184C4                     _TMR5_WriteTimer:
 25088                           	opt callstack 13
 25089                           
 25090                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25091                           
 25092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25093                           ;incstack = 0
 25094  0184C4  A49A               	btfss	154,2,c	;volatile
 25095  0184C6  D00F               	goto	l8843
 25096                           
 25097                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25098  0184C8  909A               	bcf	154,0,c	;volatile
 25099                           
 25100                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25101                           ;stkvar	_timerVal @ sp[(0)+-2]
 25102  0184CA  0EFF               	movlw	255
 25103  0184CC  24E1               	addwf	fsr1l,w,c
 25104  0184CE  6ED9               	movwf	fsr2l,c
 25105  0184D0  0EFF               	movlw	255
 25106  0184D2  20E2               	addwfc	fsr1h,w,c
 25107  0184D4  6EDA               	movwf	fsr2h,c
 25108  0184D6  50DF               	movf	indf2,w,c
 25109  0184D8  6E99               	movwf	153,c	;volatile
 25110                           
 25111                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25112                           ;stkvar	_timerVal @ sp[(0)+-2]
 25113  0184DA  0EFE               	movlw	-2
 25114  0184DC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25115                           
 25116                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25117  0184E2  809A               	bsf	154,0,c	;volatile
 25118                           
 25119                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25120  0184E4  D00C               	goto	l1028
 25121  0184E6                     l8843:
 25122                           
 25123                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25124                           ;stkvar	_timerVal @ sp[(0)+-2]
 25125  0184E6  0EFF               	movlw	255
 25126  0184E8  24E1               	addwf	fsr1l,w,c
 25127  0184EA  6ED9               	movwf	fsr2l,c
 25128  0184EC  0EFF               	movlw	255
 25129  0184EE  20E2               	addwfc	fsr1h,w,c
 25130  0184F0  6EDA               	movwf	fsr2h,c
 25131  0184F2  50DF               	movf	indf2,w,c
 25132  0184F4  6E99               	movwf	153,c	;volatile
 25133                           
 25134                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25135                           ;stkvar	_timerVal @ sp[(0)+-2]
 25136  0184F6  0EFE               	movlw	-2
 25137  0184F8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25138  0184FE                     l1028:
 25139                           
 25140                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25141  0184FE  52E5               	movf	postdec1,f,c
 25142  018500  52E5               	movf	postdec1,f,c
 25143  018502  0012               	return		;funcret
 25144  018504                     __end_of_TMR5_WriteTimer:
 25145                           	opt callstack 0
 25146                           
 25147 ;; *************** function _TMR5_CallBack *****************
 25148 ;; Defined at:
 25149 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;		None
 25152 ;; Auto vars:     Size  Location     Type
 25153 ;;		None
 25154 ;; Return value:  Size  Location     Type
 25155 ;;                  1  [STACK] void 
 25156 ;; Registers used:
 25157 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25158 ;; Tracked objects:
 25159 ;;		On entry : 3F/0
 25160 ;;		On exit  : 0/0
 25161 ;;		Unchanged: 0/0
 25162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25167 ;;Total ram usage:        0 bytes
 25168 ;; Hardware stack levels used:    1
 25169 ;; Hardware stack levels required when called:    4
 25170 ;; This function calls:
 25171 ;;		Absolute function
 25172 ;;		_TMR5_DefaultInterruptHandler
 25173 ;; This function is called by:
 25174 ;;		_TMR5_ISR
 25175 ;; This function uses a reentrant model
 25176 ;;
 25177                           
 25178                           	psect	text116
 25179  018AB6                     __ptext116:
 25180                           	opt callstack 0
 25181  018AB6                     _TMR5_CallBack:
 25182                           	opt callstack 12
 25183                           
 25184                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25185                           
 25186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25187                           ;incstack = 0
 25188  018AB6  0100               	movlb	0	; () banked
 25189  018AB8  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25190  018ABA  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25191  018ABC  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25192  018ABE  B4D8               	btfsc	status,2,c
 25193  018AC0  0012               	return	
 25194                           
 25195                           ; BSR set to: 0
 25196                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25197  018AC2  D801               	call	u866_28
 25198  018AC4  0012               	return	
 25199  018AC6                     u866_28:
 25200  018AC6  0005               	push	
 25201  018AC8  6EFA               	movwf	pclath,c
 25202  018ACA  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25203  018ACC  6EFD               	movwf	tosl,c
 25204  018ACE  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25205  018AD0  6EFE               	movwf	tosh,c
 25206  018AD2  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25207  018AD4  6EFF               	movwf	tosu,c
 25208  018AD6  50FA               	movf	pclath,w,c
 25209  018AD8  0012               	return		;indir
 25210  018ADA                     __end_of_TMR5_CallBack:
 25211                           	opt callstack 0
 25212                           
 25213 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25214 ;; Defined at:
 25215 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25216 ;; Parameters:    Size  Location     Type
 25217 ;;		None
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;		None
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  1  [STACK] void 
 25222 ;; Registers used:
 25223 ;;		wreg, status,2, status,0, btemp+11
 25224 ;; Tracked objects:
 25225 ;;		On entry : 3F/0
 25226 ;;		On exit  : 3F/1
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;Total ram usage:        0 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:    3
 25236 ;; This function calls:
 25237 ;;		Nothing
 25238 ;; This function is called by:
 25239 ;;		_TMR5_Initialize
 25240 ;;		_TMR5_CallBack
 25241 ;; This function uses a reentrant model
 25242 ;;
 25243                           
 25244                           	psect	text117
 25245  0189CC                     __ptext117:
 25246                           	opt callstack 0
 25247  0189CC                     _TMR5_DefaultInterruptHandler:
 25248                           	opt callstack 12
 25249                           
 25250                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25251                           
 25252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25253                           ;incstack = 0
 25254  0189CC  A0BE               	btfss	190,0,c	;volatile
 25255  0189CE  D002               	goto	u838_20
 25256  0189D0  0E01               	movlw	1
 25257  0189D2  D001               	goto	u838_26
 25258  0189D4                     u838_20:
 25259  0189D4  0E00               	movlw	0
 25260  0189D6                     u838_26:
 25261  0189D6  0AFF               	xorlw	255
 25262  0189D8  6E40               	movwf	(btemp+11)^0,c
 25263  0189DA  50BE               	movf	190,w,c	;volatile
 25264  0189DC  1840               	xorwf	(btemp+11)^0,w,c
 25265  0189DE  0BFE               	andlw	-2
 25266  0189E0  1840               	xorwf	(btemp+11)^0,w,c
 25267  0189E2  6EBE               	movwf	190,c	;volatile
 25268                           
 25269                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25270  0189E4  0E01               	movlw	1
 25271  0189E6  0101               	movlb	1	; () banked
 25272  0189E8  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25273  0189EA  0E00               	movlw	0
 25274  0189EC  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25275  0189EE  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25276  0189F0  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25277                           
 25278                           ; BSR set to: 1
 25279                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25280  0189F2  0012               	return		;funcret
 25281  0189F4                     __end_of_TMR5_DefaultInterruptHandler:
 25282                           	opt callstack 0
 25283                           
 25284 ;; *************** function _INT0_ISR *****************
 25285 ;; Defined at:
 25286 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25287 ;; Parameters:    Size  Location     Type
 25288 ;;		None
 25289 ;; Auto vars:     Size  Location     Type
 25290 ;;		None
 25291 ;; Return value:  Size  Location     Type
 25292 ;;                  1    wreg      void 
 25293 ;; Registers used:
 25294 ;;		wreg, status,2, status,0, pclath, tosl
 25295 ;; Tracked objects:
 25296 ;;		On entry : 0/0
 25297 ;;		On exit  : 0/0
 25298 ;;		Unchanged: 0/0
 25299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25304 ;;Total ram usage:        0 bytes
 25305 ;; Hardware stack levels used:    1
 25306 ;; Hardware stack levels required when called:    2
 25307 ;; This function calls:
 25308 ;;		_INT0_CallBack
 25309 ;; This function is called by:
 25310 ;;		Interrupt level 2
 25311 ;; This function uses a non-reentrant model
 25312 ;;
 25313                           
 25314                           	psect	text118
 25315  018D28                     __ptext118:
 25316                           	opt callstack 0
 25317  018D28                     _INT0_ISR:
 25318                           	opt callstack 12
 25319                           
 25320                           ; BSR set to: 1
 25321                           ;incstack = 0
 25322  018D28  EE13  F356         	lfsr	1,___inthi_sp
 25323                           
 25324                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25325  018D2C  0139               	movlb	57	; () banked
 25326  018D2E  91A1               	bcf	161,0,b	;volatile
 25327                           
 25328                           ; BSR set to: 57
 25329                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25330  018D30  EC6D  F0C5         	call	_INT0_CallBack	;wreg free
 25331  018D34  0011               	retfie		f
 25332  018D36                     __end_of_INT0_ISR:
 25333                           	opt callstack 0
 25334                           
 25335 ;; *************** function _INT0_CallBack *****************
 25336 ;; Defined at:
 25337 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;		None
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  1  [STACK] void 
 25344 ;; Registers used:
 25345 ;;		wreg, status,2, status,0, pclath, tosl
 25346 ;; Tracked objects:
 25347 ;;		On entry : 3F/39
 25348 ;;		On exit  : 0/0
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25355 ;;Total ram usage:        0 bytes
 25356 ;; Hardware stack levels used:    1
 25357 ;; Hardware stack levels required when called:    1
 25358 ;; This function calls:
 25359 ;;		Absolute function
 25360 ;;		_INT0_DefaultInterruptHandler
 25361 ;; This function is called by:
 25362 ;;		_INT0_ISR
 25363 ;; This function uses a reentrant model
 25364 ;;
 25365                           
 25366                           	psect	text119
 25367  018ADA                     __ptext119:
 25368                           	opt callstack 0
 25369  018ADA                     _INT0_CallBack:
 25370                           	opt callstack 12
 25371                           
 25372                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25373                           
 25374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25375                           ;incstack = 0
 25376  018ADA  5019               	movf	_INT0_InterruptHandler^0,w,c
 25377  018ADC  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25378  018ADE  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25379  018AE0  B4D8               	btfsc	status,2,c
 25380  018AE2  0012               	return	
 25381                           
 25382                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25383  018AE4  D801               	call	u404_48
 25384  018AE6  0012               	return	
 25385  018AE8                     u404_48:
 25386  018AE8  0005               	push	
 25387  018AEA  6EFA               	movwf	pclath,c
 25388  018AEC  5019               	movf	_INT0_InterruptHandler^0,w,c
 25389  018AEE  6EFD               	movwf	tosl,c
 25390  018AF0  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25391  018AF2  6EFE               	movwf	tosh,c
 25392  018AF4  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25393  018AF6  6EFF               	movwf	tosu,c
 25394  018AF8  50FA               	movf	pclath,w,c
 25395  018AFA  0012               	return		;indir
 25396  018AFC                     __end_of_INT0_CallBack:
 25397                           	opt callstack 0
 25398                           
 25399 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25400 ;; Defined at:
 25401 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25402 ;; Parameters:    Size  Location     Type
 25403 ;;		None
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;		None
 25406 ;; Return value:  Size  Location     Type
 25407 ;;                  1  [STACK] void 
 25408 ;; Registers used:
 25409 ;;		None
 25410 ;; Tracked objects:
 25411 ;;		On entry : 0/39
 25412 ;;		On exit  : 0/0
 25413 ;;		Unchanged: 0/0
 25414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;Total ram usage:        0 bytes
 25420 ;; Hardware stack levels used:    1
 25421 ;; This function calls:
 25422 ;;		Nothing
 25423 ;; This function is called by:
 25424 ;;		_EXT_INT_Initialize
 25425 ;;		_INT0_CallBack
 25426 ;; This function uses a reentrant model
 25427 ;;
 25428                           
 25429                           	psect	text120
 25430  018DC2                     __ptext120:
 25431                           	opt callstack 0
 25432  018DC2                     _INT0_DefaultInterruptHandler:
 25433                           	opt callstack 12
 25434                           
 25435                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25436                           
 25437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25438                           ;incstack = 0
 25439  018DC2  0012               	return		;funcret
 25440  018DC4                     __end_of_INT0_DefaultInterruptHandler:
 25441                           	opt callstack 0
 25442                           
 25443 ;; *************** function _INT1_ISR *****************
 25444 ;; Defined at:
 25445 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;		None
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  1    wreg      void 
 25452 ;; Registers used:
 25453 ;;		wreg, status,2, status,0, pclath, tosl
 25454 ;; Tracked objects:
 25455 ;;		On entry : 0/0
 25456 ;;		On exit  : 0/0
 25457 ;;		Unchanged: 0/0
 25458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;Total ram usage:        0 bytes
 25464 ;; Hardware stack levels used:    1
 25465 ;; Hardware stack levels required when called:    2
 25466 ;; This function calls:
 25467 ;;		_INT1_CallBack
 25468 ;; This function is called by:
 25469 ;;		Interrupt level 2
 25470 ;; This function uses a non-reentrant model
 25471 ;;
 25472                           
 25473                           	psect	text121
 25474  018D38                     __ptext121:
 25475                           	opt callstack 0
 25476  018D38                     _INT1_ISR:
 25477                           	opt callstack 12
 25478                           
 25479                           ;incstack = 0
 25480  018D38  EE13  F356         	lfsr	1,___inthi_sp
 25481                           
 25482                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 25483  018D3C  0139               	movlb	57	; () banked
 25484  018D3E  91A5               	bcf	165,0,b	;volatile
 25485                           
 25486                           ; BSR set to: 57
 25487                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 25488  018D40  EC7E  F0C5         	call	_INT1_CallBack	;wreg free
 25489  018D44  0011               	retfie		f
 25490  018D46                     __end_of_INT1_ISR:
 25491                           	opt callstack 0
 25492                           
 25493 ;; *************** function _INT1_CallBack *****************
 25494 ;; Defined at:
 25495 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;		None
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;		None
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1  [STACK] void 
 25502 ;; Registers used:
 25503 ;;		wreg, status,2, status,0, pclath, tosl
 25504 ;; Tracked objects:
 25505 ;;		On entry : 3F/39
 25506 ;;		On exit  : 0/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25513 ;;Total ram usage:        0 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:    1
 25516 ;; This function calls:
 25517 ;;		Absolute function
 25518 ;;		_INT1_DefaultInterruptHandler
 25519 ;; This function is called by:
 25520 ;;		_INT1_ISR
 25521 ;; This function uses a reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text122
 25525  018AFC                     __ptext122:
 25526                           	opt callstack 0
 25527  018AFC                     _INT1_CallBack:
 25528                           	opt callstack 12
 25529                           
 25530                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 25531                           
 25532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25533                           ;incstack = 0
 25534  018AFC  5016               	movf	_INT1_InterruptHandler^0,w,c
 25535  018AFE  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25536  018B00  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25537  018B02  B4D8               	btfsc	status,2,c
 25538  018B04  0012               	return	
 25539                           
 25540                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 25541  018B06  D801               	call	u406_48
 25542  018B08  0012               	return	
 25543  018B0A                     u406_48:
 25544  018B0A  0005               	push	
 25545  018B0C  6EFA               	movwf	pclath,c
 25546  018B0E  5016               	movf	_INT1_InterruptHandler^0,w,c
 25547  018B10  6EFD               	movwf	tosl,c
 25548  018B12  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25549  018B14  6EFE               	movwf	tosh,c
 25550  018B16  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25551  018B18  6EFF               	movwf	tosu,c
 25552  018B1A  50FA               	movf	pclath,w,c
 25553  018B1C  0012               	return		;indir
 25554  018B1E                     __end_of_INT1_CallBack:
 25555                           	opt callstack 0
 25556                           
 25557 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25558 ;; Defined at:
 25559 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;		None
 25562 ;; Auto vars:     Size  Location     Type
 25563 ;;		None
 25564 ;; Return value:  Size  Location     Type
 25565 ;;                  1  [STACK] void 
 25566 ;; Registers used:
 25567 ;;		None
 25568 ;; Tracked objects:
 25569 ;;		On entry : 0/39
 25570 ;;		On exit  : 0/0
 25571 ;;		Unchanged: 0/0
 25572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25577 ;;Total ram usage:        0 bytes
 25578 ;; Hardware stack levels used:    1
 25579 ;; This function calls:
 25580 ;;		Nothing
 25581 ;; This function is called by:
 25582 ;;		_EXT_INT_Initialize
 25583 ;;		_INT1_CallBack
 25584 ;; This function uses a reentrant model
 25585 ;;
 25586                           
 25587                           	psect	text123
 25588  018DC4                     __ptext123:
 25589                           	opt callstack 0
 25590  018DC4                     _INT1_DefaultInterruptHandler:
 25591                           	opt callstack 12
 25592                           
 25593                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25594                           
 25595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25596                           ;incstack = 0
 25597  018DC4  0012               	return		;funcret
 25598  018DC6                     __end_of_INT1_DefaultInterruptHandler:
 25599                           	opt callstack 0
 25600                           
 25601 ;; *************** function _Default_ISR *****************
 25602 ;; Defined at:
 25603 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25604 ;; Parameters:    Size  Location     Type
 25605 ;;		None
 25606 ;; Auto vars:     Size  Location     Type
 25607 ;;		None
 25608 ;; Return value:  Size  Location     Type
 25609 ;;                  1    wreg      void 
 25610 ;; Registers used:
 25611 ;;		None
 25612 ;; Tracked objects:
 25613 ;;		On entry : 0/0
 25614 ;;		On exit  : 0/0
 25615 ;;		Unchanged: 0/0
 25616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25621 ;;Total ram usage:        0 bytes
 25622 ;; Hardware stack levels used:    1
 25623 ;; This function calls:
 25624 ;;		Nothing
 25625 ;; This function is called by:
 25626 ;;		Interrupt level 2
 25627 ;; This function uses a non-reentrant model
 25628 ;;
 25629                           
 25630                           	psect	text124
 25631  018DBC                     __ptext124:
 25632                           	opt callstack 0
 25633  018DBC                     _Default_ISR:
 25634                           	opt callstack 14
 25635                           
 25636                           ;incstack = 0
 25637  018DBC  EE13  F356         	lfsr	1,___inthi_sp
 25638  018DC0  0011               	retfie		f
 25639  018DC2                     __end_of_Default_ISR:
 25640                           	opt callstack 0
 25641                           
 25642 ;; *************** function _ADCC_ISR *****************
 25643 ;; Defined at:
 25644 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;		None
 25647 ;; Auto vars:     Size  Location     Type
 25648 ;;		None
 25649 ;; Return value:  Size  Location     Type
 25650 ;;                  1    wreg      void 
 25651 ;; Registers used:
 25652 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25653 ;; Tracked objects:
 25654 ;;		On entry : 0/0
 25655 ;;		On exit  : 0/0
 25656 ;;		Unchanged: 0/0
 25657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25662 ;;Total ram usage:        1 bytes
 25663 ;; Hardware stack levels used:    1
 25664 ;; Hardware stack levels required when called:    1
 25665 ;; This function calls:
 25666 ;;		Absolute function
 25667 ;;		_ADCC_DefaultInterruptHandler
 25668 ;;		_adc_int_handler
 25669 ;; This function is called by:
 25670 ;;		Interrupt level 2
 25671 ;; This function uses a non-reentrant model
 25672 ;;
 25673                           
 25674                           	psect	text125
 25675  018578                     __ptext125:
 25676                           	opt callstack 0
 25677  018578                     _ADCC_ISR:
 25678                           	opt callstack 13
 25679                           
 25680                           ;incstack = 0
 25681  018578  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 25682  01857E  EE13  F356         	lfsr	1,___inthi_sp
 25683                           
 25684                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25685  018582  0139               	movlb	57	; () banked
 25686  018584  95A1               	bcf	161,2,b	;volatile
 25687                           
 25688                           ; BSR set to: 57
 25689                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25690  018586  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25691  018588  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25692  01858A  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25693  01858C  B4D8               	btfsc	status,2,c
 25694  01858E  D00C               	goto	i2u434_49
 25695                           
 25696                           ; BSR set to: 57
 25697                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25698  018590  D801               	call	i2u434_48
 25699  018592  D00A               	goto	i2u434_49
 25700  018594                     i2u434_48:
 25701  018594  0005               	push	
 25702  018596  6EFA               	movwf	pclath,c
 25703  018598  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25704  01859A  6EFD               	movwf	tosl,c
 25705  01859C  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25706  01859E  6EFE               	movwf	tosh,c
 25707  0185A0  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25708  0185A2  6EFF               	movwf	tosu,c
 25709  0185A4  50FA               	movf	pclath,w,c
 25710  0185A6  0012               	return		;indir
 25711  0185A8                     i2u434_49:
 25712  0185A8  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 25713  0185AE  0011               	retfie		f
 25714  0185B0                     __end_of_ADCC_ISR:
 25715                           	opt callstack 0
 25716                           
 25717 ;; *************** function _adc_int_t_handler *****************
 25718 ;; Defined at:
 25719 ;;		line 123 in file "daq.c"
 25720 ;; Parameters:    Size  Location     Type
 25721 ;;		None
 25722 ;; Auto vars:     Size  Location     Type
 25723 ;;		None
 25724 ;; Return value:  Size  Location     Type
 25725 ;;                  1  [STACK] void 
 25726 ;; Registers used:
 25727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25728 ;; Tracked objects:
 25729 ;;		On entry : 3F/39
 25730 ;;		On exit  : 1/0
 25731 ;;		Unchanged: 0/0
 25732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25737 ;;Total ram usage:        0 bytes
 25738 ;; Hardware stack levels used:    1
 25739 ;; Hardware stack levels required when called:    1
 25740 ;; This function calls:
 25741 ;;		_ADCC_DischargeSampleCapacitor
 25742 ;;		_ADCC_StartConversion
 25743 ;; This function is called by:
 25744 ;;		_start_adc_scan
 25745 ;;		_ADCC_ThresholdISR
 25746 ;; This function uses a reentrant model
 25747 ;;
 25748                           
 25749                           	psect	text126
 25750  0178B6                     __ptext126:
 25751                           	opt callstack 0
 25752  0178B6                     _adc_int_t_handler:
 25753                           	opt callstack 12
 25754                           
 25755                           ;daq.c: 128:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25756                           
 25757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25758                           ;incstack = 0
 25759  0178B6  013E               	movlb	62	; () banked
 25760  0178B8  51E6               	movf	230,w,b	;volatile
 25761  0178BA  006F FB9C  F035    	movff	16103,btemp	;volatile
 25762  0178C0  6A36               	clrf	(btemp+1)^0,c
 25763  0178C2  0060  F0D4  F036   	movff	btemp,btemp+1
 25764  0178C8  6A35               	clrf	btemp^0,c
 25765  0178CA  2635               	addwf	btemp^0,f,c
 25766  0178CC  0E00               	movlw	0
 25767  0178CE  2236               	addwfc	(btemp+1)^0,f,c
 25768  0178D0  0100               	movlb	0	; () banked
 25769  0178D2  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 25770  0178D4  0D02               	mullw	2
 25771  0178D6  50F3               	movf	243,w,c
 25772  0178D8  0FA3               	addlw	low _R
 25773  0178DA  6ED9               	movwf	fsr2l,c
 25774  0178DC  6ADA               	clrf	fsr2h,c
 25775  0178DE  0060  F0D7  FFDE   	movff	btemp,postinc2
 25776  0178E4  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 25777  0178EA                     l8995:
 25778                           
 25779                           ;daq.c: 130:   if (++R.scan_index > 0XD) {
 25780  0178EA  0100               	movlb	0	; () banked
 25781  0178EC  2BCB               	incf	(_R+40)& (0+255),f,b	;volatile
 25782  0178EE  0E0D               	movlw	13
 25783  0178F0  65CB               	cpfsgt	(_R+40)& (0+255),b	;volatile
 25784  0178F2  D004               	goto	l9003
 25785                           
 25786                           ; BSR set to: 0
 25787                           ;daq.c: 131:    R.done = 1;
 25788  0178F4  0E01               	movlw	1
 25789  0178F6  6FCE               	movwf	(_R+43)& (0+255),b	;volatile
 25790                           
 25791                           ; BSR set to: 0
 25792  0178F8  92BE               	bcf	190,1,c	;volatile
 25793  0178FA  0012               	return	
 25794  0178FC                     l9003:
 25795                           
 25796                           ; BSR set to: 0
 25797                           ;daq.c: 137:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25798  0178FC  0060  F32C  F040   	movff	_R+40,btemp+11	;volatile
 25799  017902  EE20  F0CC         	lfsr	2,_R+41	;volatile
 25800  017906  006F FF78  F03D    	movff	postinc2,btemp+8
 25801  01790C  006F FF74  F03E    	movff	postdec2,btemp+9
 25802  017912  2A40               	incf	(btemp+11)^0,f,c
 25803  017914  D003               	goto	u878_44
 25804  017916                     u878_45:
 25805  017916  90D8               	bcf	status,0,c
 25806  017918  323E               	rrcf	(btemp+9)^0,f,c
 25807  01791A  323D               	rrcf	(btemp+8)^0,f,c
 25808  01791C                     u878_44:
 25809  01791C  2E40               	decfsz	(btemp+11)^0,f,c
 25810  01791E  D7FB               	goto	u878_45
 25811  017920  A03D               	btfss	(btemp+8)^0,0,c
 25812  017922  D7E3               	goto	l8995
 25813                           
 25814                           ;daq.c: 138:  ADCC_DischargeSampleCapacitor();
 25815  017924  ECD1  F0C6         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25816                           
 25817                           ; BSR set to: 62
 25818                           ;daq.c: 139:  ADCC_StartConversion(R.scan_index & 0xf);
 25819  017928  0100               	movlb	0	; () banked
 25820  01792A  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 25821  01792C  0B0F               	andlw	15
 25822  01792E  6EE6               	movwf	postinc1,c
 25823  017930  EC74  F0C6         	call	_ADCC_StartConversion	;wreg free
 25824                           
 25825                           ; BSR set to: 62
 25826  017934  A2BE               	btfss	190,1,c	;volatile
 25827  017936  D002               	goto	u880_40
 25828  017938  0E01               	movlw	1
 25829  01793A  D001               	goto	u880_46
 25830  01793C                     u880_40:
 25831  01793C  0E00               	movlw	0
 25832  01793E                     u880_46:
 25833  01793E  0AFF               	xorlw	255
 25834  017940  6E40               	movwf	(btemp+11)^0,c
 25835  017942  4640               	rlncf	(btemp+11)^0,f,c
 25836  017944  50BE               	movf	190,w,c	;volatile
 25837  017946  1840               	xorwf	(btemp+11)^0,w,c
 25838  017948  0BFD               	andlw	-3
 25839  01794A  1840               	xorwf	(btemp+11)^0,w,c
 25840  01794C  6EBE               	movwf	190,c	;volatile
 25841                           
 25842                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25843  01794E  0012               	return		;funcret
 25844  017950                     __end_of_adc_int_t_handler:
 25845                           	opt callstack 0
 25846                           
 25847 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25848 ;; Defined at:
 25849 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25850 ;; Parameters:    Size  Location     Type
 25851 ;;		None
 25852 ;; Auto vars:     Size  Location     Type
 25853 ;;		None
 25854 ;; Return value:  Size  Location     Type
 25855 ;;                  1  [STACK] void 
 25856 ;; Registers used:
 25857 ;;		None
 25858 ;; Tracked objects:
 25859 ;;		On entry : 3F/39
 25860 ;;		On exit  : 0/0
 25861 ;;		Unchanged: 0/0
 25862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25867 ;;Total ram usage:        0 bytes
 25868 ;; Hardware stack levels used:    1
 25869 ;; This function calls:
 25870 ;;		Nothing
 25871 ;; This function is called by:
 25872 ;;		_ADCC_Initialize
 25873 ;;		_ADCC_ISR
 25874 ;;		_ADCC_ThresholdISR
 25875 ;; This function uses a reentrant model
 25876 ;;
 25877                           
 25878                           	psect	text127
 25879  018DC6                     __ptext127:
 25880                           	opt callstack 0
 25881  018DC6                     _ADCC_DefaultInterruptHandler:
 25882                           	opt callstack 13
 25883                           
 25884                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25885                           
 25886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25887                           ;incstack = 0
 25888  018DC6  0012               	return		;funcret
 25889  018DC8                     __end_of_ADCC_DefaultInterruptHandler:
 25890                           	opt callstack 0
 25891                           
 25892 ;; *************** function _adc_int_handler *****************
 25893 ;; Defined at:
 25894 ;;		line 113 in file "daq.c"
 25895 ;; Parameters:    Size  Location     Type
 25896 ;;		None
 25897 ;; Auto vars:     Size  Location     Type
 25898 ;;		None
 25899 ;; Return value:  Size  Location     Type
 25900 ;;                  1  [STACK] void 
 25901 ;; Registers used:
 25902 ;;		wreg, status,2, status,0, btemp+11
 25903 ;; Tracked objects:
 25904 ;;		On entry : 3F/39
 25905 ;;		On exit  : 0/0
 25906 ;;		Unchanged: 0/0
 25907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25912 ;;Total ram usage:        0 bytes
 25913 ;; Hardware stack levels used:    1
 25914 ;; This function calls:
 25915 ;;		Nothing
 25916 ;; This function is called by:
 25917 ;;		_start_adc_scan
 25918 ;;		_ADCC_ISR
 25919 ;; This function uses a reentrant model
 25920 ;;
 25921                           
 25922                           	psect	text128
 25923  018B9A                     __ptext128:
 25924                           	opt callstack 0
 25925  018B9A                     _adc_int_handler:
 25926                           	opt callstack 13
 25927                           
 25928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25929                           ;incstack = 0
 25930                           ;daq.c: 116:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 25931  018B9A  A4BE               	btfss	190,2,c	;volatile
 25932  018B9C  D002               	goto	u428_40
 25933  018B9E  0E01               	movlw	1
 25934  018BA0  D001               	goto	u428_46
 25935  018BA2                     u428_40:
 25936  018BA2  0E00               	movlw	0
 25937  018BA4                     u428_46:
 25938  018BA4  0AFF               	xorlw	255
 25939  018BA6  6E40               	movwf	(btemp+11)^0,c
 25940  018BA8  4640               	rlncf	(btemp+11)^0,f,c
 25941  018BAA  4640               	rlncf	(btemp+11)^0,f,c
 25942  018BAC  50BE               	movf	190,w,c	;volatile
 25943  018BAE  1840               	xorwf	(btemp+11)^0,w,c
 25944  018BB0  0BFB               	andlw	-5
 25945  018BB2  1840               	xorwf	(btemp+11)^0,w,c
 25946  018BB4  6EBE               	movwf	190,c	;volatile
 25947                           
 25948                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25949  018BB6  0012               	return		;funcret
 25950  018BB8                     __end_of_adc_int_handler:
 25951                           	opt callstack 0
 25952                           
 25953 ;; *************** function _ADCC_ThresholdISR *****************
 25954 ;; Defined at:
 25955 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25956 ;; Parameters:    Size  Location     Type
 25957 ;;		None
 25958 ;; Auto vars:     Size  Location     Type
 25959 ;;		None
 25960 ;; Return value:  Size  Location     Type
 25961 ;;                  1    wreg      void 
 25962 ;; Registers used:
 25963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25964 ;; Tracked objects:
 25965 ;;		On entry : 0/0
 25966 ;;		On exit  : 0/0
 25967 ;;		Unchanged: 0/0
 25968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25971 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25972 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;Total ram usage:        5 bytes
 25974 ;; Hardware stack levels used:    1
 25975 ;; Hardware stack levels required when called:    2
 25976 ;; This function calls:
 25977 ;;		Absolute function
 25978 ;;		_ADCC_DefaultInterruptHandler
 25979 ;;		_adc_int_t_handler
 25980 ;; This function is called by:
 25981 ;;		Interrupt level 2
 25982 ;; This function uses a non-reentrant model
 25983 ;;
 25984                           
 25985                           	psect	text129
 25986  017DE8                     __ptext129:
 25987                           	opt callstack 0
 25988  017DE8                     _ADCC_ThresholdISR:
 25989                           	opt callstack 12
 25990                           
 25991                           ;incstack = 0
 25992  017DE8  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 25993  017DEE  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25994  017DF4  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25995  017DFA  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25996  017E00  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25997  017E06  EE13  F356         	lfsr	1,___inthi_sp
 25998                           
 25999                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26000  017E0A  0139               	movlb	57	; () banked
 26001  017E0C  97A1               	bcf	161,3,b	;volatile
 26002                           
 26003                           ; BSR set to: 57
 26004                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26005  017E0E  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26006  017E10  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26007  017E12  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26008  017E14  B4D8               	btfsc	status,2,c
 26009  017E16  D00C               	goto	i2u882_49
 26010                           
 26011                           ; BSR set to: 57
 26012                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26013  017E18  D801               	call	i2u882_48
 26014  017E1A  D00A               	goto	i2u882_49
 26015  017E1C                     i2u882_48:
 26016  017E1C  0005               	push	
 26017  017E1E  6EFA               	movwf	pclath,c
 26018  017E20  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26019  017E22  6EFD               	movwf	tosl,c
 26020  017E24  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26021  017E26  6EFE               	movwf	tosh,c
 26022  017E28  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26023  017E2A  6EFF               	movwf	tosu,c
 26024  017E2C  50FA               	movf	pclath,w,c
 26025  017E2E  0012               	return		;indir
 26026  017E30                     i2u882_49:
 26027  017E30  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26028  017E36  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26029  017E3C  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26030  017E42  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26031  017E48  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 26032  017E4E  0011               	retfie		f
 26033  017E50                     __end_of_ADCC_ThresholdISR:
 26034                           	opt callstack 0
 26035                           
 26036 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 26037 ;; Defined at:
 26038 ;;		line 189 in file "mcc_generated_files/adcc.c"
 26039 ;; Parameters:    Size  Location     Type
 26040 ;;		None
 26041 ;; Auto vars:     Size  Location     Type
 26042 ;;		None
 26043 ;; Return value:  Size  Location     Type
 26044 ;;                  1  [STACK] void 
 26045 ;; Registers used:
 26046 ;;		wreg, status,2
 26047 ;; Tracked objects:
 26048 ;;		On entry : 0/0
 26049 ;;		On exit  : 3F/3E
 26050 ;;		Unchanged: 0/0
 26051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26056 ;;Total ram usage:        0 bytes
 26057 ;; Hardware stack levels used:    1
 26058 ;; This function calls:
 26059 ;;		Nothing
 26060 ;; This function is called by:
 26061 ;;		_adc_int_t_handler
 26062 ;; This function uses a reentrant model
 26063 ;;
 26064                           
 26065                           	psect	text130
 26066  018DA2                     __ptext130:
 26067                           	opt callstack 0
 26068  018DA2                     _ADCC_DischargeSampleCapacitor:
 26069                           	opt callstack 12
 26070                           
 26071                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 26072                           
 26073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26074                           ;incstack = 0
 26075  018DA2  0E3B               	movlw	59
 26076  018DA4  013E               	movlb	62	; () banked
 26077  018DA6  6FF1               	movwf	241,b	;volatile
 26078                           
 26079                           ; BSR set to: 62
 26080                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 26081  018DA8  0012               	return		;funcret
 26082  018DAA                     __end_of_ADCC_DischargeSampleCapacitor:
 26083                           	opt callstack 0
 26084                           
 26085 ;; *************** function _UART1_tx_vect_isr *****************
 26086 ;; Defined at:
 26087 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26088 ;; Parameters:    Size  Location     Type
 26089 ;;		None
 26090 ;; Auto vars:     Size  Location     Type
 26091 ;;		None
 26092 ;; Return value:  Size  Location     Type
 26093 ;;                  1    wreg      void 
 26094 ;; Registers used:
 26095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26096 ;; Tracked objects:
 26097 ;;		On entry : 0/0
 26098 ;;		On exit  : 0/0
 26099 ;;		Unchanged: 0/0
 26100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26105 ;;Total ram usage:        0 bytes
 26106 ;; Hardware stack levels used:    1
 26107 ;; Hardware stack levels required when called:    1
 26108 ;; This function calls:
 26109 ;;		Absolute function
 26110 ;;		_UART1_Transmit_ISR
 26111 ;; This function is called by:
 26112 ;;		Interrupt level 2
 26113 ;; This function uses a non-reentrant model
 26114 ;;
 26115                           
 26116                           	psect	text131
 26117  0189F4                     __ptext131:
 26118                           	opt callstack 0
 26119  0189F4                     _UART1_tx_vect_isr:
 26120                           	opt callstack 13
 26121                           
 26122                           ; BSR set to: 62
 26123                           ;incstack = 0
 26124  0189F4  EE13  F356         	lfsr	1,___inthi_sp
 26125                           
 26126                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26127  0189F8  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26128  0189FA  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26129  0189FC  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26130  0189FE  B4D8               	btfsc	status,2,c
 26131  018A00  0011               	retfie		f
 26132                           
 26133                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26134  018A02  D801               	call	i2u1068_48
 26135  018A04  0011               	retfie		f
 26136  018A06                     i2u1068_48:
 26137  018A06  0005               	push	
 26138  018A08  6EFA               	movwf	pclath,c
 26139  018A0A  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26140  018A0C  6EFD               	movwf	tosl,c
 26141  018A0E  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26142  018A10  6EFE               	movwf	tosh,c
 26143  018A12  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26144  018A14  6EFF               	movwf	tosu,c
 26145  018A16  50FA               	movf	pclath,w,c
 26146  018A18  0012               	return		;indir
 26147  018A1A                     __end_of_UART1_tx_vect_isr:
 26148                           	opt callstack 0
 26149                           
 26150 ;; *************** function _UART1_Transmit_ISR *****************
 26151 ;; Defined at:
 26152 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26153 ;; Parameters:    Size  Location     Type
 26154 ;;		None
 26155 ;; Auto vars:     Size  Location     Type
 26156 ;;		None
 26157 ;; Return value:  Size  Location     Type
 26158 ;;                  1  [STACK] void 
 26159 ;; Registers used:
 26160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26161 ;; Tracked objects:
 26162 ;;		On entry : 0/0
 26163 ;;		On exit  : 3B/39
 26164 ;;		Unchanged: 0/0
 26165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26170 ;;Total ram usage:        0 bytes
 26171 ;; Hardware stack levels used:    1
 26172 ;; This function calls:
 26173 ;;		Nothing
 26174 ;; This function is called by:
 26175 ;;		_UART1_Initialize
 26176 ;;		_UART1_tx_vect_isr
 26177 ;; This function uses a reentrant model
 26178 ;;
 26179                           
 26180                           	psect	text132
 26181  018742                     __ptext132:
 26182                           	opt callstack 0
 26183  018742                     _UART1_Transmit_ISR:
 26184                           	opt callstack 13
 26185                           
 26186                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26187                           
 26188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26189                           ;incstack = 0
 26190  018742  0E40               	movlw	64
 26191  018744  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 26192  018746  D010               	goto	l581
 26193                           
 26194                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26195  018748  0E6C               	movlw	low _uart1TxBuffer
 26196  01874A  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 26197  01874C  6ED9               	movwf	fsr2l,c
 26198  01874E  6ADA               	clrf	fsr2h,c
 26199  018750  0E02               	movlw	high _uart1TxBuffer
 26200  018752  22DA               	addwfc	fsr2h,f,c
 26201  018754  50DF               	movf	indf2,w,c
 26202  018756  013D               	movlb	61	; () banked
 26203  018758  6FEA               	movwf	234,b	;volatile
 26204                           
 26205                           ; BSR set to: 61
 26206  01875A  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 26207                           
 26208                           ; BSR set to: 61
 26209                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26210  01875C  0E3F               	movlw	63
 26211  01875E  6433               	cpfsgt	_uart1TxTail^0,c
 26212  018760  D001               	goto	l8795
 26213                           
 26214                           ; BSR set to: 61
 26215                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26216  018762  6A33               	clrf	_uart1TxTail^0,c	;volatile
 26217  018764                     l8795:
 26218                           
 26219                           ; BSR set to: 61
 26220                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26221  018764  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26222                           
 26223                           ;mcc_generated_files/uart1.c: 222:  } else {
 26224  018766  0012               	return	
 26225  018768                     l581:
 26226                           
 26227                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26228  018768  0139               	movlb	57	; () banked
 26229  01876A  9993               	bcf	147,4,b	;volatile
 26230                           
 26231                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26232  01876C  0012               	return		;funcret
 26233  01876E                     __end_of_UART1_Transmit_ISR:
 26234                           	opt callstack 0
 26235                           
 26236 ;; *************** function _UART1_rx_vect_isr *****************
 26237 ;; Defined at:
 26238 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26239 ;; Parameters:    Size  Location     Type
 26240 ;;		None
 26241 ;; Auto vars:     Size  Location     Type
 26242 ;;		None
 26243 ;; Return value:  Size  Location     Type
 26244 ;;                  1    wreg      void 
 26245 ;; Registers used:
 26246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26247 ;; Tracked objects:
 26248 ;;		On entry : 0/0
 26249 ;;		On exit  : 0/0
 26250 ;;		Unchanged: 0/0
 26251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;Total ram usage:        0 bytes
 26257 ;; Hardware stack levels used:    1
 26258 ;; Hardware stack levels required when called:    1
 26259 ;; This function calls:
 26260 ;;		Absolute function
 26261 ;;		_UART1_Receive_ISR
 26262 ;; This function is called by:
 26263 ;;		Interrupt level 2
 26264 ;; This function uses a non-reentrant model
 26265 ;;
 26266                           
 26267                           	psect	text133
 26268  018A1C                     __ptext133:
 26269                           	opt callstack 0
 26270  018A1C                     _UART1_rx_vect_isr:
 26271                           	opt callstack 13
 26272                           
 26273                           ;incstack = 0
 26274  018A1C  EE13  F356         	lfsr	1,___inthi_sp
 26275                           
 26276                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26277  018A20  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26278  018A22  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26279  018A24  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26280  018A26  B4D8               	btfsc	status,2,c
 26281  018A28  0011               	retfie		f
 26282                           
 26283                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26284  018A2A  D801               	call	i2u1070_48
 26285  018A2C  0011               	retfie		f
 26286  018A2E                     i2u1070_48:
 26287  018A2E  0005               	push	
 26288  018A30  6EFA               	movwf	pclath,c
 26289  018A32  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26290  018A34  6EFD               	movwf	tosl,c
 26291  018A36  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26292  018A38  6EFE               	movwf	tosh,c
 26293  018A3A  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26294  018A3C  6EFF               	movwf	tosu,c
 26295  018A3E  50FA               	movf	pclath,w,c
 26296  018A40  0012               	return		;indir
 26297  018A42                     __end_of_UART1_rx_vect_isr:
 26298                           	opt callstack 0
 26299                           
 26300 ;; *************** function _UART1_Receive_ISR *****************
 26301 ;; Defined at:
 26302 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26303 ;; Parameters:    Size  Location     Type
 26304 ;;		None
 26305 ;; Auto vars:     Size  Location     Type
 26306 ;;		None
 26307 ;; Return value:  Size  Location     Type
 26308 ;;                  1  [STACK] void 
 26309 ;; Registers used:
 26310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26311 ;; Tracked objects:
 26312 ;;		On entry : 0/0
 26313 ;;		On exit  : 0/0
 26314 ;;		Unchanged: 0/0
 26315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;Total ram usage:        0 bytes
 26321 ;; Hardware stack levels used:    1
 26322 ;; This function calls:
 26323 ;;		Nothing
 26324 ;; This function is called by:
 26325 ;;		_UART1_Initialize
 26326 ;;		_UART1_rx_vect_isr
 26327 ;; This function uses a reentrant model
 26328 ;;
 26329                           
 26330                           	psect	text134
 26331  018BB8                     __ptext134:
 26332                           	opt callstack 0
 26333  018BB8                     _UART1_Receive_ISR:
 26334                           	opt callstack 13
 26335                           
 26336                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26337                           
 26338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26339                           ;incstack = 0
 26340  018BB8  0E00               	movlw	low _uart1RxBuffer
 26341  018BBA  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 26342  018BBC  6ED9               	movwf	fsr2l,c
 26343  018BBE  6ADA               	clrf	fsr2h,c
 26344  018BC0  0E05               	movlw	high _uart1RxBuffer
 26345  018BC2  22DA               	addwfc	fsr2h,f,c
 26346  018BC4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26347  018BCA  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 26348                           
 26349                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26350  018BCC  2831               	incf	_uart1RxHead^0,w,c
 26351  018BCE  B4D8               	btfsc	status,2,c
 26352                           
 26353                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26354  018BD0  6A31               	clrf	_uart1RxHead^0,c	;volatile
 26355                           
 26356                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26357  018BD2  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 26358                           
 26359                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26360  018BD4  0012               	return		;funcret
 26361  018BD6                     __end_of_UART1_Receive_ISR:
 26362                           	opt callstack 0
 26363                           
 26364 ;; *************** function _UART2_tx_vect_isr *****************
 26365 ;; Defined at:
 26366 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26367 ;; Parameters:    Size  Location     Type
 26368 ;;		None
 26369 ;; Auto vars:     Size  Location     Type
 26370 ;;		None
 26371 ;; Return value:  Size  Location     Type
 26372 ;;                  1    wreg      void 
 26373 ;; Registers used:
 26374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26375 ;; Tracked objects:
 26376 ;;		On entry : 0/0
 26377 ;;		On exit  : 0/0
 26378 ;;		Unchanged: 0/0
 26379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26384 ;;Total ram usage:        0 bytes
 26385 ;; Hardware stack levels used:    1
 26386 ;; Hardware stack levels required when called:    1
 26387 ;; This function calls:
 26388 ;;		Absolute function
 26389 ;;		_UART2_Transmit_ISR
 26390 ;; This function is called by:
 26391 ;;		Interrupt level 2
 26392 ;; This function uses a non-reentrant model
 26393 ;;
 26394                           
 26395                           	psect	text135
 26396  018A44                     __ptext135:
 26397                           	opt callstack 0
 26398  018A44                     _UART2_tx_vect_isr:
 26399                           	opt callstack 13
 26400                           
 26401                           ;incstack = 0
 26402  018A44  EE13  F356         	lfsr	1,___inthi_sp
 26403                           
 26404                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26405  018A48  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26406  018A4A  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26407  018A4C  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26408  018A4E  B4D8               	btfsc	status,2,c
 26409  018A50  0011               	retfie		f
 26410                           
 26411                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26412  018A52  D801               	call	i2u1072_48
 26413  018A54  0011               	retfie		f
 26414  018A56                     i2u1072_48:
 26415  018A56  0005               	push	
 26416  018A58  6EFA               	movwf	pclath,c
 26417  018A5A  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26418  018A5C  6EFD               	movwf	tosl,c
 26419  018A5E  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26420  018A60  6EFE               	movwf	tosh,c
 26421  018A62  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26422  018A64  6EFF               	movwf	tosu,c
 26423  018A66  50FA               	movf	pclath,w,c
 26424  018A68  0012               	return		;indir
 26425  018A6A                     __end_of_UART2_tx_vect_isr:
 26426                           	opt callstack 0
 26427                           
 26428 ;; *************** function _UART2_Transmit_ISR *****************
 26429 ;; Defined at:
 26430 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26431 ;; Parameters:    Size  Location     Type
 26432 ;;		None
 26433 ;; Auto vars:     Size  Location     Type
 26434 ;;		None
 26435 ;; Return value:  Size  Location     Type
 26436 ;;                  1  [STACK] void 
 26437 ;; Registers used:
 26438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26439 ;; Tracked objects:
 26440 ;;		On entry : 0/0
 26441 ;;		On exit  : 3B/39
 26442 ;;		Unchanged: 0/0
 26443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26448 ;;Total ram usage:        0 bytes
 26449 ;; Hardware stack levels used:    1
 26450 ;; This function calls:
 26451 ;;		Nothing
 26452 ;; This function is called by:
 26453 ;;		_UART2_Initialize
 26454 ;;		_UART2_tx_vect_isr
 26455 ;; This function uses a reentrant model
 26456 ;;
 26457                           
 26458                           	psect	text136
 26459  01876E                     __ptext136:
 26460                           	opt callstack 0
 26461  01876E                     _UART2_Transmit_ISR:
 26462                           	opt callstack 13
 26463                           
 26464                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26465                           
 26466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26467                           ;incstack = 0
 26468  01876E  0E40               	movlw	64
 26469  018770  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 26470  018772  D010               	goto	l701
 26471                           
 26472                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26473  018774  0E00               	movlw	low _uart2TxBuffer
 26474  018776  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 26475  018778  6ED9               	movwf	fsr2l,c
 26476  01877A  6ADA               	clrf	fsr2h,c
 26477  01877C  0E03               	movlw	high _uart2TxBuffer
 26478  01877E  22DA               	addwfc	fsr2h,f,c
 26479  018780  50DF               	movf	indf2,w,c
 26480  018782  013D               	movlb	61	; () banked
 26481  018784  6FD2               	movwf	210,b	;volatile
 26482                           
 26483                           ; BSR set to: 61
 26484  018786  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 26485                           
 26486                           ; BSR set to: 61
 26487                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26488  018788  0E3F               	movlw	63
 26489  01878A  642D               	cpfsgt	_uart2TxTail^0,c
 26490  01878C  D001               	goto	l8817
 26491                           
 26492                           ; BSR set to: 61
 26493                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26494  01878E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 26495  018790                     l8817:
 26496                           
 26497                           ; BSR set to: 61
 26498                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26499  018790  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26500                           
 26501                           ;mcc_generated_files/uart2.c: 224:     }
 26502  018792  0012               	return	
 26503  018794                     l701:
 26504                           
 26505                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26506  018794  0139               	movlb	57	; () banked
 26507  018796  9796               	bcf	150,3,b	;volatile
 26508                           
 26509                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26510  018798  0012               	return		;funcret
 26511  01879A                     __end_of_UART2_Transmit_ISR:
 26512                           	opt callstack 0
 26513                           
 26514 ;; *************** function _UART2_rx_vect_isr *****************
 26515 ;; Defined at:
 26516 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26517 ;; Parameters:    Size  Location     Type
 26518 ;;		None
 26519 ;; Auto vars:     Size  Location     Type
 26520 ;;		None
 26521 ;; Return value:  Size  Location     Type
 26522 ;;                  1    wreg      void 
 26523 ;; Registers used:
 26524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26525 ;; Tracked objects:
 26526 ;;		On entry : 0/0
 26527 ;;		On exit  : 0/0
 26528 ;;		Unchanged: 0/0
 26529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26534 ;;Total ram usage:        0 bytes
 26535 ;; Hardware stack levels used:    1
 26536 ;; Hardware stack levels required when called:    1
 26537 ;; This function calls:
 26538 ;;		Absolute function
 26539 ;;		_UART2_Receive_ISR
 26540 ;; This function is called by:
 26541 ;;		Interrupt level 2
 26542 ;; This function uses a non-reentrant model
 26543 ;;
 26544                           
 26545                           	psect	text137
 26546  018A6C                     __ptext137:
 26547                           	opt callstack 0
 26548  018A6C                     _UART2_rx_vect_isr:
 26549                           	opt callstack 13
 26550                           
 26551                           ;incstack = 0
 26552  018A6C  EE13  F356         	lfsr	1,___inthi_sp
 26553                           
 26554                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26555  018A70  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26556  018A72  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26557  018A74  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26558  018A76  B4D8               	btfsc	status,2,c
 26559  018A78  0011               	retfie		f
 26560                           
 26561                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26562  018A7A  D801               	call	i2u1074_48
 26563  018A7C  0011               	retfie		f
 26564  018A7E                     i2u1074_48:
 26565  018A7E  0005               	push	
 26566  018A80  6EFA               	movwf	pclath,c
 26567  018A82  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26568  018A84  6EFD               	movwf	tosl,c
 26569  018A86  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26570  018A88  6EFE               	movwf	tosh,c
 26571  018A8A  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26572  018A8C  6EFF               	movwf	tosu,c
 26573  018A8E  50FA               	movf	pclath,w,c
 26574  018A90  0012               	return		;indir
 26575  018A92                     __end_of_UART2_rx_vect_isr:
 26576                           	opt callstack 0
 26577                           
 26578 ;; *************** function _UART2_Receive_ISR *****************
 26579 ;; Defined at:
 26580 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26581 ;; Parameters:    Size  Location     Type
 26582 ;;		None
 26583 ;; Auto vars:     Size  Location     Type
 26584 ;;		None
 26585 ;; Return value:  Size  Location     Type
 26586 ;;                  1  [STACK] void 
 26587 ;; Registers used:
 26588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26589 ;; Tracked objects:
 26590 ;;		On entry : 0/0
 26591 ;;		On exit  : 0/0
 26592 ;;		Unchanged: 0/0
 26593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;Total ram usage:        0 bytes
 26599 ;; Hardware stack levels used:    1
 26600 ;; This function calls:
 26601 ;;		Nothing
 26602 ;; This function is called by:
 26603 ;;		_UART2_Initialize
 26604 ;;		_UART2_rx_vect_isr
 26605 ;; This function uses a reentrant model
 26606 ;;
 26607                           
 26608                           	psect	text138
 26609  018BD6                     __ptext138:
 26610                           	opt callstack 0
 26611  018BD6                     _UART2_Receive_ISR:
 26612                           	opt callstack 13
 26613                           
 26614                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26615                           
 26616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26617                           ;incstack = 0
 26618  018BD6  0E00               	movlw	low _uart2RxBuffer
 26619  018BD8  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 26620  018BDA  6ED9               	movwf	fsr2l,c
 26621  018BDC  6ADA               	clrf	fsr2h,c
 26622  018BDE  0E06               	movlw	high _uart2RxBuffer
 26623  018BE0  22DA               	addwfc	fsr2h,f,c
 26624  018BE2  006F F743 FFDF     	movff	15824,indf2	;volatile
 26625  018BE8  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 26626                           
 26627                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26628  018BEA  282B               	incf	_uart2RxHead^0,w,c
 26629  018BEC  B4D8               	btfsc	status,2,c
 26630                           
 26631                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26632  018BEE  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 26633                           
 26634                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26635  018BF0  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 26636                           
 26637                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26638  018BF2  0012               	return		;funcret
 26639  018BF4                     __end_of_UART2_Receive_ISR:
 26640                           	opt callstack 0
 26641                           
 26642 ;; *************** function _TMR6_ISR *****************
 26643 ;; Defined at:
 26644 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26645 ;; Parameters:    Size  Location     Type
 26646 ;;		None
 26647 ;; Auto vars:     Size  Location     Type
 26648 ;;		None
 26649 ;; Return value:  Size  Location     Type
 26650 ;;                  1    wreg      void 
 26651 ;; Registers used:
 26652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26653 ;; Tracked objects:
 26654 ;;		On entry : 0/0
 26655 ;;		On exit  : 0/0
 26656 ;;		Unchanged: 0/0
 26657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26660 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26661 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26662 ;;Total ram usage:        1 bytes
 26663 ;; Hardware stack levels used:    1
 26664 ;; Hardware stack levels required when called:    2
 26665 ;; This function calls:
 26666 ;;		_TMR6_CallBack
 26667 ;; This function is called by:
 26668 ;;		Interrupt level 2
 26669 ;; This function uses a non-reentrant model
 26670 ;;
 26671                           
 26672                           	psect	text139
 26673  018C48                     __ptext139:
 26674                           	opt callstack 0
 26675  018C48                     _TMR6_ISR:
 26676                           	opt callstack 12
 26677                           
 26678                           ;incstack = 0
 26679  018C48  0060  F0D4  F0E6   	movff	btemp,??_TMR6_ISR
 26680  018C4E  EE13  F356         	lfsr	1,___inthi_sp
 26681                           
 26682                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26683  018C52  0139               	movlb	57	; () banked
 26684  018C54  91A9               	bcf	169,0,b	;volatile
 26685                           
 26686                           ; BSR set to: 57
 26687                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26688  018C56  EC8F  F0C5         	call	_TMR6_CallBack	;wreg free
 26689  018C5A  0060  F398  F035   	movff	??_TMR6_ISR,btemp
 26690  018C60  0011               	retfie		f
 26691  018C62                     __end_of_TMR6_ISR:
 26692                           	opt callstack 0
 26693                           
 26694 ;; *************** function _TMR6_CallBack *****************
 26695 ;; Defined at:
 26696 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26697 ;; Parameters:    Size  Location     Type
 26698 ;;		None
 26699 ;; Auto vars:     Size  Location     Type
 26700 ;;		None
 26701 ;; Return value:  Size  Location     Type
 26702 ;;                  1  [STACK] void 
 26703 ;; Registers used:
 26704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26705 ;; Tracked objects:
 26706 ;;		On entry : 3F/39
 26707 ;;		On exit  : 0/0
 26708 ;;		Unchanged: 0/0
 26709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26714 ;;Total ram usage:        0 bytes
 26715 ;; Hardware stack levels used:    1
 26716 ;; Hardware stack levels required when called:    1
 26717 ;; This function calls:
 26718 ;;		Absolute function
 26719 ;;		_TMR6_DefaultInterruptHandler
 26720 ;; This function is called by:
 26721 ;;		_TMR6_ISR
 26722 ;; This function uses a reentrant model
 26723 ;;
 26724                           
 26725                           	psect	text140
 26726  018B1E                     __ptext140:
 26727                           	opt callstack 0
 26728  018B1E                     _TMR6_CallBack:
 26729                           	opt callstack 12
 26730                           
 26731                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26732                           
 26733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26734                           ;incstack = 0
 26735  018B1E  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26736  018B20  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 26737  018B22  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 26738  018B24  B4D8               	btfsc	status,2,c
 26739  018B26  0012               	return	
 26740                           
 26741                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26742  018B28  D801               	call	u863_48
 26743  018B2A  0012               	return	
 26744  018B2C                     u863_48:
 26745  018B2C  0005               	push	
 26746  018B2E  6EFA               	movwf	pclath,c
 26747  018B30  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26748  018B32  6EFD               	movwf	tosl,c
 26749  018B34  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 26750  018B36  6EFE               	movwf	tosh,c
 26751  018B38  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 26752  018B3A  6EFF               	movwf	tosu,c
 26753  018B3C  50FA               	movf	pclath,w,c
 26754  018B3E  0012               	return		;indir
 26755  018B40                     __end_of_TMR6_CallBack:
 26756                           	opt callstack 0
 26757                           
 26758 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26759 ;; Defined at:
 26760 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26761 ;; Parameters:    Size  Location     Type
 26762 ;;		None
 26763 ;; Auto vars:     Size  Location     Type
 26764 ;;  i               1  [STACK] unsigned char 
 26765 ;; Return value:  Size  Location     Type
 26766 ;;                  1  [STACK] void 
 26767 ;; Registers used:
 26768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26769 ;; Tracked objects:
 26770 ;;		On entry : 0/39
 26771 ;;		On exit  : 0/0
 26772 ;;		Unchanged: 0/0
 26773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;Total ram usage:        0 bytes
 26779 ;; Hardware stack levels used:    1
 26780 ;; This function calls:
 26781 ;;		Nothing
 26782 ;; This function is called by:
 26783 ;;		_TMR6_Initialize
 26784 ;;		_TMR6_CallBack
 26785 ;; This function uses a reentrant model
 26786 ;;
 26787                           
 26788                           	psect	text141
 26789  0183B4                     __ptext141:
 26790                           	opt callstack 0
 26791  0183B4                     _TMR6_DefaultInterruptHandler:
 26792                           	opt callstack 0
 26793                           
 26794                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26795  0183B4  52E6               	movf	postinc1,f,c
 26796                           
 26797                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26798                           ;stkvar	_i @ sp[(-1)+0]
 26799                           
 26800                           ;incstack = 0
 26801  0183B6  0EFF               	movlw	-1
 26802  0183B8  6AE3               	clrf	plusw1,c
 26803  0183BA                     l8559:
 26804                           
 26805                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26806                           ;stkvar	_i @ sp[(-1)+0]
 26807  0183BA  0EFF               	movlw	-1
 26808  0183BC  50E3               	movf	plusw1,w,c
 26809  0183BE  0D02               	mullw	2
 26810  0183C0  50F3               	movf	243,w,c
 26811  0183C2  0F60               	addlw	low _tickCount
 26812  0183C4  6ED9               	movwf	fsr2l,c
 26813  0183C6  6ADA               	clrf	fsr2h,c
 26814  0183C8  50DE               	movf	postinc2,w,c
 26815  0183CA  10DE               	iorwf	postinc2,w,c
 26816  0183CC  B4D8               	btfsc	status,2,c
 26817  0183CE  D00A               	goto	l8563
 26818                           
 26819                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26820                           ;stkvar	_i @ sp[(-1)+0]
 26821  0183D0  0EFF               	movlw	-1
 26822  0183D2  50E3               	movf	plusw1,w,c
 26823  0183D4  0D02               	mullw	2
 26824  0183D6  50F3               	movf	243,w,c
 26825  0183D8  0F60               	addlw	low _tickCount
 26826  0183DA  6ED9               	movwf	fsr2l,c
 26827  0183DC  6ADA               	clrf	fsr2h,c
 26828  0183DE  06DE               	decf	postinc2,f,c
 26829  0183E0  0E00               	movlw	0
 26830  0183E2  5ADD               	subwfb	postdec2,f,c
 26831  0183E4                     l8563:
 26832                           
 26833                           ;mcc_generated_files/tmr6.c: 207:  }
 26834                           ;stkvar	_i @ sp[(-1)+0]
 26835  0183E4  0EFF               	movlw	-1
 26836  0183E6  2AE3               	incf	plusw1,f,c
 26837                           
 26838                           ;stkvar	_i @ sp[(-1)+0]
 26839  0183E8  0EFF               	movlw	-1
 26840  0183EA  006F FF8C  F035    	movff	plusw1,btemp
 26841  0183F0  0E0B               	movlw	11
 26842  0183F2  6435               	cpfsgt	btemp^0,c
 26843  0183F4  D7E2               	goto	l8559
 26844                           
 26845                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26846  0183F6  52E5               	movf	postdec1,f,c
 26847  0183F8  0012               	return		;funcret
 26848  0183FA                     __end_of_TMR6_DefaultInterruptHandler:
 26849                           	opt callstack 0
 26850                           
 26851 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26852 ;; Defined at:
 26853 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26854 ;; Parameters:    Size  Location     Type
 26855 ;;		None
 26856 ;; Auto vars:     Size  Location     Type
 26857 ;;		None
 26858 ;; Return value:  Size  Location     Type
 26859 ;;                  1    wreg      void 
 26860 ;; Registers used:
 26861 ;;		None
 26862 ;; Tracked objects:
 26863 ;;		On entry : 0/0
 26864 ;;		On exit  : 3F/0
 26865 ;;		Unchanged: 0/0
 26866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26871 ;;Total ram usage:        0 bytes
 26872 ;; Hardware stack levels used:    1
 26873 ;; This function calls:
 26874 ;;		Nothing
 26875 ;; This function is called by:
 26876 ;;		Interrupt level 2
 26877 ;; This function uses a non-reentrant model
 26878 ;;
 26879                           
 26880                           	psect	text142
 26881  018D48                     __ptext142:
 26882                           	opt callstack 0
 26883  018D48                     _DMA1_DMASCNT_ISR:
 26884                           	opt callstack 14
 26885                           
 26886                           ;incstack = 0
 26887  018D48  EE13  F356         	lfsr	1,___inthi_sp
 26888                           
 26889                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26890  018D4C  0139               	movlb	57	; () banked
 26891  018D4E  91A2               	bcf	162,0,b	;volatile
 26892                           
 26893                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26894  018D50  0100               	movlb	0	; () banked
 26895  018D52  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 26896                           
 26897                           ; BSR set to: 0
 26898  018D54  0011               	retfie		f
 26899  018D56                     __end_of_DMA1_DMASCNT_ISR:
 26900                           	opt callstack 0
 26901                           
 26902 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26903 ;; Defined at:
 26904 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26905 ;; Parameters:    Size  Location     Type
 26906 ;;		None
 26907 ;; Auto vars:     Size  Location     Type
 26908 ;;		None
 26909 ;; Return value:  Size  Location     Type
 26910 ;;                  1    wreg      void 
 26911 ;; Registers used:
 26912 ;;		None
 26913 ;; Tracked objects:
 26914 ;;		On entry : 0/0
 26915 ;;		On exit  : 3F/39
 26916 ;;		Unchanged: 0/0
 26917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26922 ;;Total ram usage:        0 bytes
 26923 ;; Hardware stack levels used:    1
 26924 ;; This function calls:
 26925 ;;		Nothing
 26926 ;; This function is called by:
 26927 ;;		Interrupt level 2
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text143
 26932  018D60                     __ptext143:
 26933                           	opt callstack 0
 26934  018D60                     _DMA1_DMADCNT_ISR:
 26935                           	opt callstack 14
 26936                           
 26937                           ; BSR set to: 0
 26938                           ;incstack = 0
 26939  018D60  EE13  F356         	lfsr	1,___inthi_sp
 26940                           
 26941                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26942  018D64  0139               	movlb	57	; () banked
 26943  018D66  93A2               	bcf	162,1,b	;volatile
 26944                           
 26945                           ; BSR set to: 57
 26946  018D68  0011               	retfie		f
 26947  018D6A                     __end_of_DMA1_DMADCNT_ISR:
 26948                           	opt callstack 0
 26949                           
 26950 ;; *************** function _DMA1_DMAA_ISR *****************
 26951 ;; Defined at:
 26952 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26953 ;; Parameters:    Size  Location     Type
 26954 ;;		None
 26955 ;; Auto vars:     Size  Location     Type
 26956 ;;		None
 26957 ;; Return value:  Size  Location     Type
 26958 ;;                  1    wreg      void 
 26959 ;; Registers used:
 26960 ;;		None
 26961 ;; Tracked objects:
 26962 ;;		On entry : 0/0
 26963 ;;		On exit  : 3F/39
 26964 ;;		Unchanged: 0/0
 26965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26970 ;;Total ram usage:        0 bytes
 26971 ;; Hardware stack levels used:    1
 26972 ;; This function calls:
 26973 ;;		Nothing
 26974 ;; This function is called by:
 26975 ;;		Interrupt level 2
 26976 ;; This function uses a non-reentrant model
 26977 ;;
 26978                           
 26979                           	psect	text144
 26980  018D6C                     __ptext144:
 26981                           	opt callstack 0
 26982  018D6C                     _DMA1_DMAA_ISR:
 26983                           	opt callstack 14
 26984                           
 26985                           ; BSR set to: 57
 26986                           ;incstack = 0
 26987  018D6C  EE13  F356         	lfsr	1,___inthi_sp
 26988                           
 26989                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26990  018D70  0139               	movlb	57	; () banked
 26991  018D72  97A2               	bcf	162,3,b	;volatile
 26992                           
 26993                           ; BSR set to: 57
 26994  018D74  0011               	retfie		f
 26995  018D76                     __end_of_DMA1_DMAA_ISR:
 26996                           	opt callstack 0
 26997                           
 26998 ;; *************** function _DMA1_DMAOR_ISR *****************
 26999 ;; Defined at:
 27000 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27001 ;; Parameters:    Size  Location     Type
 27002 ;;		None
 27003 ;; Auto vars:     Size  Location     Type
 27004 ;;		None
 27005 ;; Return value:  Size  Location     Type
 27006 ;;                  1    wreg      void 
 27007 ;; Registers used:
 27008 ;;		None
 27009 ;; Tracked objects:
 27010 ;;		On entry : 0/0
 27011 ;;		On exit  : 3F/39
 27012 ;;		Unchanged: 0/0
 27013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27018 ;;Total ram usage:        0 bytes
 27019 ;; Hardware stack levels used:    1
 27020 ;; This function calls:
 27021 ;;		Nothing
 27022 ;; This function is called by:
 27023 ;;		Interrupt level 2
 27024 ;; This function uses a non-reentrant model
 27025 ;;
 27026                           
 27027                           	psect	text145
 27028  018D78                     __ptext145:
 27029                           	opt callstack 0
 27030  018D78                     _DMA1_DMAOR_ISR:
 27031                           	opt callstack 14
 27032                           
 27033                           ; BSR set to: 57
 27034                           ;incstack = 0
 27035  018D78  EE13  F356         	lfsr	1,___inthi_sp
 27036                           
 27037                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27038  018D7C  0139               	movlb	57	; () banked
 27039  018D7E  95A2               	bcf	162,2,b	;volatile
 27040                           
 27041                           ; BSR set to: 57
 27042  018D80  0011               	retfie		f
 27043  018D82                     __end_of_DMA1_DMAOR_ISR:
 27044                           	opt callstack 0
 27045                           
 27046                           ;
 27047                           ; Interrupt Vector Table @ 0x8
 27048                           ;
 27049                           
 27050                           	psect	ivt0x8
 27051  000008                     __pivt0x8:
 27052                           	opt callstack 0
 27053  000008                     ivt0x8_base:
 27054                           	opt callstack 0
 27055                           
 27056                           ; Vector 0 : SWINT
 27057  000008  636F               	dw	_Default_ISR shr (0+2)
 27058                           
 27059                           ; Vector 1 : HLVD
 27060  00000A  636F               	dw	_Default_ISR shr (0+2)
 27061                           
 27062                           ; Vector 2 : OSF
 27063  00000C  636F               	dw	_Default_ISR shr (0+2)
 27064                           
 27065                           ; Vector 3 : CSW
 27066  00000E  636F               	dw	_Default_ISR shr (0+2)
 27067                           
 27068                           ; Vector 4 : NVM
 27069  000010  636F               	dw	_Default_ISR shr (0+2)
 27070                           
 27071                           ; Vector 5 : SCAN
 27072  000012  636F               	dw	_Default_ISR shr (0+2)
 27073                           
 27074                           ; Vector 6 : CRC
 27075  000014  636F               	dw	_Default_ISR shr (0+2)
 27076                           
 27077                           ; Vector 7 : IOC
 27078  000016  636F               	dw	_Default_ISR shr (0+2)
 27079                           
 27080                           ; Vector 8 : INT0
 27081  000018  634A               	dw	_INT0_ISR shr (0+2)
 27082                           
 27083                           ; Vector 9 : ZCD
 27084  00001A  636F               	dw	_Default_ISR shr (0+2)
 27085                           
 27086                           ; Vector 10 : AD
 27087  00001C  615E               	dw	_ADCC_ISR shr (0+2)
 27088                           
 27089                           ; Vector 11 : ADT
 27090  00001E  5F7A               	dw	_ADCC_ThresholdISR shr (0+2)
 27091                           
 27092                           ; Vector 12 : CMP1
 27093  000020  636F               	dw	_Default_ISR shr (0+2)
 27094                           
 27095                           ; Vector 13 : SMT1
 27096  000022  636F               	dw	_Default_ISR shr (0+2)
 27097                           
 27098                           ; Vector 14 : SMT1PRA
 27099  000024  636F               	dw	_Default_ISR shr (0+2)
 27100                           
 27101                           ; Vector 15 : SMT1PRW
 27102  000026  636F               	dw	_Default_ISR shr (0+2)
 27103                           
 27104                           ; Vector 16 : DMA1SCNT
 27105  000028  6352               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27106                           
 27107                           ; Vector 17 : DMA1DCNT
 27108  00002A  6358               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27109                           
 27110                           ; Vector 18 : DMA1OR
 27111  00002C  635E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27112                           
 27113                           ; Vector 19 : DMA1A
 27114  00002E  635B               	dw	_DMA1_DMAA_ISR shr (0+2)
 27115                           
 27116                           ; Vector 20 : SPI1RX
 27117  000030  636F               	dw	_Default_ISR shr (0+2)
 27118                           
 27119                           ; Vector 21 : SPI1TX
 27120  000032  636F               	dw	_Default_ISR shr (0+2)
 27121                           
 27122                           ; Vector 22 : SPI1
 27123  000034  636F               	dw	_Default_ISR shr (0+2)
 27124                           
 27125                           ; Vector 23 : I2C1RX
 27126  000036  636F               	dw	_Default_ISR shr (0+2)
 27127                           
 27128                           ; Vector 24 : I2C1TX
 27129  000038  636F               	dw	_Default_ISR shr (0+2)
 27130                           
 27131                           ; Vector 25 : I2C1
 27132  00003A  636F               	dw	_Default_ISR shr (0+2)
 27133                           
 27134                           ; Vector 26 : I2C1E
 27135  00003C  636F               	dw	_Default_ISR shr (0+2)
 27136                           
 27137                           ; Vector 27 : U1RX
 27138  00003E  6287               	dw	_UART1_rx_vect_isr shr (0+2)
 27139                           
 27140                           ; Vector 28 : U1TX
 27141  000040  627D               	dw	_UART1_tx_vect_isr shr (0+2)
 27142                           
 27143                           ; Vector 29 : U1E
 27144  000042  636F               	dw	_Default_ISR shr (0+2)
 27145                           
 27146                           ; Vector 30 : U1
 27147  000044  636F               	dw	_Default_ISR shr (0+2)
 27148                           
 27149                           ; Vector 31 : TMR0
 27150  000046  636F               	dw	_Default_ISR shr (0+2)
 27151                           
 27152                           ; Vector 32 : TMR1
 27153  000048  636F               	dw	_Default_ISR shr (0+2)
 27154                           
 27155                           ; Vector 33 : TMR1G
 27156  00004A  636F               	dw	_Default_ISR shr (0+2)
 27157                           
 27158                           ; Vector 34 : TMR2
 27159  00004C  636F               	dw	_Default_ISR shr (0+2)
 27160                           
 27161                           ; Vector 35 : CCP1
 27162  00004E  636F               	dw	_Default_ISR shr (0+2)
 27163                           
 27164                           ; Vector 36 : Undefined
 27165  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27166                           
 27167                           ; Vector 37 : NCO1
 27168  000052  636F               	dw	_Default_ISR shr (0+2)
 27169                           
 27170                           ; Vector 38 : CWG1
 27171  000054  636F               	dw	_Default_ISR shr (0+2)
 27172                           
 27173                           ; Vector 39 : CLC1
 27174  000056  636F               	dw	_Default_ISR shr (0+2)
 27175                           
 27176                           ; Vector 40 : INT1
 27177  000058  634E               	dw	_INT1_ISR shr (0+2)
 27178                           
 27179                           ; Vector 41 : CMP2
 27180  00005A  636F               	dw	_Default_ISR shr (0+2)
 27181                           
 27182                           ; Vector 42 : DMA2SCNT
 27183  00005C  636F               	dw	_Default_ISR shr (0+2)
 27184                           
 27185                           ; Vector 43 : DMA2DCNT
 27186  00005E  636F               	dw	_Default_ISR shr (0+2)
 27187                           
 27188                           ; Vector 44 : DMA2OR
 27189  000060  636F               	dw	_Default_ISR shr (0+2)
 27190                           
 27191                           ; Vector 45 : DMA2A
 27192  000062  636F               	dw	_Default_ISR shr (0+2)
 27193                           
 27194                           ; Vector 46 : I2C2RX
 27195  000064  636F               	dw	_Default_ISR shr (0+2)
 27196                           
 27197                           ; Vector 47 : I2C2TX
 27198  000066  636F               	dw	_Default_ISR shr (0+2)
 27199                           
 27200                           ; Vector 48 : I2C2
 27201  000068  636F               	dw	_Default_ISR shr (0+2)
 27202                           
 27203                           ; Vector 49 : I2C2E
 27204  00006A  636F               	dw	_Default_ISR shr (0+2)
 27205                           
 27206                           ; Vector 50 : U2RX
 27207  00006C  629B               	dw	_UART2_rx_vect_isr shr (0+2)
 27208                           
 27209                           ; Vector 51 : U2TX
 27210  00006E  6291               	dw	_UART2_tx_vect_isr shr (0+2)
 27211                           
 27212                           ; Vector 52 : U2E
 27213  000070  636F               	dw	_Default_ISR shr (0+2)
 27214                           
 27215                           ; Vector 53 : U2
 27216  000072  636F               	dw	_Default_ISR shr (0+2)
 27217                           
 27218                           ; Vector 54 : TMR3
 27219  000074  636F               	dw	_Default_ISR shr (0+2)
 27220                           
 27221                           ; Vector 55 : TMR3G
 27222  000076  636F               	dw	_Default_ISR shr (0+2)
 27223                           
 27224                           ; Vector 56 : TMR4
 27225  000078  636F               	dw	_Default_ISR shr (0+2)
 27226                           
 27227                           ; Vector 57 : CCP2
 27228  00007A  636F               	dw	_Default_ISR shr (0+2)
 27229                           
 27230                           ; Vector 58 : Undefined
 27231  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27232                           
 27233                           ; Vector 59 : CWG2
 27234  00007E  636F               	dw	_Default_ISR shr (0+2)
 27235                           
 27236                           ; Vector 60 : CLC2
 27237  000080  636F               	dw	_Default_ISR shr (0+2)
 27238                           
 27239                           ; Vector 61 : INT2
 27240  000082  636F               	dw	_Default_ISR shr (0+2)
 27241                           
 27242                           ; Vector 62 : Undefined
 27243  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27244                           
 27245                           ; Vector 63 : Undefined
 27246  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27247                           
 27248                           ; Vector 64 : Undefined
 27249  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27250                           
 27251                           ; Vector 65 : Undefined
 27252  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27253                           
 27254                           ; Vector 66 : Undefined
 27255  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27256                           
 27257                           ; Vector 67 : Undefined
 27258  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27259                           
 27260                           ; Vector 68 : Undefined
 27261  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27262                           
 27263                           ; Vector 69 : Undefined
 27264  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27265                           
 27266                           ; Vector 70 : TMR5
 27267  000094  6028               	dw	_TMR5_ISR shr (0+2)
 27268                           
 27269                           ; Vector 71 : TMR5G
 27270  000096  636F               	dw	_Default_ISR shr (0+2)
 27271                           
 27272                           ; Vector 72 : TMR6
 27273  000098  6312               	dw	_TMR6_ISR shr (0+2)
 27274                           
 27275                           ; Vector 73 : CCP3
 27276  00009A  636F               	dw	_Default_ISR shr (0+2)
 27277                           
 27278                           ; Vector 74 : CWG3
 27279  00009C  636F               	dw	_Default_ISR shr (0+2)
 27280                           
 27281                           ; Vector 75 : CLC3
 27282  00009E  636F               	dw	_Default_ISR shr (0+2)
 27283                           
 27284                           ; Vector 76 : Undefined
 27285  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27286                           
 27287                           ; Vector 77 : Undefined
 27288  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27289                           
 27290                           ; Vector 78 : Undefined
 27291  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27292                           
 27293                           ; Vector 79 : Undefined
 27294  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27295                           
 27296                           ; Vector 80 : CCP4
 27297  0000A8  636F               	dw	_Default_ISR shr (0+2)
 27298                           
 27299                           ; Vector 81 : CLC4
 27300  0000AA  636F               	dw	_Default_ISR shr (0+2)
 27301  0000AC                     ivt0x8_undefint:
 27302                           	opt callstack 0
 27303  0000AC  00FF               	reset	
 27304                           
 27305                           	psect	text146
 27306  000000                     __ptext146:
 27307                           	opt callstack 0
 27308                           
 27309                           	psect	param0
 27310  0000                     
 27311                           	psect	temp
 27312  000035                     btemp:
 27313                           	opt callstack 0
 27314  000035                     	ds	32
 27315  0000                     wtemp0	set	btemp
 27316  0000                     wtemp1	set	btemp+2
 27317  0000                     wtemp2	set	btemp+4
 27318  0000                     wtemp3	set	btemp+6
 27319  0000                     wtemp4	set	btemp+8
 27320  0000                     wtemp5	set	btemp+10
 27321  0000                     wtemp8	set	btemp+1
 27322  0000                     ttemp0	set	btemp
 27323  0000                     ttemp1	set	btemp+3
 27324  0000                     ttemp2	set	btemp+6
 27325  0000                     ttemp3	set	btemp+9
 27326  0000                     ttemp5	set	btemp+1
 27327  0000                     ttemp6	set	btemp+4
 27328  0000                     ttemp7	set	btemp+8
 27329  0000                     ltemp0	set	btemp
 27330  0000                     ltemp1	set	btemp+4
 27331  0000                     ltemp2	set	btemp+8
 27332  0000                     lltemp0	set	btemp
 27333  0000                     lltemp1	set	btemp+8
 27334  0000                     lltemp2	set	btemp+16
 27335  0000                     lltemp3	set	btemp+24
 27336                           tosu	equ	0x3FFF
 27337                           tosh	equ	0x3FFE
 27338                           tosl	equ	0x3FFD
 27339                           stkptr	equ	0x3FFC
 27340                           pclatu	equ	0x3FFB
 27341                           pclath	equ	0x3FFA
 27342                           pcl	equ	0x3FF9
 27343                           tblptru	equ	0x3FF8
 27344                           tblptrh	equ	0x3FF7
 27345                           tblptrl	equ	0x3FF6
 27346                           tablat	equ	0x3FF5
 27347                           prodh	equ	0x3FF4
 27348                           prodl	equ	0x3FF3
 27349                           indf0	equ	0x3FEF
 27350                           postinc0	equ	0x3FEE
 27351                           postdec0	equ	0x3FED
 27352                           preinc0	equ	0x3FEC
 27353                           plusw0	equ	0x3FEB
 27354                           fsr0h	equ	0x3FEA
 27355                           fsr0l	equ	0x3FE9
 27356                           wreg	equ	0x3FE8
 27357                           indf1	equ	0x3FE7
 27358                           postinc1	equ	0x3FE6
 27359                           postdec1	equ	0x3FE5
 27360                           preinc1	equ	0x3FE4
 27361                           plusw1	equ	0x3FE3
 27362                           fsr1h	equ	0x3FE2
 27363                           fsr1l	equ	0x3FE1
 27364                           bsr	equ	0x3FE0
 27365                           indf2	equ	0x3FDF
 27366                           postinc2	equ	0x3FDE
 27367                           postdec2	equ	0x3FDD
 27368                           preinc2	equ	0x3FDC
 27369                           plusw2	equ	0x3FDB
 27370                           fsr2h	equ	0x3FDA
 27371                           fsr2l	equ	0x3FD9
 27372                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        254
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     139
    BANK1           256      0     251
    BANK2           256      0     252
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4829_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3979tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323242
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10863
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5116
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      8B       5       86.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     65A      58        0.0%
DATA                 0      0     65A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 10 01:28:50 2019

                     _SPI1_Exchange8bit 8B40                __end_of_set_display_info 8B9A  
                                     _C 0200                                       _D 0400  
                                     _P 0094                                       _R 00A3  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 892C                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8DA2  
                           __CFG_LVP$ON 000000                                     l171 8CCE  
                                   l701 8794                                     l581 8768  
                                   l835 8B4E                                     _GIE 01FE97  
                                   _abs 82E2                                     _pad 6EEC  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8C7A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8ADA  
                    _UART1_Transmit_ISR 8742                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8AFC                            __CFG_ZCD$OFF 000000  
                                  l1028 84FE                                    l1250 41CE  
                                  l1242 4022                                    l1252 41D4  
                                  l2305 6788                                    l1329 8106  
                                  l1602 8B96                                    l2271 6816  
                                  l1545 855C                                    l1465 76BE  
                                  l1562 710A                                    l1554 5DE6  
                                  l2267 7556                                    l1484 85C8  
                                  l1469 7A72                                    l2278 68EA  
                                  l1910 4B3A                                    l1558 5F42  
                                  l1654 3FD8                                    l1751 6F48  
                                  l1807 123A                                    l2545 31CC  
                                  l2626 2A10                                    l1771 382E  
                                  l1851 0B1A                                    l1836 066A  
                                  l2557 305C                                    l1925 4414  
                                  l2590 3746                    _ADCC_StartConversion 8CE8  
                                  l2728 58CA                                    l1696 6300  
                                  l6105 783A                                    l7001 68E8  
                                  l2666 6140                                    l6107 785C  
                                  l6221 2DEA                                    l6205 2D46  
                                  l6133 2A70                                    l2853 7C90  
                                  l2838 5D2A                                    l6303 30C4  
                                  l6215 2DB8                                    l6151 2B2E  
                                  l6143 2AC6                                    l1975 21E6  
                                  l2792 6DCA                                    l2697 8322  
                                  l7009 8272                                    l6225 2DF4  
                                  l6145 2AF6                                    l2689 6496  
                                  l1889 520C                                    l2866 7C0C  
                                  l7107 8244                                    l6307 30CA  
                                  l6219 2DD8                                    l6163 2BA0  
                                  l6139 2AB0                                    l7043 6720  
                                  l7035 66F4                                    l7019 6672  
                                  l6501 54DC                                    l6341 31AC  
                                  l6333 316C                                    l6253 2EDC  
                                  l6229 2E24                                    l6157 2B60  
                                  l7045 6736                                    l7037 6710  
                                  l6335 317C                                    l6319 3128  
                                  l6271 300C                                    l6247 2EC0  
                                  l6175 2C08                                    l6167 2BB6  
                                  l6431 48A8                                    l7071 65C0  
                                  l6513 55AE                                    l6601 3390  
                                  l6329 3154                                    l6249 2ED2  
                                  l6257 2F0E                                    l6169 2BE6  
                                  l6417 7C80                                    l9003 78FC  
                                  l6451 4A5E                                    l7059 64EE  
                                  l7091 6B28                                    l7083 6A7C  
                                  l8029 8AAE                                    l6541 59BA  
                                  l6533 5932                                    l6701 36F2  
                                  l6621 3422                                    l6613 3408  
                                  l6293 309C                                    l6269 2FE6  
                                  l6445 49C6                                    l8109 85D2  
                                  l6375 8312                                    l6631 34B2  
                                  l6607 33CE                                    l6287 307E  
                                  l6279 3040                                    l6455 4ACC  
                                  l6447 4A16                                    l6641 34FA  
                                  l6289 3090                                    l6393 6438  
                                  l6473 7BFC                                    l8161 603E  
                                  l6707 371A                                    l6731 2286  
                                  l8171 60A0                                    l8155 5FFC  
                                  l8147 5F90                                    l6549 5A66  
                                  l6709 372A                                    l6661 359C  
                                  l6581 32B2                                    l6813 2804  
                                  l6733 228C                                    l6725 2246  
                                  l6389 6434                                    l8157 600A  
                                  l6495 5496                                    l6655 3580  
                                  l6647 354E                                    l6639 34E8  
                                  l6575 326C                                    l6823 2846  
                                  l6751 235A                                    l6743 2314  
                                  l6735 22BC                                    l6399 648E  
                                  l8167 606C                                    l8159 6020  
                                  l6489 5442                                    l9321 3868  
                                  l9313 381E                                    l6921 6A28  
                                  l6913 69F4                                    l6665 35C2  
                                  l6649 3552                                    l6569 322C  
                                  l6833 2890                                    l6761 23AC  
                                  l6753 238A                                    l7713 5B9C  
                                  l8169 608A                                    l9251 7960  
                                  l6675 360C                                    l6595 334A  
                                  l6579 3282                                    l6851 2950  
                                  l6819 2820                                    l9403 01EA  
                                  l9411 0258                                    l7715 5C08  
                                  l8179 60BE                                    l7661 567A  
                                  l9261 6F18                                    l9325 3886  
                                  l6941 6E1E                                    l6933 6DF4  
                                  l6589 330A                                    l6837 2896  
                                  l6749 2354                                    l9501 06F0  
                                  l9421 02FC                                    l9405 0216  
                                  l8189 6120                                    l7671 5710  
                                  l7663 569C                                    l9239 6CE0  
                                  l9255 799E                                    l9271 6F8E  
                                  l9335 3A98                                    l6951 6E9E  
                                  l6695 36C2                                    l6679 3612  
                                  l6599 3360                                    l6847 290A  
                                  l9407 022C                                    l8703 3F0A  
                                  l7681 5778                                    l9265 6F40  
                                  l6937 6E06                                    l6689 3686  
                                  l6865 29BE                                    l6857 297A  
                                  l9281 734A                                    l9441 0406  
                                  l8563 83E4                                    l7683 57B6  
                                  l9275 6FD8                                    l9267 6F52  
                                  l9355 3B4A                                    l6971 7520  
                                  l6867 29D8                                    l9603 0F3A  
                                  l9531 0A48                                    l9507 077A  
                                  l9443 0470                                    l8637 8572  
                                  l7677 573C                                    l6893 692E  
                                  l9541 0B34                                    l9517 0926  
                                  l9437 0396                                    l9429 032A  
                                  l9373 00AC                                    l8709 3FA6  
                                  l8717 3FB8                                    l8741 61AE  
                                  l8733 6182                                    l8559 83BA  
                                  l7687 581E                                    l7679 5754  
                                  l9287 7B28                                    l9359 3B86  
                                  l6887 6918                                    l6959 6ED2  
                                  l6975 7554                                    l6967 74DE  
                                  l6983 67D4                                    l9471 0594  
                                  l9463 057C                                    l9447 04D2  
                                  l8817 8790                                    l7697 58BA  
                                  l9289 7B54                                    l6993 68B2  
                                  l9617 0FD6                                    l9481 0602  
                                  l9465 058E                                    l9385 00F0  
                                  l9393 0146                                    l9713 53A0  
                                  l9705 5338                                    l8745 61C6  
                                  l8843 84E6                                    l6899 694E  
                                  l9619 0FF0                                    l9555 0C32  
                                  l9539 0B12                                    l9459 0554  
                                  l9803 45D0                                    l9811 4656  
                                  l8691 3E3C                                    l6989 6864  
                                  l9629 1092                                    l9709 5364  
                                  l9901 16F4                                    l8677 3C00  
                                  l9655 119A                                    l9639 10E2  
                                  l9567 0CBA                                    l9575 0D24  
                                  l9583 0D90                                    l9591 0EA2  
                                  l9479 05F6                                    l9735 4B86  
                                  l9727 4B2A                                    l8687 3D40  
                                  l9497 06B8                                    l9745 4D7C  
                                  l9913 1834                                    l8795 8764  
                                  l9691 5242                                    l9675 518E  
                                  l9827 4740                                    l9851 1360  
                                  l8699 3E6E                                    l8939 7CA0  
                                  l9773 443E                                    l9933 1A46  
                                  l9925 198E                                    l9909 17E0  
                                  l9853 1376                                    l9695 527E  
                                  l9767 4404                                    l9871 14A8  
                                  STR_1 FF66                                    STR_2 FF97  
                                  l9937 1A7A                                    l9873 14E2  
                                  l9849 1326                                    STR_3 FFD2  
                                  STR_4 FF55                                    l8995 78EA  
                                  l9699 52AE                                    l9787 44DA  
                                  l9779 447A                                    l9891 165C  
                                  l9875 14F8                                    STR_5 FF77  
                                  STR_6 FF97                                    l9957 1BDA  
                                  STR_7 FFD2                                    STR_8 FF44  
                                  l9967 1C88                                    STR_9 FFA6  
                                  l9977 1DAA                                    l9987 1E60  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5020 3138  
                                  u5120 82F6                                    u5130 63B8  
                                  u5300 496C                                    u5220 7C3E  
                                  u5060 86A8                                    u6030 2888  
                                  u5230 7C40                                    u5070 86AA  
                                  u5135 63AE                                    u5400 8708  
                                  u5320 4A44                                    u5305 4962  
                                  u5410 870A                                    u6210 6E4A  
                                  u5250 4840                                    _T6PR 003F93  
                                  u5500 55E6                                    u6140 697A  
                                  u5180 6486                                    u5260 488C  
                                  u4620 86D8                                    _PMD0 0039C0  
                                  u5325 4A3A                                    _PMD1 0039C1  
                                  u5430 543C                                    u6230 6EBE  
                                  u6070 28E4                                    u5190 6488  
                                  u4630 86DA                                    u5350 8432  
                                  _PMD2 0039C2                                    u5175 6468  
                                  u5255 4836                                    _PMD3 0039C3  
                                  u5520 5638                                    u6160 6A14  
                                  u6080 291E                                    u5360 8434  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5450 5492                                    u5610 5A9E  
                                  u6090 2964                                    u6330 826E  
                                  u4730 2D6C                                    u6410 673E  
                                  u5370 7BBA                                    _PMD6 0039C6  
                                  u6075 28D4                                    _PMD7 0039C7  
                                  u4740 2D8C                                    u6340 6652  
                                  u6500 6A76                                    u5380 7BBC  
                                  u5461 549C                                    u4741 2D86  
                                  u5285 48C6                                    u4590 788A  
                                  u5470 54D6                                    u5630 5AF0  
                                  u5550 592C                                    u6270 7550  
                                  u6430 6768                                    u6350 6666  
                                  u5286 48CC                                    u6510 6AA8  
                                  u5287 48DA                                    u5480 5508  
                                  u6360 66A0                                    u6345 6648  
                                  u6441 64AE                                    u5570 5982  
                                  u5810 3604                                    u4930 30A2  
                                  u4850 2F04                                    u6450 64E8  
                                  u6530 6B60                                    u9020 6CD4  
                                  u5580 59B4                                    u4780 2E1C  
                                  u9100 73C4                                    u6460 651A  
                                  u8205 84B2                                    u4597 787C  
                                  u6365 6696                                    u6550 8220  
                                  u5590 59E6                                    u4950 30BC  
                                  u4790 2E3C                                    u4758 2D8E  
                                  u4855 2EF4                                    u8320 7E5E  
                                  u6560 8240                                    u9040 6D50  
                                  u6480 65F8                                    u4785 2E0C  
                                  u9210 3854                                    u5850 3660  
                                  u5770 357A                                    u4890 302E  
                                  u9107 73B6                                    u9220 3AAC  
                                  u9140 3780                                    u5860 369A  
                                  u9150 3782                                    u5870 36D6  
                                  u4990 3118                                    u7710 5C36  
                                  u9231 3ADC                                    u5855 3650  
                                  u7640 570C                                    u9240 3AF2  
                                  u5960 239A                                    u9400 02A8  
                                  u9320 00DA                                    u8280 60B4  
                                  u8345 7E92                                    u9241 3AF0  
                                  u8346 7E94                                    u8338 7E60  
                                  u9250 3B06                                    u9170 37F2  
                                  u8514 3E56                                    u8530 6160  
                                  u4995 3108                                    u8515 3E50  
                                  u7660 5864                                    u9260 3B0A  
                                  u9500 05C6                                    u7717 5C28  
                                  u7670 5866                                    u9190 3804  
                                  u9350 0194                                    u7750 5CD0  
                                  u8454 3BEA                                    u5975 252E  
                                  u8455 3BE4                                    u9280 3B20  
                                  u9440 050E                                    u9360 0196  
                                  u7760 5CFE                                    u5985 25F6  
                                  u9610 0A18                                    u8474 3C1A  
                                  u5995 27BE                                    u7755 5CCA  
                                  u8475 3C14                                    u9540 0648  
                                  u7757 5CBC                                    u9710 0EE4  
                                  u9470 0562                                    u9390 02A6  
                                  u8494 3C3C                                    u7767 5CF0  
                                  u8495 3C36                                    u9800 1170  
                                  _PLLR 01CEE0                                    u9910 53C6  
                                  u9770 10B8                                    u9930 4B10  
                                  u9790 116E                                    u9870 52A4  
                                  u9880 52EA                                    u9961 4DBE  
                                  u9970 4DD4                                    u9971 4DD2  
                                  u9980 4DE8                                    u9990 4DEC  
                                  u9887 52DC                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 85B0  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AC  
                                  _atoi 5660                                    _ctoa 7B0A  
                                  _main 3FDE                                    _dtoa 3750  
                                  _nanf 7F7E                                    _seed 009B  
                                  _prec 0020                                    _nout 001C  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 5122  
                                  btemp 0035                                    _utoa 4AF6  
                                  _xtoa 43D0                  __end_of_check_adc_scan 8D9A  
                         ___fpclassifyf 630A                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0026               __end_of_SPI1_Exchange8bit 8B5E  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8A1C  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0055  
                      __end_of_INT0_ISR 8D36                        __end_of_INT1_ISR 8D46  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 76C6  
         __end_of_OSCILLATOR_Initialize 8CD4                                   l10001 1FDC  
                                 l10021 216E                                   l10015 2114  
                                 l10031 2192                                   l10025 2172  
                                 l10053 4ECE                                   l10073 50A4  
                                 l10065 4FF6                                   l10137 77C6  
                                 l10059 4F8C                                   l10171 7022  
                                 l10085 76F0                                   l10087 7730  
                                 l10415 41D8                                   l10417 4206  
                                 l10437 425E                                   l10429 423A  
                                 l10373 402A                                   l10287 5DB6  
                                 l10447 438A                                   l10375 403C  
                                 l10367 4004                                   l10369 400C  
                                 l10299 5EDE                                   l10459 43BE  
                                 PRLOCK 0039EF                         __end_of___aodiv 5660  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 31D6                                   _ADCLK 003EFF  
                       __end_of___aomod 5B14                                   _ADPCH 003EF1  
                       __end_of___fldiv 3750                                   _ADREF 003EFD  
                       __end_of___awdiv 6A42                         __end_of___flneg 829C  
                                 STR_10 FFA6                                   STR_11 FF32  
                                 STR_20 FFBF                                   STR_12 FFFC  
                                 STR_13 FFF9                                   STR_21 FF88  
                                 STR_22 FF88                                   STR_23 FF88  
                                 STR_15 FFB3                                   STR_16 FFC9  
                                 STR_24 FEE1                                   STR_33 FF0B  
                                 STR_17 FF0C                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF0C                                   STR_42 FFEA  
                                 STR_34 FFD7                                   STR_26 FF1F  
                                 STR_51 FFED                                   STR_35 FFDF  
                                 STR_19 FFBF                                   STR_27 FEF9  
                                 STR_44 FFEA                         __end_of___awmod 6EEC  
                                 STR_53 FFED                                   STR_61 FFF6  
                                 STR_46 FFF0                                   STR_38 FFDB  
                                 STR_63 FFF6                                   STR_39 FFE3  
                                 STR_48 FFF0                                   STR_56 FFF3  
                                 _ADRPT 003EEC                                   STR_65 FFE7  
                                 STR_58 FFF3                                   STR_67 FFE7  
                       __end_of___flmul 2A1A                         __end_of___flsub 82E2  
                       __end_of___fltol 6792                                   u10010 43EA  
                                 u10110 4652                                   u10120 4672  
                                 u10040 44D2                                   u10050 4526  
                                 u10210 13BE                                   u10131 46A2  
                                 u10115 4634                                   u10140 46B8  
                                 u10060 4528                                   u10220 13C0  
                                 u10141 46B6                                   u10150 46CC  
                                 u10230 13E6                                   u10160 46D0  
                                 u10080 4586                                   u10090 4588  
                                 u10330 1748                                   u10260 1540  
                                 u10350 18BC                                   u10270 1542  
                                 u10280 1568                                   u10450 1EB4  
                                 u10530 5118                         __end_of___lodiv 6620  
                                 u10380 1B34                                   u10470 2064  
                                 u10390 1B36                                   u10560 77A6  
                                 u10650 5F2E                                   _U1P1H 003DED  
                                 u10660 5F30                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 6B82  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0004  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 00E6                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8DBC  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 89F4                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 80FC                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8C62                            _DMA1CON1bits 003BFD  
                                 _flags 0022                                   _fputc 6CB0  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 843E  
                                 _fputs 7950                         __end_of_isdigit 8714  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0055  
                                 _srand 861C                                   _width 001E  
                                 _putch 8C2C                         __end_of_islower 86B4  
                       __end_of_isspace 8254                _INT1_SetInterruptHandler 892C  
                       __end_of_isupper 86E4                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0035  
                                 ltemp1 0039                                   ltemp2 003D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0035  
                                 ttemp1 0038                                   ttemp2 003B  
                                 ttemp3 003E                                   ttemp5 0036  
                                 ttemp6 0039                                   ttemp7 003D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 88DC  
           _UART1_SetRxInterruptHandler 88B4                                   wtemp0 0035  
                                 wtemp1 0037                                   wtemp2 0039  
                                 wtemp3 003B                                   wtemp4 003D  
                                 wtemp5 003F                                   wtemp8 0036  
                       __end_of_sprintf 7218                         __end_of_tolower 7C9A  
                       __end_of_strncmp 5D34                         __end_of_toupper 7C16  
                   ??_UART1_tx_vect_isr 00E6               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8A42                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 836E                   __end_of_ringBufS_init 883C  
                       __initialization 73D6                       _UART2_rx_vect_isr 8A6C  
                          __end_of_atoi 58D4                            __end_of_ctoa 7B92  
                          __end_of_main 43D0                            __end_of_dtoa 3BD0  
                          __end_of_nanf 7FE0                            __end_of_stoa 53E0  
                          __end_of_utoa 4E36                            __end_of_xtoa 478A  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0055  
               __end_of_TMR2_Initialize 8C92                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8904                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 00E6               __end_of_UART1_tx_vect_isr 8A1A  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 879A  
                       _PWM8_Initialize 8CA8                        _UART1_Initialize 7F1A  
                     _UART2_tx_vect_isr 8A44                      _UART2_Transmit_ISR 876E  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7EB6  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 8482  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0055                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 80EE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8D18                                  u404_48 8AE8  
                                _SCANPR 0039F7                                  u406_48 8B0A  
                                u428_40 8BA2                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  u428_46 8BA4  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u838_20 89D4  
                                u838_26 89D6                                  u863_48 8B2C  
                                u880_40 793C                                  u880_46 793E  
                                u866_28 8AC6                                  u878_44 791C  
                                u878_45 7916                        __end_of___xxtofl 614A  
 __end_of_ADCC_DischargeSampleCapacitor 8DAA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8DA2                __end_of_send_lcd_cmd_dma 8202  
                   ??_UART2_tx_vect_isr 00E6               __end_of_UART2_rx_vect_isr 8A92  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8D56  
                      _UART2_Initialize 8042                                  _WaitMs 85B0  
                       _conv_raw_result 3BD0                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6792  
                                ___fleq 749C                       _ADCC_ThresholdISR 7DE8  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 79E8  
                                _efgtoa 0000                                  _floorf 478A  
                    ?_ADCC_ThresholdISR 0055                                  _memset 4E36  
                  __size_of_help_button 0038                                  clear_0 7422  
                                clear_1 7436                                  clear_2 7448  
                                clear_3 7454                                  clear_4 7460  
                                clear_5 746C                                  clear_6 7478  
                                clear_7 7484                                  _printf 7FE0  
                    _eaDogM_WriteString 776E                                  _strcpy 7302  
                             ?_ADCC_ISR 0055                                  _strlen 7814  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7D7E  
                        _PMD_Initialize 8CD4               __end_of_UART2_tx_vect_isr 8A6A  
                                lltemp0 0035                                  lltemp1 003D  
                                lltemp2 0045                                  lltemp3 004D  
                   ??_ADCC_ThresholdISR 0056                  __end_of_start_adc_scan 7F1A  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8156  
                      __end_of_vfprintf 776E                              _StartTimer 8504  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 83B4  
                     _SYSTEM_Initialize 8328                              __accesstop 0060  
               __end_of__initialization 7496                               ?_INT0_ISR 0055  
                             ?_INT1_ISR 0055                    __end_of_display_help 8D92  
                  __end_of_display_info 8D8A               __end_of_CLKREF_Initialize 8D60  
                         ___rparam_used 000000              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 84C4                   _set_temp_display_help 8CFA  
             __end_of_ADCC_ThresholdISR 7E50                  __end_of_ringBufS_flush 7A7A  
                        __pcstackCOMRAM 0055                              ___inthi_sp 0F56  
                            ___intlo_sp 17AB                            __pidataBANK0 843E  
                          __pidataBANK1 7560                               ?_TMR5_ISR 0055  
                             ?_TMR6_ISR 0055                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6DD4                           __end_of_fputs 79E8  
                         __end_of_srand 8650                   __end_of_TMR5_CallBack 8ADA  
                         __end_of_putch 8C46                 __end_of_PWM8_Initialize 8CBE  
               __end_of_TMR6_Initialize 87C4                       _adc_int_t_handler 78B6  
                __end_of_PMD_Initialize 8CE8                              ??_ADCC_ISR 0055  
                 __end_of_TMR6_CallBack 8B40             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8D6C  
                        _clear_adc_scan 8DAA                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0013               __end_of_SYSTEM_Initialize 836E  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5D34  
               __end_of_conv_raw_result 3FDE                   _INT0_InterruptHandler 0019  
                            ??_INT0_ISR 0055                              ??_INT1_ISR 0055  
                     __end_of_TimerDone 8AB6                        _DMA1_DMADCNT_ISR 8D60  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8C10  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8904  
               __end_of_ADCC_Initialize 7DE6                              ??_TMR5_ISR 00E7  
             __end_of_adc_int_t_handler 7950                              ??_TMR6_ISR 00E6  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 89A4   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 897C                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8BB8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8DB0                          ?_DMA1_DMAA_ISR 0055  
                      _DMA1_DMASCNT_ISR 8D48                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0055  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8504  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8C62  
                               __Lparam 0000                __end_of_UART1_Initialize 7F7E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 53E0  
                               ___fladd 2A1A                                 ___aomod 58D4  
                               ___fldiv 31D6                                 ___awdiv 68F4  
                               ___flneg 8254                                 ___awmod 6DD4  
                               ___flmul 21F0                                 ___flsub 829C  
                               ___fltol 6620                                 ___lodiv 64A0  
                               ___lomod 6A42               __end_of_UART1_Receive_ISR 8BD6  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7302                                 __pcinit 73D6  
              __end_of_mode_lamp_bright 8D26                         __size_of_memset 02EC  
              __size_of_adc_int_handler 001E                     _eaDogM_WriteCommand 8D0A  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 3FDE                                 __ptext1 7EB6  
                               __ptext2 8CE8                                 __ptext3 861C  
                               __ptext4 7218                                 __ptext5 87C4  
                               __ptext6 87EC                                 __ptext7 8B40  
                               __ptext8 8814                                 __ptext9 8D0A  
                     _UART2_Receive_ISR 8BD6                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8CBE  
                          __size_of_abs 0046                                 us553999 564A  
                               us564999 5B02                            __size_of_pad 0114  
                               us654999 6B72                                 _isalpha 83FA  
                               _isdigit 86E4                                 us913999 376A  
                               us649999 660A                                 _mode_sw 0028  
                               us982999 5134                                 us994999 4B5C  
                     __end_of_lp_filter 630A                                 _islower 8684  
                               _isspace 8202                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 80A0  
                               _isupper 86B4              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 710E                                 _tolower 7C16  
                 __size_of_display_help 0008                                 _utctime 008C  
                 __size_of_display_info 0008                                 _strncmp 5B14  
                               _toupper 7B92                    end_of_initialization 7496  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 88B4  
           _UART1_SetTxInterruptHandler 888C     __end_of_UART2_SetRxInterruptHandler 888C  
           _UART2_SetRxInterruptHandler 8864                               i2u1070_48 8A2E  
                             i2u1072_48 8A56                               i2u1074_48 8A7E  
                             i2u1068_48 8A06                       __end_of_set_vterm 8C2C  
                     __end_of_vfpfcnvrt 21F0                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 009A                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8DBC               __end_of_UART2_Receive_ISR 8BF4  
                        wdtdelay@dcount 0090                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 00E7                   _INT1_InterruptHandler 0016  
                             _PORTBbits 003FCB                _TMR6_SetInterruptHandler 88DC  
                          _display_help 8D8A                   _TMR5_InterruptHandler 0098  
                          _display_info 8D82    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 0038     __end_of_ADCC_SetADIInterruptHandler 89CC  
           _ADCC_SetADIInterruptHandler 89A4                              _update_lcd 7000  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7D14                         _SPI1_Initialize 8C92  
                 __end_of_get_vterm_ptr 8742                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 000E                          __end_of_WaitMs 85E6  
          __end_of_INTERRUPT_Initialize 7EB6                              _vterm_dump 6B82  
                        __end_of___flge 68F4                          __end_of___fleq 7560  
  __end_of_INT0_DefaultInterruptHandler 8DC4   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8DC2              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 8156                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4AF6  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0084  
                        __end_of_memset 5122                          __end_of_printf 8042  
              __end_of_DMA1_DMADCNT_ISR 8D6A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8AFC                          __end_of_strcpy 73D6  
                        __end_of_strlen 78B6                     start_initialization 73D6  
  __end_of_TMR5_DefaultInterruptHandler 89F4   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 89CC         __size_of_PIN_MANAGER_Initialize 0090  
                           __end_of_abs 8328                   __end_of_INT1_CallBack 8B1E  
             __size_of_set_display_info 001E                             __end_of_pad 7000  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8814  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 64A0  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 026C  
              __end_of_DMA1_DMASCNT_ISR 8D56                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR 8D78                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8A92                           _ringBufS_init 8814  
                           __pdataBANK0 00A3                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 001E              __end_of_EXT_INT_Initialize 8684  
                   __end_of_help_button 8578         __end_of_eaDogM_WriteStringAtPos 861C  
               __end_of_DMA1_Initialize 7D7E                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 897C                           __pcstackBANK0 00E6  
              __size_of_TMR2_Initialize 0018                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8CA8                _UART1_RxInterruptHandler 000D  
              _UART2_TxInterruptHandler 0010                               __end_of_T FEE1  
                      _convert_adc_data 7C9A               __size_of_ringBufS_put_dma 00AA  
                          _init_display 7218                  __end_of_DMA1_DMAOR_ISR 8D82  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0001  
                __size_of_TMR6_CallBack 0022                 __end_of_DMA2_Initialize 81B0  
                _PIN_MANAGER_Initialize 7A7A                    __end_of_wait_lcd_set 8DB6  
                         __pmediumconst FE50                               __ptext100 8CD4  
                             __ptext101 7A7A                               __ptext110 8D56  
                             __ptext102 8CBE                               __ptext111 7D7E  
                             __ptext103 7E50                               __ptext120 8DC2  
                             __ptext112 897C                               __ptext104 8D9A  
                             __ptext121 8D38                               __ptext113 89A4  
                             __ptext105 8650                               __ptext130 8DA2  
                             __ptext122 8AFC                               __ptext114 80A0  
                             __ptext106 892C                               __ptext131 89F4  
                             __ptext123 8DC4                               __ptext115 84C4  
                             __ptext107 8954                               __ptext140 8B1E  
                             __ptext132 8742                               __ptext124 8DBC  
                             __ptext116 8AB6                               __ptext108 8156  
                             __ptext141 83B4                               __ptext133 8A1C  
                             __ptext125 8578                               __ptext117 89CC  
                             __ptext109 7D14                               __ptext142 8D48  
                             __ptext134 8BB8                               __ptext126 78B6  
                             __ptext118 8D28                               __ptext143 8D60  
                             __ptext135 8A44                               __ptext127 8DC6  
                             __ptext119 8ADA                               __ptext144 8D6C  
                             __ptext136 876E                               __ptext128 8B9A  
                             __ptext145 8D78                               __ptext137 8A6C  
                             __ptext129 7DE8                               __ptext146 0000  
                             __ptext138 8BD6                               __ptext139 8C48  
                    __end_of_StartTimer 8540                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8578  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 614A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7E50  
                              _T6CLKCON 003F96                         ?_DMA1_DMAOR_ISR 0055  
                              _INT0_ISR 8D28                                _INT1_ISR 8D38  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0060  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                i2u434_48 8594  
                              i2u434_49 85A8                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u882_48 7E1C                                i2u882_49 7E30  
              __size_of_TMR5_Initialize 0046                               _set_vterm 8C10  
                   __size_of_update_lcd 010E                             _help_button 8540  
            __end_of_UART1_Transmit_ISR 876E                                _TMR5_ISR 80A0  
                              _TMR6_ISR 8C48                               _port_data 00D6  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8AB6                              _ADCON0bits 003EF8  
                    __end_of_check_help 5F46                               _start_lcd 8DB6  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8B1E                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8B7C  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 73EA  
                             copy_data1 740C                _INT0_SetInterruptHandler 8954  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0032  
   __end_of_UART2_SetTxInterruptHandler 8864             _UART2_SetTxInterruptHandler 883C  
                              __Hparam0 0000                            _uart1RxCount 002F  
                          _uart2RxCount 0029                                __Lparam0 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 040E                           _wait_lcd_done 8BF4  
                          _send_lcd_cmd 87EC                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8B9A                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                 __end_of_DMA1_DMAA_ISR 8D76                      ___fpclassifyf@F463 0088  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 01BB  
                              ___xxtofl 5F46                       ?_DMA1_DMADCNT_ISR 0055  
              __size_of_ADCC_Initialize 0068             __end_of_eaDogM_WriteCommand 8D18  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 00E7  
                              __ptext10 7C9A                                __ptext11 614A  
                              __ptext20 8714                                __ptext12 3BD0  
                              __ptext21 85B0                                __ptext13 7F7E  
                              __ptext30 79E8                                __ptext22 7000  
                              __ptext14 8B5E                                __ptext31 4E36  
                              __ptext23 85E6                                __ptext15 5F46  
                              __ptext40 6A42                                __ptext32 7FE0  
                              __ptext24 81B0                                __ptext16 8DAA  
                              __ptext41 64A0                                __ptext33 76C6  
                              __ptext25 8BF4                                __ptext17 5D34  
                              __ptext50 6620                                __ptext42 5B14  
                              __ptext34 1244                                __ptext26 80FC  
                              __ptext18 6B82                                __ptext51 829C  
                              __ptext43 5122                                __ptext35 43D0  
                              __ptext27 776E                                __ptext19 710E  
                              __ptext60 3750                                __ptext52 2A1A  
                              __ptext44 0000                                __ptext36 7B92  
                              __ptext28 8DB0                                __ptext61 82E2  
                              __ptext53 8254                                __ptext45 7C16  
                              __ptext37 8684                                __ptext29 8DB6  
                              __ptext70 761C                                __ptext62 58D4  
                              __ptext54 21F0                                __ptext46 86B4  
                              __ptext38 83FA                                __ptext71 5660  
                              __ptext63 53E0                                __ptext55 6792  
                              __ptext47 7302                                __ptext39 4AF6  
                              __ptext80 8540                                __ptext72 8202  
                              __ptext64 7B0A                                __ptext56 749C  
                              __ptext48 478A                                __ptext81 8A92  
                              __ptext73 86E4                                __ptext65 6EEC  
                              __ptext57 31D6                                __ptext49 630A  
                              __ptext90 7F1A                                __ptext82 8504  
                              __ptext74 8C10                                __ptext66 7814  
                              __ptext58 6DD4                                __ptext91 888C  
                              __ptext83 8D82                                __ptext75 8CFA  
                              __ptext67 7950                                __ptext59 68F4  
                              __ptext92 88B4                                __ptext84 8D8A  
                              __ptext76 8B7C                                __ptext68 6CB0  
                              __ptext93 879A                                __ptext85 8D92  
                              __ptext77 8C62                                __ptext69 8C2C  
                              __ptext94 88DC                                __ptext86 8328  
                              __ptext78 8D18                                __ptext95 836E  
                              __ptext87 8042                                __ptext79 8482  
                              __ptext96 8904                                __ptext88 883C  
                              __ptext97 8C7A                                __ptext89 8864  
                              __ptext98 8C92                                __ptext99 8CA8  
                      __size_of_isupper 0030                                us1003999 4450  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 761C                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 03F2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0055  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0007                               stoa@F1166 00CF  
                    ??_DMA1_DMASCNT_ISR 00E7            __end_of_ADCC_StartConversion 8CFA  
                              _spi_link 0078                                _wdtdelay 80FC  
            __end_of_UART2_Transmit_ISR 879A                                _vfprintf 76C6  
              __end_of_convert_adc_data 7D14              __end_of_PWM8_LoadDutyValue 84C4  
  __end_of_INT1_DefaultInterruptHandler 8DC6   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8DC4                           ??_Default_ISR 0055  
                           _uart1RxHead 0031                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0034                             _uart2RxHead 002B  
                           _uart1RxTail 0030                          _get_raw_result 8B5E  
                           _uart2TxHead 002E                             _uart1TxTail 0033  
                           _uart2RxTail 002A                             _uart2TxTail 002D  
                          _wait_lcd_set 8DB0                      _EXT_INT_Initialize 8650  
  __end_of_TMR6_DefaultInterruptHandler 83FA   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 83B4    __end_of_ADCC_DefaultInterruptHandler 8DC8  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8DC6  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 87C4          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8D0A                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7814                   __end_of_mode_lamp_dim 8C7A  
               __end_of_adc_int_handler 8BB8                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 710E  
                _uart2TxBufferRemaining 002C                          _FVR_Initialize 8D9A  
                __end_of_get_raw_result 8B7C                        _send_lcd_cmd_dma 81B0  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0024  
      __end_of_INT1_SetInterruptHandler 8954               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 00E7                _UART1_TxInterruptHandler 000A  
             __end_of_send_lcd_cmd_long 87EC                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8DC2          __end_of_PIN_MANAGER_Initialize 7B0A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6CB0  
               _eaDogM_WriteStringAtPos 85E6                           _get_vterm_ptr 8714  
                        _check_adc_scan 8D92               __size_of_UART2_Initialize 005E  
