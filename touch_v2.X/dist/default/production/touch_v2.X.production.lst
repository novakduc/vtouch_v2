

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov  7 03:05:35 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=4,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=4,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   162                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   163                           	psect	text140,global,reloc=4,class=CODE,delta=1
   164                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   165                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   166  0000                     
   167                           ; Version 2.10
   168                           ; Generated 31/07/2019 GMT
   169                           ; 
   170                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   171                           ; All rights reserved.
   172                           ; 
   173                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   174                           ; 
   175                           ; Redistribution and use in source and binary forms, with or without modification, are
   176                           ; permitted provided that the following conditions are met:
   177                           ; 
   178                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   179                           ;        conditions and the following disclaimer.
   180                           ; 
   181                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   182                           ;        of conditions and the following disclaimer in the documentation and/or other
   183                           ;        materials provided with the distribution.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F57K42 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202 ;;_mode	offset	0
   203 ;;_channel	offset=-1 (param)
   204 ;;_s	offset=-2 (param)
   205 ;;_new	offset=-4 (param)
   206 ;;_bn	offset=-5 (param)
   207 ;;_slow	offset=-6 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_cmd	offset=-1 (param)
   210 ;;_data	offset=-1 (param)
   211 ;;__this	offset=-2 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_chan	offset=-1 (param)
   214 ;;_to_what	offset=-2 (param)
   215 ;;_index	offset=-1 (param)
   216 ;;_arg	offset	0
   217 ;;_exp	offset	4
   218 ;;_sign	offset=-1 (param)
   219 ;;_val	offset=-5 (param)
   220 ;;_flipper	offset=-1 (param)
   221 ;;_f	offset	0
   222 ;;_ap	offset	6
   223 ;;_s	offset=-3 (param)
   224 ;;_fmt	offset=-5 (param)
   225 ;;_line	offset=-1 (param)
   226 ;;_vterm	offset=-2 (param)
   227 ;;_numMilliseconds	offset=-2 (param)
   228 ;;_vterm	offset=-1 (param)
   229 ;;_r	offset=-1 (param)
   230 ;;_c	offset=-2 (param)
   231 ;;_strPtr	offset=-4 (param)
   232 ;;_strPtr	offset=-1 (param)
   233 ;;_delay	offset=-4 (param)
   234 ;;_strPtr	offset=-2 (param)
   235 ;;__this	offset=-2 (param)
   236 ;;_clearBuffer	offset=-3 (param)
   237 ;;_s	offset	0
   238 ;;_k	offset	2
   239 ;;_dest	offset=-2 (param)
   240 ;;_c	offset=-4 (param)
   241 ;;_n	offset=-6 (param)
   242 ;;_ap	offset	0
   243 ;;_fmt	offset=-3 (param)
   244 ;;_cfmt	offset	0
   245 ;;_fp	offset=-2 (param)
   246 ;;_fmt	offset=-4 (param)
   247 ;;_ap	offset=-6 (param)
   248 ;;_vfpfcnvrt$4152	offset	0
   249 ;;_vfpfcnvrt$4158	offset	2
   250 ;;_vfpfcnvrt$4151	offset	4
   251 ;;_llu	offset	6
   252 ;;_ll	offset	14
   253 ;;_f	offset	22
   254 ;;_ct	offset	26
   255 ;;_cp	offset	29
   256 ;;_c	offset	31
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_xtoa$4137	offset	0
   261 ;;_xtoa$4136	offset	2
   262 ;;_n	offset	4
   263 ;;_c	offset	12
   264 ;;_i	offset	14
   265 ;;_w	offset	16
   266 ;;_p	offset	18
   267 ;;_fp	offset=-2 (param)
   268 ;;_d	offset=-10 (param)
   269 ;;_x	offset=-11 (param)
   270 ;;_toupper$4789	offset	0
   271 ;;_c	offset=-2 (param)
   272 ;;_c	offset=-2 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_r	offset	0
   275 ;;_l	offset	2
   276 ;;__l	offset=-2 (param)
   277 ;;__r	offset=-4 (param)
   278 ;;_n	offset=-6 (param)
   279 ;;_nuls	offset	0
   280 ;;_l	offset	7
   281 ;;_p	offset	9
   282 ;;_cp	offset	11
   283 ;;_w	offset	13
   284 ;;_i	offset	15
   285 ;;_fp	offset=-2 (param)
   286 ;;_s	offset=-4 (param)
   287 ;;_efgtoa$4116	offset	0
   288 ;;_efgtoa$4115	offset	2
   289 ;;_efgtoa$4114	offset	4
   290 ;;_efgtoa$4110	offset	6
   291 ;;_efgtoa$4106	offset	8
   292 ;;_efgtoa$4105	offset	10
   293 ;;_u	offset	12
   294 ;;_g	offset	16
   295 ;;_l	offset	20
   296 ;;_h	offset	24
   297 ;;_ou	offset	28
   298 ;;_n	offset	32
   299 ;;_e	offset	34
   300 ;;_i	offset	36
   301 ;;_w	offset	38
   302 ;;_p	offset	40
   303 ;;_sign	offset	42
   304 ;;_d	offset	44
   305 ;;_ne	offset	46
   306 ;;_m	offset	48
   307 ;;_pp	offset	50
   308 ;;_t	offset	52
   309 ;;_mode	offset	54
   310 ;;_nmode	offset	55
   311 ;;_fp	offset=-2 (param)
   312 ;;_f	offset=-6 (param)
   313 ;;_c	offset=-7 (param)
   314 ;;_tolower$4774	offset	0
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_d	offset	0
   318 ;;_s	offset	2
   319 ;;_dest	offset=-2 (param)
   320 ;;_src	offset=-4 (param)
   321 ;;_u	offset	0
   322 ;;_m	offset	4
   323 ;;_e	offset	8
   324 ;;_x	offset=-4 (param)
   325 ;;_u	offset	0
   326 ;;_e	offset	4
   327 ;;_x	offset=-4 (param)
   328 ;;_exp1	offset	0
   329 ;;_sign1	offset	1
   330 ;;_f1	offset=-4 (param)
   331 ;;_b	offset=-4 (param)
   332 ;;_a	offset=-8 (param)
   333 ;;_grs	offset	0
   334 ;;_bexp	offset	1
   335 ;;_aexp	offset	2
   336 ;;_signs	offset	3
   337 ;;_b	offset=-4 (param)
   338 ;;_a	offset=-8 (param)
   339 ;;_f1	offset=-4 (param)
   340 ;;_prod	offset	0
   341 ;;_grs	offset	4
   342 ;;_temp	offset	8
   343 ;;_bexp	offset	10
   344 ;;_aexp	offset	11
   345 ;;_sign	offset	12
   346 ;;_b	offset=-4 (param)
   347 ;;_a	offset=-8 (param)
   348 ;;_ff1	offset=-4 (param)
   349 ;;_ff2	offset=-8 (param)
   350 ;;_ff1	offset=-4 (param)
   351 ;;_ff2	offset=-8 (param)
   352 ;;_grs	offset	0
   353 ;;_rem	offset	4
   354 ;;_new_exp	offset	8
   355 ;;_aexp	offset	10
   356 ;;_bexp	offset	11
   357 ;;_sign	offset	12
   358 ;;_b	offset=-4 (param)
   359 ;;_a	offset=-8 (param)
   360 ;;_sign	offset	0
   361 ;;_counter	offset	1
   362 ;;_dividend	offset=-2 (param)
   363 ;;_divisor	offset=-4 (param)
   364 ;;_quotient	offset	0
   365 ;;_sign	offset	2
   366 ;;_counter	offset	3
   367 ;;_dividend	offset=-2 (param)
   368 ;;_divisor	offset=-4 (param)
   369 ;;_dtoa$4082	offset	0
   370 ;;_n	offset	2
   371 ;;_i	offset	10
   372 ;;_s	offset	12
   373 ;;_w	offset	14
   374 ;;_p	offset	16
   375 ;;_fp	offset=-2 (param)
   376 ;;_d	offset=-10 (param)
   377 ;;_a	offset=-2 (param)
   378 ;;_sign	offset	0
   379 ;;_counter	offset	1
   380 ;;_dividend	offset=-8 (param)
   381 ;;_divisor	offset=-16 (param)
   382 ;;_quotient	offset	0
   383 ;;_sign	offset	8
   384 ;;_counter	offset	9
   385 ;;_dividend	offset=-8 (param)
   386 ;;_divisor	offset=-16 (param)
   387 ;;_w	offset	0
   388 ;;_fp	offset=-2 (param)
   389 ;;_c	offset=-3 (param)
   390 ;;_w	offset	0
   391 ;;_i	offset	2
   392 ;;_fp	offset=-2 (param)
   393 ;;_buf	offset=-4 (param)
   394 ;;_p	offset=-6 (param)
   395 ;;_a	offset	0
   396 ;;_s	offset=-2 (param)
   397 ;;_i	offset	0
   398 ;;_c	offset	2
   399 ;;_s	offset=-2 (param)
   400 ;;_fp	offset=-4 (param)
   401 ;;_c	offset=-2 (param)
   402 ;;_fp	offset=-4 (param)
   403 ;;_c	offset=-1 (param)
   404 ;;__this	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_atoi$4635	offset	0
   407 ;;_atoi$4633	offset	2
   408 ;;_atoi$4634	offset	4
   409 ;;_n	offset	5
   410 ;;_neg	offset	7
   411 ;;_s	offset=-2 (param)
   412 ;;_isspace$4673	offset	0
   413 ;;_c	offset=-2 (param)
   414 ;;_c	offset=-2 (param)
   415 ;;_vterm	offset=-1 (param)
   416 ;;_new_response_info	offset=-1 (param)
   417 ;;_new_response_info	offset=-1 (param)
   418 ;;_level	offset=-2 (param)
   419 ;;_dutyValue	offset=-2 (param)
   420 ;;_timer	offset=-1 (param)
   421 ;;_timer	offset=-1 (param)
   422 ;;_count	offset=-3 (param)
   423 ;;_InterruptHandler	offset=-3 (param)
   424 ;;_InterruptHandler	offset=-3 (param)
   425 ;;_InterruptHandler	offset=-3 (param)
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_InterruptHandler	offset=-3 (param)
   428 ;;_InterruptHandler	offset=-3 (param)
   429 ;;_state	offset	0
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_InterruptHandler	offset=-3 (param)
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_timerVal	offset=-2 (param)
   435 ;;_channel	offset=-1 (param)
   436 ;;_i	offset	0
   437                           
   438                           	psect	idataBANK0
   439  01825A                     __pidataBANK0:
   440                           	opt callstack 0
   441                           
   442                           ;initializer for stoa@F1166
   443  01825A  28                 	db	40
   444  01825B  6E                 	db	110
   445  01825C  75                 	db	117
   446  01825D  6C                 	db	108
   447  01825E  6C                 	db	108
   448  01825F  29                 	db	41
   449  018260  00                 	db	0
   450                           
   451                           ;initializer for _port_data
   452  018261  FF                 	db	255
   453  018262  00                 	db	0
   454  018263  FF                 	db	255
   455  018264  00                 	db	0
   456  018265  FF                 	db	255
   457  018266  00                 	db	0
   458  018267  FF                 	db	255
   459  018268  00                 	db	0
   460  018269  FF                 	db	255
   461  01826A  00                 	db	0
   462  01826B  FF                 	db	255
   463  01826C  00                 	db	0
   464  01826D  FF                 	db	255
   465  01826E  00                 	db	0
   466  01826F  FF                 	db	255
   467  018270  00                 	db	0
   468                           
   469                           	psect	idataBANK2
   470  016C58                     __pidataBANK2:
   471                           	opt callstack 0
   472                           
   473                           ;initializer for _V
   474  016C58  00                 	db	0
   475  016C59  00                 	db	0
   476  016C5A  00                 	db	0
   477  016C5B  00                 	db	0
   478  016C5C  00                 	db	0
   479  016C5D  00                 	db	0
   480  016C5E  00                 	db	0
   481  016C5F  00                 	db	0
   482  016C60  00                 	db	0
   483  016C61  00                 	db	0
   484  016C62  00                 	db	0
   485  016C63  00                 	db	0
   486  016C64  00                 	db	0
   487  016C65  00                 	db	0
   488  016C66  00                 	db	0
   489  016C67  00                 	db	0
   490  016C68  00                 	db	0
   491  016C69  00                 	db	0
   492  016C6A  00                 	db	0
   493  016C6B  00                 	db	0
   494  016C6C  00                 	db	0
   495  016C6D  00                 	db	0
   496  016C6E  00                 	db	0
   497  016C6F  00                 	db	0
   498  016C70  00                 	db	0
   499  016C71  00                 	db	0
   500  016C72  00                 	db	0
   501  016C73  00                 	db	0
   502  016C74  00                 	db	0
   503  016C75  00                 	db	0
   504  016C76  00                 	db	0
   505  016C77  00                 	db	0
   506  016C78  00                 	db	0
   507  016C79  00                 	db	0
   508  016C7A  00                 	db	0
   509  016C7B  00                 	db	0
   510  016C7C  00                 	db	0
   511  016C7D  00                 	db	0
   512  016C7E  00                 	db	0
   513  016C7F  00                 	db	0
   514  016C80  00                 	db	0
   515  016C81  00                 	db	0
   516  016C82  00                 	db	0
   517  016C83  00                 	db	0
   518  016C84  00                 	db	0
   519  016C85  00                 	db	0
   520  016C86  00                 	db	0
   521  016C87  00                 	db	0
   522  016C88  00                 	db	0
   523  016C89  00                 	db	0
   524  016C8A  00                 	db	0
   525  016C8B  00                 	db	0
   526  016C8C  00                 	db	0
   527  016C8D  00                 	db	0
   528  016C8E  00                 	db	0
   529  016C8F  00                 	db	0
   530  016C90  00                 	db	0
   531  016C91  00                 	db	0
   532  016C92  00                 	db	0
   533  016C93  00                 	db	0
   534  016C94  00                 	db	0
   535  016C95  00                 	db	0
   536  016C96  00                 	db	0
   537  016C97  00                 	db	0
   538  016C98  00                 	db	0
   539  016C99  00                 	db	0
   540  016C9A  00                 	db	0
   541  016C9B  00                 	db	0
   542  016C9C  00                 	db	0
   543  016C9D  00                 	db	0
   544  016C9E  00                 	db	0
   545  016C9F  00                 	db	0
   546  016CA0  00                 	db	0
   547  016CA1  00                 	db	0
   548  016CA2  00                 	db	0
   549  016CA3  00                 	db	0
   550  016CA4  00                 	db	0
   551  016CA5  00                 	db	0
   552  016CA6  00                 	db	0
   553  016CA7  00                 	db	0
   554  016CA8  00                 	db	0
   555  016CA9  00                 	db	0
   556  016CAA  00                 	db	0
   557  016CAB  00                 	db	0
   558  016CAC  00                 	db	0
   559  016CAD  00                 	db	0
   560  016CAE  00                 	db	0
   561  016CAF  00                 	db	0
   562  016CB0  00                 	db	0
   563  016CB1  00                 	db	0
   564  016CB2  00                 	db	0
   565  016CB3  00                 	db	0
   566  016CB4  00                 	db	0
   567  016CB5  00                 	db	0
   568  016CB6  00                 	db	0
   569  016CB7  00                 	db	0
   570  016CB8  00                 	db	0
   571  016CB9  00                 	db	0
   572  016CBA  00                 	db	0
   573  016CBB  00                 	db	0
   574  016CBC  00                 	db	0
   575  016CBD  00                 	db	0
   576  016CBE  00                 	db	0
   577  016CBF  00                 	db	0
   578  016CC0  00                 	db	0
   579  016CC1  00                 	db	0
   580  016CC2  00                 	db	0
   581  016CC3  00                 	db	0
   582  016CC4  00                 	db	0
   583  016CC5  00                 	db	0
   584  016CC6  00                 	db	0
   585  016CC7  00                 	db	0
   586  016CC8  00                 	db	0
   587  016CC9  00                 	db	0
   588  016CCA  00                 	db	0
   589  016CCB  00                 	db	0
   590  016CCC  00                 	db	0
   591  016CCD  00                 	db	0
   592  016CCE  00                 	db	0
   593  016CCF  00                 	db	0
   594  016CD0  00                 	db	0
   595  016CD1  00                 	db	0
   596  016CD2  00                 	db	0
   597  016CD3  00                 	db	0
   598  016CD4  00                 	db	0
   599  016CD5  00                 	db	0
   600  016CD6  00                 	db	0
   601  016CD7  00                 	db	0
   602  016CD8  00                 	db	0
   603  016CD9  0000               	dw	0
   604  016CDB  0000               	dw	0
   605  016CDD  0000               	dw	0
   606  016CDF  0000               	dw	0
   607  016CE1  0000               	dw	0
   608  016CE3  0000               	dw	0
   609  016CE5  00                 	db	0
   610  016CE6  00                 	db	0
   611  016CE7  00                 	db	0
   612  016CE8  00                 	db	0
   613  016CE9  00                 	db	0
   614  016CEA  00                 	db	0
   615  016CEB  00                 	db	0
   616  016CEC  00                 	db	0
   617  016CED  0000               	dw	0
   618  016CEF  0000               	dw	0
   619  016CF1  0000               	dw	0
   620  016CF3  0000               	dw	0
   621  016CF5  0000               	dw	0
   622  016CF7  0000               	dw	0
   623  016CF9  0000               	dw	0
   624  016CFB  0000               	dw	0
   625  016CFD  0000               	dw	0
   626  016CFF  00                 	db	0
   627  016D00  00                 	db	0
   628  016D01  00                 	db	0
   629  016D02  00                 	db	0
   630  016D03  00                 	db	0
   631  016D04  00                 	db	0
   632  016D05  00                 	db	0
   633  016D06  00                 	db	0
   634  016D07  00                 	db	0
   635  016D08  00                 	db	0
   636  016D09  00                 	db	0
   637  016D0A  00                 	db	0
   638  016D0B  0000               	dw	0
   639  016D0D  0000               	dw	0
   640  016D0F  01                 	db	1
   641  016D10  00                 	db	0
   642  016D11  01                 	db	1
   643  016D12  00                 	db	0
   644  016D13  2D                 	db	45
   645  016D14  00                 	db	0
   646                           
   647                           	psect	mediumconst
   648  00FE72                     __pmediumconst:
   649                           	opt callstack 0
   650  00FE72  00                 	db	0
   651  00FE73                     _T:
   652                           	opt callstack 0
   653  00FE73  63                 	db	99
   654  00FE74  6F                 	db	111
   655  00FE75  6D                 	db	109
   656  00FE76  6D                 	db	109
   657  00FE77  61                 	db	97
   658  00FE78  6E                 	db	110
   659  00FE79  64                 	db	100
   660  00FE7A  73                 	db	115
   661  00FE7B  20                 	db	32
   662  00FE7C  31                 	db	49
   663  00FE7D  00                 	db	0
   664  00FE7E  00                 	db	0
   665  00FE7F  00                 	db	0
   666  00FE80  00                 	db	0
   667  00FE81  00                 	db	0
   668  00FE82  00                 	db	0
   669  00FE83  00                 	db	0
   670  00FE84  00                 	db	0
   671  00FE85  64                 	db	100
   672  00FE86  69                 	db	105
   673  00FE87  73                 	db	115
   674  00FE88  70                 	db	112
   675  00FE89  6C                 	db	108
   676  00FE8A  61                 	db	97
   677  00FE8B  79                 	db	121
   678  00FE8C  73                 	db	115
   679  00FE8D  20                 	db	32
   680  00FE8E  31                 	db	49
   681  00FE8F  00                 	db	0
   682  00FE90  00                 	db	0
   683  00FE91  00                 	db	0
   684  00FE92  00                 	db	0
   685  00FE93  00                 	db	0
   686  00FE94  00                 	db	0
   687  00FE95  00                 	db	0
   688  00FE96  00                 	db	0
   689  00FE97  63                 	db	99
   690  00FE98  6F                 	db	111
   691  00FE99  6D                 	db	109
   692  00FE9A  6D                 	db	109
   693  00FE9B  61                 	db	97
   694  00FE9C  6E                 	db	110
   695  00FE9D  64                 	db	100
   696  00FE9E  73                 	db	115
   697  00FE9F  20                 	db	32
   698  00FEA0  32                 	db	50
   699  00FEA1  00                 	db	0
   700  00FEA2  00                 	db	0
   701  00FEA3  00                 	db	0
   702  00FEA4  00                 	db	0
   703  00FEA5  00                 	db	0
   704  00FEA6  00                 	db	0
   705  00FEA7  00                 	db	0
   706  00FEA8  00                 	db	0
   707  00FEA9  64                 	db	100
   708  00FEAA  69                 	db	105
   709  00FEAB  73                 	db	115
   710  00FEAC  70                 	db	112
   711  00FEAD  6C                 	db	108
   712  00FEAE  61                 	db	97
   713  00FEAF  79                 	db	121
   714  00FEB0  73                 	db	115
   715  00FEB1  20                 	db	32
   716  00FEB2  32                 	db	50
   717  00FEB3  00                 	db	0
   718  00FEB4  00                 	db	0
   719  00FEB5  00                 	db	0
   720  00FEB6  00                 	db	0
   721  00FEB7  00                 	db	0
   722  00FEB8  00                 	db	0
   723  00FEB9  00                 	db	0
   724  00FEBA  00                 	db	0
   725  00FEBB  63                 	db	99
   726  00FEBC  6F                 	db	111
   727  00FEBD  6D                 	db	109
   728  00FEBE  6D                 	db	109
   729  00FEBF  61                 	db	97
   730  00FEC0  6E                 	db	110
   731  00FEC1  64                 	db	100
   732  00FEC2  73                 	db	115
   733  00FEC3  20                 	db	32
   734  00FEC4  33                 	db	51
   735  00FEC5  00                 	db	0
   736  00FEC6  00                 	db	0
   737  00FEC7  00                 	db	0
   738  00FEC8  00                 	db	0
   739  00FEC9  00                 	db	0
   740  00FECA  00                 	db	0
   741  00FECB  00                 	db	0
   742  00FECC  00                 	db	0
   743  00FECD  64                 	db	100
   744  00FECE  69                 	db	105
   745  00FECF  73                 	db	115
   746  00FED0  70                 	db	112
   747  00FED1  6C                 	db	108
   748  00FED2  61                 	db	97
   749  00FED3  79                 	db	121
   750  00FED4  73                 	db	115
   751  00FED5  20                 	db	32
   752  00FED6  33                 	db	51
   753  00FED7  00                 	db	0
   754  00FED8  00                 	db	0
   755  00FED9  00                 	db	0
   756  00FEDA  00                 	db	0
   757  00FEDB  00                 	db	0
   758  00FEDC  00                 	db	0
   759  00FEDD  00                 	db	0
   760  00FEDE  00                 	db	0
   761  00FEDF  63                 	db	99
   762  00FEE0  6F                 	db	111
   763  00FEE1  6D                 	db	109
   764  00FEE2  6D                 	db	109
   765  00FEE3  61                 	db	97
   766  00FEE4  6E                 	db	110
   767  00FEE5  64                 	db	100
   768  00FEE6  73                 	db	115
   769  00FEE7  20                 	db	32
   770  00FEE8  34                 	db	52
   771  00FEE9  00                 	db	0
   772  00FEEA  00                 	db	0
   773  00FEEB  00                 	db	0
   774  00FEEC  00                 	db	0
   775  00FEED  00                 	db	0
   776  00FEEE  00                 	db	0
   777  00FEEF  00                 	db	0
   778  00FEF0  00                 	db	0
   779  00FEF1  64                 	db	100
   780  00FEF2  69                 	db	105
   781  00FEF3  73                 	db	115
   782  00FEF4  70                 	db	112
   783  00FEF5  6C                 	db	108
   784  00FEF6  61                 	db	97
   785  00FEF7  79                 	db	121
   786  00FEF8  73                 	db	115
   787  00FEF9  20                 	db	32
   788  00FEFA  34                 	db	52
   789  00FEFB  00                 	db	0
   790  00FEFC  00                 	db	0
   791  00FEFD  00                 	db	0
   792  00FEFE  00                 	db	0
   793  00FEFF  00                 	db	0
   794  00FF00  00                 	db	0
   795  00FF01  00                 	db	0
   796  00FF02  00                 	db	0
   797  00FF03                     __end_of_T:
   798                           	opt callstack 0
   799  0000                     _IVTADL	set	14493
   800  0000                     _IVTADH	set	14494
   801  0000                     _IVTADU	set	14495
   802  0000                     _PIR4bits	set	14756
   803  0000                     _PIE8bits	set	14744
   804  0000                     _PIR8bits	set	14760
   805  0000                     _SCANPR	set	14839
   806  0000                     _DMA2PR	set	14836
   807  0000                     _DMA1PR	set	14835
   808  0000                     _MAINPR	set	14834
   809  0000                     _ISRPR	set	14833
   810  0000                     _PIE2bits	set	14738
   811  0000                     _PIR2bits	set	14754
   812  0000                     _PIE9bits	set	14745
   813  0000                     _PIR9bits	set	14761
   814  0000                     _PIE6bits	set	14742
   815  0000                     _PIE3bits	set	14739
   816  0000                     _PMD7	set	14791
   817  0000                     _PMD6	set	14790
   818  0000                     _PMD5	set	14789
   819  0000                     _PMD4	set	14788
   820  0000                     _PMD3	set	14787
   821  0000                     _PMD2	set	14786
   822  0000                     _PMD1	set	14785
   823  0000                     _PMD0	set	14784
   824  0000                     _OSCTUNE	set	14814
   825  0000                     _OSCFRQ	set	14815
   826  0000                     _OSCEN	set	14813
   827  0000                     _OSCCON3	set	14811
   828  0000                     _OSCCON1	set	14809
   829  0000                     _IPR8bits	set	14728
   830  0000                     _IPR9bits	set	14729
   831  0000                     _IPR5bits	set	14725
   832  0000                     _IPR1bits	set	14721
   833  0000                     _IPR3bits	set	14723
   834  0000                     _IPR6bits	set	14726
   835  0000                     _IPR2bits	set	14722
   836  0000                     _PIE5bits	set	14741
   837  0000                     _PIE1bits	set	14737
   838  0000                     _PIR5bits	set	14757
   839  0000                     _PIR1bits	set	14753
   840  0000                     _PLLR	set	118496
   841  0000                     _SPI1SDIPPS	set	15071
   842  0000                     _U1RXPPS	set	15077
   843  0000                     _RC6PPS	set	14870
   844  0000                     _RC5PPS	set	14869
   845  0000                     _INT1PPS	set	15041
   846  0000                     _RD1PPS	set	14873
   847  0000                     _INT0PPS	set	15040
   848  0000                     _RC3PPS	set	14867
   849  0000                     _RB6PPS	set	14862
   850  0000                     _SPI1SCKPPS	set	15070
   851  0000                     _U2RXPPS	set	15080
   852  0000                     _SLRCONF	set	14995
   853  0000                     _SLRCONE	set	14979
   854  0000                     _SLRCOND	set	14963
   855  0000                     _SLRCONC	set	14947
   856  0000                     _SLRCONB	set	14931
   857  0000                     _SLRCONA	set	14915
   858  0000                     _ODCOND	set	14962
   859  0000                     _ODCONC	set	14946
   860  0000                     _ODCONB	set	14930
   861  0000                     _ODCONA	set	14914
   862  0000                     _ODCONF	set	14994
   863  0000                     _ODCONE	set	14978
   864  0000                     _WPUC	set	14945
   865  0000                     _WPUA	set	14913
   866  0000                     _WPUB	set	14929
   867  0000                     _WPUE	set	14977
   868  0000                     _WPUF	set	14993
   869  0000                     _WPUD	set	14961
   870  0000                     _ANSELA	set	14912
   871  0000                     _ANSELF	set	14992
   872  0000                     _ANSELE	set	14976
   873  0000                     _ANSELB	set	14928
   874  0000                     _ANSELC	set	14944
   875  0000                     _ANSELD	set	14960
   876  0000                     _DMA2SSA	set	15321
   877  0000                     _DMA1SSA	set	15353
   878  0000                     _DMA2DSZ	set	15310
   879  0000                     _DMA2SSZ	set	15319
   880  0000                     _DMA2DSA	set	15312
   881  0000                     _DMA1DSZ	set	15342
   882  0000                     _DMA1SSZ	set	15351
   883  0000                     _DMA1DSA	set	15344
   884  0000                     _DMA1CON0bits	set	15356
   885  0000                     _DMA1CON1bits	set	15357
   886  0000                     _DMA2CON0	set	15324
   887  0000                     _DMA2AIRQ	set	15326
   888  0000                     _DMA2SIRQ	set	15327
   889  0000                     _DMA2CON1	set	15325
   890  0000                     _DMA1CON0	set	15356
   891  0000                     _DMA1AIRQ	set	15358
   892  0000                     _DMA1SIRQ	set	15359
   893  0000                     _DMA1CON1	set	15357
   894  0000                     _CLKRCON	set	15589
   895  0000                     _CLKRCLK	set	15590
   896  0000                     _SPI1INTFbits	set	15642
   897  0000                     _SPI1RXB	set	15632
   898  0000                     _SPI1TXB	set	15633
   899  0000                     _SPI1TCNTL	set	15634
   900  0000                     _SPI1CON0	set	15636
   901  0000                     _SPI1CLK	set	15644
   902  0000                     _SPI1BAUD	set	15641
   903  0000                     _SPI1CON2	set	15638
   904  0000                     _SPI1CON1	set	15637
   905  0000                     _U2RXB	set	15824
   906  0000                     _U2TXB	set	15826
   907  0000                     _U2ERRIE	set	15842
   908  0000                     _U2ERRIR	set	15841
   909  0000                     _U2UIR	set	15840
   910  0000                     _U2FIFO	set	15839
   911  0000                     _U2BRGH	set	15838
   912  0000                     _U2BRGL	set	15837
   913  0000                     _U2CON2	set	15836
   914  0000                     _U2CON1	set	15835
   915  0000                     _U2CON0	set	15834
   916  0000                     _U2P3L	set	15832
   917  0000                     _U2P2L	set	15830
   918  0000                     _U2P1L	set	15828
   919  0000                     _U1RXB	set	15848
   920  0000                     _U1TXB	set	15850
   921  0000                     _U1ERRIE	set	15866
   922  0000                     _U1ERRIR	set	15865
   923  0000                     _U1UIR	set	15864
   924  0000                     _U1FIFO	set	15863
   925  0000                     _U1BRGH	set	15862
   926  0000                     _U1BRGL	set	15861
   927  0000                     _U1CON2	set	15860
   928  0000                     _U1CON1	set	15859
   929  0000                     _U1CON0	set	15858
   930  0000                     _U1P3H	set	15857
   931  0000                     _U1P3L	set	15856
   932  0000                     _U1P2H	set	15855
   933  0000                     _U1P2L	set	15854
   934  0000                     _U1P1H	set	15853
   935  0000                     _U1P1L	set	15852
   936  0000                     _FVRCON	set	16065
   937  0000                     _ADFLTRL	set	16102
   938  0000                     _ADFLTRH	set	16103
   939  0000                     _ADCON0bits	set	16120
   940  0000                     _ADCON0	set	16120
   941  0000                     _ADCLK	set	16127
   942  0000                     _ADACT	set	16126
   943  0000                     _ADREF	set	16125
   944  0000                     _ADSTAT	set	16124
   945  0000                     _ADCON3	set	16123
   946  0000                     _ADCON2	set	16122
   947  0000                     _ADCON1	set	16121
   948  0000                     _ADPREH	set	16119
   949  0000                     _ADPREL	set	16118
   950  0000                     _ADCAP	set	16117
   951  0000                     _ADACQH	set	16116
   952  0000                     _ADACQL	set	16115
   953  0000                     _ADPCH	set	16113
   954  0000                     _ADRPT	set	16108
   955  0000                     _ADACCU	set	16106
   956  0000                     _ADSTPTH	set	16101
   957  0000                     _ADSTPTL	set	16100
   958  0000                     _ADUTHH	set	16097
   959  0000                     _ADUTHL	set	16096
   960  0000                     _ADLTHH	set	16095
   961  0000                     _ADLTHL	set	16094
   962  0000                     _CCPTMRS1bits	set	16223
   963  0000                     _LATCbits	set	16316
   964  0000                     _LATDbits	set	16317
   965  0000                     _PORTBbits	set	16331
   966  0000                     _T2CON	set	16300
   967  0000                     _T2TMR	set	16298
   968  0000                     _T2PR	set	16299
   969  0000                     _T2RST	set	16303
   970  0000                     _T2HLT	set	16301
   971  0000                     _T2CLKCON	set	16302
   972  0000                     _PWM8DCL	set	16224
   973  0000                     _PWM8DCH	set	16225
   974  0000                     _PWM8CON	set	16226
   975  0000                     _LATEbits	set	16318
   976  0000                     _T5CONbits	set	16282
   977  0000                     _T5CON	set	16282
   978  0000                     _TMR5L	set	16280
   979  0000                     _TMR5H	set	16281
   980  0000                     _T5CLK	set	16285
   981  0000                     _T5GATE	set	16284
   982  0000                     _T5GCON	set	16283
   983  0000                     _T6CON	set	16276
   984  0000                     _T6TMR	set	16274
   985  0000                     _T6PR	set	16275
   986  0000                     _T6RST	set	16279
   987  0000                     _T6HLT	set	16277
   988  0000                     _T6CLKCON	set	16278
   989  0000                     _TRISD	set	16325
   990  0000                     _TRISC	set	16324
   991  0000                     _TRISB	set	16323
   992  0000                     _TRISA	set	16322
   993  0000                     _TRISF	set	16327
   994  0000                     _TRISE	set	16326
   995  0000                     _LATC	set	16316
   996  0000                     _LATB	set	16315
   997  0000                     _LATF	set	16319
   998  0000                     _LATA	set	16314
   999  0000                     _LATD	set	16317
  1000  0000                     _LATE	set	16318
  1001  0000                     _IVTLOCKbits	set	16340
  1002  0000                     _IVTLOCK	set	16340
  1003  0000                     _INTCON0bits	set	16338
  1004  0000                     _GIE	set	130711
  1005  00FF03                     
  1006                           ; BSR set to: 57
  1007  00FF03  20                 	db	32
  1008  00FF04  4D                 	db	77	;'M'
  1009  00FF05  65                 	db	101	;'e'
  1010  00FF06  73                 	db	115	;'s'
  1011  00FF07  67                 	db	103	;'g'
  1012  00FF08  20                 	db	32
  1013  00FF09  25                 	db	37
  1014  00FF0A  64                 	db	100	;'d'
  1015  00FF0B  20                 	db	32
  1016  00FF0C  53                 	db	83	;'S'
  1017  00FF0D  74                 	db	116	;'t'
  1018  00FF0E  61                 	db	97	;'a'
  1019  00FF0F  63                 	db	99	;'c'
  1020  00FF10  6B                 	db	107	;'k'
  1021  00FF11  20                 	db	32
  1022  00FF12  25                 	db	37
  1023  00FF13  64                 	db	100	;'d'
  1024  00FF14  20                 	db	32
  1025  00FF15  20                 	db	32
  1026  00FF16  20                 	db	32
  1027  00FF17  20                 	db	32
  1028  00FF18  20                 	db	32
  1029  00FF19  20                 	db	32
  1030  00FF1A  00                 	db	0
  1031  00FF1B                     STR_26:
  1032                           
  1033                           ; BSR set to: 57
  1034  00FF1B  20                 	db	32
  1035  00FF1C  20                 	db	32
  1036  00FF1D  20                 	db	32
  1037  00FF1E  20                 	db	32
  1038  00FF1F  20                 	db	32
  1039  00FF20  20                 	db	32
  1040  00FF21  20                 	db	32
  1041  00FF22  20                 	db	32
  1042  00FF23  20                 	db	32
  1043  00FF24  20                 	db	32
  1044  00FF25  20                 	db	32
  1045  00FF26  20                 	db	32
  1046  00FF27  20                 	db	32
  1047  00FF28  20                 	db	32
  1048  00FF29  20                 	db	32
  1049  00FF2A  20                 	db	32
  1050  00FF2B  20                 	db	32
  1051  00FF2C  20                 	db	32
  1052  00FF2D  00                 	db	0
  1053  00FF2E                     STR_16:
  1054                           
  1055                           ; BSR set to: 57
  1056  00FF2E  48                 	db	72	;'H'
  1057  00FF2F  45                 	db	69	;'E'
  1058  00FF30  4C                 	db	76	;'L'
  1059  00FF31  50                 	db	80	;'P'
  1060  00FF32  20                 	db	32
  1061  00FF33  25                 	db	37
  1062  00FF34  73                 	db	115	;'s'
  1063  00FF35  20                 	db	32
  1064  00FF36  20                 	db	32
  1065  00FF37  20                 	db	32
  1066  00FF38  20                 	db	32
  1067  00FF39  20                 	db	32
  1068  00FF3A  20                 	db	32
  1069  00FF3B  20                 	db	32
  1070  00FF3C  20                 	db	32
  1071  00FF3D  20                 	db	32
  1072  00FF3E  20                 	db	32
  1073  00FF3F  20                 	db	32
  1074  00FF40  00                 	db	0
  1075  00FF41                     
  1076                           ; BSR set to: 57
  1077  00FF41  44                 	db	68	;'D'
  1078  00FF42  49                 	db	73	;'I'
  1079  00FF43  53                 	db	83	;'S'
  1080  00FF44  50                 	db	80	;'P'
  1081  00FF45  4C                 	db	76	;'L'
  1082  00FF46  41                 	db	65	;'A'
  1083  00FF47  59                 	db	89	;'Y'
  1084  00FF48  20                 	db	32
  1085  00FF49  25                 	db	37
  1086  00FF4A  73                 	db	115	;'s'
  1087  00FF4B  20                 	db	32
  1088  00FF4C  20                 	db	32
  1089  00FF4D  20                 	db	32
  1090  00FF4E  20                 	db	32
  1091  00FF4F  20                 	db	32
  1092  00FF50  20                 	db	32
  1093  00FF51  20                 	db	32
  1094  00FF52  20                 	db	32
  1095  00FF53  00                 	db	0
  1096  00FF54                     STR_8:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF54  20                 	db	32
  1100  00FF55  56                 	db	86	;'V'
  1101  00FF56  54                 	db	84	;'T'
  1102  00FF57  45                 	db	69	;'E'
  1103  00FF58  52                 	db	82	;'R'
  1104  00FF59  4D                 	db	77	;'M'
  1105  00FF5A  20                 	db	32
  1106  00FF5B  23                 	db	35
  1107  00FF5C  32                 	db	50	;'2'
  1108  00FF5D  20                 	db	32
  1109  00FF5E  20                 	db	32
  1110  00FF5F  20                 	db	32
  1111  00FF60  20                 	db	32
  1112  00FF61  20                 	db	32
  1113  00FF62  20                 	db	32
  1114  00FF63  20                 	db	32
  1115  00FF64  00                 	db	0
  1116  00FF65                     STR_4:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FF65  20                 	db	32
  1120  00FF66  4E                 	db	78	;'N'
  1121  00FF67  53                 	db	83	;'S'
  1122  00FF68  41                 	db	65	;'A'
  1123  00FF69  53                 	db	83	;'S'
  1124  00FF6A  50                 	db	80	;'P'
  1125  00FF6B  4F                 	db	79	;'O'
  1126  00FF6C  4F                 	db	79	;'O'
  1127  00FF6D  4B                 	db	75	;'K'
  1128  00FF6E  20                 	db	32
  1129  00FF6F  20                 	db	32
  1130  00FF70  20                 	db	32
  1131  00FF71  20                 	db	32
  1132  00FF72  20                 	db	32
  1133  00FF73  20                 	db	32
  1134  00FF74  20                 	db	32
  1135  00FF75  00                 	db	0
  1136  00FF76                     STR_1:
  1137                           
  1138                           ; BSR set to: 57
  1139  00FF76  20                 	db	32
  1140  00FF77  4D                 	db	77	;'M'
  1141  00FF78  42                 	db	66	;'B'
  1142  00FF79  4D                 	db	77	;'M'
  1143  00FF7A  43                 	db	67	;'C'
  1144  00FF7B  20                 	db	32
  1145  00FF7C  53                 	db	83	;'S'
  1146  00FF7D  4F                 	db	79	;'O'
  1147  00FF7E  4C                 	db	76	;'L'
  1148  00FF7F  41                 	db	65	;'A'
  1149  00FF80  52                 	db	82	;'R'
  1150  00FF81  4D                 	db	77	;'M'
  1151  00FF82  4F                 	db	79	;'O'
  1152  00FF83  4E                 	db	78	;'N'
  1153  00FF84  20                 	db	32
  1154  00FF85  20                 	db	32
  1155  00FF86  00                 	db	0
  1156  00FF87                     STR_5:
  1157                           
  1158                           ; BSR set to: 57
  1159  00FF87  20                 	db	32
  1160  00FF88  53                 	db	83	;'S'
  1161  00FF89  45                 	db	69	;'E'
  1162  00FF8A  51                 	db	81	;'Q'
  1163  00FF8B  55                 	db	85	;'U'
  1164  00FF8C  45                 	db	69	;'E'
  1165  00FF8D  4E                 	db	78	;'N'
  1166  00FF8E  43                 	db	67	;'C'
  1167  00FF8F  45                 	db	69	;'E'
  1168  00FF90  20                 	db	32
  1169  00FF91  54                 	db	84	;'T'
  1170  00FF92  45                 	db	69	;'E'
  1171  00FF93  53                 	db	83	;'S'
  1172  00FF94  54                 	db	84	;'T'
  1173  00FF95  20                 	db	32
  1174  00FF96  20                 	db	32
  1175  00FF97  00                 	db	0
  1176  00FF98                     STR_20:
  1177                           
  1178                           ; BSR set to: 57
  1179  00FF98  76                 	db	118	;'v'
  1180  00FF99  74                 	db	116	;'t'
  1181  00FF9A  65                 	db	101	;'e'
  1182  00FF9B  72                 	db	114	;'r'
  1183  00FF9C  6D                 	db	109	;'m'
  1184  00FF9D  20                 	db	32
  1185  00FF9E  25                 	db	37
  1186  00FF9F  78                 	db	120	;'x'
  1187  00FFA0  3A                 	db	58	;':'
  1188  00FFA1  25                 	db	37
  1189  00FFA2  78                 	db	120	;'x'
  1190  00FFA3  20                 	db	32
  1191  00FFA4  20                 	db	32
  1192  00FFA5  20                 	db	32
  1193  00FFA6  00                 	db	0
  1194  00FFA7                     STR_2:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FFA7  20                 	db	32
  1198  00FFA8  56                 	db	86	;'V'
  1199  00FFA9  65                 	db	101	;'e'
  1200  00FFAA  72                 	db	114	;'r'
  1201  00FFAB  73                 	db	115	;'s'
  1202  00FFAC  69                 	db	105	;'i'
  1203  00FFAD  6F                 	db	111	;'o'
  1204  00FFAE  6E                 	db	110	;'n'
  1205  00FFAF  20                 	db	32
  1206  00FFB0  25                 	db	37
  1207  00FFB1  73                 	db	115	;'s'
  1208  00FFB2  20                 	db	32
  1209  00FFB3  20                 	db	32
  1210  00FFB4  20                 	db	32
  1211  00FFB5  00                 	db	0
  1212  00FFB6                     STR_9:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FFB6  25                 	db	37
  1216  00FFB7  64                 	db	100	;'d'
  1217  00FFB8  20                 	db	32
  1218  00FFB9  25                 	db	37
  1219  00FFBA  32                 	db	50	;'2'
  1220  00FFBB  2E                 	db	46
  1221  00FFBC  32                 	db	50	;'2'
  1222  00FFBD  66                 	db	102	;'f'
  1223  00FFBE  20                 	db	32
  1224  00FFBF  20                 	db	32
  1225  00FFC0  20                 	db	32
  1226  00FFC1  23                 	db	35
  1227  00FFC2  00                 	db	0
  1228  00FFC3                     STR_14:
  1229                           
  1230                           ; BSR set to: 57
  1231  00FFC3  4E                 	db	78	;'N'
  1232  00FFC4  6F                 	db	111	;'o'
  1233  00FFC5  76                 	db	118	;'v'
  1234  00FFC6  20                 	db	32
  1235  00FFC7  20                 	db	32
  1236  00FFC8  36                 	db	54	;'6'
  1237  00FFC9  20                 	db	32
  1238  00FFCA  32                 	db	50	;'2'
  1239  00FFCB  30                 	db	48	;'0'
  1240  00FFCC  31                 	db	49	;'1'
  1241  00FFCD  39                 	db	57	;'9'
  1242  00FFCE  00                 	db	0
  1243  00FFCF                     STR_18:
  1244                           
  1245                           ; BSR set to: 57
  1246  00FFCF  25                 	db	37
  1247  00FFD0  73                 	db	115	;'s'
  1248  00FFD1  20                 	db	32
  1249  00FFD2  20                 	db	32
  1250  00FFD3  20                 	db	32
  1251  00FFD4  20                 	db	32
  1252  00FFD5  20                 	db	32
  1253  00FFD6  20                 	db	32
  1254  00FFD7  20                 	db	32
  1255  00FFD8  00                 	db	0
  1256  00FFD9                     STR_15:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FFD9  31                 	db	49	;'1'
  1260  00FFDA  39                 	db	57	;'9'
  1261  00FFDB  3A                 	db	58	;':'
  1262  00FFDC  30                 	db	48	;'0'
  1263  00FFDD  35                 	db	53	;'5'
  1264  00FFDE  3A                 	db	58	;':'
  1265  00FFDF  32                 	db	50	;'2'
  1266  00FFE0  39                 	db	57	;'9'
  1267  00FFE1  00                 	db	0
  1268  00FFE2                     STR_32:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FFE2  49                 	db	73	;'I'
  1272  00FFE3  4E                 	db	78	;'N'
  1273  00FFE4  46                 	db	70	;'F'
  1274  00FFE5  00                 	db	0
  1275  00FFE6                     STR_36:
  1276                           
  1277                           ; BSR set to: 57
  1278  00FFE6  4E                 	db	78	;'N'
  1279  00FFE7  41                 	db	65	;'A'
  1280  00FFE8  4E                 	db	78	;'N'
  1281  00FFE9  00                 	db	0
  1282  00FFEA                     STR_33:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FFEA  69                 	db	105	;'i'
  1286  00FFEB  6E                 	db	110	;'n'
  1287  00FFEC  66                 	db	102	;'f'
  1288  00FFED  00                 	db	0
  1289  00FFEE                     STR_37:
  1290                           
  1291                           ; BSR set to: 57
  1292  00FFEE  6E                 	db	110	;'n'
  1293  00FFEF  61                 	db	97	;'a'
  1294  00FFF0  6E                 	db	110	;'n'
  1295  00FFF1  00                 	db	0
  1296  00FFF2                     STR_3:
  1297                           
  1298                           ; BSR set to: 57
  1299  00FFF2  30                 	db	48	;'0'
  1300  00FFF3  2E                 	db	46
  1301  00FFF4  38                 	db	56	;'8'
  1302  00FFF5  00                 	db	0
  1303  00FFF6                     STR_40:
  1304                           
  1305                           ; BSR set to: 57
  1306  00FFF6  6C                 	db	108	;'l'
  1307  00FFF7  66                 	db	102	;'f'
  1308  00FFF8  00                 	db	0
  1309  00FFF9                     STR_12:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFF9  25                 	db	37
  1313  00FFFA  63                 	db	99	;'c'
  1314  00FFFB  00                 	db	0
  1315  00FFFC                     STR_11:
  1316                           
  1317                           ; BSR set to: 57
  1318  00FFFC  25                 	db	37
  1319  00FFFD  73                 	db	115	;'s'
  1320  00FFFE  00                 	db	0
  1321  0000                     
  1322                           ; #config settings
  1323  00FFFF  00                 	db	0	; dummy byte at the end
  1324  0000                     
  1325                           	psect	cinit
  1326  016ACE                     __pcinit:
  1327                           	opt callstack 0
  1328  016ACE                     start_initialization:
  1329                           	opt callstack 0
  1330  016ACE                     __initialization:
  1331                           	opt callstack 0
  1332                           
  1333                           ; Initialize objects allocated to BANK2 (189 bytes)
  1334                           ; load TBLPTR registers with __pidataBANK2
  1335  016ACE  0E58               	movlw	low __pidataBANK2
  1336  016AD0  6EF6               	movwf	tblptrl,c
  1337  016AD2  0E6C               	movlw	high __pidataBANK2
  1338  016AD4  6EF7               	movwf	tblptrh,c
  1339  016AD6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1340  016AD8  6EF8               	movwf	tblptru,c
  1341  016ADA  EE00  F200         	lfsr	0,__pdataBANK2
  1342  016ADE  EE20 F0BD          	lfsr	2,189
  1343  016AE2                     copy_data0:
  1344  016AE2  0009               	tblrd		*+
  1345  016AE4  006F FFD7 FFEE     	movff	tablat,postinc0
  1346  016AEA  50DD               	movf	postdec2,w,c
  1347  016AEC  50D9               	movf	fsr2l,w,c
  1348  016AEE  E1F9               	bnz	copy_data0
  1349                           
  1350                           ; Initialize objects allocated to BANK0 (23 bytes)
  1351                           ; load TBLPTR registers with __pidataBANK0
  1352  016AF0  0E5A               	movlw	low __pidataBANK0
  1353  016AF2  6EF6               	movwf	tblptrl,c
  1354  016AF4  0E82               	movlw	high __pidataBANK0
  1355  016AF6  6EF7               	movwf	tblptrh,c
  1356  016AF8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1357  016AFA  6EF8               	movwf	tblptru,c
  1358  016AFC  EE00  F0C5         	lfsr	0,__pdataBANK0
  1359  016B00  EE20 F017          	lfsr	2,23
  1360  016B04                     copy_data1:
  1361  016B04  0009               	tblrd		*+
  1362  016B06  006F FFD7 FFEE     	movff	tablat,postinc0
  1363  016B0C  50DD               	movf	postdec2,w,c
  1364  016B0E  50D9               	movf	fsr2l,w,c
  1365  016B10  E1F9               	bnz	copy_data1
  1366                           
  1367                           ; Clear objects allocated to BANK6 (255 bytes)
  1368  016B12  EE01  F200         	lfsr	0,__pbssBANK6
  1369  016B16  EE20 F0FF          	lfsr	2,255
  1370  016B1A                     clear_0:
  1371  016B1A  6AEE               	clrf	postinc0,c
  1372  016B1C  50DD               	movf	postdec2,w,c
  1373  016B1E  50D9               	movf	fsr2l,w,c
  1374  016B20  E1FC               	bnz	clear_0
  1375  016B22  50DA               	movf	fsr2h,w,c
  1376  016B24  E1FA               	bnz	clear_0
  1377                           
  1378                           ; Clear objects allocated to BANK5 (255 bytes)
  1379  016B26  EE01  F100         	lfsr	0,__pbssBANK5
  1380  016B2A  EE20 F0FF          	lfsr	2,255
  1381  016B2E                     clear_1:
  1382  016B2E  6AEE               	clrf	postinc0,c
  1383  016B30  50DD               	movf	postdec2,w,c
  1384  016B32  50D9               	movf	fsr2l,w,c
  1385  016B34  E1FC               	bnz	clear_1
  1386  016B36  50DA               	movf	fsr2h,w,c
  1387  016B38  E1FA               	bnz	clear_1
  1388                           
  1389                           ; Clear objects allocated to BANK4 (218 bytes)
  1390  016B3A  EE01  F000         	lfsr	0,__pbssBANK4
  1391  016B3E  0EDA               	movlw	218
  1392  016B40                     clear_2:
  1393  016B40  6AEE               	clrf	postinc0,c
  1394  016B42  06E8               	decf	wreg,f,c
  1395  016B44  E1FD               	bnz	clear_2
  1396                           
  1397                           ; Clear objects allocated to BANK3 (198 bytes)
  1398  016B46  EE00  F300         	lfsr	0,__pbssBANK3
  1399  016B4A  0EC6               	movlw	198
  1400  016B4C                     clear_3:
  1401  016B4C  6AEE               	clrf	postinc0,c
  1402  016B4E  06E8               	decf	wreg,f,c
  1403  016B50  E1FD               	bnz	clear_3
  1404                           
  1405                           ; Clear objects allocated to BANK2 (64 bytes)
  1406  016B52  EE00  F2BD         	lfsr	0,__pbssBANK2
  1407  016B56  0E40               	movlw	64
  1408  016B58                     clear_4:
  1409  016B58  6AEE               	clrf	postinc0,c
  1410  016B5A  06E8               	decf	wreg,f,c
  1411  016B5C  E1FD               	bnz	clear_4
  1412                           
  1413                           ; Clear objects allocated to BANK1 (244 bytes)
  1414  016B5E  EE00  F100         	lfsr	0,__pbssBANK1
  1415  016B62  0EF4               	movlw	244
  1416  016B64                     clear_5:
  1417  016B64  6AEE               	clrf	postinc0,c
  1418  016B66  06E8               	decf	wreg,f,c
  1419  016B68  E1FD               	bnz	clear_5
  1420                           
  1421                           ; Clear objects allocated to BANK0 (101 bytes)
  1422  016B6A  EE00  F060         	lfsr	0,__pbssBANK0
  1423  016B6E  0E65               	movlw	101
  1424  016B70                     clear_6:
  1425  016B70  6AEE               	clrf	postinc0,c
  1426  016B72  06E8               	decf	wreg,f,c
  1427  016B74  E1FD               	bnz	clear_6
  1428                           
  1429                           ; Clear objects allocated to COMRAM (52 bytes)
  1430  016B76  EE00  F001         	lfsr	0,__pbssCOMRAM
  1431  016B7A  0E34               	movlw	52
  1432  016B7C                     clear_7:
  1433  016B7C  6AEE               	clrf	postinc0,c
  1434  016B7E  06E8               	decf	wreg,f,c
  1435  016B80  E1FD               	bnz	clear_7
  1436                           
  1437                           ;
  1438                           ; Setup IVTBASE
  1439                           ;
  1440  016B82  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1441  016B84  6ED5               	movwf	213,c
  1442  016B86  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1443  016B88  6ED6               	movwf	214,c
  1444  016B8A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1445  016B8C  6ED7               	movwf	215,c
  1446  016B8E                     end_of_initialization:
  1447                           	opt callstack 0
  1448  016B8E                     __end_of__initialization:
  1449                           	opt callstack 0
  1450  016B8E  0100               	movlb	0
  1451  016B90  EFB4  F096         	goto	_main	;jump to C main() function
  1452                           
  1453                           	psect	bssCOMRAM
  1454  000001                     __pbssCOMRAM:
  1455                           	opt callstack 0
  1456  000001                     _TMR6_InterruptHandler:
  1457                           	opt callstack 0
  1458  000001                     	ds	3
  1459  000004                     _ADCC_ADTI_InterruptHandler:
  1460                           	opt callstack 0
  1461  000004                     	ds	3
  1462  000007                     _ADCC_ADI_InterruptHandler:
  1463                           	opt callstack 0
  1464  000007                     	ds	3
  1465  00000A                     _UART1_TxInterruptHandler:
  1466                           	opt callstack 0
  1467  00000A                     	ds	3
  1468  00000D                     _UART1_RxInterruptHandler:
  1469                           	opt callstack 0
  1470  00000D                     	ds	3
  1471  000010                     _UART2_TxInterruptHandler:
  1472                           	opt callstack 0
  1473  000010                     	ds	3
  1474  000013                     _UART2_RxInterruptHandler:
  1475                           	opt callstack 0
  1476  000013                     	ds	3
  1477  000016                     _INT1_InterruptHandler:
  1478                           	opt callstack 0
  1479  000016                     	ds	3
  1480  000019                     _INT0_InterruptHandler:
  1481                           	opt callstack 0
  1482  000019                     	ds	3
  1483  00001C                     _nout:
  1484                           	opt callstack 0
  1485  00001C                     	ds	2
  1486  00001E                     _width:
  1487                           	opt callstack 0
  1488  00001E                     	ds	2
  1489  000020                     _prec:
  1490                           	opt callstack 0
  1491  000020                     	ds	2
  1492  000022                     _flags:
  1493                           	opt callstack 0
  1494  000022                     	ds	2
  1495  000024                     TMR5_ISR@CountCallBack:
  1496                           	opt callstack 0
  1497  000024                     	ds	2
  1498  000026                     _timer5ReloadVal:
  1499                           	opt callstack 0
  1500  000026                     	ds	2
  1501  000028                     _mode_sw:
  1502                           	opt callstack 0
  1503  000028                     	ds	1
  1504  000029                     _uart2RxCount:
  1505                           	opt callstack 0
  1506  000029                     	ds	1
  1507  00002A                     _uart2RxTail:
  1508                           	opt callstack 0
  1509  00002A                     	ds	1
  1510  00002B                     _uart2RxHead:
  1511                           	opt callstack 0
  1512  00002B                     	ds	1
  1513  00002C                     _uart2TxBufferRemaining:
  1514                           	opt callstack 0
  1515  00002C                     	ds	1
  1516  00002D                     _uart2TxTail:
  1517                           	opt callstack 0
  1518  00002D                     	ds	1
  1519  00002E                     _uart2TxHead:
  1520                           	opt callstack 0
  1521  00002E                     	ds	1
  1522  00002F                     _uart1RxCount:
  1523                           	opt callstack 0
  1524  00002F                     	ds	1
  1525  000030                     _uart1RxTail:
  1526                           	opt callstack 0
  1527  000030                     	ds	1
  1528  000031                     _uart1RxHead:
  1529                           	opt callstack 0
  1530  000031                     	ds	1
  1531  000032                     _uart1TxBufferRemaining:
  1532                           	opt callstack 0
  1533  000032                     	ds	1
  1534  000033                     _uart1TxTail:
  1535                           	opt callstack 0
  1536  000033                     	ds	1
  1537  000034                     _uart1TxHead:
  1538                           	opt callstack 0
  1539  000034                     	ds	1
  1540                           
  1541                           	psect	bssBANK0
  1542  000060                     __pbssBANK0:
  1543                           	opt callstack 0
  1544  000060                     _R:
  1545                           	opt callstack 0
  1546  000060                     	ds	34
  1547  000082                     _tickCount:
  1548                           	opt callstack 0
  1549  000082                     	ds	24
  1550  00009A                     _spi_link:
  1551                           	opt callstack 0
  1552  00009A                     	ds	12
  1553  0000A6                     floorf@F524:
  1554                           	opt callstack 0
  1555  0000A6                     	ds	4
  1556  0000AA                     ___fpclassifyf@F463:
  1557                           	opt callstack 0
  1558  0000AA                     	ds	4
  1559  0000AE                     lp_filter@lp_x:
  1560                           	opt callstack 0
  1561  0000AE                     	ds	4
  1562  0000B2                     lp_filter@lp_speed:
  1563                           	opt callstack 0
  1564  0000B2                     	ds	4
  1565  0000B6                     wdtdelay@dcount:
  1566                           	opt callstack 0
  1567  0000B6                     	ds	4
  1568  0000BA                     _TMR5_InterruptHandler:
  1569                           	opt callstack 0
  1570  0000BA                     	ds	3
  1571  0000BD                     _seed:
  1572                           	opt callstack 0
  1573  0000BD                     	ds	8
  1574                           
  1575                           	psect	dataBANK0
  1576  0000C5                     __pdataBANK0:
  1577                           	opt callstack 0
  1578  0000C5                     stoa@F1166:
  1579                           	opt callstack 0
  1580  0000C5                     	ds	7
  1581  0000CC                     _port_data:
  1582                           	opt callstack 0
  1583  0000CC                     	ds	16
  1584                           
  1585                           	psect	bssBANK1
  1586  000100                     __pbssBANK1:
  1587                           	opt callstack 0
  1588  000100                     _C:
  1589                           	opt callstack 0
  1590  000100                     	ds	104
  1591  000168                     lp_filter@smooth:
  1592                           	opt callstack 0
  1593  000168                     	ds	60
  1594  0001A4                     _dbuf:
  1595                           	opt callstack 0
  1596  0001A4                     	ds	80
  1597                           
  1598                           	psect	bssBANK2
  1599  0002BD                     __pbssBANK2:
  1600                           	opt callstack 0
  1601  0002BD                     _uart1TxBuffer:
  1602                           	opt callstack 0
  1603  0002BD                     	ds	64
  1604                           
  1605                           	psect	dataBANK2
  1606  000200                     __pdataBANK2:
  1607                           	opt callstack 0
  1608  000200                     _V:
  1609                           	opt callstack 0
  1610  000200                     	ds	189
  1611                           
  1612                           	psect	bssBANK3
  1613  000300                     __pbssBANK3:
  1614                           	opt callstack 0
  1615  000300                     _uart2TxBuffer:
  1616                           	opt callstack 0
  1617  000300                     	ds	64
  1618  000340                     _ring_buf2:
  1619                           	opt callstack 0
  1620  000340                     	ds	67
  1621  000383                     _ring_buf1:
  1622                           	opt callstack 0
  1623  000383                     	ds	67
  1624                           
  1625                           	psect	bssBANK4
  1626  000400                     __pbssBANK4:
  1627                           	opt callstack 0
  1628  000400                     _D:
  1629                           	opt callstack 0
  1630  000400                     	ds	218
  1631                           
  1632                           	psect	bssBANK5
  1633  000500                     __pbssBANK5:
  1634                           	opt callstack 0
  1635  000500                     _uart1RxBuffer:
  1636                           	opt callstack 0
  1637  000500                     	ds	255
  1638                           
  1639                           	psect	bssBANK6
  1640  000600                     __pbssBANK6:
  1641                           	opt callstack 0
  1642  000600                     _uart2RxBuffer:
  1643                           	opt callstack 0
  1644  000600                     	ds	255
  1645                           
  1646                           	psect	cstackBANK0
  1647  0000DC                     __pcstackBANK0:
  1648                           	opt callstack 0
  1649  0000DC                     ??_TMR6_ISR:
  1650                           
  1651                           ; 1 bytes @ 0x0
  1652  0000DC                     	ds	1
  1653  0000DD                     ??_TMR5_ISR:
  1654                           
  1655                           ; 1 bytes @ 0x1
  1656  0000DD                     	ds	4
  1657                           
  1658                           	psect	cstackCOMRAM
  1659  000055                     __pcstackCOMRAM:
  1660                           	opt callstack 0
  1661  000055                     ??_ADCC_ISR:
  1662  000055                     
  1663                           ; 1 bytes @ 0x0
  1664  000055                     	ds	1
  1665  000056                     ??_ADCC_ThresholdISR:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  000056                     	ds	5
  1669                           
  1670 ;;
  1671 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1672 ;;
  1673 ;; *************** function _main *****************
  1674 ;; Defined at:
  1675 ;;		line 149 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  mode            1  [STACK] enum E17005
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1  [STACK] void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels required when called:   19
  1695 ;; This function calls:
  1696 ;;		_SYSTEM_Initialize
  1697 ;;		_StartTimer
  1698 ;;		_TimerDone
  1699 ;;		_WaitMs
  1700 ;;		_check_adc_scan
  1701 ;;		_check_help
  1702 ;;		_clear_adc_scan
  1703 ;;		_conv_raw_result
  1704 ;;		_eaDogM_WriteCommand
  1705 ;;		_get_raw_result
  1706 ;;		_get_vterm_ptr
  1707 ;;		_init_display
  1708 ;;		_lp_filter
  1709 ;;		_mode_lamp_dim
  1710 ;;		_set_display_info
  1711 ;;		_set_vterm
  1712 ;;		_sprintf
  1713 ;;		_srand
  1714 ;;		_start_adc_scan
  1715 ;;		_update_lcd
  1716 ;; This function is called by:
  1717 ;;		Startup code after reset
  1718 ;; This function uses a reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text0
  1722  012D68                     __ptext0:
  1723                           	opt callstack 0
  1724  012D68                     _main:
  1725                           	opt callstack 0
  1726                           
  1727                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1728  012D68  52E6               	movf	postinc1,f,c
  1729                           
  1730                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1731                           
  1732                           ;incstack = 0
  1733  012D6A  ECA2  F0BC         	call	_SYSTEM_Initialize	;wreg free
  1734                           
  1735                           ; BSR set to: 60
  1736                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1737  012D6E  8ED2               	bsf	210,7,c	;volatile
  1738                           
  1739                           ; BSR set to: 60
  1740                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1741  012D70  8CD2               	bsf	210,6,c	;volatile
  1742                           
  1743                           ; BSR set to: 60
  1744                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1745  012D72  0102               	movlb	2	; () banked
  1746  012D74  6B00               	clrf	_V& (0+255),b	;volatile
  1747                           
  1748                           ; BSR set to: 2
  1749                           ;main.c: 167:  WaitMs(300);
  1750  012D76  0E2C               	movlw	44
  1751  012D78  6EE6               	movwf	postinc1,c
  1752  012D7A  0E01               	movlw	1
  1753  012D7C  6EE6               	movwf	postinc1,c
  1754  012D7E  ECC4  F0BD         	call	_WaitMs	;wreg free
  1755                           
  1756                           ;main.c: 168:  if (PORTBbits.RB0) {
  1757  012D82  A0CB               	btfss	203,0,c	;volatile
  1758  012D84  D004               	goto	l9916
  1759                           
  1760                           ;main.c: 169:   mode = UI_STATE_HOST;
  1761                           ;stkvar	_mode @ sp[(-1)+0]
  1762  012D86  0EFF               	movlw	-1
  1763  012D88  6AE3               	clrf	plusw1,c
  1764  012D8A  2AE3               	incf	plusw1,f,c
  1765                           
  1766                           ;main.c: 170:  } else {
  1767  012D8C  D004               	goto	l9918
  1768  012D8E                     l9916:
  1769                           
  1770                           ;main.c: 171:   mode = UI_STATE_LOG;
  1771                           ;stkvar	_mode @ sp[(-1)+0]
  1772  012D8E  0EFF               	movlw	-1
  1773  012D90  6AE3               	clrf	plusw1,c
  1774  012D92  80E3               	bsf	plusw1,0,c
  1775  012D94  82E3               	bsf	plusw1,1,c	;indir
  1776  012D96                     l9918:
  1777                           
  1778                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1779                           ;stkvar	_mode @ sp[(-1)+0]
  1780  012D96  0EFF               	movlw	-1
  1781  012D98  04E3               	decf	plusw1,w,c
  1782  012D9A  A4D8               	btfss	status,2,c
  1783  012D9C  D007               	goto	l1242
  1784                           
  1785                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1786  012D9E  80BD               	bsf	189,0,c	;volatile
  1787                           
  1788                           ;main.c: 176:   V.mode_pwm = 70;
  1789  012DA0  0E00               	movlw	0
  1790  012DA2  0102               	movlb	2	; () banked
  1791  012DA4  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1792  012DA6  0E46               	movlw	70
  1793  012DA8  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1794                           
  1795                           ;main.c: 177:  } else {
  1796  012DAA  D004               	goto	l9922
  1797  012DAC                     l1242:
  1798  012DAC  90BD               	bcf	189,0,c	;volatile
  1799                           
  1800                           ;main.c: 179:   V.mode_pwm = 0;
  1801  012DAE  0102               	movlb	2	; () banked
  1802  012DB0  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1803  012DB2  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1804  012DB4                     l9922:
  1805                           
  1806                           ; BSR set to: 2
  1807                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1808  012DB4  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1809  012DBA  0060  FA83  FFE6   	movff	_V+160,postinc1
  1810  012DC0  EC15  F0C1         	call	_mode_lamp_dim	;wreg free
  1811  012DC4  D0CB               	goto	l9964
  1812  012DC6                     l9924:
  1813                           
  1814                           ; BSR set to: 2
  1815                           ;main.c: 192:    init_display();
  1816  012DC6  EC88  F0B4         	call	_init_display	;wreg free
  1817                           
  1818                           ; BSR set to: 61
  1819                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1820  012DCA  0E0C               	movlw	12
  1821  012DCC  6EE6               	movwf	postinc1,c
  1822  012DCE  EC75  F0C1         	call	_eaDogM_WriteCommand	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 195:    V.ui_state = mode;
  1826                           ;stkvar	_mode @ sp[(-1)+0]
  1827  012DD2  0EFF               	movlw	-1
  1828  012DD4  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 196:    srand(1957);
  1832  012DDA  0EA5               	movlw	165
  1833  012DDC  6EE6               	movwf	postinc1,c
  1834  012DDE  0E07               	movlw	7
  1835  012DE0  6EE6               	movwf	postinc1,c
  1836  012DE2  ECFA  F0BD         	call	_srand	;wreg free
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 197:    set_vterm(0);
  1840  012DE6  0E00               	movlw	0
  1841  012DE8  6EE6               	movwf	postinc1,c
  1842  012DEA  ECE0  F0C0         	call	_set_vterm	;wreg free
  1843                           
  1844                           ; BSR set to: 4
  1845                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1846  012DEE  0E76               	movlw	low STR_1
  1847  012DF0  6EE6               	movwf	postinc1,c
  1848  012DF2  0EFF               	movlw	high STR_1
  1849  012DF4  6EE6               	movwf	postinc1,c
  1850  012DF6  0E00               	movlw	0
  1851  012DF8  6EE6               	movwf	postinc1,c
  1852  012DFA  0E00               	movlw	0
  1853  012DFC  6EE6               	movwf	postinc1,c
  1854  012DFE  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1855  012E02  0060  F0D7  FFE6   	movff	btemp,postinc1
  1856  012E08  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1857  012E0E  0E04               	movlw	4
  1858  012E10  6EE6               	movwf	postinc1,c
  1859  012E12  EC03  F0B4         	call	_sprintf	;wreg free
  1860                           
  1861                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.8");
  1862  012E16  0EF2               	movlw	low STR_3
  1863  012E18  6EE6               	movwf	postinc1,c
  1864  012E1A  0EFF               	movlw	high STR_3
  1865  012E1C  6EE6               	movwf	postinc1,c
  1866  012E1E  0EA7               	movlw	low STR_2
  1867  012E20  6EE6               	movwf	postinc1,c
  1868  012E22  0EFF               	movlw	high STR_2
  1869  012E24  6EE6               	movwf	postinc1,c
  1870  012E26  0E00               	movlw	0
  1871  012E28  6EE6               	movwf	postinc1,c
  1872  012E2A  0E01               	movlw	1
  1873  012E2C  6EE6               	movwf	postinc1,c
  1874  012E2E  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1875  012E32  0060  F0D7  FFE6   	movff	btemp,postinc1
  1876  012E38  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1877  012E3E  0E06               	movlw	6
  1878  012E40  6EE6               	movwf	postinc1,c
  1879  012E42  EC03  F0B4         	call	_sprintf	;wreg free
  1880                           
  1881                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1882  012E46  0E65               	movlw	low STR_4
  1883  012E48  6EE6               	movwf	postinc1,c
  1884  012E4A  0EFF               	movlw	high STR_4
  1885  012E4C  6EE6               	movwf	postinc1,c
  1886  012E4E  0E00               	movlw	0
  1887  012E50  6EE6               	movwf	postinc1,c
  1888  012E52  0E02               	movlw	2
  1889  012E54  6EE6               	movwf	postinc1,c
  1890  012E56  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1891  012E5A  0060  F0D7  FFE6   	movff	btemp,postinc1
  1892  012E60  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1893  012E66  0E04               	movlw	4
  1894  012E68  6EE6               	movwf	postinc1,c
  1895  012E6A  EC03  F0B4         	call	_sprintf	;wreg free
  1896                           
  1897                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1898  012E6E  0E87               	movlw	low STR_5
  1899  012E70  6EE6               	movwf	postinc1,c
  1900  012E72  0EFF               	movlw	high STR_5
  1901  012E74  6EE6               	movwf	postinc1,c
  1902  012E76  0E02               	movlw	2
  1903  012E78  6EE6               	movwf	postinc1,c
  1904  012E7A  0E00               	movlw	0
  1905  012E7C  6EE6               	movwf	postinc1,c
  1906  012E7E  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1907  012E82  0060  F0D7  FFE6   	movff	btemp,postinc1
  1908  012E88  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1909  012E8E  0E04               	movlw	4
  1910  012E90  6EE6               	movwf	postinc1,c
  1911  012E92  EC03  F0B4         	call	_sprintf	;wreg free
  1912                           
  1913                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.8");
  1914  012E96  0EF2               	movlw	low STR_3
  1915  012E98  6EE6               	movwf	postinc1,c
  1916  012E9A  0EFF               	movlw	high STR_3
  1917  012E9C  6EE6               	movwf	postinc1,c
  1918  012E9E  0EA7               	movlw	low STR_2
  1919  012EA0  6EE6               	movwf	postinc1,c
  1920  012EA2  0EFF               	movlw	high STR_2
  1921  012EA4  6EE6               	movwf	postinc1,c
  1922  012EA6  0E02               	movlw	2
  1923  012EA8  6EE6               	movwf	postinc1,c
  1924  012EAA  0E01               	movlw	1
  1925  012EAC  6EE6               	movwf	postinc1,c
  1926  012EAE  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1927  012EB2  0060  F0D7  FFE6   	movff	btemp,postinc1
  1928  012EB8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1929  012EBE  0E06               	movlw	6
  1930  012EC0  6EE6               	movwf	postinc1,c
  1931  012EC2  EC03  F0B4         	call	_sprintf	;wreg free
  1932                           
  1933                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1934  012EC6  0E54               	movlw	low STR_8
  1935  012EC8  6EE6               	movwf	postinc1,c
  1936  012ECA  0EFF               	movlw	high STR_8
  1937  012ECC  6EE6               	movwf	postinc1,c
  1938  012ECE  0E02               	movlw	2
  1939  012ED0  6EE6               	movwf	postinc1,c
  1940  012ED2  0E02               	movlw	2
  1941  012ED4  6EE6               	movwf	postinc1,c
  1942  012ED6  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  1943  012EDA  0060  F0D7  FFE6   	movff	btemp,postinc1
  1944  012EE0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1945  012EE6  0E04               	movlw	4
  1946  012EE8  6EE6               	movwf	postinc1,c
  1947  012EEA  EC03  F0B4         	call	_sprintf	;wreg free
  1948                           
  1949                           ;main.c: 204:    update_lcd(0);
  1950  012EEE  0E00               	movlw	0
  1951  012EF0  6EE6               	movwf	postinc1,c
  1952  012EF2  EC7C  F0B3         	call	_update_lcd	;wreg free
  1953                           
  1954                           ;main.c: 205:    WaitMs(3000);
  1955  012EF6  0EB8               	movlw	184
  1956  012EF8  6EE6               	movwf	postinc1,c
  1957  012EFA  0E0B               	movlw	11
  1958  012EFC  6EE6               	movwf	postinc1,c
  1959  012EFE  ECC4  F0BD         	call	_WaitMs	;wreg free
  1960                           
  1961                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 250);
  1962  012F02  0EFA               	movlw	250
  1963  012F04  6EE6               	movwf	postinc1,c
  1964  012F06  0E00               	movlw	0
  1965  012F08  6EE6               	movwf	postinc1,c
  1966  012F0A  0E0A               	movlw	10
  1967  012F0C  6EE6               	movwf	postinc1,c
  1968  012F0E  EC6E  F0BD         	call	_StartTimer	;wreg free
  1969                           
  1970                           ;main.c: 207:    StartTimer(TMR_ADC, 500);
  1971  012F12  0EF4               	movlw	244
  1972  012F14  6EE6               	movwf	postinc1,c
  1973  012F16  0E01               	movlw	1
  1974  012F18  6EE6               	movwf	postinc1,c
  1975  012F1A  0E01               	movlw	1
  1976  012F1C  6EE6               	movwf	postinc1,c
  1977  012F1E  EC6E  F0BD         	call	_StartTimer	;wreg free
  1978                           
  1979                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  1980  012F22  0EB8               	movlw	184
  1981  012F24  6EE6               	movwf	postinc1,c
  1982  012F26  0E0B               	movlw	11
  1983  012F28  6EE6               	movwf	postinc1,c
  1984  012F2A  0E07               	movlw	7
  1985  012F2C  6EE6               	movwf	postinc1,c
  1986  012F2E  EC6E  F0BD         	call	_StartTimer	;wreg free
  1987                           
  1988                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  1989  012F32  0EDC               	movlw	220
  1990  012F34  6EE6               	movwf	postinc1,c
  1991  012F36  0E05               	movlw	5
  1992  012F38  6EE6               	movwf	postinc1,c
  1993  012F3A  0E0B               	movlw	11
  1994  012F3C  6EE6               	movwf	postinc1,c
  1995  012F3E  EC6E  F0BD         	call	_StartTimer	;wreg free
  1996                           
  1997                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  1998  012F42  0EB8               	movlw	184
  1999  012F44  6EE6               	movwf	postinc1,c
  2000  012F46  0E0B               	movlw	11
  2001  012F48  6EE6               	movwf	postinc1,c
  2002  012F4A  0E09               	movlw	9
  2003  012F4C  6EE6               	movwf	postinc1,c
  2004  012F4E  EC6E  F0BD         	call	_StartTimer	;wreg free
  2005                           
  2006                           ;main.c: 212:    start_adc_scan();
  2007  012F52  EC99  F0BA         	call	_start_adc_scan	;wreg free
  2008                           
  2009                           ;main.c: 214:    break;
  2010  012F56  D016               	goto	l9966
  2011  012F58                     l1251:
  2012                           
  2013                           ; BSR set to: 2
  2014                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2015  012F58  6B00               	clrf	_V& (0+255),b	;volatile
  2016                           
  2017                           ;main.c: 222:    break;
  2018  012F5A  D014               	goto	l9966
  2019  012F5C                     l9964:
  2020  012F5C  0102               	movlb	2	; () banked
  2021  012F5E  5100               	movf	_V& (0+255),w,b	;volatile
  2022  012F60  6E3F               	movwf	(btemp+10)^0,c
  2023  012F62  6A40               	clrf	(btemp+11)^0,c
  2024                           
  2025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 1, Range of values is 0 to 0
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ;	Chosen strategy is simple_byte
  2032  012F64  5040               	movf	(btemp+11)^0,w,c
  2033  012F66  0A00               	xorlw	0	; case 0
  2034  012F68  A4D8               	btfss	status,2,c
  2035  012F6A  D7F6               	goto	l1251
  2036                           
  2037                           ; BSR set to: 2
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 4, Range of values is 0 to 4
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte           13     7 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  012F6C  503F               	movf	(btemp+10)^0,w,c
  2045  012F6E  0A00               	xorlw	0	; case 0
  2046  012F70  B4D8               	btfsc	status,2,c
  2047  012F72  D729               	goto	l9924
  2048  012F74  0A01               	xorlw	1	; case 1
  2049  012F76  B4D8               	btfsc	status,2,c
  2050  012F78  D005               	goto	l9966
  2051  012F7A  0A02               	xorlw	2	; case 3
  2052  012F7C  B4D8               	btfsc	status,2,c
  2053  012F7E  D002               	goto	l9966
  2054  012F80  0A07               	xorlw	7	; case 4
  2055  012F82  D7EA               	goto	l1251
  2056  012F84                     l9966:
  2057                           
  2058                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2059  012F84  0E01               	movlw	1
  2060  012F86  6EE6               	movwf	postinc1,c
  2061  012F88  EC21  F0C0         	call	_TimerDone	;wreg free
  2062  012F8C  5035               	movf	btemp^0,w,c
  2063  012F8E  B4D8               	btfsc	status,2,c
  2064  012F90  D179               	goto	l9978
  2065  012F92  ECB9  F0C1         	call	_check_adc_scan	;wreg free
  2066  012F96  5035               	movf	btemp^0,w,c
  2067  012F98  B4D8               	btfsc	status,2,c
  2068  012F9A  D174               	goto	l9978
  2069                           
  2070                           ;main.c: 229:    C.calc[C_BATT] = lp_filter(conv_raw_result(C_BATT, C_CONV1), C_BATT, 0)
      +                          ;
  2071  012F9C  0E00               	movlw	0
  2072  012F9E  6EE6               	movwf	postinc1,c
  2073  012FA0  0E00               	movlw	0
  2074  012FA2  6EE6               	movwf	postinc1,c
  2075  012FA4  0E00               	movlw	0
  2076  012FA6  6EE6               	movwf	postinc1,c
  2077  012FA8  0E00               	movlw	0
  2078  012FAA  6EE6               	movwf	postinc1,c
  2079  012FAC  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2080  012FB0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2081  012FB6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2082  012FBC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2083  012FC2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2084  012FC8  EC23  F0A9         	call	_lp_filter	;wreg free
  2085  012FCC  0060  F0D4  F100   	movff	btemp,_C
  2086  012FD2  0060  F0D8  F101   	movff	btemp+1,_C+1
  2087  012FD8  0060  F0DC  F102   	movff	btemp+2,_C+2
  2088  012FDE  0060  F0E0  F103   	movff	btemp+3,_C+3
  2089                           
  2090                           ;main.c: 230:    C.calc[C_PV] = lp_filter(conv_raw_result(C_PV, C_CONV2), C_PV, 0);
  2091  012FE4  0E00               	movlw	0
  2092  012FE6  6EE6               	movwf	postinc1,c
  2093  012FE8  0E01               	movlw	1
  2094  012FEA  6EE6               	movwf	postinc1,c
  2095  012FEC  0E01               	movlw	1
  2096  012FEE  6EE6               	movwf	postinc1,c
  2097  012FF0  0E01               	movlw	1
  2098  012FF2  6EE6               	movwf	postinc1,c
  2099  012FF4  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2100  012FF8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2101  012FFE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2102  013004  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2103  01300A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2104  013010  EC23  F0A9         	call	_lp_filter	;wreg free
  2105  013014  0060  F0D4  F104   	movff	btemp,_C+4
  2106  01301A  0060  F0D8  F105   	movff	btemp+1,_C+5
  2107  013020  0060  F0DC  F106   	movff	btemp+2,_C+6
  2108  013026  0060  F0E0  F107   	movff	btemp+3,_C+7
  2109                           
  2110                           ;main.c: 231:    C.calc[V_CC] = lp_filter(conv_raw_result(V_CC, V_CONV), V_CC, 0);
  2111  01302C  0E00               	movlw	0
  2112  01302E  6EE6               	movwf	postinc1,c
  2113  013030  0E02               	movlw	2
  2114  013032  6EE6               	movwf	postinc1,c
  2115  013034  0E02               	movlw	2
  2116  013036  6EE6               	movwf	postinc1,c
  2117  013038  0E02               	movlw	2
  2118  01303A  6EE6               	movwf	postinc1,c
  2119  01303C  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2120  013040  0060  F0D7  FFE6   	movff	btemp,postinc1
  2121  013046  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2122  01304C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2123  013052  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2124  013058  EC23  F0A9         	call	_lp_filter	;wreg free
  2125  01305C  0060  F0D4  F108   	movff	btemp,_C+8
  2126  013062  0060  F0D8  F109   	movff	btemp+1,_C+9
  2127  013068  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2128  01306E  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2129                           
  2130                           ;main.c: 232:    C.calc[V_BAT] = lp_filter(conv_raw_result(V_BAT, V_CONV), V_BAT, 0);
  2131  013074  0E00               	movlw	0
  2132  013076  6EE6               	movwf	postinc1,c
  2133  013078  0E04               	movlw	4
  2134  01307A  6EE6               	movwf	postinc1,c
  2135  01307C  0E02               	movlw	2
  2136  01307E  6EE6               	movwf	postinc1,c
  2137  013080  0E04               	movlw	4
  2138  013082  6EE6               	movwf	postinc1,c
  2139  013084  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2140  013088  0060  F0D7  FFE6   	movff	btemp,postinc1
  2141  01308E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2142  013094  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2143  01309A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2144  0130A0  EC23  F0A9         	call	_lp_filter	;wreg free
  2145  0130A4  0060  F0D4  F110   	movff	btemp,_C+16
  2146  0130AA  0060  F0D8  F111   	movff	btemp+1,_C+17
  2147  0130B0  0060  F0DC  F112   	movff	btemp+2,_C+18
  2148  0130B6  0060  F0E0  F113   	movff	btemp+3,_C+19
  2149                           
  2150                           ;main.c: 233:    C.calc[V_PV] = lp_filter(conv_raw_result(V_PV, V_CONV), V_PV, 0);
  2151  0130BC  0E00               	movlw	0
  2152  0130BE  6EE6               	movwf	postinc1,c
  2153  0130C0  0E05               	movlw	5
  2154  0130C2  6EE6               	movwf	postinc1,c
  2155  0130C4  0E02               	movlw	2
  2156  0130C6  6EE6               	movwf	postinc1,c
  2157  0130C8  0E05               	movlw	5
  2158  0130CA  6EE6               	movwf	postinc1,c
  2159  0130CC  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2160  0130D0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2161  0130D6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2162  0130DC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2163  0130E2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2164  0130E8  EC23  F0A9         	call	_lp_filter	;wreg free
  2165  0130EC  0060  F0D4  F114   	movff	btemp,_C+20
  2166  0130F2  0060  F0D8  F115   	movff	btemp+1,_C+21
  2167  0130F8  0060  F0DC  F116   	movff	btemp+2,_C+22
  2168  0130FE  0060  F0E0  F117   	movff	btemp+3,_C+23
  2169                           
  2170                           ;main.c: 234:    C.calc[V_CBUS] = lp_filter(conv_raw_result(V_CBUS, V_CONV), V_CBUS, 0);
  2171  013104  0E00               	movlw	0
  2172  013106  6EE6               	movwf	postinc1,c
  2173  013108  0E06               	movlw	6
  2174  01310A  6EE6               	movwf	postinc1,c
  2175  01310C  0E02               	movlw	2
  2176  01310E  6EE6               	movwf	postinc1,c
  2177  013110  0E06               	movlw	6
  2178  013112  6EE6               	movwf	postinc1,c
  2179  013114  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2180  013118  0060  F0D7  FFE6   	movff	btemp,postinc1
  2181  01311E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2182  013124  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2183  01312A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2184  013130  EC23  F0A9         	call	_lp_filter	;wreg free
  2185  013134  0060  F0D4  F118   	movff	btemp,_C+24
  2186  01313A  0060  F0D8  F119   	movff	btemp+1,_C+25
  2187  013140  0060  F0DC  F11A   	movff	btemp+2,_C+26
  2188  013146  0060  F0E0  F11B   	movff	btemp+3,_C+27
  2189                           
  2190                           ;main.c: 235:    C.calc[V_BBAT] = lp_filter(conv_raw_result(V_BBAT, V_CONV), V_BBAT, 0);
  2191  01314C  0E00               	movlw	0
  2192  01314E  6EE6               	movwf	postinc1,c
  2193  013150  0E0A               	movlw	10
  2194  013152  6EE6               	movwf	postinc1,c
  2195  013154  0E02               	movlw	2
  2196  013156  6EE6               	movwf	postinc1,c
  2197  013158  0E0A               	movlw	10
  2198  01315A  6EE6               	movwf	postinc1,c
  2199  01315C  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2200  013160  0060  F0D7  FFE6   	movff	btemp,postinc1
  2201  013166  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2202  01316C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2203  013172  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2204  013178  EC23  F0A9         	call	_lp_filter	;wreg free
  2205  01317C  0060  F0D4  F128   	movff	btemp,_C+40
  2206  013182  0060  F0D8  F129   	movff	btemp+1,_C+41
  2207  013188  0060  F0DC  F12A   	movff	btemp+2,_C+42
  2208  01318E  0060  F0E0  F12B   	movff	btemp+3,_C+43
  2209                           
  2210                           ;main.c: 236:    C.calc[V_TEMP] = lp_filter(conv_raw_result(V_TEMP, V_CONV), V_TEMP, 0);
  2211  013194  0E00               	movlw	0
  2212  013196  6EE6               	movwf	postinc1,c
  2213  013198  0E0B               	movlw	11
  2214  01319A  6EE6               	movwf	postinc1,c
  2215  01319C  0E02               	movlw	2
  2216  01319E  6EE6               	movwf	postinc1,c
  2217  0131A0  0E0B               	movlw	11
  2218  0131A2  6EE6               	movwf	postinc1,c
  2219  0131A4  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2220  0131A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2221  0131AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2222  0131B4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2223  0131BA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2224  0131C0  EC23  F0A9         	call	_lp_filter	;wreg free
  2225  0131C4  0060  F0D4  F12C   	movff	btemp,_C+44
  2226  0131CA  0060  F0D8  F12D   	movff	btemp+1,_C+45
  2227  0131D0  0060  F0DC  F12E   	movff	btemp+2,_C+46
  2228  0131D6  0060  F0E0  F12F   	movff	btemp+3,_C+47
  2229                           
  2230                           ;main.c: 237:    C.calc[V_INVERTER] = lp_filter(conv_raw_result(V_INVERTER, V_CONV), V_I
      +                          NVERTER, 0);
  2231  0131DC  0E00               	movlw	0
  2232  0131DE  6EE6               	movwf	postinc1,c
  2233  0131E0  0E0C               	movlw	12
  2234  0131E2  6EE6               	movwf	postinc1,c
  2235  0131E4  0E02               	movlw	2
  2236  0131E6  6EE6               	movwf	postinc1,c
  2237  0131E8  0E0C               	movlw	12
  2238  0131EA  6EE6               	movwf	postinc1,c
  2239  0131EC  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2240  0131F0  0060  F0D7  FFE6   	movff	btemp,postinc1
  2241  0131F6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2242  0131FC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2243  013202  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2244  013208  EC23  F0A9         	call	_lp_filter	;wreg free
  2245  01320C  0060  F0D4  F130   	movff	btemp,_C+48
  2246  013212  0060  F0D8  F131   	movff	btemp+1,_C+49
  2247  013218  0060  F0DC  F132   	movff	btemp+2,_C+50
  2248  01321E  0060  F0E0  F133   	movff	btemp+3,_C+51
  2249                           
  2250                           ;main.c: 238:    C.calc[channel_ANB5] = lp_filter(conv_raw_result(channel_ANB5, V_CONV),
      +                           channel_ANB5, 0);
  2251  013224  0E00               	movlw	0
  2252  013226  6EE6               	movwf	postinc1,c
  2253  013228  0E0D               	movlw	13
  2254  01322A  6EE6               	movwf	postinc1,c
  2255  01322C  0E02               	movlw	2
  2256  01322E  6EE6               	movwf	postinc1,c
  2257  013230  0E0D               	movlw	13
  2258  013232  6EE6               	movwf	postinc1,c
  2259  013234  ECDD  F0A3         	call	_conv_raw_result	;wreg free
  2260  013238  0060  F0D7  FFE6   	movff	btemp,postinc1
  2261  01323E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2262  013244  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2263  01324A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2264  013250  EC23  F0A9         	call	_lp_filter	;wreg free
  2265  013254  0060  F0D4  F134   	movff	btemp,_C+52
  2266  01325A  0060  F0D8  F135   	movff	btemp+1,_C+53
  2267  013260  0060  F0DC  F136   	movff	btemp+2,_C+54
  2268  013266  0060  F0E0  F137   	movff	btemp+3,_C+55
  2269                           
  2270                           ;main.c: 242:    clear_adc_scan();
  2271  01326C  ECC1  F0C1         	call	_clear_adc_scan	;wreg free
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 243:    start_adc_scan();
  2275  013270  EC99  F0BA         	call	_start_adc_scan	;wreg free
  2276                           
  2277                           ;main.c: 244:    StartTimer(TMR_ADC, 500);
  2278  013274  0EF4               	movlw	244
  2279  013276  6EE6               	movwf	postinc1,c
  2280  013278  0E01               	movlw	1
  2281  01327A  6EE6               	movwf	postinc1,c
  2282  01327C  0E01               	movlw	1
  2283  01327E  6EE6               	movwf	postinc1,c
  2284  013280  EC6E  F0BD         	call	_StartTimer	;wreg free
  2285  013284                     l9978:
  2286                           
  2287                           ;main.c: 251:   if (TimerDone(TMR_DISPLAY)) {
  2288                           
  2289                           ;main.c: 247:   if (V.ticks) {
  2290  013284  0E0A               	movlw	10
  2291  013286  6EE6               	movwf	postinc1,c
  2292  013288  EC21  F0C0         	call	_TimerDone	;wreg free
  2293  01328C  5035               	movf	btemp^0,w,c
  2294  01328E  B4D8               	btfsc	status,2,c
  2295  013290  D06B               	goto	l9994
  2296                           
  2297                           ;main.c: 252:    if (TimerDone(TMR_HELPDIS)) {
  2298  013292  0E09               	movlw	9
  2299  013294  6EE6               	movwf	postinc1,c
  2300  013296  EC21  F0C0         	call	_TimerDone	;wreg free
  2301  01329A  5035               	movf	btemp^0,w,c
  2302  01329C  B4D8               	btfsc	status,2,c
  2303  01329E  D004               	goto	l9986
  2304                           
  2305                           ;main.c: 253:     set_display_info(DIS_STR);
  2306  0132A0  0E00               	movlw	0
  2307  0132A2  6EE6               	movwf	postinc1,c
  2308  0132A4  EC96  F0C0         	call	_set_display_info	;wreg free
  2309  0132A8                     l9986:
  2310                           
  2311                           ;main.c: 255:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2312  0132A8  0060  F403  FFE6   	movff	_C,postinc1
  2313  0132AE  0060  F407  FFE6   	movff	_C+1,postinc1
  2314  0132B4  0060  F40B  FFE6   	movff	_C+2,postinc1
  2315  0132BA  0060  F40F  FFE6   	movff	_C+3,postinc1
  2316  0132C0  0E00               	movlw	0
  2317  0132C2  6EE6               	movwf	postinc1,c
  2318  0132C4  EC87  F0C0         	call	_get_raw_result	;wreg free
  2319  0132C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2320  0132CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2321  0132D4  0EB6               	movlw	low STR_9
  2322  0132D6  6EE6               	movwf	postinc1,c
  2323  0132D8  0EFF               	movlw	high STR_9
  2324  0132DA  6EE6               	movwf	postinc1,c
  2325  0132DC  0E00               	movlw	0
  2326  0132DE  6EE6               	movwf	postinc1,c
  2327  0132E0  0E01               	movlw	1
  2328  0132E2  6EE6               	movwf	postinc1,c
  2329  0132E4  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  2330  0132E8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2331  0132EE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2332  0132F4  0E0A               	movlw	10
  2333  0132F6  6EE6               	movwf	postinc1,c
  2334  0132F8  EC03  F0B4         	call	_sprintf	;wreg free
  2335                           
  2336                           ;main.c: 256:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2337  0132FC  0060  F423  FFE6   	movff	_C+8,postinc1
  2338  013302  0060  F427  FFE6   	movff	_C+9,postinc1
  2339  013308  0060  F42B  FFE6   	movff	_C+10,postinc1
  2340  01330E  0060  F42F  FFE6   	movff	_C+11,postinc1
  2341  013314  0E02               	movlw	2
  2342  013316  6EE6               	movwf	postinc1,c
  2343  013318  EC87  F0C0         	call	_get_raw_result	;wreg free
  2344  01331C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2345  013322  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2346  013328  0EB6               	movlw	low STR_9
  2347  01332A  6EE6               	movwf	postinc1,c
  2348  01332C  0EFF               	movlw	high STR_9
  2349  01332E  6EE6               	movwf	postinc1,c
  2350  013330  0E00               	movlw	0
  2351  013332  6EE6               	movwf	postinc1,c
  2352  013334  0E02               	movlw	2
  2353  013336  6EE6               	movwf	postinc1,c
  2354  013338  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  2355  01333C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2356  013342  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2357  013348  0E0A               	movlw	10
  2358  01334A  6EE6               	movwf	postinc1,c
  2359  01334C  EC03  F0B4         	call	_sprintf	;wreg free
  2360                           
  2361                           ;main.c: 257:    StartTimer(TMR_DISPLAY, 250);
  2362  013350  0EFA               	movlw	250
  2363  013352  6EE6               	movwf	postinc1,c
  2364  013354  0E00               	movlw	0
  2365  013356  6EE6               	movwf	postinc1,c
  2366  013358  0E0A               	movlw	10
  2367  01335A  6EE6               	movwf	postinc1,c
  2368  01335C  EC6E  F0BD         	call	_StartTimer	;wreg free
  2369                           
  2370                           ;main.c: 258:    update_lcd(0);
  2371  013360  0E00               	movlw	0
  2372  013362  6EE6               	movwf	postinc1,c
  2373  013364  EC7C  F0B3         	call	_update_lcd	;wreg free
  2374  013368                     l9994:
  2375                           
  2376                           ;main.c: 264:   check_help(V.flipper);
  2377  013368  0102               	movlb	2	; () banked
  2378  01336A  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2379  01336C  6EE6               	movwf	postinc1,c
  2380  01336E  EC72  F0AB         	call	_check_help	;wreg free
  2381                           
  2382                           ;main.c: 269:   if (V.set_sequ) {
  2383  013372  0102               	movlb	2	; () banked
  2384  013374  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2385  013376  D5F2               	goto	l9964
  2386                           
  2387                           ; BSR set to: 2
  2388                           ;main.c: 270:    if (TimerDone(TMR_INFO)) {
  2389  013378  0E07               	movlw	7
  2390  01337A  6EE6               	movwf	postinc1,c
  2391  01337C  EC21  F0C0         	call	_TimerDone	;wreg free
  2392  013380  5035               	movf	btemp^0,w,c
  2393  013382  B4D8               	btfsc	status,2,c
  2394  013384  D00B               	goto	l10006
  2395                           
  2396                           ;main.c: 271:     V.set_sequ = 0;
  2397  013386  0102               	movlb	2	; () banked
  2398  013388  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2399                           
  2400                           ; BSR set to: 2
  2401                           ;main.c: 272:     set_vterm(0);
  2402  01338A  0E00               	movlw	0
  2403  01338C  6EE6               	movwf	postinc1,c
  2404  01338E  ECE0  F0C0         	call	_set_vterm	;wreg free
  2405                           
  2406                           ; BSR set to: 4
  2407                           ;main.c: 273:     update_lcd(0);
  2408  013392  0E00               	movlw	0
  2409  013394  6EE6               	movwf	postinc1,c
  2410  013396  EC7C  F0B3         	call	_update_lcd	;wreg free
  2411                           
  2412                           ;main.c: 274:    } else {
  2413  01339A  D5E0               	goto	l9964
  2414  01339C                     l10006:
  2415                           
  2416                           ;main.c: 275:     set_vterm(2);
  2417  01339C  0E02               	movlw	2
  2418  01339E  6EE6               	movwf	postinc1,c
  2419  0133A0  ECE0  F0C0         	call	_set_vterm	;wreg free
  2420                           
  2421                           ; BSR set to: 4
  2422                           ;main.c: 276:     update_lcd(2);
  2423  0133A4  0E02               	movlw	2
  2424  0133A6  6EE6               	movwf	postinc1,c
  2425  0133A8  EC7C  F0B3         	call	_update_lcd	;wreg free
  2426  0133AC  D5D7               	goto	l9964
  2427  0133AE                     __end_of_main:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _start_adc_scan *****************
  2431 ;; Defined at:
  2432 ;;		line 29 in file "daq.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1  [STACK] _Bool 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/4
  2443 ;;		On exit  : 1/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    7
  2453 ;; This function calls:
  2454 ;;		_ADCC_SetADIInterruptHandler
  2455 ;;		_ADCC_SetADTIInterruptHandler
  2456 ;;		_ADCC_StartConversion
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text1
  2463  017532                     __ptext1:
  2464                           	opt callstack 0
  2465  017532                     _start_adc_scan:
  2466                           	opt callstack 23
  2467                           
  2468                           ;daq.c: 31:  if (R.done)
  2469                           
  2470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2471                           ;incstack = 0
  2472  017532  0100               	movlb	0	; () banked
  2473  017534  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2474  017536  A4D8               	btfss	status,2,c
  2475  017538  0012               	return	
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;daq.c: 34:  R.scan_index = 0;
  2479  01753A  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2483  01753C  013A               	movlb	58	; () banked
  2484  01753E  5140               	movf	64,w,b	;volatile
  2485  017540  006E F940  F035    	movff	14928,btemp	;volatile
  2486  017546  6A36               	clrf	(btemp+1)^0,c
  2487  017548  0060  F0D4  F036   	movff	btemp,btemp+1
  2488  01754E  6A35               	clrf	btemp^0,c
  2489  017550  2635               	addwf	btemp^0,f,c
  2490  017552  0E00               	movlw	0
  2491  017554  2236               	addwfc	(btemp+1)^0,f,c
  2492  017556  0E77               	movlw	119
  2493  017558  1435               	andwf	btemp^0,w,c
  2494  01755A  0100               	movlb	0	; () banked
  2495  01755C  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2496  01755E  0E3C               	movlw	60
  2497  017560  1436               	andwf	(btemp+1)^0,w,c
  2498  017562  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2502  017564  0E4A               	movlw	low _adc_int_handler
  2503  017566  6EE6               	movwf	postinc1,c
  2504  017568  0E81               	movlw	high _adc_int_handler
  2505  01756A  6EE6               	movwf	postinc1,c
  2506  01756C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2507  01756E  6EE6               	movwf	postinc1,c
  2508  017570  ECBE  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2509                           
  2510                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2511  017574  0E48               	movlw	low _adc_int_t_handler
  2512  017576  6EE6               	movwf	postinc1,c
  2513  017578  0E70               	movlw	high _adc_int_t_handler
  2514  01757A  6EE6               	movwf	postinc1,c
  2515  01757C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2516  01757E  6EE6               	movwf	postinc1,c
  2517  017580  ECAA  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2518                           
  2519                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2520  017584  0100               	movlb	0	; () banked
  2521  017586  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2522  017588  0B0F               	andlw	15
  2523  01758A  6EE6               	movwf	postinc1,c
  2524  01758C  EC64  F0C1         	call	_ADCC_StartConversion	;wreg free
  2525                           
  2526                           ; BSR set to: 62
  2527  017590  82BE               	bsf	190,1,c	;volatile
  2528                           
  2529                           ; BSR set to: 62
  2530  017592  84BE               	bsf	190,2,c	;volatile
  2531                           
  2532                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2533  017594  0012               	return		;funcret
  2534  017596                     __end_of_start_adc_scan:
  2535                           	opt callstack 0
  2536                           
  2537 ;; *************** function _ADCC_StartConversion *****************
  2538 ;; Defined at:
  2539 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  channel         1  [STACK] enum E16136
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1  [STACK] void 
  2546 ;; Registers used:
  2547 ;;		fsr1l, fsr1h
  2548 ;; Tracked objects:
  2549 ;;		On entry : 3F/0
  2550 ;;		On exit  : 3F/3E
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    6
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_start_adc_scan
  2564 ;;		_adc_int_t_handler
  2565 ;; This function uses a reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text2
  2569  0182C8                     __ptext2:
  2570                           	opt callstack 0
  2571  0182C8                     _ADCC_StartConversion:
  2572                           	opt callstack 6
  2573                           
  2574                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2575                           ;stkvar	_channel @ sp[(0)+-1]
  2576                           
  2577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2578                           ;incstack = 0
  2579  0182C8  0EFF               	movlw	-1
  2580  0182CA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2581                           
  2582                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2583  0182D0  013E               	movlb	62	; () banked
  2584  0182D2  8FF8               	bsf	248,7,b	;volatile
  2585                           
  2586                           ; BSR set to: 62
  2587                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2588  0182D4  81F8               	bsf	248,0,b	;volatile
  2589                           
  2590                           ; BSR set to: 62
  2591                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2592  0182D6  52E5               	movf	postdec1,f,c
  2593  0182D8  0012               	return		;funcret
  2594  0182DA                     __end_of_ADCC_StartConversion:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _srand *****************
  2598 ;; Defined at:
  2599 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  s               2  [STACK] unsigned int 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1  [STACK] void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2608 ;; Tracked objects:
  2609 ;;		On entry : 3F/0
  2610 ;;		On exit  : 3F/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    6
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text3
  2628  017BF4                     __ptext3:
  2629                           	opt callstack 0
  2630  017BF4                     _srand:
  2631                           	opt callstack 24
  2632                           
  2633                           ;stkvar	_s @ sp[(0)+-2]
  2634                           
  2635                           ; BSR set to: 62
  2636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2637                           ;incstack = 0
  2638  017BF4  0EFE               	movlw	-2
  2639  017BF6  50E3               	movf	plusw1,w,c
  2640  017BF8  0FFF               	addlw	255
  2641  017BFA  6E3F               	movwf	(btemp+10)^0,c
  2642  017BFC  0EFF               	movlw	-1
  2643  017BFE  006F FF8C  F040    	movff	plusw1,btemp+11
  2644  017C04  0EFF               	movlw	255
  2645  017C06  2240               	addwfc	(btemp+11)^0,f,c
  2646  017C08  0060  F0FC  F0BD   	movff	btemp+10,_seed
  2647  017C0E  0060  F100  F0BE   	movff	btemp+11,_seed+1
  2648  017C14  0100               	movlb	0	; () banked
  2649  017C16  6BBF               	clrf	(_seed+2)& (0+255),b
  2650  017C18  6BC0               	clrf	(_seed+3)& (0+255),b
  2651  017C1A  6BC1               	clrf	(_seed+4)& (0+255),b
  2652  017C1C  6BC2               	clrf	(_seed+5)& (0+255),b
  2653  017C1E  6BC3               	clrf	(_seed+6)& (0+255),b
  2654  017C20  6BC4               	clrf	(_seed+7)& (0+255),b
  2655                           
  2656                           ; BSR set to: 0
  2657                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2658  017C22  52E5               	movf	postdec1,f,c
  2659  017C24  52E5               	movf	postdec1,f,c
  2660  017C26  0012               	return		;funcret
  2661  017C28                     __end_of_srand:
  2662                           	opt callstack 0
  2663                           
  2664 ;; *************** function _lp_filter *****************
  2665 ;; Defined at:
  2666 ;;		line 3 in file "mbmc.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  new             4  [STACK] float 
  2669 ;;  bn              1  [STACK] unsigned char 
  2670 ;;  slow            1  [STACK] char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  4  [STACK] float 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/4
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    8
  2689 ;; This function calls:
  2690 ;;		___fladd
  2691 ;;		___fldiv
  2692 ;;		___flmul
  2693 ;;		___flsub
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text4
  2700  015246                     __ptext4:
  2701                           	opt callstack 0
  2702  015246                     _lp_filter:
  2703                           	opt callstack 22
  2704                           
  2705                           ;mbmc.c: 3: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 4: {;mbmc.c: 5: 
      +                           static float smooth[0xF], lp_speed, lp_x;;mbmc.c: 7:  if (bn > 0xF)
  2706                           ;stkvar	_bn @ sp[(0)+-5]
  2707                           
  2708                           ; BSR set to: 0
  2709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2710                           ;incstack = 0
  2711  015246  0EFB               	movlw	-5
  2712  015248  006F FF8C  F035    	movff	plusw1,btemp
  2713  01524E  0E0F               	movlw	15
  2714  015250  6435               	cpfsgt	btemp^0,c
  2715  015252  D011               	goto	l8560
  2716  015254                     u7940:
  2717                           
  2718                           ;mbmc.c: 8:   return new;
  2719                           ;stkvar	_new @ sp[(0)+-4]
  2720  015254  0EFC               	movlw	-4
  2721  015256  006F FF8C  F035    	movff	plusw1,btemp
  2722  01525C  0EFD               	movlw	-3
  2723  01525E  006F FF8C  F036    	movff	plusw1,btemp+1
  2724  015264  0EFE               	movlw	-2
  2725  015266  006F FF8C  F037    	movff	plusw1,btemp+2
  2726  01526C  0EFF               	movlw	-1
  2727  01526E  006F FF8C  F038    	movff	plusw1,btemp+3
  2728  015274  D112               	goto	l1680
  2729  015276                     l8560:
  2730                           
  2731                           ;mbmc.c: 9:  if (slow == (-1)) {
  2732                           ;stkvar	_slow @ sp[(0)+-6]
  2733  015276  0EFA               	movlw	-6
  2734  015278  28E3               	incf	plusw1,w,c
  2735  01527A  A4D8               	btfss	status,2,c
  2736  01527C  D012               	goto	l8568
  2737                           
  2738                           ;mbmc.c: 10:   smooth[bn] = 0.0;
  2739                           ;stkvar	_bn @ sp[(0)+-5]
  2740  01527E  0EFB               	movlw	-5
  2741  015280  50E3               	movf	plusw1,w,c
  2742  015282  0D04               	mullw	4
  2743  015284  0E68               	movlw	low lp_filter@smooth
  2744  015286  24F3               	addwf	243,w,c
  2745  015288  6ED9               	movwf	fsr2l,c
  2746  01528A  0E01               	movlw	high lp_filter@smooth
  2747  01528C  20F4               	addwfc	prodh,w,c
  2748  01528E  6EDA               	movwf	fsr2h,c
  2749  015290  0E00               	movlw	0
  2750  015292  6EDE               	movwf	postinc2,c
  2751  015294  0E00               	movlw	0
  2752  015296  6EDE               	movwf	postinc2,c
  2753  015298  0E00               	movlw	0
  2754  01529A  6EDE               	movwf	postinc2,c
  2755  01529C  0E00               	movlw	0
  2756  01529E  6EDD               	movwf	postdec2,c
  2757  0152A0  D7D9               	goto	u7940
  2758  0152A2                     l8568:
  2759                           
  2760                           ;mbmc.c: 13:  if (slow) {
  2761                           ;stkvar	_slow @ sp[(0)+-6]
  2762  0152A2  0EFA               	movlw	-6
  2763  0152A4  50E3               	movf	plusw1,w,c
  2764  0152A6  B4D8               	btfsc	status,2,c
  2765  0152A8  D009               	goto	l8572
  2766                           
  2767                           ;mbmc.c: 14:   lp_speed = 0.066;
  2768  0152AA  0E02               	movlw	2
  2769  0152AC  0100               	movlb	0	; () banked
  2770  0152AE  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2771  0152B0  0E2B               	movlw	43
  2772  0152B2  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2773  0152B4  0E87               	movlw	135
  2774  0152B6  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2775  0152B8  0E3D               	movlw	61
  2776  0152BA  D008               	goto	L1
  2777  0152BC                     l8572:
  2778                           
  2779                           ;mbmc.c: 16:   lp_speed = 0.333;
  2780  0152BC  0EFA               	movlw	250
  2781  0152BE  0100               	movlb	0	; () banked
  2782  0152C0  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2783  0152C2  0E7E               	movlw	126
  2784  0152C4  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2785  0152C6  0EAA               	movlw	170
  2786  0152C8  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2787  0152CA  0E3E               	movlw	62
  2788  0152CC                     L1:
  2789  0152CC  6FB5               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;mbmc.c: 18:  lp_x = ((smooth[bn]*1000.0) + (((new * 1000.0)-(smooth[bn]*1000.0)) * lp_s
      +                          peed)) / 1000.0;
  2793  0152CE  0E00               	movlw	0
  2794  0152D0  6EE6               	movwf	postinc1,c
  2795  0152D2  0E00               	movlw	0
  2796  0152D4  6EE6               	movwf	postinc1,c
  2797  0152D6  0E7A               	movlw	122
  2798  0152D8  6EE6               	movwf	postinc1,c
  2799  0152DA  0E44               	movlw	68
  2800  0152DC  6EE6               	movwf	postinc1,c
  2801  0152DE  0060  F2CB  FFE6   	movff	lp_filter@lp_speed,postinc1
  2802  0152E4  0060  F2CF  FFE6   	movff	lp_filter@lp_speed+1,postinc1
  2803  0152EA  0060  F2D3  FFE6   	movff	lp_filter@lp_speed+2,postinc1
  2804  0152F0  0060  F2D7  FFE6   	movff	lp_filter@lp_speed+3,postinc1
  2805  0152F6  0E00               	movlw	0
  2806  0152F8  6EE6               	movwf	postinc1,c
  2807  0152FA  0E00               	movlw	0
  2808  0152FC  6EE6               	movwf	postinc1,c
  2809  0152FE  0E7A               	movlw	122
  2810  015300  6EE6               	movwf	postinc1,c
  2811  015302  0E44               	movlw	68
  2812  015304  6EE6               	movwf	postinc1,c
  2813                           
  2814                           ;stkvar	_bn @ sp[(-12)+-5]
  2815  015306  0EEF               	movlw	-17
  2816  015308  50E3               	movf	plusw1,w,c
  2817  01530A  0D04               	mullw	4
  2818  01530C  0E68               	movlw	low lp_filter@smooth
  2819  01530E  24F3               	addwf	243,w,c
  2820  015310  6ED9               	movwf	fsr2l,c
  2821  015312  0E01               	movlw	high lp_filter@smooth
  2822  015314  20F4               	addwfc	prodh,w,c
  2823  015316  6EDA               	movwf	fsr2h,c
  2824  015318  006F FF7B FFE6     	movff	postinc2,postinc1
  2825  01531E  006F FF7B FFE6     	movff	postinc2,postinc1
  2826  015324  006F FF7B FFE6     	movff	postinc2,postinc1
  2827  01532A  006F FF7B FFE6     	movff	postinc2,postinc1
  2828  015330  ECC1  F08E         	call	___flmul	;wreg free
  2829  015334  0060  F0D7  FFE6   	movff	btemp,postinc1
  2830  01533A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2831  015340  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2832  015346  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2833  01534C  0E00               	movlw	0
  2834  01534E  6EE6               	movwf	postinc1,c
  2835  015350  0E00               	movlw	0
  2836  015352  6EE6               	movwf	postinc1,c
  2837  015354  0E7A               	movlw	122
  2838  015356  6EE6               	movwf	postinc1,c
  2839  015358  0E44               	movlw	68
  2840  01535A  6EE6               	movwf	postinc1,c
  2841                           
  2842                           ;stkvar	_new @ sp[(-16)+-4]
  2843  01535C  0EEC               	movlw	-20
  2844  01535E  006F FF8F FFE6     	movff	plusw1,postinc1
  2845  015364  006F FF8F FFE6     	movff	plusw1,postinc1
  2846  01536A  006F FF8F FFE6     	movff	plusw1,postinc1
  2847  015370  006F FF8F FFE6     	movff	plusw1,postinc1
  2848  015376  ECC1  F08E         	call	___flmul	;wreg free
  2849  01537A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2850  015380  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2851  015386  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2852  01538C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2853  015392  EC5C  F0BC         	call	___flsub	;wreg free
  2854  015396  0060  F0D7  FFE6   	movff	btemp,postinc1
  2855  01539C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2856  0153A2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2857  0153A8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2858  0153AE  ECC1  F08E         	call	___flmul	;wreg free
  2859  0153B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2860  0153B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2861  0153BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2862  0153C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2863  0153CA  0E00               	movlw	0
  2864  0153CC  6EE6               	movwf	postinc1,c
  2865  0153CE  0E00               	movlw	0
  2866  0153D0  6EE6               	movwf	postinc1,c
  2867  0153D2  0E7A               	movlw	122
  2868  0153D4  6EE6               	movwf	postinc1,c
  2869  0153D6  0E44               	movlw	68
  2870  0153D8  6EE6               	movwf	postinc1,c
  2871                           
  2872                           ;stkvar	_bn @ sp[(-12)+-5]
  2873  0153DA  0EEF               	movlw	-17
  2874  0153DC  50E3               	movf	plusw1,w,c
  2875  0153DE  0D04               	mullw	4
  2876  0153E0  0E68               	movlw	low lp_filter@smooth
  2877  0153E2  24F3               	addwf	243,w,c
  2878  0153E4  6ED9               	movwf	fsr2l,c
  2879  0153E6  0E01               	movlw	high lp_filter@smooth
  2880  0153E8  20F4               	addwfc	prodh,w,c
  2881  0153EA  6EDA               	movwf	fsr2h,c
  2882  0153EC  006F FF7B FFE6     	movff	postinc2,postinc1
  2883  0153F2  006F FF7B FFE6     	movff	postinc2,postinc1
  2884  0153F8  006F FF7B FFE6     	movff	postinc2,postinc1
  2885  0153FE  006F FF7B FFE6     	movff	postinc2,postinc1
  2886  015404  ECC1  F08E         	call	___flmul	;wreg free
  2887  015408  0060  F0D7  FFE6   	movff	btemp,postinc1
  2888  01540E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2889  015414  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2890  01541A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2891  015420  ECD6  F092         	call	___fladd	;wreg free
  2892  015424  0060  F0D7  FFE6   	movff	btemp,postinc1
  2893  01542A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2894  015430  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2895  015436  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2896  01543C  ECD7  F099         	call	___fldiv	;wreg free
  2897  015440  0060  F0D4  F0AE   	movff	btemp,lp_filter@lp_x
  2898  015446  0060  F0D8  F0AF   	movff	btemp+1,lp_filter@lp_x+1
  2899  01544C  0060  F0DC  F0B0   	movff	btemp+2,lp_filter@lp_x+2
  2900  015452  0060  F0E0  F0B1   	movff	btemp+3,lp_filter@lp_x+3
  2901                           
  2902                           ;mbmc.c: 19:  smooth[bn] = lp_x;
  2903                           ;stkvar	_bn @ sp[(0)+-5]
  2904  015458  0EFB               	movlw	-5
  2905  01545A  50E3               	movf	plusw1,w,c
  2906  01545C  0D04               	mullw	4
  2907  01545E  0E68               	movlw	low lp_filter@smooth
  2908  015460  24F3               	addwf	243,w,c
  2909  015462  6ED9               	movwf	fsr2l,c
  2910  015464  0E01               	movlw	high lp_filter@smooth
  2911  015466  20F4               	addwfc	prodh,w,c
  2912  015468  6EDA               	movwf	fsr2h,c
  2913  01546A  0060  F2BB  FFDE   	movff	lp_filter@lp_x,postinc2
  2914  015470  0060  F2BF  FFDE   	movff	lp_filter@lp_x+1,postinc2
  2915  015476  0060  F2C3  FFDE   	movff	lp_filter@lp_x+2,postinc2
  2916  01547C  0060  F2C7  FFDE   	movff	lp_filter@lp_x+3,postinc2
  2917                           
  2918                           ;mbmc.c: 20:  return lp_x;
  2919  015482  0060  F2B8  F035   	movff	lp_filter@lp_x,btemp
  2920  015488  0060  F2BC  F036   	movff	lp_filter@lp_x+1,btemp+1
  2921  01548E  0060  F2C0  F037   	movff	lp_filter@lp_x+2,btemp+2
  2922  015494  0060  F2C4  F038   	movff	lp_filter@lp_x+3,btemp+3
  2923  01549A                     l1680:
  2924                           
  2925                           ; _lp_filter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  2926  01549A  0EFA               	movlw	250
  2927  01549C  26E1               	addwf	fsr1l,f,c
  2928  01549E  0EFF               	movlw	255
  2929  0154A0  22E2               	addwfc	fsr1h,f,c
  2930  0154A2  0012               	return		;funcret
  2931  0154A4                     __end_of_lp_filter:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _init_display *****************
  2935 ;; Defined at:
  2936 ;;		line 37 in file "eadog.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1  [STACK] void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/2
  2947 ;;		On exit  : 3F/3D
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    8
  2957 ;; This function calls:
  2958 ;;		_ringBufS_init
  2959 ;;		_send_lcd_cmd
  2960 ;;		_send_lcd_cmd_long
  2961 ;;		_wdtdelay
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text5
  2968  016910                     __ptext5:
  2969                           	opt callstack 0
  2970  016910                     _init_display:
  2971                           	opt callstack 22
  2972                           
  2973                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2974                           
  2975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2976                           ;incstack = 0
  2977  016910  0E83               	movlw	low _ring_buf1
  2978  016912  0100               	movlb	0	; () banked
  2979  016914  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2980  016916  0E03               	movlw	high _ring_buf1
  2981  016918  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2982                           
  2983                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2984  01691A  0E40               	movlw	low _ring_buf2
  2985  01691C  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2986  01691E  0E03               	movlw	high _ring_buf2
  2987  016920  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2991  016922  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2992  016928  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2993  01692E  ECF6  F0BE         	call	_ringBufS_init	;wreg free
  2994                           
  2995                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2996  016932  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2997  016938  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2998  01693E  ECF6  F0BE         	call	_ringBufS_init	;wreg free
  2999                           
  3000                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3001  016942  84BE               	bsf	190,2,c	;volatile
  3002  016944  84BC               	bsf	188,2,c	;volatile
  3003                           
  3004                           ;eadog.c: 46:  wdtdelay(350000);
  3005  016946  0E30               	movlw	48
  3006  016948  6EE6               	movwf	postinc1,c
  3007  01694A  0E57               	movlw	87
  3008  01694C  6EE6               	movwf	postinc1,c
  3009  01694E  0E05               	movlw	5
  3010  016950  6EE6               	movwf	postinc1,c
  3011  016952  0E00               	movlw	0
  3012  016954  6EE6               	movwf	postinc1,c
  3013  016956  EC8C  F0BB         	call	_wdtdelay	;wreg free
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3017  01695A  0E39               	movlw	57
  3018  01695C  6EE6               	movwf	postinc1,c
  3019  01695E  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3023  016962  0E1D               	movlw	29
  3024  016964  6EE6               	movwf	postinc1,c
  3025  016966  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3029  01696A  0E50               	movlw	80
  3030  01696C  6EE6               	movwf	postinc1,c
  3031  01696E  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3035  016972  0E6C               	movlw	108
  3036  016974  6EE6               	movwf	postinc1,c
  3037  016976  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3041  01697A  0E76               	movlw	118
  3042  01697C  6EE6               	movwf	postinc1,c
  3043  01697E  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3047  016982  0E38               	movlw	56
  3048  016984  6EE6               	movwf	postinc1,c
  3049  016986  ECCE  F0BE         	call	_send_lcd_cmd_long	;wreg free
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3053  01698A  0E0F               	movlw	15
  3054  01698C  6EE6               	movwf	postinc1,c
  3055  01698E  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3059  016992  0E01               	movlw	1
  3060  016994  6EE6               	movwf	postinc1,c
  3061  016996  ECCE  F0BE         	call	_send_lcd_cmd_long	;wreg free
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3065  01699A  0E02               	movlw	2
  3066  01699C  6EE6               	movwf	postinc1,c
  3067  01699E  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3071  0169A2  0E06               	movlw	6
  3072  0169A4  6EE6               	movwf	postinc1,c
  3073  0169A6  ECE2  F0BE         	call	_send_lcd_cmd	;wreg free
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;eadog.c: 57:  wdtdelay(30);
  3077  0169AA  0E1E               	movlw	30
  3078  0169AC  6EE6               	movwf	postinc1,c
  3079  0169AE  0E00               	movlw	0
  3080  0169B0  6EE6               	movwf	postinc1,c
  3081  0169B2  0E00               	movlw	0
  3082  0169B4  6EE6               	movwf	postinc1,c
  3083  0169B6  0E00               	movlw	0
  3084  0169B8  6EE6               	movwf	postinc1,c
  3085  0169BA  EC8C  F0BB         	call	_wdtdelay	;wreg free
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3089  0169BE  0E02               	movlw	2
  3090  0169C0  013D               	movlb	61	; () banked
  3091  0169C2  6F16               	movwf	22,b	;volatile
  3092                           
  3093                           ; BSR set to: 61
  3094                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3095  0169C4  0E40               	movlw	64
  3096  0169C6  6F15               	movwf	21,b	;volatile
  3097                           
  3098                           ; BSR set to: 61
  3099                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3100  0169C8  0E83               	movlw	131
  3101  0169CA  6F14               	movwf	20,b	;volatile
  3102                           
  3103                           ; BSR set to: 61
  3104                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3105  0169CC  931A               	bcf	26,1,b	;volatile
  3106                           
  3107                           ; BSR set to: 61
  3108                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3109  0169CE  0E3F               	movlw	-193
  3110  0169D0  013B               	movlb	59	; () banked
  3111  0169D2  17FD               	andwf	253,f,b	;volatile
  3112                           
  3113                           ; BSR set to: 59
  3114                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3115  0169D4  9BFD               	bcf	253,5,b	;volatile
  3116                           
  3117                           ; BSR set to: 59
  3118                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3119  0169D6  51FD               	movf	253,w,b	;volatile
  3120  0169D8  0BF9               	andlw	-7
  3121  0169DA  0902               	iorlw	2
  3122  0169DC  6FFD               	movwf	253,b	;volatile
  3123                           
  3124                           ; BSR set to: 59
  3125                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3126  0169DE  0EE7               	movlw	-25
  3127  0169E0  17FD               	andwf	253,f,b	;volatile
  3128                           
  3129                           ; BSR set to: 59
  3130                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3131  0169E2  81FD               	bsf	253,0,b	;volatile
  3132                           
  3133                           ; BSR set to: 59
  3134                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3135  0169E4  0E83               	movlw	low _ring_buf1
  3136  0169E6  6FF9               	movwf	249,b	;volatile
  3137  0169E8  0E03               	movlw	high _ring_buf1
  3138  0169EA  6FFA               	movwf	250,b	;volatile
  3139  0169EC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3140  0169EE  6FFB               	movwf	251,b	;volatile
  3141                           
  3142                           ; BSR set to: 59
  3143                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3144  0169F0  9BFC               	bcf	252,5,b	;volatile
  3145                           
  3146                           ; BSR set to: 59
  3147                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3148  0169F2  013D               	movlb	61	; () banked
  3149  0169F4  831A               	bsf	26,1,b	;volatile
  3150                           
  3151                           ; BSR set to: 61
  3152                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3153  0169F6  94BE               	bcf	190,2,c	;volatile
  3154                           
  3155                           ; BSR set to: 61
  3156                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3157  0169F8  0012               	return		;funcret
  3158  0169FA                     __end_of_init_display:
  3159                           	opt callstack 0
  3160                           
  3161 ;; *************** function _send_lcd_cmd_long *****************
  3162 ;; Defined at:
  3163 ;;		line 114 in file "eadog.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  cmd             1  [STACK] const unsigned char 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1  [STACK] void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3172 ;; Tracked objects:
  3173 ;;		On entry : 3F/0
  3174 ;;		On exit  : 3F/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    7
  3184 ;; This function calls:
  3185 ;;		_SPI1_Exchange8bit
  3186 ;;		_wdtdelay
  3187 ;; This function is called by:
  3188 ;;		_init_display
  3189 ;; This function uses a reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text6
  3193  017D9C                     __ptext6:
  3194                           	opt callstack 0
  3195  017D9C                     _send_lcd_cmd_long:
  3196                           	opt callstack 22
  3197                           
  3198                           ; BSR set to: 61
  3199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3200                           ;incstack = 0
  3201                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3202  017D9C  92BC               	bcf	188,1,c	;volatile
  3203                           
  3204                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3205  017D9E  94BC               	bcf	188,2,c	;volatile
  3206                           
  3207                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3208                           ;stkvar	_cmd @ sp[(0)+-1]
  3209  017DA0  0EFF               	movlw	-1
  3210  017DA2  50E3               	movf	plusw1,w,c
  3211  017DA4  6EE6               	movwf	postinc1,c
  3212  017DA6  EC78  F0C0         	call	_SPI1_Exchange8bit	;wreg free
  3213                           
  3214                           ; BSR set to: 57
  3215                           ;eadog.c: 119:  wdtdelay(800);
  3216  017DAA  0E20               	movlw	32
  3217  017DAC  6EE6               	movwf	postinc1,c
  3218  017DAE  0E03               	movlw	3
  3219  017DB0  6EE6               	movwf	postinc1,c
  3220  017DB2  0E00               	movlw	0
  3221  017DB4  6EE6               	movwf	postinc1,c
  3222  017DB6  0E00               	movlw	0
  3223  017DB8  6EE6               	movwf	postinc1,c
  3224  017DBA  EC8C  F0BB         	call	_wdtdelay	;wreg free
  3225                           
  3226                           ; BSR set to: 0
  3227  017DBE  82BC               	bsf	188,1,c	;volatile
  3228                           
  3229                           ; BSR set to: 0
  3230                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3231  017DC0  52E5               	movf	postdec1,f,c
  3232  017DC2  0012               	return		;funcret
  3233  017DC4                     __end_of_send_lcd_cmd_long:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _send_lcd_cmd *****************
  3237 ;; Defined at:
  3238 ;;		line 102 in file "eadog.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  cmd             1  [STACK] const unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1  [STACK] void 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3247 ;; Tracked objects:
  3248 ;;		On entry : 3F/0
  3249 ;;		On exit  : 3F/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    7
  3259 ;; This function calls:
  3260 ;;		_SPI1_Exchange8bit
  3261 ;;		_wdtdelay
  3262 ;; This function is called by:
  3263 ;;		_init_display
  3264 ;; This function uses a reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text7
  3268  017DC4                     __ptext7:
  3269                           	opt callstack 0
  3270  017DC4                     _send_lcd_cmd:
  3271                           	opt callstack 22
  3272                           
  3273                           ; BSR set to: 0
  3274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3275                           ;incstack = 0
  3276                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3277  017DC4  92BC               	bcf	188,1,c	;volatile
  3278                           
  3279                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3280  017DC6  94BC               	bcf	188,2,c	;volatile
  3281                           
  3282                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3283                           ;stkvar	_cmd @ sp[(0)+-1]
  3284  017DC8  0EFF               	movlw	-1
  3285  017DCA  50E3               	movf	plusw1,w,c
  3286  017DCC  6EE6               	movwf	postinc1,c
  3287  017DCE  EC78  F0C0         	call	_SPI1_Exchange8bit	;wreg free
  3288                           
  3289                           ; BSR set to: 57
  3290                           ;eadog.c: 107:  wdtdelay(30);
  3291  017DD2  0E1E               	movlw	30
  3292  017DD4  6EE6               	movwf	postinc1,c
  3293  017DD6  0E00               	movlw	0
  3294  017DD8  6EE6               	movwf	postinc1,c
  3295  017DDA  0E00               	movlw	0
  3296  017DDC  6EE6               	movwf	postinc1,c
  3297  017DDE  0E00               	movlw	0
  3298  017DE0  6EE6               	movwf	postinc1,c
  3299  017DE2  EC8C  F0BB         	call	_wdtdelay	;wreg free
  3300                           
  3301                           ; BSR set to: 0
  3302  017DE6  82BC               	bsf	188,1,c	;volatile
  3303                           
  3304                           ; BSR set to: 0
  3305                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3306  017DE8  52E5               	movf	postdec1,f,c
  3307  017DEA  0012               	return		;funcret
  3308  017DEC                     __end_of_send_lcd_cmd:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _SPI1_Exchange8bit *****************
  3312 ;; Defined at:
  3313 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  data            1  [STACK] unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1  [STACK] unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 3F/39
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    6
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_send_lcd_cmd
  3338 ;;		_send_lcd_cmd_long
  3339 ;; This function uses a reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text8
  3343  0180F0                     __ptext8:
  3344                           	opt callstack 0
  3345  0180F0                     _SPI1_Exchange8bit:
  3346                           	opt callstack 22
  3347                           
  3348                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3349                           
  3350                           ; BSR set to: 0
  3351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3352                           ;incstack = 0
  3353  0180F0  0E01               	movlw	1
  3354  0180F2  013D               	movlb	61	; () banked
  3355  0180F4  6F12               	movwf	18,b	;volatile
  3356                           
  3357                           ; BSR set to: 61
  3358                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3359                           ;stkvar	_data @ sp[(0)+-1]
  3360  0180F6  0EFF               	movlw	-1
  3361  0180F8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3362  0180FE                     l835:
  3363                           
  3364                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3365  0180FE  0139               	movlb	57	; () banked
  3366  018100  A9A2               	btfss	162,4,b	;volatile
  3367  018102  D7FD               	goto	l835
  3368                           
  3369                           ; BSR set to: 57
  3370                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3371  018104  006F F440  F035    	movff	15632,btemp	;volatile
  3372                           
  3373                           ; BSR set to: 57
  3374                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3375  01810A  52E5               	movf	postdec1,f,c
  3376  01810C  0012               	return		;funcret
  3377  01810E                     __end_of_SPI1_Exchange8bit:
  3378                           	opt callstack 0
  3379                           
  3380 ;; *************** function _ringBufS_init *****************
  3381 ;; Defined at:
  3382 ;;		line 22 in file "ringbufs.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  _this           2  [STACK] PTR volatile struct ring
  3385 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1  [STACK] void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    7
  3404 ;; This function calls:
  3405 ;;		_memset
  3406 ;; This function is called by:
  3407 ;;		_init_display
  3408 ;; This function uses a reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text9
  3412  017DEC                     __ptext9:
  3413                           	opt callstack 0
  3414  017DEC                     _ringBufS_init:
  3415                           	opt callstack 22
  3416                           
  3417                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3418                           
  3419                           ; BSR set to: 57
  3420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3421                           ;incstack = 0
  3422  017DEC  0E43               	movlw	67
  3423  017DEE  6EE6               	movwf	postinc1,c
  3424  017DF0  0E00               	movlw	0
  3425  017DF2  6EE6               	movwf	postinc1,c
  3426  017DF4  0E00               	movlw	0
  3427  017DF6  6EE6               	movwf	postinc1,c
  3428  017DF8  0E00               	movlw	0
  3429  017DFA  6EE6               	movwf	postinc1,c
  3430                           
  3431                           ;stkvar	__this @ sp[(-4)+-2]
  3432  017DFC  0EFA               	movlw	-6
  3433  017DFE  006F FF8F FFE6     	movff	plusw1,postinc1
  3434  017E04  006F FF8F FFE6     	movff	plusw1,postinc1
  3435  017E0A  EC67  F0A2         	call	_memset	;wreg free
  3436                           
  3437                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3438  017E0E  52E5               	movf	postdec1,f,c
  3439  017E10  52E5               	movf	postdec1,f,c
  3440  017E12  0012               	return		;funcret
  3441  017E14                     __end_of_ringBufS_init:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _eaDogM_WriteCommand *****************
  3445 ;; Defined at:
  3446 ;;		line 160 in file "eadog.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  cmd             1  [STACK] const unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1  [STACK] void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3455 ;; Tracked objects:
  3456 ;;		On entry : 3F/3D
  3457 ;;		On exit  : 3F/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:   16
  3467 ;; This function calls:
  3468 ;;		_send_lcd_cmd_dma
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;; This function uses a reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text10
  3475  0182EA                     __ptext10:
  3476                           	opt callstack 0
  3477  0182EA                     _eaDogM_WriteCommand:
  3478                           	opt callstack 14
  3479                           
  3480                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3481                           ;stkvar	_cmd @ sp[(0)+-1]
  3482                           
  3483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3484                           ;incstack = 0
  3485  0182EA  0EFF               	movlw	-1
  3486  0182EC  50E3               	movf	plusw1,w,c
  3487  0182EE  6EE6               	movwf	postinc1,c
  3488  0182F0  ECE6  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  3489                           
  3490                           ; BSR set to: 0
  3491                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3492  0182F4  52E5               	movf	postdec1,f,c
  3493  0182F6  0012               	return		;funcret
  3494  0182F8                     __end_of_eaDogM_WriteCommand:
  3495                           	opt callstack 0
  3496                           
  3497 ;; *************** function _conv_raw_result *****************
  3498 ;; Defined at:
  3499 ;;		line 71 in file "daq.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  chan            1  [STACK] enum E16136
  3502 ;;  to_what         1  [STACK] enum E16198
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4  [STACK] float 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/4
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    7
  3521 ;; This function calls:
  3522 ;;		___fladd
  3523 ;;		___fldiv
  3524 ;;		___flmul
  3525 ;;		___xxtofl
  3526 ;;		_get_raw_result
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text11
  3533  0147BA                     __ptext11:
  3534                           	opt callstack 0
  3535  0147BA                     _conv_raw_result:
  3536                           	opt callstack 23
  3537                           
  3538                           ;daq.c: 71: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 72: {;
      +                          daq.c: 73:  switch (to_what) {
  3539                           
  3540                           ; BSR set to: 0
  3541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3542                           ;incstack = 0
  3543  0147BA  D153               	goto	l8544
  3544  0147BC                     l8512:
  3545                           
  3546                           ;daq.c: 75:   return 25.0;
  3547  0147BC  0E00               	movlw	0
  3548  0147BE  6E35               	movwf	btemp^0,c
  3549  0147C0  0E00               	movlw	0
  3550  0147C2  6E36               	movwf	(btemp+1)^0,c
  3551  0147C4  0EC8               	movlw	200
  3552  0147C6  6E37               	movwf	(btemp+2)^0,c
  3553  0147C8  0E41               	movlw	65
  3554  0147CA  D149               	goto	L2
  3555  0147CC                     l8518:
  3556                           
  3557                           ;daq.c: 78:   return(((float) get_raw_result(chan) * 1.25) - 2493.0) * 59.30 / 1000.0;
  3558  0147CC  0E00               	movlw	0
  3559  0147CE  6EE6               	movwf	postinc1,c
  3560  0147D0  0E00               	movlw	0
  3561  0147D2  6EE6               	movwf	postinc1,c
  3562  0147D4  0E7A               	movlw	122
  3563  0147D6  6EE6               	movwf	postinc1,c
  3564  0147D8  0E44               	movlw	68
  3565  0147DA  6EE6               	movwf	postinc1,c
  3566  0147DC  0E33               	movlw	51
  3567  0147DE  6EE6               	movwf	postinc1,c
  3568  0147E0  0E33               	movlw	51
  3569  0147E2  6EE6               	movwf	postinc1,c
  3570  0147E4  0E6D               	movlw	109
  3571  0147E6  6EE6               	movwf	postinc1,c
  3572  0147E8  0E42               	movlw	66
  3573  0147EA  6EE6               	movwf	postinc1,c
  3574  0147EC  0E00               	movlw	0
  3575  0147EE  6EE6               	movwf	postinc1,c
  3576  0147F0  0ED0               	movlw	208
  3577  0147F2  6EE6               	movwf	postinc1,c
  3578  0147F4  0E1B               	movlw	27
  3579  0147F6  6EE6               	movwf	postinc1,c
  3580  0147F8  0EC5               	movlw	197
  3581  0147FA  6EE6               	movwf	postinc1,c
  3582  0147FC  0E00               	movlw	0
  3583  0147FE  6EE6               	movwf	postinc1,c
  3584  014800  0E00               	movlw	0
  3585  014802  6EE6               	movwf	postinc1,c
  3586  014804  0EA0               	movlw	160
  3587  014806  6EE6               	movwf	postinc1,c
  3588  014808  0E3F               	movlw	63
  3589  01480A  6EE6               	movwf	postinc1,c
  3590                           
  3591                           ;stkvar	_chan @ sp[(-16)+-1]
  3592  01480C  0EEF               	movlw	-17
  3593  01480E  50E3               	movf	plusw1,w,c
  3594  014810  6EE6               	movwf	postinc1,c
  3595  014812  EC87  F0C0         	call	_get_raw_result	;wreg free
  3596  014816  0060  F0D4  F03F   	movff	btemp,btemp+10
  3597  01481C  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3598  014822  503F               	movf	(btemp+10)^0,w,c
  3599  014824  6E39               	movwf	(btemp+4)^0,c
  3600  014826  5040               	movf	(btemp+11)^0,w,c
  3601  014828  6E3A               	movwf	(btemp+5)^0,c
  3602  01482A  6A3B               	clrf	(btemp+6)^0,c
  3603  01482C  6A3C               	clrf	(btemp+7)^0,c
  3604  01482E  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3605  014834  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3606  01483A  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3607  014840  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3608  014846  0E00               	movlw	0
  3609  014848  6EE6               	movwf	postinc1,c
  3610  01484A  EC7B  F0AC         	call	___xxtofl	;wreg free
  3611  01484E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3612  014854  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3613  01485A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3614  014860  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3615  014866  ECC1  F08E         	call	___flmul	;wreg free
  3616  01486A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3617  014870  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3618  014876  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3619  01487C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3620  014882  ECD6  F092         	call	___fladd	;wreg free
  3621  014886  0060  F0D7  FFE6   	movff	btemp,postinc1
  3622  01488C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3623  014892  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3624  014898  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3625  01489E  ECC1  F08E         	call	___flmul	;wreg free
  3626  0148A2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3627  0148A8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3628  0148AE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3629  0148B4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3630  0148BA  ECD7  F099         	call	___fldiv	;wreg free
  3631  0148BE  D0E7               	goto	l1650
  3632  0148C0                     l8524:
  3633                           
  3634                           ;daq.c: 81:   return(((float) get_raw_result(chan) * 1.25) - 2500.0) * 30.00 / 1000.0;
  3635  0148C0  0E00               	movlw	0
  3636  0148C2  6EE6               	movwf	postinc1,c
  3637  0148C4  0E00               	movlw	0
  3638  0148C6  6EE6               	movwf	postinc1,c
  3639  0148C8  0E7A               	movlw	122
  3640  0148CA  6EE6               	movwf	postinc1,c
  3641  0148CC  0E44               	movlw	68
  3642  0148CE  6EE6               	movwf	postinc1,c
  3643  0148D0  0E00               	movlw	0
  3644  0148D2  6EE6               	movwf	postinc1,c
  3645  0148D4  0E00               	movlw	0
  3646  0148D6  6EE6               	movwf	postinc1,c
  3647  0148D8  0EF0               	movlw	240
  3648  0148DA  6EE6               	movwf	postinc1,c
  3649  0148DC  0E41               	movlw	65
  3650  0148DE  6EE6               	movwf	postinc1,c
  3651  0148E0  0E00               	movlw	0
  3652  0148E2  6EE6               	movwf	postinc1,c
  3653  0148E4  0E40               	movlw	64
  3654  0148E6  6EE6               	movwf	postinc1,c
  3655  0148E8  0E1C               	movlw	28
  3656  0148EA  6EE6               	movwf	postinc1,c
  3657  0148EC  0EC5               	movlw	197
  3658  0148EE  6EE6               	movwf	postinc1,c
  3659  0148F0  0E00               	movlw	0
  3660  0148F2  6EE6               	movwf	postinc1,c
  3661  0148F4  0E00               	movlw	0
  3662  0148F6  6EE6               	movwf	postinc1,c
  3663  0148F8  0EA0               	movlw	160
  3664  0148FA  6EE6               	movwf	postinc1,c
  3665  0148FC  0E3F               	movlw	63
  3666  0148FE  6EE6               	movwf	postinc1,c
  3667                           
  3668                           ;stkvar	_chan @ sp[(-16)+-1]
  3669  014900  0EEF               	movlw	-17
  3670  014902  50E3               	movf	plusw1,w,c
  3671  014904  6EE6               	movwf	postinc1,c
  3672  014906  EC87  F0C0         	call	_get_raw_result	;wreg free
  3673  01490A  0060  F0D4  F03F   	movff	btemp,btemp+10
  3674  014910  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3675  014916  503F               	movf	(btemp+10)^0,w,c
  3676  014918  6E39               	movwf	(btemp+4)^0,c
  3677  01491A  5040               	movf	(btemp+11)^0,w,c
  3678  01491C  6E3A               	movwf	(btemp+5)^0,c
  3679  01491E  6A3B               	clrf	(btemp+6)^0,c
  3680  014920  6A3C               	clrf	(btemp+7)^0,c
  3681  014922  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3682  014928  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3683  01492E  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3684  014934  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3685  01493A  0E00               	movlw	0
  3686  01493C  6EE6               	movwf	postinc1,c
  3687  01493E  EC7B  F0AC         	call	___xxtofl	;wreg free
  3688  014942  0060  F0D7  FFE6   	movff	btemp,postinc1
  3689  014948  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3690  01494E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3691  014954  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3692  01495A  ECC1  F08E         	call	___flmul	;wreg free
  3693  01495E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3694  014964  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3695  01496A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3696  014970  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3697  014976  ECD6  F092         	call	___fladd	;wreg free
  3698  01497A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3699  014980  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3700  014986  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3701  01498C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3702  014992  ECC1  F08E         	call	___flmul	;wreg free
  3703  014996  0060  F0D7  FFE6   	movff	btemp,postinc1
  3704  01499C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3705  0149A2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3706  0149A8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3707  0149AE  ECD7  F099         	call	___fldiv	;wreg free
  3708  0149B2  D06D               	goto	l1650
  3709  0149B4                     l8530:
  3710                           
  3711                           ;daq.c: 84:   return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3712  0149B4  0E00               	movlw	0
  3713  0149B6  6EE6               	movwf	postinc1,c
  3714  0149B8  0E00               	movlw	0
  3715  0149BA  6EE6               	movwf	postinc1,c
  3716  0149BC  0E7A               	movlw	122
  3717  0149BE  6EE6               	movwf	postinc1,c
  3718  0149C0  0E44               	movlw	68
  3719  0149C2  6EE6               	movwf	postinc1,c
  3720  0149C4  0E61               	movlw	97
  3721  0149C6  6EE6               	movwf	postinc1,c
  3722  0149C8  0E03               	movlw	3
  3723  0149CA  6EE6               	movwf	postinc1,c
  3724  0149CC  0E04               	movlw	4
  3725  0149CE  6EE6               	movwf	postinc1,c
  3726  0149D0  0E41               	movlw	65
  3727  0149D2  6EE6               	movwf	postinc1,c
  3728                           
  3729                           ;stkvar	_chan @ sp[(-8)+-1]
  3730  0149D4  0EF7               	movlw	-9
  3731  0149D6  50E3               	movf	plusw1,w,c
  3732  0149D8  6EE6               	movwf	postinc1,c
  3733  0149DA  EC87  F0C0         	call	_get_raw_result	;wreg free
  3734  0149DE  0060  F0D4  F03F   	movff	btemp,btemp+10
  3735  0149E4  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3736  0149EA  503F               	movf	(btemp+10)^0,w,c
  3737  0149EC  6E39               	movwf	(btemp+4)^0,c
  3738  0149EE  5040               	movf	(btemp+11)^0,w,c
  3739  0149F0  6E3A               	movwf	(btemp+5)^0,c
  3740  0149F2  6A3B               	clrf	(btemp+6)^0,c
  3741  0149F4  6A3C               	clrf	(btemp+7)^0,c
  3742  0149F6  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3743  0149FC  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3744  014A02  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3745  014A08  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3746  014A0E  0E00               	movlw	0
  3747  014A10  6EE6               	movwf	postinc1,c
  3748  014A12  EC7B  F0AC         	call	___xxtofl	;wreg free
  3749  014A16  0060  F0D7  FFE6   	movff	btemp,postinc1
  3750  014A1C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3751  014A22  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3752  014A28  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3753  014A2E  ECC1  F08E         	call	___flmul	;wreg free
  3754  014A32  0060  F0D7  FFE6   	movff	btemp,postinc1
  3755  014A38  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3756  014A3E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3757  014A44  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3758  014A4A  ECD7  F099         	call	___fldiv	;wreg free
  3759  014A4E  D01F               	goto	l1650
  3760  014A50                     l8536:
  3761                           
  3762                           ;daq.c: 87:   return 0.0;
  3763  014A50  0E00               	movlw	0
  3764  014A52  6E35               	movwf	btemp^0,c
  3765  014A54  0E00               	movlw	0
  3766  014A56  6E36               	movwf	(btemp+1)^0,c
  3767  014A58  0E00               	movlw	0
  3768  014A5A  6E37               	movwf	(btemp+2)^0,c
  3769  014A5C  0E00               	movlw	0
  3770  014A5E                     L2:
  3771  014A5E  6E38               	movwf	(btemp+3)^0,c
  3772  014A60  D016               	goto	l1650
  3773  014A62                     l8544:
  3774                           
  3775                           ;stkvar	_to_what @ sp[(0)+-2]
  3776  014A62  0EFE               	movlw	-2
  3777  014A64  50E3               	movf	plusw1,w,c
  3778  014A66  6E3F               	movwf	(btemp+10)^0,c
  3779  014A68  6A40               	clrf	(btemp+11)^0,c
  3780                           
  3781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3782                           ; Switch size 1, requested type "simple"
  3783                           ; Number of cases is 1, Range of values is 0 to 0
  3784                           ; switch strategies available:
  3785                           ; Name         Instructions Cycles
  3786                           ; simple_byte            4     3 (average)
  3787                           ;	Chosen strategy is simple_byte
  3788  014A6A  5040               	movf	(btemp+11)^0,w,c
  3789  014A6C  0A00               	xorlw	0	; case 0
  3790  014A6E  A4D8               	btfss	status,2,c
  3791  014A70  D7EF               	goto	l8536
  3792                           
  3793                           ; Switch size 1, requested type "simple"
  3794                           ; Number of cases is 4, Range of values is 0 to 3
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte           13     7 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799  014A72  503F               	movf	(btemp+10)^0,w,c
  3800  014A74  0A00               	xorlw	0	; case 0
  3801  014A76  B4D8               	btfsc	status,2,c
  3802  014A78  D6A9               	goto	l8518
  3803  014A7A  0A01               	xorlw	1	; case 1
  3804  014A7C  B4D8               	btfsc	status,2,c
  3805  014A7E  D720               	goto	l8524
  3806  014A80  0A03               	xorlw	3	; case 2
  3807  014A82  B4D8               	btfsc	status,2,c
  3808  014A84  D797               	goto	l8530
  3809  014A86  0A01               	xorlw	1	; case 3
  3810  014A88  B4D8               	btfsc	status,2,c
  3811  014A8A  D698               	goto	l8512
  3812  014A8C  D7E1               	goto	l8536
  3813  014A8E                     l1650:
  3814                           
  3815                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3816  014A8E  52E5               	movf	postdec1,f,c
  3817  014A90  52E5               	movf	postdec1,f,c
  3818  014A92  0012               	return		;funcret
  3819  014A94                     __end_of_conv_raw_result:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function _get_raw_result *****************
  3823 ;; Defined at:
  3824 ;;		line 63 in file "daq.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  index           1  [STACK] enum E16136
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2  [STACK] unsigned short 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/4
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    6
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;;		_conv_raw_result
  3850 ;; This function uses a reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text12
  3854  01810E                     __ptext12:
  3855                           	opt callstack 0
  3856  01810E                     _get_raw_result:
  3857                           	opt callstack 24
  3858                           
  3859                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  3860                           ;stkvar	_index @ sp[(0)+-1]
  3861                           
  3862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3863                           ;incstack = 0
  3864  01810E  0EFF               	movlw	-1
  3865  018110  50E3               	movf	plusw1,w,c
  3866  018112  0D02               	mullw	2
  3867  018114  50F3               	movf	243,w,c
  3868  018116  0F60               	addlw	low _R
  3869  018118  6ED9               	movwf	fsr2l,c
  3870  01811A  6ADA               	clrf	fsr2h,c
  3871  01811C  006F FF78  F035    	movff	postinc2,btemp
  3872  018122  006F FF74  F036    	movff	postdec2,btemp+1
  3873                           
  3874                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3875  018128  52E5               	movf	postdec1,f,c
  3876  01812A  0012               	return		;funcret
  3877  01812C                     __end_of_get_raw_result:
  3878                           	opt callstack 0
  3879                           
  3880 ;; *************** function ___xxtofl *****************
  3881 ;; Defined at:
  3882 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  sign            1  [STACK] unsigned char 
  3885 ;;  val             4  [STACK] long 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  arg             4  [STACK] unsigned long 
  3888 ;;  exp             1  [STACK] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  4  [STACK] unsigned char 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/4
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;Total ram usage:        0 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    6
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_conv_raw_result
  3909 ;; This function uses a reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text13
  3913  0158F6                     __ptext13:
  3914                           	opt callstack 0
  3915  0158F6                     ___xxtofl:
  3916                           	opt callstack 0
  3917                           
  3918                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3919  0158F6  0E05               	movlw	5
  3920  0158F8  26E1               	addwf	fsr1l,f,c
  3921  0158FA  0E00               	movlw	0
  3922  0158FC  22E2               	addwfc	fsr1h,f,c
  3923                           
  3924                           ;stkvar	_sign @ sp[(-5)+-1]
  3925                           
  3926                           ;incstack = 0
  3927  0158FE  0EFA               	movlw	-6
  3928  015900  50E3               	movf	plusw1,w,c
  3929  015902  B4D8               	btfsc	status,2,c
  3930  015904  D01D               	goto	l8278
  3931                           
  3932                           ;stkvar	_val @ sp[(-5)+-5]
  3933  015906  0EF9               	movlw	-7
  3934  015908  AEE3               	btfss	plusw1,7,c
  3935  01590A  D01A               	goto	l8278
  3936                           
  3937                           ;stkvar	_val @ sp[(-5)+-5]
  3938  01590C  0EF6               	movlw	-10
  3939  01590E  006F FF8C  F03D    	movff	plusw1,btemp+8
  3940  015914  0EF7               	movlw	-9
  3941  015916  006F FF8C  F03E    	movff	plusw1,btemp+9
  3942  01591C  0EF8               	movlw	-8
  3943  01591E  006F FF8C  F03F    	movff	plusw1,btemp+10
  3944  015924  0EF9               	movlw	-7
  3945  015926  006F FF8C  F040    	movff	plusw1,btemp+11
  3946  01592C  1E3D               	comf	(btemp+8)^0,f,c
  3947  01592E  1E3E               	comf	(btemp+9)^0,f,c
  3948  015930  1E3F               	comf	(btemp+10)^0,f,c
  3949  015932  1E40               	comf	(btemp+11)^0,f,c
  3950  015934  2A3D               	incf	(btemp+8)^0,f,c
  3951  015936  0E00               	movlw	0
  3952  015938  223E               	addwfc	(btemp+9)^0,f,c
  3953  01593A  223F               	addwfc	(btemp+10)^0,f,c
  3954  01593C  2240               	addwfc	(btemp+11)^0,f,c
  3955  01593E  D010               	goto	L3
  3956  015940                     l8278:
  3957                           
  3958                           ;stkvar	_val @ sp[(-5)+-5]
  3959  015940  0EF6               	movlw	-10
  3960  015942  006F FF8C  F03D    	movff	plusw1,btemp+8
  3961  015948  0EF7               	movlw	-9
  3962  01594A  006F FF8C  F03E    	movff	plusw1,btemp+9
  3963  015950  0EF8               	movlw	-8
  3964  015952  006F FF8C  F03F    	movff	plusw1,btemp+10
  3965  015958  0EF9               	movlw	-7
  3966  01595A  006F FF8C  F040    	movff	plusw1,btemp+11
  3967  015960                     L3:
  3968                           
  3969                           ;stkvar	_arg @ sp[(-5)+0]
  3970  015960  0EFB               	movlw	-5
  3971  015962  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3972  015968  0EFC               	movlw	-4
  3973  01596A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3974  015970  0EFD               	movlw	-3
  3975  015972  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3976  015978  0EFE               	movlw	-2
  3977  01597A  0060  F103  FFE3   	movff	btemp+11,plusw1
  3978                           
  3979                           ;stkvar	_val @ sp[(-5)+-5]
  3980  015980  0EF6               	movlw	-10
  3981  015982  50E3               	movf	plusw1,w,c
  3982  015984  E113               	bnz	l8286
  3983  015986  0EF7               	movlw	-9
  3984  015988  50E3               	movf	plusw1,w,c
  3985  01598A  E110               	bnz	l8286
  3986  01598C  0EF8               	movlw	-8
  3987  01598E  50E3               	movf	plusw1,w,c
  3988  015990  E10D               	bnz	l8286
  3989  015992  0EF9               	movlw	-7
  3990  015994  50E3               	movf	plusw1,w,c
  3991  015996  A4D8               	btfss	status,2,c
  3992  015998  D009               	goto	l8286
  3993  01599A  0E00               	movlw	0
  3994  01599C  6E35               	movwf	btemp^0,c
  3995  01599E  0E00               	movlw	0
  3996  0159A0  6E36               	movwf	(btemp+1)^0,c
  3997  0159A2  0E00               	movlw	0
  3998  0159A4  6E37               	movwf	(btemp+2)^0,c
  3999  0159A6  0E00               	movlw	0
  4000  0159A8  6E38               	movwf	(btemp+3)^0,c
  4001  0159AA  D0A2               	goto	l2622
  4002  0159AC                     l8286:
  4003  0159AC  0E96               	movlw	150
  4004  0159AE  6E40               	movwf	(btemp+11)^0,c
  4005                           
  4006                           ;stkvar	_exp @ sp[(-5)+4]
  4007  0159B0  0EFF               	movlw	-1
  4008  0159B2  0060  F103  FFE3   	movff	btemp+11,plusw1
  4009  0159B8  D00B               	goto	l8290
  4010  0159BA                     l8288:
  4011                           
  4012                           ;stkvar	_exp @ sp[(-5)+4]
  4013  0159BA  0EFF               	movlw	-1
  4014  0159BC  2AE3               	incf	plusw1,f,c
  4015                           
  4016                           ;stkvar	_arg @ sp[(-5)+0]
  4017  0159BE  90D8               	bcf	status,0,c
  4018  0159C0  0EFE               	movlw	-2
  4019  0159C2  32E3               	rrcf	plusw1,f,c
  4020  0159C4  0EFD               	movlw	-3
  4021  0159C6  32E3               	rrcf	plusw1,f,c
  4022  0159C8  0EFC               	movlw	-4
  4023  0159CA  32E3               	rrcf	plusw1,f,c
  4024  0159CC  0EFB               	movlw	-5
  4025  0159CE  32E3               	rrcf	plusw1,f,c
  4026  0159D0                     l8290:
  4027                           
  4028                           ;stkvar	_arg @ sp[(-5)+0]
  4029  0159D0  50E1               	movf	fsr1l,w,c
  4030  0159D2  0FFB               	addlw	-5
  4031  0159D4  6ED9               	movwf	fsr2l,c
  4032  0159D6  50E2               	movf	fsr1h,w,c
  4033  0159D8  6EDA               	movwf	fsr2h,c
  4034  0159DA  0EFF               	movlw	255
  4035  0159DC  22DA               	addwfc	fsr2h,f,c
  4036  0159DE  52DE               	movf	postinc2,f,c
  4037  0159E0  52DE               	movf	postinc2,f,c
  4038  0159E2  52DE               	movf	postinc2,f,c
  4039  0159E4  0EFE               	movlw	254
  4040  0159E6  14DD               	andwf	postdec2,w,c
  4041  0159E8  B4D8               	btfsc	status,2,c
  4042  0159EA  D018               	goto	l8298
  4043  0159EC  D7E6               	goto	l8288
  4044  0159EE                     l8292:
  4045                           
  4046                           ;stkvar	_exp @ sp[(-5)+4]
  4047  0159EE  0EFF               	movlw	-1
  4048  0159F0  2AE3               	incf	plusw1,f,c
  4049                           
  4050                           ;stkvar	_arg @ sp[(-5)+0]
  4051  0159F2  50E1               	movf	fsr1l,w,c
  4052  0159F4  0FFB               	addlw	-5
  4053  0159F6  6ED9               	movwf	fsr2l,c
  4054  0159F8  50E2               	movf	fsr1h,w,c
  4055  0159FA  6EDA               	movwf	fsr2h,c
  4056  0159FC  0EFF               	movlw	255
  4057  0159FE  22DA               	addwfc	fsr2h,f,c
  4058  015A00  2ADE               	incf	postinc2,f,c
  4059  015A02  0E00               	movlw	0
  4060  015A04  22DE               	addwfc	postinc2,f,c
  4061  015A06  22DE               	addwfc	postinc2,f,c
  4062  015A08  22DE               	addwfc	postinc2,f,c
  4063                           
  4064                           ;stkvar	_arg @ sp[(-5)+0]
  4065  015A0A  90D8               	bcf	status,0,c
  4066  015A0C  0EFE               	movlw	-2
  4067  015A0E  32E3               	rrcf	plusw1,f,c
  4068  015A10  0EFD               	movlw	-3
  4069  015A12  32E3               	rrcf	plusw1,f,c
  4070  015A14  0EFC               	movlw	-4
  4071  015A16  32E3               	rrcf	plusw1,f,c
  4072  015A18  0EFB               	movlw	-5
  4073  015A1A  32E3               	rrcf	plusw1,f,c
  4074  015A1C                     l8298:
  4075                           
  4076                           ;stkvar	_arg @ sp[(-5)+0]
  4077  015A1C  50E1               	movf	fsr1l,w,c
  4078  015A1E  0FFB               	addlw	-5
  4079  015A20  6ED9               	movwf	fsr2l,c
  4080  015A22  50E2               	movf	fsr1h,w,c
  4081  015A24  6EDA               	movwf	fsr2h,c
  4082  015A26  0EFF               	movlw	255
  4083  015A28  22DA               	addwfc	fsr2h,f,c
  4084  015A2A  52DE               	movf	postinc2,f,c
  4085  015A2C  52DE               	movf	postinc2,f,c
  4086  015A2E  52DE               	movf	postinc2,f,c
  4087  015A30  0EFF               	movlw	255
  4088  015A32  14DD               	andwf	postdec2,w,c
  4089  015A34  B4D8               	btfsc	status,2,c
  4090  015A36  D00C               	goto	l8302
  4091  015A38  D7DA               	goto	l8292
  4092  015A3A                     l8300:
  4093                           
  4094                           ;stkvar	_exp @ sp[(-5)+4]
  4095  015A3A  0EFF               	movlw	-1
  4096  015A3C  06E3               	decf	plusw1,f,c
  4097                           
  4098                           ;stkvar	_arg @ sp[(-5)+0]
  4099  015A3E  90D8               	bcf	status,0,c
  4100  015A40  0EFB               	movlw	-5
  4101  015A42  36E3               	rlcf	plusw1,f,c
  4102  015A44  0EFC               	movlw	-4
  4103  015A46  36E3               	rlcf	plusw1,f,c
  4104  015A48  0EFD               	movlw	-3
  4105  015A4A  36E3               	rlcf	plusw1,f,c
  4106  015A4C  0EFE               	movlw	-2
  4107  015A4E  36E3               	rlcf	plusw1,f,c
  4108  015A50                     l8302:
  4109                           
  4110                           ;stkvar	_arg @ sp[(-5)+0]
  4111  015A50  0EFD               	movlw	-3
  4112  015A52  BEE3               	btfsc	plusw1,7,c
  4113  015A54  D007               	goto	u7780
  4114                           
  4115                           ;stkvar	_exp @ sp[(-5)+4]
  4116  015A56  0EFF               	movlw	-1
  4117  015A58  006F FF8C  F035    	movff	plusw1,btemp
  4118  015A5E  0E02               	movlw	2
  4119  015A60  6035               	cpfslt	btemp^0,c
  4120  015A62  D7EB               	goto	l8300
  4121  015A64                     u7780:
  4122                           
  4123                           ;stkvar	_exp @ sp[(-5)+4]
  4124  015A64  0EFF               	movlw	-1
  4125  015A66  B0E3               	btfsc	plusw1,0,c
  4126  015A68  D002               	goto	l8310
  4127                           
  4128                           ;stkvar	_arg @ sp[(-5)+0]
  4129  015A6A  0EFD               	movlw	-3
  4130  015A6C  9EE3               	bcf	plusw1,7,c
  4131  015A6E                     l8310:
  4132                           
  4133                           ;stkvar	_exp @ sp[(-5)+4]
  4134  015A6E  50E1               	movf	fsr1l,w,c
  4135  015A70  0FFF               	addlw	-1
  4136  015A72  6ED9               	movwf	fsr2l,c
  4137  015A74  50E2               	movf	fsr1h,w,c
  4138  015A76  6EDA               	movwf	fsr2h,c
  4139  015A78  0EFF               	movlw	255
  4140  015A7A  22DA               	addwfc	fsr2h,f,c
  4141  015A7C  90D8               	bcf	status,0,c
  4142  015A7E  32DF               	rrcf	indf2,f,c
  4143                           
  4144                           ;stkvar	_exp @ sp[(-5)+4]
  4145  015A80  0EFF               	movlw	-1
  4146  015A82  006F FF8C  F040    	movff	plusw1,btemp+11
  4147  015A88  0060  F100  F039   	movff	btemp+11,btemp+4
  4148  015A8E  6A3A               	clrf	(btemp+5)^0,c
  4149  015A90  6A3B               	clrf	(btemp+6)^0,c
  4150  015A92  6A3C               	clrf	(btemp+7)^0,c
  4151  015A94  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4152  015A9A  6A3B               	clrf	(btemp+6)^0,c
  4153  015A9C  6A3A               	clrf	(btemp+5)^0,c
  4154  015A9E  6A39               	clrf	(btemp+4)^0,c
  4155                           
  4156                           ;stkvar	_arg @ sp[(-5)+0]
  4157  015AA0  50E1               	movf	fsr1l,w,c
  4158  015AA2  0FFB               	addlw	-5
  4159  015AA4  6ED9               	movwf	fsr2l,c
  4160  015AA6  50E2               	movf	fsr1h,w,c
  4161  015AA8  6EDA               	movwf	fsr2h,c
  4162  015AAA  0EFF               	movlw	255
  4163  015AAC  22DA               	addwfc	fsr2h,f,c
  4164  015AAE  5039               	movf	(btemp+4)^0,w,c
  4165  015AB0  12DE               	iorwf	postinc2,f,c
  4166  015AB2  503A               	movf	(btemp+5)^0,w,c
  4167  015AB4  12DE               	iorwf	postinc2,f,c
  4168  015AB6  503B               	movf	(btemp+6)^0,w,c
  4169  015AB8  12DE               	iorwf	postinc2,f,c
  4170  015ABA  503C               	movf	(btemp+7)^0,w,c
  4171  015ABC  12DE               	iorwf	postinc2,f,c
  4172                           
  4173                           ;stkvar	_sign @ sp[(-5)+-1]
  4174  015ABE  0EFA               	movlw	-6
  4175  015AC0  50E3               	movf	plusw1,w,c
  4176  015AC2  B4D8               	btfsc	status,2,c
  4177  015AC4  D005               	goto	l8320
  4178                           
  4179                           ;stkvar	_val @ sp[(-5)+-5]
  4180  015AC6  0EF9               	movlw	-7
  4181  015AC8  AEE3               	btfss	plusw1,7,c
  4182  015ACA  D002               	goto	l8320
  4183                           
  4184                           ;stkvar	_arg @ sp[(-5)+0]
  4185  015ACC  0EFE               	movlw	-2
  4186  015ACE  8EE3               	bsf	plusw1,7,c
  4187  015AD0                     l8320:
  4188                           
  4189                           ;stkvar	_arg @ sp[(-5)+0]
  4190  015AD0  0EFB               	movlw	-5
  4191  015AD2  006F FF8C  F035    	movff	plusw1,btemp
  4192  015AD8  0EFC               	movlw	-4
  4193  015ADA  006F FF8C  F036    	movff	plusw1,btemp+1
  4194  015AE0  0EFD               	movlw	-3
  4195  015AE2  006F FF8C  F037    	movff	plusw1,btemp+2
  4196  015AE8  0EFE               	movlw	-2
  4197  015AEA  006F FF8C  F038    	movff	plusw1,btemp+3
  4198  015AF0                     l2622:
  4199                           
  4200                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4201  015AF0  0EF6               	movlw	246
  4202  015AF2  26E1               	addwf	fsr1l,f,c
  4203  015AF4  0EFF               	movlw	255
  4204  015AF6  22E2               	addwfc	fsr1h,f,c
  4205  015AF8  0012               	return		;funcret
  4206  015AFA                     __end_of___xxtofl:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _clear_adc_scan *****************
  4210 ;; Defined at:
  4211 ;;		line 55 in file "daq.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1  [STACK] void 
  4218 ;; Registers used:
  4219 ;;		None
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/4
  4222 ;;		On exit  : 3F/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    6
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text14
  4240  018382                     __ptext14:
  4241                           	opt callstack 0
  4242  018382                     _clear_adc_scan:
  4243                           	opt callstack 24
  4244                           
  4245                           ;daq.c: 57:  R.done = 0;
  4246                           
  4247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4248                           ;incstack = 0
  4249  018382  0100               	movlb	0	; () banked
  4250  018384  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  4251                           
  4252                           ; BSR set to: 0
  4253                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4254  018386  0012               	return		;funcret
  4255  018388                     __end_of_clear_adc_scan:
  4256                           	opt callstack 0
  4257                           
  4258 ;; *************** function _check_help *****************
  4259 ;; Defined at:
  4260 ;;		line 40 in file "mconfig.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  flipper         1  [STACK] _Bool 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1  [STACK] void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4269 ;; Tracked objects:
  4270 ;;		On entry : 3F/2
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:   18
  4281 ;; This function calls:
  4282 ;;		_StartTimer
  4283 ;;		_TimerDone
  4284 ;;		_display_help
  4285 ;;		_display_info
  4286 ;;		_get_vterm_ptr
  4287 ;;		_help_button
  4288 ;;		_mode_lamp_bright
  4289 ;;		_mode_lamp_dim
  4290 ;;		_set_display_info
  4291 ;;		_set_temp_display_help
  4292 ;;		_set_vterm
  4293 ;;		_sprintf
  4294 ;;		_update_lcd
  4295 ;;		_vterm_dump
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text15
  4302  0156E4                     __ptext15:
  4303                           	opt callstack 0
  4304  0156E4                     _check_help:
  4305                           	opt callstack 12
  4306                           
  4307                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4308                           
  4309                           ; BSR set to: 0
  4310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4311                           ;incstack = 0
  4312  0156E4  EC8C  F0BD         	call	_help_button	;wreg free
  4313  0156E8  5035               	movf	btemp^0,w,c
  4314  0156EA  B4D8               	btfsc	status,2,c
  4315  0156EC  D0D0               	goto	l9848
  4316  0156EE  ECB1  F0C1         	call	_display_info	;wreg free
  4317  0156F2  0435               	decf	btemp^0,w,c
  4318  0156F4  B4D8               	btfsc	status,2,c
  4319  0156F6  D0CB               	goto	l9848
  4320                           
  4321                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4322  0156F8  0EDC               	movlw	220
  4323  0156FA  6EE6               	movwf	postinc1,c
  4324  0156FC  0E05               	movlw	5
  4325  0156FE  6EE6               	movwf	postinc1,c
  4326  015700  0E0B               	movlw	11
  4327  015702  6EE6               	movwf	postinc1,c
  4328  015704  EC6E  F0BD         	call	_StartTimer	;wreg free
  4329                           
  4330                           ;mconfig.c: 47:   if (V.debug)
  4331  015708  0102               	movlb	2	; () banked
  4332  01570A  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  4333                           
  4334                           ; BSR set to: 2
  4335                           ;mconfig.c: 48:    vterm_dump();
  4336  01570C  EC3D  F0B1         	call	_vterm_dump	;wreg free
  4337                           
  4338                           ;mconfig.c: 50:   set_vterm(1);
  4339  015710  0E01               	movlw	1
  4340  015712  6EE6               	movwf	postinc1,c
  4341  015714  ECE0  F0C0         	call	_set_vterm	;wreg free
  4342                           
  4343                           ; BSR set to: 4
  4344                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4345  015718  ECB1  F0C1         	call	_display_info	;wreg free
  4346  01571C  5035               	movf	btemp^0,w,c
  4347  01571E  6EE6               	movwf	postinc1,c
  4348  015720  EC6D  F0C1         	call	_set_temp_display_help	;wreg free
  4349                           
  4350                           ; BSR set to: 2
  4351                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4352  015724  0E01               	movlw	1
  4353  015726  6EE6               	movwf	postinc1,c
  4354  015728  EC96  F0C0         	call	_set_display_info	;wreg free
  4355                           
  4356                           ;mconfig.c: 53:   if (flipper) {
  4357                           ;stkvar	_flipper @ sp[(0)+-1]
  4358  01572C  0EFF               	movlw	-1
  4359  01572E  50E3               	movf	plusw1,w,c
  4360  015730  B4D8               	btfsc	status,2,c
  4361  015732  D019               	goto	l9836
  4362                           
  4363                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4364  015734  0EC3               	movlw	low STR_14
  4365  015736  6EE6               	movwf	postinc1,c
  4366  015738  0EFF               	movlw	high STR_14
  4367  01573A  6EE6               	movwf	postinc1,c
  4368  01573C  0E2E               	movlw	low STR_16
  4369  01573E  6EE6               	movwf	postinc1,c
  4370  015740  0EFF               	movlw	high STR_16
  4371  015742  6EE6               	movwf	postinc1,c
  4372  015744  0E01               	movlw	1
  4373  015746  6EE6               	movwf	postinc1,c
  4374  015748  0E00               	movlw	0
  4375  01574A  6EE6               	movwf	postinc1,c
  4376  01574C  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4377  015750  0060  F0D7  FFE6   	movff	btemp,postinc1
  4378  015756  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4379  01575C  0E06               	movlw	6
  4380  01575E  6EE6               	movwf	postinc1,c
  4381  015760  EC03  F0B4         	call	_sprintf	;wreg free
  4382                           
  4383                           ;mconfig.c: 55:   } else {
  4384  015764  D018               	goto	l1553
  4385  015766                     l9836:
  4386                           
  4387                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4388  015766  0ED9               	movlw	low STR_15
  4389  015768  6EE6               	movwf	postinc1,c
  4390  01576A  0EFF               	movlw	high STR_15
  4391  01576C  6EE6               	movwf	postinc1,c
  4392  01576E  0E2E               	movlw	low STR_16
  4393  015770  6EE6               	movwf	postinc1,c
  4394  015772  0EFF               	movlw	high STR_16
  4395  015774  6EE6               	movwf	postinc1,c
  4396  015776  0E01               	movlw	1
  4397  015778  6EE6               	movwf	postinc1,c
  4398  01577A  0E00               	movlw	0
  4399  01577C  6EE6               	movwf	postinc1,c
  4400  01577E  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4401  015782  0060  F0D7  FFE6   	movff	btemp,postinc1
  4402  015788  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4403  01578E  0E06               	movlw	6
  4404  015790  6EE6               	movwf	postinc1,c
  4405  015792  EC03  F0B4         	call	_sprintf	;wreg free
  4406  015796                     l1553:
  4407                           
  4408                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4409  015796  0102               	movlb	2	; () banked
  4410  015798  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4411  01579A  32E8               	rrcf	wreg,f,c
  4412  01579C  32E8               	rrcf	wreg,f,c
  4413  01579E  0B03               	andlw	3
  4414  0157A0  0D24               	mullw	36
  4415  0157A2  0E12               	movlw	18
  4416  0157A4  26F3               	addwf	243,f,c
  4417  0157A6  0E00               	movlw	0
  4418  0157A8  22F4               	addwfc	244,f,c
  4419  0157AA  0E73               	movlw	low _T
  4420  0157AC  6E3F               	movwf	(btemp+10)^0,c
  4421  0157AE  0EFE               	movlw	high _T
  4422  0157B0  6E40               	movwf	(btemp+11)^0,c
  4423  0157B2  50F3               	movf	243,w,c
  4424  0157B4  263F               	addwf	(btemp+10)^0,f,c
  4425  0157B6  50F4               	movf	244,w,c
  4426  0157B8  2240               	addwfc	(btemp+11)^0,f,c
  4427  0157BA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4428  0157C0  0060  F103  FFE6   	movff	btemp+11,postinc1
  4429  0157C6  0ECF               	movlw	low STR_18
  4430  0157C8  6EE6               	movwf	postinc1,c
  4431  0157CA  0EFF               	movlw	high STR_18
  4432  0157CC  6EE6               	movwf	postinc1,c
  4433  0157CE  0E01               	movlw	1
  4434  0157D0  6EE6               	movwf	postinc1,c
  4435  0157D2  0E01               	movlw	1
  4436  0157D4  6EE6               	movwf	postinc1,c
  4437  0157D6  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4438  0157DA  0060  F0D7  FFE6   	movff	btemp,postinc1
  4439  0157E0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4440  0157E6  0E06               	movlw	6
  4441  0157E8  6EE6               	movwf	postinc1,c
  4442  0157EA  EC03  F0B4         	call	_sprintf	;wreg free
  4443                           
  4444                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4445  0157EE  0102               	movlb	2	; () banked
  4446  0157F0  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4447  0157F2  32E8               	rrcf	wreg,f,c
  4448  0157F4  32E8               	rrcf	wreg,f,c
  4449  0157F6  0B03               	andlw	3
  4450  0157F8  0D24               	mullw	36
  4451  0157FA  0E73               	movlw	low _T
  4452  0157FC  6E3F               	movwf	(btemp+10)^0,c
  4453  0157FE  0EFE               	movlw	high _T
  4454  015800  6E40               	movwf	(btemp+11)^0,c
  4455  015802  50F3               	movf	243,w,c
  4456  015804  263F               	addwf	(btemp+10)^0,f,c
  4457  015806  50F4               	movf	244,w,c
  4458  015808  2240               	addwfc	(btemp+11)^0,f,c
  4459  01580A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4460  015810  0060  F103  FFE6   	movff	btemp+11,postinc1
  4461  015816  0ECF               	movlw	low STR_18
  4462  015818  6EE6               	movwf	postinc1,c
  4463  01581A  0EFF               	movlw	high STR_18
  4464  01581C  6EE6               	movwf	postinc1,c
  4465  01581E  0E01               	movlw	1
  4466  015820  6EE6               	movwf	postinc1,c
  4467  015822  0E02               	movlw	2
  4468  015824  6EE6               	movwf	postinc1,c
  4469  015826  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4470  01582A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4471  015830  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4472  015836  0E06               	movlw	6
  4473  015838  6EE6               	movwf	postinc1,c
  4474  01583A  EC03  F0B4         	call	_sprintf	;wreg free
  4475                           
  4476                           ;mconfig.c: 60:   V.help_id++;
  4477  01583E  EE20  F2A9         	lfsr	2,_V+169	;volatile
  4478  015842  30DF               	rrcf	223,w,c
  4479  015844  6E40               	movwf	(btemp+11)^0,c
  4480  015846  3240               	rrcf	(btemp+11)^0,f,c
  4481  015848  3040               	rrcf	(btemp+11)^0,w,c
  4482  01584A  0B03               	andlw	3
  4483  01584C  6E40               	movwf	(btemp+11)^0,c
  4484  01584E  2A40               	incf	(btemp+11)^0,f,c
  4485  015850  3640               	rlcf	(btemp+11)^0,f,c
  4486  015852  3640               	rlcf	(btemp+11)^0,f,c
  4487  015854  3640               	rlcf	(btemp+11)^0,f,c
  4488  015856  50DF               	movf	223,w,c
  4489  015858  1840               	xorwf	(btemp+11)^0,w,c
  4490  01585A  0BE7               	andlw	-25
  4491  01585C  1840               	xorwf	(btemp+11)^0,w,c
  4492  01585E  6EDF               	movwf	223,c
  4493                           
  4494                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4495  015860  0EB8               	movlw	184
  4496  015862  6EE6               	movwf	postinc1,c
  4497  015864  0E0B               	movlw	11
  4498  015866  6EE6               	movwf	postinc1,c
  4499  015868  0E09               	movlw	9
  4500  01586A  6EE6               	movwf	postinc1,c
  4501  01586C  EC6E  F0BD         	call	_StartTimer	;wreg free
  4502                           
  4503                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4504  015870  0EB8               	movlw	184
  4505  015872  6EE6               	movwf	postinc1,c
  4506  015874  0E0B               	movlw	11
  4507  015876  6EE6               	movwf	postinc1,c
  4508  015878  0E07               	movlw	7
  4509  01587A  6EE6               	movwf	postinc1,c
  4510  01587C  EC6E  F0BD         	call	_StartTimer	;wreg free
  4511                           
  4512                           ;mconfig.c: 63:   mode_lamp_bright();
  4513  015880  EC7C  F0C1         	call	_mode_lamp_bright	;wreg free
  4514                           
  4515                           ;mconfig.c: 64:   update_lcd(1);
  4516  015884  0E01               	movlw	1
  4517  015886  6EE6               	movwf	postinc1,c
  4518  015888  EC7C  F0B3         	call	_update_lcd	;wreg free
  4519                           
  4520                           ;mconfig.c: 65:  } else {
  4521  01588C  D032               	goto	l1557
  4522  01588E                     l9848:
  4523                           
  4524                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4525  01588E  0E09               	movlw	9
  4526  015890  6EE6               	movwf	postinc1,c
  4527  015892  EC21  F0C0         	call	_TimerDone	;wreg free
  4528  015896  5035               	movf	btemp^0,w,c
  4529  015898  B4D8               	btfsc	status,2,c
  4530  01589A  D02B               	goto	l1557
  4531                           
  4532                           ;mconfig.c: 67:    set_vterm(0);
  4533  01589C  0E00               	movlw	0
  4534  01589E  6EE6               	movwf	postinc1,c
  4535  0158A0  ECE0  F0C0         	call	_set_vterm	;wreg free
  4536                           
  4537                           ; BSR set to: 4
  4538                           ;mconfig.c: 68:    V.help = 0;
  4539  0158A4  0102               	movlb	2	; () banked
  4540  0158A6  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  4541                           
  4542                           ; BSR set to: 2
  4543                           ;mconfig.c: 69:    set_display_info(display_help());
  4544  0158A8  ECB5  F0C1         	call	_display_help	;wreg free
  4545  0158AC  5035               	movf	btemp^0,w,c
  4546  0158AE  6EE6               	movwf	postinc1,c
  4547  0158B0  EC96  F0C0         	call	_set_display_info	;wreg free
  4548                           
  4549                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4550  0158B4  0060  FA7F  FFE6   	movff	_V+159,postinc1
  4551  0158BA  0060  FA83  FFE6   	movff	_V+160,postinc1
  4552  0158C0  EC15  F0C1         	call	_mode_lamp_dim	;wreg free
  4553                           
  4554                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4555  0158C4  0E0B               	movlw	11
  4556  0158C6  6EE6               	movwf	postinc1,c
  4557  0158C8  EC21  F0C0         	call	_TimerDone	;wreg free
  4558  0158CC  5035               	movf	btemp^0,w,c
  4559  0158CE  B4D8               	btfsc	status,2,c
  4560  0158D0  D010               	goto	l1557
  4561                           
  4562                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4563  0158D2  0102               	movlb	2	; () banked
  4564  0158D4  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  4565  0158D6  A4D8               	btfss	status,2,c
  4566  0158D8  D002               	goto	u9790
  4567  0158DA  0E01               	movlw	1
  4568  0158DC  D001               	goto	u9800
  4569  0158DE                     u9790:
  4570  0158DE  0E00               	movlw	0
  4571  0158E0                     u9800:
  4572  0158E0  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  4573                           
  4574                           ; BSR set to: 2
  4575                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4576  0158E2  0EDC               	movlw	220
  4577  0158E4  6EE6               	movwf	postinc1,c
  4578  0158E6  0E05               	movlw	5
  4579  0158E8  6EE6               	movwf	postinc1,c
  4580  0158EA  0E0B               	movlw	11
  4581  0158EC  6EE6               	movwf	postinc1,c
  4582  0158EE  EC6E  F0BD         	call	_StartTimer	;wreg free
  4583  0158F2                     l1557:
  4584                           
  4585                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4586  0158F2  52E5               	movf	postdec1,f,c
  4587  0158F4  0012               	return		;funcret
  4588  0158F6                     __end_of_check_help:
  4589                           	opt callstack 0
  4590                           
  4591 ;; *************** function _vterm_dump *****************
  4592 ;; Defined at:
  4593 ;;		line 118 in file "mconfig.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1  [STACK] void 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4602 ;; Tracked objects:
  4603 ;;		On entry : 3F/2
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4611 ;;Total ram usage:        0 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:   17
  4614 ;; This function calls:
  4615 ;;		_WaitMs
  4616 ;;		_eaDogM_WriteStringAtPos
  4617 ;;		_get_vterm_ptr
  4618 ;;		_sprintf
  4619 ;;		_wait_lcd_done
  4620 ;; This function is called by:
  4621 ;;		_check_help
  4622 ;; This function uses a reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text16
  4626  01627A                     __ptext16:
  4627                           	opt callstack 0
  4628  01627A                     _vterm_dump:
  4629                           	opt callstack 12
  4630                           
  4631                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4632                           
  4633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4634                           ;incstack = 0
  4635  01627A  0E01               	movlw	1
  4636  01627C  6EE6               	movwf	postinc1,c
  4637  01627E  0E00               	movlw	0
  4638  016280  6EE6               	movwf	postinc1,c
  4639  016282  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4640  016286  0060  F0D7  FFE6   	movff	btemp,postinc1
  4641  01628C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4642  016292  0E00               	movlw	0
  4643  016294  6EE6               	movwf	postinc1,c
  4644  016296  0E00               	movlw	0
  4645  016298  6EE6               	movwf	postinc1,c
  4646  01629A  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4647  01629E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4648  0162A4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4649  0162AA  0E98               	movlw	low STR_20
  4650  0162AC  6EE6               	movwf	postinc1,c
  4651  0162AE  0EFF               	movlw	high STR_20
  4652  0162B0  6EE6               	movwf	postinc1,c
  4653  0162B2  0E01               	movlw	low (_V+1)
  4654  0162B4  6EE6               	movwf	postinc1,c
  4655  0162B6  0E02               	movlw	high (_V+1)
  4656  0162B8  6EE6               	movwf	postinc1,c
  4657  0162BA  0E08               	movlw	8
  4658  0162BC  6EE6               	movwf	postinc1,c
  4659  0162BE  EC03  F0B4         	call	_sprintf	;wreg free
  4660                           
  4661                           ;mconfig.c: 121:  wait_lcd_done();
  4662  0162C2  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4666  0162C6  0E01               	movlw	low (_V+1)
  4667  0162C8  6EE6               	movwf	postinc1,c
  4668  0162CA  0E02               	movlw	high (_V+1)
  4669  0162CC  6EE6               	movwf	postinc1,c
  4670  0162CE  0E00               	movlw	0
  4671  0162D0  6EE6               	movwf	postinc1,c
  4672  0162D2  0E00               	movlw	0
  4673  0162D4  6EE6               	movwf	postinc1,c
  4674  0162D6  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4675                           
  4676                           ; BSR set to: 59
  4677                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4678  0162DA  0E01               	movlw	1
  4679  0162DC  6EE6               	movwf	postinc1,c
  4680  0162DE  0E01               	movlw	1
  4681  0162E0  6EE6               	movwf	postinc1,c
  4682  0162E2  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4683  0162E6  0060  F0D7  FFE6   	movff	btemp,postinc1
  4684  0162EC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4685  0162F2  0E00               	movlw	0
  4686  0162F4  6EE6               	movwf	postinc1,c
  4687  0162F6  0E01               	movlw	1
  4688  0162F8  6EE6               	movwf	postinc1,c
  4689  0162FA  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4690  0162FE  0060  F0D7  FFE6   	movff	btemp,postinc1
  4691  016304  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4692  01630A  0E98               	movlw	low STR_20
  4693  01630C  6EE6               	movwf	postinc1,c
  4694  01630E  0EFF               	movlw	high STR_20
  4695  016310  6EE6               	movwf	postinc1,c
  4696  016312  0E01               	movlw	low (_V+1)
  4697  016314  6EE6               	movwf	postinc1,c
  4698  016316  0E02               	movlw	high (_V+1)
  4699  016318  6EE6               	movwf	postinc1,c
  4700  01631A  0E08               	movlw	8
  4701  01631C  6EE6               	movwf	postinc1,c
  4702  01631E  EC03  F0B4         	call	_sprintf	;wreg free
  4703                           
  4704                           ;mconfig.c: 124:  wait_lcd_done();
  4705  016322  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  4706                           
  4707                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4708  016326  0E01               	movlw	low (_V+1)
  4709  016328  6EE6               	movwf	postinc1,c
  4710  01632A  0E02               	movlw	high (_V+1)
  4711  01632C  6EE6               	movwf	postinc1,c
  4712  01632E  0E00               	movlw	0
  4713  016330  6EE6               	movwf	postinc1,c
  4714  016332  0E01               	movlw	1
  4715  016334  6EE6               	movwf	postinc1,c
  4716  016336  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4717                           
  4718                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4719  01633A  0E01               	movlw	1
  4720  01633C  6EE6               	movwf	postinc1,c
  4721  01633E  0E02               	movlw	2
  4722  016340  6EE6               	movwf	postinc1,c
  4723  016342  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4724  016346  0060  F0D7  FFE6   	movff	btemp,postinc1
  4725  01634C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4726  016352  0E00               	movlw	0
  4727  016354  6EE6               	movwf	postinc1,c
  4728  016356  0E02               	movlw	2
  4729  016358  6EE6               	movwf	postinc1,c
  4730  01635A  EC76  F0BE         	call	_get_vterm_ptr	;wreg free
  4731  01635E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4732  016364  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4733  01636A  0E98               	movlw	low STR_20
  4734  01636C  6EE6               	movwf	postinc1,c
  4735  01636E  0EFF               	movlw	high STR_20
  4736  016370  6EE6               	movwf	postinc1,c
  4737  016372  0E01               	movlw	low (_V+1)
  4738  016374  6EE6               	movwf	postinc1,c
  4739  016376  0E02               	movlw	high (_V+1)
  4740  016378  6EE6               	movwf	postinc1,c
  4741  01637A  0E08               	movlw	8
  4742  01637C  6EE6               	movwf	postinc1,c
  4743  01637E  EC03  F0B4         	call	_sprintf	;wreg free
  4744                           
  4745                           ;mconfig.c: 127:  wait_lcd_done();
  4746  016382  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4750  016386  0E01               	movlw	low (_V+1)
  4751  016388  6EE6               	movwf	postinc1,c
  4752  01638A  0E02               	movlw	high (_V+1)
  4753  01638C  6EE6               	movwf	postinc1,c
  4754  01638E  0E00               	movlw	0
  4755  016390  6EE6               	movwf	postinc1,c
  4756  016392  0E02               	movlw	2
  4757  016394  6EE6               	movwf	postinc1,c
  4758  016396  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  4759                           
  4760                           ; BSR set to: 59
  4761                           ;mconfig.c: 129:  WaitMs(3000);
  4762  01639A  0EB8               	movlw	184
  4763  01639C  6EE6               	movwf	postinc1,c
  4764  01639E  0E0B               	movlw	11
  4765  0163A0  6EE6               	movwf	postinc1,c
  4766  0163A2  ECC4  F0BD         	call	_WaitMs	;wreg free
  4767                           
  4768                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4769  0163A6  0012               	return		;funcret
  4770  0163A8                     __end_of_vterm_dump:
  4771                           	opt callstack 0
  4772                           
  4773 ;; *************** function _sprintf *****************
  4774 ;; Defined at:
  4775 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  s               2  [STACK] PTR unsigned char 
  4778 ;;		 -> D.lcd(216), D(218), V(189), 
  4779 ;;  fmt             2  [STACK] PTR const unsigned char 
  4780 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4781 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4782 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4783 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4784 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4785 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  f               6  [STACK] struct _IO_FILE
  4788 ;;  ap              2  [STACK] PTR void [1]
  4789 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4790 ;;  ret             2    0        int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2  [STACK] int 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/4
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:   14
  4807 ;; This function calls:
  4808 ;;		_vfprintf
  4809 ;; This function is called by:
  4810 ;;		_main
  4811 ;;		_check_help
  4812 ;;		_vterm_dump
  4813 ;; This function uses a reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text17
  4817  016806                     __ptext17:
  4818                           	opt callstack 0
  4819  016806                     _sprintf:
  4820                           	opt callstack 0
  4821                           
  4822                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4823  016806  0E08               	movlw	8
  4824  016808  26E1               	addwf	fsr1l,f,c
  4825  01680A  0E00               	movlw	0
  4826  01680C  22E2               	addwfc	fsr1h,f,c
  4827                           
  4828                           ;incstack = 0
  4829  01680E  0EFE               	movlw	254
  4830  016810  6E3F               	movwf	(btemp+10)^0,c
  4831  016812  0EFF               	movlw	255
  4832  016814  6E40               	movwf	(btemp+11)^0,c
  4833                           
  4834                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4835  016816  0EF5               	movlw	245
  4836  016818  24E1               	addwf	fsr1l,w,c
  4837  01681A  6E3D               	movwf	(btemp+8)^0,c
  4838  01681C  0EFF               	movlw	255
  4839  01681E  20E2               	addwfc	fsr1h,w,c
  4840  016820  6E3E               	movwf	(btemp+9)^0,c
  4841  016822  503F               	movf	(btemp+10)^0,w,c
  4842  016824  263D               	addwf	(btemp+8)^0,f,c
  4843  016826  5040               	movf	(btemp+11)^0,w,c
  4844  016828  223E               	addwfc	(btemp+9)^0,f,c
  4845                           
  4846                           ;stkvar	_ap @ sp[(-8)+6]
  4847  01682A  0EFF               	movlw	-1
  4848  01682C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4849  016832  0EFE               	movlw	-2
  4850  016834  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4851                           
  4852                           ;stkvar	_s @ sp[(-8)+-3]
  4853  01683A  0EF5               	movlw	-11
  4854  01683C  006F FF8C  F03F    	movff	plusw1,btemp+10
  4855  016842  0EF6               	movlw	-10
  4856  016844  006F FF8C  F040    	movff	plusw1,btemp+11
  4857                           
  4858                           ;stkvar	_f @ sp[(-8)+0]
  4859  01684A  0EF9               	movlw	-7
  4860  01684C  0060  F103  FFE3   	movff	btemp+11,plusw1
  4861  016852  0EF8               	movlw	-8
  4862  016854  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4863                           
  4864                           ;stkvar	_f @ sp[(-8)+0]
  4865  01685A  0EFA               	movlw	250
  4866  01685C  24E1               	addwf	fsr1l,w,c
  4867  01685E  6ED9               	movwf	fsr2l,c
  4868  016860  0EFF               	movlw	255
  4869  016862  20E2               	addwfc	fsr1h,w,c
  4870  016864  6EDA               	movwf	fsr2h,c
  4871  016866  0E00               	movlw	0
  4872  016868  6EDE               	movwf	postinc2,c
  4873  01686A  0E00               	movlw	0
  4874  01686C  6EDD               	movwf	postdec2,c
  4875                           
  4876                           ;stkvar	_f @ sp[(-8)+0]
  4877  01686E  0EFC               	movlw	252
  4878  016870  24E1               	addwf	fsr1l,w,c
  4879  016872  6ED9               	movwf	fsr2l,c
  4880  016874  0EFF               	movlw	255
  4881  016876  20E2               	addwfc	fsr1h,w,c
  4882  016878  6EDA               	movwf	fsr2h,c
  4883  01687A  0E00               	movlw	0
  4884  01687C  6EDE               	movwf	postinc2,c
  4885  01687E  0E00               	movlw	0
  4886  016880  6EDD               	movwf	postdec2,c
  4887                           
  4888                           ;stkvar	_ap @ sp[(-8)+6]
  4889  016882  0EFE               	movlw	254
  4890  016884  24E1               	addwf	fsr1l,w,c
  4891  016886  6E35               	movwf	btemp^0,c
  4892  016888  0EFF               	movlw	255
  4893  01688A  20E2               	addwfc	fsr1h,w,c
  4894  01688C  6E36               	movwf	(btemp+1)^0,c
  4895  01688E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4896  016894  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4897                           
  4898                           ;stkvar	_fmt @ sp[(-10)+-5]
  4899  01689A  0EF1               	movlw	-15
  4900  01689C  006F FF8F FFE6     	movff	plusw1,postinc1
  4901  0168A2  006F FF8F FFE6     	movff	plusw1,postinc1
  4902                           
  4903                           ;stkvar	_f @ sp[(-12)+0]
  4904  0168A8  0EF4               	movlw	244
  4905  0168AA  24E1               	addwf	fsr1l,w,c
  4906  0168AC  6E35               	movwf	btemp^0,c
  4907  0168AE  0EFF               	movlw	255
  4908  0168B0  20E2               	addwfc	fsr1h,w,c
  4909  0168B2  6E36               	movwf	(btemp+1)^0,c
  4910  0168B4  0060  F0D7  FFE6   	movff	btemp,postinc1
  4911  0168BA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4912  0168C0  ECE0  F0B6         	call	_vfprintf	;wreg free
  4913                           
  4914                           ;stkvar	_f @ sp[(-8)+0]
  4915  0168C4  0EFA               	movlw	250
  4916  0168C6  24E1               	addwf	fsr1l,w,c
  4917  0168C8  6ED9               	movwf	fsr2l,c
  4918  0168CA  0EFF               	movlw	255
  4919  0168CC  20E2               	addwfc	fsr1h,w,c
  4920  0168CE  6EDA               	movwf	fsr2h,c
  4921  0168D0  006F FF78  F03F    	movff	postinc2,btemp+10
  4922  0168D6  006F FF74  F040    	movff	postdec2,btemp+11
  4923                           
  4924                           ;stkvar	_s @ sp[(-8)+-3]
  4925  0168DC  0EF5               	movlw	-11
  4926  0168DE  006F FF8C  F03D    	movff	plusw1,btemp+8
  4927  0168E4  0EF6               	movlw	-10
  4928  0168E6  006F FF8C  F03E    	movff	plusw1,btemp+9
  4929  0168EC  503F               	movf	(btemp+10)^0,w,c
  4930  0168EE  243D               	addwf	(btemp+8)^0,w,c
  4931  0168F0  6ED9               	movwf	fsr2l,c
  4932  0168F2  5040               	movf	(btemp+11)^0,w,c
  4933  0168F4  203E               	addwfc	(btemp+9)^0,w,c
  4934  0168F6  6EDA               	movwf	fsr2h,c
  4935  0168F8  0E00               	movlw	0
  4936  0168FA  6EDF               	movwf	indf2,c
  4937                           
  4938                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  4939  0168FC  0EF8               	movlw	248
  4940  0168FE  26E1               	addwf	fsr1l,f,c
  4941  016900  0EFF               	movlw	255
  4942  016902  22E2               	addwfc	fsr1h,f,c
  4943  016904  52E5               	movf	postdec1,f,c
  4944  016906  50E7               	movf	indf1,w,c
  4945  016908  5EE1               	subwf	fsr1l,f,c
  4946  01690A  0E00               	movlw	0
  4947  01690C  5AE2               	subwfb	fsr1h,f,c
  4948  01690E  0012               	return		;funcret
  4949  016910                     __end_of_sprintf:
  4950                           	opt callstack 0
  4951                           
  4952 ;; *************** function _get_vterm_ptr *****************
  4953 ;; Defined at:
  4954 ;;		line 113 in file "mconfig.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  line            1  [STACK] unsigned char 
  4957 ;;  vterm           1  [STACK] unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2  [STACK] PTR unsigned char 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/4
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    6
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;;		_check_help
  4981 ;;		_vterm_dump
  4982 ;; This function uses a reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text18
  4986  017CEC                     __ptext18:
  4987                           	opt callstack 0
  4988  017CEC                     _get_vterm_ptr:
  4989                           	opt callstack 24
  4990                           
  4991                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  4992                           ;stkvar	_vterm @ sp[(0)+-2]
  4993                           
  4994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4995                           ;incstack = 0
  4996  017CEC  0EFE               	movlw	-2
  4997  017CEE  50E3               	movf	plusw1,w,c
  4998  017CF0  0B03               	andlw	3
  4999  017CF2  0D36               	mullw	54
  5000  017CF4  0E00               	movlw	low _D
  5001  017CF6  6E35               	movwf	btemp^0,c
  5002  017CF8  0E04               	movlw	high _D
  5003  017CFA  6E36               	movwf	(btemp+1)^0,c
  5004  017CFC  50F3               	movf	243,w,c
  5005  017CFE  2635               	addwf	btemp^0,f,c
  5006  017D00  50F4               	movf	244,w,c
  5007  017D02  2236               	addwfc	(btemp+1)^0,f,c
  5008                           
  5009                           ;stkvar	_line @ sp[(0)+-1]
  5010  017D04  0EFF               	movlw	-1
  5011  017D06  50E3               	movf	plusw1,w,c
  5012  017D08  0B03               	andlw	3
  5013  017D0A  0D12               	mullw	18
  5014  017D0C  50F3               	movf	243,w,c
  5015  017D0E  2635               	addwf	btemp^0,f,c
  5016  017D10  50F4               	movf	244,w,c
  5017  017D12  2236               	addwfc	(btemp+1)^0,f,c
  5018                           
  5019                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5020  017D14  52E5               	movf	postdec1,f,c
  5021  017D16  52E5               	movf	postdec1,f,c
  5022  017D18  0012               	return		;funcret
  5023  017D1A                     __end_of_get_vterm_ptr:
  5024                           	opt callstack 0
  5025                           
  5026 ;; *************** function _WaitMs *****************
  5027 ;; Defined at:
  5028 ;;		line 32 in file "timers.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  numMilliseco    2  [STACK] const unsigned short 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1  [STACK] void 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/2
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    7
  5049 ;; This function calls:
  5050 ;;		_StartTimer
  5051 ;;		_TimerDone
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;;		_vterm_dump
  5055 ;; This function uses a reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text19
  5059  017B88                     __ptext19:
  5060                           	opt callstack 0
  5061  017B88                     _WaitMs:
  5062                           	opt callstack 21
  5063                           
  5064                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5065                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5066                           
  5067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5068                           ;incstack = 0
  5069  017B88  0EFE               	movlw	-2
  5070  017B8A  006F FF8F FFE6     	movff	plusw1,postinc1
  5071  017B90  006F FF8F FFE6     	movff	plusw1,postinc1
  5072  017B96  0E00               	movlw	0
  5073  017B98  6EE6               	movwf	postinc1,c
  5074  017B9A  EC6E  F0BD         	call	_StartTimer	;wreg free
  5075                           
  5076                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5077  017B9E  D005               	goto	l7772
  5078  017BA0                     l1483:
  5079                           
  5080                           ;timers.c: 36:   __nop();
  5081  017BA0  F000               	nop	
  5082                           
  5083                           ;timers.c: 37:   __nop();
  5084  017BA2  F000               	nop	
  5085                           
  5086                           ;timers.c: 38:   __nop();
  5087  017BA4  F000               	nop	
  5088                           
  5089                           ;timers.c: 39:   __nop();
  5090  017BA6  F000               	nop	
  5091  017BA8  0004               	clrwdt		;# 
  5092  017BAA                     l7772:
  5093                           
  5094                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5095  017BAA  0E00               	movlw	0
  5096  017BAC  6EE6               	movwf	postinc1,c
  5097  017BAE  EC21  F0C0         	call	_TimerDone	;wreg free
  5098  017BB2  5035               	movf	btemp^0,w,c
  5099  017BB4  B4D8               	btfsc	status,2,c
  5100  017BB6  D7F4               	goto	l1483
  5101                           
  5102                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5103  017BB8  52E5               	movf	postdec1,f,c
  5104  017BBA  52E5               	movf	postdec1,f,c
  5105  017BBC  0012               	return		;funcret
  5106  017BBE                     __end_of_WaitMs:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function _update_lcd *****************
  5110 ;; Defined at:
  5111 ;;		line 82 in file "mconfig.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  vterm           1  [STACK] unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1  [STACK] unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/4
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:   17
  5132 ;; This function calls:
  5133 ;;		_eaDogM_WriteStringAtPos
  5134 ;;		_wait_lcd_done
  5135 ;; This function is called by:
  5136 ;;		_main
  5137 ;;		_check_help
  5138 ;; This function uses a reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text20
  5142  0166F8                     __ptext20:
  5143                           	opt callstack 0
  5144  0166F8                     _update_lcd:
  5145                           	opt callstack 13
  5146                           
  5147                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5148                           ;stkvar	_vterm @ sp[(0)+-1]
  5149                           
  5150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5151                           ;incstack = 0
  5152  0166F8  0EFF               	movlw	-1
  5153  0166FA  006F FF8C  F035    	movff	plusw1,btemp
  5154  016700  0E03               	movlw	3
  5155  016702  1635               	andwf	btemp^0,f,c
  5156  016704  0EFF               	movlw	-1
  5157  016706  0060  F0D7  FFE3   	movff	btemp,plusw1
  5158                           
  5159                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5160  01670C  0104               	movlb	4	; () banked
  5161  01670E  A1D8               	btfss	(_D+216)& (0+255),0,b
  5162  016710  D004               	goto	l9720
  5163                           
  5164                           ; BSR set to: 4
  5165                           ;stkvar	_vterm @ sp[(0)+-1]
  5166  016712  0EFF               	movlw	-1
  5167  016714  50E3               	movf	plusw1,w,c
  5168  016716  B4D8               	btfsc	status,2,c
  5169  016718  D074               	goto	l1561
  5170  01671A                     l9720:
  5171                           
  5172                           ; BSR set to: 4
  5173                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5174                           ;stkvar	_vterm @ sp[(0)+-1]
  5175  01671A  0EFF               	movlw	-1
  5176  01671C  50E3               	movf	plusw1,w,c
  5177  01671E  0D36               	mullw	54
  5178  016720  0E10               	movlw	low (_D+16)
  5179  016722  24F3               	addwf	243,w,c
  5180  016724  6ED9               	movwf	fsr2l,c
  5181  016726  0E04               	movlw	high (_D+16)
  5182  016728  20F4               	addwfc	prodh,w,c
  5183  01672A  6EDA               	movwf	fsr2h,c
  5184  01672C  0E00               	movlw	0
  5185  01672E  6EDF               	movwf	indf2,c
  5186                           
  5187                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5188                           ;stkvar	_vterm @ sp[(0)+-1]
  5189  016730  0EFF               	movlw	-1
  5190  016732  50E3               	movf	plusw1,w,c
  5191  016734  0D36               	mullw	54
  5192  016736  0E22               	movlw	low (_D+34)
  5193  016738  24F3               	addwf	243,w,c
  5194  01673A  6ED9               	movwf	fsr2l,c
  5195  01673C  0E04               	movlw	high (_D+34)
  5196  01673E  20F4               	addwfc	prodh,w,c
  5197  016740  6EDA               	movwf	fsr2h,c
  5198  016742  0E00               	movlw	0
  5199  016744  6EDF               	movwf	indf2,c
  5200                           
  5201                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5202                           ;stkvar	_vterm @ sp[(0)+-1]
  5203  016746  0EFF               	movlw	-1
  5204  016748  50E3               	movf	plusw1,w,c
  5205  01674A  0D36               	mullw	54
  5206  01674C  0E34               	movlw	low (_D+52)
  5207  01674E  24F3               	addwf	243,w,c
  5208  016750  6ED9               	movwf	fsr2l,c
  5209  016752  0E04               	movlw	high (_D+52)
  5210  016754  20F4               	addwfc	prodh,w,c
  5211  016756  6EDA               	movwf	fsr2h,c
  5212  016758  0E00               	movlw	0
  5213  01675A  6EDF               	movwf	indf2,c
  5214                           
  5215                           ; BSR set to: 4
  5216                           ;mconfig.c: 92:  wait_lcd_done();
  5217  01675C  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5221                           ;stkvar	_vterm @ sp[(0)+-1]
  5222  016760  0EFF               	movlw	-1
  5223  016762  50E3               	movf	plusw1,w,c
  5224  016764  0D36               	mullw	54
  5225  016766  0E00               	movlw	low _D
  5226  016768  6E3F               	movwf	(btemp+10)^0,c
  5227  01676A  0E04               	movlw	high _D
  5228  01676C  6E40               	movwf	(btemp+11)^0,c
  5229  01676E  50F3               	movf	243,w,c
  5230  016770  263F               	addwf	(btemp+10)^0,f,c
  5231  016772  50F4               	movf	244,w,c
  5232  016774  2240               	addwfc	(btemp+11)^0,f,c
  5233  016776  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5234  01677C  0060  F103  FFE6   	movff	btemp+11,postinc1
  5235  016782  0E00               	movlw	0
  5236  016784  6EE6               	movwf	postinc1,c
  5237  016786  0E00               	movlw	0
  5238  016788  6EE6               	movwf	postinc1,c
  5239  01678A  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5240                           
  5241                           ; BSR set to: 59
  5242                           ;mconfig.c: 94:  wait_lcd_done();
  5243  01678E  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5247                           ;stkvar	_vterm @ sp[(0)+-1]
  5248  016792  0EFF               	movlw	-1
  5249  016794  50E3               	movf	plusw1,w,c
  5250  016796  0D36               	mullw	54
  5251  016798  0E00               	movlw	low _D
  5252  01679A  6E3F               	movwf	(btemp+10)^0,c
  5253  01679C  0E04               	movlw	high _D
  5254  01679E  6E40               	movwf	(btemp+11)^0,c
  5255  0167A0  0E12               	movlw	18
  5256  0167A2  263F               	addwf	(btemp+10)^0,f,c
  5257  0167A4  0E00               	movlw	0
  5258  0167A6  2240               	addwfc	(btemp+11)^0,f,c
  5259  0167A8  50F3               	movf	243,w,c
  5260  0167AA  263F               	addwf	(btemp+10)^0,f,c
  5261  0167AC  50F4               	movf	244,w,c
  5262  0167AE  2240               	addwfc	(btemp+11)^0,f,c
  5263  0167B0  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5264  0167B6  0060  F103  FFE6   	movff	btemp+11,postinc1
  5265  0167BC  0E00               	movlw	0
  5266  0167BE  6EE6               	movwf	postinc1,c
  5267  0167C0  0E01               	movlw	1
  5268  0167C2  6EE6               	movwf	postinc1,c
  5269  0167C4  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5270                           
  5271                           ; BSR set to: 59
  5272                           ;mconfig.c: 96:  wait_lcd_done();
  5273  0167C8  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5277                           ;stkvar	_vterm @ sp[(0)+-1]
  5278  0167CC  0EFF               	movlw	-1
  5279  0167CE  50E3               	movf	plusw1,w,c
  5280  0167D0  0D36               	mullw	54
  5281  0167D2  0E00               	movlw	low _D
  5282  0167D4  6E3F               	movwf	(btemp+10)^0,c
  5283  0167D6  0E04               	movlw	high _D
  5284  0167D8  6E40               	movwf	(btemp+11)^0,c
  5285  0167DA  0E24               	movlw	36
  5286  0167DC  263F               	addwf	(btemp+10)^0,f,c
  5287  0167DE  0E00               	movlw	0
  5288  0167E0  2240               	addwfc	(btemp+11)^0,f,c
  5289  0167E2  50F3               	movf	243,w,c
  5290  0167E4  263F               	addwf	(btemp+10)^0,f,c
  5291  0167E6  50F4               	movf	244,w,c
  5292  0167E8  2240               	addwfc	(btemp+11)^0,f,c
  5293  0167EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5294  0167F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  5295  0167F6  0E00               	movlw	0
  5296  0167F8  6EE6               	movwf	postinc1,c
  5297  0167FA  0E02               	movlw	2
  5298  0167FC  6EE6               	movwf	postinc1,c
  5299  0167FE  ECDF  F0BD         	call	_eaDogM_WriteStringAtPos	;wreg free
  5300  016802                     l1561:
  5301                           
  5302                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5303  016802  52E5               	movf	postdec1,f,c
  5304  016804  0012               	return		;funcret
  5305  016806                     __end_of_update_lcd:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5309 ;; Defined at:
  5310 ;;		line 252 in file "eadog.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  r               1  [STACK] const unsigned char 
  5313 ;;  c               1  [STACK] const unsigned char 
  5314 ;;  strPtr          2  [STACK] PTR unsigned char 
  5315 ;;		 -> D.lcd(216), D(218), V(189), 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1  [STACK] void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5322 ;; Tracked objects:
  5323 ;;		On entry : 3F/0
  5324 ;;		On exit  : 3F/3B
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:   16
  5334 ;; This function calls:
  5335 ;;		_eaDogM_WriteString
  5336 ;;		_send_lcd_cmd_dma
  5337 ;; This function is called by:
  5338 ;;		_update_lcd
  5339 ;;		_vterm_dump
  5340 ;; This function uses a reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text21
  5344  017BBE                     __ptext21:
  5345                           	opt callstack 0
  5346  017BBE                     _eaDogM_WriteStringAtPos:
  5347                           	opt callstack 13
  5348                           
  5349                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5350                           ;stkvar	_c @ sp[(0)+-2]
  5351                           
  5352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5353                           ;incstack = 0
  5354  017BBE  0EFE               	movlw	-2
  5355  017BC0  006F FF8C  F040    	movff	plusw1,btemp+11
  5356                           
  5357                           ;stkvar	_r @ sp[(0)+-1]
  5358  017BC6  0EFF               	movlw	-1
  5359  017BC8  50E3               	movf	plusw1,w,c
  5360  017BCA  0D10               	mullw	16
  5361  017BCC  50F3               	movf	243,w,c
  5362  017BCE  2440               	addwf	(btemp+11)^0,w,c
  5363  017BD0  0F80               	addlw	128
  5364  017BD2  6EE6               	movwf	postinc1,c
  5365  017BD4  ECE6  F0BB         	call	_send_lcd_cmd_dma	;wreg free
  5366                           
  5367                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5368                           ;stkvar	_strPtr @ sp[(0)+-4]
  5369  017BD8  0EFC               	movlw	-4
  5370  017BDA  006F FF8F FFE6     	movff	plusw1,postinc1
  5371  017BE0  006F FF8F FFE6     	movff	plusw1,postinc1
  5372  017BE6  EC34  F0B7         	call	_eaDogM_WriteString	;wreg free
  5373                           
  5374                           ; BSR set to: 59
  5375                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5376  017BEA  52E5               	movf	postdec1,f,c
  5377  017BEC  52E5               	movf	postdec1,f,c
  5378  017BEE  52E5               	movf	postdec1,f,c
  5379  017BF0  52E5               	movf	postdec1,f,c
  5380  017BF2  0012               	return		;funcret
  5381  017BF4                     __end_of_eaDogM_WriteStringAtPos:
  5382                           	opt callstack 0
  5383                           
  5384 ;; *************** function _send_lcd_cmd_dma *****************
  5385 ;; Defined at:
  5386 ;;		line 205 in file "eadog.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  strPtr          1  [STACK] unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1  [STACK] void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/3D
  5397 ;;		On exit  : 3F/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   15
  5407 ;; This function calls:
  5408 ;;		_printf
  5409 ;;		_ringBufS_flush
  5410 ;;		_start_lcd
  5411 ;;		_wait_lcd_done
  5412 ;;		_wait_lcd_set
  5413 ;; This function is called by:
  5414 ;;		_eaDogM_WriteCommand
  5415 ;;		_eaDogM_WriteStringAtPos
  5416 ;; This function uses a reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text22
  5420  0177CC                     __ptext22:
  5421                           	opt callstack 0
  5422  0177CC                     _send_lcd_cmd_dma:
  5423                           	opt callstack 13
  5424                           
  5425                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5426                           
  5427                           ; BSR set to: 59
  5428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5429                           ;incstack = 0
  5430  0177CC  ECC4  F0C1         	call	_wait_lcd_set	;wreg free
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5434  0177D0  0E00               	movlw	0
  5435  0177D2  6EE6               	movwf	postinc1,c
  5436  0177D4  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5437  0177DA  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5438  0177E0  EC6F  F0B8         	call	_ringBufS_flush	;wreg free
  5439  0177E4  92BC               	bcf	188,1,c	;volatile
  5440  0177E6  94BC               	bcf	188,2,c	;volatile
  5441                           
  5442                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5443  0177E8  013B               	movlb	59	; () banked
  5444  0177EA  9FFC               	bcf	252,7,b	;volatile
  5445                           
  5446                           ; BSR set to: 59
  5447                           ;eadog.c: 214:  DMA1SSZ = 1;
  5448  0177EC  0E00               	movlw	0
  5449  0177EE  6FF8               	movwf	248,b	;volatile
  5450  0177F0  0E01               	movlw	1
  5451  0177F2  6FF7               	movwf	247,b	;volatile
  5452                           
  5453                           ; BSR set to: 59
  5454                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5455  0177F4  8FFC               	bsf	252,7,b	;volatile
  5456                           
  5457                           ; BSR set to: 59
  5458                           ;eadog.c: 216:  printf("%c", strPtr);
  5459                           ;stkvar	_strPtr @ sp[(0)+-1]
  5460  0177F6  0EFF               	movlw	-1
  5461  0177F8  50E3               	movf	plusw1,w,c
  5462  0177FA  6EE6               	movwf	postinc1,c
  5463  0177FC  0E00               	movlw	0
  5464  0177FE  6EE6               	movwf	postinc1,c
  5465  017800  0EF9               	movlw	low STR_12
  5466  017802  6EE6               	movwf	postinc1,c
  5467  017804  0EFF               	movlw	high STR_12
  5468  017806  6EE6               	movwf	postinc1,c
  5469  017808  0E04               	movlw	4
  5470  01780A  6EE6               	movwf	postinc1,c
  5471  01780C  ECFD  F0BA         	call	_printf	;wreg free
  5472                           
  5473                           ;eadog.c: 217:  start_lcd();
  5474  017810  ECC7  F0C1         	call	_start_lcd	;wreg free
  5475                           
  5476                           ; BSR set to: 59
  5477                           ;eadog.c: 218:  wait_lcd_done();
  5478  017814  ECD2  F0C0         	call	_wait_lcd_done	;wreg free
  5479                           
  5480                           ; BSR set to: 0
  5481  017818  82BC               	bsf	188,1,c	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5485  01781A  52E5               	movf	postdec1,f,c
  5486  01781C  0012               	return		;funcret
  5487  01781E                     __end_of_send_lcd_cmd_dma:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function _wait_lcd_done *****************
  5491 ;; Defined at:
  5492 ;;		line 141 in file "eadog.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1  [STACK] void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/2
  5503 ;;		On exit  : 3F/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    7
  5513 ;; This function calls:
  5514 ;;		_wdtdelay
  5515 ;; This function is called by:
  5516 ;;		_send_lcd_cmd_dma
  5517 ;;		_update_lcd
  5518 ;;		_vterm_dump
  5519 ;; This function uses a reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text23
  5523  0181A4                     __ptext23:
  5524                           	opt callstack 0
  5525  0181A4                     _wait_lcd_done:
  5526                           	opt callstack 22
  5527                           
  5528                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5529                           
  5530                           ; BSR set to: 0
  5531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5532                           ;incstack = 0
  5533  0181A4  0100               	movlb	0	; () banked
  5534  0181A6  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  5535  0181A8  D7FD               	goto	_wait_lcd_done
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;eadog.c: 144:  wdtdelay(50);
  5539  0181AA  0E32               	movlw	50
  5540  0181AC  6EE6               	movwf	postinc1,c
  5541  0181AE  0E00               	movlw	0
  5542  0181B0  6EE6               	movwf	postinc1,c
  5543  0181B2  0E00               	movlw	0
  5544  0181B4  6EE6               	movwf	postinc1,c
  5545  0181B6  0E00               	movlw	0
  5546  0181B8  6EE6               	movwf	postinc1,c
  5547  0181BA  EC8C  F0BB         	call	_wdtdelay	;wreg free
  5548                           
  5549                           ; BSR set to: 0
  5550                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5551  0181BE  0012               	return		;funcret
  5552  0181C0                     __end_of_wait_lcd_done:
  5553                           	opt callstack 0
  5554                           
  5555 ;; *************** function _wdtdelay *****************
  5556 ;; Defined at:
  5557 ;;		line 22 in file "eadog.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  delay           4  [STACK] const unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1  [STACK] void 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 3F/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    6
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_init_display
  5582 ;;		_send_lcd_cmd
  5583 ;;		_send_lcd_cmd_long
  5584 ;;		_wait_lcd_done
  5585 ;; This function uses a reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text24
  5589  017718                     __ptext24:
  5590                           	opt callstack 0
  5591  017718                     _wdtdelay:
  5592                           	opt callstack 22
  5593                           
  5594                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5595                           
  5596                           ; BSR set to: 0
  5597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5598                           ;incstack = 0
  5599  017718  0100               	movlb	0	; () banked
  5600  01771A  6BB6               	clrf	wdtdelay@dcount& (0+255),b
  5601  01771C  6BB7               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5602  01771E  6BB8               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5603  017720  6BB9               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5604  017722                     l1328:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;eadog.c: 27:   __nop();
  5608  017722  F000               	nop	
  5609  017724  0004               	clrwdt		;# 
  5610                           
  5611                           ;eadog.c: 29:  };
  5612  017726  0E01               	movlw	1
  5613  017728  0100               	movlb	0	; () banked
  5614  01772A  27B6               	addwf	wdtdelay@dcount& (0+255),f,b
  5615  01772C  0E00               	movlw	0
  5616  01772E  23B7               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5617  017730  23B8               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5618  017732  23B9               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;stkvar	_delay @ sp[(0)+-4]
  5622  017734  0EFC               	movlw	-4
  5623  017736  006F FF8C  F035    	movff	plusw1,btemp
  5624  01773C  51B6               	movf	wdtdelay@dcount& (0+255),w,b
  5625  01773E  5C35               	subwf	btemp^0,w,c
  5626  017740  0EFD               	movlw	-3
  5627  017742  006F FF8C  F035    	movff	plusw1,btemp
  5628  017748  51B7               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5629  01774A  5835               	subwfb	btemp^0,w,c
  5630  01774C  0EFE               	movlw	-2
  5631  01774E  006F FF8C  F035    	movff	plusw1,btemp
  5632  017754  51B8               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5633  017756  5835               	subwfb	btemp^0,w,c
  5634  017758  0EFF               	movlw	-1
  5635  01775A  006F FF8C  F035    	movff	plusw1,btemp
  5636  017760  51B9               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5637  017762  5835               	subwfb	btemp^0,w,c
  5638  017764  B0D8               	btfsc	status,0,c
  5639  017766  D7DD               	goto	l1328
  5640                           
  5641                           ; BSR set to: 0
  5642                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5643  017768  52E5               	movf	postdec1,f,c
  5644  01776A  52E5               	movf	postdec1,f,c
  5645  01776C  52E5               	movf	postdec1,f,c
  5646  01776E  52E5               	movf	postdec1,f,c
  5647  017770  0012               	return		;funcret
  5648  017772                     __end_of_wdtdelay:
  5649                           	opt callstack 0
  5650                           
  5651 ;; *************** function _eaDogM_WriteString *****************
  5652 ;; Defined at:
  5653 ;;		line 184 in file "eadog.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  strPtr          2  [STACK] PTR unsigned char 
  5656 ;;		 -> D.lcd(216), D(218), V(189), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1  [STACK] void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5663 ;; Tracked objects:
  5664 ;;		On entry : 3F/0
  5665 ;;		On exit  : 3F/3B
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:   15
  5675 ;; This function calls:
  5676 ;;		_printf
  5677 ;;		_ringBufS_flush
  5678 ;;		_start_lcd
  5679 ;;		_strlen
  5680 ;;		_wait_lcd_set
  5681 ;; This function is called by:
  5682 ;;		_eaDogM_WriteStringAtPos
  5683 ;; This function uses a reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text25
  5687  016E68                     __ptext25:
  5688                           	opt callstack 0
  5689  016E68                     _eaDogM_WriteString:
  5690                           	opt callstack 13
  5691                           
  5692                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5693                           
  5694                           ; BSR set to: 0
  5695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5696                           ;incstack = 0
  5697  016E68  ECC4  F0C1         	call	_wait_lcd_set	;wreg free
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5701  016E6C  0E00               	movlw	0
  5702  016E6E  6EE6               	movwf	postinc1,c
  5703  016E70  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5704  016E76  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5705  016E7C  EC6F  F0B8         	call	_ringBufS_flush	;wreg free
  5706  016E80  94BC               	bcf	188,2,c	;volatile
  5707                           
  5708                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5709                           ;stkvar	_strPtr @ sp[(0)+-2]
  5710  016E82  0EFE               	movlw	-2
  5711  016E84  006F FF8F FFE6     	movff	plusw1,postinc1
  5712  016E8A  006F FF8F FFE6     	movff	plusw1,postinc1
  5713  016E90  EC87  F0B7         	call	_strlen	;wreg free
  5714  016E94  5036               	movf	(btemp+1)^0,w,c
  5715  016E96  E104               	bnz	u9700
  5716  016E98  0E41               	movlw	65
  5717  016E9A  5C35               	subwf	btemp^0,w,c
  5718  016E9C  A0D8               	btfss	status,0,c
  5719  016E9E  D010               	goto	l9686
  5720  016EA0                     u9700:
  5721                           
  5722                           ;stkvar	_strPtr @ sp[(0)+-2]
  5723  016EA0  0EFE               	movlw	-2
  5724  016EA2  006F FF8C  F03F    	movff	plusw1,btemp+10
  5725  016EA8  0EFF               	movlw	-1
  5726  016EAA  006F FF8C  F040    	movff	plusw1,btemp+11
  5727  016EB0  0E40               	movlw	64
  5728  016EB2  243F               	addwf	(btemp+10)^0,w,c
  5729  016EB4  6ED9               	movwf	fsr2l,c
  5730  016EB6  0E00               	movlw	0
  5731  016EB8  2040               	addwfc	(btemp+11)^0,w,c
  5732  016EBA  6EDA               	movwf	fsr2h,c
  5733  016EBC  0E00               	movlw	0
  5734  016EBE  6EDF               	movwf	indf2,c
  5735  016EC0                     l9686:
  5736                           
  5737                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5738  016EC0  013B               	movlb	59	; () banked
  5739  016EC2  9FFC               	bcf	252,7,b	;volatile
  5740                           
  5741                           ; BSR set to: 59
  5742                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5743                           ;stkvar	_strPtr @ sp[(0)+-2]
  5744  016EC4  0EFE               	movlw	-2
  5745  016EC6  006F FF8F FFE6     	movff	plusw1,postinc1
  5746  016ECC  006F FF8F FFE6     	movff	plusw1,postinc1
  5747  016ED2  EC87  F0B7         	call	_strlen	;wreg free
  5748  016ED6  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5749  016EDC  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5750                           
  5751                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5752  016EE2  013B               	movlb	59	; () banked
  5753  016EE4  8FFC               	bsf	252,7,b	;volatile
  5754                           
  5755                           ; BSR set to: 59
  5756                           ;eadog.c: 195:  printf("%s", strPtr);
  5757                           ;stkvar	_strPtr @ sp[(0)+-2]
  5758  016EE6  0EFE               	movlw	-2
  5759  016EE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5760  016EEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5761  016EF4  0EFC               	movlw	low STR_11
  5762  016EF6  6EE6               	movwf	postinc1,c
  5763  016EF8  0EFF               	movlw	high STR_11
  5764  016EFA  6EE6               	movwf	postinc1,c
  5765  016EFC  0E04               	movlw	4
  5766  016EFE  6EE6               	movwf	postinc1,c
  5767  016F00  ECFD  F0BA         	call	_printf	;wreg free
  5768                           
  5769                           ;eadog.c: 196:  start_lcd();
  5770  016F04  ECC7  F0C1         	call	_start_lcd	;wreg free
  5771                           
  5772                           ; BSR set to: 59
  5773                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5774  016F08  52E5               	movf	postdec1,f,c
  5775  016F0A  52E5               	movf	postdec1,f,c
  5776  016F0C  0012               	return		;funcret
  5777  016F0E                     __end_of_eaDogM_WriteString:
  5778                           	opt callstack 0
  5779                           
  5780 ;; *************** function _wait_lcd_set *****************
  5781 ;; Defined at:
  5782 ;;		line 131 in file "eadog.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1  [STACK] void 
  5789 ;; Registers used:
  5790 ;;		None
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/3D
  5793 ;;		On exit  : 3F/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5800 ;;Total ram usage:        0 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    6
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_eaDogM_WriteString
  5807 ;;		_send_lcd_cmd_dma
  5808 ;; This function uses a reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text26
  5812  018388                     __ptext26:
  5813                           	opt callstack 0
  5814  018388                     _wait_lcd_set:
  5815                           	opt callstack 21
  5816                           
  5817                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5818                           
  5819                           ; BSR set to: 59
  5820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5821                           ;incstack = 0
  5822  018388  0100               	movlb	0	; () banked
  5823  01838A  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  5824                           
  5825                           ; BSR set to: 0
  5826                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5827  01838C  0012               	return		;funcret
  5828  01838E                     __end_of_wait_lcd_set:
  5829                           	opt callstack 0
  5830                           
  5831 ;; *************** function _start_lcd *****************
  5832 ;; Defined at:
  5833 ;;		line 126 in file "eadog.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1  [STACK] void 
  5840 ;; Registers used:
  5841 ;;		None
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/3B
  5844 ;;		On exit  : 3F/3B
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5851 ;;Total ram usage:        0 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    6
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_eaDogM_WriteString
  5858 ;;		_send_lcd_cmd_dma
  5859 ;; This function uses a reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text27
  5863  01838E                     __ptext27:
  5864                           	opt callstack 0
  5865  01838E                     _start_lcd:
  5866                           	opt callstack 21
  5867                           
  5868                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5869                           
  5870                           ; BSR set to: 0
  5871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5872                           ;incstack = 0
  5873  01838E  013B               	movlb	59	; () banked
  5874  018390  8DFC               	bsf	252,6,b	;volatile
  5875                           
  5876                           ; BSR set to: 59
  5877                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5878  018392  0012               	return		;funcret
  5879  018394                     __end_of_start_lcd:
  5880                           	opt callstack 0
  5881                           
  5882 ;; *************** function _ringBufS_flush *****************
  5883 ;; Defined at:
  5884 ;;		line 76 in file "ringbufs.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5887 ;;		 -> ring_buf1(67), 
  5888 ;;  clearBuffer     1  [STACK] const char 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1  [STACK] void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5895 ;; Tracked objects:
  5896 ;;		On entry : 3F/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    7
  5907 ;; This function calls:
  5908 ;;		_memset
  5909 ;; This function is called by:
  5910 ;;		_eaDogM_WriteString
  5911 ;;		_send_lcd_cmd_dma
  5912 ;; This function uses a reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text28
  5916  0170DE                     __ptext28:
  5917                           	opt callstack 0
  5918  0170DE                     _ringBufS_flush:
  5919                           	opt callstack 20
  5920                           
  5921                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5922                           ;stkvar	__this @ sp[(0)+-2]
  5923                           
  5924                           ; BSR set to: 59
  5925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5926                           ;incstack = 0
  5927  0170DE  0EFE               	movlw	-2
  5928  0170E0  006F FF8C  F03F    	movff	plusw1,btemp+10
  5929  0170E6  0EFF               	movlw	-1
  5930  0170E8  006F FF8C  F040    	movff	plusw1,btemp+11
  5931  0170EE  0E42               	movlw	66
  5932  0170F0  243F               	addwf	(btemp+10)^0,w,c
  5933  0170F2  6ED9               	movwf	fsr2l,c
  5934  0170F4  0E00               	movlw	0
  5935  0170F6  2040               	addwfc	(btemp+11)^0,w,c
  5936  0170F8  6EDA               	movwf	fsr2h,c
  5937  0170FA  0E00               	movlw	0
  5938  0170FC  6EDF               	movwf	indf2,c
  5939                           
  5940                           ;ringbufs.c: 79:  _this->head = 0;
  5941                           ;stkvar	__this @ sp[(0)+-2]
  5942  0170FE  0EFE               	movlw	-2
  5943  017100  006F FF8C  F03F    	movff	plusw1,btemp+10
  5944  017106  0EFF               	movlw	-1
  5945  017108  006F FF8C  F040    	movff	plusw1,btemp+11
  5946  01710E  0E40               	movlw	64
  5947  017110  243F               	addwf	(btemp+10)^0,w,c
  5948  017112  6ED9               	movwf	fsr2l,c
  5949  017114  0E00               	movlw	0
  5950  017116  2040               	addwfc	(btemp+11)^0,w,c
  5951  017118  6EDA               	movwf	fsr2h,c
  5952  01711A  0E00               	movlw	0
  5953  01711C  6EDF               	movwf	indf2,c
  5954                           
  5955                           ;ringbufs.c: 80:  _this->tail = 0;
  5956                           ;stkvar	__this @ sp[(0)+-2]
  5957  01711E  0EFE               	movlw	-2
  5958  017120  006F FF8C  F03F    	movff	plusw1,btemp+10
  5959  017126  0EFF               	movlw	-1
  5960  017128  006F FF8C  F040    	movff	plusw1,btemp+11
  5961  01712E  0E41               	movlw	65
  5962  017130  243F               	addwf	(btemp+10)^0,w,c
  5963  017132  6ED9               	movwf	fsr2l,c
  5964  017134  0E00               	movlw	0
  5965  017136  2040               	addwfc	(btemp+11)^0,w,c
  5966  017138  6EDA               	movwf	fsr2h,c
  5967  01713A  0E00               	movlw	0
  5968  01713C  6EDF               	movwf	indf2,c
  5969                           
  5970                           ;ringbufs.c: 81:  if (clearBuffer) {
  5971                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5972  01713E  0EFD               	movlw	-3
  5973  017140  50E3               	movf	plusw1,w,c
  5974  017142  B4D8               	btfsc	status,2,c
  5975  017144  D011               	goto	l1468
  5976                           
  5977                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5978  017146  0E40               	movlw	64
  5979  017148  6EE6               	movwf	postinc1,c
  5980  01714A  0E00               	movlw	0
  5981  01714C  6EE6               	movwf	postinc1,c
  5982  01714E  0E00               	movlw	0
  5983  017150  6EE6               	movwf	postinc1,c
  5984  017152  0E00               	movlw	0
  5985  017154  6EE6               	movwf	postinc1,c
  5986                           
  5987                           ;stkvar	__this @ sp[(-4)+-2]
  5988  017156  0EFA               	movlw	-6
  5989  017158  006F FF8F FFE6     	movff	plusw1,postinc1
  5990  01715E  006F FF8F FFE6     	movff	plusw1,postinc1
  5991  017164  EC67  F0A2         	call	_memset	;wreg free
  5992  017168                     l1468:
  5993                           
  5994                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5995  017168  52E5               	movf	postdec1,f,c
  5996  01716A  52E5               	movf	postdec1,f,c
  5997  01716C  52E5               	movf	postdec1,f,c
  5998  01716E  0012               	return		;funcret
  5999  017170                     __end_of_ringBufS_flush:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _memset *****************
  6003 ;; Defined at:
  6004 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  dest            2  [STACK] PTR void 
  6007 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6008 ;;  c               2  [STACK] int 
  6009 ;;  n               2  [STACK] unsigned int 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  s               2  [STACK] PTR unsigned char 
  6012 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6013 ;;  k               2  [STACK] unsigned int 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  2  [STACK] PTR void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    6
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_ringBufS_init
  6034 ;;		_ringBufS_flush
  6035 ;; This function uses a reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text29
  6039  0144CE                     __ptext29:
  6040                           	opt callstack 0
  6041  0144CE                     _memset:
  6042                           	opt callstack 0
  6043                           
  6044                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6045  0144CE  52E6               	movf	postinc1,f,c
  6046  0144D0  52E6               	movf	postinc1,f,c
  6047  0144D2  52E6               	movf	postinc1,f,c
  6048  0144D4  52E6               	movf	postinc1,f,c
  6049                           
  6050                           ;stkvar	_dest @ sp[(-4)+-2]
  6051                           
  6052                           ;incstack = 0
  6053  0144D6  0EFA               	movlw	-6
  6054  0144D8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6055  0144DE  0EFB               	movlw	-5
  6056  0144E0  006F FF8C  F040    	movff	plusw1,btemp+11
  6057                           
  6058                           ;stkvar	_s @ sp[(-4)+0]
  6059  0144E6  0EFD               	movlw	-3
  6060  0144E8  0060  F103  FFE3   	movff	btemp+11,plusw1
  6061  0144EE  0EFC               	movlw	-4
  6062  0144F0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6063                           
  6064                           ;stkvar	_n @ sp[(-4)+-6]
  6065  0144F6  0EF6               	movlw	-10
  6066  0144F8  006F FF8C  F035    	movff	plusw1,btemp
  6067  0144FE  0EF7               	movlw	-9
  6068  014500  50E3               	movf	plusw1,w,c
  6069  014502  1035               	iorwf	btemp^0,w,c
  6070  014504  B4D8               	btfsc	status,2,c
  6071  014506  D154               	goto	u9670
  6072                           
  6073                           ;stkvar	_c @ sp[(-4)+-4]
  6074                           ;stkvar	_s @ sp[(-4)+0]
  6075  014508  0EFC               	movlw	-4
  6076  01450A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6077  014510  0EFD               	movlw	-3
  6078  014512  006F FF8F FFDA     	movff	plusw1,fsr2h
  6079  014518  0EF8               	movlw	-8
  6080  01451A  006F FF8F FFDF     	movff	plusw1,indf2
  6081                           
  6082                           ;stkvar	_c @ sp[(-4)+-4]
  6083                           ;stkvar	_n @ sp[(-4)+-6]
  6084                           ;stkvar	_s @ sp[(-4)+0]
  6085  014520  0EFC               	movlw	-4
  6086  014522  006F FF8C  F03F    	movff	plusw1,btemp+10
  6087  014528  0EFD               	movlw	-3
  6088  01452A  006F FF8C  F040    	movff	plusw1,btemp+11
  6089  014530  0EF6               	movlw	-10
  6090  014532  50E3               	movf	plusw1,w,c
  6091  014534  263F               	addwf	(btemp+10)^0,f,c
  6092  014536  0EF7               	movlw	-9
  6093  014538  50E3               	movf	plusw1,w,c
  6094  01453A  2240               	addwfc	(btemp+11)^0,f,c
  6095  01453C  0EFF               	movlw	255
  6096  01453E  243F               	addwf	(btemp+10)^0,w,c
  6097  014540  6ED9               	movwf	fsr2l,c
  6098  014542  0EFF               	movlw	255
  6099  014544  2040               	addwfc	(btemp+11)^0,w,c
  6100  014546  6EDA               	movwf	fsr2h,c
  6101  014548  0EF8               	movlw	-8
  6102  01454A  006F FF8F FFDF     	movff	plusw1,indf2
  6103                           
  6104                           ;stkvar	_n @ sp[(-4)+-6]
  6105  014550  0EF7               	movlw	-9
  6106  014552  50E3               	movf	plusw1,w,c
  6107  014554  E108               	bnz	l9602
  6108  014556  0EF6               	movlw	-10
  6109  014558  006F FF8C  F035    	movff	plusw1,btemp
  6110  01455E  0E03               	movlw	3
  6111  014560  5E35               	subwf	btemp^0,f,c
  6112  014562  A0D8               	btfss	status,0,c
  6113  014564  D125               	goto	u9670
  6114  014566                     l9602:
  6115                           
  6116                           ;stkvar	_c @ sp[(-4)+-4]
  6117                           ;stkvar	_s @ sp[(-4)+0]
  6118  014566  0EFC               	movlw	-4
  6119  014568  006F FF8C  F03F    	movff	plusw1,btemp+10
  6120  01456E  0EFD               	movlw	-3
  6121  014570  006F FF8C  F040    	movff	plusw1,btemp+11
  6122  014576  0E01               	movlw	1
  6123  014578  243F               	addwf	(btemp+10)^0,w,c
  6124  01457A  6ED9               	movwf	fsr2l,c
  6125  01457C  0E00               	movlw	0
  6126  01457E  2040               	addwfc	(btemp+11)^0,w,c
  6127  014580  6EDA               	movwf	fsr2h,c
  6128  014582  0EF8               	movlw	-8
  6129  014584  006F FF8F FFDF     	movff	plusw1,indf2
  6130                           
  6131                           ;stkvar	_c @ sp[(-4)+-4]
  6132                           ;stkvar	_s @ sp[(-4)+0]
  6133  01458A  0EFC               	movlw	-4
  6134  01458C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6135  014592  0EFD               	movlw	-3
  6136  014594  006F FF8C  F040    	movff	plusw1,btemp+11
  6137  01459A  0E02               	movlw	2
  6138  01459C  243F               	addwf	(btemp+10)^0,w,c
  6139  01459E  6ED9               	movwf	fsr2l,c
  6140  0145A0  0E00               	movlw	0
  6141  0145A2  2040               	addwfc	(btemp+11)^0,w,c
  6142  0145A4  6EDA               	movwf	fsr2h,c
  6143  0145A6  0EF8               	movlw	-8
  6144  0145A8  006F FF8F FFDF     	movff	plusw1,indf2
  6145                           
  6146                           ;stkvar	_c @ sp[(-4)+-4]
  6147                           ;stkvar	_n @ sp[(-4)+-6]
  6148                           ;stkvar	_s @ sp[(-4)+0]
  6149  0145AE  0EFC               	movlw	-4
  6150  0145B0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6151  0145B6  0EFD               	movlw	-3
  6152  0145B8  006F FF8C  F040    	movff	plusw1,btemp+11
  6153  0145BE  0EF6               	movlw	-10
  6154  0145C0  50E3               	movf	plusw1,w,c
  6155  0145C2  263F               	addwf	(btemp+10)^0,f,c
  6156  0145C4  0EF7               	movlw	-9
  6157  0145C6  50E3               	movf	plusw1,w,c
  6158  0145C8  2240               	addwfc	(btemp+11)^0,f,c
  6159  0145CA  0EFE               	movlw	254
  6160  0145CC  243F               	addwf	(btemp+10)^0,w,c
  6161  0145CE  6ED9               	movwf	fsr2l,c
  6162  0145D0  0EFF               	movlw	255
  6163  0145D2  2040               	addwfc	(btemp+11)^0,w,c
  6164  0145D4  6EDA               	movwf	fsr2h,c
  6165  0145D6  0EF8               	movlw	-8
  6166  0145D8  006F FF8F FFDF     	movff	plusw1,indf2
  6167                           
  6168                           ;stkvar	_c @ sp[(-4)+-4]
  6169                           ;stkvar	_n @ sp[(-4)+-6]
  6170                           ;stkvar	_s @ sp[(-4)+0]
  6171  0145DE  0EFC               	movlw	-4
  6172  0145E0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6173  0145E6  0EFD               	movlw	-3
  6174  0145E8  006F FF8C  F040    	movff	plusw1,btemp+11
  6175  0145EE  0EF6               	movlw	-10
  6176  0145F0  50E3               	movf	plusw1,w,c
  6177  0145F2  263F               	addwf	(btemp+10)^0,f,c
  6178  0145F4  0EF7               	movlw	-9
  6179  0145F6  50E3               	movf	plusw1,w,c
  6180  0145F8  2240               	addwfc	(btemp+11)^0,f,c
  6181  0145FA  0EFD               	movlw	253
  6182  0145FC  243F               	addwf	(btemp+10)^0,w,c
  6183  0145FE  6ED9               	movwf	fsr2l,c
  6184  014600  0EFF               	movlw	255
  6185  014602  2040               	addwfc	(btemp+11)^0,w,c
  6186  014604  6EDA               	movwf	fsr2h,c
  6187  014606  0EF8               	movlw	-8
  6188  014608  006F FF8F FFDF     	movff	plusw1,indf2
  6189                           
  6190                           ;stkvar	_n @ sp[(-4)+-6]
  6191  01460E  0EF7               	movlw	-9
  6192  014610  50E3               	movf	plusw1,w,c
  6193  014612  E108               	bnz	l9608
  6194  014614  0EF6               	movlw	-10
  6195  014616  006F FF8C  F035    	movff	plusw1,btemp
  6196  01461C  0E07               	movlw	7
  6197  01461E  5E35               	subwf	btemp^0,f,c
  6198  014620  A0D8               	btfss	status,0,c
  6199  014622  D0C6               	goto	u9670
  6200  014624                     l9608:
  6201                           
  6202                           ;stkvar	_c @ sp[(-4)+-4]
  6203                           ;stkvar	_s @ sp[(-4)+0]
  6204  014624  0EFC               	movlw	-4
  6205  014626  006F FF8C  F03F    	movff	plusw1,btemp+10
  6206  01462C  0EFD               	movlw	-3
  6207  01462E  006F FF8C  F040    	movff	plusw1,btemp+11
  6208  014634  0E03               	movlw	3
  6209  014636  243F               	addwf	(btemp+10)^0,w,c
  6210  014638  6ED9               	movwf	fsr2l,c
  6211  01463A  0E00               	movlw	0
  6212  01463C  2040               	addwfc	(btemp+11)^0,w,c
  6213  01463E  6EDA               	movwf	fsr2h,c
  6214  014640  0EF8               	movlw	-8
  6215  014642  006F FF8F FFDF     	movff	plusw1,indf2
  6216                           
  6217                           ;stkvar	_c @ sp[(-4)+-4]
  6218                           ;stkvar	_n @ sp[(-4)+-6]
  6219                           ;stkvar	_s @ sp[(-4)+0]
  6220  014648  0EFC               	movlw	-4
  6221  01464A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6222  014650  0EFD               	movlw	-3
  6223  014652  006F FF8C  F040    	movff	plusw1,btemp+11
  6224  014658  0EF6               	movlw	-10
  6225  01465A  50E3               	movf	plusw1,w,c
  6226  01465C  263F               	addwf	(btemp+10)^0,f,c
  6227  01465E  0EF7               	movlw	-9
  6228  014660  50E3               	movf	plusw1,w,c
  6229  014662  2240               	addwfc	(btemp+11)^0,f,c
  6230  014664  0EFC               	movlw	252
  6231  014666  243F               	addwf	(btemp+10)^0,w,c
  6232  014668  6ED9               	movwf	fsr2l,c
  6233  01466A  0EFF               	movlw	255
  6234  01466C  2040               	addwfc	(btemp+11)^0,w,c
  6235  01466E  6EDA               	movwf	fsr2h,c
  6236  014670  0EF8               	movlw	-8
  6237  014672  006F FF8F FFDF     	movff	plusw1,indf2
  6238                           
  6239                           ;stkvar	_n @ sp[(-4)+-6]
  6240  014678  0EF7               	movlw	-9
  6241  01467A  50E3               	movf	plusw1,w,c
  6242  01467C  E108               	bnz	l9614
  6243  01467E  0EF6               	movlw	-10
  6244  014680  006F FF8C  F035    	movff	plusw1,btemp
  6245  014686  0E09               	movlw	9
  6246  014688  5E35               	subwf	btemp^0,f,c
  6247  01468A  A0D8               	btfss	status,0,c
  6248  01468C  D091               	goto	u9670
  6249  01468E                     l9614:
  6250                           
  6251                           ;stkvar	_s @ sp[(-4)+0]
  6252  01468E  0EFC               	movlw	-4
  6253  014690  006F FF8C  F03F    	movff	plusw1,btemp+10
  6254  014696  1E3F               	comf	(btemp+10)^0,f,c
  6255  014698  0EFD               	movlw	-3
  6256  01469A  006F FF8C  F040    	movff	plusw1,btemp+11
  6257  0146A0  1E40               	comf	(btemp+11)^0,f,c
  6258  0146A2  2A3F               	incf	(btemp+10)^0,f,c
  6259  0146A4  B4D8               	btfsc	status,2,c
  6260  0146A6  2A40               	incf	(btemp+11)^0,f,c
  6261  0146A8  0E03               	movlw	3
  6262  0146AA  163F               	andwf	(btemp+10)^0,f,c
  6263  0146AC  0E00               	movlw	0
  6264  0146AE  1640               	andwf	(btemp+11)^0,f,c
  6265                           
  6266                           ;stkvar	_k @ sp[(-4)+2]
  6267  0146B0  0EFE               	movlw	-2
  6268  0146B2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6269  0146B8  0EFF               	movlw	-1
  6270  0146BA  0060  F103  FFE3   	movff	btemp+11,plusw1
  6271                           
  6272                           ;stkvar	_k @ sp[(-4)+2]
  6273                           ;stkvar	_s @ sp[(-4)+0]
  6274  0146C0  0EFC               	movlw	-4
  6275  0146C2  50E3               	movf	plusw1,w,c
  6276  0146C4  6E35               	movwf	btemp^0,c
  6277  0146C6  0EFE               	movlw	-2
  6278  0146C8  50E3               	movf	plusw1,w,c
  6279  0146CA  2635               	addwf	btemp^0,f,c
  6280  0146CC  0EFC               	movlw	-4
  6281  0146CE  0060  F0D7  FFE3   	movff	btemp,plusw1
  6282  0146D4  0EFD               	movlw	-3
  6283  0146D6  50E3               	movf	plusw1,w,c
  6284  0146D8  6E35               	movwf	btemp^0,c
  6285  0146DA  0EFF               	movlw	-1
  6286  0146DC  50E3               	movf	plusw1,w,c
  6287  0146DE  2235               	addwfc	btemp^0,f,c
  6288  0146E0  0EFD               	movlw	-3
  6289  0146E2  0060  F0D7  FFE3   	movff	btemp,plusw1
  6290                           
  6291                           ;stkvar	_k @ sp[(-4)+2]
  6292                           ;stkvar	_n @ sp[(-4)+-6]
  6293  0146E8  0EF6               	movlw	-10
  6294  0146EA  50E3               	movf	plusw1,w,c
  6295  0146EC  6E35               	movwf	btemp^0,c
  6296  0146EE  0EFE               	movlw	-2
  6297  0146F0  50E3               	movf	plusw1,w,c
  6298  0146F2  5E35               	subwf	btemp^0,f,c
  6299  0146F4  0EF6               	movlw	-10
  6300  0146F6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6301  0146FC  0EF7               	movlw	-9
  6302  0146FE  50E3               	movf	plusw1,w,c
  6303  014700  6E35               	movwf	btemp^0,c
  6304  014702  0EFF               	movlw	-1
  6305  014704  50E3               	movf	plusw1,w,c
  6306  014706  5A35               	subwfb	btemp^0,f,c
  6307  014708  0EF7               	movlw	-9
  6308  01470A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6309  014710  0EFC               	movlw	252
  6310  014712  6E3F               	movwf	(btemp+10)^0,c
  6311  014714  0EFF               	movlw	255
  6312  014716  6E40               	movwf	(btemp+11)^0,c
  6313                           
  6314                           ;stkvar	_n @ sp[(-4)+-6]
  6315  014718  0EF6               	movlw	-10
  6316  01471A  006F FF8C  F035    	movff	plusw1,btemp
  6317  014720  503F               	movf	(btemp+10)^0,w,c
  6318  014722  1635               	andwf	btemp^0,f,c
  6319  014724  0EF6               	movlw	-10
  6320  014726  0060  F0D7  FFE3   	movff	btemp,plusw1
  6321  01472C  0EF7               	movlw	-9
  6322  01472E  006F FF8C  F035    	movff	plusw1,btemp
  6323  014734  5040               	movf	(btemp+11)^0,w,c
  6324  014736  1635               	andwf	btemp^0,f,c
  6325  014738  0EF7               	movlw	-9
  6326  01473A  D02E               	goto	L4
  6327  01473C                     l9622:
  6328                           
  6329                           ;stkvar	_c @ sp[(-4)+-4]
  6330                           ;stkvar	_s @ sp[(-4)+0]
  6331  01473C  0EFC               	movlw	-4
  6332  01473E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6333  014744  0EFD               	movlw	-3
  6334  014746  006F FF8F FFDA     	movff	plusw1,fsr2h
  6335  01474C  0EF8               	movlw	-8
  6336  01474E  006F FF8F FFDF     	movff	plusw1,indf2
  6337                           
  6338                           ;stkvar	_n @ sp[(-4)+-6]
  6339  014754  0EF6               	movlw	-10
  6340  014756  006F FF8C  F035    	movff	plusw1,btemp
  6341  01475C  0E01               	movlw	1
  6342  01475E  5E35               	subwf	btemp^0,f,c
  6343  014760  0EF6               	movlw	-10
  6344  014762  0060  F0D7  FFE3   	movff	btemp,plusw1
  6345  014768  0EF7               	movlw	-9
  6346  01476A  006F FF8C  F035    	movff	plusw1,btemp
  6347  014770  0E00               	movlw	0
  6348  014772  5A35               	subwfb	btemp^0,f,c
  6349  014774  0EF7               	movlw	-9
  6350  014776  0060  F0D7  FFE3   	movff	btemp,plusw1
  6351                           
  6352                           ;stkvar	_s @ sp[(-4)+0]
  6353  01477C  0EFC               	movlw	-4
  6354  01477E  50E3               	movf	plusw1,w,c
  6355  014780  0F01               	addlw	1
  6356  014782  6E35               	movwf	btemp^0,c
  6357  014784  0EFC               	movlw	-4
  6358  014786  0060  F0D7  FFE3   	movff	btemp,plusw1
  6359  01478C  6A35               	clrf	btemp^0,c
  6360  01478E  0EFD               	movlw	-3
  6361  014790  50E3               	movf	plusw1,w,c
  6362  014792  2035               	addwfc	btemp^0,w,c
  6363  014794  6E35               	movwf	btemp^0,c
  6364  014796  0EFD               	movlw	-3
  6365  014798                     L4:
  6366  014798  0060  F0D7  FFE3   	movff	btemp,plusw1
  6367                           
  6368                           ;stkvar	_n @ sp[(-4)+-6]
  6369  01479E  0EF6               	movlw	-10
  6370  0147A0  006F FF8C  F035    	movff	plusw1,btemp
  6371  0147A6  0EF7               	movlw	-9
  6372  0147A8  50E3               	movf	plusw1,w,c
  6373  0147AA  1035               	iorwf	btemp^0,w,c
  6374  0147AC  A4D8               	btfss	status,2,c
  6375  0147AE  D7C6               	goto	l9622
  6376  0147B0                     u9670:
  6377                           
  6378                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6379  0147B0  0EF6               	movlw	246
  6380  0147B2  26E1               	addwf	fsr1l,f,c
  6381  0147B4  0EFF               	movlw	255
  6382  0147B6  22E2               	addwfc	fsr1h,f,c
  6383  0147B8  0012               	return		;funcret
  6384  0147BA                     __end_of_memset:
  6385                           	opt callstack 0
  6386                           
  6387 ;; *************** function _printf *****************
  6388 ;; Defined at:
  6389 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  fmt             2  [STACK] PTR const unsigned char 
  6392 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  ap              2  [STACK] PTR void [1]
  6395 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6396 ;;  ret             2    0        int 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2  [STACK] int 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6401 ;; Tracked objects:
  6402 ;;		On entry : 3F/3B
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6410 ;;Total ram usage:        0 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:   14
  6413 ;; This function calls:
  6414 ;;		_vfprintf
  6415 ;; This function is called by:
  6416 ;;		_eaDogM_WriteString
  6417 ;;		_send_lcd_cmd_dma
  6418 ;; This function uses a reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text30
  6422  0175FA                     __ptext30:
  6423                           	opt callstack 0
  6424  0175FA                     _printf:
  6425                           	opt callstack 0
  6426                           
  6427                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6428  0175FA  52E6               	movf	postinc1,f,c
  6429  0175FC  52E6               	movf	postinc1,f,c
  6430                           
  6431                           ;stkvar	?_printf @ sp[(-2)+-3]
  6432                           
  6433                           ;incstack = 0
  6434  0175FE  0EFB               	movlw	251
  6435  017600  24E1               	addwf	fsr1l,w,c
  6436  017602  6E3F               	movwf	(btemp+10)^0,c
  6437  017604  0EFF               	movlw	255
  6438  017606  20E2               	addwfc	fsr1h,w,c
  6439  017608  6E40               	movwf	(btemp+11)^0,c
  6440                           
  6441                           ;stkvar	_ap @ sp[(-2)+0]
  6442  01760A  0EFF               	movlw	-1
  6443  01760C  0060  F103  FFE3   	movff	btemp+11,plusw1
  6444  017612  0EFE               	movlw	-2
  6445  017614  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6446                           
  6447                           ;stkvar	_ap @ sp[(-2)+0]
  6448  01761A  0EFE               	movlw	254
  6449  01761C  24E1               	addwf	fsr1l,w,c
  6450  01761E  6E35               	movwf	btemp^0,c
  6451  017620  0EFF               	movlw	255
  6452  017622  20E2               	addwfc	fsr1h,w,c
  6453  017624  6E36               	movwf	(btemp+1)^0,c
  6454  017626  0060  F0D7  FFE6   	movff	btemp,postinc1
  6455  01762C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6456                           
  6457                           ;stkvar	_fmt @ sp[(-4)+-3]
  6458  017632  0EF9               	movlw	-7
  6459  017634  006F FF8F FFE6     	movff	plusw1,postinc1
  6460  01763A  006F FF8F FFE6     	movff	plusw1,postinc1
  6461  017640  0E00               	movlw	0
  6462  017642  6EE6               	movwf	postinc1,c
  6463  017644  0E00               	movlw	0
  6464  017646  6EE6               	movwf	postinc1,c
  6465  017648  ECE0  F0B6         	call	_vfprintf	;wreg free
  6466                           
  6467                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6468  01764C  52E5               	movf	postdec1,f,c
  6469  01764E  52E5               	movf	postdec1,f,c
  6470  017650  52E5               	movf	postdec1,f,c
  6471  017652  50E7               	movf	indf1,w,c
  6472  017654  5EE1               	subwf	fsr1l,f,c
  6473  017656  0E00               	movlw	0
  6474  017658  5AE2               	subwfb	fsr1h,f,c
  6475  01765A  0012               	return		;funcret
  6476  01765C                     __end_of_printf:
  6477                           	opt callstack 0
  6478                           
  6479 ;; *************** function _vfprintf *****************
  6480 ;; Defined at:
  6481 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6484 ;;		 -> f(6), NULL(0), 
  6485 ;;  fmt             2  [STACK] PTR const unsigned char 
  6486 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6487 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6488 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6489 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6490 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6491 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6492 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6493 ;;  ap              2  [STACK] PTR PTR void 
  6494 ;;		 -> ap(2), ap(2), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  cfmt            2  [STACK] PTR unsigned char 
  6497 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6498 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6499 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6500 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6501 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6502 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6503 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  2  [STACK] int 
  6506 ;; Registers used:
  6507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/4
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6517 ;;Total ram usage:        0 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:   13
  6520 ;; This function calls:
  6521 ;;		_vfpfcnvrt
  6522 ;; This function is called by:
  6523 ;;		_sprintf
  6524 ;;		_printf
  6525 ;; This function uses a reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text31
  6529  016DC0                     __ptext31:
  6530                           	opt callstack 0
  6531  016DC0                     _vfprintf:
  6532                           	opt callstack 0
  6533                           
  6534                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6535  016DC0  52E6               	movf	postinc1,f,c
  6536  016DC2  52E6               	movf	postinc1,f,c
  6537                           
  6538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6539                           ;stkvar	_fmt @ sp[(-2)+-4]
  6540                           
  6541                           ;incstack = 0
  6542  016DC4  0EFA               	movlw	-6
  6543  016DC6  006F FF8C  F03F    	movff	plusw1,btemp+10
  6544  016DCC  0EFB               	movlw	-5
  6545  016DCE  006F FF8C  F040    	movff	plusw1,btemp+11
  6546                           
  6547                           ;stkvar	_cfmt @ sp[(-2)+0]
  6548  016DD4  0EFF               	movlw	-1
  6549  016DD6  0060  F103  FFE3   	movff	btemp+11,plusw1
  6550  016DDC  0EFE               	movlw	-2
  6551  016DDE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6552                           
  6553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6554  016DE4  6A1C               	clrf	_nout^0,c
  6555  016DE6  6A1D               	clrf	(_nout+1)^0,c
  6556                           
  6557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6558  016DE8  D020               	goto	l9636
  6559  016DEA                     l9634:
  6560                           
  6561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6562                           ;stkvar	_ap @ sp[(-2)+-6]
  6563  016DEA  0EF8               	movlw	-8
  6564  016DEC  006F FF8F FFE6     	movff	plusw1,postinc1
  6565  016DF2  006F FF8F FFE6     	movff	plusw1,postinc1
  6566                           
  6567                           ;stkvar	_cfmt @ sp[(-4)+0]
  6568  016DF8  0EFC               	movlw	252
  6569  016DFA  24E1               	addwf	fsr1l,w,c
  6570  016DFC  6E35               	movwf	btemp^0,c
  6571  016DFE  0EFF               	movlw	255
  6572  016E00  20E2               	addwfc	fsr1h,w,c
  6573  016E02  6E36               	movwf	(btemp+1)^0,c
  6574  016E04  0060  F0D7  FFE6   	movff	btemp,postinc1
  6575  016E0A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6576                           
  6577                           ;stkvar	_fp @ sp[(-6)+-2]
  6578  016E10  0EF8               	movlw	-8
  6579  016E12  006F FF8F FFE6     	movff	plusw1,postinc1
  6580  016E18  006F FF8F FFE6     	movff	plusw1,postinc1
  6581  016E1E  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6582  016E22  5035               	movf	btemp^0,w,c
  6583  016E24  261C               	addwf	_nout^0,f,c
  6584  016E26  5036               	movf	(btemp+1)^0,w,c
  6585  016E28  221D               	addwfc	(_nout+1)^0,f,c
  6586  016E2A                     l9636:
  6587                           
  6588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6589                           ;stkvar	_cfmt @ sp[(-2)+0]
  6590  016E2A  50E1               	movf	fsr1l,w,c
  6591  016E2C  0FFE               	addlw	-2
  6592  016E2E  6ED9               	movwf	fsr2l,c
  6593  016E30  50E2               	movf	fsr1h,w,c
  6594  016E32  6EDA               	movwf	fsr2h,c
  6595  016E34  0EFF               	movlw	255
  6596  016E36  22DA               	addwfc	fsr2h,f,c
  6597  016E38  006F FF7B FFF6     	movff	postinc2,tblptrl
  6598  016E3E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6599  016E44                     	if	0	;tblptru may be non-zero
  6600  016E44                     	endif
  6601  016E44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6602  016E44  0E00               	movlw	low (__mediumconst shr (0+16))
  6603  016E46  6EF8               	movwf	tblptru,c
  6604  016E48                     	endif
  6605  016E48  0008               	tblrd		*
  6606  016E4A  50F5               	movf	tablat,w,c
  6607  016E4C  0900               	iorlw	0
  6608  016E4E  A4D8               	btfss	status,2,c
  6609  016E50  D7CC               	goto	l9634
  6610                           
  6611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6612  016E52  0060  F070  F035   	movff	_nout,btemp
  6613  016E58  0060  F074  F036   	movff	_nout+1,btemp+1
  6614                           
  6615                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6616  016E5E  0EF8               	movlw	248
  6617  016E60  26E1               	addwf	fsr1l,f,c
  6618  016E62  0EFF               	movlw	255
  6619  016E64  22E2               	addwfc	fsr1h,f,c
  6620  016E66  0012               	return		;funcret
  6621  016E68                     __end_of_vfprintf:
  6622                           	opt callstack 0
  6623                           
  6624 ;; *************** function _vfpfcnvrt *****************
  6625 ;; Defined at:
  6626 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6629 ;;		 -> f(6), NULL(0), 
  6630 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6631 ;;		 -> cfmt(2), 
  6632 ;;  ap              2  [STACK] PTR PTR void 
  6633 ;;		 -> ap(2), ap(2), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  llu             8  [STACK] unsigned long long 
  6636 ;;  ll              8  [STACK] long long 
  6637 ;;  f               4  [STACK] long long 
  6638 ;;  ct              3  [STACK] unsigned char [3]
  6639 ;;  vp              3    0        PTR void 
  6640 ;;  cp              2  [STACK] PTR unsigned char 
  6641 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6642 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6643 ;;		 -> STR_3(4), V(189), 
  6644 ;;  i               2    0        int 
  6645 ;;  done            2    0        int 
  6646 ;;  c               1  [STACK] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2  [STACK] int 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/4
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:   12
  6663 ;; This function calls:
  6664 ;;		_atoi
  6665 ;;		_ctoa
  6666 ;;		_dtoa
  6667 ;;		_efgtoa
  6668 ;;		_fputc
  6669 ;;		_isdigit
  6670 ;;		_isupper
  6671 ;;		_stoa
  6672 ;;		_strncmp
  6673 ;;		_tolower
  6674 ;;		_xtoa
  6675 ;; This function is called by:
  6676 ;;		_vfprintf
  6677 ;; This function uses a reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text32
  6681  011244                     __ptext32:
  6682                           	opt callstack 0
  6683  011244                     _vfpfcnvrt:
  6684                           	opt callstack 0
  6685                           
  6686                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6687  011244  0E20               	movlw	32
  6688  011246  26E1               	addwf	fsr1l,f,c
  6689  011248  0E00               	movlw	0
  6690  01124A  22E2               	addwfc	fsr1h,f,c
  6691                           
  6692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6693                           ;stkvar	_fmt @ sp[(-32)+-4]
  6694                           
  6695                           ;incstack = 0
  6696  01124C  0EDC               	movlw	-36
  6697  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6698  011254  0EDD               	movlw	-35
  6699  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6700  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6701  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6702  011268                     	if	0	;tblptru may be non-zero
  6703  011268                     	endif
  6704  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6705  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6706  01126A  6EF8               	movwf	tblptru,c
  6707  01126C                     	endif
  6708  01126C  0008               	tblrd		*
  6709  01126E  50F5               	movf	tablat,w,c
  6710  011270  0A25               	xorlw	37
  6711  011272  A4D8               	btfss	status,2,c
  6712  011274  EF92  F08E         	goto	l9580
  6713                           
  6714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6715                           ;stkvar	_fmt @ sp[(-32)+-4]
  6716  011278  0EDC               	movlw	-36
  6717  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6718  011280  0EDD               	movlw	-35
  6719  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6720  011288  2ADE               	incf	postinc2,f,c
  6721  01128A  0E00               	movlw	0
  6722  01128C  22DD               	addwfc	postdec2,f,c
  6723                           
  6724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6725  01128E  6A1E               	clrf	_width^0,c
  6726  011290  6A1F               	clrf	(_width+1)^0,c
  6727  011292  6A22               	clrf	_flags^0,c
  6728  011294  6A23               	clrf	(_flags+1)^0,c
  6729                           
  6730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6731  011296  6820               	setf	_prec^0,c
  6732  011298  6821               	setf	(_prec+1)^0,c
  6733                           
  6734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6735                           ;stkvar	_fmt @ sp[(-32)+-4]
  6736  01129A  0EDC               	movlw	-36
  6737  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6738  0112A2  0EDD               	movlw	-35
  6739  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6740  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6741  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6742  0112B6                     	if	0	;tblptru may be non-zero
  6743  0112B6                     	endif
  6744  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6745  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6746  0112B8  6EF8               	movwf	tblptru,c
  6747  0112BA                     	endif
  6748  0112BA  0008               	tblrd		*
  6749  0112BC  50F5               	movf	tablat,w,c
  6750  0112BE  0A2A               	xorlw	42
  6751  0112C0  A4D8               	btfss	status,2,c
  6752  0112C2  D031               	goto	l9444
  6753                           
  6754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6755                           ;stkvar	_fmt @ sp[(-32)+-4]
  6756  0112C4  0EDC               	movlw	-36
  6757  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6758  0112CC  0EDD               	movlw	-35
  6759  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6760  0112D4  2ADE               	incf	postinc2,f,c
  6761  0112D6  0E00               	movlw	0
  6762  0112D8  22DD               	addwfc	postdec2,f,c
  6763                           
  6764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6765                           ;stkvar	_ap @ sp[(-32)+-6]
  6766  0112DA  0EDA               	movlw	-38
  6767  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6768  0112E2  0EDB               	movlw	-37
  6769  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6770  0112EA  0E02               	movlw	2
  6771  0112EC  5EDE               	subwf	postinc2,f,c
  6772  0112EE  0E00               	movlw	0
  6773  0112F0  5ADD               	subwfb	postdec2,f,c
  6774  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6775  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6776  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6777  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6778  01130A  006F FF78  F01E    	movff	postinc2,_width
  6779  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6780                           
  6781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6782  011316  AE1F               	btfss	(_width+1)^0,7,c
  6783  011318  D066               	goto	u9430
  6784                           
  6785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6786  01131A  8022               	bsf	_flags^0,0,c
  6787                           
  6788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6789  01131C  6C1E               	negf	_width^0,c
  6790  01131E  1E1F               	comf	(_width+1)^0,f,c
  6791  011320  B0D8               	btfsc	status,0,c
  6792  011322  2A1F               	incf	(_width+1)^0,f,c
  6793  011324  D060               	goto	u9430
  6794  011326                     l9444:
  6795                           
  6796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6797                           ;stkvar	_fmt @ sp[(-32)+-4]
  6798  011326  0EDC               	movlw	-36
  6799  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6800  01132E  0EDD               	movlw	-35
  6801  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6802  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6803  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6804  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6805  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6806  01134E  ECE9  F0A7         	call	_atoi	;wreg free
  6807  011352  0060  F0D4  F01E   	movff	btemp,_width
  6808  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6809                           
  6810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6811  01135E  D00B               	goto	l9448
  6812  011360                     l9446:
  6813                           
  6814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6815                           ;stkvar	_fmt @ sp[(-32)+-4]
  6816  011360  0EDC               	movlw	-36
  6817  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6818  011368  0EDD               	movlw	-35
  6819  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6820  011370  2ADE               	incf	postinc2,f,c
  6821  011372  0E00               	movlw	0
  6822  011374  22DD               	addwfc	postdec2,f,c
  6823  011376                     l9448:
  6824  011376  0ED0               	movlw	208
  6825  011378  6E3F               	movwf	(btemp+10)^0,c
  6826  01137A  0EFF               	movlw	255
  6827  01137C  6E40               	movwf	(btemp+11)^0,c
  6828                           
  6829                           ;stkvar	_fmt @ sp[(-32)+-4]
  6830  01137E  0EDC               	movlw	-36
  6831  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6832  011386  0EDD               	movlw	-35
  6833  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6834  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6835  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6836  01139A                     	if	0	;tblptru may be non-zero
  6837  01139A                     	endif
  6838  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6839  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6840  01139C  6EF8               	movwf	tblptru,c
  6841  01139E                     	endif
  6842  01139E  0008               	tblrd		*
  6843  0113A0  50F5               	movf	tablat,w,c
  6844  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6845  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6846  0113A6  503F               	movf	(btemp+10)^0,w,c
  6847  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6848  0113AA  5040               	movf	(btemp+11)^0,w,c
  6849  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6850  0113AE  503E               	movf	(btemp+9)^0,w,c
  6851  0113B0  E106               	bnz	u9410
  6852  0113B2  0E0A               	movlw	10
  6853  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6854  0113B6  B0D8               	btfsc	status,0,c
  6855  0113B8  D002               	goto	u9410
  6856  0113BA  0E01               	movlw	1
  6857  0113BC  D001               	goto	u9420
  6858  0113BE                     u9410:
  6859  0113BE  0E00               	movlw	0
  6860  0113C0                     u9420:
  6861  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6862  0113C2  6A40               	clrf	(btemp+11)^0,c
  6863                           
  6864                           ;stkvar	_vfpfcnvrt$4151 @ sp[(-32)+4]
  6865  0113C4  0EE4               	movlw	-28
  6866  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6867  0113CC  0EE5               	movlw	-27
  6868  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6869                           
  6870                           ;stkvar	_vfpfcnvrt$4151 @ sp[(-32)+4]
  6871  0113D4  0EE4               	movlw	-28
  6872  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6873  0113DC  0EE5               	movlw	-27
  6874  0113DE  50E3               	movf	plusw1,w,c
  6875  0113E0  1035               	iorwf	btemp^0,w,c
  6876  0113E2  A4D8               	btfss	status,2,c
  6877  0113E4  D7BD               	goto	l9446
  6878  0113E6                     u9430:
  6879                           
  6880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6881                           ;stkvar	_fmt @ sp[(-32)+-4]
  6882  0113E6  0EDC               	movlw	-36
  6883  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6884  0113EE  0EDD               	movlw	-35
  6885  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6886  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6887  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6888  011402                     	if	0	;tblptru may be non-zero
  6889  011402                     	endif
  6890  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6891  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6892  011404  6EF8               	movwf	tblptru,c
  6893  011406                     	endif
  6894  011406  0008               	tblrd		*
  6895  011408  50F5               	movf	tablat,w,c
  6896  01140A  0A2E               	xorlw	46
  6897  01140C  A4D8               	btfss	status,2,c
  6898  01140E  D0AC               	goto	u9480
  6899                           
  6900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6901  011410  6A20               	clrf	_prec^0,c
  6902  011412  6A21               	clrf	(_prec+1)^0,c
  6903                           
  6904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6905                           ;stkvar	_fmt @ sp[(-32)+-4]
  6906  011414  0EDC               	movlw	-36
  6907  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6908  01141C  0EDD               	movlw	-35
  6909  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6910  011424  2ADE               	incf	postinc2,f,c
  6911  011426  0E00               	movlw	0
  6912  011428  22DD               	addwfc	postdec2,f,c
  6913                           
  6914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6915                           ;stkvar	_fmt @ sp[(-32)+-4]
  6916  01142A  0EDC               	movlw	-36
  6917  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6918  011432  0EDD               	movlw	-35
  6919  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6920  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6921  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  6922  011446                     	if	0	;tblptru may be non-zero
  6923  011446                     	endif
  6924  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6925  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  6926  011448  6EF8               	movwf	tblptru,c
  6927  01144A                     	endif
  6928  01144A  0008               	tblrd		*
  6929  01144C  50F5               	movf	tablat,w,c
  6930  01144E  0A2A               	xorlw	42
  6931  011450  A4D8               	btfss	status,2,c
  6932  011452  D02A               	goto	l9466
  6933                           
  6934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  6935                           ;stkvar	_fmt @ sp[(-32)+-4]
  6936  011454  0EDC               	movlw	-36
  6937  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  6938  01145C  0EDD               	movlw	-35
  6939  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6940  011464  2ADE               	incf	postinc2,f,c
  6941  011466  0E00               	movlw	0
  6942  011468  22DD               	addwfc	postdec2,f,c
  6943                           
  6944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6945                           ;stkvar	_ap @ sp[(-32)+-6]
  6946  01146A  0EDA               	movlw	-38
  6947  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6948  011472  0EDB               	movlw	-37
  6949  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  6950  01147A  0E02               	movlw	2
  6951  01147C  5EDE               	subwf	postinc2,f,c
  6952  01147E  0E00               	movlw	0
  6953  011480  5ADD               	subwfb	postdec2,f,c
  6954  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  6955  011488  006F FF74  F040    	movff	postdec2,btemp+11
  6956  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6957  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6958  01149A  006F FF78  F020    	movff	postinc2,_prec
  6959  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  6960                           
  6961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  6962  0114A6  D060               	goto	u9480
  6963  0114A8                     l9466:
  6964                           
  6965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  6966                           ;stkvar	_fmt @ sp[(-32)+-4]
  6967  0114A8  0EDC               	movlw	-36
  6968  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6969  0114B0  0EDD               	movlw	-35
  6970  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6971  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  6972  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  6973  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6974  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  6975  0114D0  ECE9  F0A7         	call	_atoi	;wreg free
  6976  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  6977  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  6978                           
  6979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6980  0114E0  D00B               	goto	l9470
  6981  0114E2                     l9468:
  6982                           
  6983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  6984                           ;stkvar	_fmt @ sp[(-32)+-4]
  6985  0114E2  0EDC               	movlw	-36
  6986  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6987  0114EA  0EDD               	movlw	-35
  6988  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6989  0114F2  2ADE               	incf	postinc2,f,c
  6990  0114F4  0E00               	movlw	0
  6991  0114F6  22DD               	addwfc	postdec2,f,c
  6992  0114F8                     l9470:
  6993  0114F8  0ED0               	movlw	208
  6994  0114FA  6E3F               	movwf	(btemp+10)^0,c
  6995  0114FC  0EFF               	movlw	255
  6996  0114FE  6E40               	movwf	(btemp+11)^0,c
  6997                           
  6998                           ;stkvar	_fmt @ sp[(-32)+-4]
  6999  011500  0EDC               	movlw	-36
  7000  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7001  011508  0EDD               	movlw	-35
  7002  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7003  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7004  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7005  01151C                     	if	0	;tblptru may be non-zero
  7006  01151C                     	endif
  7007  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7008  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7009  01151E  6EF8               	movwf	tblptru,c
  7010  011520                     	endif
  7011  011520  0008               	tblrd		*
  7012  011522  50F5               	movf	tablat,w,c
  7013  011524  6E3D               	movwf	(btemp+8)^0,c
  7014  011526  6A3E               	clrf	(btemp+9)^0,c
  7015  011528  503F               	movf	(btemp+10)^0,w,c
  7016  01152A  263D               	addwf	(btemp+8)^0,f,c
  7017  01152C  5040               	movf	(btemp+11)^0,w,c
  7018  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7019  011530  503E               	movf	(btemp+9)^0,w,c
  7020  011532  E106               	bnz	u9460
  7021  011534  0E0A               	movlw	10
  7022  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7023  011538  B0D8               	btfsc	status,0,c
  7024  01153A  D002               	goto	u9460
  7025  01153C  0E01               	movlw	1
  7026  01153E  D001               	goto	u9470
  7027  011540                     u9460:
  7028  011540  0E00               	movlw	0
  7029  011542                     u9470:
  7030  011542  6E3F               	movwf	(btemp+10)^0,c
  7031  011544  6A40               	clrf	(btemp+11)^0,c
  7032                           
  7033                           ;stkvar	_vfpfcnvrt$4152 @ sp[(-32)+0]
  7034  011546  0EE0               	movlw	-32
  7035  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7036  01154E  0EE1               	movlw	-31
  7037  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7038                           
  7039                           ;stkvar	_vfpfcnvrt$4152 @ sp[(-32)+0]
  7040  011556  0EE0               	movlw	-32
  7041  011558  006F FF8C  F035    	movff	plusw1,btemp
  7042  01155E  0EE1               	movlw	-31
  7043  011560  50E3               	movf	plusw1,w,c
  7044  011562  1035               	iorwf	btemp^0,w,c
  7045  011564  A4D8               	btfss	status,2,c
  7046  011566  D7BD               	goto	l9468
  7047  011568                     u9480:
  7048                           
  7049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7050                           ;stkvar	_fmt @ sp[(-32)+-4]
  7051  011568  0EDC               	movlw	-36
  7052  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7053  011570  0EDD               	movlw	-35
  7054  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7055  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7056  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7057  011584                     	if	0	;tblptru may be non-zero
  7058  011584                     	endif
  7059  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7060  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7061  011586  6EF8               	movwf	tblptru,c
  7062  011588                     	endif
  7063  011588  0008               	tblrd		*
  7064  01158A  50F5               	movf	tablat,w,c
  7065  01158C  6EE6               	movwf	postinc1,c
  7066  01158E  0E00               	movlw	0
  7067  011590  6EE6               	movwf	postinc1,c
  7068  011592  EC86  F0B9         	call	_tolower	;wreg free
  7069                           
  7070                           ;stkvar	_ct @ sp[(-32)+26]
  7071  011596  0EFA               	movlw	-6
  7072  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7073                           
  7074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7075                           ;stkvar	_ct @ sp[(-32)+26]
  7076  01159E  0EFA               	movlw	-6
  7077  0115A0  50E3               	movf	plusw1,w,c
  7078  0115A2  B4D8               	btfsc	status,2,c
  7079  0115A4  D05B               	goto	l9486
  7080                           
  7081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7082                           ;stkvar	_ct @ sp[(-32)+26]
  7083  0115A6  0EFB               	movlw	251
  7084  0115A8  24E1               	addwf	fsr1l,w,c
  7085  0115AA  6ED9               	movwf	fsr2l,c
  7086  0115AC  0EFF               	movlw	255
  7087  0115AE  20E2               	addwfc	fsr1h,w,c
  7088  0115B0  6EDA               	movwf	fsr2h,c
  7089                           
  7090                           ;stkvar	_fmt @ sp[(-32)+-4]
  7091  0115B2  0EDC               	movlw	-36
  7092  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7093  0115BA  0EDD               	movlw	-35
  7094  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7095  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7096  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7097  0115CE  0E01               	movlw	1
  7098  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7099  0115D2  0E00               	movlw	0
  7100  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7101  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7102  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7103  0115E2                     	if	0	;tblptru may be non-zero
  7104  0115E2                     	endif
  7105  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7106  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7107  0115E4  6EF8               	movwf	tblptru,c
  7108  0115E6                     	endif
  7109  0115E6  0008               	tblrd		*
  7110  0115E8  50F5               	movf	tablat,w,c
  7111  0115EA  6EE6               	movwf	postinc1,c
  7112  0115EC  0E00               	movlw	0
  7113  0115EE  6EE6               	movwf	postinc1,c
  7114  0115F0  EC86  F0B9         	call	_tolower	;wreg free
  7115  0115F4  5035               	movf	btemp^0,w,c
  7116  0115F6  6EDF               	movwf	indf2,c
  7117                           
  7118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7119                           ;stkvar	_ct @ sp[(-32)+26]
  7120  0115F8  0EFB               	movlw	251
  7121  0115FA  24E1               	addwf	fsr1l,w,c
  7122  0115FC  6ED9               	movwf	fsr2l,c
  7123  0115FE  0EFF               	movlw	255
  7124  011600  20E2               	addwfc	fsr1h,w,c
  7125  011602  6EDA               	movwf	fsr2h,c
  7126  011604  50DF               	movf	indf2,w,c
  7127  011606  B4D8               	btfsc	status,2,c
  7128  011608  D029               	goto	l9486
  7129                           
  7130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7131                           ;stkvar	_ct @ sp[(-32)+26]
  7132  01160A  0EFC               	movlw	252
  7133  01160C  24E1               	addwf	fsr1l,w,c
  7134  01160E  6ED9               	movwf	fsr2l,c
  7135  011610  0EFF               	movlw	255
  7136  011612  20E2               	addwfc	fsr1h,w,c
  7137  011614  6EDA               	movwf	fsr2h,c
  7138                           
  7139                           ;stkvar	_fmt @ sp[(-32)+-4]
  7140  011616  0EDC               	movlw	-36
  7141  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7142  01161E  0EDD               	movlw	-35
  7143  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7144  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7145  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7146  011632  0E02               	movlw	2
  7147  011634  263F               	addwf	(btemp+10)^0,f,c
  7148  011636  0E00               	movlw	0
  7149  011638  2240               	addwfc	(btemp+11)^0,f,c
  7150  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7151  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7152  011646                     	if	0	;tblptru may be non-zero
  7153  011646                     	endif
  7154  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7155  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7156  011648  6EF8               	movwf	tblptru,c
  7157  01164A                     	endif
  7158  01164A  0008               	tblrd		*
  7159  01164C  50F5               	movf	tablat,w,c
  7160  01164E  6EE6               	movwf	postinc1,c
  7161  011650  0E00               	movlw	0
  7162  011652  6EE6               	movwf	postinc1,c
  7163  011654  EC86  F0B9         	call	_tolower	;wreg free
  7164  011658  5035               	movf	btemp^0,w,c
  7165  01165A  6EDF               	movwf	indf2,c
  7166  01165C                     l9486:
  7167                           
  7168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7169                           ;stkvar	_fmt @ sp[(-32)+-4]
  7170  01165C  0EDC               	movlw	-36
  7171  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7172  011664  0EDD               	movlw	-35
  7173  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7174  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7175  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7176  011678                     	if	0	;tblptru may be non-zero
  7177  011678                     	endif
  7178  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7179  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7180  01167A  6EF8               	movwf	tblptru,c
  7181  01167C                     	endif
  7182  01167C  0008               	tblrd		*
  7183  01167E  50F5               	movf	tablat,w,c
  7184  011680  0A63               	xorlw	99
  7185  011682  A4D8               	btfss	status,2,c
  7186  011684  D036               	goto	l9496
  7187                           
  7188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7189                           ;stkvar	_fmt @ sp[(-32)+-4]
  7190  011686  0EDC               	movlw	-36
  7191  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7192  01168E  0EDD               	movlw	-35
  7193  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7194  011696  2ADE               	incf	postinc2,f,c
  7195  011698  0E00               	movlw	0
  7196  01169A  22DD               	addwfc	postdec2,f,c
  7197                           
  7198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7199                           ;stkvar	_ap @ sp[(-32)+-6]
  7200  01169C  0EDA               	movlw	-38
  7201  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7202  0116A4  0EDB               	movlw	-37
  7203  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7204  0116AC  0E02               	movlw	2
  7205  0116AE  5EDE               	subwf	postinc2,f,c
  7206  0116B0  0E00               	movlw	0
  7207  0116B2  5ADD               	subwfb	postdec2,f,c
  7208  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7209  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7210  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7211  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7212  0116CC  50DF               	movf	indf2,w,c
  7213  0116CE  6E40               	movwf	(btemp+11)^0,c
  7214                           
  7215                           ;stkvar	_c @ sp[(-32)+31]
  7216  0116D0  0EFF               	movlw	-1
  7217  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7218                           
  7219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7220                           ;stkvar	_c @ sp[(-32)+31]
  7221  0116D8  0EFF               	movlw	-1
  7222  0116DA  50E3               	movf	plusw1,w,c
  7223  0116DC  6EE6               	movwf	postinc1,c
  7224                           
  7225                           ;stkvar	_fp @ sp[(-33)+-2]
  7226  0116DE  0EDD               	movlw	-35
  7227  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7228  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7229  0116EC  EC00  F0B9         	call	_ctoa	;wreg free
  7230  0116F0  D343               	goto	l1939
  7231  0116F2                     l9496:
  7232                           
  7233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7234                           ;stkvar	_fmt @ sp[(-32)+-4]
  7235  0116F2  0EDC               	movlw	-36
  7236  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7237  0116FA  0EDD               	movlw	-35
  7238  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7239  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7240  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7241  01170E                     	if	0	;tblptru may be non-zero
  7242  01170E                     	endif
  7243  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7244  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7245  011710  6EF8               	movwf	tblptru,c
  7246  011712                     	endif
  7247  011712  0008               	tblrd		*
  7248  011714  50F5               	movf	tablat,w,c
  7249  011716  0A64               	xorlw	100
  7250  011718  B4D8               	btfsc	status,2,c
  7251  01171A  D015               	goto	u9530
  7252                           
  7253                           ;stkvar	_fmt @ sp[(-32)+-4]
  7254  01171C  0EDC               	movlw	-36
  7255  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7256  011724  0EDD               	movlw	-35
  7257  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7258  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7259  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7260  011738                     	if	0	;tblptru may be non-zero
  7261  011738                     	endif
  7262  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7263  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7264  01173A  6EF8               	movwf	tblptru,c
  7265  01173C                     	endif
  7266  01173C  0008               	tblrd		*
  7267  01173E  50F5               	movf	tablat,w,c
  7268  011740  0A69               	xorlw	105
  7269  011742  A4D8               	btfss	status,2,c
  7270  011744  D075               	goto	l9508
  7271  011746                     u9530:
  7272                           
  7273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7274                           ;stkvar	_fmt @ sp[(-32)+-4]
  7275  011746  0EDC               	movlw	-36
  7276  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7277  01174E  0EDD               	movlw	-35
  7278  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7279  011756  2ADE               	incf	postinc2,f,c
  7280  011758  0E00               	movlw	0
  7281  01175A  22DD               	addwfc	postdec2,f,c
  7282                           
  7283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7284                           ;stkvar	_ap @ sp[(-32)+-6]
  7285  01175C  0EDA               	movlw	-38
  7286  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7287  011764  0EDB               	movlw	-37
  7288  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7289  01176C  0E02               	movlw	2
  7290  01176E  5EDE               	subwf	postinc2,f,c
  7291  011770  0E00               	movlw	0
  7292  011772  5ADD               	subwfb	postdec2,f,c
  7293  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7294  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7295  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7296  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7297  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7298  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7299                           
  7300                           ;stkvar	_ll @ sp[(-32)+14]
  7301  011798  0EEE               	movlw	-18
  7302  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7303  0117A0  0EEF               	movlw	-17
  7304  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7305  0117A8  6A35               	clrf	btemp^0,c
  7306  0117AA  BEE3               	btfsc	plusw1,7,c
  7307  0117AC  6835               	setf	btemp^0,c
  7308  0117AE  0EF0               	movlw	-16
  7309  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7310  0117B6  0EF1               	movlw	-15
  7311  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7312  0117BE  0EF2               	movlw	-14
  7313  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7314  0117C6  0EF3               	movlw	-13
  7315  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7316  0117CE  0EF4               	movlw	-12
  7317  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7318  0117D6  0EF5               	movlw	-11
  7319  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7320                           
  7321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7322                           ;stkvar	_ll @ sp[(-32)+14]
  7323  0117DE  50E1               	movf	fsr1l,w,c
  7324  0117E0  0FEE               	addlw	-18
  7325  0117E2  6ED9               	movwf	fsr2l,c
  7326  0117E4  50E2               	movf	fsr1h,w,c
  7327  0117E6  6EDA               	movwf	fsr2h,c
  7328  0117E8  0EFF               	movlw	255
  7329  0117EA  22DA               	addwfc	fsr2h,f,c
  7330  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7331  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7332  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7333  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7334  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7335  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7336  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7337  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7338                           
  7339                           ;stkvar	_fp @ sp[(-40)+-2]
  7340  01181C  0ED6               	movlw	-42
  7341  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7342  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7343  01182A  EC94  F09C         	call	_dtoa	;wreg free
  7344  01182E  D2A4               	goto	l1939
  7345  011830                     l9508:
  7346                           
  7347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7348                           ;stkvar	_ct @ sp[(-32)+26]
  7349  011830  0EFA               	movlw	-6
  7350  011832  006F FF8C  F035    	movff	plusw1,btemp
  7351  011838  0E66               	movlw	102
  7352  01183A  1835               	xorwf	btemp^0,w,c
  7353  01183C  A4D8               	btfss	status,2,c
  7354  01183E  D06E               	goto	l9520
  7355                           
  7356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7357                           ;stkvar	_fmt @ sp[(-32)+-4]
  7358  011840  0EDC               	movlw	-36
  7359  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7360  011848  0EDD               	movlw	-35
  7361  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7362  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7363  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7364  01185C                     	if	0	;tblptru may be non-zero
  7365  01185C                     	endif
  7366  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7367  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7368  01185E  6EF8               	movwf	tblptru,c
  7369  011860                     	endif
  7370                           
  7371                           ;stkvar	_c @ sp[(-32)+31]
  7372  011860  0008               	tblrd		*
  7373  011862  0EFF               	movlw	-1
  7374  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7375                           
  7376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7377                           ;stkvar	_fmt @ sp[(-32)+-4]
  7378  01186A  0EDC               	movlw	-36
  7379  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7380  011872  0EDD               	movlw	-35
  7381  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7382  01187A  2ADE               	incf	postinc2,f,c
  7383  01187C  0E00               	movlw	0
  7384  01187E  22DD               	addwfc	postdec2,f,c
  7385                           
  7386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7387                           ;stkvar	_ap @ sp[(-32)+-6]
  7388  011880  0EDA               	movlw	-38
  7389  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7390  011888  0EDB               	movlw	-37
  7391  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7392  011890  0E04               	movlw	4
  7393  011892  5EDE               	subwf	postinc2,f,c
  7394  011894  0E00               	movlw	0
  7395  011896  5ADD               	subwfb	postdec2,f,c
  7396  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7397  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7398  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7399  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7400  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7401  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7402  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7403  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7404                           
  7405                           ;stkvar	_f @ sp[(-32)+22]
  7406  0118C8  0EF6               	movlw	-10
  7407  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7408  0118D0  0EF7               	movlw	-9
  7409  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7410  0118D8  0EF8               	movlw	-8
  7411  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7412  0118E0  0EF9               	movlw	-7
  7413  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7414  0118E8                     l9516:
  7415                           
  7416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7417                           ;stkvar	_c @ sp[(-32)+31]
  7418  0118E8  0EFF               	movlw	-1
  7419  0118EA  50E3               	movf	plusw1,w,c
  7420  0118EC  6EE6               	movwf	postinc1,c
  7421                           
  7422                           ;stkvar	_f @ sp[(-33)+22]
  7423  0118EE  0EF5               	movlw	-11
  7424  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7425  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7426  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7427  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7428                           
  7429                           ;stkvar	_fp @ sp[(-37)+-2]
  7430  011908  0ED9               	movlw	-39
  7431  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7432  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7433  011916  EC00  F080         	call	_efgtoa	;wreg free
  7434  01191A  D22E               	goto	l1939
  7435  01191C                     l9520:
  7436                           
  7437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7438  01191C  0E02               	movlw	2
  7439  01191E  6EE6               	movwf	postinc1,c
  7440  011920  0E00               	movlw	0
  7441  011922  6EE6               	movwf	postinc1,c
  7442  011924  0EF6               	movlw	low STR_40
  7443  011926  6EE6               	movwf	postinc1,c
  7444  011928  0EFF               	movlw	high STR_40
  7445  01192A  6EE6               	movwf	postinc1,c
  7446                           
  7447                           ;stkvar	_ct @ sp[(-36)+26]
  7448  01192C  0EF6               	movlw	246
  7449  01192E  24E1               	addwf	fsr1l,w,c
  7450  011930  6E35               	movwf	btemp^0,c
  7451  011932  0EFF               	movlw	255
  7452  011934  20E2               	addwfc	fsr1h,w,c
  7453  011936  6E36               	movwf	(btemp+1)^0,c
  7454  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7455  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7456  011944  EC7D  F0AD         	call	_strncmp	;wreg free
  7457  011948  5035               	movf	btemp^0,w,c
  7458  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7459  01194C  A4D8               	btfss	status,2,c
  7460  01194E  D096               	goto	l9540
  7461                           
  7462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7463                           ;stkvar	_fmt @ sp[(-32)+-4]
  7464  011950  0EDC               	movlw	-36
  7465  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7466  011958  0EDD               	movlw	-35
  7467  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7468  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7469  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7470  01196C  0E01               	movlw	1
  7471  01196E  263F               	addwf	(btemp+10)^0,f,c
  7472  011970  0E00               	movlw	0
  7473  011972  2240               	addwfc	(btemp+11)^0,f,c
  7474  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7475  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7476  011980                     	if	0	;tblptru may be non-zero
  7477  011980                     	endif
  7478  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7479  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7480  011982  6EF8               	movwf	tblptru,c
  7481  011984                     	endif
  7482                           
  7483                           ;stkvar	_c @ sp[(-32)+31]
  7484  011984  0008               	tblrd		*
  7485  011986  0EFF               	movlw	-1
  7486  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7487  01198E  0EBF               	movlw	191
  7488  011990  6E3F               	movwf	(btemp+10)^0,c
  7489  011992  0EFF               	movlw	255
  7490  011994  6E40               	movwf	(btemp+11)^0,c
  7491                           
  7492                           ;stkvar	_fmt @ sp[(-32)+-4]
  7493  011996  0EDC               	movlw	-36
  7494  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7495  01199E  0EDD               	movlw	-35
  7496  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7497  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7498  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7499  0119B2                     	if	0	;tblptru may be non-zero
  7500  0119B2                     	endif
  7501  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7502  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7503  0119B4  6EF8               	movwf	tblptru,c
  7504  0119B6                     	endif
  7505  0119B6  0008               	tblrd		*
  7506  0119B8  50F5               	movf	tablat,w,c
  7507  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7508  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7509  0119BE  503F               	movf	(btemp+10)^0,w,c
  7510  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7511  0119C2  5040               	movf	(btemp+11)^0,w,c
  7512  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7513  0119C6  503E               	movf	(btemp+9)^0,w,c
  7514  0119C8  E106               	bnz	u9560
  7515  0119CA  0E1A               	movlw	26
  7516  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7517  0119CE  B0D8               	btfsc	status,0,c
  7518  0119D0  D002               	goto	u9560
  7519  0119D2  0E01               	movlw	1
  7520  0119D4  D001               	goto	u9570
  7521  0119D6                     u9560:
  7522  0119D6  0E00               	movlw	0
  7523  0119D8                     u9570:
  7524  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7525  0119DA  6A40               	clrf	(btemp+11)^0,c
  7526                           
  7527                           ;stkvar	_vfpfcnvrt$4158 @ sp[(-32)+2]
  7528  0119DC  0EE2               	movlw	-30
  7529  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7530  0119E4  0EE3               	movlw	-29
  7531  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7532                           
  7533                           ;stkvar	_vfpfcnvrt$4158 @ sp[(-32)+2]
  7534  0119EC  0EE2               	movlw	-30
  7535  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7536  0119F4  0EE3               	movlw	-29
  7537  0119F6  50E3               	movf	plusw1,w,c
  7538  0119F8  1035               	iorwf	btemp^0,w,c
  7539                           
  7540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7541                           ;stkvar	_ap @ sp[(-32)+-6]
  7542                           
  7543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7544                           
  7545                           ;stkvar	_f @ sp[(-32)+22]
  7546                           
  7547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7548                           ;stkvar	_ap @ sp[(-32)+-6]
  7549  0119FA  0EDA               	movlw	-38
  7550  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7551  011A02  0EDB               	movlw	-37
  7552  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7553  011A0A  0E04               	movlw	4
  7554  011A0C  5EDE               	subwf	postinc2,f,c
  7555  011A0E  0E00               	movlw	0
  7556  011A10  5ADD               	subwfb	postdec2,f,c
  7557  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7558  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7559  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7560  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7561  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7562  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7563  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7564  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7565                           
  7566                           ;stkvar	_f @ sp[(-32)+22]
  7567  011A42  0EF6               	movlw	-10
  7568  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7569  011A4A  0EF7               	movlw	-9
  7570  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7571  011A52  0EF8               	movlw	-8
  7572  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7573  011A5A  0EF9               	movlw	-7
  7574  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7575                           
  7576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7577                           ;stkvar	_fmt @ sp[(-32)+-4]
  7578  011A62  0EDC               	movlw	-36
  7579  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7580  011A6A  0EDD               	movlw	-35
  7581  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7582  011A72  0E02               	movlw	2
  7583  011A74  26DE               	addwf	postinc2,f,c
  7584  011A76  0E00               	movlw	0
  7585  011A78  22DD               	addwfc	postdec2,f,c
  7586  011A7A  D736               	goto	l9516
  7587  011A7C                     l9540:
  7588                           
  7589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7590                           ;stkvar	_fmt @ sp[(-32)+-4]
  7591  011A7C  0EDC               	movlw	-36
  7592  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7593  011A84  0EDD               	movlw	-35
  7594  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7595  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7596  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7597  011A98                     	if	0	;tblptru may be non-zero
  7598  011A98                     	endif
  7599  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7600  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7601  011A9A  6EF8               	movwf	tblptru,c
  7602  011A9C                     	endif
  7603  011A9C  0008               	tblrd		*
  7604  011A9E  50F5               	movf	tablat,w,c
  7605  011AA0  0A73               	xorlw	115
  7606  011AA2  A4D8               	btfss	status,2,c
  7607  011AA4  D042               	goto	l9550
  7608                           
  7609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7610                           ;stkvar	_fmt @ sp[(-32)+-4]
  7611  011AA6  0EDC               	movlw	-36
  7612  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7613  011AAE  0EDD               	movlw	-35
  7614  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7615  011AB6  2ADE               	incf	postinc2,f,c
  7616  011AB8  0E00               	movlw	0
  7617  011ABA  22DD               	addwfc	postdec2,f,c
  7618                           
  7619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7620                           ;stkvar	_ap @ sp[(-32)+-6]
  7621  011ABC  0EDA               	movlw	-38
  7622  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7623  011AC4  0EDB               	movlw	-37
  7624  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7625  011ACC  0E02               	movlw	2
  7626  011ACE  5EDE               	subwf	postinc2,f,c
  7627  011AD0  0E00               	movlw	0
  7628  011AD2  5ADD               	subwfb	postdec2,f,c
  7629  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7630  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7631  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7632  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7633  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7634  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7635                           
  7636                           ;stkvar	_cp @ sp[(-32)+29]
  7637  011AF8  0EFE               	movlw	-2
  7638  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7639  011B00  0EFD               	movlw	-3
  7640  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7641                           
  7642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7643                           ;stkvar	_cp @ sp[(-32)+29]
  7644  011B08  0EFD               	movlw	-3
  7645  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7646  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7647                           
  7648                           ;stkvar	_fp @ sp[(-34)+-2]
  7649  011B16  0EDC               	movlw	-36
  7650  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7651  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7652  011B24  EC4A  F0A5         	call	_stoa	;wreg free
  7653  011B28  D127               	goto	l1939
  7654  011B2A                     l9550:
  7655                           
  7656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7657                           ;stkvar	_fmt @ sp[(-32)+-4]
  7658  011B2A  0EDC               	movlw	-36
  7659  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7660  011B32  0EDD               	movlw	-35
  7661  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7662  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7663  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7664  011B46                     	if	0	;tblptru may be non-zero
  7665  011B46                     	endif
  7666  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7667  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7668  011B48  6EF8               	movwf	tblptru,c
  7669  011B4A                     	endif
  7670  011B4A  0008               	tblrd		*
  7671  011B4C  50F5               	movf	tablat,w,c
  7672  011B4E  0A78               	xorlw	120
  7673  011B50  B4D8               	btfsc	status,2,c
  7674  011B52  D015               	goto	u9610
  7675                           
  7676                           ;stkvar	_fmt @ sp[(-32)+-4]
  7677  011B54  0EDC               	movlw	-36
  7678  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7679  011B5C  0EDD               	movlw	-35
  7680  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7681  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7682  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7683  011B70                     	if	0	;tblptru may be non-zero
  7684  011B70                     	endif
  7685  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7686  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7687  011B72  6EF8               	movwf	tblptru,c
  7688  011B74                     	endif
  7689  011B74  0008               	tblrd		*
  7690  011B76  50F5               	movf	tablat,w,c
  7691  011B78  0A58               	xorlw	88
  7692  011B7A  A4D8               	btfss	status,2,c
  7693  011B7C  D094               	goto	l9564
  7694  011B7E                     u9610:
  7695                           
  7696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7697                           ;stkvar	_fmt @ sp[(-32)+-4]
  7698  011B7E  0EDC               	movlw	-36
  7699  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7700  011B86  0EDD               	movlw	-35
  7701  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7702  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7703  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7704  011B9A                     	if	0	;tblptru may be non-zero
  7705  011B9A                     	endif
  7706  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7707  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7708  011B9C  6EF8               	movwf	tblptru,c
  7709  011B9E                     	endif
  7710                           
  7711                           ;stkvar	_c @ sp[(-32)+31]
  7712  011B9E  0008               	tblrd		*
  7713  011BA0  0EFF               	movlw	-1
  7714  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7715                           
  7716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7717                           ;stkvar	_fmt @ sp[(-32)+-4]
  7718  011BA8  0EDC               	movlw	-36
  7719  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7720  011BB0  0EDD               	movlw	-35
  7721  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7722  011BB8  2ADE               	incf	postinc2,f,c
  7723  011BBA  0E00               	movlw	0
  7724  011BBC  22DD               	addwfc	postdec2,f,c
  7725                           
  7726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7727                           ;stkvar	_ap @ sp[(-32)+-6]
  7728  011BBE  0EDA               	movlw	-38
  7729  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7730  011BC6  0EDB               	movlw	-37
  7731  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7732  011BCE  0E02               	movlw	2
  7733  011BD0  5EDE               	subwf	postinc2,f,c
  7734  011BD2  0E00               	movlw	0
  7735  011BD4  5ADD               	subwfb	postdec2,f,c
  7736  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7737  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7738  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7739  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7740  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7741  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7742  011BFA  503F               	movf	(btemp+10)^0,w,c
  7743  011BFC  6E45               	movwf	(btemp+16)^0,c
  7744  011BFE  5040               	movf	(btemp+11)^0,w,c
  7745  011C00  6E46               	movwf	(btemp+17)^0,c
  7746  011C02  6A47               	clrf	(btemp+18)^0,c
  7747  011C04  6A48               	clrf	(btemp+19)^0,c
  7748  011C06  6A49               	clrf	(btemp+20)^0,c
  7749  011C08  6A4A               	clrf	(btemp+21)^0,c
  7750  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7751  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7752                           
  7753                           ;stkvar	_llu @ sp[(-32)+6]
  7754  011C0E  0EE6               	movlw	-26
  7755  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7756  011C16  0EE7               	movlw	-25
  7757  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7758  011C1E  0EE8               	movlw	-24
  7759  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7760  011C26  0EE9               	movlw	-23
  7761  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7762  011C2E  0EEA               	movlw	-22
  7763  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7764  011C36  0EEB               	movlw	-21
  7765  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7766  011C3E  0EEC               	movlw	-20
  7767  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7768  011C46  0EED               	movlw	-19
  7769  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7770                           
  7771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7772                           ;stkvar	_c @ sp[(-32)+31]
  7773  011C4E  0EFF               	movlw	-1
  7774  011C50  50E3               	movf	plusw1,w,c
  7775  011C52  6EE6               	movwf	postinc1,c
  7776                           
  7777                           ;stkvar	_llu @ sp[(-33)+6]
  7778  011C54  50E1               	movf	fsr1l,w,c
  7779  011C56  0FE5               	addlw	-27
  7780  011C58  6ED9               	movwf	fsr2l,c
  7781  011C5A  50E2               	movf	fsr1h,w,c
  7782  011C5C  6EDA               	movwf	fsr2h,c
  7783  011C5E  0EFF               	movlw	255
  7784  011C60  22DA               	addwfc	fsr2h,f,c
  7785  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7786  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7787  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7788  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7789  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7790  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7791  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7792  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7793                           
  7794                           ;stkvar	_fp @ sp[(-41)+-2]
  7795  011C92  0ED5               	movlw	-43
  7796  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7797  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7798  011CA0  ECD4  F09E         	call	_xtoa	;wreg free
  7799  011CA4  D069               	goto	l1939
  7800  011CA6                     l9564:
  7801                           
  7802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7803                           ;stkvar	_fmt @ sp[(-32)+-4]
  7804  011CA6  0EDC               	movlw	-36
  7805  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7806  011CAE  0EDD               	movlw	-35
  7807  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7808  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7809  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7810  011CC2                     	if	0	;tblptru may be non-zero
  7811  011CC2                     	endif
  7812  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7813  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7814  011CC4  6EF8               	movwf	tblptru,c
  7815  011CC6                     	endif
  7816  011CC6  0008               	tblrd		*
  7817  011CC8  50F5               	movf	tablat,w,c
  7818  011CCA  0A25               	xorlw	37
  7819  011CCC  A4D8               	btfss	status,2,c
  7820  011CCE  D01A               	goto	l9574
  7821                           
  7822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7823                           ;stkvar	_fmt @ sp[(-32)+-4]
  7824  011CD0  0EDC               	movlw	-36
  7825  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7826  011CD8  0EDD               	movlw	-35
  7827  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7828  011CE0  2ADE               	incf	postinc2,f,c
  7829  011CE2  0E00               	movlw	0
  7830  011CE4  22DD               	addwfc	postdec2,f,c
  7831                           
  7832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7833                           ;stkvar	_fp @ sp[(-32)+-2]
  7834  011CE6  0EDE               	movlw	-34
  7835  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7836  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7837  011CF4  0E25               	movlw	37
  7838  011CF6  6EE6               	movwf	postinc1,c
  7839  011CF8  0E00               	movlw	0
  7840  011CFA  6EE6               	movwf	postinc1,c
  7841  011CFC  ECD4  F0B1         	call	_fputc	;wreg free
  7842  011D00                     l9570:
  7843                           
  7844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7845  011D00  0E01               	movlw	1
  7846  011D02  D00C               	goto	L5
  7847  011D04                     l9574:
  7848                           
  7849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7850                           ;stkvar	_fmt @ sp[(-32)+-4]
  7851  011D04  0EDC               	movlw	-36
  7852  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7853  011D0C  0EDD               	movlw	-35
  7854  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7855  011D14  2ADE               	incf	postinc2,f,c
  7856  011D16  0E00               	movlw	0
  7857  011D18  22DD               	addwfc	postdec2,f,c
  7858                           
  7859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7860  011D1A  0E00               	movlw	0
  7861  011D1C                     L5:
  7862  011D1C  6E35               	movwf	btemp^0,c
  7863  011D1E  0E00               	movlw	0
  7864  011D20  6E36               	movwf	(btemp+1)^0,c
  7865  011D22  D02A               	goto	l1939
  7866  011D24                     l9580:
  7867                           
  7868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7869                           ;stkvar	_fp @ sp[(-32)+-2]
  7870  011D24  0EDE               	movlw	-34
  7871  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7872  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7873                           
  7874                           ;stkvar	_fmt @ sp[(-34)+-4]
  7875  011D32  0EDA               	movlw	-38
  7876  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7877  011D3A  0EDB               	movlw	-37
  7878  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7879  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7880  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7881  011D4E                     	if	0	;tblptru may be non-zero
  7882  011D4E                     	endif
  7883  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7884  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7885  011D50  6EF8               	movwf	tblptru,c
  7886  011D52                     	endif
  7887  011D52  0008               	tblrd		*
  7888  011D54  50F5               	movf	tablat,w,c
  7889  011D56  6EE6               	movwf	postinc1,c
  7890  011D58  0E00               	movlw	0
  7891  011D5A  6EE6               	movwf	postinc1,c
  7892  011D5C  ECD4  F0B1         	call	_fputc	;wreg free
  7893                           
  7894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7895                           ;stkvar	_fmt @ sp[(-32)+-4]
  7896  011D60  0EDC               	movlw	-36
  7897  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7898  011D68  0EDD               	movlw	-35
  7899  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7900  011D70  2ADE               	incf	postinc2,f,c
  7901  011D72  0E00               	movlw	0
  7902  011D74  22DD               	addwfc	postdec2,f,c
  7903  011D76  D7C4               	goto	l9570
  7904  011D78                     l1939:
  7905                           
  7906                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7907  011D78  0EDA               	movlw	218
  7908  011D7A  26E1               	addwf	fsr1l,f,c
  7909  011D7C  0EFF               	movlw	255
  7910  011D7E  22E2               	addwfc	fsr1h,f,c
  7911  011D80  0012               	return		;funcret
  7912  011D82                     __end_of_vfpfcnvrt:
  7913                           	opt callstack 0
  7914                           
  7915 ;; *************** function _xtoa *****************
  7916 ;; Defined at:
  7917 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7920 ;;		 -> f(6), NULL(0), 
  7921 ;;  d               8  [STACK] unsigned long long 
  7922 ;;  x               1  [STACK] unsigned char 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  n               8  [STACK] unsigned long long 
  7925 ;;  c               2  [STACK] int 
  7926 ;;  i               2  [STACK] int 
  7927 ;;  w               2  [STACK] int 
  7928 ;;  p               2  [STACK] int 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  2  [STACK] int 
  7931 ;; Registers used:
  7932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/4
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7942 ;;Total ram usage:        0 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:   11
  7945 ;; This function calls:
  7946 ;;		_isalpha
  7947 ;;		_isupper
  7948 ;;		_pad
  7949 ;;		_toupper
  7950 ;; This function is called by:
  7951 ;;		_vfpfcnvrt
  7952 ;; This function uses a reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text33
  7956  013DA8                     __ptext33:
  7957                           	opt callstack 0
  7958  013DA8                     _xtoa:
  7959                           	opt callstack 0
  7960                           
  7961                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7962  013DA8  0E14               	movlw	20
  7963  013DAA  26E1               	addwf	fsr1l,f,c
  7964  013DAC  0E00               	movlw	0
  7965  013DAE  22E2               	addwfc	fsr1h,f,c
  7966                           
  7967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7968                           
  7969                           ;incstack = 0
  7970  013DB0  AE21               	btfss	(_prec+1)^0,7,c
  7971                           
  7972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7973  013DB2  9222               	bcf	_flags^0,1,c
  7974                           
  7975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7976  013DB4  BE21               	btfsc	(_prec+1)^0,7,c
  7977  013DB6  D005               	goto	u9210
  7978  013DB8  5021               	movf	(_prec+1)^0,w,c
  7979  013DBA  E110               	bnz	l9362
  7980  013DBC  0420               	decf	_prec^0,w,c
  7981  013DBE  B0D8               	btfsc	status,0,c
  7982  013DC0  D00D               	goto	l9362
  7983  013DC2                     u9210:
  7984  013DC2  0E01               	movlw	1
  7985  013DC4  6E3F               	movwf	(btemp+10)^0,c
  7986  013DC6  0E00               	movlw	0
  7987  013DC8  6E40               	movwf	(btemp+11)^0,c
  7988                           
  7989                           ;stkvar	_p @ sp[(-20)+18]
  7990  013DCA  0EFE               	movlw	-2
  7991  013DCC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7992  013DD2  0EFF               	movlw	-1
  7993  013DD4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7994  013DDA  D008               	goto	l1889
  7995  013DDC                     l9362:
  7996                           
  7997                           ;stkvar	_p @ sp[(-20)+18]
  7998  013DDC  0EFE               	movlw	-2
  7999  013DDE  0060  F083  FFE3   	movff	_prec,plusw1
  8000  013DE4  0EFF               	movlw	-1
  8001  013DE6  0060  F087  FFE3   	movff	_prec+1,plusw1
  8002  013DEC                     l1889:
  8003                           
  8004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8005                           ;stkvar	_w @ sp[(-20)+16]
  8006  013DEC  0EFC               	movlw	-4
  8007  013DEE  0060  F07B  FFE3   	movff	_width,plusw1
  8008  013DF4  0EFD               	movlw	-3
  8009  013DF6  0060  F07F  FFE3   	movff	_width+1,plusw1
  8010                           
  8011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8012  013DFC  A822               	btfss	_flags^0,4,c
  8013  013DFE  D00B               	goto	l9368
  8014                           
  8015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8016                           ;stkvar	_w @ sp[(-20)+16]
  8017  013E00  50E1               	movf	fsr1l,w,c
  8018  013E02  0FFC               	addlw	-4
  8019  013E04  6ED9               	movwf	fsr2l,c
  8020  013E06  50E2               	movf	fsr1h,w,c
  8021  013E08  6EDA               	movwf	fsr2h,c
  8022  013E0A  0EFF               	movlw	255
  8023  013E0C  22DA               	addwfc	fsr2h,f,c
  8024  013E0E  0EFE               	movlw	254
  8025  013E10  26DE               	addwf	postinc2,f,c
  8026  013E12  0EFF               	movlw	255
  8027  013E14  22DD               	addwfc	postdec2,f,c
  8028  013E16                     l9368:
  8029                           
  8030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8031                           ;stkvar	_d @ sp[(-20)+-10]
  8032  013E16  0EE2               	movlw	226
  8033  013E18  24E1               	addwf	fsr1l,w,c
  8034  013E1A  6ED9               	movwf	fsr2l,c
  8035  013E1C  0EFF               	movlw	255
  8036  013E1E  20E2               	addwfc	fsr1h,w,c
  8037  013E20  6EDA               	movwf	fsr2h,c
  8038                           
  8039                           ;stkvar	_n @ sp[(-20)+4]
  8040  013E22  0E08               	movlw	8
  8041  013E24  6E35               	movwf	btemp^0,c
  8042  013E26  0EF0               	movlw	-16
  8043  013E28                     us923999:
  8044  013E28  006F FF7B FFE3     	movff	postinc2,plusw1
  8045  013E2E  28E8               	incf	wreg,w,c
  8046  013E30  2E35               	decfsz	btemp^0,f,c
  8047  013E32  D7FA               	bra	us923999
  8048                           
  8049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8050  013E34  0E4F               	movlw	79
  8051  013E36  6E3F               	movwf	(btemp+10)^0,c
  8052  013E38  0E00               	movlw	0
  8053  013E3A  6E40               	movwf	(btemp+11)^0,c
  8054                           
  8055                           ;stkvar	_i @ sp[(-20)+14]
  8056  013E3C  0EFA               	movlw	-6
  8057  013E3E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8058  013E44  0EFB               	movlw	-5
  8059  013E46  0060  F103  FFE3   	movff	btemp+11,plusw1
  8060                           
  8061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8062  013E4C  0101               	movlb	1	; () banked
  8063  013E4E  6BF3               	clrf	(_dbuf+79)& (0+255),b
  8064                           
  8065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8066  013E50  D0EE               	goto	l9406
  8067  013E52                     l9374:
  8068                           
  8069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8070                           ;stkvar	_i @ sp[(-20)+14]
  8071  013E52  50E1               	movf	fsr1l,w,c
  8072  013E54  0FFA               	addlw	-6
  8073  013E56  6ED9               	movwf	fsr2l,c
  8074  013E58  50E2               	movf	fsr1h,w,c
  8075  013E5A  6EDA               	movwf	fsr2h,c
  8076  013E5C  0EFF               	movlw	255
  8077  013E5E  22DA               	addwfc	fsr2h,f,c
  8078  013E60  06DE               	decf	postinc2,f,c
  8079  013E62  0E00               	movlw	0
  8080  013E64  5ADD               	subwfb	postdec2,f,c
  8081                           
  8082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8083                           ;stkvar	_n @ sp[(-20)+4]
  8084  013E66  0EF0               	movlw	-16
  8085  013E68  006F FF8C  F03F    	movff	plusw1,btemp+10
  8086  013E6E  0EF1               	movlw	-15
  8087  013E70  006F FF8C  F040    	movff	plusw1,btemp+11
  8088  013E76  0E0F               	movlw	15
  8089  013E78  163F               	andwf	(btemp+10)^0,f,c
  8090  013E7A  0E00               	movlw	0
  8091  013E7C  1640               	andwf	(btemp+11)^0,f,c
  8092                           
  8093                           ;stkvar	_c @ sp[(-20)+12]
  8094  013E7E  0EF8               	movlw	-8
  8095  013E80  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8096  013E86  0EF9               	movlw	-7
  8097  013E88  0060  F103  FFE3   	movff	btemp+11,plusw1
  8098                           
  8099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8100                           ;stkvar	_c @ sp[(-20)+12]
  8101  013E8E  0EF9               	movlw	-7
  8102  013E90  BEE3               	btfsc	plusw1,7,c
  8103  013E92  D00F               	goto	l9382
  8104  013E94  0EF9               	movlw	-7
  8105  013E96  50E3               	movf	plusw1,w,c
  8106  013E98  E108               	bnz	u9240
  8107  013E9A  0EF8               	movlw	-8
  8108  013E9C  006F FF8C  F035    	movff	plusw1,btemp
  8109  013EA2  0E0A               	movlw	10
  8110  013EA4  5E35               	subwf	btemp^0,f,c
  8111  013EA6  A0D8               	btfss	status,0,c
  8112  013EA8  D004               	goto	l9382
  8113  013EAA                     u9240:
  8114                           
  8115                           ;stkvar	_c @ sp[(-20)+12]
  8116  013EAA  0EF8               	movlw	-8
  8117  013EAC  50E3               	movf	plusw1,w,c
  8118  013EAE  0F57               	addlw	87
  8119  013EB0  D003               	goto	L6
  8120  013EB2                     l9382:
  8121                           
  8122                           ;stkvar	_c @ sp[(-20)+12]
  8123  013EB2  0EF8               	movlw	-8
  8124  013EB4  50E3               	movf	plusw1,w,c
  8125  013EB6  0F30               	addlw	48
  8126  013EB8                     L6:
  8127  013EB8  6E3F               	movwf	(btemp+10)^0,c
  8128  013EBA  0EF9               	movlw	-7
  8129  013EBC  006F FF8C  F040    	movff	plusw1,btemp+11
  8130  013EC2  0E00               	movlw	0
  8131  013EC4  2240               	addwfc	(btemp+11)^0,f,c
  8132                           
  8133                           ;stkvar	_c @ sp[(-20)+12]
  8134  013EC6  0EF8               	movlw	-8
  8135  013EC8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8136  013ECE  0EF9               	movlw	-7
  8137  013ED0  0060  F103  FFE3   	movff	btemp+11,plusw1
  8138  013ED6  0EBF               	movlw	191
  8139  013ED8  6E3F               	movwf	(btemp+10)^0,c
  8140  013EDA  0EFF               	movlw	255
  8141  013EDC  6E40               	movwf	(btemp+11)^0,c
  8142                           
  8143                           ;stkvar	_x @ sp[(-20)+-11]
  8144  013EDE  0EE1               	movlw	-31
  8145  013EE0  50E3               	movf	plusw1,w,c
  8146  013EE2  6E3D               	movwf	(btemp+8)^0,c
  8147  013EE4  6A3E               	clrf	(btemp+9)^0,c
  8148  013EE6  503F               	movf	(btemp+10)^0,w,c
  8149  013EE8  263D               	addwf	(btemp+8)^0,f,c
  8150  013EEA  5040               	movf	(btemp+11)^0,w,c
  8151  013EEC  223E               	addwfc	(btemp+9)^0,f,c
  8152  013EEE  503E               	movf	(btemp+9)^0,w,c
  8153  013EF0  E106               	bnz	u9250
  8154  013EF2  0E1A               	movlw	26
  8155  013EF4  5C3D               	subwf	(btemp+8)^0,w,c
  8156  013EF6  B0D8               	btfsc	status,0,c
  8157  013EF8  D002               	goto	u9250
  8158  013EFA  0E01               	movlw	1
  8159  013EFC  D001               	goto	u9260
  8160  013EFE                     u9250:
  8161  013EFE  0E00               	movlw	0
  8162  013F00                     u9260:
  8163  013F00  6E3F               	movwf	(btemp+10)^0,c
  8164  013F02  6A40               	clrf	(btemp+11)^0,c
  8165                           
  8166                           ;stkvar	_xtoa$4136 @ sp[(-20)+2]
  8167  013F04  0EEE               	movlw	-18
  8168  013F06  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8169  013F0C  0EEF               	movlw	-17
  8170  013F0E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8171                           
  8172                           ;stkvar	_xtoa$4136 @ sp[(-20)+2]
  8173  013F14  0EEE               	movlw	-18
  8174  013F16  006F FF8C  F035    	movff	plusw1,btemp
  8175  013F1C  0EEF               	movlw	-17
  8176  013F1E  50E3               	movf	plusw1,w,c
  8177  013F20  1035               	iorwf	btemp^0,w,c
  8178  013F22  B4D8               	btfsc	status,2,c
  8179  013F24  D041               	goto	l9398
  8180  013F26  0E9F               	movlw	159
  8181  013F28  6E3F               	movwf	(btemp+10)^0,c
  8182  013F2A  0EFF               	movlw	255
  8183  013F2C  6E40               	movwf	(btemp+11)^0,c
  8184                           
  8185                           ;stkvar	_c @ sp[(-20)+12]
  8186  013F2E  0EF8               	movlw	-8
  8187  013F30  006F FF8C  F03D    	movff	plusw1,btemp+8
  8188  013F36  0EF9               	movlw	-7
  8189  013F38  006F FF8C  F03E    	movff	plusw1,btemp+9
  8190  013F3E  0E20               	movlw	32
  8191  013F40  123D               	iorwf	(btemp+8)^0,f,c
  8192  013F42  0E00               	movlw	0
  8193  013F44  123E               	iorwf	(btemp+9)^0,f,c
  8194  013F46  503F               	movf	(btemp+10)^0,w,c
  8195  013F48  263D               	addwf	(btemp+8)^0,f,c
  8196  013F4A  5040               	movf	(btemp+11)^0,w,c
  8197  013F4C  223E               	addwfc	(btemp+9)^0,f,c
  8198  013F4E  503E               	movf	(btemp+9)^0,w,c
  8199  013F50  E106               	bnz	u9280
  8200  013F52  0E1A               	movlw	26
  8201  013F54  5C3D               	subwf	(btemp+8)^0,w,c
  8202  013F56  B0D8               	btfsc	status,0,c
  8203  013F58  D002               	goto	u9280
  8204  013F5A  0E01               	movlw	1
  8205  013F5C  D001               	goto	u9290
  8206  013F5E                     u9280:
  8207  013F5E  0E00               	movlw	0
  8208  013F60                     u9290:
  8209  013F60  6E3F               	movwf	(btemp+10)^0,c
  8210  013F62  6A40               	clrf	(btemp+11)^0,c
  8211                           
  8212                           ;stkvar	_xtoa$4137 @ sp[(-20)+0]
  8213  013F64  0EEC               	movlw	-20
  8214  013F66  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8215  013F6C  0EED               	movlw	-19
  8216  013F6E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8217                           
  8218                           ;stkvar	_xtoa$4137 @ sp[(-20)+0]
  8219  013F74  0EEC               	movlw	-20
  8220  013F76  006F FF8C  F035    	movff	plusw1,btemp
  8221  013F7C  0EED               	movlw	-19
  8222  013F7E  50E3               	movf	plusw1,w,c
  8223  013F80  1035               	iorwf	btemp^0,w,c
  8224  013F82  B4D8               	btfsc	status,2,c
  8225  013F84  D011               	goto	l9398
  8226                           
  8227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8228                           ;stkvar	_c @ sp[(-20)+12]
  8229  013F86  0EF8               	movlw	-8
  8230  013F88  006F FF8F FFE6     	movff	plusw1,postinc1
  8231  013F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  8232  013F94  EC44  F0B9         	call	_toupper	;wreg free
  8233                           
  8234                           ;stkvar	_c @ sp[(-20)+12]
  8235  013F98  0EF8               	movlw	-8
  8236  013F9A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8237  013FA0  0EF9               	movlw	-7
  8238  013FA2  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8239  013FA8                     l9398:
  8240                           
  8241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8242                           ;stkvar	_c @ sp[(-20)+12]
  8243                           ;stkvar	_i @ sp[(-20)+14]
  8244  013FA8  0EFA               	movlw	-6
  8245  013FAA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8246  013FB0  0EFB               	movlw	-5
  8247  013FB2  006F FF8C  F040    	movff	plusw1,btemp+11
  8248  013FB8  0EA4               	movlw	low _dbuf
  8249  013FBA  243F               	addwf	(btemp+10)^0,w,c
  8250  013FBC  6ED9               	movwf	fsr2l,c
  8251  013FBE  0E01               	movlw	high _dbuf
  8252  013FC0  2040               	addwfc	(btemp+11)^0,w,c
  8253  013FC2  6EDA               	movwf	fsr2h,c
  8254  013FC4  0EF8               	movlw	-8
  8255  013FC6  006F FF8F FFDF     	movff	plusw1,indf2
  8256                           
  8257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8258                           ;stkvar	_p @ sp[(-20)+18]
  8259  013FCC  50E1               	movf	fsr1l,w,c
  8260  013FCE  0FFE               	addlw	-2
  8261  013FD0  6ED9               	movwf	fsr2l,c
  8262  013FD2  50E2               	movf	fsr1h,w,c
  8263  013FD4  6EDA               	movwf	fsr2h,c
  8264  013FD6  0EFF               	movlw	255
  8265  013FD8  22DA               	addwfc	fsr2h,f,c
  8266  013FDA  06DE               	decf	postinc2,f,c
  8267  013FDC  0E00               	movlw	0
  8268  013FDE  5ADD               	subwfb	postdec2,f,c
  8269                           
  8270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8271                           ;stkvar	_w @ sp[(-20)+16]
  8272  013FE0  50E1               	movf	fsr1l,w,c
  8273  013FE2  0FFC               	addlw	-4
  8274  013FE4  6ED9               	movwf	fsr2l,c
  8275  013FE6  50E2               	movf	fsr1h,w,c
  8276  013FE8  6EDA               	movwf	fsr2h,c
  8277  013FEA  0EFF               	movlw	255
  8278  013FEC  22DA               	addwfc	fsr2h,f,c
  8279  013FEE  06DE               	decf	postinc2,f,c
  8280  013FF0  0E00               	movlw	0
  8281  013FF2  5ADD               	subwfb	postdec2,f,c
  8282                           
  8283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8284  013FF4  0E04               	movlw	4
  8285  013FF6  6E40               	movwf	(btemp+11)^0,c
  8286                           
  8287                           ;stkvar	_n @ sp[(-20)+4]
  8288  013FF8  50E1               	movf	fsr1l,w,c
  8289  013FFA  0FF0               	addlw	-16
  8290  013FFC  6ED9               	movwf	fsr2l,c
  8291  013FFE  50E2               	movf	fsr1h,w,c
  8292  014000  6EDA               	movwf	fsr2h,c
  8293  014002  0EFF               	movlw	255
  8294  014004  22DA               	addwfc	fsr2h,f,c
  8295  014006  2840               	incf	(btemp+11)^0,w,c
  8296  014008  52DE               	movf	postinc2,f,c
  8297  01400A  D00F               	goto	u9310
  8298  01400C                     u9315:
  8299  01400C  52DE               	movf	postinc2,f,c
  8300  01400E  52DE               	movf	postinc2,f,c
  8301  014010  52DE               	movf	postinc2,f,c
  8302  014012  52DE               	movf	postinc2,f,c
  8303  014014  52DE               	movf	postinc2,f,c
  8304  014016  52DE               	movf	postinc2,f,c
  8305  014018  90D8               	bcf	status,0,c
  8306  01401A  32DD               	rrcf	postdec2,f,c
  8307  01401C  32DD               	rrcf	postdec2,f,c
  8308  01401E  32DD               	rrcf	postdec2,f,c
  8309  014020  32DD               	rrcf	postdec2,f,c
  8310  014022  32DD               	rrcf	postdec2,f,c
  8311  014024  32DD               	rrcf	postdec2,f,c
  8312  014026  32DD               	rrcf	postdec2,f,c
  8313  014028  32DE               	rrcf	postinc2,f,c
  8314  01402A                     u9310:
  8315  01402A  2EE8               	decfsz	wreg,f,c
  8316  01402C  D7EF               	goto	u9315
  8317  01402E                     l9406:
  8318                           
  8319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8320                           ;stkvar	_i @ sp[(-20)+14]
  8321  01402E  0EFB               	movlw	-5
  8322  014030  BEE3               	btfsc	plusw1,7,c
  8323  014032  D03A               	goto	u9360
  8324  014034  0EFB               	movlw	-5
  8325  014036  50E3               	movf	plusw1,w,c
  8326  014038  E108               	bnz	u9320
  8327  01403A  0EFA               	movlw	-6
  8328  01403C  006F FF8C  F035    	movff	plusw1,btemp
  8329  014042  0E02               	movlw	2
  8330  014044  5E35               	subwf	btemp^0,f,c
  8331  014046  A0D8               	btfss	status,0,c
  8332  014048  D02F               	goto	u9360
  8333  01404A                     u9320:
  8334                           
  8335                           ;stkvar	_n @ sp[(-20)+4]
  8336  01404A  0EF0               	movlw	-16
  8337  01404C  50E3               	movf	plusw1,w,c
  8338  01404E  E115               	bnz	u9331
  8339  014050  0EF1               	movlw	-15
  8340  014052  50E3               	movf	plusw1,w,c
  8341  014054  E112               	bnz	u9331
  8342  014056  0EF2               	movlw	-14
  8343  014058  50E3               	movf	plusw1,w,c
  8344  01405A  E10F               	bnz	u9331
  8345  01405C  0EF3               	movlw	-13
  8346  01405E  50E3               	movf	plusw1,w,c
  8347  014060  E10C               	bnz	u9331
  8348  014062  0EF4               	movlw	-12
  8349  014064  50E3               	movf	plusw1,w,c
  8350  014066  E109               	bnz	u9331
  8351  014068  0EF5               	movlw	-11
  8352  01406A  50E3               	movf	plusw1,w,c
  8353  01406C  E106               	bnz	u9331
  8354  01406E  0EF6               	movlw	-10
  8355  014070  50E3               	movf	plusw1,w,c
  8356  014072  E103               	bnz	u9331
  8357  014074  0EF7               	movlw	-9
  8358  014076  50E3               	movf	plusw1,w,c
  8359  014078  A4D8               	btfss	status,2,c
  8360  01407A                     u9331:
  8361  01407A  D6EB               	goto	l9374
  8362                           
  8363                           ;stkvar	_p @ sp[(-20)+18]
  8364  01407C  0EFF               	movlw	-1
  8365  01407E  BEE3               	btfsc	plusw1,7,c
  8366  014080  D007               	goto	u9340
  8367  014082  0EFF               	movlw	-1
  8368  014084  50E3               	movf	plusw1,w,c
  8369  014086  E103               	bnz	u9341
  8370  014088  0EFE               	movlw	-2
  8371  01408A  04E3               	decf	plusw1,w,c
  8372  01408C  B0D8               	btfsc	status,0,c
  8373  01408E                     u9341:
  8374  01408E  D6E1               	goto	l9374
  8375  014090                     u9340:
  8376                           
  8377                           ;stkvar	_w @ sp[(-20)+16]
  8378  014090  0EFD               	movlw	-3
  8379  014092  BEE3               	btfsc	plusw1,7,c
  8380  014094  D009               	goto	u9360
  8381  014096  0EFD               	movlw	-3
  8382  014098  50E3               	movf	plusw1,w,c
  8383  01409A  E104               	bnz	u9350
  8384  01409C  0EFC               	movlw	-4
  8385  01409E  04E3               	decf	plusw1,w,c
  8386  0140A0  A0D8               	btfss	status,0,c
  8387  0140A2  D002               	goto	u9360
  8388  0140A4                     u9350:
  8389  0140A4  B222               	btfsc	_flags^0,1,c
  8390  0140A6  D6D5               	goto	l9374
  8391  0140A8                     u9360:
  8392                           
  8393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8394  0140A8  A822               	btfss	_flags^0,4,c
  8395  0140AA  D036               	goto	l9422
  8396                           
  8397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8398                           ;stkvar	_i @ sp[(-20)+14]
  8399  0140AC  50E1               	movf	fsr1l,w,c
  8400  0140AE  0FFA               	addlw	-6
  8401  0140B0  6ED9               	movwf	fsr2l,c
  8402  0140B2  50E2               	movf	fsr1h,w,c
  8403  0140B4  6EDA               	movwf	fsr2h,c
  8404  0140B6  0EFF               	movlw	255
  8405  0140B8  22DA               	addwfc	fsr2h,f,c
  8406  0140BA  06DE               	decf	postinc2,f,c
  8407  0140BC  0E00               	movlw	0
  8408  0140BE  5ADD               	subwfb	postdec2,f,c
  8409                           
  8410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8411                           ;stkvar	_x @ sp[(-20)+-11]
  8412                           ;stkvar	_i @ sp[(-20)+14]
  8413  0140C0  0EFA               	movlw	-6
  8414  0140C2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8415  0140C8  0EFB               	movlw	-5
  8416  0140CA  006F FF8C  F040    	movff	plusw1,btemp+11
  8417  0140D0  0EA4               	movlw	low _dbuf
  8418  0140D2  243F               	addwf	(btemp+10)^0,w,c
  8419  0140D4  6ED9               	movwf	fsr2l,c
  8420  0140D6  0E01               	movlw	high _dbuf
  8421  0140D8  2040               	addwfc	(btemp+11)^0,w,c
  8422  0140DA  6EDA               	movwf	fsr2h,c
  8423  0140DC  0EE1               	movlw	-31
  8424  0140DE  006F FF8F FFDF     	movff	plusw1,indf2
  8425                           
  8426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8427                           ;stkvar	_i @ sp[(-20)+14]
  8428  0140E4  50E1               	movf	fsr1l,w,c
  8429  0140E6  0FFA               	addlw	-6
  8430  0140E8  6ED9               	movwf	fsr2l,c
  8431  0140EA  50E2               	movf	fsr1h,w,c
  8432  0140EC  6EDA               	movwf	fsr2h,c
  8433  0140EE  0EFF               	movlw	255
  8434  0140F0  22DA               	addwfc	fsr2h,f,c
  8435  0140F2  06DE               	decf	postinc2,f,c
  8436  0140F4  0E00               	movlw	0
  8437  0140F6  5ADD               	subwfb	postdec2,f,c
  8438                           
  8439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8440                           ;stkvar	_i @ sp[(-20)+14]
  8441  0140F8  0EFA               	movlw	-6
  8442  0140FA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8443  014100  0EFB               	movlw	-5
  8444  014102  006F FF8C  F040    	movff	plusw1,btemp+11
  8445  014108  0EA4               	movlw	low _dbuf
  8446  01410A  243F               	addwf	(btemp+10)^0,w,c
  8447  01410C  6ED9               	movwf	fsr2l,c
  8448  01410E  0E01               	movlw	high _dbuf
  8449  014110  2040               	addwfc	(btemp+11)^0,w,c
  8450  014112  6EDA               	movwf	fsr2h,c
  8451  014114  0E30               	movlw	48
  8452  014116  6EDF               	movwf	indf2,c
  8453  014118                     l9422:
  8454                           
  8455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8456                           ;stkvar	_w @ sp[(-20)+16]
  8457  014118  0EFC               	movlw	-4
  8458  01411A  006F FF8F FFE6     	movff	plusw1,postinc1
  8459  014120  006F FF8F FFE6     	movff	plusw1,postinc1
  8460                           
  8461                           ;stkvar	_i @ sp[(-22)+14]
  8462  014126  0EA4               	movlw	low _dbuf
  8463  014128  6E3F               	movwf	(btemp+10)^0,c
  8464  01412A  0E01               	movlw	high _dbuf
  8465  01412C  6E40               	movwf	(btemp+11)^0,c
  8466  01412E  0EF8               	movlw	-8
  8467  014130  50E3               	movf	plusw1,w,c
  8468  014132  263F               	addwf	(btemp+10)^0,f,c
  8469  014134  0EF9               	movlw	-7
  8470  014136  50E3               	movf	plusw1,w,c
  8471  014138  2240               	addwfc	(btemp+11)^0,f,c
  8472  01413A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8473  014140  0060  F103  FFE6   	movff	btemp+11,postinc1
  8474                           
  8475                           ;stkvar	_fp @ sp[(-24)+-2]
  8476  014146  0EE6               	movlw	-26
  8477  014148  006F FF8F FFE6     	movff	plusw1,postinc1
  8478  01414E  006F FF8F FFE6     	movff	plusw1,postinc1
  8479  014154  ECF2  F0B2         	call	_pad	;wreg free
  8480                           
  8481                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8482  014158  0EE1               	movlw	225
  8483  01415A  26E1               	addwf	fsr1l,f,c
  8484  01415C  0EFF               	movlw	255
  8485  01415E  22E2               	addwfc	fsr1h,f,c
  8486  014160  0012               	return		;funcret
  8487  014162                     __end_of_xtoa:
  8488                           	opt callstack 0
  8489                           
  8490 ;; *************** function _toupper *****************
  8491 ;; Defined at:
  8492 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  c               2  [STACK] int 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  2  [STACK] int 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/1
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8510 ;;Total ram usage:        0 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    7
  8513 ;; This function calls:
  8514 ;;		_islower
  8515 ;; This function is called by:
  8516 ;;		_xtoa
  8517 ;; This function uses a reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text34
  8521  017288                     __ptext34:
  8522                           	opt callstack 0
  8523  017288                     _toupper:
  8524                           	opt callstack 0
  8525                           
  8526                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8527  017288  52E6               	movf	postinc1,f,c
  8528  01728A  52E6               	movf	postinc1,f,c
  8529                           
  8530                           ;stkvar	_c @ sp[(-2)+-2]
  8531                           
  8532                           ;incstack = 0
  8533  01728C  0EFC               	movlw	-4
  8534  01728E  50E3               	movf	plusw1,w,c
  8535  017290  0F9F               	addlw	159
  8536  017292  6E3F               	movwf	(btemp+10)^0,c
  8537  017294  0EFD               	movlw	-3
  8538  017296  006F FF8C  F040    	movff	plusw1,btemp+11
  8539  01729C  0EFF               	movlw	255
  8540  01729E  2240               	addwfc	(btemp+11)^0,f,c
  8541  0172A0  5040               	movf	(btemp+11)^0,w,c
  8542  0172A2  E106               	bnz	u5010
  8543  0172A4  0E1A               	movlw	26
  8544  0172A6  5C3F               	subwf	(btemp+10)^0,w,c
  8545  0172A8  B0D8               	btfsc	status,0,c
  8546  0172AA  D002               	goto	u5010
  8547  0172AC  0E01               	movlw	1
  8548  0172AE  D001               	goto	u5020
  8549  0172B0                     u5010:
  8550  0172B0  0E00               	movlw	0
  8551  0172B2                     u5020:
  8552  0172B2  6E3F               	movwf	(btemp+10)^0,c
  8553  0172B4  6A40               	clrf	(btemp+11)^0,c
  8554                           
  8555                           ;stkvar	_toupper$4789 @ sp[(-2)+0]
  8556  0172B6  0EFE               	movlw	-2
  8557  0172B8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8558  0172BE  0EFF               	movlw	-1
  8559  0172C0  0060  F103  FFE3   	movff	btemp+11,plusw1
  8560                           
  8561                           ;stkvar	_toupper$4789 @ sp[(-2)+0]
  8562  0172C6  0EFE               	movlw	-2
  8563  0172C8  006F FF8C  F035    	movff	plusw1,btemp
  8564  0172CE  0EFF               	movlw	-1
  8565  0172D0  50E3               	movf	plusw1,w,c
  8566  0172D2  1035               	iorwf	btemp^0,w,c
  8567  0172D4  B4D8               	btfsc	status,2,c
  8568  0172D6  D00D               	goto	l6266
  8569                           
  8570                           ;stkvar	_c @ sp[(-2)+-2]
  8571  0172D8  0EFC               	movlw	-4
  8572  0172DA  006F FF8C  F035    	movff	plusw1,btemp
  8573  0172E0  0EFD               	movlw	-3
  8574  0172E2  006F FF8C  F036    	movff	plusw1,btemp+1
  8575  0172E8  0E5F               	movlw	95
  8576  0172EA  1635               	andwf	btemp^0,f,c
  8577  0172EC  0E00               	movlw	0
  8578  0172EE  1636               	andwf	(btemp+1)^0,f,c
  8579  0172F0  D008               	goto	l2819
  8580  0172F2                     l6266:
  8581                           
  8582                           ;stkvar	_c @ sp[(-2)+-2]
  8583  0172F2  0EFC               	movlw	-4
  8584  0172F4  006F FF8C  F035    	movff	plusw1,btemp
  8585  0172FA  0EFD               	movlw	-3
  8586  0172FC  006F FF8C  F036    	movff	plusw1,btemp+1
  8587  017302                     l2819:
  8588                           
  8589                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8590  017302  52E5               	movf	postdec1,f,c
  8591  017304  52E5               	movf	postdec1,f,c
  8592  017306  52E5               	movf	postdec1,f,c
  8593  017308  52E5               	movf	postdec1,f,c
  8594  01730A  0012               	return		;funcret
  8595  01730C                     __end_of_toupper:
  8596                           	opt callstack 0
  8597                           
  8598 ;; *************** function _islower *****************
  8599 ;; Defined at:
  8600 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  c               2  [STACK] int 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  2  [STACK] int 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    6
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_toupper
  8625 ;; This function uses a reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text35
  8629  017C5C                     __ptext35:
  8630                           	opt callstack 0
  8631  017C5C                     _islower:
  8632                           	opt callstack 16
  8633                           
  8634                           ;stkvar	_c @ sp[(0)+-2]
  8635                           
  8636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8637                           ;incstack = 0
  8638  017C5C  0EFE               	movlw	-2
  8639  017C5E  50E3               	movf	plusw1,w,c
  8640  017C60  0F9F               	addlw	159
  8641  017C62  6E3F               	movwf	(btemp+10)^0,c
  8642  017C64  0EFF               	movlw	-1
  8643  017C66  006F FF8C  F040    	movff	plusw1,btemp+11
  8644  017C6C  0EFF               	movlw	255
  8645  017C6E  2240               	addwfc	(btemp+11)^0,f,c
  8646  017C70  5040               	movf	(btemp+11)^0,w,c
  8647  017C72  E106               	bnz	u4700
  8648  017C74  0E1A               	movlw	26
  8649  017C76  5C3F               	subwf	(btemp+10)^0,w,c
  8650  017C78  B0D8               	btfsc	status,0,c
  8651  017C7A  D002               	goto	u4700
  8652  017C7C  0E01               	movlw	1
  8653  017C7E  D001               	goto	u4710
  8654  017C80                     u4700:
  8655  017C80  0E00               	movlw	0
  8656  017C82                     u4710:
  8657  017C82  6E35               	movwf	btemp^0,c
  8658  017C84  6A36               	clrf	(btemp+1)^0,c
  8659                           
  8660                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8661  017C86  52E5               	movf	postdec1,f,c
  8662  017C88  52E5               	movf	postdec1,f,c
  8663  017C8A  0012               	return		;funcret
  8664  017C8C                     __end_of_islower:
  8665                           	opt callstack 0
  8666                           
  8667 ;; *************** function _isalpha *****************
  8668 ;; Defined at:
  8669 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  c               2  [STACK] int 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2  [STACK] int 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;Total ram usage:        0 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    6
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_xtoa
  8694 ;; This function uses a reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text36
  8698  017A16                     __ptext36:
  8699                           	opt callstack 0
  8700  017A16                     _isalpha:
  8701                           	opt callstack 17
  8702                           
  8703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8704                           ;incstack = 0
  8705  017A16  0E9F               	movlw	159
  8706  017A18  6E3F               	movwf	(btemp+10)^0,c
  8707  017A1A  0EFF               	movlw	255
  8708  017A1C  6E40               	movwf	(btemp+11)^0,c
  8709                           
  8710                           ;stkvar	_c @ sp[(0)+-2]
  8711  017A1E  0EFE               	movlw	-2
  8712  017A20  006F FF8C  F03D    	movff	plusw1,btemp+8
  8713  017A26  0EFF               	movlw	-1
  8714  017A28  006F FF8C  F03E    	movff	plusw1,btemp+9
  8715  017A2E  0E20               	movlw	32
  8716  017A30  123D               	iorwf	(btemp+8)^0,f,c
  8717  017A32  0E00               	movlw	0
  8718  017A34  123E               	iorwf	(btemp+9)^0,f,c
  8719  017A36  503F               	movf	(btemp+10)^0,w,c
  8720  017A38  263D               	addwf	(btemp+8)^0,f,c
  8721  017A3A  5040               	movf	(btemp+11)^0,w,c
  8722  017A3C  223E               	addwfc	(btemp+9)^0,f,c
  8723  017A3E  503E               	movf	(btemp+9)^0,w,c
  8724  017A40  E106               	bnz	u4990
  8725  017A42  0E1A               	movlw	26
  8726  017A44  5C3D               	subwf	(btemp+8)^0,w,c
  8727  017A46  B0D8               	btfsc	status,0,c
  8728  017A48  D002               	goto	u4990
  8729  017A4A  0E01               	movlw	1
  8730  017A4C  D001               	goto	u5000
  8731  017A4E                     u4990:
  8732  017A4E  0E00               	movlw	0
  8733  017A50                     u5000:
  8734  017A50  6E35               	movwf	btemp^0,c
  8735  017A52  6A36               	clrf	(btemp+1)^0,c
  8736                           
  8737                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8738  017A54  52E5               	movf	postdec1,f,c
  8739  017A56  52E5               	movf	postdec1,f,c
  8740  017A58  0012               	return		;funcret
  8741  017A5A                     __end_of_isalpha:
  8742                           	opt callstack 0
  8743                           
  8744 ;; *************** function _strncmp *****************
  8745 ;; Defined at:
  8746 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  _l              2  [STACK] PTR const unsigned char 
  8749 ;;		 -> ct(3), 
  8750 ;;  _r              2  [STACK] PTR const unsigned char 
  8751 ;;		 -> STR_42(3), 
  8752 ;;  n               2  [STACK] unsigned int 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  r               2  [STACK] PTR const unsigned char 
  8755 ;;		 -> STR_42(3), 
  8756 ;;  l               2  [STACK] PTR const unsigned char 
  8757 ;;		 -> ct(3), 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  2  [STACK] int 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/4
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    6
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_vfpfcnvrt
  8778 ;; This function uses a reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text37
  8782  015AFA                     __ptext37:
  8783                           	opt callstack 0
  8784  015AFA                     _strncmp:
  8785                           	opt callstack 0
  8786                           
  8787                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8788  015AFA  52E6               	movf	postinc1,f,c
  8789  015AFC  52E6               	movf	postinc1,f,c
  8790  015AFE  52E6               	movf	postinc1,f,c
  8791  015B00  52E6               	movf	postinc1,f,c
  8792                           
  8793                           ;stkvar	__l @ sp[(-4)+-2]
  8794                           
  8795                           ;incstack = 0
  8796  015B02  0EFA               	movlw	-6
  8797  015B04  006F FF8C  F03F    	movff	plusw1,btemp+10
  8798  015B0A  0EFB               	movlw	-5
  8799  015B0C  006F FF8C  F040    	movff	plusw1,btemp+11
  8800                           
  8801                           ;stkvar	_l @ sp[(-4)+2]
  8802  015B12  0EFF               	movlw	-1
  8803  015B14  0060  F103  FFE3   	movff	btemp+11,plusw1
  8804  015B1A  0EFE               	movlw	-2
  8805  015B1C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8806                           
  8807                           ;stkvar	__r @ sp[(-4)+-4]
  8808  015B22  0EF8               	movlw	-8
  8809  015B24  006F FF8C  F03F    	movff	plusw1,btemp+10
  8810  015B2A  0EF9               	movlw	-7
  8811  015B2C  006F FF8C  F040    	movff	plusw1,btemp+11
  8812                           
  8813                           ;stkvar	_r @ sp[(-4)+0]
  8814  015B32  0EFD               	movlw	-3
  8815  015B34  0060  F103  FFE3   	movff	btemp+11,plusw1
  8816  015B3A  0EFC               	movlw	-4
  8817  015B3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8818                           
  8819                           ;stkvar	_n @ sp[(-4)+-6]
  8820  015B42  0EF6               	movlw	-10
  8821  015B44  006F FF8C  F035    	movff	plusw1,btemp
  8822  015B4A  0E01               	movlw	1
  8823  015B4C  5E35               	subwf	btemp^0,f,c
  8824  015B4E  0EF6               	movlw	-10
  8825  015B50  0060  F0D7  FFE3   	movff	btemp,plusw1
  8826  015B56  0EF7               	movlw	-9
  8827  015B58  006F FF8C  F035    	movff	plusw1,btemp
  8828  015B5E  0E00               	movlw	0
  8829  015B60  5A35               	subwfb	btemp^0,f,c
  8830  015B62  0EF7               	movlw	-9
  8831  015B64  0060  F0D7  FFE3   	movff	btemp,plusw1
  8832  015B6A  0EF6               	movlw	-10
  8833  015B6C  28E3               	incf	plusw1,w,c
  8834  015B6E  E13F               	bnz	l7424
  8835  015B70  0EF7               	movlw	-9
  8836  015B72  28E3               	incf	plusw1,w,c
  8837  015B74  A4D8               	btfss	status,2,c
  8838  015B76  D03B               	goto	l7424
  8839  015B78  0E00               	movlw	0
  8840  015B7A  6E35               	movwf	btemp^0,c
  8841  015B7C  0E00               	movlw	0
  8842  015B7E  6E36               	movwf	(btemp+1)^0,c
  8843  015B80  D09B               	goto	l2791
  8844  015B82                     l7422:
  8845                           
  8846                           ;stkvar	_l @ sp[(-4)+2]
  8847  015B82  0EFE               	movlw	-2
  8848  015B84  50E3               	movf	plusw1,w,c
  8849  015B86  0F01               	addlw	1
  8850  015B88  6E35               	movwf	btemp^0,c
  8851  015B8A  0EFE               	movlw	-2
  8852  015B8C  0060  F0D7  FFE3   	movff	btemp,plusw1
  8853  015B92  6A35               	clrf	btemp^0,c
  8854  015B94  0EFF               	movlw	-1
  8855  015B96  50E3               	movf	plusw1,w,c
  8856  015B98  2035               	addwfc	btemp^0,w,c
  8857  015B9A  6E35               	movwf	btemp^0,c
  8858  015B9C  0EFF               	movlw	-1
  8859  015B9E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8860                           
  8861                           ;stkvar	_r @ sp[(-4)+0]
  8862  015BA4  0EFC               	movlw	-4
  8863  015BA6  50E3               	movf	plusw1,w,c
  8864  015BA8  0F01               	addlw	1
  8865  015BAA  6E35               	movwf	btemp^0,c
  8866  015BAC  0EFC               	movlw	-4
  8867  015BAE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8868  015BB4  6A35               	clrf	btemp^0,c
  8869  015BB6  0EFD               	movlw	-3
  8870  015BB8  50E3               	movf	plusw1,w,c
  8871  015BBA  2035               	addwfc	btemp^0,w,c
  8872  015BBC  6E35               	movwf	btemp^0,c
  8873  015BBE  0EFD               	movlw	-3
  8874  015BC0  0060  F0D7  FFE3   	movff	btemp,plusw1
  8875                           
  8876                           ;stkvar	_n @ sp[(-4)+-6]
  8877  015BC6  0EF6               	movlw	-10
  8878  015BC8  006F FF8C  F035    	movff	plusw1,btemp
  8879  015BCE  0E01               	movlw	1
  8880  015BD0  5E35               	subwf	btemp^0,f,c
  8881  015BD2  0EF6               	movlw	-10
  8882  015BD4  0060  F0D7  FFE3   	movff	btemp,plusw1
  8883  015BDA  0EF7               	movlw	-9
  8884  015BDC  006F FF8C  F035    	movff	plusw1,btemp
  8885  015BE2  0E00               	movlw	0
  8886  015BE4  5A35               	subwfb	btemp^0,f,c
  8887  015BE6  0EF7               	movlw	-9
  8888  015BE8  0060  F0D7  FFE3   	movff	btemp,plusw1
  8889  015BEE                     l7424:
  8890                           
  8891                           ;stkvar	_l @ sp[(-4)+2]
  8892  015BEE  0EFE               	movlw	-2
  8893  015BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8894  015BF6  0EFF               	movlw	-1
  8895  015BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8896  015BFE  50DF               	movf	indf2,w,c
  8897  015C00  B4D8               	btfsc	status,2,c
  8898  015C02  D03B               	goto	u7190
  8899                           
  8900                           ;stkvar	_r @ sp[(-4)+0]
  8901  015C04  50E1               	movf	fsr1l,w,c
  8902  015C06  0FFC               	addlw	-4
  8903  015C08  6ED9               	movwf	fsr2l,c
  8904  015C0A  50E2               	movf	fsr1h,w,c
  8905  015C0C  6EDA               	movwf	fsr2h,c
  8906  015C0E  0EFF               	movlw	255
  8907  015C10  22DA               	addwfc	fsr2h,f,c
  8908  015C12  006F FF7B FFF6     	movff	postinc2,tblptrl
  8909  015C18  006F FF77 FFF7     	movff	postdec2,tblptrh
  8910  015C1E                     	if	0	;tblptru may be non-zero
  8911  015C1E                     	endif
  8912  015C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8913  015C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  8914  015C20  6EF8               	movwf	tblptru,c
  8915  015C22                     	endif
  8916  015C22  0008               	tblrd		*
  8917  015C24  50F5               	movf	tablat,w,c
  8918  015C26  0900               	iorlw	0
  8919  015C28  B4D8               	btfsc	status,2,c
  8920  015C2A  D027               	goto	u7190
  8921                           
  8922                           ;stkvar	_n @ sp[(-4)+-6]
  8923  015C2C  0EF6               	movlw	-10
  8924  015C2E  006F FF8C  F035    	movff	plusw1,btemp
  8925  015C34  0EF7               	movlw	-9
  8926  015C36  50E3               	movf	plusw1,w,c
  8927  015C38  1035               	iorwf	btemp^0,w,c
  8928  015C3A  B4D8               	btfsc	status,2,c
  8929  015C3C  D01E               	goto	u7190
  8930                           
  8931                           ;stkvar	_l @ sp[(-4)+2]
  8932  015C3E  0EFE               	movlw	-2
  8933  015C40  006F FF8F FFD9     	movff	plusw1,fsr2l
  8934  015C46  0EFF               	movlw	-1
  8935  015C48  006F FF8F FFDA     	movff	plusw1,fsr2h
  8936  015C4E  50DF               	movf	indf2,w,c
  8937  015C50  6E40               	movwf	(btemp+11)^0,c
  8938                           
  8939                           ;stkvar	_r @ sp[(-4)+0]
  8940  015C52  50E1               	movf	fsr1l,w,c
  8941  015C54  0FFC               	addlw	-4
  8942  015C56  6ED9               	movwf	fsr2l,c
  8943  015C58  50E2               	movf	fsr1h,w,c
  8944  015C5A  6EDA               	movwf	fsr2h,c
  8945  015C5C  0EFF               	movlw	255
  8946  015C5E  22DA               	addwfc	fsr2h,f,c
  8947  015C60  006F FF7B FFF6     	movff	postinc2,tblptrl
  8948  015C66  006F FF77 FFF7     	movff	postdec2,tblptrh
  8949  015C6C                     	if	0	;tblptru may be non-zero
  8950  015C6C                     	endif
  8951  015C6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8952  015C6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8953  015C6E  6EF8               	movwf	tblptru,c
  8954  015C70                     	endif
  8955  015C70  0008               	tblrd		*
  8956  015C72  50F5               	movf	tablat,w,c
  8957  015C74  1840               	xorwf	(btemp+11)^0,w,c
  8958  015C76  B4D8               	btfsc	status,2,c
  8959  015C78  D784               	goto	l7422
  8960  015C7A                     u7190:
  8961                           
  8962                           ;stkvar	_l @ sp[(-4)+2]
  8963  015C7A  0EFE               	movlw	-2
  8964  015C7C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8965  015C82  0EFF               	movlw	-1
  8966  015C84  006F FF8F FFDA     	movff	plusw1,fsr2h
  8967  015C8A  50DF               	movf	indf2,w,c
  8968  015C8C  6E35               	movwf	btemp^0,c
  8969  015C8E  6A36               	clrf	(btemp+1)^0,c
  8970                           
  8971                           ;stkvar	_r @ sp[(-4)+0]
  8972  015C90  50E1               	movf	fsr1l,w,c
  8973  015C92  0FFC               	addlw	-4
  8974  015C94  6ED9               	movwf	fsr2l,c
  8975  015C96  50E2               	movf	fsr1h,w,c
  8976  015C98  6EDA               	movwf	fsr2h,c
  8977  015C9A  0EFF               	movlw	255
  8978  015C9C  22DA               	addwfc	fsr2h,f,c
  8979  015C9E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8980  015CA4  006F FF77 FFF7     	movff	postdec2,tblptrh
  8981  015CAA                     	if	0	;tblptru may be non-zero
  8982  015CAA                     	endif
  8983  015CAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8984  015CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  8985  015CAC  6EF8               	movwf	tblptru,c
  8986  015CAE                     	endif
  8987  015CAE  0008               	tblrd		*
  8988  015CB0  50F5               	movf	tablat,w,c
  8989  015CB2  5E35               	subwf	btemp^0,f,c
  8990  015CB4  0E00               	movlw	0
  8991  015CB6  5A36               	subwfb	(btemp+1)^0,f,c
  8992  015CB8                     l2791:
  8993                           
  8994                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  8995  015CB8  0EF6               	movlw	246
  8996  015CBA  26E1               	addwf	fsr1l,f,c
  8997  015CBC  0EFF               	movlw	255
  8998  015CBE  22E2               	addwfc	fsr1h,f,c
  8999  015CC0  0012               	return		;funcret
  9000  015CC2                     __end_of_strncmp:
  9001                           	opt callstack 0
  9002                           
  9003 ;; *************** function _stoa *****************
  9004 ;; Defined at:
  9005 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9008 ;;		 -> f(6), NULL(0), 
  9009 ;;  s               2  [STACK] PTR unsigned char 
  9010 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  9011 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  9012 ;;		 -> STR_3(4), V(189), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  nuls            7  [STACK] unsigned char [7]
  9015 ;;  l               2  [STACK] int 
  9016 ;;  p               2  [STACK] int 
  9017 ;;  cp              2  [STACK] PTR unsigned char 
  9018 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  9019 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  9020 ;;		 -> STR_7(4), STR_3(4), V(189), 
  9021 ;;  w               2  [STACK] int 
  9022 ;;  i               2  [STACK] int 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2  [STACK] int 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/4
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    9
  9039 ;; This function calls:
  9040 ;;		_fputc
  9041 ;;		_strlen
  9042 ;; This function is called by:
  9043 ;;		_vfpfcnvrt
  9044 ;; This function uses a reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text38
  9048  014A94                     __ptext38:
  9049                           	opt callstack 0
  9050  014A94                     _stoa:
  9051                           	opt callstack 0
  9052                           
  9053                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9054  014A94  0E11               	movlw	17
  9055  014A96  26E1               	addwf	fsr1l,f,c
  9056  014A98  0E00               	movlw	0
  9057  014A9A  22E2               	addwfc	fsr1h,f,c
  9058                           
  9059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9060                           
  9061                           ;incstack = 0
  9062  014A9C  EE20  F0C5         	lfsr	2,stoa@F1166
  9063                           
  9064                           ;stkvar	_nuls @ sp[(-17)+0]
  9065  014AA0  0E07               	movlw	7
  9066  014AA2  6E35               	movwf	btemp^0,c
  9067  014AA4  0EEF               	movlw	-17
  9068  014AA6                     us910999:
  9069  014AA6  006F FF7B FFE3     	movff	postinc2,plusw1
  9070  014AAC  28E8               	incf	wreg,w,c
  9071  014AAE  2E35               	decfsz	btemp^0,f,c
  9072  014AB0  D7FA               	bra	us910999
  9073                           
  9074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9075                           ;stkvar	_s @ sp[(-17)+-4]
  9076  014AB2  0EEB               	movlw	-21
  9077  014AB4  006F FF8C  F03F    	movff	plusw1,btemp+10
  9078  014ABA  0EEC               	movlw	-20
  9079  014ABC  006F FF8C  F040    	movff	plusw1,btemp+11
  9080                           
  9081                           ;stkvar	_cp @ sp[(-17)+11]
  9082  014AC2  0EFB               	movlw	-5
  9083  014AC4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9084  014ACA  0EFA               	movlw	-6
  9085  014ACC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9086                           
  9087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9088                           ;stkvar	_cp @ sp[(-17)+11]
  9089  014AD2  0EFA               	movlw	-6
  9090  014AD4  006F FF8C  F035    	movff	plusw1,btemp
  9091  014ADA  0EFB               	movlw	-5
  9092  014ADC  50E3               	movf	plusw1,w,c
  9093  014ADE  1035               	iorwf	btemp^0,w,c
  9094  014AE0  A4D8               	btfss	status,2,c
  9095  014AE2  D00E               	goto	l9310
  9096                           
  9097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9098                           ;stkvar	_nuls @ sp[(-17)+0]
  9099  014AE4  0EEF               	movlw	239
  9100  014AE6  24E1               	addwf	fsr1l,w,c
  9101  014AE8  6E3F               	movwf	(btemp+10)^0,c
  9102  014AEA  0EFF               	movlw	255
  9103  014AEC  20E2               	addwfc	fsr1h,w,c
  9104  014AEE  6E40               	movwf	(btemp+11)^0,c
  9105                           
  9106                           ;stkvar	_cp @ sp[(-17)+11]
  9107  014AF0  0EFB               	movlw	-5
  9108  014AF2  0060  F103  FFE3   	movff	btemp+11,plusw1
  9109  014AF8  0EFA               	movlw	-6
  9110  014AFA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9111  014B00                     l9310:
  9112                           
  9113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9114                           ;stkvar	_cp @ sp[(-17)+11]
  9115  014B00  0EFA               	movlw	-6
  9116  014B02  006F FF8F FFE6     	movff	plusw1,postinc1
  9117  014B08  006F FF8F FFE6     	movff	plusw1,postinc1
  9118  014B0E  EC87  F0B7         	call	_strlen	;wreg free
  9119                           
  9120                           ;stkvar	_l @ sp[(-17)+7]
  9121  014B12  0EF6               	movlw	-10
  9122  014B14  0060  F0D7  FFE3   	movff	btemp,plusw1
  9123  014B1A  0EF7               	movlw	-9
  9124  014B1C  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9125                           
  9126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9127                           ;stkvar	_p @ sp[(-17)+9]
  9128  014B22  0EF8               	movlw	-8
  9129  014B24  0060  F083  FFE3   	movff	_prec,plusw1
  9130  014B2A  0EF9               	movlw	-7
  9131  014B2C  0060  F087  FFE3   	movff	_prec+1,plusw1
  9132                           
  9133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9134                           ;stkvar	_p @ sp[(-17)+9]
  9135  014B32  0EF9               	movlw	-7
  9136  014B34  BEE3               	btfsc	plusw1,7,c
  9137  014B36  D023               	goto	l1868
  9138                           
  9139                           ;stkvar	_l @ sp[(-17)+7]
  9140                           ;stkvar	_p @ sp[(-17)+9]
  9141  014B38  50E1               	movf	fsr1l,w,c
  9142  014B3A  0FF8               	addlw	-8
  9143  014B3C  6ED9               	movwf	fsr2l,c
  9144  014B3E  50E2               	movf	fsr1h,w,c
  9145  014B40  6EDA               	movwf	fsr2h,c
  9146  014B42  0EFF               	movlw	255
  9147  014B44  22DA               	addwfc	fsr2h,f,c
  9148  014B46  0EF6               	movlw	-10
  9149  014B48  50E3               	movf	plusw1,w,c
  9150  014B4A  5CDE               	subwf	postinc2,w,c
  9151  014B4C  50DE               	movf	postinc2,w,c
  9152  014B4E  0A80               	xorlw	128
  9153  014B50  6E35               	movwf	btemp^0,c
  9154  014B52  0EF7               	movlw	-9
  9155  014B54  50E3               	movf	plusw1,w,c
  9156  014B56  0A80               	xorlw	128
  9157  014B58  5835               	subwfb	btemp^0,w,c
  9158  014B5A  B0D8               	btfsc	status,0,c
  9159  014B5C  D010               	goto	l1868
  9160                           
  9161                           ;stkvar	_p @ sp[(-17)+9]
  9162                           ;stkvar	_l @ sp[(-17)+7]
  9163  014B5E  0EF8               	movlw	-8
  9164  014B60  006F FF8C  F035    	movff	plusw1,btemp
  9165  014B66  0EF6               	movlw	-10
  9166  014B68  0060  F0D7  FFE3   	movff	btemp,plusw1
  9167  014B6E  0EF9               	movlw	-7
  9168  014B70  006F FF8C  F035    	movff	plusw1,btemp
  9169  014B76  0EF7               	movlw	-9
  9170  014B78  0060  F0D7  FFE3   	movff	btemp,plusw1
  9171  014B7E                     l1868:
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9174                           ;stkvar	_l @ sp[(-17)+7]
  9175                           ;stkvar	_p @ sp[(-17)+9]
  9176  014B7E  0EF6               	movlw	-10
  9177  014B80  006F FF8C  F035    	movff	plusw1,btemp
  9178  014B86  0EF8               	movlw	-8
  9179  014B88  0060  F0D7  FFE3   	movff	btemp,plusw1
  9180  014B8E  0EF7               	movlw	-9
  9181  014B90  006F FF8C  F035    	movff	plusw1,btemp
  9182  014B96  0EF9               	movlw	-7
  9183  014B98  0060  F0D7  FFE3   	movff	btemp,plusw1
  9184                           
  9185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9186                           ;stkvar	_w @ sp[(-17)+13]
  9187  014B9E  0EFC               	movlw	-4
  9188  014BA0  0060  F07B  FFE3   	movff	_width,plusw1
  9189  014BA6  0EFD               	movlw	-3
  9190  014BA8  0060  F07F  FFE3   	movff	_width+1,plusw1
  9191                           
  9192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9193  014BAE  A022               	btfss	_flags^0,0,c
  9194  014BB0  D01F               	goto	l9330
  9195  014BB2  D031               	goto	u9150
  9196  014BB4                     l9326:
  9197                           
  9198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9199                           ;stkvar	_fp @ sp[(-17)+-2]
  9200  014BB4  0EED               	movlw	-19
  9201  014BB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9202  014BBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9203  014BC2  0E20               	movlw	32
  9204  014BC4  6EE6               	movwf	postinc1,c
  9205  014BC6  0E00               	movlw	0
  9206  014BC8  6EE6               	movwf	postinc1,c
  9207  014BCA  ECD4  F0B1         	call	_fputc	;wreg free
  9208                           
  9209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9210                           ;stkvar	_l @ sp[(-17)+7]
  9211  014BCE  0EF6               	movlw	-10
  9212  014BD0  50E3               	movf	plusw1,w,c
  9213  014BD2  0F01               	addlw	1
  9214  014BD4  6E35               	movwf	btemp^0,c
  9215  014BD6  0EF6               	movlw	-10
  9216  014BD8  0060  F0D7  FFE3   	movff	btemp,plusw1
  9217  014BDE  6A35               	clrf	btemp^0,c
  9218  014BE0  0EF7               	movlw	-9
  9219  014BE2  50E3               	movf	plusw1,w,c
  9220  014BE4  2035               	addwfc	btemp^0,w,c
  9221  014BE6  6E35               	movwf	btemp^0,c
  9222  014BE8  0EF7               	movlw	-9
  9223  014BEA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9224  014BF0                     l9330:
  9225                           
  9226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9227                           ;stkvar	_w @ sp[(-17)+13]
  9228                           ;stkvar	_l @ sp[(-17)+7]
  9229  014BF0  50E1               	movf	fsr1l,w,c
  9230  014BF2  0FF6               	addlw	-10
  9231  014BF4  6ED9               	movwf	fsr2l,c
  9232  014BF6  50E2               	movf	fsr1h,w,c
  9233  014BF8  6EDA               	movwf	fsr2h,c
  9234  014BFA  0EFF               	movlw	255
  9235  014BFC  22DA               	addwfc	fsr2h,f,c
  9236  014BFE  0EFC               	movlw	-4
  9237  014C00  50E3               	movf	plusw1,w,c
  9238  014C02  5CDE               	subwf	postinc2,w,c
  9239  014C04  50DE               	movf	postinc2,w,c
  9240  014C06  0A80               	xorlw	128
  9241  014C08  6E35               	movwf	btemp^0,c
  9242  014C0A  0EFD               	movlw	-3
  9243  014C0C  50E3               	movf	plusw1,w,c
  9244  014C0E  0A80               	xorlw	128
  9245  014C10  5835               	subwfb	btemp^0,w,c
  9246  014C12  A0D8               	btfss	status,0,c
  9247  014C14  D7CF               	goto	l9326
  9248  014C16                     u9150:
  9249                           
  9250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9251                           ;stkvar	_i @ sp[(-17)+15]
  9252  014C16  0EFE               	movlw	-2
  9253  014C18  6AE3               	clrf	plusw1,c
  9254  014C1A  0EFF               	movlw	-1
  9255  014C1C  6AE3               	clrf	plusw1,c
  9256                           
  9257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9258  014C1E  D045               	goto	l9340
  9259  014C20                     l9334:
  9260                           
  9261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9262                           ;stkvar	_fp @ sp[(-17)+-2]
  9263  014C20  0EED               	movlw	-19
  9264  014C22  006F FF8F FFE6     	movff	plusw1,postinc1
  9265  014C28  006F FF8F FFE6     	movff	plusw1,postinc1
  9266                           
  9267                           ;stkvar	_cp @ sp[(-19)+11]
  9268  014C2E  0EF8               	movlw	-8
  9269  014C30  006F FF8F FFF6     	movff	plusw1,tblptrl
  9270  014C36  0EF9               	movlw	-7
  9271  014C38  006F FF8F FFF7     	movff	plusw1,tblptrh
  9272  014C3E  0E00               	movlw	low (__mediumconst shr (0+16))
  9273  014C40  6EF8               	movwf	tblptru,c
  9274  014C42  0E1F               	movlw	(high __ramtop+-1)
  9275  014C44  64F7               	cpfsgt	tblptrh,c
  9276  014C46  D003               	bra	u9167
  9277  014C48  0008               	tblrd		*
  9278  014C4A  50F5               	movf	tablat,w,c
  9279  014C4C  D007               	bra	u9160
  9280  014C4E                     u9167:
  9281  014C4E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9282  014C54  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9283  014C5A  50EF               	movf	indf0,w,c
  9284  014C5C                     u9160:
  9285  014C5C  6EE6               	movwf	postinc1,c
  9286  014C5E  0E00               	movlw	0
  9287  014C60  6EE6               	movwf	postinc1,c
  9288  014C62  ECD4  F0B1         	call	_fputc	;wreg free
  9289                           
  9290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9291                           ;stkvar	_cp @ sp[(-17)+11]
  9292  014C66  0EFA               	movlw	-6
  9293  014C68  50E3               	movf	plusw1,w,c
  9294  014C6A  0F01               	addlw	1
  9295  014C6C  6E35               	movwf	btemp^0,c
  9296  014C6E  0EFA               	movlw	-6
  9297  014C70  0060  F0D7  FFE3   	movff	btemp,plusw1
  9298  014C76  6A35               	clrf	btemp^0,c
  9299  014C78  0EFB               	movlw	-5
  9300  014C7A  50E3               	movf	plusw1,w,c
  9301  014C7C  2035               	addwfc	btemp^0,w,c
  9302  014C7E  6E35               	movwf	btemp^0,c
  9303  014C80  0EFB               	movlw	-5
  9304  014C82  0060  F0D7  FFE3   	movff	btemp,plusw1
  9305                           
  9306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9307                           ;stkvar	_i @ sp[(-17)+15]
  9308  014C88  0EFE               	movlw	-2
  9309  014C8A  50E3               	movf	plusw1,w,c
  9310  014C8C  0F01               	addlw	1
  9311  014C8E  6E35               	movwf	btemp^0,c
  9312  014C90  0EFE               	movlw	-2
  9313  014C92  0060  F0D7  FFE3   	movff	btemp,plusw1
  9314  014C98  6A35               	clrf	btemp^0,c
  9315  014C9A  0EFF               	movlw	-1
  9316  014C9C  50E3               	movf	plusw1,w,c
  9317  014C9E  2035               	addwfc	btemp^0,w,c
  9318  014CA0  6E35               	movwf	btemp^0,c
  9319  014CA2  0EFF               	movlw	-1
  9320  014CA4  0060  F0D7  FFE3   	movff	btemp,plusw1
  9321  014CAA                     l9340:
  9322                           
  9323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9324                           ;stkvar	_p @ sp[(-17)+9]
  9325                           ;stkvar	_i @ sp[(-17)+15]
  9326  014CAA  50E1               	movf	fsr1l,w,c
  9327  014CAC  0FFE               	addlw	-2
  9328  014CAE  6ED9               	movwf	fsr2l,c
  9329  014CB0  50E2               	movf	fsr1h,w,c
  9330  014CB2  6EDA               	movwf	fsr2h,c
  9331  014CB4  0EFF               	movlw	255
  9332  014CB6  22DA               	addwfc	fsr2h,f,c
  9333  014CB8  0EF8               	movlw	-8
  9334  014CBA  50E3               	movf	plusw1,w,c
  9335  014CBC  5CDE               	subwf	postinc2,w,c
  9336  014CBE  50DE               	movf	postinc2,w,c
  9337  014CC0  0A80               	xorlw	128
  9338  014CC2  6E35               	movwf	btemp^0,c
  9339  014CC4  0EF9               	movlw	-7
  9340  014CC6  50E3               	movf	plusw1,w,c
  9341  014CC8  0A80               	xorlw	128
  9342  014CCA  5835               	subwfb	btemp^0,w,c
  9343  014CCC  A0D8               	btfss	status,0,c
  9344  014CCE  D7A8               	goto	l9334
  9345                           
  9346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9347  014CD0  B022               	btfsc	_flags^0,0,c
  9348  014CD2  D01F               	goto	l9348
  9349  014CD4  D031               	goto	u9190
  9350  014CD6                     l9344:
  9351                           
  9352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9353                           ;stkvar	_fp @ sp[(-17)+-2]
  9354  014CD6  0EED               	movlw	-19
  9355  014CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  9356  014CDE  006F FF8F FFE6     	movff	plusw1,postinc1
  9357  014CE4  0E20               	movlw	32
  9358  014CE6  6EE6               	movwf	postinc1,c
  9359  014CE8  0E00               	movlw	0
  9360  014CEA  6EE6               	movwf	postinc1,c
  9361  014CEC  ECD4  F0B1         	call	_fputc	;wreg free
  9362                           
  9363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9364                           ;stkvar	_l @ sp[(-17)+7]
  9365  014CF0  0EF6               	movlw	-10
  9366  014CF2  50E3               	movf	plusw1,w,c
  9367  014CF4  0F01               	addlw	1
  9368  014CF6  6E35               	movwf	btemp^0,c
  9369  014CF8  0EF6               	movlw	-10
  9370  014CFA  0060  F0D7  FFE3   	movff	btemp,plusw1
  9371  014D00  6A35               	clrf	btemp^0,c
  9372  014D02  0EF7               	movlw	-9
  9373  014D04  50E3               	movf	plusw1,w,c
  9374  014D06  2035               	addwfc	btemp^0,w,c
  9375  014D08  6E35               	movwf	btemp^0,c
  9376  014D0A  0EF7               	movlw	-9
  9377  014D0C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9378  014D12                     l9348:
  9379                           
  9380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9381                           ;stkvar	_w @ sp[(-17)+13]
  9382                           ;stkvar	_l @ sp[(-17)+7]
  9383  014D12  50E1               	movf	fsr1l,w,c
  9384  014D14  0FF6               	addlw	-10
  9385  014D16  6ED9               	movwf	fsr2l,c
  9386  014D18  50E2               	movf	fsr1h,w,c
  9387  014D1A  6EDA               	movwf	fsr2h,c
  9388  014D1C  0EFF               	movlw	255
  9389  014D1E  22DA               	addwfc	fsr2h,f,c
  9390  014D20  0EFC               	movlw	-4
  9391  014D22  50E3               	movf	plusw1,w,c
  9392  014D24  5CDE               	subwf	postinc2,w,c
  9393  014D26  50DE               	movf	postinc2,w,c
  9394  014D28  0A80               	xorlw	128
  9395  014D2A  6E35               	movwf	btemp^0,c
  9396  014D2C  0EFD               	movlw	-3
  9397  014D2E  50E3               	movf	plusw1,w,c
  9398  014D30  0A80               	xorlw	128
  9399  014D32  5835               	subwfb	btemp^0,w,c
  9400  014D34  A0D8               	btfss	status,0,c
  9401  014D36  D7CF               	goto	l9344
  9402  014D38                     u9190:
  9403                           
  9404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9405                           ;stkvar	_l @ sp[(-17)+7]
  9406  014D38  0EF6               	movlw	-10
  9407  014D3A  006F FF8C  F035    	movff	plusw1,btemp
  9408  014D40  0EF7               	movlw	-9
  9409  014D42  006F FF8C  F036    	movff	plusw1,btemp+1
  9410                           
  9411                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9412  014D48  0EEB               	movlw	235
  9413  014D4A  26E1               	addwf	fsr1l,f,c
  9414  014D4C  0EFF               	movlw	255
  9415  014D4E  22E2               	addwfc	fsr1h,f,c
  9416  014D50  0012               	return		;funcret
  9417  014D52                     __end_of_stoa:
  9418                           	opt callstack 0
  9419                           
  9420 ;; *************** function _efgtoa *****************
  9421 ;; Defined at:
  9422 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9425 ;;		 -> f(6), NULL(0), 
  9426 ;;  f               4  [STACK] PTR struct _IO_FILE
  9427 ;;  c               1  [STACK] unsigned char 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  u               4  [STACK] unsigned char 
  9430 ;;  g               4  [STACK] unsigned char 
  9431 ;;  l               4  [STACK] unsigned char 
  9432 ;;  h               4  [STACK] unsigned char 
  9433 ;;  ou              4  [STACK] unsigned char 
  9434 ;;  n               2  [STACK] int 
  9435 ;;  e               2  [STACK] int 
  9436 ;;  i               2  [STACK] int 
  9437 ;;  w               2  [STACK] int 
  9438 ;;  p               2  [STACK] int 
  9439 ;;  sign            2  [STACK] int 
  9440 ;;  d               2  [STACK] int 
  9441 ;;  ne              2  [STACK] int 
  9442 ;;  m               2  [STACK] int 
  9443 ;;  pp              2  [STACK] int 
  9444 ;;  t               2  [STACK] int 
  9445 ;;  mode            1  [STACK] unsigned char 
  9446 ;;  nmode           1  [STACK] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  2  [STACK] int 
  9449 ;; Registers used:
  9450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/4
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;Total ram usage:        0 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:   11
  9463 ;; This function calls:
  9464 ;;		___awdiv
  9465 ;;		___awmod
  9466 ;;		___fladd
  9467 ;;		___fldiv
  9468 ;;		___fleq
  9469 ;;		___flge
  9470 ;;		___flmul
  9471 ;;		___flneg
  9472 ;;		___flsub
  9473 ;;		___fltol
  9474 ;;		___fpclassifyf
  9475 ;;		_floorf
  9476 ;;		_isupper
  9477 ;;		_pad
  9478 ;;		_strcpy
  9479 ;;		_tolower
  9480 ;; This function is called by:
  9481 ;;		_vfpfcnvrt
  9482 ;; This function uses a reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text39
  9486  010000                     __ptext39:
  9487                           	opt callstack 0
  9488  010000                     _efgtoa:
  9489                           	opt callstack 0
  9490                           
  9491                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9492  010000  0E38               	movlw	56
  9493  010002  26E1               	addwf	fsr1l,f,c
  9494  010004  0E00               	movlw	0
  9495  010006  22E2               	addwfc	fsr1h,f,c
  9496                           
  9497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9498                           ;stkvar	_sign @ sp[(-56)+42]
  9499                           
  9500                           ;incstack = 0
  9501  010008  0EF2               	movlw	-14
  9502  01000A  6AE3               	clrf	plusw1,c
  9503  01000C  0EF3               	movlw	-13
  9504  01000E  6AE3               	clrf	plusw1,c
  9505                           
  9506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9507                           ;stkvar	_f @ sp[(-56)+-6]
  9508  010010  0EC2               	movlw	-62
  9509  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9510  010018  0EC3               	movlw	-61
  9511  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9512  010020  0EC4               	movlw	-60
  9513  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9514  010028  0EC5               	movlw	-59
  9515  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9516                           
  9517                           ;stkvar	_g @ sp[(-56)+16]
  9518  010030  0ED8               	movlw	-40
  9519  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9520  010038  0ED9               	movlw	-39
  9521  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9522  010040  0EDA               	movlw	-38
  9523  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9524  010048  0EDB               	movlw	-37
  9525  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9526                           
  9527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9528                           ;stkvar	_g @ sp[(-56)+16]
  9529  010050  0EDB               	movlw	-37
  9530  010052  AEE3               	btfss	plusw1,7,c
  9531  010054  D02B               	goto	l9008
  9532                           
  9533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9534  010056  0E01               	movlw	1
  9535  010058  6E3F               	movwf	(btemp+10)^0,c
  9536  01005A  0E00               	movlw	0
  9537  01005C  6E40               	movwf	(btemp+11)^0,c
  9538                           
  9539                           ;stkvar	_sign @ sp[(-56)+42]
  9540  01005E  0EF2               	movlw	-14
  9541  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9542  010066  0EF3               	movlw	-13
  9543  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9544                           
  9545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9546                           ;stkvar	_g @ sp[(-56)+16]
  9547  01006E  0ED8               	movlw	-40
  9548  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9549  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9550  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9551  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9552  010088  EC38  F0BC         	call	___flneg	;wreg free
  9553                           
  9554                           ;stkvar	_g @ sp[(-56)+16]
  9555  01008C  0ED8               	movlw	-40
  9556  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9557  010094  0ED9               	movlw	-39
  9558  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9559  01009C  0EDA               	movlw	-38
  9560  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9561  0100A4  0EDB               	movlw	-37
  9562  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9563  0100AC                     l9008:
  9564                           
  9565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9566                           ;stkvar	_n @ sp[(-56)+32]
  9567  0100AC  0EE8               	movlw	-24
  9568  0100AE  6AE3               	clrf	plusw1,c
  9569  0100B0  0EE9               	movlw	-23
  9570  0100B2  6AE3               	clrf	plusw1,c
  9571                           
  9572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9573                           ;stkvar	_w @ sp[(-56)+38]
  9574  0100B4  0EEE               	movlw	-18
  9575  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9576  0100BC  0EEF               	movlw	-17
  9577  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9578                           
  9579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9580                           ;stkvar	_sign @ sp[(-56)+42]
  9581  0100C4  0EF2               	movlw	-14
  9582  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9583  0100CC  0EF3               	movlw	-13
  9584  0100CE  50E3               	movf	plusw1,w,c
  9585  0100D0  1035               	iorwf	btemp^0,w,c
  9586  0100D2  A4D8               	btfss	status,2,c
  9587  0100D4  D002               	goto	u8600
  9588  0100D6  A422               	btfss	_flags^0,2,c
  9589  0100D8  D036               	goto	l9028
  9590  0100DA                     u8600:
  9591                           
  9592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9593                           ;stkvar	_sign @ sp[(-56)+42]
  9594  0100DA  0EF2               	movlw	-14
  9595  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9596  0100E2  0EF3               	movlw	-13
  9597  0100E4  50E3               	movf	plusw1,w,c
  9598  0100E6  1035               	iorwf	btemp^0,w,c
  9599  0100E8  A4D8               	btfss	status,2,c
  9600  0100EA  D002               	goto	l9020
  9601  0100EC  0E2B               	movlw	43
  9602  0100EE  D001               	goto	L7
  9603  0100F0                     l9020:
  9604  0100F0  0E2D               	movlw	45
  9605  0100F2                     L7:
  9606  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9607  0100F4  0E00               	movlw	0
  9608  0100F6  6E40               	movwf	(btemp+11)^0,c
  9609                           
  9610                           ;stkvar	_efgtoa$4105 @ sp[(-56)+10]
  9611  0100F8  0ED2               	movlw	-46
  9612  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9613  010100  0ED3               	movlw	-45
  9614  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9615                           
  9616                           ;stkvar	_efgtoa$4105 @ sp[(-56)+10]
  9617  010108  0ED2               	movlw	-46
  9618  01010A  006F FF8C  F1A4    	movff	plusw1,_dbuf
  9619                           
  9620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9621                           ;stkvar	_n @ sp[(-56)+32]
  9622  010110  0EE8               	movlw	-24
  9623  010112  50E3               	movf	plusw1,w,c
  9624  010114  0F01               	addlw	1
  9625  010116  6E35               	movwf	btemp^0,c
  9626  010118  0EE8               	movlw	-24
  9627  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9628  010120  6A35               	clrf	btemp^0,c
  9629  010122  0EE9               	movlw	-23
  9630  010124  50E3               	movf	plusw1,w,c
  9631  010126  2035               	addwfc	btemp^0,w,c
  9632  010128  6E35               	movwf	btemp^0,c
  9633  01012A  0EE9               	movlw	-23
  9634  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9637                           ;stkvar	_w @ sp[(-56)+38]
  9638  010132  50E1               	movf	fsr1l,w,c
  9639  010134  0FEE               	addlw	-18
  9640  010136  6ED9               	movwf	fsr2l,c
  9641  010138  50E2               	movf	fsr1h,w,c
  9642  01013A  6EDA               	movwf	fsr2h,c
  9643  01013C  0EFF               	movlw	255
  9644  01013E  22DA               	addwfc	fsr2h,f,c
  9645  010140  06DE               	decf	postinc2,f,c
  9646  010142  0E00               	movlw	0
  9647  010144  5ADD               	subwfb	postdec2,f,c
  9648  010146                     l9028:
  9649                           
  9650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9651                           ;stkvar	_g @ sp[(-56)+16]
  9652  010146  0ED8               	movlw	-40
  9653  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9654  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9655  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9656  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9657  010160  EC61  F0AE         	call	___fpclassifyf	;wreg free
  9658  010164  0435               	decf	btemp^0,w,c
  9659  010166  1036               	iorwf	(btemp+1)^0,w,c
  9660  010168  A4D8               	btfss	status,2,c
  9661  01016A  D076               	goto	l9046
  9662  01016C  0EBF               	movlw	191
  9663  01016E  6E3F               	movwf	(btemp+10)^0,c
  9664  010170  0EFF               	movlw	255
  9665  010172  6E40               	movwf	(btemp+11)^0,c
  9666                           
  9667                           ;stkvar	_c @ sp[(-56)+-7]
  9668  010174  0EC1               	movlw	-63
  9669  010176  50E3               	movf	plusw1,w,c
  9670  010178  6E3D               	movwf	(btemp+8)^0,c
  9671  01017A  6A3E               	clrf	(btemp+9)^0,c
  9672  01017C  503F               	movf	(btemp+10)^0,w,c
  9673  01017E  263D               	addwf	(btemp+8)^0,f,c
  9674  010180  5040               	movf	(btemp+11)^0,w,c
  9675  010182  223E               	addwfc	(btemp+9)^0,f,c
  9676  010184  503E               	movf	(btemp+9)^0,w,c
  9677  010186  E106               	bnz	u8630
  9678  010188  0E1A               	movlw	26
  9679  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9680  01018C  B0D8               	btfsc	status,0,c
  9681  01018E  D002               	goto	u8630
  9682  010190  0E01               	movlw	1
  9683  010192  D001               	goto	u8640
  9684  010194                     u8630:
  9685  010194  0E00               	movlw	0
  9686  010196                     u8640:
  9687  010196  6E3F               	movwf	(btemp+10)^0,c
  9688  010198  6A40               	clrf	(btemp+11)^0,c
  9689                           
  9690                           ;stkvar	_efgtoa$4106 @ sp[(-56)+8]
  9691  01019A  0ED0               	movlw	-48
  9692  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9693  0101A2  0ED1               	movlw	-47
  9694  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9695                           
  9696                           ;stkvar	_efgtoa$4106 @ sp[(-56)+8]
  9697  0101AA  0ED0               	movlw	-48
  9698  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9699  0101B2  0ED1               	movlw	-47
  9700  0101B4  50E3               	movf	plusw1,w,c
  9701  0101B6  1035               	iorwf	btemp^0,w,c
  9702  0101B8  B4D8               	btfsc	status,2,c
  9703  0101BA  D017               	goto	l9038
  9704                           
  9705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9706  0101BC  0EE2               	movlw	low STR_32
  9707  0101BE  6EE6               	movwf	postinc1,c
  9708  0101C0  0EFF               	movlw	high STR_32
  9709  0101C2  6EE6               	movwf	postinc1,c
  9710                           
  9711                           ;stkvar	_n @ sp[(-58)+32]
  9712  0101C4  0EA4               	movlw	low _dbuf
  9713  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9714  0101C8  0E01               	movlw	high _dbuf
  9715  0101CA  6E40               	movwf	(btemp+11)^0,c
  9716  0101CC  0EE6               	movlw	-26
  9717  0101CE  50E3               	movf	plusw1,w,c
  9718  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9719  0101D2  0EE7               	movlw	-25
  9720  0101D4  50E3               	movf	plusw1,w,c
  9721  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9722  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9723  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9724  0101E4  ECFD  F0B4         	call	_strcpy	;wreg free
  9725                           
  9726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9727  0101E8  D016               	goto	l9040
  9728  0101EA                     l9038:
  9729                           
  9730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9731  0101EA  0EEA               	movlw	low STR_33
  9732  0101EC  6EE6               	movwf	postinc1,c
  9733  0101EE  0EFF               	movlw	high STR_33
  9734  0101F0  6EE6               	movwf	postinc1,c
  9735                           
  9736                           ;stkvar	_n @ sp[(-58)+32]
  9737  0101F2  0EA4               	movlw	low _dbuf
  9738  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9739  0101F6  0E01               	movlw	high _dbuf
  9740  0101F8  6E40               	movwf	(btemp+11)^0,c
  9741  0101FA  0EE6               	movlw	-26
  9742  0101FC  50E3               	movf	plusw1,w,c
  9743  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9744  010200  0EE7               	movlw	-25
  9745  010202  50E3               	movf	plusw1,w,c
  9746  010204  2240               	addwfc	(btemp+11)^0,f,c
  9747  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9748  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9749  010212  ECFD  F0B4         	call	_strcpy	;wreg free
  9750  010216                     l9040:
  9751                           
  9752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9753                           ;stkvar	_w @ sp[(-56)+38]
  9754  010216  50E1               	movf	fsr1l,w,c
  9755  010218  0FEE               	addlw	-18
  9756  01021A  6ED9               	movwf	fsr2l,c
  9757  01021C  50E2               	movf	fsr1h,w,c
  9758  01021E  6EDA               	movwf	fsr2h,c
  9759  010220  0EFF               	movlw	255
  9760  010222  22DA               	addwfc	fsr2h,f,c
  9761  010224  0EFD               	movlw	253
  9762  010226  26DE               	addwf	postinc2,f,c
  9763  010228  0EFF               	movlw	255
  9764  01022A  22DD               	addwfc	postdec2,f,c
  9765  01022C                     l9042:
  9766                           
  9767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9768                           ;stkvar	_w @ sp[(-56)+38]
  9769  01022C  0EEE               	movlw	-18
  9770  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9771  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9772  01023A  0EA4               	movlw	low _dbuf
  9773  01023C  6EE6               	movwf	postinc1,c
  9774  01023E  0E01               	movlw	high _dbuf
  9775  010240  6EE6               	movwf	postinc1,c
  9776                           
  9777                           ;stkvar	_fp @ sp[(-60)+-2]
  9778  010242  0EC2               	movlw	-62
  9779  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9780  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9781  010250  ECF2  F0B2         	call	_pad	;wreg free
  9782  010254  EF1D  F089         	goto	l1786
  9783  010258                     l9046:
  9784                           
  9785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9786                           ;stkvar	_g @ sp[(-56)+16]
  9787  010258  0ED8               	movlw	-40
  9788  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9789  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9790  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9791  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9792  010272  EC61  F0AE         	call	___fpclassifyf	;wreg free
  9793  010276  5035               	movf	btemp^0,w,c
  9794  010278  1036               	iorwf	(btemp+1)^0,w,c
  9795  01027A  A4D8               	btfss	status,2,c
  9796  01027C  D056               	goto	l9064
  9797  01027E  0EBF               	movlw	191
  9798  010280  6E3F               	movwf	(btemp+10)^0,c
  9799  010282  0EFF               	movlw	255
  9800  010284  6E40               	movwf	(btemp+11)^0,c
  9801                           
  9802                           ;stkvar	_c @ sp[(-56)+-7]
  9803  010286  0EC1               	movlw	-63
  9804  010288  50E3               	movf	plusw1,w,c
  9805  01028A  6E3D               	movwf	(btemp+8)^0,c
  9806  01028C  6A3E               	clrf	(btemp+9)^0,c
  9807  01028E  503F               	movf	(btemp+10)^0,w,c
  9808  010290  263D               	addwf	(btemp+8)^0,f,c
  9809  010292  5040               	movf	(btemp+11)^0,w,c
  9810  010294  223E               	addwfc	(btemp+9)^0,f,c
  9811  010296  503E               	movf	(btemp+9)^0,w,c
  9812  010298  E106               	bnz	u8670
  9813  01029A  0E1A               	movlw	26
  9814  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9815  01029E  B0D8               	btfsc	status,0,c
  9816  0102A0  D002               	goto	u8670
  9817  0102A2  0E01               	movlw	1
  9818  0102A4  D001               	goto	u8680
  9819  0102A6                     u8670:
  9820  0102A6  0E00               	movlw	0
  9821  0102A8                     u8680:
  9822  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9823  0102AA  6A40               	clrf	(btemp+11)^0,c
  9824                           
  9825                           ;stkvar	_efgtoa$4110 @ sp[(-56)+6]
  9826  0102AC  0ECE               	movlw	-50
  9827  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9828  0102B4  0ECF               	movlw	-49
  9829  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9830                           
  9831                           ;stkvar	_efgtoa$4110 @ sp[(-56)+6]
  9832  0102BC  0ECE               	movlw	-50
  9833  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9834  0102C4  0ECF               	movlw	-49
  9835  0102C6  50E3               	movf	plusw1,w,c
  9836  0102C8  1035               	iorwf	btemp^0,w,c
  9837  0102CA  B4D8               	btfsc	status,2,c
  9838  0102CC  D017               	goto	l9056
  9839                           
  9840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9841  0102CE  0EE6               	movlw	low STR_36
  9842  0102D0  6EE6               	movwf	postinc1,c
  9843  0102D2  0EFF               	movlw	high STR_36
  9844  0102D4  6EE6               	movwf	postinc1,c
  9845                           
  9846                           ;stkvar	_n @ sp[(-58)+32]
  9847  0102D6  0EA4               	movlw	low _dbuf
  9848  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9849  0102DA  0E01               	movlw	high _dbuf
  9850  0102DC  6E40               	movwf	(btemp+11)^0,c
  9851  0102DE  0EE6               	movlw	-26
  9852  0102E0  50E3               	movf	plusw1,w,c
  9853  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9854  0102E4  0EE7               	movlw	-25
  9855  0102E6  50E3               	movf	plusw1,w,c
  9856  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9857  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9858  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9859  0102F6  ECFD  F0B4         	call	_strcpy	;wreg free
  9860                           
  9861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9862  0102FA  D78D               	goto	l9040
  9863  0102FC                     l9056:
  9864                           
  9865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9866  0102FC  0EEE               	movlw	low STR_37
  9867  0102FE  6EE6               	movwf	postinc1,c
  9868  010300  0EFF               	movlw	high STR_37
  9869  010302  6EE6               	movwf	postinc1,c
  9870                           
  9871                           ;stkvar	_n @ sp[(-58)+32]
  9872  010304  0EA4               	movlw	low _dbuf
  9873  010306  6E3F               	movwf	(btemp+10)^0,c
  9874  010308  0E01               	movlw	high _dbuf
  9875  01030A  6E40               	movwf	(btemp+11)^0,c
  9876  01030C  0EE6               	movlw	-26
  9877  01030E  50E3               	movf	plusw1,w,c
  9878  010310  263F               	addwf	(btemp+10)^0,f,c
  9879  010312  0EE7               	movlw	-25
  9880  010314  50E3               	movf	plusw1,w,c
  9881  010316  2240               	addwfc	(btemp+11)^0,f,c
  9882  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9883  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9884  010324  ECFD  F0B4         	call	_strcpy	;wreg free
  9885  010328  D776               	goto	l9040
  9886  01032A                     l9064:
  9887                           
  9888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9889  01032A  0E00               	movlw	0
  9890  01032C  6E3D               	movwf	(btemp+8)^0,c
  9891  01032E  0E00               	movlw	0
  9892  010330  6E3E               	movwf	(btemp+9)^0,c
  9893  010332  0E80               	movlw	128
  9894  010334  6E3F               	movwf	(btemp+10)^0,c
  9895  010336  0E3F               	movlw	63
  9896  010338  6E40               	movwf	(btemp+11)^0,c
  9897                           
  9898                           ;stkvar	_u @ sp[(-56)+12]
  9899  01033A  0ED4               	movlw	-44
  9900  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9901  010342  0ED5               	movlw	-43
  9902  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9903  01034A  0ED6               	movlw	-42
  9904  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9905  010352  0ED7               	movlw	-41
  9906  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9907                           
  9908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9909                           ;stkvar	_e @ sp[(-56)+34]
  9910  01035A  0EEA               	movlw	-22
  9911  01035C  6AE3               	clrf	plusw1,c
  9912  01035E  0EEB               	movlw	-21
  9913  010360  6AE3               	clrf	plusw1,c
  9914                           
  9915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9916  010362  0E00               	movlw	0
  9917  010364  6EE6               	movwf	postinc1,c
  9918  010366  0E00               	movlw	0
  9919  010368  6EE6               	movwf	postinc1,c
  9920  01036A  0E00               	movlw	0
  9921  01036C  6EE6               	movwf	postinc1,c
  9922  01036E  0E00               	movlw	0
  9923  010370  6EE6               	movwf	postinc1,c
  9924                           
  9925                           ;stkvar	_g @ sp[(-60)+16]
  9926  010372  0ED4               	movlw	-44
  9927  010374  006F FF8F FFE6     	movff	plusw1,postinc1
  9928  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  9929  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  9930  010386  006F FF8F FFE6     	movff	plusw1,postinc1
  9931  01038C  ECCA  F0B5         	call	___fleq	;wreg free
  9932  010390  A035               	btfss	btemp& (0+255),0,c
  9933  010392  D039               	goto	l9076
  9934  010394  D0BC               	goto	u8720
  9935  010396                     l9072:
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  9938  010396  0E00               	movlw	0
  9939  010398  6EE6               	movwf	postinc1,c
  9940  01039A  0E00               	movlw	0
  9941  01039C  6EE6               	movwf	postinc1,c
  9942  01039E  0E20               	movlw	32
  9943  0103A0  6EE6               	movwf	postinc1,c
  9944  0103A2  0E41               	movlw	65
  9945  0103A4  6EE6               	movwf	postinc1,c
  9946                           
  9947                           ;stkvar	_u @ sp[(-60)+12]
  9948  0103A6  0ED0               	movlw	-48
  9949  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9950  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9951  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9952  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9953  0103C0  ECC1  F08E         	call	___flmul	;wreg free
  9954                           
  9955                           ;stkvar	_u @ sp[(-56)+12]
  9956  0103C4  0ED4               	movlw	-44
  9957  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9958  0103CC  0ED5               	movlw	-43
  9959  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9960  0103D4  0ED6               	movlw	-42
  9961  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9962  0103DC  0ED7               	movlw	-41
  9963  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9964                           
  9965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  9966                           ;stkvar	_e @ sp[(-56)+34]
  9967  0103E4  0EEA               	movlw	-22
  9968  0103E6  50E3               	movf	plusw1,w,c
  9969  0103E8  0F01               	addlw	1
  9970  0103EA  6E35               	movwf	btemp^0,c
  9971  0103EC  0EEA               	movlw	-22
  9972  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  9973  0103F4  6A35               	clrf	btemp^0,c
  9974  0103F6  0EEB               	movlw	-21
  9975  0103F8  50E3               	movf	plusw1,w,c
  9976  0103FA  2035               	addwfc	btemp^0,w,c
  9977  0103FC  6E35               	movwf	btemp^0,c
  9978  0103FE  0EEB               	movlw	-21
  9979  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
  9980  010406                     l9076:
  9981                           
  9982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  9983  010406  0E00               	movlw	0
  9984  010408  6EE6               	movwf	postinc1,c
  9985  01040A  0E00               	movlw	0
  9986  01040C  6EE6               	movwf	postinc1,c
  9987  01040E  0E20               	movlw	32
  9988  010410  6EE6               	movwf	postinc1,c
  9989  010412  0E41               	movlw	65
  9990  010414  6EE6               	movwf	postinc1,c
  9991                           
  9992                           ;stkvar	_u @ sp[(-60)+12]
  9993  010416  0ED0               	movlw	-48
  9994  010418  006F FF8F FFE6     	movff	plusw1,postinc1
  9995  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
  9996  010424  006F FF8F FFE6     	movff	plusw1,postinc1
  9997  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
  9998  010430  ECC1  F08E         	call	___flmul	;wreg free
  9999  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 10000  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10001  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10002  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10003                           
 10004                           ;stkvar	_g @ sp[(-60)+16]
 10005  01044C  0ED4               	movlw	-44
 10006  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10007  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10008  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10009  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10010  010466  ECE5  F0AF         	call	___flge	;wreg free
 10011  01046A  A035               	btfss	btemp& (0+255),0,c
 10012  01046C  D032               	goto	l9082
 10013  01046E  D793               	goto	l9072
 10014  010470                     l9078:
 10015                           
 10016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10017  010470  0E00               	movlw	0
 10018  010472  6EE6               	movwf	postinc1,c
 10019  010474  0E00               	movlw	0
 10020  010476  6EE6               	movwf	postinc1,c
 10021  010478  0E20               	movlw	32
 10022  01047A  6EE6               	movwf	postinc1,c
 10023  01047C  0E41               	movlw	65
 10024  01047E  6EE6               	movwf	postinc1,c
 10025                           
 10026                           ;stkvar	_u @ sp[(-60)+12]
 10027  010480  0ED0               	movlw	-48
 10028  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10029  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10030  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10031  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10032  01049A  ECD7  F099         	call	___fldiv	;wreg free
 10033                           
 10034                           ;stkvar	_u @ sp[(-56)+12]
 10035  01049E  0ED4               	movlw	-44
 10036  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10037  0104A6  0ED5               	movlw	-43
 10038  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10039  0104AE  0ED6               	movlw	-42
 10040  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10041  0104B6  0ED7               	movlw	-41
 10042  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10043                           
 10044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10045                           ;stkvar	_e @ sp[(-56)+34]
 10046  0104BE  50E1               	movf	fsr1l,w,c
 10047  0104C0  0FEA               	addlw	-22
 10048  0104C2  6ED9               	movwf	fsr2l,c
 10049  0104C4  50E2               	movf	fsr1h,w,c
 10050  0104C6  6EDA               	movwf	fsr2h,c
 10051  0104C8  0EFF               	movlw	255
 10052  0104CA  22DA               	addwfc	fsr2h,f,c
 10053  0104CC  06DE               	decf	postinc2,f,c
 10054  0104CE  0E00               	movlw	0
 10055  0104D0  5ADD               	subwfb	postdec2,f,c
 10056  0104D2                     l9082:
 10057                           
 10058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10059                           ;stkvar	_u @ sp[(-56)+12]
 10060  0104D2  0ED4               	movlw	-44
 10061  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10062  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10063  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10064  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10065                           
 10066                           ;stkvar	_g @ sp[(-60)+16]
 10067  0104EC  0ED4               	movlw	-44
 10068  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10069  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10070  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10071  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10072  010506  ECE5  F0AF         	call	___flge	;wreg free
 10073  01050A  A035               	btfss	btemp& (0+255),0,c
 10074  01050C  D7B1               	goto	l9078
 10075  01050E                     u8720:
 10076                           
 10077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10078                           ;stkvar	_c @ sp[(-56)+-7]
 10079  01050E  0EC1               	movlw	-63
 10080  010510  50E3               	movf	plusw1,w,c
 10081  010512  6EE6               	movwf	postinc1,c
 10082  010514  0E00               	movlw	0
 10083  010516  6EE6               	movwf	postinc1,c
 10084  010518  EC86  F0B9         	call	_tolower	;wreg free
 10085                           
 10086                           ;stkvar	_mode @ sp[(-56)+54]
 10087  01051C  0EFE               	movlw	-2
 10088  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10089                           
 10090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10091                           ;stkvar	_mode @ sp[(-56)+54]
 10092                           ;stkvar	_nmode @ sp[(-56)+55]
 10093  010524  0EFE               	movlw	-2
 10094  010526  006F FF8C  F035    	movff	plusw1,btemp
 10095  01052C  0EFF               	movlw	-1
 10096  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10097                           
 10098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10099                           ;stkvar	_mode @ sp[(-56)+54]
 10100  010534  0EFE               	movlw	-2
 10101  010536  006F FF8C  F035    	movff	plusw1,btemp
 10102  01053C  0E67               	movlw	103
 10103  01053E  1835               	xorwf	btemp^0,w,c
 10104  010540  A4D8               	btfss	status,2,c
 10105  010542  D025               	goto	l9100
 10106                           
 10107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10108  010544  5020               	movf	_prec^0,w,c
 10109  010546  1021               	iorwf	(_prec+1)^0,w,c
 10110  010548  A4D8               	btfss	status,2,c
 10111  01054A  D004               	goto	l9094
 10112                           
 10113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10114  01054C  0E00               	movlw	0
 10115  01054E  6E21               	movwf	(_prec+1)^0,c
 10116  010550  0E01               	movlw	1
 10117  010552  6E20               	movwf	_prec^0,c
 10118  010554                     l9094:
 10119                           
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10121  010554  BE21               	btfsc	(_prec+1)^0,7,c
 10122  010556  D005               	goto	u8750
 10123  010558  5021               	movf	(_prec+1)^0,w,c
 10124  01055A  E110               	bnz	l9098
 10125  01055C  0420               	decf	_prec^0,w,c
 10126  01055E  B0D8               	btfsc	status,0,c
 10127  010560  D00D               	goto	l9098
 10128  010562                     u8750:
 10129  010562  0E06               	movlw	6
 10130  010564  6E3F               	movwf	(btemp+10)^0,c
 10131  010566  0E00               	movlw	0
 10132  010568  6E40               	movwf	(btemp+11)^0,c
 10133                           
 10134                           ;stkvar	_p @ sp[(-56)+40]
 10135  01056A  0EF0               	movlw	-16
 10136  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10137  010572  0EF1               	movlw	-15
 10138  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 10139  01057A  D00C               	goto	l9106
 10140  01057C                     l9098:
 10141                           
 10142                           ;stkvar	_p @ sp[(-56)+40]
 10143  01057C  0EF0               	movlw	-16
 10144  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 10145  010584  0EF1               	movlw	-15
 10146  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 10147  01058C  D003               	goto	l9106
 10148  01058E                     l9100:
 10149                           
 10150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10151  01058E  AE21               	btfss	(_prec+1)^0,7,c
 10152  010590  D7F5               	goto	l9098
 10153  010592  D7E7               	goto	u8750
 10154  010594                     l9106:
 10155                           
 10156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10157                           ;stkvar	_mode @ sp[(-56)+54]
 10158  010594  0EFE               	movlw	-2
 10159  010596  006F FF8C  F035    	movff	plusw1,btemp
 10160  01059C  0E67               	movlw	103
 10161  01059E  1835               	xorwf	btemp^0,w,c
 10162  0105A0  A4D8               	btfss	status,2,c
 10163  0105A2  D02F               	goto	l9116
 10164                           
 10165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10166                           ;stkvar	_e @ sp[(-56)+34]
 10167  0105A4  0EEB               	movlw	-21
 10168  0105A6  AEE3               	btfss	plusw1,7,c
 10169  0105A8  D00E               	goto	u8780
 10170  0105AA  0EEA               	movlw	-22
 10171  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 10172  0105B2  0EFC               	movlw	252
 10173  0105B4  5E35               	subwf	btemp^0,f,c
 10174  0105B6  0EEB               	movlw	-21
 10175  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 10176  0105BE  0EFF               	movlw	255
 10177  0105C0  5A35               	subwfb	btemp^0,f,c
 10178  0105C2  A0D8               	btfss	status,0,c
 10179  0105C4  D018               	goto	l9114
 10180  0105C6                     u8780:
 10181                           
 10182                           ;stkvar	_e @ sp[(-56)+34]
 10183                           ;stkvar	_p @ sp[(-56)+40]
 10184  0105C6  0EF0               	movlw	-16
 10185  0105C8  50E3               	movf	plusw1,w,c
 10186  0105CA  0FFF               	addlw	255
 10187  0105CC  6E3F               	movwf	(btemp+10)^0,c
 10188  0105CE  0EF1               	movlw	-15
 10189  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 10190  0105D6  0EFF               	movlw	255
 10191  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 10192  0105DA  0EEA               	movlw	-22
 10193  0105DC  50E3               	movf	plusw1,w,c
 10194  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 10195  0105E0  5040               	movf	(btemp+11)^0,w,c
 10196  0105E2  0A80               	xorlw	128
 10197  0105E4  6E35               	movwf	btemp^0,c
 10198  0105E6  0EEB               	movlw	-21
 10199  0105E8  50E3               	movf	plusw1,w,c
 10200  0105EA  0A80               	xorlw	128
 10201  0105EC  5835               	subwfb	btemp^0,w,c
 10202  0105EE  A0D8               	btfss	status,0,c
 10203  0105F0  D002               	goto	l9114
 10204                           
 10205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10206  0105F2  0E66               	movlw	102
 10207  0105F4  D001               	goto	L8
 10208  0105F6                     l9114:
 10209                           
 10210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10211  0105F6  0E65               	movlw	101
 10212  0105F8                     L8:
 10213  0105F8  6E40               	movwf	(btemp+11)^0,c
 10214                           
 10215                           ;stkvar	_nmode @ sp[(-56)+55]
 10216  0105FA  0EFF               	movlw	-1
 10217  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10218  010602                     l9116:
 10219                           
 10220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10221                           ;stkvar	_p @ sp[(-56)+40]
 10222                           ;stkvar	_m @ sp[(-56)+48]
 10223  010602  0EF0               	movlw	-16
 10224  010604  006F FF8C  F035    	movff	plusw1,btemp
 10225  01060A  0EF8               	movlw	-8
 10226  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10227  010612  0EF1               	movlw	-15
 10228  010614  006F FF8C  F035    	movff	plusw1,btemp
 10229  01061A  0EF9               	movlw	-7
 10230  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10231                           
 10232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10233                           ;stkvar	_mode @ sp[(-56)+54]
 10234  010622  0EFE               	movlw	-2
 10235  010624  006F FF8C  F035    	movff	plusw1,btemp
 10236  01062A  0E67               	movlw	103
 10237  01062C  1835               	xorwf	btemp^0,w,c
 10238  01062E  A4D8               	btfss	status,2,c
 10239  010630  D00B               	goto	u8820
 10240                           
 10241                           ;stkvar	_nmode @ sp[(-56)+55]
 10242  010632  0EFF               	movlw	-1
 10243  010634  006F FF8C  F035    	movff	plusw1,btemp
 10244  01063A  0E66               	movlw	102
 10245  01063C  1835               	xorwf	btemp^0,w,c
 10246  01063E  A4D8               	btfss	status,2,c
 10247  010640  D014               	goto	l1815
 10248                           
 10249                           ;stkvar	_e @ sp[(-56)+34]
 10250  010642  0EEB               	movlw	-21
 10251  010644  AEE3               	btfss	plusw1,7,c
 10252  010646  D011               	goto	l1815
 10253  010648                     u8820:
 10254                           
 10255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10256                           ;stkvar	_m @ sp[(-56)+48]
 10257  010648  0EF8               	movlw	-8
 10258  01064A  50E3               	movf	plusw1,w,c
 10259  01064C  0F01               	addlw	1
 10260  01064E  6E35               	movwf	btemp^0,c
 10261  010650  0EF8               	movlw	-8
 10262  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10263  010658  6A35               	clrf	btemp^0,c
 10264  01065A  0EF9               	movlw	-7
 10265  01065C  50E3               	movf	plusw1,w,c
 10266  01065E  2035               	addwfc	btemp^0,w,c
 10267  010660  6E35               	movwf	btemp^0,c
 10268  010662  0EF9               	movlw	-7
 10269  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10270  01066A                     l1815:
 10271                           
 10272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10273                           ;stkvar	_nmode @ sp[(-56)+55]
 10274  01066A  0EFF               	movlw	-1
 10275  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10276  010672  0E66               	movlw	102
 10277  010674  1835               	xorwf	btemp^0,w,c
 10278  010676  A4D8               	btfss	status,2,c
 10279  010678  D03B               	goto	l9136
 10280                           
 10281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10282                           ;stkvar	_e @ sp[(-56)+34]
 10283  01067A  0EEB               	movlw	-21
 10284  01067C  AEE3               	btfss	plusw1,7,c
 10285  01067E  D01C               	goto	l9132
 10286                           
 10287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10288  010680  0E00               	movlw	0
 10289  010682  6E3D               	movwf	(btemp+8)^0,c
 10290  010684  0E00               	movlw	0
 10291  010686  6E3E               	movwf	(btemp+9)^0,c
 10292  010688  0E80               	movlw	128
 10293  01068A  6E3F               	movwf	(btemp+10)^0,c
 10294  01068C  0E3F               	movlw	63
 10295  01068E  6E40               	movwf	(btemp+11)^0,c
 10296                           
 10297                           ;stkvar	_u @ sp[(-56)+12]
 10298  010690  0ED4               	movlw	-44
 10299  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10300  010698  0ED5               	movlw	-43
 10301  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10302  0106A0  0ED6               	movlw	-42
 10303  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10304  0106A8  0ED7               	movlw	-41
 10305  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10306                           
 10307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10308                           ;stkvar	_e @ sp[(-56)+34]
 10309  0106B0  0EEA               	movlw	-22
 10310  0106B2  6AE3               	clrf	plusw1,c
 10311  0106B4  0EEB               	movlw	-21
 10312  0106B6  6AE3               	clrf	plusw1,c
 10313  0106B8                     l9132:
 10314                           
 10315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10316                           ;stkvar	_mode @ sp[(-56)+54]
 10317  0106B8  0EFE               	movlw	-2
 10318  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10319  0106C0  0E67               	movlw	103
 10320  0106C2  1835               	xorwf	btemp^0,w,c
 10321  0106C4  B4D8               	btfsc	status,2,c
 10322  0106C6  D014               	goto	l9136
 10323                           
 10324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10325                           ;stkvar	_e @ sp[(-56)+34]
 10326                           ;stkvar	_m @ sp[(-56)+48]
 10327  0106C8  0EF8               	movlw	-8
 10328  0106CA  50E3               	movf	plusw1,w,c
 10329  0106CC  6E35               	movwf	btemp^0,c
 10330  0106CE  0EEA               	movlw	-22
 10331  0106D0  50E3               	movf	plusw1,w,c
 10332  0106D2  2635               	addwf	btemp^0,f,c
 10333  0106D4  0EF8               	movlw	-8
 10334  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10335  0106DC  0EF9               	movlw	-7
 10336  0106DE  50E3               	movf	plusw1,w,c
 10337  0106E0  6E35               	movwf	btemp^0,c
 10338  0106E2  0EEB               	movlw	-21
 10339  0106E4  50E3               	movf	plusw1,w,c
 10340  0106E6  2235               	addwfc	btemp^0,f,c
 10341  0106E8  0EF9               	movlw	-7
 10342  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10343  0106F0                     l9136:
 10344                           
 10345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10346                           ;stkvar	_i @ sp[(-56)+36]
 10347  0106F0  0EEC               	movlw	-20
 10348  0106F2  6AE3               	clrf	plusw1,c
 10349  0106F4  0EED               	movlw	-19
 10350  0106F6  6AE3               	clrf	plusw1,c
 10351                           
 10352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10353                           ;stkvar	_g @ sp[(-56)+16]
 10354  0106F8  0ED8               	movlw	-40
 10355  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10356  010700  0ED9               	movlw	-39
 10357  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10358  010708  0EDA               	movlw	-38
 10359  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10360  010710  0EDB               	movlw	-37
 10361  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10362                           
 10363                           ;stkvar	_h @ sp[(-56)+24]
 10364  010718  0EE0               	movlw	-32
 10365  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10366  010720  0EE1               	movlw	-31
 10367  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10368  010728  0EE2               	movlw	-30
 10369  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10370  010730  0EE3               	movlw	-29
 10371  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10372                           
 10373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10374                           ;stkvar	_u @ sp[(-56)+12]
 10375  010738  0ED4               	movlw	-44
 10376  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10377  010740  0ED5               	movlw	-43
 10378  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10379  010748  0ED6               	movlw	-42
 10380  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10381  010750  0ED7               	movlw	-41
 10382  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10383                           
 10384                           ;stkvar	_ou @ sp[(-56)+28]
 10385  010758  0EE4               	movlw	-28
 10386  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10387  010760  0EE5               	movlw	-27
 10388  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10389  010768  0EE6               	movlw	-26
 10390  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10391  010770  0EE7               	movlw	-25
 10392  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10393                           
 10394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10395  010778  D0D6               	goto	l9152
 10396  01077A                     l9142:
 10397                           
 10398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10399                           ;stkvar	_u @ sp[(-56)+12]
 10400  01077A  0ED4               	movlw	-44
 10401  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10402  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10403  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10404  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10405                           
 10406                           ;stkvar	_h @ sp[(-60)+24]
 10407  010794  0EDC               	movlw	-36
 10408  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10409  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10410  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10411  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10412  0107AE  ECD7  F099         	call	___fldiv	;wreg free
 10413  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10414  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10415  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10416  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10417  0107CA  ECB1  F0A0         	call	_floorf	;wreg free
 10418                           
 10419                           ;stkvar	_l @ sp[(-56)+20]
 10420  0107CE  0EDC               	movlw	-36
 10421  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10422  0107D6  0EDD               	movlw	-35
 10423  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10424  0107DE  0EDE               	movlw	-34
 10425  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10426  0107E6  0EDF               	movlw	-33
 10427  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10428                           
 10429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10430                           ;stkvar	_l @ sp[(-56)+20]
 10431  0107EE  0EDC               	movlw	-36
 10432  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10433  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10434  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10435  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10436  010808  EC2C  F0AF         	call	___fltol	;wreg free
 10437  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10438  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10439                           
 10440                           ;stkvar	_d @ sp[(-56)+44]
 10441  010818  0EF4               	movlw	-12
 10442  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10443  010820  0EF5               	movlw	-11
 10444  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10445                           
 10446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10447                           ;stkvar	_u @ sp[(-56)+12]
 10448  010828  0ED4               	movlw	-44
 10449  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10450  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10451  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10452  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10453                           
 10454                           ;stkvar	_l @ sp[(-60)+20]
 10455  010842  0ED8               	movlw	-40
 10456  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10457  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10458  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10459  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10460  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10461  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10462  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10463  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10464  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10465                           
 10466                           ;stkvar	_h @ sp[(-60)+24]
 10467  010878  0EDC               	movlw	-36
 10468  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10469  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10470  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10471  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10472  010892  EC5C  F0BC         	call	___flsub	;wreg free
 10473                           
 10474                           ;stkvar	_h @ sp[(-56)+24]
 10475  010896  0EE0               	movlw	-32
 10476  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10477  01089E  0EE1               	movlw	-31
 10478  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10479  0108A6  0EE2               	movlw	-30
 10480  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10481  0108AE  0EE3               	movlw	-29
 10482  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10483                           
 10484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10485  0108B6  0E00               	movlw	0
 10486  0108B8  6EE6               	movwf	postinc1,c
 10487  0108BA  0E00               	movlw	0
 10488  0108BC  6EE6               	movwf	postinc1,c
 10489  0108BE  0E20               	movlw	32
 10490  0108C0  6EE6               	movwf	postinc1,c
 10491  0108C2  0E41               	movlw	65
 10492  0108C4  6EE6               	movwf	postinc1,c
 10493                           
 10494                           ;stkvar	_u @ sp[(-60)+12]
 10495  0108C6  0ED0               	movlw	-48
 10496  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10497  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10498  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10499  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10500  0108E0  ECD7  F099         	call	___fldiv	;wreg free
 10501                           
 10502                           ;stkvar	_u @ sp[(-56)+12]
 10503  0108E4  0ED4               	movlw	-44
 10504  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10505  0108EC  0ED5               	movlw	-43
 10506  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10507  0108F4  0ED6               	movlw	-42
 10508  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10509  0108FC  0ED7               	movlw	-41
 10510  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10511                           
 10512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10513                           ;stkvar	_i @ sp[(-56)+36]
 10514  010904  0EEC               	movlw	-20
 10515  010906  50E3               	movf	plusw1,w,c
 10516  010908  0F01               	addlw	1
 10517  01090A  6E35               	movwf	btemp^0,c
 10518  01090C  0EEC               	movlw	-20
 10519  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10520  010914  6A35               	clrf	btemp^0,c
 10521  010916  0EED               	movlw	-19
 10522  010918  50E3               	movf	plusw1,w,c
 10523  01091A  2035               	addwfc	btemp^0,w,c
 10524  01091C  6E35               	movwf	btemp^0,c
 10525  01091E  0EED               	movlw	-19
 10526  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10527  010926                     l9152:
 10528                           
 10529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10530                           ;stkvar	_m @ sp[(-56)+48]
 10531                           ;stkvar	_i @ sp[(-56)+36]
 10532  010926  50E1               	movf	fsr1l,w,c
 10533  010928  0FEC               	addlw	-20
 10534  01092A  6ED9               	movwf	fsr2l,c
 10535  01092C  50E2               	movf	fsr1h,w,c
 10536  01092E  6EDA               	movwf	fsr2h,c
 10537  010930  0EFF               	movlw	255
 10538  010932  22DA               	addwfc	fsr2h,f,c
 10539  010934  0EF8               	movlw	-8
 10540  010936  50E3               	movf	plusw1,w,c
 10541  010938  5CDE               	subwf	postinc2,w,c
 10542  01093A  50DE               	movf	postinc2,w,c
 10543  01093C  0A80               	xorlw	128
 10544  01093E  6E35               	movwf	btemp^0,c
 10545  010940  0EF9               	movlw	-7
 10546  010942  50E3               	movf	plusw1,w,c
 10547  010944  0A80               	xorlw	128
 10548  010946  5835               	subwfb	btemp^0,w,c
 10549  010948  A0D8               	btfss	status,0,c
 10550  01094A  D717               	goto	l9142
 10551                           
 10552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10553  01094C  0E00               	movlw	0
 10554  01094E  6EE6               	movwf	postinc1,c
 10555  010950  0E00               	movlw	0
 10556  010952  6EE6               	movwf	postinc1,c
 10557  010954  0EA0               	movlw	160
 10558  010956  6EE6               	movwf	postinc1,c
 10559  010958  0E40               	movlw	64
 10560  01095A  6EE6               	movwf	postinc1,c
 10561                           
 10562                           ;stkvar	_u @ sp[(-60)+12]
 10563  01095C  0ED0               	movlw	-48
 10564  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10565  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10566  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10567  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10568  010976  ECC1  F08E         	call	___flmul	;wreg free
 10569                           
 10570                           ;stkvar	_l @ sp[(-56)+20]
 10571  01097A  0EDC               	movlw	-36
 10572  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10573  010982  0EDD               	movlw	-35
 10574  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10575  01098A  0EDE               	movlw	-34
 10576  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10577  010992  0EDF               	movlw	-33
 10578  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10579                           
 10580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10581                           ;stkvar	_l @ sp[(-56)+20]
 10582  01099A  0EDC               	movlw	-36
 10583  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10584  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10585  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10586  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10587                           
 10588                           ;stkvar	_h @ sp[(-60)+24]
 10589  0109B4  0EDC               	movlw	-36
 10590  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10591  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10592  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10593  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10594  0109CE  ECE5  F0AF         	call	___flge	;wreg free
 10595  0109D2  A035               	btfss	btemp& (0+255),0,c
 10596  0109D4  D021               	goto	u8890
 10597                           
 10598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10599                           ;stkvar	_l @ sp[(-56)+20]
 10600                           
 10601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10602                           
 10603                           ;stkvar	_l @ sp[(-56)+20]
 10604                           
 10605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10606  0109D6  0EDC               	movlw	-36
 10607  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10608  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10609  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10610  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10611                           
 10612                           ;stkvar	_h @ sp[(-60)+24]
 10613  0109F0  0EDC               	movlw	-36
 10614  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10615  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10616  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10617  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10618  010A0A  ECCA  F0B5         	call	___fleq	;wreg free
 10619  010A0E  A035               	btfss	btemp& (0+255),0,c
 10620  010A10  D01B               	goto	l9166
 10621                           
 10622                           ;stkvar	_d @ sp[(-56)+44]
 10623  010A12  0EF4               	movlw	-12
 10624  010A14  B0E3               	btfsc	plusw1,0,c
 10625  010A16  D018               	goto	l9166
 10626  010A18                     u8890:
 10627                           
 10628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10629  010A18  0E00               	movlw	0
 10630  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10631  010A1C  0E00               	movlw	0
 10632  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10633  010A20  0E00               	movlw	0
 10634  010A22  6E3F               	movwf	(btemp+10)^0,c
 10635  010A24  0E00               	movlw	0
 10636  010A26  6E40               	movwf	(btemp+11)^0,c
 10637                           
 10638                           ;stkvar	_l @ sp[(-56)+20]
 10639  010A28  0EDC               	movlw	-36
 10640  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10641  010A30  0EDD               	movlw	-35
 10642  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10643  010A38  0EDE               	movlw	-34
 10644  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10645  010A40  0EDF               	movlw	-33
 10646  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10647  010A48                     l9166:
 10648                           
 10649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10650                           ;stkvar	_l @ sp[(-56)+20]
 10651  010A48  0EDC               	movlw	-36
 10652  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10653  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10654  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10655  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10656                           
 10657                           ;stkvar	_g @ sp[(-60)+16]
 10658  010A62  0ED4               	movlw	-44
 10659  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10662  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10663  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10664                           
 10665                           ;stkvar	_h @ sp[(-56)+24]
 10666  010A80  0EE0               	movlw	-32
 10667  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10668  010A88  0EE1               	movlw	-31
 10669  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10670  010A90  0EE2               	movlw	-30
 10671  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10672  010A98  0EE3               	movlw	-29
 10673  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10674                           
 10675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10676                           ;stkvar	_ou @ sp[(-56)+28]
 10677  010AA0  0EE4               	movlw	-28
 10678  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10679  010AA8  0EE5               	movlw	-27
 10680  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10681  010AB0  0EE6               	movlw	-26
 10682  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10683  010AB8  0EE7               	movlw	-25
 10684  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10685                           
 10686                           ;stkvar	_u @ sp[(-56)+12]
 10687  010AC0  0ED4               	movlw	-44
 10688  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10689  010AC8  0ED5               	movlw	-43
 10690  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10691  010AD0  0ED6               	movlw	-42
 10692  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10693  010AD8  0ED7               	movlw	-41
 10694  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10695                           
 10696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10697                           ;stkvar	_nmode @ sp[(-56)+55]
 10698  010AE0  0EFF               	movlw	-1
 10699  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10700  010AE8  0E65               	movlw	101
 10701  010AEA  1835               	xorwf	btemp^0,w,c
 10702  010AEC  B4D8               	btfsc	status,2,c
 10703  010AEE  D011               	goto	l9174
 10704                           
 10705                           ;stkvar	_e @ sp[(-56)+34]
 10706                           ;stkvar	_ne @ sp[(-56)+46]
 10707  010AF0  0EEA               	movlw	-22
 10708  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10709  010AF8  0EF6               	movlw	-10
 10710  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10711  010B00  0EEB               	movlw	-21
 10712  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10713  010B08  0EF7               	movlw	-9
 10714  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10715  010B10  D004               	goto	l1830
 10716  010B12                     l9174:
 10717                           
 10718                           ;stkvar	_ne @ sp[(-56)+46]
 10719  010B12  0EF6               	movlw	-10
 10720  010B14  6AE3               	clrf	plusw1,c
 10721  010B16  0EF7               	movlw	-9
 10722  010B18  6AE3               	clrf	plusw1,c
 10723  010B1A                     l1830:
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10726                           ;stkvar	_pp @ sp[(-56)+50]
 10727  010B1A  0EFA               	movlw	-6
 10728  010B1C  6AE3               	clrf	plusw1,c
 10729  010B1E  0EFB               	movlw	-5
 10730  010B20  6AE3               	clrf	plusw1,c
 10731                           
 10732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10733                           ;stkvar	_t @ sp[(-56)+52]
 10734  010B22  0EFC               	movlw	-4
 10735  010B24  6AE3               	clrf	plusw1,c
 10736  010B26  0EFD               	movlw	-3
 10737  010B28  6AE3               	clrf	plusw1,c
 10738                           
 10739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10740                           ;stkvar	_i @ sp[(-56)+36]
 10741  010B2A  0EEC               	movlw	-20
 10742  010B2C  6AE3               	clrf	plusw1,c
 10743  010B2E  0EED               	movlw	-19
 10744  010B30  6AE3               	clrf	plusw1,c
 10745                           
 10746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10747  010B32  D1B7               	goto	l9226
 10748  010B34                     l9176:
 10749                           
 10750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10751                           ;stkvar	_u @ sp[(-56)+12]
 10752  010B34  0ED4               	movlw	-44
 10753  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10754  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10755  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10756  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10757                           
 10758                           ;stkvar	_h @ sp[(-60)+24]
 10759  010B4E  0EDC               	movlw	-36
 10760  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10761  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10762  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10763  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10764  010B68  ECD7  F099         	call	___fldiv	;wreg free
 10765  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10766  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10767  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10768  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10769  010B84  ECB1  F0A0         	call	_floorf	;wreg free
 10770                           
 10771                           ;stkvar	_l @ sp[(-56)+20]
 10772  010B88  0EDC               	movlw	-36
 10773  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10774  010B90  0EDD               	movlw	-35
 10775  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10776  010B98  0EDE               	movlw	-34
 10777  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10778  010BA0  0EDF               	movlw	-33
 10779  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10780                           
 10781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10782                           ;stkvar	_l @ sp[(-56)+20]
 10783  010BA8  0EDC               	movlw	-36
 10784  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10785  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10786  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10787  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10788  010BC2  EC2C  F0AF         	call	___fltol	;wreg free
 10789  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10790  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10791                           
 10792                           ;stkvar	_d @ sp[(-56)+44]
 10793  010BD2  0EF4               	movlw	-12
 10794  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10795  010BDA  0EF5               	movlw	-11
 10796  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10797                           
 10798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10799  010BE2  B822               	btfsc	_flags^0,4,c
 10800  010BE4  D026               	goto	l9190
 10801                           
 10802                           ;stkvar	_d @ sp[(-56)+44]
 10803  010BE6  0EF4               	movlw	-12
 10804  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10805  010BEE  0EF5               	movlw	-11
 10806  010BF0  50E3               	movf	plusw1,w,c
 10807  010BF2  1035               	iorwf	btemp^0,w,c
 10808  010BF4  A4D8               	btfss	status,2,c
 10809  010BF6  D01D               	goto	l9190
 10810                           
 10811                           ;stkvar	_mode @ sp[(-56)+54]
 10812  010BF8  0EFE               	movlw	-2
 10813  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10814  010C00  0E67               	movlw	103
 10815  010C02  1835               	xorwf	btemp^0,w,c
 10816  010C04  A4D8               	btfss	status,2,c
 10817  010C06  D015               	goto	l9190
 10818                           
 10819                           ;stkvar	_ne @ sp[(-56)+46]
 10820  010C08  0EF7               	movlw	-9
 10821  010C0A  AEE3               	btfss	plusw1,7,c
 10822  010C0C  D012               	goto	l9190
 10823                           
 10824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10825                           ;stkvar	_t @ sp[(-56)+52]
 10826  010C0E  0EFC               	movlw	-4
 10827  010C10  50E3               	movf	plusw1,w,c
 10828  010C12  0F01               	addlw	1
 10829  010C14  6E35               	movwf	btemp^0,c
 10830  010C16  0EFC               	movlw	-4
 10831  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10832  010C1E  6A35               	clrf	btemp^0,c
 10833  010C20  0EFD               	movlw	-3
 10834  010C22  50E3               	movf	plusw1,w,c
 10835  010C24  2035               	addwfc	btemp^0,w,c
 10836  010C26  6E35               	movwf	btemp^0,c
 10837  010C28  0EFD               	movlw	-3
 10838  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10839                           
 10840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10841  010C30  D0AF               	goto	l9218
 10842  010C32                     l9190:
 10843                           
 10844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10845                           ;stkvar	_pp @ sp[(-56)+50]
 10846  010C32  0EFA               	movlw	-6
 10847  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10848  010C3A  0EFB               	movlw	-5
 10849  010C3C  50E3               	movf	plusw1,w,c
 10850  010C3E  1035               	iorwf	btemp^0,w,c
 10851  010C40  A4D8               	btfss	status,2,c
 10852  010C42  D070               	goto	l9210
 10853                           
 10854                           ;stkvar	_ne @ sp[(-56)+46]
 10855  010C44  0EF7               	movlw	-9
 10856  010C46  AEE3               	btfss	plusw1,7,c
 10857  010C48  D06D               	goto	l9210
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10860                           ;stkvar	_n @ sp[(-56)+32]
 10861  010C4A  0EE8               	movlw	-24
 10862  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10863  010C52  0EE9               	movlw	-23
 10864  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10865  010C5A  0EA4               	movlw	low _dbuf
 10866  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10867  010C5E  6ED9               	movwf	fsr2l,c
 10868  010C60  0E01               	movlw	high _dbuf
 10869  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10870  010C64  6EDA               	movwf	fsr2h,c
 10871  010C66  0E2E               	movlw	46
 10872  010C68  6EDF               	movwf	indf2,c
 10873                           
 10874                           ;stkvar	_n @ sp[(-56)+32]
 10875  010C6A  0EE8               	movlw	-24
 10876  010C6C  50E3               	movf	plusw1,w,c
 10877  010C6E  0F01               	addlw	1
 10878  010C70  6E35               	movwf	btemp^0,c
 10879  010C72  0EE8               	movlw	-24
 10880  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10881  010C7A  6A35               	clrf	btemp^0,c
 10882  010C7C  0EE9               	movlw	-23
 10883  010C7E  50E3               	movf	plusw1,w,c
 10884  010C80  2035               	addwfc	btemp^0,w,c
 10885  010C82  6E35               	movwf	btemp^0,c
 10886  010C84  0EE9               	movlw	-23
 10887  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10888                           
 10889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10890                           ;stkvar	_w @ sp[(-56)+38]
 10891  010C8C  50E1               	movf	fsr1l,w,c
 10892  010C8E  0FEE               	addlw	-18
 10893  010C90  6ED9               	movwf	fsr2l,c
 10894  010C92  50E2               	movf	fsr1h,w,c
 10895  010C94  6EDA               	movwf	fsr2h,c
 10896  010C96  0EFF               	movlw	255
 10897  010C98  22DA               	addwfc	fsr2h,f,c
 10898  010C9A  06DE               	decf	postinc2,f,c
 10899  010C9C  0E00               	movlw	0
 10900  010C9E  5ADD               	subwfb	postdec2,f,c
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10903  010CA0  0E01               	movlw	1
 10904  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10905  010CA4  0E00               	movlw	0
 10906  010CA6  6E40               	movwf	(btemp+11)^0,c
 10907                           
 10908                           ;stkvar	_pp @ sp[(-56)+50]
 10909  010CA8  0EFA               	movlw	-6
 10910  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10911  010CB0  0EFB               	movlw	-5
 10912  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10913  010CB8  D035               	goto	l9210
 10914  010CBA                     l9202:
 10915                           
 10916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10917                           ;stkvar	_n @ sp[(-56)+32]
 10918  010CBA  0EE8               	movlw	-24
 10919  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10920  010CC2  0EE9               	movlw	-23
 10921  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 10922  010CCA  0EA4               	movlw	low _dbuf
 10923  010CCC  243F               	addwf	(btemp+10)^0,w,c
 10924  010CCE  6ED9               	movwf	fsr2l,c
 10925  010CD0  0E01               	movlw	high _dbuf
 10926  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 10927  010CD4  6EDA               	movwf	fsr2h,c
 10928  010CD6  0E30               	movlw	48
 10929  010CD8  6EDF               	movwf	indf2,c
 10930                           
 10931                           ;stkvar	_n @ sp[(-56)+32]
 10932  010CDA  0EE8               	movlw	-24
 10933  010CDC  50E3               	movf	plusw1,w,c
 10934  010CDE  0F01               	addlw	1
 10935  010CE0  6E35               	movwf	btemp^0,c
 10936  010CE2  0EE8               	movlw	-24
 10937  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 10938  010CEA  6A35               	clrf	btemp^0,c
 10939  010CEC  0EE9               	movlw	-23
 10940  010CEE  50E3               	movf	plusw1,w,c
 10941  010CF0  2035               	addwfc	btemp^0,w,c
 10942  010CF2  6E35               	movwf	btemp^0,c
 10943  010CF4  0EE9               	movlw	-23
 10944  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10945                           
 10946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 10947                           ;stkvar	_w @ sp[(-56)+38]
 10948  010CFC  50E1               	movf	fsr1l,w,c
 10949  010CFE  0FEE               	addlw	-18
 10950  010D00  6ED9               	movwf	fsr2l,c
 10951  010D02  50E2               	movf	fsr1h,w,c
 10952  010D04  6EDA               	movwf	fsr2h,c
 10953  010D06  0EFF               	movlw	255
 10954  010D08  22DA               	addwfc	fsr2h,f,c
 10955  010D0A  06DE               	decf	postinc2,f,c
 10956  010D0C  0E00               	movlw	0
 10957  010D0E  5ADD               	subwfb	postdec2,f,c
 10958                           
 10959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 10960                           ;stkvar	_t @ sp[(-56)+52]
 10961  010D10  50E1               	movf	fsr1l,w,c
 10962  010D12  0FFC               	addlw	-4
 10963  010D14  6ED9               	movwf	fsr2l,c
 10964  010D16  50E2               	movf	fsr1h,w,c
 10965  010D18  6EDA               	movwf	fsr2h,c
 10966  010D1A  0EFF               	movlw	255
 10967  010D1C  22DA               	addwfc	fsr2h,f,c
 10968  010D1E  06DE               	decf	postinc2,f,c
 10969  010D20  0E00               	movlw	0
 10970  010D22  5ADD               	subwfb	postdec2,f,c
 10971  010D24                     l9210:
 10972                           
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 10974                           ;stkvar	_t @ sp[(-56)+52]
 10975  010D24  0EFC               	movlw	-4
 10976  010D26  006F FF8C  F035    	movff	plusw1,btemp
 10977  010D2C  0EFD               	movlw	-3
 10978  010D2E  50E3               	movf	plusw1,w,c
 10979  010D30  1035               	iorwf	btemp^0,w,c
 10980  010D32  A4D8               	btfss	status,2,c
 10981  010D34  D7C2               	goto	l9202
 10982                           
 10983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 10984                           ;stkvar	_n @ sp[(-56)+32]
 10985  010D36  0EE8               	movlw	-24
 10986  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 10987  010D3E  0EE9               	movlw	-23
 10988  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 10989  010D46  0EA4               	movlw	low _dbuf
 10990  010D48  243F               	addwf	(btemp+10)^0,w,c
 10991  010D4A  6ED9               	movwf	fsr2l,c
 10992  010D4C  0E01               	movlw	high _dbuf
 10993  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 10994  010D50  6EDA               	movwf	fsr2h,c
 10995                           
 10996                           ;stkvar	_d @ sp[(-56)+44]
 10997  010D52  0EF4               	movlw	-12
 10998  010D54  50E3               	movf	plusw1,w,c
 10999  010D56  0F30               	addlw	48
 11000  010D58  6EDF               	movwf	indf2,c
 11001                           
 11002                           ;stkvar	_n @ sp[(-56)+32]
 11003  010D5A  0EE8               	movlw	-24
 11004  010D5C  50E3               	movf	plusw1,w,c
 11005  010D5E  0F01               	addlw	1
 11006  010D60  6E35               	movwf	btemp^0,c
 11007  010D62  0EE8               	movlw	-24
 11008  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 11009  010D6A  6A35               	clrf	btemp^0,c
 11010  010D6C  0EE9               	movlw	-23
 11011  010D6E  50E3               	movf	plusw1,w,c
 11012  010D70  2035               	addwfc	btemp^0,w,c
 11013  010D72  6E35               	movwf	btemp^0,c
 11014  010D74  0EE9               	movlw	-23
 11015  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 11016                           
 11017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11018                           ;stkvar	_w @ sp[(-56)+38]
 11019  010D7C  50E1               	movf	fsr1l,w,c
 11020  010D7E  0FEE               	addlw	-18
 11021  010D80  6ED9               	movwf	fsr2l,c
 11022  010D82  50E2               	movf	fsr1h,w,c
 11023  010D84  6EDA               	movwf	fsr2h,c
 11024  010D86  0EFF               	movlw	255
 11025  010D88  22DA               	addwfc	fsr2h,f,c
 11026  010D8A  06DE               	decf	postinc2,f,c
 11027  010D8C  0E00               	movlw	0
 11028  010D8E  5ADD               	subwfb	postdec2,f,c
 11029  010D90                     l9218:
 11030                           
 11031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11032                           ;stkvar	_u @ sp[(-56)+12]
 11033  010D90  0ED4               	movlw	-44
 11034  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11036  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11038                           
 11039                           ;stkvar	_l @ sp[(-60)+20]
 11040  010DAA  0ED8               	movlw	-40
 11041  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11042  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11043  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11044  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11045  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11046  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 11047  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11048  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11049  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11050                           
 11051                           ;stkvar	_h @ sp[(-60)+24]
 11052  010DE0  0EDC               	movlw	-36
 11053  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11054  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11055  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11056  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11057  010DFA  EC5C  F0BC         	call	___flsub	;wreg free
 11058                           
 11059                           ;stkvar	_h @ sp[(-56)+24]
 11060  010DFE  0EE0               	movlw	-32
 11061  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 11062  010E06  0EE1               	movlw	-31
 11063  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11064  010E0E  0EE2               	movlw	-30
 11065  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11066  010E16  0EE3               	movlw	-29
 11067  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11068                           
 11069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11070  010E1E  0E00               	movlw	0
 11071  010E20  6EE6               	movwf	postinc1,c
 11072  010E22  0E00               	movlw	0
 11073  010E24  6EE6               	movwf	postinc1,c
 11074  010E26  0E20               	movlw	32
 11075  010E28  6EE6               	movwf	postinc1,c
 11076  010E2A  0E41               	movlw	65
 11077  010E2C  6EE6               	movwf	postinc1,c
 11078                           
 11079                           ;stkvar	_u @ sp[(-60)+12]
 11080  010E2E  0ED0               	movlw	-48
 11081  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11082  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11083  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11084  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11085  010E48  ECD7  F099         	call	___fldiv	;wreg free
 11086                           
 11087                           ;stkvar	_u @ sp[(-56)+12]
 11088  010E4C  0ED4               	movlw	-44
 11089  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11090  010E54  0ED5               	movlw	-43
 11091  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11092  010E5C  0ED6               	movlw	-42
 11093  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11094  010E64  0ED7               	movlw	-41
 11095  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11098                           ;stkvar	_ne @ sp[(-56)+46]
 11099  010E6C  50E1               	movf	fsr1l,w,c
 11100  010E6E  0FF6               	addlw	-10
 11101  010E70  6ED9               	movwf	fsr2l,c
 11102  010E72  50E2               	movf	fsr1h,w,c
 11103  010E74  6EDA               	movwf	fsr2h,c
 11104  010E76  0EFF               	movlw	255
 11105  010E78  22DA               	addwfc	fsr2h,f,c
 11106  010E7A  06DE               	decf	postinc2,f,c
 11107  010E7C  0E00               	movlw	0
 11108  010E7E  5ADD               	subwfb	postdec2,f,c
 11109                           
 11110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11111                           ;stkvar	_i @ sp[(-56)+36]
 11112  010E80  0EEC               	movlw	-20
 11113  010E82  50E3               	movf	plusw1,w,c
 11114  010E84  0F01               	addlw	1
 11115  010E86  6E35               	movwf	btemp^0,c
 11116  010E88  0EEC               	movlw	-20
 11117  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11118  010E90  6A35               	clrf	btemp^0,c
 11119  010E92  0EED               	movlw	-19
 11120  010E94  50E3               	movf	plusw1,w,c
 11121  010E96  2035               	addwfc	btemp^0,w,c
 11122  010E98  6E35               	movwf	btemp^0,c
 11123  010E9A  0EED               	movlw	-19
 11124  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11125  010EA2                     l9226:
 11126                           
 11127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11128                           ;stkvar	_m @ sp[(-56)+48]
 11129                           ;stkvar	_i @ sp[(-56)+36]
 11130  010EA2  50E1               	movf	fsr1l,w,c
 11131  010EA4  0FEC               	addlw	-20
 11132  010EA6  6ED9               	movwf	fsr2l,c
 11133  010EA8  50E2               	movf	fsr1h,w,c
 11134  010EAA  6EDA               	movwf	fsr2h,c
 11135  010EAC  0EFF               	movlw	255
 11136  010EAE  22DA               	addwfc	fsr2h,f,c
 11137  010EB0  0EF8               	movlw	-8
 11138  010EB2  50E3               	movf	plusw1,w,c
 11139  010EB4  5CDE               	subwf	postinc2,w,c
 11140  010EB6  50DE               	movf	postinc2,w,c
 11141  010EB8  0A80               	xorlw	128
 11142  010EBA  6E35               	movwf	btemp^0,c
 11143  010EBC  0EF9               	movlw	-7
 11144  010EBE  50E3               	movf	plusw1,w,c
 11145  010EC0  0A80               	xorlw	128
 11146  010EC2  5835               	subwfb	btemp^0,w,c
 11147  010EC4  B0D8               	btfsc	status,0,c
 11148  010EC6  D00E               	goto	u8990
 11149                           
 11150                           ;stkvar	_n @ sp[(-56)+32]
 11151  010EC8  0EE9               	movlw	-23
 11152  010ECA  BEE3               	btfsc	plusw1,7,c
 11153  010ECC  D633               	goto	l9176
 11154  010ECE  0EE9               	movlw	-23
 11155  010ED0  50E3               	movf	plusw1,w,c
 11156  010ED2  E108               	bnz	u8990
 11157  010ED4  0EE8               	movlw	-24
 11158  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 11159  010EDC  0E4B               	movlw	75
 11160  010EDE  5E35               	subwf	btemp^0,f,c
 11161  010EE0  A0D8               	btfss	status,0,c
 11162  010EE2  D628               	goto	l9176
 11163  010EE4                     u8990:
 11164                           
 11165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11166                           ;stkvar	_pp @ sp[(-56)+50]
 11167  010EE4  0EFA               	movlw	-6
 11168  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 11169  010EEC  0EFB               	movlw	-5
 11170  010EEE  50E3               	movf	plusw1,w,c
 11171  010EF0  1035               	iorwf	btemp^0,w,c
 11172  010EF2  B4D8               	btfsc	status,2,c
 11173  010EF4  A822               	btfss	_flags^0,4,c
 11174  010EF6  D021               	goto	l9238
 11175                           
 11176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11177                           ;stkvar	_n @ sp[(-56)+32]
 11178  010EF8  0EE8               	movlw	-24
 11179  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 11180  010F00  0EE9               	movlw	-23
 11181  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 11182  010F08  0EA4               	movlw	low _dbuf
 11183  010F0A  243F               	addwf	(btemp+10)^0,w,c
 11184  010F0C  6ED9               	movwf	fsr2l,c
 11185  010F0E  0E01               	movlw	high _dbuf
 11186  010F10  2040               	addwfc	(btemp+11)^0,w,c
 11187  010F12  6EDA               	movwf	fsr2h,c
 11188  010F14  0E2E               	movlw	46
 11189  010F16  6EDF               	movwf	indf2,c
 11190                           
 11191                           ;stkvar	_n @ sp[(-56)+32]
 11192  010F18  0EE8               	movlw	-24
 11193  010F1A  50E3               	movf	plusw1,w,c
 11194  010F1C  0F01               	addlw	1
 11195  010F1E  6E35               	movwf	btemp^0,c
 11196  010F20  0EE8               	movlw	-24
 11197  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 11198  010F28  6A35               	clrf	btemp^0,c
 11199  010F2A  0EE9               	movlw	-23
 11200  010F2C  50E3               	movf	plusw1,w,c
 11201  010F2E  2035               	addwfc	btemp^0,w,c
 11202  010F30  6E35               	movwf	btemp^0,c
 11203  010F32  0EE9               	movlw	-23
 11204  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 11205  010F3A                     l9238:
 11206                           
 11207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11208                           ;stkvar	_n @ sp[(-56)+32]
 11209  010F3A  0EE8               	movlw	-24
 11210  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 11211  010F42  0EE9               	movlw	-23
 11212  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 11213  010F4A  0EA4               	movlw	low _dbuf
 11214  010F4C  243F               	addwf	(btemp+10)^0,w,c
 11215  010F4E  6ED9               	movwf	fsr2l,c
 11216  010F50  0E01               	movlw	high _dbuf
 11217  010F52  2040               	addwfc	(btemp+11)^0,w,c
 11218  010F54  6EDA               	movwf	fsr2h,c
 11219  010F56  0E00               	movlw	0
 11220  010F58  6EDF               	movwf	indf2,c
 11221                           
 11222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11223                           ;stkvar	_nmode @ sp[(-56)+55]
 11224  010F5A  0EFF               	movlw	-1
 11225  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 11226  010F62  0E65               	movlw	101
 11227  010F64  1835               	xorwf	btemp^0,w,c
 11228  010F66  A4D8               	btfss	status,2,c
 11229  010F68  EF16  F081         	goto	l9042
 11230                           
 11231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11232  010F6C  0E4F               	movlw	79
 11233  010F6E  6E3F               	movwf	(btemp+10)^0,c
 11234  010F70  0E00               	movlw	0
 11235  010F72  6E40               	movwf	(btemp+11)^0,c
 11236                           
 11237                           ;stkvar	_i @ sp[(-56)+36]
 11238  010F74  0EEC               	movlw	-20
 11239  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11240  010F7C  0EED               	movlw	-19
 11241  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11244                           ;stkvar	_i @ sp[(-56)+36]
 11245  010F84  0EEC               	movlw	-20
 11246  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11247  010F8C  0EED               	movlw	-19
 11248  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11249  010F94  0EA4               	movlw	low _dbuf
 11250  010F96  243F               	addwf	(btemp+10)^0,w,c
 11251  010F98  6ED9               	movwf	fsr2l,c
 11252  010F9A  0E01               	movlw	high _dbuf
 11253  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11254  010F9E  6EDA               	movwf	fsr2h,c
 11255  010FA0  0E00               	movlw	0
 11256  010FA2  6EDF               	movwf	indf2,c
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11259                           ;stkvar	_sign @ sp[(-56)+42]
 11260  010FA4  0EF2               	movlw	-14
 11261  010FA6  6AE3               	clrf	plusw1,c
 11262  010FA8  0EF3               	movlw	-13
 11263  010FAA  6AE3               	clrf	plusw1,c
 11264                           
 11265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11266                           ;stkvar	_e @ sp[(-56)+34]
 11267  010FAC  0EEB               	movlw	-21
 11268  010FAE  AEE3               	btfss	plusw1,7,c
 11269  010FB0  D012               	goto	l9252
 11270                           
 11271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11272  010FB2  0E01               	movlw	1
 11273  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11274  010FB6  0E00               	movlw	0
 11275  010FB8  6E40               	movwf	(btemp+11)^0,c
 11276                           
 11277                           ;stkvar	_sign @ sp[(-56)+42]
 11278  010FBA  0EF2               	movlw	-14
 11279  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11280  010FC2  0EF3               	movlw	-13
 11281  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11282                           
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11284                           ;stkvar	_e @ sp[(-56)+34]
 11285                           ;stkvar	_e @ sp[(-56)+34]
 11286  010FCA  0EEA               	movlw	-22
 11287  010FCC  6CE3               	negf	plusw1,c
 11288  010FCE  0EEB               	movlw	-21
 11289  010FD0  1EE3               	comf	plusw1,f,c
 11290  010FD2  B0D8               	btfsc	status,0,c
 11291  010FD4  2AE3               	incf	plusw1,f,c
 11292  010FD6                     l9252:
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11295  010FD6  0E02               	movlw	2
 11296  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11297  010FDA  0E00               	movlw	0
 11298  010FDC  6E40               	movwf	(btemp+11)^0,c
 11299                           
 11300                           ;stkvar	_p @ sp[(-56)+40]
 11301  010FDE  0EF0               	movlw	-16
 11302  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11303  010FE6  0EF1               	movlw	-15
 11304  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11305                           
 11306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11307  010FEE  D051               	goto	l9264
 11308  010FF0                     l9254:
 11309                           
 11310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11311                           ;stkvar	_i @ sp[(-56)+36]
 11312  010FF0  50E1               	movf	fsr1l,w,c
 11313  010FF2  0FEC               	addlw	-20
 11314  010FF4  6ED9               	movwf	fsr2l,c
 11315  010FF6  50E2               	movf	fsr1h,w,c
 11316  010FF8  6EDA               	movwf	fsr2h,c
 11317  010FFA  0EFF               	movlw	255
 11318  010FFC  22DA               	addwfc	fsr2h,f,c
 11319  010FFE  06DE               	decf	postinc2,f,c
 11320  011000  0E00               	movlw	0
 11321  011002  5ADD               	subwfb	postdec2,f,c
 11322                           
 11323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11324                           ;stkvar	_i @ sp[(-56)+36]
 11325  011004  0EEC               	movlw	-20
 11326  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11327  01100C  0EED               	movlw	-19
 11328  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11329  011014  0EA4               	movlw	low _dbuf
 11330  011016  243F               	addwf	(btemp+10)^0,w,c
 11331  011018  6ED9               	movwf	fsr2l,c
 11332  01101A  0E01               	movlw	high _dbuf
 11333  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11334  01101E  6EDA               	movwf	fsr2h,c
 11335  011020  0E0A               	movlw	10
 11336  011022  6EE6               	movwf	postinc1,c
 11337  011024  0E00               	movlw	0
 11338  011026  6EE6               	movwf	postinc1,c
 11339                           
 11340                           ;stkvar	_e @ sp[(-58)+34]
 11341  011028  0EE8               	movlw	-24
 11342  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11343  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11344  011036  EC66  F0B2         	call	___awmod	;wreg free
 11345  01103A  5035               	movf	btemp^0,w,c
 11346  01103C  0F30               	addlw	48
 11347  01103E  6EDF               	movwf	indf2,c
 11348                           
 11349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11350  011040  0E0A               	movlw	10
 11351  011042  6EE6               	movwf	postinc1,c
 11352  011044  0E00               	movlw	0
 11353  011046  6EE6               	movwf	postinc1,c
 11354                           
 11355                           ;stkvar	_e @ sp[(-58)+34]
 11356  011048  0EE8               	movlw	-24
 11357  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  011056  EC96  F0B0         	call	___awdiv	;wreg free
 11360                           
 11361                           ;stkvar	_e @ sp[(-56)+34]
 11362  01105A  0EEA               	movlw	-22
 11363  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11364  011062  0EEB               	movlw	-21
 11365  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11366                           
 11367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11368                           ;stkvar	_p @ sp[(-56)+40]
 11369  01106A  50E1               	movf	fsr1l,w,c
 11370  01106C  0FF0               	addlw	-16
 11371  01106E  6ED9               	movwf	fsr2l,c
 11372  011070  50E2               	movf	fsr1h,w,c
 11373  011072  6EDA               	movwf	fsr2h,c
 11374  011074  0EFF               	movlw	255
 11375  011076  22DA               	addwfc	fsr2h,f,c
 11376  011078  06DE               	decf	postinc2,f,c
 11377  01107A  0E00               	movlw	0
 11378  01107C  5ADD               	subwfb	postdec2,f,c
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11381                           ;stkvar	_w @ sp[(-56)+38]
 11382  01107E  50E1               	movf	fsr1l,w,c
 11383  011080  0FEE               	addlw	-18
 11384  011082  6ED9               	movwf	fsr2l,c
 11385  011084  50E2               	movf	fsr1h,w,c
 11386  011086  6EDA               	movwf	fsr2h,c
 11387  011088  0EFF               	movlw	255
 11388  01108A  22DA               	addwfc	fsr2h,f,c
 11389  01108C  06DE               	decf	postinc2,f,c
 11390  01108E  0E00               	movlw	0
 11391  011090  5ADD               	subwfb	postdec2,f,c
 11392  011092                     l9264:
 11393                           
 11394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11395                           ;stkvar	_e @ sp[(-56)+34]
 11396  011092  0EEA               	movlw	-22
 11397  011094  006F FF8C  F035    	movff	plusw1,btemp
 11398  01109A  0EEB               	movlw	-21
 11399  01109C  50E3               	movf	plusw1,w,c
 11400  01109E  1035               	iorwf	btemp^0,w,c
 11401  0110A0  A4D8               	btfss	status,2,c
 11402  0110A2  D7A6               	goto	l9254
 11403                           
 11404                           ;stkvar	_p @ sp[(-56)+40]
 11405  0110A4  0EF1               	movlw	-15
 11406  0110A6  BEE3               	btfsc	plusw1,7,c
 11407  0110A8  D007               	goto	u9050
 11408  0110AA  0EF1               	movlw	-15
 11409  0110AC  50E3               	movf	plusw1,w,c
 11410  0110AE  E1A0               	bnz	l9254
 11411  0110B0  0EF0               	movlw	-16
 11412  0110B2  04E3               	decf	plusw1,w,c
 11413  0110B4  B0D8               	btfsc	status,0,c
 11414  0110B6  D79C               	goto	l9254
 11415  0110B8                     u9050:
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11418                           ;stkvar	_i @ sp[(-56)+36]
 11419  0110B8  50E1               	movf	fsr1l,w,c
 11420  0110BA  0FEC               	addlw	-20
 11421  0110BC  6ED9               	movwf	fsr2l,c
 11422  0110BE  50E2               	movf	fsr1h,w,c
 11423  0110C0  6EDA               	movwf	fsr2h,c
 11424  0110C2  0EFF               	movlw	255
 11425  0110C4  22DA               	addwfc	fsr2h,f,c
 11426  0110C6  06DE               	decf	postinc2,f,c
 11427  0110C8  0E00               	movlw	0
 11428  0110CA  5ADD               	subwfb	postdec2,f,c
 11429                           
 11430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11431                           ;stkvar	_sign @ sp[(-56)+42]
 11432  0110CC  0EF2               	movlw	-14
 11433  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11434  0110D4  0EF3               	movlw	-13
 11435  0110D6  50E3               	movf	plusw1,w,c
 11436  0110D8  1035               	iorwf	btemp^0,w,c
 11437  0110DA  A4D8               	btfss	status,2,c
 11438  0110DC  D002               	goto	l9274
 11439  0110DE  0E2B               	movlw	43
 11440  0110E0  D001               	goto	L9
 11441  0110E2                     l9274:
 11442  0110E2  0E2D               	movlw	45
 11443  0110E4                     L9:
 11444  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11445  0110E6  0E00               	movlw	0
 11446  0110E8  6E40               	movwf	(btemp+11)^0,c
 11447                           
 11448                           ;stkvar	_efgtoa$4114 @ sp[(-56)+4]
 11449  0110EA  0ECC               	movlw	-52
 11450  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11451  0110F2  0ECD               	movlw	-51
 11452  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11453                           
 11454                           ;stkvar	_efgtoa$4114 @ sp[(-56)+4]
 11455                           ;stkvar	_i @ sp[(-56)+36]
 11456  0110FA  0EEC               	movlw	-20
 11457  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11458  011102  0EED               	movlw	-19
 11459  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11460  01110A  0EA4               	movlw	low _dbuf
 11461  01110C  243F               	addwf	(btemp+10)^0,w,c
 11462  01110E  6ED9               	movwf	fsr2l,c
 11463  011110  0E01               	movlw	high _dbuf
 11464  011112  2040               	addwfc	(btemp+11)^0,w,c
 11465  011114  6EDA               	movwf	fsr2h,c
 11466  011116  0ECC               	movlw	-52
 11467  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11468                           
 11469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11470                           ;stkvar	_w @ sp[(-56)+38]
 11471  01111E  50E1               	movf	fsr1l,w,c
 11472  011120  0FEE               	addlw	-18
 11473  011122  6ED9               	movwf	fsr2l,c
 11474  011124  50E2               	movf	fsr1h,w,c
 11475  011126  6EDA               	movwf	fsr2h,c
 11476  011128  0EFF               	movlw	255
 11477  01112A  22DA               	addwfc	fsr2h,f,c
 11478  01112C  06DE               	decf	postinc2,f,c
 11479  01112E  0E00               	movlw	0
 11480  011130  5ADD               	subwfb	postdec2,f,c
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11483                           ;stkvar	_i @ sp[(-56)+36]
 11484  011132  50E1               	movf	fsr1l,w,c
 11485  011134  0FEC               	addlw	-20
 11486  011136  6ED9               	movwf	fsr2l,c
 11487  011138  50E2               	movf	fsr1h,w,c
 11488  01113A  6EDA               	movwf	fsr2h,c
 11489  01113C  0EFF               	movlw	255
 11490  01113E  22DA               	addwfc	fsr2h,f,c
 11491  011140  06DE               	decf	postinc2,f,c
 11492  011142  0E00               	movlw	0
 11493  011144  5ADD               	subwfb	postdec2,f,c
 11494  011146  0EBF               	movlw	191
 11495  011148  6E3F               	movwf	(btemp+10)^0,c
 11496  01114A  0EFF               	movlw	255
 11497  01114C  6E40               	movwf	(btemp+11)^0,c
 11498                           
 11499                           ;stkvar	_c @ sp[(-56)+-7]
 11500  01114E  0EC1               	movlw	-63
 11501  011150  50E3               	movf	plusw1,w,c
 11502  011152  6E3D               	movwf	(btemp+8)^0,c
 11503  011154  6A3E               	clrf	(btemp+9)^0,c
 11504  011156  503F               	movf	(btemp+10)^0,w,c
 11505  011158  263D               	addwf	(btemp+8)^0,f,c
 11506  01115A  5040               	movf	(btemp+11)^0,w,c
 11507  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11508  01115E  503E               	movf	(btemp+9)^0,w,c
 11509  011160  E106               	bnz	u9070
 11510  011162  0E1A               	movlw	26
 11511  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11512  011166  B0D8               	btfsc	status,0,c
 11513  011168  D002               	goto	u9070
 11514  01116A  0E01               	movlw	1
 11515  01116C  D001               	goto	u9080
 11516  01116E                     u9070:
 11517  01116E  0E00               	movlw	0
 11518  011170                     u9080:
 11519  011170  6E3F               	movwf	(btemp+10)^0,c
 11520  011172  6A40               	clrf	(btemp+11)^0,c
 11521                           
 11522                           ;stkvar	_efgtoa$4116 @ sp[(-56)+0]
 11523  011174  0EC8               	movlw	-56
 11524  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11525  01117C  0EC9               	movlw	-55
 11526  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11527                           
 11528                           ;stkvar	_efgtoa$4116 @ sp[(-56)+0]
 11529  011184  0EC8               	movlw	-56
 11530  011186  006F FF8C  F035    	movff	plusw1,btemp
 11531  01118C  0EC9               	movlw	-55
 11532  01118E  50E3               	movf	plusw1,w,c
 11533  011190  1035               	iorwf	btemp^0,w,c
 11534  011192  A4D8               	btfss	status,2,c
 11535  011194  D002               	goto	l9290
 11536  011196  0E65               	movlw	101
 11537  011198  D001               	goto	L10
 11538  01119A                     l9290:
 11539  01119A  0E45               	movlw	69
 11540  01119C                     L10:
 11541  01119C  6E3F               	movwf	(btemp+10)^0,c
 11542  01119E  0E00               	movlw	0
 11543  0111A0  6E40               	movwf	(btemp+11)^0,c
 11544                           
 11545                           ;stkvar	_efgtoa$4115 @ sp[(-56)+2]
 11546  0111A2  0ECA               	movlw	-54
 11547  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11548  0111AA  0ECB               	movlw	-53
 11549  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11550                           
 11551                           ;stkvar	_efgtoa$4115 @ sp[(-56)+2]
 11552                           ;stkvar	_i @ sp[(-56)+36]
 11553  0111B2  0EEC               	movlw	-20
 11554  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11555  0111BA  0EED               	movlw	-19
 11556  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11557  0111C2  0EA4               	movlw	low _dbuf
 11558  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11559  0111C6  6ED9               	movwf	fsr2l,c
 11560  0111C8  0E01               	movlw	high _dbuf
 11561  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11562  0111CC  6EDA               	movwf	fsr2h,c
 11563  0111CE  0ECA               	movlw	-54
 11564  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11565                           
 11566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11567                           ;stkvar	_w @ sp[(-56)+38]
 11568  0111D6  50E1               	movf	fsr1l,w,c
 11569  0111D8  0FEE               	addlw	-18
 11570  0111DA  6ED9               	movwf	fsr2l,c
 11571  0111DC  50E2               	movf	fsr1h,w,c
 11572  0111DE  6EDA               	movwf	fsr2h,c
 11573  0111E0  0EFF               	movlw	255
 11574  0111E2  22DA               	addwfc	fsr2h,f,c
 11575  0111E4  06DE               	decf	postinc2,f,c
 11576  0111E6  0E00               	movlw	0
 11577  0111E8  5ADD               	subwfb	postdec2,f,c
 11578                           
 11579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11580                           ;stkvar	_i @ sp[(-56)+36]
 11581  0111EA  0EEC               	movlw	-20
 11582  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11583  0111F2  0EED               	movlw	-19
 11584  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11585  0111FA  0EA4               	movlw	low _dbuf
 11586  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11587  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11588  011200  0E01               	movlw	high _dbuf
 11589  011202  2040               	addwfc	(btemp+11)^0,w,c
 11590  011204  6E3E               	movwf	(btemp+9)^0,c
 11591  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11592  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11593                           
 11594                           ;stkvar	_n @ sp[(-58)+32]
 11595  011212  0EA4               	movlw	low _dbuf
 11596  011214  6E3F               	movwf	(btemp+10)^0,c
 11597  011216  0E01               	movlw	high _dbuf
 11598  011218  6E40               	movwf	(btemp+11)^0,c
 11599  01121A  0EE6               	movlw	-26
 11600  01121C  50E3               	movf	plusw1,w,c
 11601  01121E  263F               	addwf	(btemp+10)^0,f,c
 11602  011220  0EE7               	movlw	-25
 11603  011222  50E3               	movf	plusw1,w,c
 11604  011224  2240               	addwfc	(btemp+11)^0,f,c
 11605  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11606  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11607  011232  ECFD  F0B4         	call	_strcpy	;wreg free
 11608  011236  EF16  F081         	goto	l9042
 11609  01123A                     l1786:
 11610                           
 11611                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11612  01123A  0EC1               	movlw	193
 11613  01123C  26E1               	addwf	fsr1l,f,c
 11614  01123E  0EFF               	movlw	255
 11615  011240  22E2               	addwfc	fsr1h,f,c
 11616  011242  0012               	return		;funcret
 11617  011244                     __end_of_efgtoa:
 11618                           	opt callstack 0
 11619                           
 11620 ;; *************** function _tolower *****************
 11621 ;; Defined at:
 11622 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  c               2  [STACK] int 
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  2  [STACK] int 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/4
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    7
 11643 ;; This function calls:
 11644 ;;		_isupper
 11645 ;; This function is called by:
 11646 ;;		_efgtoa
 11647 ;;		_vfpfcnvrt
 11648 ;; This function uses a reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text40
 11652  01730C                     __ptext40:
 11653                           	opt callstack 0
 11654  01730C                     _tolower:
 11655                           	opt callstack 0
 11656                           
 11657                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11658  01730C  52E6               	movf	postinc1,f,c
 11659  01730E  52E6               	movf	postinc1,f,c
 11660                           
 11661                           ;stkvar	_c @ sp[(-2)+-2]
 11662                           
 11663                           ;incstack = 0
 11664  017310  0EFC               	movlw	-4
 11665  017312  50E3               	movf	plusw1,w,c
 11666  017314  0FBF               	addlw	191
 11667  017316  6E3F               	movwf	(btemp+10)^0,c
 11668  017318  0EFD               	movlw	-3
 11669  01731A  006F FF8C  F040    	movff	plusw1,btemp+11
 11670  017320  0EFF               	movlw	255
 11671  017322  2240               	addwfc	(btemp+11)^0,f,c
 11672  017324  5040               	movf	(btemp+11)^0,w,c
 11673  017326  E106               	bnz	u4860
 11674  017328  0E1A               	movlw	26
 11675  01732A  5C3F               	subwf	(btemp+10)^0,w,c
 11676  01732C  B0D8               	btfsc	status,0,c
 11677  01732E  D002               	goto	u4860
 11678  017330  0E01               	movlw	1
 11679  017332  D001               	goto	u4870
 11680  017334                     u4860:
 11681  017334  0E00               	movlw	0
 11682  017336                     u4870:
 11683  017336  6E3F               	movwf	(btemp+10)^0,c
 11684  017338  6A40               	clrf	(btemp+11)^0,c
 11685                           
 11686                           ;stkvar	_tolower$4774 @ sp[(-2)+0]
 11687  01733A  0EFE               	movlw	-2
 11688  01733C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11689  017342  0EFF               	movlw	-1
 11690  017344  0060  F103  FFE3   	movff	btemp+11,plusw1
 11691                           
 11692                           ;stkvar	_tolower$4774 @ sp[(-2)+0]
 11693  01734A  0EFE               	movlw	-2
 11694  01734C  006F FF8C  F035    	movff	plusw1,btemp
 11695  017352  0EFF               	movlw	-1
 11696  017354  50E3               	movf	plusw1,w,c
 11697  017356  1035               	iorwf	btemp^0,w,c
 11698  017358  B4D8               	btfsc	status,2,c
 11699  01735A  D00D               	goto	l6210
 11700                           
 11701                           ;stkvar	_c @ sp[(-2)+-2]
 11702  01735C  0EFC               	movlw	-4
 11703  01735E  006F FF8C  F035    	movff	plusw1,btemp
 11704  017364  0EFD               	movlw	-3
 11705  017366  006F FF8C  F036    	movff	plusw1,btemp+1
 11706  01736C  0E20               	movlw	32
 11707  01736E  1235               	iorwf	btemp^0,f,c
 11708  017370  0E00               	movlw	0
 11709  017372  1236               	iorwf	(btemp+1)^0,f,c
 11710  017374  D008               	goto	l2806
 11711  017376                     l6210:
 11712                           
 11713                           ;stkvar	_c @ sp[(-2)+-2]
 11714  017376  0EFC               	movlw	-4
 11715  017378  006F FF8C  F035    	movff	plusw1,btemp
 11716  01737E  0EFD               	movlw	-3
 11717  017380  006F FF8C  F036    	movff	plusw1,btemp+1
 11718  017386                     l2806:
 11719                           
 11720                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11721  017386  52E5               	movf	postdec1,f,c
 11722  017388  52E5               	movf	postdec1,f,c
 11723  01738A  52E5               	movf	postdec1,f,c
 11724  01738C  52E5               	movf	postdec1,f,c
 11725  01738E  0012               	return		;funcret
 11726  017390                     __end_of_tolower:
 11727                           	opt callstack 0
 11728                           
 11729 ;; *************** function _isupper *****************
 11730 ;; Defined at:
 11731 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  c               2  [STACK] int 
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;		None
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  2  [STACK] int 
 11738 ;; Registers used:
 11739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11749 ;;Total ram usage:        0 bytes
 11750 ;; Hardware stack levels used:    1
 11751 ;; Hardware stack levels required when called:    6
 11752 ;; This function calls:
 11753 ;;		Nothing
 11754 ;; This function is called by:
 11755 ;;		_efgtoa
 11756 ;;		_xtoa
 11757 ;;		_vfpfcnvrt
 11758 ;;		_tolower
 11759 ;; This function uses a reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text41
 11763  017C8C                     __ptext41:
 11764                           	opt callstack 0
 11765  017C8C                     _isupper:
 11766                           	opt callstack 17
 11767                           
 11768                           ;stkvar	_c @ sp[(0)+-2]
 11769                           
 11770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11771                           ;incstack = 0
 11772  017C8C  0EFE               	movlw	-2
 11773  017C8E  50E3               	movf	plusw1,w,c
 11774  017C90  0FBF               	addlw	191
 11775  017C92  6E3F               	movwf	(btemp+10)^0,c
 11776  017C94  0EFF               	movlw	-1
 11777  017C96  006F FF8C  F040    	movff	plusw1,btemp+11
 11778  017C9C  0EFF               	movlw	255
 11779  017C9E  2240               	addwfc	(btemp+11)^0,f,c
 11780  017CA0  5040               	movf	(btemp+11)^0,w,c
 11781  017CA2  E106               	bnz	u4260
 11782  017CA4  0E1A               	movlw	26
 11783  017CA6  5C3F               	subwf	(btemp+10)^0,w,c
 11784  017CA8  B0D8               	btfsc	status,0,c
 11785  017CAA  D002               	goto	u4260
 11786  017CAC  0E01               	movlw	1
 11787  017CAE  D001               	goto	u4270
 11788  017CB0                     u4260:
 11789  017CB0  0E00               	movlw	0
 11790  017CB2                     u4270:
 11791  017CB2  6E35               	movwf	btemp^0,c
 11792  017CB4  6A36               	clrf	(btemp+1)^0,c
 11793                           
 11794                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11795  017CB6  52E5               	movf	postdec1,f,c
 11796  017CB8  52E5               	movf	postdec1,f,c
 11797  017CBA  0012               	return		;funcret
 11798  017CBC                     __end_of_isupper:
 11799                           	opt callstack 0
 11800                           
 11801 ;; *************** function _strcpy *****************
 11802 ;; Defined at:
 11803 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  dest            2  [STACK] PTR unsigned char 
 11806 ;;		 -> dbuf(80), 
 11807 ;;  src             2  [STACK] PTR const unsigned char 
 11808 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11809 ;;		 -> dbuf(80), 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  d               2  [STACK] PTR unsigned char 
 11812 ;;		 -> dbuf(80), 
 11813 ;;  s               2  [STACK] PTR const unsigned char 
 11814 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11815 ;;		 -> dbuf(80), 
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  2  [STACK] PTR unsigned char 
 11818 ;; Registers used:
 11819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/4
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    6
 11832 ;; This function calls:
 11833 ;;		Nothing
 11834 ;; This function is called by:
 11835 ;;		_efgtoa
 11836 ;; This function uses a reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text42
 11840  0169FA                     __ptext42:
 11841                           	opt callstack 0
 11842  0169FA                     _strcpy:
 11843                           	opt callstack 0
 11844                           
 11845                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11846  0169FA  52E6               	movf	postinc1,f,c
 11847  0169FC  52E6               	movf	postinc1,f,c
 11848  0169FE  52E6               	movf	postinc1,f,c
 11849  016A00  52E6               	movf	postinc1,f,c
 11850                           
 11851                           ;stkvar	_src @ sp[(-4)+-4]
 11852                           
 11853                           ;incstack = 0
 11854  016A02  0EF8               	movlw	-8
 11855  016A04  006F FF8C  F03F    	movff	plusw1,btemp+10
 11856  016A0A  0EF9               	movlw	-7
 11857  016A0C  006F FF8C  F040    	movff	plusw1,btemp+11
 11858                           
 11859                           ;stkvar	_s @ sp[(-4)+2]
 11860  016A12  0EFF               	movlw	-1
 11861  016A14  0060  F103  FFE3   	movff	btemp+11,plusw1
 11862  016A1A  0EFE               	movlw	-2
 11863  016A1C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11864                           
 11865                           ;stkvar	_dest @ sp[(-4)+-2]
 11866  016A22  0EFA               	movlw	-6
 11867  016A24  006F FF8C  F03F    	movff	plusw1,btemp+10
 11868  016A2A  0EFB               	movlw	-5
 11869  016A2C  006F FF8C  F040    	movff	plusw1,btemp+11
 11870                           
 11871                           ;stkvar	_d @ sp[(-4)+0]
 11872  016A32  0EFD               	movlw	-3
 11873  016A34  0060  F103  FFE3   	movff	btemp+11,plusw1
 11874  016A3A  0EFC               	movlw	-4
 11875  016A3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11876  016A42                     l8916:
 11877                           
 11878                           ;stkvar	_s @ sp[(-4)+2]
 11879  016A42  50E1               	movf	fsr1l,w,c
 11880  016A44  0FFE               	addlw	-2
 11881  016A46  6ED9               	movwf	fsr2l,c
 11882  016A48  50E2               	movf	fsr1h,w,c
 11883  016A4A  6EDA               	movwf	fsr2h,c
 11884  016A4C  0EFF               	movlw	255
 11885  016A4E  22DA               	addwfc	fsr2h,f,c
 11886  016A50  006F FF7C  F03F    	movff	indf2,btemp+10
 11887  016A56  0E01               	movlw	1
 11888  016A58  26DE               	addwf	postinc2,f,c
 11889  016A5A  006F FF7C  F040    	movff	indf2,btemp+11
 11890  016A60  0E00               	movlw	0
 11891  016A62  22DD               	addwfc	postdec2,f,c
 11892  016A64  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11893  016A6A  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11894  016A70  0E00               	movlw	low (__mediumconst shr (0+16))
 11895  016A72  6EF8               	movwf	tblptru,c
 11896                           
 11897                           ;stkvar	_d @ sp[(-4)+0]
 11898  016A74  50E1               	movf	fsr1l,w,c
 11899  016A76  0FFC               	addlw	-4
 11900  016A78  6ED9               	movwf	fsr2l,c
 11901  016A7A  50E2               	movf	fsr1h,w,c
 11902  016A7C  6EDA               	movwf	fsr2h,c
 11903  016A7E  0EFF               	movlw	255
 11904  016A80  22DA               	addwfc	fsr2h,f,c
 11905  016A82  006F FF7C  F03F    	movff	indf2,btemp+10
 11906  016A88  0E01               	movlw	1
 11907  016A8A  26DE               	addwf	postinc2,f,c
 11908  016A8C  006F FF7C  F040    	movff	indf2,btemp+11
 11909  016A92  0E00               	movlw	0
 11910  016A94  22DD               	addwfc	postdec2,f,c
 11911  016A96  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11912  016A9C  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11913  016AA2  0E1F               	movlw	(high __ramtop+-1)
 11914  016AA4  64F7               	cpfsgt	tblptrh,c
 11915  016AA6  D003               	bra	u8387
 11916  016AA8  0008               	tblrd		*
 11917  016AAA  50F5               	movf	tablat,w,c
 11918  016AAC  D007               	bra	u8380
 11919  016AAE                     u8387:
 11920  016AAE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11921  016AB4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11922  016ABA  50EF               	movf	indf0,w,c
 11923  016ABC                     u8380:
 11924  016ABC  6EDF               	movwf	indf2,c
 11925  016ABE  50DF               	movf	indf2,w,c
 11926  016AC0  A4D8               	btfss	status,2,c
 11927  016AC2  D7BF               	goto	l8916
 11928                           
 11929                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 11930  016AC4  0EF8               	movlw	248
 11931  016AC6  26E1               	addwf	fsr1l,f,c
 11932  016AC8  0EFF               	movlw	255
 11933  016ACA  22E2               	addwfc	fsr1h,f,c
 11934  016ACC  0012               	return		;funcret
 11935  016ACE                     __end_of_strcpy:
 11936                           	opt callstack 0
 11937                           
 11938 ;; *************** function _floorf *****************
 11939 ;; Defined at:
 11940 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  x               4  [STACK] float 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  u               4  [STACK] struct .
 11945 ;;  m               4  [STACK] unsigned long 
 11946 ;;  e               2  [STACK] int 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  4  [STACK] float 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/4
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    6
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_efgtoa
 11967 ;; This function uses a reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text43
 11971  014162                     __ptext43:
 11972                           	opt callstack 0
 11973  014162                     _floorf:
 11974                           	opt callstack 0
 11975                           
 11976                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11977  014162  0E0A               	movlw	10
 11978  014164  26E1               	addwf	fsr1l,f,c
 11979  014166  0E00               	movlw	0
 11980  014168  22E2               	addwfc	fsr1h,f,c
 11981                           
 11982                           ;incstack = 0
 11983  01416A  0060  F298  F03D   	movff	floorf@F524,btemp+8
 11984  014170  0060  F29C  F03E   	movff	floorf@F524+1,btemp+9
 11985  014176  0060  F2A0  F03F   	movff	floorf@F524+2,btemp+10
 11986  01417C  0060  F2A4  F040   	movff	floorf@F524+3,btemp+11
 11987                           
 11988                           ;stkvar	_u @ sp[(-10)+0]
 11989  014182  0EF6               	movlw	-10
 11990  014184  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11991  01418A  0EF7               	movlw	-9
 11992  01418C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11993  014192  0EF8               	movlw	-8
 11994  014194  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11995  01419A  0EF9               	movlw	-7
 11996  01419C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11997                           
 11998                           ;stkvar	_x @ sp[(-10)+-4]
 11999  0141A2  0EF2               	movlw	-14
 12000  0141A4  006F FF8C  F03D    	movff	plusw1,btemp+8
 12001  0141AA  0EF3               	movlw	-13
 12002  0141AC  006F FF8C  F03E    	movff	plusw1,btemp+9
 12003  0141B2  0EF4               	movlw	-12
 12004  0141B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 12005  0141BA  0EF5               	movlw	-11
 12006  0141BC  006F FF8C  F040    	movff	plusw1,btemp+11
 12007                           
 12008                           ;stkvar	_u @ sp[(-10)+0]
 12009  0141C2  0EF6               	movlw	-10
 12010  0141C4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12011  0141CA  0EF7               	movlw	-9
 12012  0141CC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12013  0141D2  0EF8               	movlw	-8
 12014  0141D4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12015  0141DA  0EF9               	movlw	-7
 12016  0141DC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12017  0141E2  0E81               	movlw	129
 12018  0141E4  6E3F               	movwf	(btemp+10)^0,c
 12019  0141E6  0EFF               	movlw	255
 12020  0141E8  6E40               	movwf	(btemp+11)^0,c
 12021                           
 12022                           ;stkvar	_u @ sp[(-10)+0]
 12023  0141EA  0EF6               	movlw	-10
 12024  0141EC  006F FF8C  F039    	movff	plusw1,btemp+4
 12025  0141F2  0EF7               	movlw	-9
 12026  0141F4  006F FF8C  F03A    	movff	plusw1,btemp+5
 12027  0141FA  0EF8               	movlw	-8
 12028  0141FC  006F FF8C  F03B    	movff	plusw1,btemp+6
 12029  014202  0EF9               	movlw	-7
 12030  014204  006F FF8C  F03C    	movff	plusw1,btemp+7
 12031  01420A  0E18               	movlw	24
 12032  01420C  D005               	goto	u4890
 12033  01420E                     u4895:
 12034  01420E  90D8               	bcf	status,0,c
 12035  014210  323C               	rrcf	(btemp+7)^0,f,c
 12036  014212  323B               	rrcf	(btemp+6)^0,f,c
 12037  014214  323A               	rrcf	(btemp+5)^0,f,c
 12038  014216  3239               	rrcf	(btemp+4)^0,f,c
 12039  014218                     u4890:
 12040  014218  2EE8               	decfsz	wreg,f,c
 12041  01421A  D7F9               	goto	u4895
 12042  01421C  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 12043  014222  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 12044  014228  0EFF               	movlw	255
 12045  01422A  163D               	andwf	(btemp+8)^0,f,c
 12046  01422C  0E00               	movlw	0
 12047  01422E  163E               	andwf	(btemp+9)^0,f,c
 12048  014230  503F               	movf	(btemp+10)^0,w,c
 12049  014232  263D               	addwf	(btemp+8)^0,f,c
 12050  014234  5040               	movf	(btemp+11)^0,w,c
 12051  014236  223E               	addwfc	(btemp+9)^0,f,c
 12052                           
 12053                           ;stkvar	_e @ sp[(-10)+8]
 12054  014238  0EFE               	movlw	-2
 12055  01423A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12056  014240  0EFF               	movlw	-1
 12057  014242  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12058                           
 12059                           ;stkvar	_e @ sp[(-10)+8]
 12060  014248  0EFF               	movlw	-1
 12061  01424A  BEE3               	btfsc	plusw1,7,c
 12062  01424C  D019               	goto	l6224
 12063  01424E  0EFF               	movlw	-1
 12064  014250  50E3               	movf	plusw1,w,c
 12065  014252  E108               	bnz	u4900
 12066  014254  0EFE               	movlw	-2
 12067  014256  006F FF8C  F035    	movff	plusw1,btemp
 12068  01425C  0E17               	movlw	23
 12069  01425E  5E35               	subwf	btemp^0,f,c
 12070  014260  A0D8               	btfss	status,0,c
 12071  014262  D00E               	goto	l6224
 12072  014264                     u4900:
 12073                           
 12074                           ;stkvar	_x @ sp[(-10)+-4]
 12075  014264  0EF2               	movlw	-14
 12076  014266  006F FF8C  F035    	movff	plusw1,btemp
 12077  01426C  0EF3               	movlw	-13
 12078  01426E  006F FF8C  F036    	movff	plusw1,btemp+1
 12079  014274  0EF4               	movlw	-12
 12080  014276  006F FF8C  F037    	movff	plusw1,btemp+2
 12081  01427C  0EF5               	movlw	-11
 12082  01427E  D11F               	goto	L11
 12083  014280                     l6224:
 12084                           
 12085                           ;stkvar	_e @ sp[(-10)+8]
 12086  014280  0EFF               	movlw	-1
 12087  014282  BEE3               	btfsc	plusw1,7,c
 12088  014284  D0B4               	goto	l6240
 12089                           
 12090                           ;stkvar	_e @ sp[(-10)+8]
 12091  014286  0EFE               	movlw	-2
 12092  014288  006F FF8C  F040    	movff	plusw1,btemp+11
 12093  01428E  0EFF               	movlw	255
 12094  014290  6E39               	movwf	(btemp+4)^0,c
 12095  014292  0EFF               	movlw	255
 12096  014294  6E3A               	movwf	(btemp+5)^0,c
 12097  014296  0E7F               	movlw	127
 12098  014298  6E3B               	movwf	(btemp+6)^0,c
 12099  01429A  0E00               	movlw	0
 12100  01429C  6E3C               	movwf	(btemp+7)^0,c
 12101  01429E                     u4925:
 12102  01429E  6640               	tstfsz	(btemp+11)^0,c
 12103  0142A0  D001               	goto	u4926
 12104  0142A2  D007               	goto	u4927
 12105  0142A4                     u4926:
 12106  0142A4  343C               	rlcf	(btemp+7)^0,w,c
 12107  0142A6  323C               	rrcf	(btemp+7)^0,f,c
 12108  0142A8  323B               	rrcf	(btemp+6)^0,f,c
 12109  0142AA  323A               	rrcf	(btemp+5)^0,f,c
 12110  0142AC  3239               	rrcf	(btemp+4)^0,f,c
 12111  0142AE  2E40               	decfsz	(btemp+11)^0,f,c
 12112  0142B0  D7F6               	goto	u4925
 12113  0142B2                     u4927:
 12114                           
 12115                           ;stkvar	_m @ sp[(-10)+4]
 12116  0142B2  0EFA               	movlw	-6
 12117  0142B4  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 12118  0142BA  0EFB               	movlw	-5
 12119  0142BC  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 12120  0142C2  0EFC               	movlw	-4
 12121  0142C4  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12122  0142CA  0EFD               	movlw	-3
 12123  0142CC  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12124                           
 12125                           ;stkvar	_m @ sp[(-10)+4]
 12126                           ;stkvar	_u @ sp[(-10)+0]
 12127  0142D2  0EF6               	movlw	-10
 12128  0142D4  006F FF8C  F03D    	movff	plusw1,btemp+8
 12129  0142DA  0EF7               	movlw	-9
 12130  0142DC  006F FF8C  F03E    	movff	plusw1,btemp+9
 12131  0142E2  0EF8               	movlw	-8
 12132  0142E4  006F FF8C  F03F    	movff	plusw1,btemp+10
 12133  0142EA  0EF9               	movlw	-7
 12134  0142EC  006F FF8C  F040    	movff	plusw1,btemp+11
 12135  0142F2  0EFA               	movlw	-6
 12136  0142F4  50E3               	movf	plusw1,w,c
 12137  0142F6  163D               	andwf	(btemp+8)^0,f,c
 12138  0142F8  0EFB               	movlw	-5
 12139  0142FA  50E3               	movf	plusw1,w,c
 12140  0142FC  163E               	andwf	(btemp+9)^0,f,c
 12141  0142FE  0EFC               	movlw	-4
 12142  014300  50E3               	movf	plusw1,w,c
 12143  014302  163F               	andwf	(btemp+10)^0,f,c
 12144  014304  0EFD               	movlw	-3
 12145  014306  50E3               	movf	plusw1,w,c
 12146  014308  1640               	andwf	(btemp+11)^0,f,c
 12147  01430A  503D               	movf	(btemp+8)^0,w,c
 12148  01430C  103E               	iorwf	(btemp+9)^0,w,c
 12149  01430E  103F               	iorwf	(btemp+10)^0,w,c
 12150  014310  1040               	iorwf	(btemp+11)^0,w,c
 12151  014312  B4D8               	btfsc	status,2,c
 12152  014314  D7A7               	goto	u4900
 12153                           
 12154                           ;stkvar	_u @ sp[(-10)+0]
 12155  014316  0EF6               	movlw	-10
 12156  014318  006F FF8C  F03D    	movff	plusw1,btemp+8
 12157  01431E  0EF7               	movlw	-9
 12158  014320  006F FF8C  F03E    	movff	plusw1,btemp+9
 12159  014326  0EF8               	movlw	-8
 12160  014328  006F FF8C  F03F    	movff	plusw1,btemp+10
 12161  01432E  0EF9               	movlw	-7
 12162  014330  006F FF8C  F040    	movff	plusw1,btemp+11
 12163  014336  0E20               	movlw	32
 12164  014338  D005               	goto	u4940
 12165  01433A                     u4945:
 12166  01433A  90D8               	bcf	status,0,c
 12167  01433C  3240               	rrcf	(btemp+11)^0,f,c
 12168  01433E  323F               	rrcf	(btemp+10)^0,f,c
 12169  014340  323E               	rrcf	(btemp+9)^0,f,c
 12170  014342  323D               	rrcf	(btemp+8)^0,f,c
 12171  014344                     u4940:
 12172  014344  2EE8               	decfsz	wreg,f,c
 12173  014346  D7F9               	goto	u4945
 12174  014348  503D               	movf	(btemp+8)^0,w,c
 12175  01434A  B4D8               	btfsc	status,2,c
 12176  01434C  D028               	goto	l6238
 12177                           
 12178                           ;stkvar	_m @ sp[(-10)+4]
 12179                           ;stkvar	_u @ sp[(-10)+0]
 12180  01434E  0EF6               	movlw	-10
 12181  014350  50E3               	movf	plusw1,w,c
 12182  014352  6E35               	movwf	btemp^0,c
 12183  014354  0EFA               	movlw	-6
 12184  014356  50E3               	movf	plusw1,w,c
 12185  014358  2635               	addwf	btemp^0,f,c
 12186  01435A  0EF6               	movlw	-10
 12187  01435C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12188  014362  0EF7               	movlw	-9
 12189  014364  50E3               	movf	plusw1,w,c
 12190  014366  6E35               	movwf	btemp^0,c
 12191  014368  0EFB               	movlw	-5
 12192  01436A  50E3               	movf	plusw1,w,c
 12193  01436C  2235               	addwfc	btemp^0,f,c
 12194  01436E  0EF7               	movlw	-9
 12195  014370  0060  F0D7  FFE3   	movff	btemp,plusw1
 12196  014376  0EF8               	movlw	-8
 12197  014378  50E3               	movf	plusw1,w,c
 12198  01437A  6E35               	movwf	btemp^0,c
 12199  01437C  0EFC               	movlw	-4
 12200  01437E  50E3               	movf	plusw1,w,c
 12201  014380  2235               	addwfc	btemp^0,f,c
 12202  014382  0EF8               	movlw	-8
 12203  014384  0060  F0D7  FFE3   	movff	btemp,plusw1
 12204  01438A  0EF9               	movlw	-7
 12205  01438C  50E3               	movf	plusw1,w,c
 12206  01438E  6E35               	movwf	btemp^0,c
 12207  014390  0EFD               	movlw	-3
 12208  014392  50E3               	movf	plusw1,w,c
 12209  014394  2235               	addwfc	btemp^0,f,c
 12210  014396  0EF9               	movlw	-7
 12211  014398  0060  F0D7  FFE3   	movff	btemp,plusw1
 12212  01439E                     l6238:
 12213                           
 12214                           ;stkvar	_m @ sp[(-10)+4]
 12215  01439E  0EFA               	movlw	-6
 12216  0143A0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12217  0143A6  0EFB               	movlw	-5
 12218  0143A8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12219  0143AE  0EFC               	movlw	-4
 12220  0143B0  006F FF8C  F03F    	movff	plusw1,btemp+10
 12221  0143B6  0EFD               	movlw	-3
 12222  0143B8  006F FF8C  F040    	movff	plusw1,btemp+11
 12223  0143BE  1C3D               	comf	(btemp+8)^0,w,c
 12224  0143C0  6E39               	movwf	(btemp+4)^0,c
 12225  0143C2  1C3E               	comf	(btemp+9)^0,w,c
 12226  0143C4  6E3A               	movwf	(btemp+5)^0,c
 12227  0143C6  1C3F               	comf	(btemp+10)^0,w,c
 12228  0143C8  6E3B               	movwf	(btemp+6)^0,c
 12229  0143CA  1C40               	comf	(btemp+11)^0,w,c
 12230  0143CC  6E3C               	movwf	(btemp+7)^0,c
 12231                           
 12232                           ;stkvar	_u @ sp[(-10)+0]
 12233  0143CE  50E1               	movf	fsr1l,w,c
 12234  0143D0  0FF6               	addlw	-10
 12235  0143D2  6ED9               	movwf	fsr2l,c
 12236  0143D4  50E2               	movf	fsr1h,w,c
 12237  0143D6  6EDA               	movwf	fsr2h,c
 12238  0143D8  0EFF               	movlw	255
 12239  0143DA  22DA               	addwfc	fsr2h,f,c
 12240  0143DC  5039               	movf	(btemp+4)^0,w,c
 12241  0143DE  16DE               	andwf	postinc2,f,c
 12242  0143E0  503A               	movf	(btemp+5)^0,w,c
 12243  0143E2  16DE               	andwf	postinc2,f,c
 12244  0143E4  503B               	movf	(btemp+6)^0,w,c
 12245  0143E6  16DE               	andwf	postinc2,f,c
 12246  0143E8  503C               	movf	(btemp+7)^0,w,c
 12247  0143EA  16DE               	andwf	postinc2,f,c
 12248  0143EC  D05B               	goto	l6248
 12249  0143EE                     l6240:
 12250                           
 12251                           ;stkvar	_u @ sp[(-10)+0]
 12252  0143EE  0EF6               	movlw	-10
 12253  0143F0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12254  0143F6  0EF7               	movlw	-9
 12255  0143F8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12256  0143FE  0EF8               	movlw	-8
 12257  014400  006F FF8C  F03F    	movff	plusw1,btemp+10
 12258  014406  0EF9               	movlw	-7
 12259  014408  006F FF8C  F040    	movff	plusw1,btemp+11
 12260  01440E  0E20               	movlw	32
 12261  014410  D005               	goto	u4960
 12262  014412                     u4965:
 12263  014412  90D8               	bcf	status,0,c
 12264  014414  3240               	rrcf	(btemp+11)^0,f,c
 12265  014416  323F               	rrcf	(btemp+10)^0,f,c
 12266  014418  323E               	rrcf	(btemp+9)^0,f,c
 12267  01441A  323D               	rrcf	(btemp+8)^0,f,c
 12268  01441C                     u4960:
 12269  01441C  2EE8               	decfsz	wreg,f,c
 12270  01441E  D7F9               	goto	u4965
 12271  014420  663D               	tstfsz	(btemp+8)^0,c
 12272  014422  D009               	goto	l6244
 12273                           
 12274                           ;stkvar	_u @ sp[(-10)+0]
 12275  014424  0EF6               	movlw	-10
 12276  014426  6AE3               	clrf	plusw1,c
 12277  014428  0EF7               	movlw	-9
 12278  01442A  6AE3               	clrf	plusw1,c
 12279  01442C  0EF8               	movlw	-8
 12280  01442E  6AE3               	clrf	plusw1,c
 12281  014430  0EF9               	movlw	-7
 12282  014432  6AE3               	clrf	plusw1,c
 12283  014434  D037               	goto	l6248
 12284  014436                     l6244:
 12285                           
 12286                           ;stkvar	_u @ sp[(-10)+0]
 12287  014436  0EF6               	movlw	-10
 12288  014438  006F FF8C  F03D    	movff	plusw1,btemp+8
 12289  01443E  0EF7               	movlw	-9
 12290  014440  006F FF8C  F03E    	movff	plusw1,btemp+9
 12291  014446  0EF8               	movlw	-8
 12292  014448  006F FF8C  F03F    	movff	plusw1,btemp+10
 12293  01444E  0EF9               	movlw	-7
 12294  014450  006F FF8C  F040    	movff	plusw1,btemp+11
 12295  014456  90D8               	bcf	status,0,c
 12296  014458  343D               	rlcf	(btemp+8)^0,w,c
 12297  01445A  6E39               	movwf	(btemp+4)^0,c
 12298  01445C  343E               	rlcf	(btemp+9)^0,w,c
 12299  01445E  6E3A               	movwf	(btemp+5)^0,c
 12300  014460  343F               	rlcf	(btemp+10)^0,w,c
 12301  014462  6E3B               	movwf	(btemp+6)^0,c
 12302  014464  3440               	rlcf	(btemp+11)^0,w,c
 12303  014466  6E3C               	movwf	(btemp+7)^0,c
 12304  014468  5039               	movf	(btemp+4)^0,w,c
 12305  01446A  103A               	iorwf	(btemp+5)^0,w,c
 12306  01446C  103B               	iorwf	(btemp+6)^0,w,c
 12307  01446E  103C               	iorwf	(btemp+7)^0,w,c
 12308  014470  B4D8               	btfsc	status,2,c
 12309  014472  D018               	goto	l6248
 12310  014474  0E00               	movlw	0
 12311  014476  6E3D               	movwf	(btemp+8)^0,c
 12312  014478  0E00               	movlw	0
 12313  01447A  6E3E               	movwf	(btemp+9)^0,c
 12314  01447C  0E80               	movlw	128
 12315  01447E  6E3F               	movwf	(btemp+10)^0,c
 12316  014480  0EBF               	movlw	191
 12317  014482  6E40               	movwf	(btemp+11)^0,c
 12318                           
 12319                           ;stkvar	_u @ sp[(-10)+0]
 12320  014484  0EF6               	movlw	-10
 12321  014486  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12322  01448C  0EF7               	movlw	-9
 12323  01448E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12324  014494  0EF8               	movlw	-8
 12325  014496  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12326  01449C  0EF9               	movlw	-7
 12327  01449E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12328  0144A4                     l6248:
 12329                           
 12330                           ;stkvar	_u @ sp[(-10)+0]
 12331  0144A4  0EF6               	movlw	-10
 12332  0144A6  006F FF8C  F035    	movff	plusw1,btemp
 12333  0144AC  0EF7               	movlw	-9
 12334  0144AE  006F FF8C  F036    	movff	plusw1,btemp+1
 12335  0144B4  0EF8               	movlw	-8
 12336  0144B6  006F FF8C  F037    	movff	plusw1,btemp+2
 12337  0144BC  0EF9               	movlw	-7
 12338  0144BE                     L11:
 12339  0144BE  006F FF8C  F038    	movff	plusw1,btemp+3
 12340                           
 12341                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12342  0144C4  0EF2               	movlw	242
 12343  0144C6  26E1               	addwf	fsr1l,f,c
 12344  0144C8  0EFF               	movlw	255
 12345  0144CA  22E2               	addwfc	fsr1h,f,c
 12346  0144CC  0012               	return		;funcret
 12347  0144CE                     __end_of_floorf:
 12348                           	opt callstack 0
 12349                           
 12350 ;; *************** function ___fpclassifyf *****************
 12351 ;; Defined at:
 12352 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  x               4  [STACK] float 
 12355 ;; Auto vars:     Size  Location     Type
 12356 ;;  u               4  [STACK] struct .
 12357 ;;  e               2  [STACK] int 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  2  [STACK] int 
 12360 ;; Registers used:
 12361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/4
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;Total ram usage:        0 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    6
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		_efgtoa
 12378 ;; This function uses a reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text44
 12382  015CC2                     __ptext44:
 12383                           	opt callstack 0
 12384  015CC2                     ___fpclassifyf:
 12385                           	opt callstack 0
 12386                           
 12387                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12388  015CC2  0E06               	movlw	6
 12389  015CC4  26E1               	addwf	fsr1l,f,c
 12390  015CC6  0E00               	movlw	0
 12391  015CC8  22E2               	addwfc	fsr1h,f,c
 12392                           
 12393                           ;incstack = 0
 12394  015CCA  0060  F2A8  F03D   	movff	___fpclassifyf@F463,btemp+8
 12395  015CD0  0060  F2AC  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12396  015CD6  0060  F2B0  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12397  015CDC  0060  F2B4  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12398                           
 12399                           ;stkvar	_u @ sp[(-6)+0]
 12400  015CE2  0EFA               	movlw	-6
 12401  015CE4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12402  015CEA  0EFB               	movlw	-5
 12403  015CEC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12404  015CF2  0EFC               	movlw	-4
 12405  015CF4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12406  015CFA  0EFD               	movlw	-3
 12407  015CFC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12408                           
 12409                           ;stkvar	_x @ sp[(-6)+-4]
 12410  015D02  0EF6               	movlw	-10
 12411  015D04  006F FF8C  F03D    	movff	plusw1,btemp+8
 12412  015D0A  0EF7               	movlw	-9
 12413  015D0C  006F FF8C  F03E    	movff	plusw1,btemp+9
 12414  015D12  0EF8               	movlw	-8
 12415  015D14  006F FF8C  F03F    	movff	plusw1,btemp+10
 12416  015D1A  0EF9               	movlw	-7
 12417  015D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 12418                           
 12419                           ;stkvar	_u @ sp[(-6)+0]
 12420  015D22  0EFA               	movlw	-6
 12421  015D24  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12422  015D2A  0EFB               	movlw	-5
 12423  015D2C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12424  015D32  0EFC               	movlw	-4
 12425  015D34  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12426  015D3A  0EFD               	movlw	-3
 12427  015D3C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12428                           
 12429                           ;stkvar	_u @ sp[(-6)+0]
 12430  015D42  0EFA               	movlw	-6
 12431  015D44  006F FF8C  F03D    	movff	plusw1,btemp+8
 12432  015D4A  0EFB               	movlw	-5
 12433  015D4C  006F FF8C  F03E    	movff	plusw1,btemp+9
 12434  015D52  0EFC               	movlw	-4
 12435  015D54  006F FF8C  F03F    	movff	plusw1,btemp+10
 12436  015D5A  0EFD               	movlw	-3
 12437  015D5C  006F FF8C  F040    	movff	plusw1,btemp+11
 12438  015D62  0E18               	movlw	24
 12439  015D64  D005               	goto	u4770
 12440  015D66                     u4775:
 12441  015D66  90D8               	bcf	status,0,c
 12442  015D68  3240               	rrcf	(btemp+11)^0,f,c
 12443  015D6A  323F               	rrcf	(btemp+10)^0,f,c
 12444  015D6C  323E               	rrcf	(btemp+9)^0,f,c
 12445  015D6E  323D               	rrcf	(btemp+8)^0,f,c
 12446  015D70                     u4770:
 12447  015D70  2EE8               	decfsz	wreg,f,c
 12448  015D72  D7F9               	goto	u4775
 12449  015D74  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12450  015D7A  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12451  015D80  0EFF               	movlw	255
 12452  015D82  163B               	andwf	(btemp+6)^0,f,c
 12453  015D84  0E00               	movlw	0
 12454  015D86  163C               	andwf	(btemp+7)^0,f,c
 12455                           
 12456                           ;stkvar	_e @ sp[(-6)+4]
 12457  015D88  0EFE               	movlw	-2
 12458  015D8A  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12459  015D90  0EFF               	movlw	-1
 12460  015D92  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12461                           
 12462                           ;stkvar	_e @ sp[(-6)+4]
 12463  015D98  0EFE               	movlw	-2
 12464  015D9A  006F FF8C  F035    	movff	plusw1,btemp
 12465  015DA0  0EFF               	movlw	-1
 12466  015DA2  50E3               	movf	plusw1,w,c
 12467  015DA4  1035               	iorwf	btemp^0,w,c
 12468  015DA6  A4D8               	btfss	status,2,c
 12469  015DA8  D023               	goto	l6186
 12470                           
 12471                           ;stkvar	_u @ sp[(-6)+0]
 12472  015DAA  0EFA               	movlw	-6
 12473  015DAC  006F FF8C  F03D    	movff	plusw1,btemp+8
 12474  015DB2  0EFB               	movlw	-5
 12475  015DB4  006F FF8C  F03E    	movff	plusw1,btemp+9
 12476  015DBA  0EFC               	movlw	-4
 12477  015DBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12478  015DC2  0EFD               	movlw	-3
 12479  015DC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12480  015DCA  90D8               	bcf	status,0,c
 12481  015DCC  343D               	rlcf	(btemp+8)^0,w,c
 12482  015DCE  6E39               	movwf	(btemp+4)^0,c
 12483  015DD0  343E               	rlcf	(btemp+9)^0,w,c
 12484  015DD2  6E3A               	movwf	(btemp+5)^0,c
 12485  015DD4  343F               	rlcf	(btemp+10)^0,w,c
 12486  015DD6  6E3B               	movwf	(btemp+6)^0,c
 12487  015DD8  3440               	rlcf	(btemp+11)^0,w,c
 12488  015DDA  6E3C               	movwf	(btemp+7)^0,c
 12489  015DDC  5039               	movf	(btemp+4)^0,w,c
 12490  015DDE  103A               	iorwf	(btemp+5)^0,w,c
 12491  015DE0  103B               	iorwf	(btemp+6)^0,w,c
 12492  015DE2  103C               	iorwf	(btemp+7)^0,w,c
 12493  015DE4  A4D8               	btfss	status,2,c
 12494  015DE6  D002               	goto	l6182
 12495  015DE8  0E02               	movlw	2
 12496  015DEA  D02E               	goto	L12
 12497  015DEC                     l6182:
 12498  015DEC  0E03               	movlw	3
 12499  015DEE  D02C               	goto	L12
 12500  015DF0                     l6186:
 12501                           
 12502                           ;stkvar	_e @ sp[(-6)+4]
 12503  015DF0  0EFE               	movlw	-2
 12504  015DF2  28E3               	incf	plusw1,w,c
 12505  015DF4  E128               	bnz	l6192
 12506  015DF6  0EFF               	movlw	-1
 12507  015DF8  50E3               	movf	plusw1,w,c
 12508  015DFA  A4D8               	btfss	status,2,c
 12509  015DFC  D024               	goto	l6192
 12510                           
 12511                           ;stkvar	_u @ sp[(-6)+0]
 12512  015DFE  0EFA               	movlw	-6
 12513  015E00  006F FF8C  F03D    	movff	plusw1,btemp+8
 12514  015E06  0EFB               	movlw	-5
 12515  015E08  006F FF8C  F03E    	movff	plusw1,btemp+9
 12516  015E0E  0EFC               	movlw	-4
 12517  015E10  006F FF8C  F03F    	movff	plusw1,btemp+10
 12518  015E16  0EFD               	movlw	-3
 12519  015E18  006F FF8C  F040    	movff	plusw1,btemp+11
 12520  015E1E  0E09               	movlw	9
 12521  015E20                     u4815:
 12522  015E20  90D8               	bcf	status,0,c
 12523  015E22  363D               	rlcf	(btemp+8)^0,f,c
 12524  015E24  363E               	rlcf	(btemp+9)^0,f,c
 12525  015E26  363F               	rlcf	(btemp+10)^0,f,c
 12526  015E28  3640               	rlcf	(btemp+11)^0,f,c
 12527  015E2A  2EE8               	decfsz	wreg,f,c
 12528  015E2C  D7F9               	goto	u4815
 12529  015E2E  503D               	movf	(btemp+8)^0,w,c
 12530  015E30  103E               	iorwf	(btemp+9)^0,w,c
 12531  015E32  103F               	iorwf	(btemp+10)^0,w,c
 12532  015E34  1040               	iorwf	(btemp+11)^0,w,c
 12533  015E36  A4D8               	btfss	status,2,c
 12534  015E38  D002               	goto	u4820
 12535  015E3A  0E01               	movlw	1
 12536  015E3C  D001               	goto	u4830
 12537  015E3E                     u4820:
 12538  015E3E  0E00               	movlw	0
 12539  015E40                     u4830:
 12540  015E40  6E35               	movwf	btemp^0,c
 12541  015E42  6A36               	clrf	(btemp+1)^0,c
 12542  015E44  D004               	goto	l2645
 12543  015E46                     l6192:
 12544  015E46  0E04               	movlw	4
 12545  015E48                     L12:
 12546  015E48  6E35               	movwf	btemp^0,c
 12547  015E4A  0E00               	movlw	0
 12548  015E4C  6E36               	movwf	(btemp+1)^0,c
 12549  015E4E                     l2645:
 12550                           
 12551                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12552  015E4E  0EF6               	movlw	246
 12553  015E50  26E1               	addwf	fsr1l,f,c
 12554  015E52  0EFF               	movlw	255
 12555  015E54  22E2               	addwfc	fsr1h,f,c
 12556  015E56  0012               	return		;funcret
 12557  015E58                     __end_of___fpclassifyf:
 12558                           	opt callstack 0
 12559                           
 12560 ;; *************** function ___fltol *****************
 12561 ;; Defined at:
 12562 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  f1              4  [STACK] int 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;  exp1            1  [STACK] unsigned char 
 12567 ;;  sign1           1  [STACK] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  4  [STACK] long 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/4
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    6
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_efgtoa
 12588 ;; This function uses a reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text45
 12592  015E58                     __ptext45:
 12593                           	opt callstack 0
 12594  015E58                     ___fltol:
 12595                           	opt callstack 0
 12596                           
 12597                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12598  015E58  52E6               	movf	postinc1,f,c
 12599  015E5A  52E6               	movf	postinc1,f,c
 12600                           
 12601                           ;stkvar	_f1 @ sp[(-2)+-4]
 12602                           
 12603                           ;incstack = 0
 12604  015E5C  0EFA               	movlw	-6
 12605  015E5E  006F FF8C  F03D    	movff	plusw1,btemp+8
 12606  015E64  0EFB               	movlw	-5
 12607  015E66  006F FF8C  F03E    	movff	plusw1,btemp+9
 12608  015E6C  0EFC               	movlw	-4
 12609  015E6E  006F FF8C  F03F    	movff	plusw1,btemp+10
 12610  015E74  0EFD               	movlw	-3
 12611  015E76  006F FF8C  F040    	movff	plusw1,btemp+11
 12612  015E7C  0E18               	movlw	24
 12613  015E7E  D005               	goto	u5980
 12614  015E80                     u5985:
 12615  015E80  90D8               	bcf	status,0,c
 12616  015E82  3240               	rrcf	(btemp+11)^0,f,c
 12617  015E84  323F               	rrcf	(btemp+10)^0,f,c
 12618  015E86  323E               	rrcf	(btemp+9)^0,f,c
 12619  015E88  323D               	rrcf	(btemp+8)^0,f,c
 12620  015E8A                     u5980:
 12621  015E8A  2EE8               	decfsz	wreg,f,c
 12622  015E8C  D7F9               	goto	u5985
 12623                           
 12624                           ;stkvar	_exp1 @ sp[(-2)+0]
 12625  015E8E  0EFE               	movlw	-2
 12626  015E90  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12627  015E96  0EFE               	movlw	-2
 12628  015E98  50E3               	movf	plusw1,w,c
 12629  015E9A  A4D8               	btfss	status,2,c
 12630  015E9C  D006               	goto	l6812
 12631  015E9E                     u5990:
 12632  015E9E  0E00               	movlw	0
 12633  015EA0  6E35               	movwf	btemp^0,c
 12634  015EA2  6A36               	clrf	(btemp+1)^0,c
 12635  015EA4  6A37               	clrf	(btemp+2)^0,c
 12636  015EA6  6A38               	clrf	(btemp+3)^0,c
 12637  015EA8  D08B               	goto	l2261
 12638  015EAA                     l6812:
 12639                           
 12640                           ;stkvar	_f1 @ sp[(-2)+-4]
 12641  015EAA  0EFA               	movlw	-6
 12642  015EAC  006F FF8C  F03D    	movff	plusw1,btemp+8
 12643  015EB2  0EFB               	movlw	-5
 12644  015EB4  006F FF8C  F03E    	movff	plusw1,btemp+9
 12645  015EBA  0EFC               	movlw	-4
 12646  015EBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12647  015EC2  0EFD               	movlw	-3
 12648  015EC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12649  015ECA  0E20               	movlw	32
 12650  015ECC  D005               	goto	u6000
 12651  015ECE                     u6005:
 12652  015ECE  90D8               	bcf	status,0,c
 12653  015ED0  3240               	rrcf	(btemp+11)^0,f,c
 12654  015ED2  323F               	rrcf	(btemp+10)^0,f,c
 12655  015ED4  323E               	rrcf	(btemp+9)^0,f,c
 12656  015ED6  323D               	rrcf	(btemp+8)^0,f,c
 12657  015ED8                     u6000:
 12658  015ED8  2EE8               	decfsz	wreg,f,c
 12659  015EDA  D7F9               	goto	u6005
 12660                           
 12661                           ;stkvar	_sign1 @ sp[(-2)+1]
 12662  015EDC  0EFF               	movlw	-1
 12663  015EDE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12664                           
 12665                           ;stkvar	_f1 @ sp[(-2)+-4]
 12666  015EE4  0EFC               	movlw	-4
 12667  015EE6  8EE3               	bsf	plusw1,7,c
 12668                           
 12669                           ;stkvar	_f1 @ sp[(-2)+-4]
 12670  015EE8  50E1               	movf	fsr1l,w,c
 12671  015EEA  0FFA               	addlw	-6
 12672  015EEC  6ED9               	movwf	fsr2l,c
 12673  015EEE  50E2               	movf	fsr1h,w,c
 12674  015EF0  6EDA               	movwf	fsr2h,c
 12675  015EF2  0EFF               	movlw	255
 12676  015EF4  22DA               	addwfc	fsr2h,f,c
 12677  015EF6  0EFF               	movlw	255
 12678  015EF8  16DE               	andwf	postinc2,f,c
 12679  015EFA  0EFF               	movlw	255
 12680  015EFC  16DE               	andwf	postinc2,f,c
 12681  015EFE  0EFF               	movlw	255
 12682  015F00  16DE               	andwf	postinc2,f,c
 12683  015F02  0E00               	movlw	0
 12684  015F04  16DE               	andwf	postinc2,f,c
 12685                           
 12686                           ;stkvar	_exp1 @ sp[(-2)+0]
 12687  015F06  0EFE               	movlw	-2
 12688  015F08  006F FF8C  F035    	movff	plusw1,btemp
 12689  015F0E  0E96               	movlw	150
 12690  015F10  5E35               	subwf	btemp^0,f,c
 12691  015F12  0EFE               	movlw	-2
 12692  015F14  0060  F0D7  FFE3   	movff	btemp,plusw1
 12693                           
 12694                           ;stkvar	_exp1 @ sp[(-2)+0]
 12695  015F1A  0EFE               	movlw	-2
 12696  015F1C  AEE3               	btfss	plusw1,7,c
 12697  015F1E  D014               	goto	l6830
 12698                           
 12699                           ;stkvar	_exp1 @ sp[(-2)+0]
 12700  015F20  0EFE               	movlw	-2
 12701  015F22  50E3               	movf	plusw1,w,c
 12702  015F24  0A80               	xorlw	128
 12703  015F26  0F97               	addlw	151
 12704  015F28  A0D8               	btfss	status,0,c
 12705  015F2A  D7B9               	goto	u5990
 12706  015F2C                     l6828:
 12707                           
 12708                           ;stkvar	_f1 @ sp[(-2)+-4]
 12709  015F2C  90D8               	bcf	status,0,c
 12710  015F2E  0EFD               	movlw	-3
 12711  015F30  32E3               	rrcf	plusw1,f,c
 12712  015F32  0EFC               	movlw	-4
 12713  015F34  32E3               	rrcf	plusw1,f,c
 12714  015F36  0EFB               	movlw	-5
 12715  015F38  32E3               	rrcf	plusw1,f,c
 12716  015F3A  0EFA               	movlw	-6
 12717  015F3C  32E3               	rrcf	plusw1,f,c
 12718                           
 12719                           ;stkvar	_exp1 @ sp[(-2)+0]
 12720  015F3E  0EFE               	movlw	-2
 12721  015F40  2AE3               	incf	plusw1,f,c
 12722  015F42  B4D8               	btfsc	status,2,c
 12723  015F44  D018               	goto	u6050
 12724  015F46  D7F2               	goto	l6828
 12725  015F48                     l6830:
 12726                           
 12727                           ;stkvar	_exp1 @ sp[(-2)+0]
 12728  015F48  0EFE               	movlw	-2
 12729  015F4A  006F FF8C  F035    	movff	plusw1,btemp
 12730  015F50  0E1F               	movlw	31
 12731  015F52  6435               	cpfsgt	btemp^0,c
 12732  015F54  D00C               	goto	l6838
 12733  015F56  D7A3               	goto	u5990
 12734  015F58                     l6836:
 12735                           
 12736                           ;stkvar	_f1 @ sp[(-2)+-4]
 12737  015F58  90D8               	bcf	status,0,c
 12738  015F5A  0EFA               	movlw	-6
 12739  015F5C  36E3               	rlcf	plusw1,f,c
 12740  015F5E  0EFB               	movlw	-5
 12741  015F60  36E3               	rlcf	plusw1,f,c
 12742  015F62  0EFC               	movlw	-4
 12743  015F64  36E3               	rlcf	plusw1,f,c
 12744  015F66  0EFD               	movlw	-3
 12745  015F68  36E3               	rlcf	plusw1,f,c
 12746                           
 12747                           ;stkvar	_exp1 @ sp[(-2)+0]
 12748  015F6A  0EFE               	movlw	-2
 12749  015F6C  06E3               	decf	plusw1,f,c
 12750  015F6E                     l6838:
 12751                           
 12752                           ;stkvar	_exp1 @ sp[(-2)+0]
 12753  015F6E  0EFE               	movlw	-2
 12754  015F70  50E3               	movf	plusw1,w,c
 12755  015F72  A4D8               	btfss	status,2,c
 12756  015F74  D7F1               	goto	l6836
 12757  015F76                     u6050:
 12758                           
 12759                           ;stkvar	_sign1 @ sp[(-2)+1]
 12760  015F76  0EFF               	movlw	-1
 12761  015F78  50E3               	movf	plusw1,w,c
 12762  015F7A  B4D8               	btfsc	status,2,c
 12763  015F7C  D011               	goto	u6070
 12764                           
 12765                           ;stkvar	_f1 @ sp[(-2)+-4]
 12766                           ;stkvar	_f1 @ sp[(-2)+-4]
 12767  015F7E  0EFA               	movlw	-6
 12768  015F80  6CE3               	negf	plusw1,c
 12769  015F82  0EFB               	movlw	-5
 12770  015F84  1EE3               	comf	plusw1,f,c
 12771  015F86  0EFC               	movlw	-4
 12772  015F88  1EE3               	comf	plusw1,f,c
 12773  015F8A  0EFD               	movlw	-3
 12774  015F8C  1EE3               	comf	plusw1,f,c
 12775  015F8E  E308               	bnc	u6070
 12776  015F90  0EFB               	movlw	-5
 12777  015F92  2AE3               	incf	plusw1,f,c
 12778  015F94  E305               	bnc	u6070
 12779  015F96  0EFC               	movlw	-4
 12780  015F98  2AE3               	incf	plusw1,f,c
 12781  015F9A  E302               	bnc	u6070
 12782  015F9C  0EFD               	movlw	-3
 12783  015F9E  2AE3               	incf	plusw1,f,c
 12784  015FA0                     u6070:
 12785                           
 12786                           ;stkvar	_f1 @ sp[(-2)+-4]
 12787  015FA0  0EFA               	movlw	-6
 12788  015FA2  006F FF8C  F035    	movff	plusw1,btemp
 12789  015FA8  0EFB               	movlw	-5
 12790  015FAA  006F FF8C  F036    	movff	plusw1,btemp+1
 12791  015FB0  0EFC               	movlw	-4
 12792  015FB2  006F FF8C  F037    	movff	plusw1,btemp+2
 12793  015FB8  0EFD               	movlw	-3
 12794  015FBA  006F FF8C  F038    	movff	plusw1,btemp+3
 12795  015FC0                     l2261:
 12796                           
 12797                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12798  015FC0  0EFA               	movlw	250
 12799  015FC2  26E1               	addwf	fsr1l,f,c
 12800  015FC4  0EFF               	movlw	255
 12801  015FC6  22E2               	addwfc	fsr1h,f,c
 12802  015FC8  0012               	return		;funcret
 12803  015FCA                     __end_of___fltol:
 12804                           	opt callstack 0
 12805                           
 12806 ;; *************** function ___flsub *****************
 12807 ;; Defined at:
 12808 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;  b               4  [STACK] long 
 12811 ;;  a               4  [STACK] long 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;		None
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  4  [STACK] long 
 12816 ;; Registers used:
 12817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12827 ;;Total ram usage:        0 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    7
 12830 ;; This function calls:
 12831 ;;		___fladd
 12832 ;; This function is called by:
 12833 ;;		_lp_filter
 12834 ;;		_efgtoa
 12835 ;; This function uses a reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text46
 12839  0178B8                     __ptext46:
 12840                           	opt callstack 0
 12841  0178B8                     ___flsub:
 12842                           	opt callstack 16
 12843                           
 12844                           ;stkvar	_a @ sp[(0)+-8]
 12845                           
 12846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12847                           ;incstack = 0
 12848  0178B8  0EFB               	movlw	-5
 12849  0178BA  7EE3               	btg	plusw1,7,c
 12850                           
 12851                           ;stkvar	_a @ sp[(0)+-8]
 12852  0178BC  0EF8               	movlw	-8
 12853  0178BE  006F FF8F FFE6     	movff	plusw1,postinc1
 12854  0178C4  006F FF8F FFE6     	movff	plusw1,postinc1
 12855  0178CA  006F FF8F FFE6     	movff	plusw1,postinc1
 12856  0178D0  006F FF8F FFE6     	movff	plusw1,postinc1
 12857                           
 12858                           ;stkvar	_b @ sp[(-4)+-4]
 12859  0178D6  0EF8               	movlw	-8
 12860  0178D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12861  0178DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12862  0178E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12863  0178EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12864  0178F0  ECD6  F092         	call	___fladd	;wreg free
 12865                           
 12866                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12867  0178F4  0EF8               	movlw	248
 12868  0178F6  26E1               	addwf	fsr1l,f,c
 12869  0178F8  0EFF               	movlw	255
 12870  0178FA  22E2               	addwfc	fsr1h,f,c
 12871  0178FC  0012               	return		;funcret
 12872  0178FE                     __end_of___flsub:
 12873                           	opt callstack 0
 12874                           
 12875 ;; *************** function ___fladd *****************
 12876 ;; Defined at:
 12877 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  b               4  [STACK] long 
 12880 ;;  a               4  [STACK] long 
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  grs             1  [STACK] unsigned char 
 12883 ;;  bexp            1  [STACK] unsigned char 
 12884 ;;  aexp            1  [STACK] unsigned char 
 12885 ;;  signs           1  [STACK] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  4  [STACK] unsigned char 
 12888 ;; Registers used:
 12889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12899 ;;Total ram usage:        0 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:    6
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_conv_raw_result
 12906 ;;		_lp_filter
 12907 ;;		_efgtoa
 12908 ;;		___flsub
 12909 ;; This function uses a reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text47
 12913  0125AC                     __ptext47:
 12914                           	opt callstack 0
 12915  0125AC                     ___fladd:
 12916                           	opt callstack 0
 12917                           
 12918                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12919  0125AC  52E6               	movf	postinc1,f,c
 12920  0125AE  52E6               	movf	postinc1,f,c
 12921  0125B0  52E6               	movf	postinc1,f,c
 12922  0125B2  52E6               	movf	postinc1,f,c
 12923                           
 12924                           ;stkvar	_b @ sp[(-4)+-4]
 12925                           
 12926                           ;incstack = 0
 12927  0125B4  0EFB               	movlw	251
 12928  0125B6  24E1               	addwf	fsr1l,w,c
 12929  0125B8  6ED9               	movwf	fsr2l,c
 12930  0125BA  0EFF               	movlw	255
 12931  0125BC  20E2               	addwfc	fsr1h,w,c
 12932  0125BE  6EDA               	movwf	fsr2h,c
 12933  0125C0  50DF               	movf	indf2,w,c
 12934  0125C2  6E40               	movwf	(btemp+11)^0,c
 12935  0125C4  0E80               	movlw	128
 12936  0125C6  1640               	andwf	(btemp+11)^0,f,c
 12937                           
 12938                           ;stkvar	_signs @ sp[(-4)+3]
 12939  0125C8  0EFF               	movlw	-1
 12940  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12941                           
 12942                           ;stkvar	_b @ sp[(-4)+-4]
 12943  0125D0  0EFB               	movlw	251
 12944  0125D2  24E1               	addwf	fsr1l,w,c
 12945  0125D4  6ED9               	movwf	fsr2l,c
 12946  0125D6  0EFF               	movlw	255
 12947  0125D8  20E2               	addwfc	fsr1h,w,c
 12948  0125DA  6EDA               	movwf	fsr2h,c
 12949  0125DC  50DF               	movf	indf2,w,c
 12950  0125DE  6E40               	movwf	(btemp+11)^0,c
 12951  0125E0  90D8               	bcf	status,0,c
 12952  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 12953  0125E4  6E3F               	movwf	(btemp+10)^0,c
 12954                           
 12955                           ;stkvar	_bexp @ sp[(-4)+1]
 12956  0125E6  0EFD               	movlw	-3
 12957  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12958                           
 12959                           ;stkvar	_b @ sp[(-4)+-4]
 12960  0125EE  0EFA               	movlw	250
 12961  0125F0  24E1               	addwf	fsr1l,w,c
 12962  0125F2  6ED9               	movwf	fsr2l,c
 12963  0125F4  0EFF               	movlw	255
 12964  0125F6  20E2               	addwfc	fsr1h,w,c
 12965  0125F8  6EDA               	movwf	fsr2h,c
 12966  0125FA  AEDF               	btfss	indf2,7,c
 12967  0125FC  D002               	goto	l5926
 12968                           
 12969                           ;stkvar	_bexp @ sp[(-4)+1]
 12970  0125FE  0EFD               	movlw	-3
 12971  012600  80E3               	bsf	plusw1,0,c
 12972  012602                     l5926:
 12973                           
 12974                           ;stkvar	_bexp @ sp[(-4)+1]
 12975  012602  0EFD               	movlw	-3
 12976  012604  50E3               	movf	plusw1,w,c
 12977  012606  B4D8               	btfsc	status,2,c
 12978  012608  D027               	goto	l5936
 12979                           
 12980                           ;stkvar	_bexp @ sp[(-4)+1]
 12981  01260A  0EFD               	movlw	-3
 12982  01260C  28E3               	incf	plusw1,w,c
 12983  01260E  A4D8               	btfss	status,2,c
 12984  012610  D018               	goto	l5932
 12985  012612  0E00               	movlw	0
 12986  012614  6E3D               	movwf	(btemp+8)^0,c
 12987  012616  0E00               	movlw	0
 12988  012618  6E3E               	movwf	(btemp+9)^0,c
 12989  01261A  0E00               	movlw	0
 12990  01261C  6E3F               	movwf	(btemp+10)^0,c
 12991  01261E  0E00               	movlw	0
 12992  012620  6E40               	movwf	(btemp+11)^0,c
 12993                           
 12994                           ;stkvar	_b @ sp[(-4)+-4]
 12995  012622  0EF8               	movlw	-8
 12996  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12997  01262A  0EF9               	movlw	-7
 12998  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12999  012632  0EFA               	movlw	-6
 13000  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13001  01263A  0EFB               	movlw	-5
 13002  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13003  012642                     l5932:
 13004                           
 13005                           ;stkvar	_b @ sp[(-4)+-4]
 13006  012642  0EFA               	movlw	-6
 13007  012644  8EE3               	bsf	plusw1,7,c
 13008                           
 13009                           ;stkvar	_b @ sp[(-4)+-4]
 13010  012646  0EFB               	movlw	251
 13011  012648  24E1               	addwf	fsr1l,w,c
 13012  01264A  6ED9               	movwf	fsr2l,c
 13013  01264C  0EFF               	movlw	255
 13014  01264E  20E2               	addwfc	fsr1h,w,c
 13015  012650  6EDA               	movwf	fsr2h,c
 13016  012652  0E00               	movlw	0
 13017  012654  6EDF               	movwf	indf2,c
 13018  012656  D018               	goto	l5938
 13019  012658                     l5936:
 13020  012658  0E00               	movlw	0
 13021  01265A  6E3D               	movwf	(btemp+8)^0,c
 13022  01265C  0E00               	movlw	0
 13023  01265E  6E3E               	movwf	(btemp+9)^0,c
 13024  012660  0E00               	movlw	0
 13025  012662  6E3F               	movwf	(btemp+10)^0,c
 13026  012664  0E00               	movlw	0
 13027  012666  6E40               	movwf	(btemp+11)^0,c
 13028                           
 13029                           ;stkvar	_b @ sp[(-4)+-4]
 13030  012668  0EF8               	movlw	-8
 13031  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13032  012670  0EF9               	movlw	-7
 13033  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13034  012678  0EFA               	movlw	-6
 13035  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13036  012680  0EFB               	movlw	-5
 13037  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 13038  012688                     l5938:
 13039                           
 13040                           ;stkvar	_a @ sp[(-4)+-8]
 13041  012688  0EF7               	movlw	247
 13042  01268A  24E1               	addwf	fsr1l,w,c
 13043  01268C  6ED9               	movwf	fsr2l,c
 13044  01268E  0EFF               	movlw	255
 13045  012690  20E2               	addwfc	fsr1h,w,c
 13046  012692  6EDA               	movwf	fsr2h,c
 13047  012694  50DF               	movf	indf2,w,c
 13048  012696  6E40               	movwf	(btemp+11)^0,c
 13049  012698  0E80               	movlw	128
 13050  01269A  1640               	andwf	(btemp+11)^0,f,c
 13051                           
 13052                           ;stkvar	_aexp @ sp[(-4)+2]
 13053  01269C  0EFE               	movlw	-2
 13054  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13055                           
 13056                           ;stkvar	_signs @ sp[(-4)+3]
 13057                           ;stkvar	_aexp @ sp[(-4)+2]
 13058  0126A4  50E1               	movf	fsr1l,w,c
 13059  0126A6  0FFE               	addlw	-2
 13060  0126A8  6ED9               	movwf	fsr2l,c
 13061  0126AA  50E2               	movf	fsr1h,w,c
 13062  0126AC  6EDA               	movwf	fsr2h,c
 13063  0126AE  0EFF               	movlw	255
 13064  0126B0  22DA               	addwfc	fsr2h,f,c
 13065  0126B2  0EFF               	movlw	-1
 13066  0126B4  50E3               	movf	plusw1,w,c
 13067  0126B6  18DE               	xorwf	postinc2,w,c
 13068  0126B8  B4D8               	btfsc	status,2,c
 13069  0126BA  D002               	goto	l5944
 13070                           
 13071                           ;stkvar	_signs @ sp[(-4)+3]
 13072  0126BC  0EFF               	movlw	-1
 13073  0126BE  8CE3               	bsf	plusw1,6,c
 13074  0126C0                     l5944:
 13075                           
 13076                           ;stkvar	_a @ sp[(-4)+-8]
 13077  0126C0  0EF7               	movlw	247
 13078  0126C2  24E1               	addwf	fsr1l,w,c
 13079  0126C4  6ED9               	movwf	fsr2l,c
 13080  0126C6  0EFF               	movlw	255
 13081  0126C8  20E2               	addwfc	fsr1h,w,c
 13082  0126CA  6EDA               	movwf	fsr2h,c
 13083  0126CC  50DF               	movf	indf2,w,c
 13084  0126CE  6E40               	movwf	(btemp+11)^0,c
 13085  0126D0  90D8               	bcf	status,0,c
 13086  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 13087  0126D4  6E3F               	movwf	(btemp+10)^0,c
 13088                           
 13089                           ;stkvar	_aexp @ sp[(-4)+2]
 13090  0126D6  0EFE               	movlw	-2
 13091  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13092                           
 13093                           ;stkvar	_a @ sp[(-4)+-8]
 13094  0126DE  0EF6               	movlw	246
 13095  0126E0  24E1               	addwf	fsr1l,w,c
 13096  0126E2  6ED9               	movwf	fsr2l,c
 13097  0126E4  0EFF               	movlw	255
 13098  0126E6  20E2               	addwfc	fsr1h,w,c
 13099  0126E8  6EDA               	movwf	fsr2h,c
 13100  0126EA  AEDF               	btfss	indf2,7,c
 13101  0126EC  D002               	goto	l5950
 13102                           
 13103                           ;stkvar	_aexp @ sp[(-4)+2]
 13104  0126EE  0EFE               	movlw	-2
 13105  0126F0  80E3               	bsf	plusw1,0,c
 13106  0126F2                     l5950:
 13107                           
 13108                           ;stkvar	_aexp @ sp[(-4)+2]
 13109  0126F2  0EFE               	movlw	-2
 13110  0126F4  50E3               	movf	plusw1,w,c
 13111  0126F6  B4D8               	btfsc	status,2,c
 13112  0126F8  D027               	goto	l5960
 13113                           
 13114                           ;stkvar	_aexp @ sp[(-4)+2]
 13115  0126FA  0EFE               	movlw	-2
 13116  0126FC  28E3               	incf	plusw1,w,c
 13117  0126FE  A4D8               	btfss	status,2,c
 13118  012700  D018               	goto	l5956
 13119  012702  0E00               	movlw	0
 13120  012704  6E3D               	movwf	(btemp+8)^0,c
 13121  012706  0E00               	movlw	0
 13122  012708  6E3E               	movwf	(btemp+9)^0,c
 13123  01270A  0E00               	movlw	0
 13124  01270C  6E3F               	movwf	(btemp+10)^0,c
 13125  01270E  0E00               	movlw	0
 13126  012710  6E40               	movwf	(btemp+11)^0,c
 13127                           
 13128                           ;stkvar	_a @ sp[(-4)+-8]
 13129  012712  0EF4               	movlw	-12
 13130  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13131  01271A  0EF5               	movlw	-11
 13132  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13133  012722  0EF6               	movlw	-10
 13134  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13135  01272A  0EF7               	movlw	-9
 13136  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13137  012732                     l5956:
 13138                           
 13139                           ;stkvar	_a @ sp[(-4)+-8]
 13140  012732  0EF6               	movlw	-10
 13141  012734  8EE3               	bsf	plusw1,7,c
 13142                           
 13143                           ;stkvar	_a @ sp[(-4)+-8]
 13144  012736  0EF7               	movlw	247
 13145  012738  24E1               	addwf	fsr1l,w,c
 13146  01273A  6ED9               	movwf	fsr2l,c
 13147  01273C  0EFF               	movlw	255
 13148  01273E  20E2               	addwfc	fsr1h,w,c
 13149  012740  6EDA               	movwf	fsr2h,c
 13150  012742  0E00               	movlw	0
 13151  012744  6EDF               	movwf	indf2,c
 13152  012746  D018               	goto	l5962
 13153  012748                     l5960:
 13154  012748  0E00               	movlw	0
 13155  01274A  6E3D               	movwf	(btemp+8)^0,c
 13156  01274C  0E00               	movlw	0
 13157  01274E  6E3E               	movwf	(btemp+9)^0,c
 13158  012750  0E00               	movlw	0
 13159  012752  6E3F               	movwf	(btemp+10)^0,c
 13160  012754  0E00               	movlw	0
 13161  012756  6E40               	movwf	(btemp+11)^0,c
 13162                           
 13163                           ;stkvar	_a @ sp[(-4)+-8]
 13164  012758  0EF4               	movlw	-12
 13165  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13166  012760  0EF5               	movlw	-11
 13167  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13168  012768  0EF6               	movlw	-10
 13169  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13170  012770  0EF7               	movlw	-9
 13171  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 13172  012778                     l5962:
 13173                           
 13174                           ;stkvar	_bexp @ sp[(-4)+1]
 13175                           ;stkvar	_aexp @ sp[(-4)+2]
 13176  012778  50E1               	movf	fsr1l,w,c
 13177  01277A  0FFE               	addlw	-2
 13178  01277C  6ED9               	movwf	fsr2l,c
 13179  01277E  50E2               	movf	fsr1h,w,c
 13180  012780  6EDA               	movwf	fsr2h,c
 13181  012782  0EFF               	movlw	255
 13182  012784  22DA               	addwfc	fsr2h,f,c
 13183  012786  0EFD               	movlw	-3
 13184  012788  50E3               	movf	plusw1,w,c
 13185  01278A  5CDE               	subwf	postinc2,w,c
 13186  01278C  B0D8               	btfsc	status,0,c
 13187  01278E  D0A4               	goto	l5998
 13188                           
 13189                           ;stkvar	_signs @ sp[(-4)+3]
 13190  012790  0EFF               	movlw	-1
 13191  012792  ACE3               	btfss	plusw1,6,c
 13192  012794  D002               	goto	l5968
 13193                           
 13194                           ;stkvar	_signs @ sp[(-4)+3]
 13195  012796  0EFF               	movlw	-1
 13196  012798  7EE3               	btg	plusw1,7,c
 13197  01279A                     l5968:
 13198                           
 13199                           ;stkvar	_bexp @ sp[(-4)+1]
 13200                           ;stkvar	_grs @ sp[(-4)+0]
 13201  01279A  0EFD               	movlw	-3
 13202  01279C  006F FF8C  F035    	movff	plusw1,btemp
 13203  0127A2  0EFC               	movlw	-4
 13204  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13205                           
 13206                           ;stkvar	_aexp @ sp[(-4)+2]
 13207                           ;stkvar	_bexp @ sp[(-4)+1]
 13208  0127AA  0EFE               	movlw	-2
 13209  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 13210  0127B2  0EFD               	movlw	-3
 13211  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13212                           
 13213                           ;stkvar	_grs @ sp[(-4)+0]
 13214                           ;stkvar	_aexp @ sp[(-4)+2]
 13215  0127BA  0EFC               	movlw	-4
 13216  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 13217  0127C2  0EFE               	movlw	-2
 13218  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13219                           
 13220                           ;stkvar	_b @ sp[(-4)+-4]
 13221                           ;stkvar	_grs @ sp[(-4)+0]
 13222  0127CA  0EF8               	movlw	-8
 13223  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 13224  0127D2  0EFC               	movlw	-4
 13225  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13226                           
 13227                           ;stkvar	_a @ sp[(-4)+-8]
 13228                           ;stkvar	_b @ sp[(-4)+-4]
 13229  0127DA  0EF4               	movlw	-12
 13230  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 13231  0127E2  0EF8               	movlw	-8
 13232  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13233                           
 13234                           ;stkvar	_grs @ sp[(-4)+0]
 13235                           ;stkvar	_a @ sp[(-4)+-8]
 13236  0127EA  0EFC               	movlw	-4
 13237  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 13238  0127F2  0EF4               	movlw	-12
 13239  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13240                           
 13241                           ;stkvar	_b @ sp[(-4)+-4]
 13242  0127FA  0EF9               	movlw	249
 13243  0127FC  24E1               	addwf	fsr1l,w,c
 13244  0127FE  6ED9               	movwf	fsr2l,c
 13245  012800  0EFF               	movlw	255
 13246  012802  20E2               	addwfc	fsr1h,w,c
 13247  012804  6EDA               	movwf	fsr2h,c
 13248  012806  50DF               	movf	indf2,w,c
 13249  012808  6E40               	movwf	(btemp+11)^0,c
 13250                           
 13251                           ;stkvar	_grs @ sp[(-4)+0]
 13252  01280A  0EFC               	movlw	-4
 13253  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13254                           
 13255                           ;stkvar	_a @ sp[(-4)+-8]
 13256  012812  0EF5               	movlw	245
 13257  012814  24E1               	addwf	fsr1l,w,c
 13258  012816  6ED9               	movwf	fsr2l,c
 13259  012818  0EFF               	movlw	255
 13260  01281A  20E2               	addwfc	fsr1h,w,c
 13261  01281C  6EDA               	movwf	fsr2h,c
 13262                           
 13263                           ;stkvar	_b @ sp[(-4)+-4]
 13264  01281E  0EF9               	movlw	249
 13265  012820  24E1               	addwf	fsr1l,w,c
 13266  012822  6EE9               	movwf	fsr0l,c
 13267  012824  0EFF               	movlw	255
 13268  012826  20E2               	addwfc	fsr1h,w,c
 13269  012828  6EEA               	movwf	fsr0h,c
 13270  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13271                           
 13272                           ;stkvar	_grs @ sp[(-4)+0]
 13273                           ;stkvar	_a @ sp[(-4)+-8]
 13274  012830  0EF5               	movlw	245
 13275  012832  24E1               	addwf	fsr1l,w,c
 13276  012834  6ED9               	movwf	fsr2l,c
 13277  012836  0EFF               	movlw	255
 13278  012838  20E2               	addwfc	fsr1h,w,c
 13279  01283A  6EDA               	movwf	fsr2h,c
 13280  01283C  0EFC               	movlw	-4
 13281  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13282                           
 13283                           ;stkvar	_b @ sp[(-4)+-4]
 13284  012844  0EFA               	movlw	250
 13285  012846  24E1               	addwf	fsr1l,w,c
 13286  012848  6ED9               	movwf	fsr2l,c
 13287  01284A  0EFF               	movlw	255
 13288  01284C  20E2               	addwfc	fsr1h,w,c
 13289  01284E  6EDA               	movwf	fsr2h,c
 13290  012850  50DF               	movf	indf2,w,c
 13291  012852  6E40               	movwf	(btemp+11)^0,c
 13292                           
 13293                           ;stkvar	_grs @ sp[(-4)+0]
 13294  012854  0EFC               	movlw	-4
 13295  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13296                           
 13297                           ;stkvar	_a @ sp[(-4)+-8]
 13298  01285C  0EF6               	movlw	246
 13299  01285E  24E1               	addwf	fsr1l,w,c
 13300  012860  6ED9               	movwf	fsr2l,c
 13301  012862  0EFF               	movlw	255
 13302  012864  20E2               	addwfc	fsr1h,w,c
 13303  012866  6EDA               	movwf	fsr2h,c
 13304                           
 13305                           ;stkvar	_b @ sp[(-4)+-4]
 13306  012868  0EFA               	movlw	250
 13307  01286A  24E1               	addwf	fsr1l,w,c
 13308  01286C  6EE9               	movwf	fsr0l,c
 13309  01286E  0EFF               	movlw	255
 13310  012870  20E2               	addwfc	fsr1h,w,c
 13311  012872  6EEA               	movwf	fsr0h,c
 13312  012874  006F FF7F FFEF     	movff	indf2,indf0
 13313                           
 13314                           ;stkvar	_grs @ sp[(-4)+0]
 13315                           ;stkvar	_a @ sp[(-4)+-8]
 13316  01287A  0EF6               	movlw	246
 13317  01287C  24E1               	addwf	fsr1l,w,c
 13318  01287E  6ED9               	movwf	fsr2l,c
 13319  012880  0EFF               	movlw	255
 13320  012882  20E2               	addwfc	fsr1h,w,c
 13321  012884  6EDA               	movwf	fsr2h,c
 13322  012886  0EFC               	movlw	-4
 13323  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13324                           
 13325                           ;stkvar	_b @ sp[(-4)+-4]
 13326  01288E  0EFB               	movlw	251
 13327  012890  24E1               	addwf	fsr1l,w,c
 13328  012892  6ED9               	movwf	fsr2l,c
 13329  012894  0EFF               	movlw	255
 13330  012896  20E2               	addwfc	fsr1h,w,c
 13331  012898  6EDA               	movwf	fsr2h,c
 13332  01289A  50DF               	movf	indf2,w,c
 13333  01289C  6E40               	movwf	(btemp+11)^0,c
 13334                           
 13335                           ;stkvar	_grs @ sp[(-4)+0]
 13336  01289E  0EFC               	movlw	-4
 13337  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13338                           
 13339                           ;stkvar	_a @ sp[(-4)+-8]
 13340  0128A6  0EF7               	movlw	247
 13341  0128A8  24E1               	addwf	fsr1l,w,c
 13342  0128AA  6ED9               	movwf	fsr2l,c
 13343  0128AC  0EFF               	movlw	255
 13344  0128AE  20E2               	addwfc	fsr1h,w,c
 13345  0128B0  6EDA               	movwf	fsr2h,c
 13346                           
 13347                           ;stkvar	_b @ sp[(-4)+-4]
 13348  0128B2  0EFB               	movlw	251
 13349  0128B4  24E1               	addwf	fsr1l,w,c
 13350  0128B6  6EE9               	movwf	fsr0l,c
 13351  0128B8  0EFF               	movlw	255
 13352  0128BA  20E2               	addwfc	fsr1h,w,c
 13353  0128BC  6EEA               	movwf	fsr0h,c
 13354  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13355                           
 13356                           ;stkvar	_grs @ sp[(-4)+0]
 13357                           ;stkvar	_a @ sp[(-4)+-8]
 13358  0128C4  0EF7               	movlw	247
 13359  0128C6  24E1               	addwf	fsr1l,w,c
 13360  0128C8  6ED9               	movwf	fsr2l,c
 13361  0128CA  0EFF               	movlw	255
 13362  0128CC  20E2               	addwfc	fsr1h,w,c
 13363  0128CE  6EDA               	movwf	fsr2h,c
 13364  0128D0  0EFC               	movlw	-4
 13365  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13366  0128D8                     l5998:
 13367                           
 13368                           ;stkvar	_grs @ sp[(-4)+0]
 13369  0128D8  0EFC               	movlw	-4
 13370  0128DA  6AE3               	clrf	plusw1,c
 13371                           
 13372                           ;stkvar	_aexp @ sp[(-4)+2]
 13373  0128DC  0EFE               	movlw	-2
 13374  0128DE  50E3               	movf	plusw1,w,c
 13375  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13376  0128E2  6A40               	clrf	(btemp+11)^0,c
 13377                           
 13378                           ;stkvar	_bexp @ sp[(-4)+1]
 13379  0128E4  0EFD               	movlw	-3
 13380  0128E6  50E3               	movf	plusw1,w,c
 13381  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13382  0128EA  0E00               	movlw	0
 13383  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13384  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13385  0128F0  D062               	goto	l6022
 13386  0128F2  5040               	movf	(btemp+11)^0,w,c
 13387  0128F4  E104               	bnz	u4370
 13388  0128F6  0E1A               	movlw	26
 13389  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13390  0128FA  A0D8               	btfss	status,0,c
 13391  0128FC  D05C               	goto	l6022
 13392  0128FE                     u4370:
 13393                           
 13394                           ;stkvar	_b @ sp[(-4)+-4]
 13395  0128FE  0EF8               	movlw	-8
 13396  012900  50E3               	movf	plusw1,w,c
 13397  012902  E10A               	bnz	u4381
 13398  012904  0EF9               	movlw	-7
 13399  012906  50E3               	movf	plusw1,w,c
 13400  012908  E107               	bnz	u4381
 13401  01290A  0EFA               	movlw	-6
 13402  01290C  50E3               	movf	plusw1,w,c
 13403  01290E  E104               	bnz	u4381
 13404  012910  0EFB               	movlw	-5
 13405  012912  50E3               	movf	plusw1,w,c
 13406  012914  B4D8               	btfsc	status,2,c
 13407  012916  D003               	goto	u4380
 13408  012918                     u4381:
 13409  012918  6A40               	clrf	(btemp+11)^0,c
 13410  01291A  2A40               	incf	(btemp+11)^0,f,c
 13411  01291C  D001               	goto	u4398
 13412  01291E                     u4380:
 13413  01291E  6A40               	clrf	(btemp+11)^0,c
 13414  012920                     u4398:
 13415                           
 13416                           ;stkvar	_grs @ sp[(-4)+0]
 13417  012920  0EFC               	movlw	-4
 13418  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13419                           
 13420                           ;stkvar	_b @ sp[(-4)+-4]
 13421  012928  0EF8               	movlw	-8
 13422  01292A  6AE3               	clrf	plusw1,c
 13423  01292C  0EF9               	movlw	-7
 13424  01292E  6AE3               	clrf	plusw1,c
 13425  012930  0EFA               	movlw	-6
 13426  012932  6AE3               	clrf	plusw1,c
 13427  012934  0EFB               	movlw	-5
 13428  012936  6AE3               	clrf	plusw1,c
 13429                           
 13430                           ;stkvar	_aexp @ sp[(-4)+2]
 13431                           ;stkvar	_bexp @ sp[(-4)+1]
 13432  012938  0EFE               	movlw	-2
 13433  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13434  012940  0EFD               	movlw	-3
 13435  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13436  012948  D042               	goto	u4430
 13437  01294A                     l6008:
 13438                           
 13439                           ;stkvar	_grs @ sp[(-4)+0]
 13440  01294A  0EFC               	movlw	-4
 13441  01294C  A0E3               	btfss	plusw1,0,c
 13442  01294E  D00D               	goto	l6012
 13443                           
 13444                           ;stkvar	_grs @ sp[(-4)+0]
 13445  012950  0EFC               	movlw	-4
 13446  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13447  012958  90D8               	bcf	status,0,c
 13448  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13449  01295C  0E01               	movlw	1
 13450  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13451                           
 13452                           ;stkvar	_grs @ sp[(-4)+0]
 13453  012960  0EFC               	movlw	-4
 13454  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13455  012968  D009               	goto	l6014
 13456  01296A                     l6012:
 13457                           
 13458                           ;stkvar	_grs @ sp[(-4)+0]
 13459  01296A  50E1               	movf	fsr1l,w,c
 13460  01296C  0FFC               	addlw	-4
 13461  01296E  6ED9               	movwf	fsr2l,c
 13462  012970  50E2               	movf	fsr1h,w,c
 13463  012972  6EDA               	movwf	fsr2h,c
 13464  012974  0EFF               	movlw	255
 13465  012976  22DA               	addwfc	fsr2h,f,c
 13466  012978  90D8               	bcf	status,0,c
 13467  01297A  32DF               	rrcf	indf2,f,c
 13468  01297C                     l6014:
 13469                           
 13470                           ;stkvar	_b @ sp[(-4)+-4]
 13471  01297C  0EF8               	movlw	-8
 13472  01297E  A0E3               	btfss	plusw1,0,c
 13473  012980  D002               	goto	l6018
 13474                           
 13475                           ;stkvar	_grs @ sp[(-4)+0]
 13476  012982  0EFC               	movlw	-4
 13477  012984  8EE3               	bsf	plusw1,7,c
 13478  012986                     l6018:
 13479  012986  0E01               	movlw	1
 13480  012988  6E40               	movwf	(btemp+11)^0,c
 13481                           
 13482                           ;stkvar	_b @ sp[(-4)+-4]
 13483  01298A  50E1               	movf	fsr1l,w,c
 13484  01298C  0FF8               	addlw	-8
 13485  01298E  6ED9               	movwf	fsr2l,c
 13486  012990  50E2               	movf	fsr1h,w,c
 13487  012992  6EDA               	movwf	fsr2h,c
 13488  012994  0EFF               	movlw	255
 13489  012996  22DA               	addwfc	fsr2h,f,c
 13490  012998  2840               	incf	(btemp+11)^0,w,c
 13491  01299A  52DE               	movf	postinc2,f,c
 13492  01299C  D008               	goto	u4420
 13493  01299E                     u4425:
 13494  01299E  52DE               	movf	postinc2,f,c
 13495  0129A0  90D8               	bcf	status,0,c
 13496  0129A2  BEDC               	btfsc	preinc2,7,c
 13497  0129A4  80D8               	bsf	status,0,c
 13498  0129A6  32DD               	rrcf	postdec2,f,c
 13499  0129A8  32DD               	rrcf	postdec2,f,c
 13500  0129AA  32DD               	rrcf	postdec2,f,c
 13501  0129AC  32DE               	rrcf	postinc2,f,c
 13502  0129AE                     u4420:
 13503  0129AE  2EE8               	decfsz	wreg,f,c
 13504  0129B0  D7F6               	goto	u4425
 13505                           
 13506                           ;stkvar	_bexp @ sp[(-4)+1]
 13507  0129B2  0EFD               	movlw	-3
 13508  0129B4  2AE3               	incf	plusw1,f,c
 13509  0129B6                     l6022:
 13510                           
 13511                           ;stkvar	_aexp @ sp[(-4)+2]
 13512                           ;stkvar	_bexp @ sp[(-4)+1]
 13513  0129B6  50E1               	movf	fsr1l,w,c
 13514  0129B8  0FFD               	addlw	-3
 13515  0129BA  6ED9               	movwf	fsr2l,c
 13516  0129BC  50E2               	movf	fsr1h,w,c
 13517  0129BE  6EDA               	movwf	fsr2h,c
 13518  0129C0  0EFF               	movlw	255
 13519  0129C2  22DA               	addwfc	fsr2h,f,c
 13520  0129C4  0EFE               	movlw	-2
 13521  0129C6  50E3               	movf	plusw1,w,c
 13522  0129C8  5CDE               	subwf	postinc2,w,c
 13523  0129CA  A0D8               	btfss	status,0,c
 13524  0129CC  D7BE               	goto	l6008
 13525  0129CE                     u4430:
 13526                           
 13527                           ;stkvar	_signs @ sp[(-4)+3]
 13528  0129CE  0EFF               	movlw	-1
 13529  0129D0  BCE3               	btfsc	plusw1,6,c
 13530  0129D2  D066               	goto	l6050
 13531                           
 13532                           ;stkvar	_bexp @ sp[(-4)+1]
 13533  0129D4  0EFD               	movlw	-3
 13534  0129D6  50E3               	movf	plusw1,w,c
 13535  0129D8  B4D8               	btfsc	status,2,c
 13536  0129DA  D0F2               	goto	u4530
 13537                           
 13538                           ;stkvar	_a @ sp[(-4)+-8]
 13539                           ;stkvar	_b @ sp[(-4)+-4]
 13540  0129DC  0EF8               	movlw	-8
 13541  0129DE  50E3               	movf	plusw1,w,c
 13542  0129E0  6E35               	movwf	btemp^0,c
 13543  0129E2  0EF4               	movlw	-12
 13544  0129E4  50E3               	movf	plusw1,w,c
 13545  0129E6  2635               	addwf	btemp^0,f,c
 13546  0129E8  0EF8               	movlw	-8
 13547  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13548  0129F0  0EF9               	movlw	-7
 13549  0129F2  50E3               	movf	plusw1,w,c
 13550  0129F4  6E35               	movwf	btemp^0,c
 13551  0129F6  0EF5               	movlw	-11
 13552  0129F8  50E3               	movf	plusw1,w,c
 13553  0129FA  2235               	addwfc	btemp^0,f,c
 13554  0129FC  0EF9               	movlw	-7
 13555  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13556  012A04  0EFA               	movlw	-6
 13557  012A06  50E3               	movf	plusw1,w,c
 13558  012A08  6E35               	movwf	btemp^0,c
 13559  012A0A  0EF6               	movlw	-10
 13560  012A0C  50E3               	movf	plusw1,w,c
 13561  012A0E  2235               	addwfc	btemp^0,f,c
 13562  012A10  0EFA               	movlw	-6
 13563  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13564  012A18  0EFB               	movlw	-5
 13565  012A1A  50E3               	movf	plusw1,w,c
 13566  012A1C  6E35               	movwf	btemp^0,c
 13567  012A1E  0EF7               	movlw	-9
 13568  012A20  50E3               	movf	plusw1,w,c
 13569  012A22  2235               	addwfc	btemp^0,f,c
 13570  012A24  0EFB               	movlw	-5
 13571  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13572                           
 13573                           ;stkvar	_b @ sp[(-4)+-4]
 13574  012A2C  0EFB               	movlw	-5
 13575  012A2E  A0E3               	btfss	plusw1,0,c
 13576  012A30  D101               	goto	u4570
 13577                           
 13578                           ;stkvar	_grs @ sp[(-4)+0]
 13579  012A32  0EFC               	movlw	-4
 13580  012A34  A0E3               	btfss	plusw1,0,c
 13581  012A36  D00D               	goto	l6040
 13582                           
 13583                           ;stkvar	_grs @ sp[(-4)+0]
 13584  012A38  0EFC               	movlw	-4
 13585  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13586  012A40  90D8               	bcf	status,0,c
 13587  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13588  012A44  0E01               	movlw	1
 13589  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13590                           
 13591                           ;stkvar	_grs @ sp[(-4)+0]
 13592  012A48  0EFC               	movlw	-4
 13593  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13594  012A50  D009               	goto	l6042
 13595  012A52                     l6040:
 13596                           
 13597                           ;stkvar	_grs @ sp[(-4)+0]
 13598  012A52  50E1               	movf	fsr1l,w,c
 13599  012A54  0FFC               	addlw	-4
 13600  012A56  6ED9               	movwf	fsr2l,c
 13601  012A58  50E2               	movf	fsr1h,w,c
 13602  012A5A  6EDA               	movwf	fsr2h,c
 13603  012A5C  0EFF               	movlw	255
 13604  012A5E  22DA               	addwfc	fsr2h,f,c
 13605  012A60  90D8               	bcf	status,0,c
 13606  012A62  32DF               	rrcf	indf2,f,c
 13607  012A64                     l6042:
 13608                           
 13609                           ;stkvar	_b @ sp[(-4)+-4]
 13610  012A64  0EF8               	movlw	-8
 13611  012A66  A0E3               	btfss	plusw1,0,c
 13612  012A68  D002               	goto	l6046
 13613                           
 13614                           ;stkvar	_grs @ sp[(-4)+0]
 13615  012A6A  0EFC               	movlw	-4
 13616  012A6C  8EE3               	bsf	plusw1,7,c
 13617  012A6E                     l6046:
 13618  012A6E  0E01               	movlw	1
 13619  012A70  6E40               	movwf	(btemp+11)^0,c
 13620                           
 13621                           ;stkvar	_b @ sp[(-4)+-4]
 13622  012A72  50E1               	movf	fsr1l,w,c
 13623  012A74  0FF8               	addlw	-8
 13624  012A76  6ED9               	movwf	fsr2l,c
 13625  012A78  50E2               	movf	fsr1h,w,c
 13626  012A7A  6EDA               	movwf	fsr2h,c
 13627  012A7C  0EFF               	movlw	255
 13628  012A7E  22DA               	addwfc	fsr2h,f,c
 13629  012A80  2840               	incf	(btemp+11)^0,w,c
 13630  012A82  52DE               	movf	postinc2,f,c
 13631  012A84  D008               	goto	u4490
 13632  012A86                     u4495:
 13633  012A86  52DE               	movf	postinc2,f,c
 13634  012A88  90D8               	bcf	status,0,c
 13635  012A8A  BEDC               	btfsc	preinc2,7,c
 13636  012A8C  80D8               	bsf	status,0,c
 13637  012A8E  32DD               	rrcf	postdec2,f,c
 13638  012A90  32DD               	rrcf	postdec2,f,c
 13639  012A92  32DD               	rrcf	postdec2,f,c
 13640  012A94  32DE               	rrcf	postinc2,f,c
 13641  012A96                     u4490:
 13642  012A96  2EE8               	decfsz	wreg,f,c
 13643  012A98  D7F6               	goto	u4495
 13644                           
 13645                           ;stkvar	_bexp @ sp[(-4)+1]
 13646  012A9A  0EFD               	movlw	-3
 13647  012A9C  2AE3               	incf	plusw1,f,c
 13648  012A9E  D0CA               	goto	u4570
 13649  012AA0                     l6050:
 13650                           
 13651                           ;stkvar	_a @ sp[(-4)+-8]
 13652                           ;stkvar	_b @ sp[(-4)+-4]
 13653  012AA0  50E1               	movf	fsr1l,w,c
 13654  012AA2  0FF8               	addlw	-8
 13655  012AA4  6ED9               	movwf	fsr2l,c
 13656  012AA6  50E2               	movf	fsr1h,w,c
 13657  012AA8  6EDA               	movwf	fsr2h,c
 13658  012AAA  0EFF               	movlw	255
 13659  012AAC  22DA               	addwfc	fsr2h,f,c
 13660  012AAE  0EF4               	movlw	-12
 13661  012AB0  50E3               	movf	plusw1,w,c
 13662  012AB2  5CDE               	subwf	postinc2,w,c
 13663  012AB4  0EF5               	movlw	-11
 13664  012AB6  50E3               	movf	plusw1,w,c
 13665  012AB8  58DE               	subwfb	postinc2,w,c
 13666  012ABA  0EF6               	movlw	-10
 13667  012ABC  50E3               	movf	plusw1,w,c
 13668  012ABE  58DE               	subwfb	postinc2,w,c
 13669  012AC0  50DE               	movf	postinc2,w,c
 13670  012AC2  0A80               	xorlw	128
 13671  012AC4  6E35               	movwf	btemp^0,c
 13672  012AC6  0EF7               	movlw	-9
 13673  012AC8  50E3               	movf	plusw1,w,c
 13674  012ACA  0A80               	xorlw	128
 13675  012ACC  5835               	subwfb	btemp^0,w,c
 13676  012ACE  B0D8               	btfsc	status,0,c
 13677  012AD0  D053               	goto	l6062
 13678                           
 13679                           ;stkvar	_b @ sp[(-4)+-4]
 13680                           ;stkvar	_a @ sp[(-4)+-8]
 13681  012AD2  0EF4               	movlw	-12
 13682  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13683  012ADA  0EF5               	movlw	-11
 13684  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13685  012AE2  0EF6               	movlw	-10
 13686  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13687  012AEA  0EF7               	movlw	-9
 13688  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13689  012AF2  0EF8               	movlw	-8
 13690  012AF4  50E3               	movf	plusw1,w,c
 13691  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13692  012AF8  0EF9               	movlw	-7
 13693  012AFA  50E3               	movf	plusw1,w,c
 13694  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13695  012AFE  0EFA               	movlw	-6
 13696  012B00  50E3               	movf	plusw1,w,c
 13697  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13698  012B04  0EFB               	movlw	-5
 13699  012B06  50E3               	movf	plusw1,w,c
 13700  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13701  012B0A  0EFF               	movlw	255
 13702  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13703  012B0E  6E39               	movwf	(btemp+4)^0,c
 13704  012B10  0EFF               	movlw	255
 13705  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13706  012B14  6E3A               	movwf	(btemp+5)^0,c
 13707  012B16  0EFF               	movlw	255
 13708  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13709  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13710  012B1C  0EFF               	movlw	255
 13711  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13712  012B20  6E3C               	movwf	(btemp+7)^0,c
 13713                           
 13714                           ;stkvar	_b @ sp[(-4)+-4]
 13715  012B22  0EF8               	movlw	-8
 13716  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13717  012B2A  0EF9               	movlw	-7
 13718  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13719  012B32  0EFA               	movlw	-6
 13720  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13721  012B3A  0EFB               	movlw	-5
 13722  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13723                           
 13724                           ;stkvar	_signs @ sp[(-4)+3]
 13725  012B42  0EFF               	movlw	-1
 13726  012B44  7EE3               	btg	plusw1,7,c
 13727                           
 13728                           ;stkvar	_grs @ sp[(-4)+0]
 13729  012B46  0EFC               	movlw	-4
 13730  012B48  50E3               	movf	plusw1,w,c
 13731  012B4A  0800               	sublw	0
 13732  012B4C  6E40               	movwf	(btemp+11)^0,c
 13733                           
 13734                           ;stkvar	_grs @ sp[(-4)+0]
 13735  012B4E  0EFC               	movlw	-4
 13736  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13737                           
 13738                           ;stkvar	_grs @ sp[(-4)+0]
 13739  012B56  0EFC               	movlw	-4
 13740  012B58  50E3               	movf	plusw1,w,c
 13741  012B5A  A4D8               	btfss	status,2,c
 13742  012B5C  D020               	goto	l6064
 13743                           
 13744                           ;stkvar	_b @ sp[(-4)+-4]
 13745  012B5E  50E1               	movf	fsr1l,w,c
 13746  012B60  0FF8               	addlw	-8
 13747  012B62  6ED9               	movwf	fsr2l,c
 13748  012B64  50E2               	movf	fsr1h,w,c
 13749  012B66  6EDA               	movwf	fsr2h,c
 13750  012B68  0EFF               	movlw	255
 13751  012B6A  22DA               	addwfc	fsr2h,f,c
 13752  012B6C  2ADE               	incf	postinc2,f,c
 13753  012B6E  0E00               	movlw	0
 13754  012B70  22DE               	addwfc	postinc2,f,c
 13755  012B72  22DE               	addwfc	postinc2,f,c
 13756  012B74  22DE               	addwfc	postinc2,f,c
 13757  012B76  D013               	goto	l6064
 13758  012B78                     l6062:
 13759                           
 13760                           ;stkvar	_a @ sp[(-4)+-8]
 13761                           ;stkvar	_b @ sp[(-4)+-4]
 13762  012B78  50E1               	movf	fsr1l,w,c
 13763  012B7A  0FF8               	addlw	-8
 13764  012B7C  6ED9               	movwf	fsr2l,c
 13765  012B7E  50E2               	movf	fsr1h,w,c
 13766  012B80  6EDA               	movwf	fsr2h,c
 13767  012B82  0EFF               	movlw	255
 13768  012B84  22DA               	addwfc	fsr2h,f,c
 13769  012B86  0EF4               	movlw	-12
 13770  012B88  50E3               	movf	plusw1,w,c
 13771  012B8A  5EDE               	subwf	postinc2,f,c
 13772  012B8C  0EF5               	movlw	-11
 13773  012B8E  50E3               	movf	plusw1,w,c
 13774  012B90  5ADE               	subwfb	postinc2,f,c
 13775  012B92  0EF6               	movlw	-10
 13776  012B94  50E3               	movf	plusw1,w,c
 13777  012B96  5ADE               	subwfb	postinc2,f,c
 13778  012B98  0EF7               	movlw	-9
 13779  012B9A  50E3               	movf	plusw1,w,c
 13780  012B9C  5ADE               	subwfb	postinc2,f,c
 13781  012B9E                     l6064:
 13782                           
 13783                           ;stkvar	_b @ sp[(-4)+-4]
 13784  012B9E  0EF8               	movlw	-8
 13785  012BA0  50E3               	movf	plusw1,w,c
 13786  012BA2  E145               	bnz	l6086
 13787  012BA4  0EF9               	movlw	-7
 13788  012BA6  50E3               	movf	plusw1,w,c
 13789  012BA8  E142               	bnz	l6086
 13790  012BAA  0EFA               	movlw	-6
 13791  012BAC  50E3               	movf	plusw1,w,c
 13792  012BAE  E13F               	bnz	l6086
 13793  012BB0  0EFB               	movlw	-5
 13794  012BB2  50E3               	movf	plusw1,w,c
 13795  012BB4  A4D8               	btfss	status,2,c
 13796  012BB6  D03B               	goto	l6086
 13797                           
 13798                           ;stkvar	_grs @ sp[(-4)+0]
 13799  012BB8  0EFC               	movlw	-4
 13800  012BBA  50E3               	movf	plusw1,w,c
 13801  012BBC  A4D8               	btfss	status,2,c
 13802  012BBE  D037               	goto	l6086
 13803  012BC0                     u4530:
 13804  012BC0  0E00               	movlw	0
 13805  012BC2  6E35               	movwf	btemp^0,c
 13806  012BC4  0E00               	movlw	0
 13807  012BC6  6E36               	movwf	(btemp+1)^0,c
 13808  012BC8  0E00               	movlw	0
 13809  012BCA  6E37               	movwf	(btemp+2)^0,c
 13810  012BCC  0E00               	movlw	0
 13811  012BCE  6E38               	movwf	(btemp+3)^0,c
 13812  012BD0  D0C6               	goto	l2501
 13813  012BD2                     l6072:
 13814                           
 13815                           ;stkvar	_b @ sp[(-4)+-4]
 13816  012BD2  90D8               	bcf	status,0,c
 13817  012BD4  0EF8               	movlw	-8
 13818  012BD6  36E3               	rlcf	plusw1,f,c
 13819  012BD8  0EF9               	movlw	-7
 13820  012BDA  36E3               	rlcf	plusw1,f,c
 13821  012BDC  0EFA               	movlw	-6
 13822  012BDE  36E3               	rlcf	plusw1,f,c
 13823  012BE0  0EFB               	movlw	-5
 13824  012BE2  36E3               	rlcf	plusw1,f,c
 13825                           
 13826                           ;stkvar	_grs @ sp[(-4)+0]
 13827  012BE4  0EFC               	movlw	-4
 13828  012BE6  AEE3               	btfss	plusw1,7,c
 13829  012BE8  D002               	goto	l2513
 13830                           
 13831                           ;stkvar	_b @ sp[(-4)+-4]
 13832  012BEA  0EF8               	movlw	-8
 13833  012BEC  80E3               	bsf	plusw1,0,c
 13834  012BEE                     l2513:
 13835                           
 13836                           ;stkvar	_grs @ sp[(-4)+0]
 13837  012BEE  0EFC               	movlw	-4
 13838  012BF0  A0E3               	btfss	plusw1,0,c
 13839  012BF2  D00E               	goto	l6080
 13840                           
 13841                           ;stkvar	_grs @ sp[(-4)+0]
 13842  012BF4  0EFC               	movlw	-4
 13843  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13844  012BFC  90D8               	bcf	status,0,c
 13845  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13846  012C00  6E3F               	movwf	(btemp+10)^0,c
 13847  012C02  0E01               	movlw	1
 13848  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13849                           
 13850                           ;stkvar	_grs @ sp[(-4)+0]
 13851  012C06  0EFC               	movlw	-4
 13852  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13853  012C0E  D009               	goto	l6082
 13854  012C10                     l6080:
 13855                           
 13856                           ;stkvar	_grs @ sp[(-4)+0]
 13857  012C10  50E1               	movf	fsr1l,w,c
 13858  012C12  0FFC               	addlw	-4
 13859  012C14  6ED9               	movwf	fsr2l,c
 13860  012C16  50E2               	movf	fsr1h,w,c
 13861  012C18  6EDA               	movwf	fsr2h,c
 13862  012C1A  0EFF               	movlw	255
 13863  012C1C  22DA               	addwfc	fsr2h,f,c
 13864  012C1E  90D8               	bcf	status,0,c
 13865  012C20  36DF               	rlcf	indf2,f,c
 13866  012C22                     l6082:
 13867                           
 13868                           ;stkvar	_bexp @ sp[(-4)+1]
 13869  012C22  0EFD               	movlw	-3
 13870  012C24  50E3               	movf	plusw1,w,c
 13871  012C26  B4D8               	btfsc	status,2,c
 13872  012C28  D002               	goto	l6086
 13873                           
 13874                           ;stkvar	_bexp @ sp[(-4)+1]
 13875  012C2A  0EFD               	movlw	-3
 13876  012C2C  06E3               	decf	plusw1,f,c
 13877  012C2E                     l6086:
 13878                           
 13879                           ;stkvar	_b @ sp[(-4)+-4]
 13880  012C2E  0EFA               	movlw	-6
 13881  012C30  AEE3               	btfss	plusw1,7,c
 13882  012C32  D7CF               	goto	l6072
 13883  012C34                     u4570:
 13884                           
 13885                           ;stkvar	_aexp @ sp[(-4)+2]
 13886  012C34  0EFE               	movlw	-2
 13887  012C36  6AE3               	clrf	plusw1,c
 13888                           
 13889                           ;stkvar	_grs @ sp[(-4)+0]
 13890  012C38  0EFC               	movlw	-4
 13891  012C3A  AEE3               	btfss	plusw1,7,c
 13892  012C3C  D00F               	goto	l6100
 13893                           
 13894                           ;stkvar	_grs @ sp[(-4)+0]
 13895  012C3E  0EFC               	movlw	-4
 13896  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13897  012C46  0E7F               	movlw	127
 13898  012C48  1640               	andwf	(btemp+11)^0,f,c
 13899  012C4A  B4D8               	btfsc	status,2,c
 13900  012C4C  D004               	goto	l6096
 13901  012C4E                     u4590:
 13902                           
 13903                           ;stkvar	_aexp @ sp[(-4)+2]
 13904  012C4E  0EFE               	movlw	-2
 13905  012C50  6AE3               	clrf	plusw1,c
 13906  012C52  2AE3               	incf	plusw1,f,c
 13907  012C54  D003               	goto	l6100
 13908  012C56                     l6096:
 13909                           
 13910                           ;stkvar	_b @ sp[(-4)+-4]
 13911  012C56  0EF8               	movlw	-8
 13912  012C58  B0E3               	btfsc	plusw1,0,c
 13913  012C5A  D7F9               	goto	u4590
 13914  012C5C                     l6100:
 13915                           
 13916                           ;stkvar	_aexp @ sp[(-4)+2]
 13917  012C5C  0EFE               	movlw	-2
 13918  012C5E  50E3               	movf	plusw1,w,c
 13919  012C60  B4D8               	btfsc	status,2,c
 13920  012C62  D02B               	goto	l6112
 13921                           
 13922                           ;stkvar	_b @ sp[(-4)+-4]
 13923  012C64  50E1               	movf	fsr1l,w,c
 13924  012C66  0FF8               	addlw	-8
 13925  012C68  6ED9               	movwf	fsr2l,c
 13926  012C6A  50E2               	movf	fsr1h,w,c
 13927  012C6C  6EDA               	movwf	fsr2h,c
 13928  012C6E  0EFF               	movlw	255
 13929  012C70  22DA               	addwfc	fsr2h,f,c
 13930  012C72  2ADE               	incf	postinc2,f,c
 13931  012C74  0E00               	movlw	0
 13932  012C76  22DE               	addwfc	postinc2,f,c
 13933  012C78  22DE               	addwfc	postinc2,f,c
 13934  012C7A  22DE               	addwfc	postinc2,f,c
 13935                           
 13936                           ;stkvar	_b @ sp[(-4)+-4]
 13937  012C7C  0EFB               	movlw	-5
 13938  012C7E  A0E3               	btfss	plusw1,0,c
 13939  012C80  D01C               	goto	l6112
 13940  012C82  0E01               	movlw	1
 13941  012C84  6E40               	movwf	(btemp+11)^0,c
 13942                           
 13943                           ;stkvar	_b @ sp[(-4)+-4]
 13944  012C86  50E1               	movf	fsr1l,w,c
 13945  012C88  0FF8               	addlw	-8
 13946  012C8A  6ED9               	movwf	fsr2l,c
 13947  012C8C  50E2               	movf	fsr1h,w,c
 13948  012C8E  6EDA               	movwf	fsr2h,c
 13949  012C90  0EFF               	movlw	255
 13950  012C92  22DA               	addwfc	fsr2h,f,c
 13951  012C94  2840               	incf	(btemp+11)^0,w,c
 13952  012C96  52DE               	movf	postinc2,f,c
 13953  012C98  D008               	goto	u4630
 13954  012C9A                     u4635:
 13955  012C9A  52DE               	movf	postinc2,f,c
 13956  012C9C  90D8               	bcf	status,0,c
 13957  012C9E  BEDC               	btfsc	preinc2,7,c
 13958  012CA0  80D8               	bsf	status,0,c
 13959  012CA2  32DD               	rrcf	postdec2,f,c
 13960  012CA4  32DD               	rrcf	postdec2,f,c
 13961  012CA6  32DD               	rrcf	postdec2,f,c
 13962  012CA8  32DE               	rrcf	postinc2,f,c
 13963  012CAA                     u4630:
 13964  012CAA  2EE8               	decfsz	wreg,f,c
 13965  012CAC  D7F6               	goto	u4635
 13966                           
 13967                           ;stkvar	_bexp @ sp[(-4)+1]
 13968  012CAE  0EFD               	movlw	-3
 13969  012CB0  28E3               	incf	plusw1,w,c
 13970  012CB2  B4D8               	btfsc	status,2,c
 13971  012CB4  D002               	goto	l6112
 13972                           
 13973                           ;stkvar	_bexp @ sp[(-4)+1]
 13974  012CB6  0EFD               	movlw	-3
 13975  012CB8  2AE3               	incf	plusw1,f,c
 13976  012CBA                     l6112:
 13977                           
 13978                           ;stkvar	_bexp @ sp[(-4)+1]
 13979  012CBA  0EFD               	movlw	-3
 13980  012CBC  28E3               	incf	plusw1,w,c
 13981  012CBE  B4D8               	btfsc	status,2,c
 13982  012CC0  D004               	goto	u4660
 13983                           
 13984                           ;stkvar	_bexp @ sp[(-4)+1]
 13985  012CC2  0EFD               	movlw	-3
 13986  012CC4  50E3               	movf	plusw1,w,c
 13987  012CC6  A4D8               	btfss	status,2,c
 13988  012CC8  D00E               	goto	l6122
 13989  012CCA                     u4660:
 13990                           
 13991                           ;stkvar	_b @ sp[(-4)+-4]
 13992  012CCA  0EF8               	movlw	-8
 13993  012CCC  6AE3               	clrf	plusw1,c
 13994  012CCE  0EF9               	movlw	-7
 13995  012CD0  6AE3               	clrf	plusw1,c
 13996  012CD2  0EFA               	movlw	-6
 13997  012CD4  6AE3               	clrf	plusw1,c
 13998  012CD6  0EFB               	movlw	-5
 13999  012CD8  6AE3               	clrf	plusw1,c
 14000                           
 14001                           ;stkvar	_bexp @ sp[(-4)+1]
 14002  012CDA  0EFD               	movlw	-3
 14003  012CDC  50E3               	movf	plusw1,w,c
 14004  012CDE  A4D8               	btfss	status,2,c
 14005  012CE0  D002               	goto	l6122
 14006                           
 14007                           ;stkvar	_signs @ sp[(-4)+3]
 14008  012CE2  0EFF               	movlw	-1
 14009  012CE4  6AE3               	clrf	plusw1,c
 14010  012CE6                     l6122:
 14011                           
 14012                           ;stkvar	_bexp @ sp[(-4)+1]
 14013  012CE6  0EFD               	movlw	-3
 14014  012CE8  A0E3               	btfss	plusw1,0,c
 14015  012CEA  D009               	goto	l6126
 14016                           
 14017                           ;stkvar	_b @ sp[(-4)+-4]
 14018  012CEC  0EFA               	movlw	250
 14019  012CEE  24E1               	addwf	fsr1l,w,c
 14020  012CF0  6ED9               	movwf	fsr2l,c
 14021  012CF2  0EFF               	movlw	255
 14022  012CF4  20E2               	addwfc	fsr1h,w,c
 14023  012CF6  6EDA               	movwf	fsr2h,c
 14024  012CF8  0E00               	movlw	0
 14025  012CFA  8EDB               	bsf	plusw2,7,c
 14026  012CFC  D008               	goto	l6128
 14027  012CFE                     l6126:
 14028                           
 14029                           ;stkvar	_b @ sp[(-4)+-4]
 14030  012CFE  0EFA               	movlw	250
 14031  012D00  24E1               	addwf	fsr1l,w,c
 14032  012D02  6ED9               	movwf	fsr2l,c
 14033  012D04  0EFF               	movlw	255
 14034  012D06  20E2               	addwfc	fsr1h,w,c
 14035  012D08  6EDA               	movwf	fsr2h,c
 14036  012D0A  0E7F               	movlw	127
 14037  012D0C  16DF               	andwf	indf2,f,c
 14038  012D0E                     l6128:
 14039                           
 14040                           ;stkvar	_b @ sp[(-4)+-4]
 14041  012D0E  0EFB               	movlw	251
 14042  012D10  24E1               	addwf	fsr1l,w,c
 14043  012D12  6ED9               	movwf	fsr2l,c
 14044  012D14  0EFF               	movlw	255
 14045  012D16  20E2               	addwfc	fsr1h,w,c
 14046  012D18  6EDA               	movwf	fsr2h,c
 14047                           
 14048                           ;stkvar	_bexp @ sp[(-4)+1]
 14049  012D1A  0EFD               	movlw	-3
 14050  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 14051  012D22  90D8               	bcf	status,0,c
 14052  012D24  3040               	rrcf	(btemp+11)^0,w,c
 14053  012D26  6EDF               	movwf	indf2,c
 14054                           
 14055                           ;stkvar	_signs @ sp[(-4)+3]
 14056  012D28  0EFF               	movlw	-1
 14057  012D2A  AEE3               	btfss	plusw1,7,c
 14058  012D2C  D008               	goto	l6134
 14059                           
 14060                           ;stkvar	_b @ sp[(-4)+-4]
 14061  012D2E  0EFB               	movlw	251
 14062  012D30  24E1               	addwf	fsr1l,w,c
 14063  012D32  6ED9               	movwf	fsr2l,c
 14064  012D34  0EFF               	movlw	255
 14065  012D36  20E2               	addwfc	fsr1h,w,c
 14066  012D38  6EDA               	movwf	fsr2h,c
 14067  012D3A  0E00               	movlw	0
 14068  012D3C  8EDB               	bsf	plusw2,7,c
 14069  012D3E                     l6134:
 14070                           
 14071                           ;stkvar	_b @ sp[(-4)+-4]
 14072  012D3E  0EF8               	movlw	-8
 14073  012D40  006F FF8C  F035    	movff	plusw1,btemp
 14074  012D46  0EF9               	movlw	-7
 14075  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 14076  012D4E  0EFA               	movlw	-6
 14077  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 14078  012D56  0EFB               	movlw	-5
 14079  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 14080  012D5E                     l2501:
 14081                           
 14082                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14083  012D5E  0EF4               	movlw	244
 14084  012D60  26E1               	addwf	fsr1l,f,c
 14085  012D62  0EFF               	movlw	255
 14086  012D64  22E2               	addwfc	fsr1h,f,c
 14087  012D66  0012               	return		;funcret
 14088  012D68                     __end_of___fladd:
 14089                           	opt callstack 0
 14090                           
 14091 ;; *************** function ___flneg *****************
 14092 ;; Defined at:
 14093 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  f1              4  [STACK] unsigned char 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;		None
 14098 ;; Return value:  Size  Location     Type
 14099 ;;                  4  [STACK] unsigned char 
 14100 ;; Registers used:
 14101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14102 ;; Tracked objects:
 14103 ;;		On entry : 0/4
 14104 ;;		On exit  : 0/0
 14105 ;;		Unchanged: 0/0
 14106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14111 ;;Total ram usage:        0 bytes
 14112 ;; Hardware stack levels used:    1
 14113 ;; Hardware stack levels required when called:    6
 14114 ;; This function calls:
 14115 ;;		Nothing
 14116 ;; This function is called by:
 14117 ;;		_efgtoa
 14118 ;; This function uses a reentrant model
 14119 ;;
 14120                           
 14121                           	psect	text48
 14122  017870                     __ptext48:
 14123                           	opt callstack 0
 14124  017870                     ___flneg:
 14125                           	opt callstack 17
 14126                           
 14127                           ;stkvar	_f1 @ sp[(0)+-4]
 14128                           
 14129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14130                           ;incstack = 0
 14131  017870  0EFC               	movlw	-4
 14132  017872  50E3               	movf	plusw1,w,c
 14133  017874  E10A               	bnz	u5970
 14134  017876  0EFD               	movlw	-3
 14135  017878  50E3               	movf	plusw1,w,c
 14136  01787A  E107               	bnz	u5970
 14137  01787C  0EFE               	movlw	-2
 14138  01787E  50E3               	movf	plusw1,w,c
 14139  017880  E104               	bnz	u5970
 14140  017882  0EFF               	movlw	-1
 14141  017884  50E3               	movf	plusw1,w,c
 14142  017886  B4D8               	btfsc	status,2,c
 14143  017888  D002               	goto	l6802
 14144  01788A                     u5970:
 14145                           
 14146                           ;stkvar	_f1 @ sp[(0)+-4]
 14147  01788A  0EFF               	movlw	-1
 14148  01788C  7EE3               	btg	plusw1,7,c
 14149  01788E                     l6802:
 14150                           
 14151                           ;stkvar	_f1 @ sp[(0)+-4]
 14152  01788E  0EFC               	movlw	-4
 14153  017890  006F FF8C  F035    	movff	plusw1,btemp
 14154  017896  0EFD               	movlw	-3
 14155  017898  006F FF8C  F036    	movff	plusw1,btemp+1
 14156  01789E  0EFE               	movlw	-2
 14157  0178A0  006F FF8C  F037    	movff	plusw1,btemp+2
 14158  0178A6  0EFF               	movlw	-1
 14159  0178A8  006F FF8C  F038    	movff	plusw1,btemp+3
 14160                           
 14161                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14162  0178AE  52E5               	movf	postdec1,f,c
 14163  0178B0  52E5               	movf	postdec1,f,c
 14164  0178B2  52E5               	movf	postdec1,f,c
 14165  0178B4  52E5               	movf	postdec1,f,c
 14166  0178B6  0012               	return		;funcret
 14167  0178B8                     __end_of___flneg:
 14168                           	opt callstack 0
 14169                           
 14170 ;; *************** function ___flmul *****************
 14171 ;; Defined at:
 14172 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  b               4  [STACK] unsigned char 
 14175 ;;  a               4  [STACK] unsigned char 
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;  prod            4  [STACK] struct .
 14178 ;;  grs             4  [STACK] unsigned long 
 14179 ;;  temp            2  [STACK] struct .
 14180 ;;  bexp            1  [STACK] unsigned char 
 14181 ;;  aexp            1  [STACK] unsigned char 
 14182 ;;  sign            1  [STACK] unsigned char 
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  4  [STACK] unsigned char 
 14185 ;; Registers used:
 14186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14196 ;;Total ram usage:        0 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:    6
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		_conv_raw_result
 14203 ;;		_lp_filter
 14204 ;;		_efgtoa
 14205 ;; This function uses a reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text49
 14209  011D82                     __ptext49:
 14210                           	opt callstack 0
 14211  011D82                     ___flmul:
 14212                           	opt callstack 0
 14213                           
 14214                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14215  011D82  0E0D               	movlw	13
 14216  011D84  26E1               	addwf	fsr1l,f,c
 14217  011D86  0E00               	movlw	0
 14218  011D88  22E2               	addwfc	fsr1h,f,c
 14219                           
 14220                           ;stkvar	_b @ sp[(-13)+-4]
 14221                           
 14222                           ;incstack = 0
 14223  011D8A  0EF2               	movlw	242
 14224  011D8C  24E1               	addwf	fsr1l,w,c
 14225  011D8E  6ED9               	movwf	fsr2l,c
 14226  011D90  0EFF               	movlw	255
 14227  011D92  20E2               	addwfc	fsr1h,w,c
 14228  011D94  6EDA               	movwf	fsr2h,c
 14229  011D96  50DF               	movf	indf2,w,c
 14230  011D98  6E40               	movwf	(btemp+11)^0,c
 14231  011D9A  0E80               	movlw	128
 14232  011D9C  1640               	andwf	(btemp+11)^0,f,c
 14233                           
 14234                           ;stkvar	_sign @ sp[(-13)+12]
 14235  011D9E  0EFF               	movlw	-1
 14236  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14237                           
 14238                           ;stkvar	_b @ sp[(-13)+-4]
 14239  011DA6  0EF2               	movlw	242
 14240  011DA8  24E1               	addwf	fsr1l,w,c
 14241  011DAA  6ED9               	movwf	fsr2l,c
 14242  011DAC  0EFF               	movlw	255
 14243  011DAE  20E2               	addwfc	fsr1h,w,c
 14244  011DB0  6EDA               	movwf	fsr2h,c
 14245  011DB2  50DF               	movf	indf2,w,c
 14246  011DB4  6E40               	movwf	(btemp+11)^0,c
 14247  011DB6  90D8               	bcf	status,0,c
 14248  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14249  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14250                           
 14251                           ;stkvar	_bexp @ sp[(-13)+10]
 14252  011DBC  0EFD               	movlw	-3
 14253  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14254                           
 14255                           ;stkvar	_b @ sp[(-13)+-4]
 14256  011DC4  0EF1               	movlw	241
 14257  011DC6  24E1               	addwf	fsr1l,w,c
 14258  011DC8  6ED9               	movwf	fsr2l,c
 14259  011DCA  0EFF               	movlw	255
 14260  011DCC  20E2               	addwfc	fsr1h,w,c
 14261  011DCE  6EDA               	movwf	fsr2h,c
 14262  011DD0  AEDF               	btfss	indf2,7,c
 14263  011DD2  D002               	goto	l6518
 14264                           
 14265                           ;stkvar	_bexp @ sp[(-13)+10]
 14266  011DD4  0EFD               	movlw	-3
 14267  011DD6  80E3               	bsf	plusw1,0,c
 14268  011DD8                     l6518:
 14269                           
 14270                           ;stkvar	_bexp @ sp[(-13)+10]
 14271  011DD8  0EFD               	movlw	-3
 14272  011DDA  50E3               	movf	plusw1,w,c
 14273  011DDC  B4D8               	btfsc	status,2,c
 14274  011DDE  D01F               	goto	l6526
 14275                           
 14276                           ;stkvar	_bexp @ sp[(-13)+10]
 14277  011DE0  0EFD               	movlw	-3
 14278  011DE2  28E3               	incf	plusw1,w,c
 14279  011DE4  A4D8               	btfss	status,2,c
 14280  011DE6  D018               	goto	l6524
 14281  011DE8  0E00               	movlw	0
 14282  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14283  011DEC  0E00               	movlw	0
 14284  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14285  011DF0  0E00               	movlw	0
 14286  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14287  011DF4  0E00               	movlw	0
 14288  011DF6  6E40               	movwf	(btemp+11)^0,c
 14289                           
 14290                           ;stkvar	_b @ sp[(-13)+-4]
 14291  011DF8  0EEF               	movlw	-17
 14292  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14293  011E00  0EF0               	movlw	-16
 14294  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14295  011E08  0EF1               	movlw	-15
 14296  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14297  011E10  0EF2               	movlw	-14
 14298  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14299  011E18                     l6524:
 14300                           
 14301                           ;stkvar	_b @ sp[(-13)+-4]
 14302  011E18  0EF1               	movlw	-15
 14303  011E1A  8EE3               	bsf	plusw1,7,c
 14304  011E1C  D018               	goto	l6528
 14305  011E1E                     l6526:
 14306  011E1E  0E00               	movlw	0
 14307  011E20  6E3D               	movwf	(btemp+8)^0,c
 14308  011E22  0E00               	movlw	0
 14309  011E24  6E3E               	movwf	(btemp+9)^0,c
 14310  011E26  0E00               	movlw	0
 14311  011E28  6E3F               	movwf	(btemp+10)^0,c
 14312  011E2A  0E00               	movlw	0
 14313  011E2C  6E40               	movwf	(btemp+11)^0,c
 14314                           
 14315                           ;stkvar	_b @ sp[(-13)+-4]
 14316  011E2E  0EEF               	movlw	-17
 14317  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14318  011E36  0EF0               	movlw	-16
 14319  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14320  011E3E  0EF1               	movlw	-15
 14321  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14322  011E46  0EF2               	movlw	-14
 14323  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14324  011E4E                     l6528:
 14325                           
 14326                           ;stkvar	_a @ sp[(-13)+-8]
 14327  011E4E  0EEE               	movlw	238
 14328  011E50  24E1               	addwf	fsr1l,w,c
 14329  011E52  6ED9               	movwf	fsr2l,c
 14330  011E54  0EFF               	movlw	255
 14331  011E56  20E2               	addwfc	fsr1h,w,c
 14332  011E58  6EDA               	movwf	fsr2h,c
 14333  011E5A  50DF               	movf	indf2,w,c
 14334  011E5C  6E40               	movwf	(btemp+11)^0,c
 14335  011E5E  0E80               	movlw	128
 14336  011E60  1640               	andwf	(btemp+11)^0,f,c
 14337                           
 14338                           ;stkvar	_sign @ sp[(-13)+12]
 14339  011E62  50E1               	movf	fsr1l,w,c
 14340  011E64  0FFF               	addlw	-1
 14341  011E66  6ED9               	movwf	fsr2l,c
 14342  011E68  50E2               	movf	fsr1h,w,c
 14343  011E6A  6EDA               	movwf	fsr2h,c
 14344  011E6C  0EFF               	movlw	255
 14345  011E6E  22DA               	addwfc	fsr2h,f,c
 14346  011E70  5040               	movf	(btemp+11)^0,w,c
 14347  011E72  1ADF               	xorwf	indf2,f,c
 14348                           
 14349                           ;stkvar	_a @ sp[(-13)+-8]
 14350  011E74  0EEE               	movlw	238
 14351  011E76  24E1               	addwf	fsr1l,w,c
 14352  011E78  6ED9               	movwf	fsr2l,c
 14353  011E7A  0EFF               	movlw	255
 14354  011E7C  20E2               	addwfc	fsr1h,w,c
 14355  011E7E  6EDA               	movwf	fsr2h,c
 14356  011E80  50DF               	movf	indf2,w,c
 14357  011E82  6E40               	movwf	(btemp+11)^0,c
 14358  011E84  90D8               	bcf	status,0,c
 14359  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14360  011E88  6E3F               	movwf	(btemp+10)^0,c
 14361                           
 14362                           ;stkvar	_aexp @ sp[(-13)+11]
 14363  011E8A  0EFE               	movlw	-2
 14364  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14365                           
 14366                           ;stkvar	_a @ sp[(-13)+-8]
 14367  011E92  0EED               	movlw	237
 14368  011E94  24E1               	addwf	fsr1l,w,c
 14369  011E96  6ED9               	movwf	fsr2l,c
 14370  011E98  0EFF               	movlw	255
 14371  011E9A  20E2               	addwfc	fsr1h,w,c
 14372  011E9C  6EDA               	movwf	fsr2h,c
 14373  011E9E  AEDF               	btfss	indf2,7,c
 14374  011EA0  D002               	goto	l6536
 14375                           
 14376                           ;stkvar	_aexp @ sp[(-13)+11]
 14377  011EA2  0EFE               	movlw	-2
 14378  011EA4  80E3               	bsf	plusw1,0,c
 14379  011EA6                     l6536:
 14380                           
 14381                           ;stkvar	_aexp @ sp[(-13)+11]
 14382  011EA6  0EFE               	movlw	-2
 14383  011EA8  50E3               	movf	plusw1,w,c
 14384  011EAA  B4D8               	btfsc	status,2,c
 14385  011EAC  D01F               	goto	l6544
 14386                           
 14387                           ;stkvar	_aexp @ sp[(-13)+11]
 14388  011EAE  0EFE               	movlw	-2
 14389  011EB0  28E3               	incf	plusw1,w,c
 14390  011EB2  A4D8               	btfss	status,2,c
 14391  011EB4  D018               	goto	l6542
 14392  011EB6  0E00               	movlw	0
 14393  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14394  011EBA  0E00               	movlw	0
 14395  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14396  011EBE  0E00               	movlw	0
 14397  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14398  011EC2  0E00               	movlw	0
 14399  011EC4  6E40               	movwf	(btemp+11)^0,c
 14400                           
 14401                           ;stkvar	_a @ sp[(-13)+-8]
 14402  011EC6  0EEB               	movlw	-21
 14403  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14404  011ECE  0EEC               	movlw	-20
 14405  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14406  011ED6  0EED               	movlw	-19
 14407  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14408  011EDE  0EEE               	movlw	-18
 14409  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14410  011EE6                     l6542:
 14411                           
 14412                           ;stkvar	_a @ sp[(-13)+-8]
 14413  011EE6  0EED               	movlw	-19
 14414  011EE8  8EE3               	bsf	plusw1,7,c
 14415  011EEA  D018               	goto	l6546
 14416  011EEC                     l6544:
 14417  011EEC  0E00               	movlw	0
 14418  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14419  011EF0  0E00               	movlw	0
 14420  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14421  011EF4  0E00               	movlw	0
 14422  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14423  011EF8  0E00               	movlw	0
 14424  011EFA  6E40               	movwf	(btemp+11)^0,c
 14425                           
 14426                           ;stkvar	_a @ sp[(-13)+-8]
 14427  011EFC  0EEB               	movlw	-21
 14428  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14429  011F04  0EEC               	movlw	-20
 14430  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14431  011F0C  0EED               	movlw	-19
 14432  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14433  011F14  0EEE               	movlw	-18
 14434  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14435  011F1C                     l6546:
 14436                           
 14437                           ;stkvar	_aexp @ sp[(-13)+11]
 14438  011F1C  0EFE               	movlw	-2
 14439  011F1E  50E3               	movf	plusw1,w,c
 14440  011F20  B4D8               	btfsc	status,2,c
 14441  011F22  D004               	goto	u5600
 14442                           
 14443                           ;stkvar	_bexp @ sp[(-13)+10]
 14444  011F24  0EFD               	movlw	-3
 14445  011F26  50E3               	movf	plusw1,w,c
 14446  011F28  A4D8               	btfss	status,2,c
 14447  011F2A  D009               	goto	l6554
 14448  011F2C                     u5600:
 14449  011F2C  0E00               	movlw	0
 14450  011F2E  6E35               	movwf	btemp^0,c
 14451  011F30  0E00               	movlw	0
 14452  011F32  6E36               	movwf	(btemp+1)^0,c
 14453  011F34  0E00               	movlw	0
 14454  011F36  6E37               	movwf	(btemp+2)^0,c
 14455  011F38  0E00               	movlw	0
 14456  011F3A  6E38               	movwf	(btemp+3)^0,c
 14457  011F3C  D332               	goto	l2582
 14458  011F3E                     l6554:
 14459                           
 14460                           ;stkvar	_b @ sp[(-13)+-4]
 14461  011F3E  0EEF               	movlw	-17
 14462  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14463                           
 14464                           ;stkvar	_a @ sp[(-13)+-8]
 14465  011F46  0EED               	movlw	237
 14466  011F48  24E1               	addwf	fsr1l,w,c
 14467  011F4A  6ED9               	movwf	fsr2l,c
 14468  011F4C  0EFF               	movlw	255
 14469  011F4E  20E2               	addwfc	fsr1h,w,c
 14470  011F50  6EDA               	movwf	fsr2h,c
 14471  011F52  50DF               	movf	indf2,w,c
 14472  011F54  0240               	mulwf	(btemp+11)^0,c
 14473                           
 14474                           ;stkvar	_temp @ sp[(-13)+8]
 14475  011F56  0EFB               	movlw	-5
 14476  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14477  011F5E  0EFC               	movlw	-4
 14478  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14479                           
 14480                           ;stkvar	_temp @ sp[(-13)+8]
 14481  011F66  0EFB               	movlw	-5
 14482  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14483  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14484  011F74  6A3A               	clrf	(btemp+5)^0,c
 14485  011F76  6A3B               	clrf	(btemp+6)^0,c
 14486  011F78  6A3C               	clrf	(btemp+7)^0,c
 14487                           
 14488                           ;stkvar	_grs @ sp[(-13)+4]
 14489  011F7A  0EF7               	movlw	-9
 14490  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14491  011F82  0EF8               	movlw	-8
 14492  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14493  011F8A  0EF9               	movlw	-7
 14494  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14495  011F92  0EFA               	movlw	-6
 14496  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14497                           
 14498                           ;stkvar	_temp @ sp[(-13)+8]
 14499  011F9A  0EFC               	movlw	252
 14500  011F9C  24E1               	addwf	fsr1l,w,c
 14501  011F9E  6ED9               	movwf	fsr2l,c
 14502  011FA0  0EFF               	movlw	255
 14503  011FA2  20E2               	addwfc	fsr1h,w,c
 14504  011FA4  6EDA               	movwf	fsr2h,c
 14505  011FA6  50DF               	movf	indf2,w,c
 14506  011FA8  6E40               	movwf	(btemp+11)^0,c
 14507  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14508  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14509  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14510  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14511                           
 14512                           ;stkvar	_prod @ sp[(-13)+0]
 14513  011FB6  0EF3               	movlw	-13
 14514  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14515  011FBE  0EF4               	movlw	-12
 14516  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14517  011FC6  0EF5               	movlw	-11
 14518  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14519  011FCE  0EF6               	movlw	-10
 14520  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14521                           
 14522                           ;stkvar	_b @ sp[(-13)+-4]
 14523  011FD6  0EF0               	movlw	240
 14524  011FD8  24E1               	addwf	fsr1l,w,c
 14525  011FDA  6ED9               	movwf	fsr2l,c
 14526  011FDC  0EFF               	movlw	255
 14527  011FDE  20E2               	addwfc	fsr1h,w,c
 14528  011FE0  6EDA               	movwf	fsr2h,c
 14529  011FE2  50DF               	movf	indf2,w,c
 14530  011FE4  6E40               	movwf	(btemp+11)^0,c
 14531                           
 14532                           ;stkvar	_a @ sp[(-13)+-8]
 14533  011FE6  0EEC               	movlw	236
 14534  011FE8  24E1               	addwf	fsr1l,w,c
 14535  011FEA  6ED9               	movwf	fsr2l,c
 14536  011FEC  0EFF               	movlw	255
 14537  011FEE  20E2               	addwfc	fsr1h,w,c
 14538  011FF0  6EDA               	movwf	fsr2h,c
 14539  011FF2  50DF               	movf	indf2,w,c
 14540  011FF4  0240               	mulwf	(btemp+11)^0,c
 14541                           
 14542                           ;stkvar	_temp @ sp[(-13)+8]
 14543  011FF6  0EFB               	movlw	-5
 14544  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14545  011FFE  0EFC               	movlw	-4
 14546  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14547                           
 14548                           ;stkvar	_grs @ sp[(-13)+4]
 14549  012006  50E1               	movf	fsr1l,w,c
 14550  012008  0FF7               	addlw	-9
 14551  01200A  6ED9               	movwf	fsr2l,c
 14552  01200C  50E2               	movf	fsr1h,w,c
 14553  01200E  6EDA               	movwf	fsr2h,c
 14554  012010  0EFF               	movlw	255
 14555  012012  22DA               	addwfc	fsr2h,f,c
 14556                           
 14557                           ;stkvar	_temp @ sp[(-13)+8]
 14558  012014  0EFB               	movlw	-5
 14559  012016  50E3               	movf	plusw1,w,c
 14560  012018  26DE               	addwf	postinc2,f,c
 14561  01201A  0E00               	movlw	0
 14562  01201C  22DE               	addwfc	postinc2,f,c
 14563  01201E  22DE               	addwfc	postinc2,f,c
 14564  012020  22DE               	addwfc	postinc2,f,c
 14565                           
 14566                           ;stkvar	_prod @ sp[(-13)+0]
 14567  012022  50E1               	movf	fsr1l,w,c
 14568  012024  0FF3               	addlw	-13
 14569  012026  6ED9               	movwf	fsr2l,c
 14570  012028  50E2               	movf	fsr1h,w,c
 14571  01202A  6EDA               	movwf	fsr2h,c
 14572  01202C  0EFF               	movlw	255
 14573  01202E  22DA               	addwfc	fsr2h,f,c
 14574                           
 14575                           ;stkvar	_temp @ sp[(-13)+8]
 14576  012030  0EFC               	movlw	252
 14577  012032  24E1               	addwf	fsr1l,w,c
 14578  012034  6EE9               	movwf	fsr0l,c
 14579  012036  0EFF               	movlw	255
 14580  012038  20E2               	addwfc	fsr1h,w,c
 14581  01203A  6EEA               	movwf	fsr0h,c
 14582  01203C  50EF               	movf	indf0,w,c
 14583  01203E  26DE               	addwf	postinc2,f,c
 14584  012040  0E00               	movlw	0
 14585  012042  22DE               	addwfc	postinc2,f,c
 14586  012044  22DE               	addwfc	postinc2,f,c
 14587  012046  22DE               	addwfc	postinc2,f,c
 14588                           
 14589                           ;stkvar	_b @ sp[(-13)+-4]
 14590  012048  0EF1               	movlw	241
 14591  01204A  24E1               	addwf	fsr1l,w,c
 14592  01204C  6ED9               	movwf	fsr2l,c
 14593  01204E  0EFF               	movlw	255
 14594  012050  20E2               	addwfc	fsr1h,w,c
 14595  012052  6EDA               	movwf	fsr2h,c
 14596  012054  50DF               	movf	indf2,w,c
 14597  012056  6E40               	movwf	(btemp+11)^0,c
 14598                           
 14599                           ;stkvar	_a @ sp[(-13)+-8]
 14600  012058  0EEB               	movlw	-21
 14601  01205A  50E3               	movf	plusw1,w,c
 14602  01205C  0240               	mulwf	(btemp+11)^0,c
 14603                           
 14604                           ;stkvar	_temp @ sp[(-13)+8]
 14605  01205E  0EFB               	movlw	-5
 14606  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14607  012066  0EFC               	movlw	-4
 14608  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14609                           
 14610                           ;stkvar	_grs @ sp[(-13)+4]
 14611  01206E  50E1               	movf	fsr1l,w,c
 14612  012070  0FF7               	addlw	-9
 14613  012072  6ED9               	movwf	fsr2l,c
 14614  012074  50E2               	movf	fsr1h,w,c
 14615  012076  6EDA               	movwf	fsr2h,c
 14616  012078  0EFF               	movlw	255
 14617  01207A  22DA               	addwfc	fsr2h,f,c
 14618                           
 14619                           ;stkvar	_temp @ sp[(-13)+8]
 14620  01207C  0EFB               	movlw	-5
 14621  01207E  50E3               	movf	plusw1,w,c
 14622  012080  26DE               	addwf	postinc2,f,c
 14623  012082  0E00               	movlw	0
 14624  012084  22DE               	addwfc	postinc2,f,c
 14625  012086  22DE               	addwfc	postinc2,f,c
 14626  012088  22DE               	addwfc	postinc2,f,c
 14627                           
 14628                           ;stkvar	_prod @ sp[(-13)+0]
 14629  01208A  50E1               	movf	fsr1l,w,c
 14630  01208C  0FF3               	addlw	-13
 14631  01208E  6ED9               	movwf	fsr2l,c
 14632  012090  50E2               	movf	fsr1h,w,c
 14633  012092  6EDA               	movwf	fsr2h,c
 14634  012094  0EFF               	movlw	255
 14635  012096  22DA               	addwfc	fsr2h,f,c
 14636                           
 14637                           ;stkvar	_temp @ sp[(-13)+8]
 14638  012098  0EFC               	movlw	252
 14639  01209A  24E1               	addwf	fsr1l,w,c
 14640  01209C  6EE9               	movwf	fsr0l,c
 14641  01209E  0EFF               	movlw	255
 14642  0120A0  20E2               	addwfc	fsr1h,w,c
 14643  0120A2  6EEA               	movwf	fsr0h,c
 14644  0120A4  50EF               	movf	indf0,w,c
 14645  0120A6  26DE               	addwf	postinc2,f,c
 14646  0120A8  0E00               	movlw	0
 14647  0120AA  22DE               	addwfc	postinc2,f,c
 14648  0120AC  22DE               	addwfc	postinc2,f,c
 14649  0120AE  22DE               	addwfc	postinc2,f,c
 14650                           
 14651                           ;stkvar	_grs @ sp[(-13)+4]
 14652  0120B0  50E1               	movf	fsr1l,w,c
 14653  0120B2  0FF7               	addlw	-9
 14654  0120B4  6ED9               	movwf	fsr2l,c
 14655  0120B6  50E2               	movf	fsr1h,w,c
 14656  0120B8  6EDA               	movwf	fsr2h,c
 14657  0120BA  0EFF               	movlw	255
 14658  0120BC  22DA               	addwfc	fsr2h,f,c
 14659  0120BE  0E08               	movlw	8
 14660  0120C0                     u5615:
 14661  0120C0  90D8               	bcf	status,0,c
 14662  0120C2  36DE               	rlcf	postinc2,f,c
 14663  0120C4  36DE               	rlcf	postinc2,f,c
 14664  0120C6  36DE               	rlcf	postinc2,f,c
 14665  0120C8  36DD               	rlcf	postdec2,f,c
 14666  0120CA  52DD               	movf	postdec2,f,c
 14667  0120CC  52DD               	movf	postdec2,f,c
 14668  0120CE  2EE8               	decfsz	wreg,f,c
 14669  0120D0  D7F7               	goto	u5615
 14670                           
 14671                           ;stkvar	_b @ sp[(-13)+-4]
 14672  0120D2  0EF0               	movlw	240
 14673  0120D4  24E1               	addwf	fsr1l,w,c
 14674  0120D6  6ED9               	movwf	fsr2l,c
 14675  0120D8  0EFF               	movlw	255
 14676  0120DA  20E2               	addwfc	fsr1h,w,c
 14677  0120DC  6EDA               	movwf	fsr2h,c
 14678  0120DE  50DF               	movf	indf2,w,c
 14679  0120E0  6E40               	movwf	(btemp+11)^0,c
 14680                           
 14681                           ;stkvar	_a @ sp[(-13)+-8]
 14682  0120E2  0EEB               	movlw	-21
 14683  0120E4  50E3               	movf	plusw1,w,c
 14684  0120E6  0240               	mulwf	(btemp+11)^0,c
 14685                           
 14686                           ;stkvar	_temp @ sp[(-13)+8]
 14687  0120E8  0EFB               	movlw	-5
 14688  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14689  0120F0  0EFC               	movlw	-4
 14690  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14691                           
 14692                           ;stkvar	_temp @ sp[(-13)+8]
 14693  0120F8  0EFB               	movlw	-5
 14694  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14695  012100  0EFC               	movlw	-4
 14696  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14697                           
 14698                           ;stkvar	_grs @ sp[(-13)+4]
 14699  012108  50E1               	movf	fsr1l,w,c
 14700  01210A  0FF7               	addlw	-9
 14701  01210C  6ED9               	movwf	fsr2l,c
 14702  01210E  50E2               	movf	fsr1h,w,c
 14703  012110  6EDA               	movwf	fsr2h,c
 14704  012112  0EFF               	movlw	255
 14705  012114  22DA               	addwfc	fsr2h,f,c
 14706  012116  503F               	movf	(btemp+10)^0,w,c
 14707  012118  26DE               	addwf	postinc2,f,c
 14708  01211A  5040               	movf	(btemp+11)^0,w,c
 14709  01211C  22DE               	addwfc	postinc2,f,c
 14710  01211E  0E00               	movlw	0
 14711  012120  22DE               	addwfc	postinc2,f,c
 14712  012122  22DE               	addwfc	postinc2,f,c
 14713                           
 14714                           ;stkvar	_b @ sp[(-13)+-4]
 14715  012124  0EEF               	movlw	-17
 14716  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14717                           
 14718                           ;stkvar	_a @ sp[(-13)+-8]
 14719  01212C  0EEC               	movlw	236
 14720  01212E  24E1               	addwf	fsr1l,w,c
 14721  012130  6ED9               	movwf	fsr2l,c
 14722  012132  0EFF               	movlw	255
 14723  012134  20E2               	addwfc	fsr1h,w,c
 14724  012136  6EDA               	movwf	fsr2h,c
 14725  012138  50DF               	movf	indf2,w,c
 14726  01213A  0240               	mulwf	(btemp+11)^0,c
 14727                           
 14728                           ;stkvar	_temp @ sp[(-13)+8]
 14729  01213C  0EFB               	movlw	-5
 14730  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14731  012144  0EFC               	movlw	-4
 14732  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14733                           
 14734                           ;stkvar	_temp @ sp[(-13)+8]
 14735  01214C  0EFB               	movlw	-5
 14736  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14737  012154  0EFC               	movlw	-4
 14738  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14739                           
 14740                           ;stkvar	_grs @ sp[(-13)+4]
 14741  01215C  50E1               	movf	fsr1l,w,c
 14742  01215E  0FF7               	addlw	-9
 14743  012160  6ED9               	movwf	fsr2l,c
 14744  012162  50E2               	movf	fsr1h,w,c
 14745  012164  6EDA               	movwf	fsr2h,c
 14746  012166  0EFF               	movlw	255
 14747  012168  22DA               	addwfc	fsr2h,f,c
 14748  01216A  503F               	movf	(btemp+10)^0,w,c
 14749  01216C  26DE               	addwf	postinc2,f,c
 14750  01216E  5040               	movf	(btemp+11)^0,w,c
 14751  012170  22DE               	addwfc	postinc2,f,c
 14752  012172  0E00               	movlw	0
 14753  012174  22DE               	addwfc	postinc2,f,c
 14754  012176  22DE               	addwfc	postinc2,f,c
 14755                           
 14756                           ;stkvar	_grs @ sp[(-13)+4]
 14757  012178  50E1               	movf	fsr1l,w,c
 14758  01217A  0FF7               	addlw	-9
 14759  01217C  6ED9               	movwf	fsr2l,c
 14760  01217E  50E2               	movf	fsr1h,w,c
 14761  012180  6EDA               	movwf	fsr2h,c
 14762  012182  0EFF               	movlw	255
 14763  012184  22DA               	addwfc	fsr2h,f,c
 14764  012186  0E08               	movlw	8
 14765  012188                     u5625:
 14766  012188  90D8               	bcf	status,0,c
 14767  01218A  36DE               	rlcf	postinc2,f,c
 14768  01218C  36DE               	rlcf	postinc2,f,c
 14769  01218E  36DE               	rlcf	postinc2,f,c
 14770  012190  36DD               	rlcf	postdec2,f,c
 14771  012192  52DD               	movf	postdec2,f,c
 14772  012194  52DD               	movf	postdec2,f,c
 14773  012196  2EE8               	decfsz	wreg,f,c
 14774  012198  D7F7               	goto	u5625
 14775                           
 14776                           ;stkvar	_b @ sp[(-13)+-4]
 14777  01219A  0EEF               	movlw	-17
 14778  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14779                           
 14780                           ;stkvar	_a @ sp[(-13)+-8]
 14781  0121A2  0EEB               	movlw	-21
 14782  0121A4  50E3               	movf	plusw1,w,c
 14783  0121A6  0240               	mulwf	(btemp+11)^0,c
 14784                           
 14785                           ;stkvar	_temp @ sp[(-13)+8]
 14786  0121A8  0EFB               	movlw	-5
 14787  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14788  0121B0  0EFC               	movlw	-4
 14789  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14790                           
 14791                           ;stkvar	_temp @ sp[(-13)+8]
 14792  0121B8  0EFB               	movlw	-5
 14793  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14794  0121C0  0EFC               	movlw	-4
 14795  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14796                           
 14797                           ;stkvar	_grs @ sp[(-13)+4]
 14798  0121C8  50E1               	movf	fsr1l,w,c
 14799  0121CA  0FF7               	addlw	-9
 14800  0121CC  6ED9               	movwf	fsr2l,c
 14801  0121CE  50E2               	movf	fsr1h,w,c
 14802  0121D0  6EDA               	movwf	fsr2h,c
 14803  0121D2  0EFF               	movlw	255
 14804  0121D4  22DA               	addwfc	fsr2h,f,c
 14805  0121D6  503F               	movf	(btemp+10)^0,w,c
 14806  0121D8  26DE               	addwf	postinc2,f,c
 14807  0121DA  5040               	movf	(btemp+11)^0,w,c
 14808  0121DC  22DE               	addwfc	postinc2,f,c
 14809  0121DE  0E00               	movlw	0
 14810  0121E0  22DE               	addwfc	postinc2,f,c
 14811  0121E2  22DE               	addwfc	postinc2,f,c
 14812                           
 14813                           ;stkvar	_b @ sp[(-13)+-4]
 14814  0121E4  0EF0               	movlw	240
 14815  0121E6  24E1               	addwf	fsr1l,w,c
 14816  0121E8  6ED9               	movwf	fsr2l,c
 14817  0121EA  0EFF               	movlw	255
 14818  0121EC  20E2               	addwfc	fsr1h,w,c
 14819  0121EE  6EDA               	movwf	fsr2h,c
 14820  0121F0  50DF               	movf	indf2,w,c
 14821  0121F2  6E40               	movwf	(btemp+11)^0,c
 14822                           
 14823                           ;stkvar	_a @ sp[(-13)+-8]
 14824  0121F4  0EED               	movlw	237
 14825  0121F6  24E1               	addwf	fsr1l,w,c
 14826  0121F8  6ED9               	movwf	fsr2l,c
 14827  0121FA  0EFF               	movlw	255
 14828  0121FC  20E2               	addwfc	fsr1h,w,c
 14829  0121FE  6EDA               	movwf	fsr2h,c
 14830  012200  50DF               	movf	indf2,w,c
 14831  012202  0240               	mulwf	(btemp+11)^0,c
 14832                           
 14833                           ;stkvar	_temp @ sp[(-13)+8]
 14834  012204  0EFB               	movlw	-5
 14835  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14836  01220C  0EFC               	movlw	-4
 14837  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14838                           
 14839                           ;stkvar	_temp @ sp[(-13)+8]
 14840  012214  0EFB               	movlw	-5
 14841  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14842  01221C  0EFC               	movlw	-4
 14843  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14844                           
 14845                           ;stkvar	_prod @ sp[(-13)+0]
 14846  012224  50E1               	movf	fsr1l,w,c
 14847  012226  0FF3               	addlw	-13
 14848  012228  6ED9               	movwf	fsr2l,c
 14849  01222A  50E2               	movf	fsr1h,w,c
 14850  01222C  6EDA               	movwf	fsr2h,c
 14851  01222E  0EFF               	movlw	255
 14852  012230  22DA               	addwfc	fsr2h,f,c
 14853  012232  503F               	movf	(btemp+10)^0,w,c
 14854  012234  26DE               	addwf	postinc2,f,c
 14855  012236  5040               	movf	(btemp+11)^0,w,c
 14856  012238  22DE               	addwfc	postinc2,f,c
 14857  01223A  0E00               	movlw	0
 14858  01223C  22DE               	addwfc	postinc2,f,c
 14859  01223E  22DE               	addwfc	postinc2,f,c
 14860                           
 14861                           ;stkvar	_b @ sp[(-13)+-4]
 14862  012240  0EF1               	movlw	241
 14863  012242  24E1               	addwf	fsr1l,w,c
 14864  012244  6ED9               	movwf	fsr2l,c
 14865  012246  0EFF               	movlw	255
 14866  012248  20E2               	addwfc	fsr1h,w,c
 14867  01224A  6EDA               	movwf	fsr2h,c
 14868  01224C  50DF               	movf	indf2,w,c
 14869  01224E  6E40               	movwf	(btemp+11)^0,c
 14870                           
 14871                           ;stkvar	_a @ sp[(-13)+-8]
 14872  012250  0EEC               	movlw	236
 14873  012252  24E1               	addwf	fsr1l,w,c
 14874  012254  6ED9               	movwf	fsr2l,c
 14875  012256  0EFF               	movlw	255
 14876  012258  20E2               	addwfc	fsr1h,w,c
 14877  01225A  6EDA               	movwf	fsr2h,c
 14878  01225C  50DF               	movf	indf2,w,c
 14879  01225E  0240               	mulwf	(btemp+11)^0,c
 14880                           
 14881                           ;stkvar	_temp @ sp[(-13)+8]
 14882  012260  0EFB               	movlw	-5
 14883  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14884  012268  0EFC               	movlw	-4
 14885  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14886                           
 14887                           ;stkvar	_temp @ sp[(-13)+8]
 14888  012270  0EFB               	movlw	-5
 14889  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14890  012278  0EFC               	movlw	-4
 14891  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14892                           
 14893                           ;stkvar	_prod @ sp[(-13)+0]
 14894  012280  50E1               	movf	fsr1l,w,c
 14895  012282  0FF3               	addlw	-13
 14896  012284  6ED9               	movwf	fsr2l,c
 14897  012286  50E2               	movf	fsr1h,w,c
 14898  012288  6EDA               	movwf	fsr2h,c
 14899  01228A  0EFF               	movlw	255
 14900  01228C  22DA               	addwfc	fsr2h,f,c
 14901  01228E  503F               	movf	(btemp+10)^0,w,c
 14902  012290  26DE               	addwf	postinc2,f,c
 14903  012292  5040               	movf	(btemp+11)^0,w,c
 14904  012294  22DE               	addwfc	postinc2,f,c
 14905  012296  0E00               	movlw	0
 14906  012298  22DE               	addwfc	postinc2,f,c
 14907  01229A  22DE               	addwfc	postinc2,f,c
 14908                           
 14909                           ;stkvar	_b @ sp[(-13)+-4]
 14910  01229C  0EF1               	movlw	241
 14911  01229E  24E1               	addwf	fsr1l,w,c
 14912  0122A0  6ED9               	movwf	fsr2l,c
 14913  0122A2  0EFF               	movlw	255
 14914  0122A4  20E2               	addwfc	fsr1h,w,c
 14915  0122A6  6EDA               	movwf	fsr2h,c
 14916  0122A8  50DF               	movf	indf2,w,c
 14917  0122AA  6E40               	movwf	(btemp+11)^0,c
 14918                           
 14919                           ;stkvar	_a @ sp[(-13)+-8]
 14920  0122AC  0EED               	movlw	237
 14921  0122AE  24E1               	addwf	fsr1l,w,c
 14922  0122B0  6ED9               	movwf	fsr2l,c
 14923  0122B2  0EFF               	movlw	255
 14924  0122B4  20E2               	addwfc	fsr1h,w,c
 14925  0122B6  6EDA               	movwf	fsr2h,c
 14926  0122B8  50DF               	movf	indf2,w,c
 14927  0122BA  0240               	mulwf	(btemp+11)^0,c
 14928                           
 14929                           ;stkvar	_temp @ sp[(-13)+8]
 14930  0122BC  0EFB               	movlw	-5
 14931  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 14932  0122C4  0EFC               	movlw	-4
 14933  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 14934                           
 14935                           ;stkvar	_temp @ sp[(-13)+8]
 14936  0122CC  0EFB               	movlw	-5
 14937  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 14938  0122D4  0EFC               	movlw	-4
 14939  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 14940  0122DC  503F               	movf	(btemp+10)^0,w,c
 14941  0122DE  6E39               	movwf	(btemp+4)^0,c
 14942  0122E0  5040               	movf	(btemp+11)^0,w,c
 14943  0122E2  6E3A               	movwf	(btemp+5)^0,c
 14944  0122E4  6A3B               	clrf	(btemp+6)^0,c
 14945  0122E6  6A3C               	clrf	(btemp+7)^0,c
 14946  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 14947  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 14948  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 14949  0122FA  6A39               	clrf	(btemp+4)^0,c
 14950                           
 14951                           ;stkvar	_prod @ sp[(-13)+0]
 14952  0122FC  50E1               	movf	fsr1l,w,c
 14953  0122FE  0FF3               	addlw	-13
 14954  012300  6ED9               	movwf	fsr2l,c
 14955  012302  50E2               	movf	fsr1h,w,c
 14956  012304  6EDA               	movwf	fsr2h,c
 14957  012306  0EFF               	movlw	255
 14958  012308  22DA               	addwfc	fsr2h,f,c
 14959  01230A  5039               	movf	(btemp+4)^0,w,c
 14960  01230C  26DE               	addwf	postinc2,f,c
 14961  01230E  503A               	movf	(btemp+5)^0,w,c
 14962  012310  22DE               	addwfc	postinc2,f,c
 14963  012312  503B               	movf	(btemp+6)^0,w,c
 14964  012314  22DE               	addwfc	postinc2,f,c
 14965  012316  503C               	movf	(btemp+7)^0,w,c
 14966  012318  22DE               	addwfc	postinc2,f,c
 14967                           
 14968                           ;stkvar	_prod @ sp[(-13)+0]
 14969  01231A  50E1               	movf	fsr1l,w,c
 14970  01231C  0FF3               	addlw	-13
 14971  01231E  6ED9               	movwf	fsr2l,c
 14972  012320  50E2               	movf	fsr1h,w,c
 14973  012322  6EDA               	movwf	fsr2h,c
 14974  012324  0EFF               	movlw	255
 14975  012326  22DA               	addwfc	fsr2h,f,c
 14976                           
 14977                           ;stkvar	_grs @ sp[(-13)+4]
 14978  012328  0EFA               	movlw	250
 14979  01232A  24E1               	addwf	fsr1l,w,c
 14980  01232C  6EE9               	movwf	fsr0l,c
 14981  01232E  0EFF               	movlw	255
 14982  012330  20E2               	addwfc	fsr1h,w,c
 14983  012332  6EEA               	movwf	fsr0h,c
 14984  012334  50EF               	movf	indf0,w,c
 14985  012336  26DE               	addwf	postinc2,f,c
 14986  012338  0E00               	movlw	0
 14987  01233A  22DE               	addwfc	postinc2,f,c
 14988  01233C  22DE               	addwfc	postinc2,f,c
 14989  01233E  22DE               	addwfc	postinc2,f,c
 14990                           
 14991                           ;stkvar	_grs @ sp[(-13)+4]
 14992  012340  50E1               	movf	fsr1l,w,c
 14993  012342  0FF7               	addlw	-9
 14994  012344  6ED9               	movwf	fsr2l,c
 14995  012346  50E2               	movf	fsr1h,w,c
 14996  012348  6EDA               	movwf	fsr2h,c
 14997  01234A  0EFF               	movlw	255
 14998  01234C  22DA               	addwfc	fsr2h,f,c
 14999  01234E  0E08               	movlw	8
 15000  012350                     u5635:
 15001  012350  90D8               	bcf	status,0,c
 15002  012352  36DE               	rlcf	postinc2,f,c
 15003  012354  36DE               	rlcf	postinc2,f,c
 15004  012356  36DE               	rlcf	postinc2,f,c
 15005  012358  36DD               	rlcf	postdec2,f,c
 15006  01235A  52DD               	movf	postdec2,f,c
 15007  01235C  52DD               	movf	postdec2,f,c
 15008  01235E  2EE8               	decfsz	wreg,f,c
 15009  012360  D7F7               	goto	u5635
 15010  012362  0E82               	movlw	130
 15011  012364  6E3F               	movwf	(btemp+10)^0,c
 15012  012366  0EFF               	movlw	255
 15013  012368  6E40               	movwf	(btemp+11)^0,c
 15014                           
 15015                           ;stkvar	_bexp @ sp[(-13)+10]
 15016  01236A  0EFD               	movlw	-3
 15017  01236C  50E3               	movf	plusw1,w,c
 15018  01236E  6E3D               	movwf	(btemp+8)^0,c
 15019  012370  6A3E               	clrf	(btemp+9)^0,c
 15020                           
 15021                           ;stkvar	_aexp @ sp[(-13)+11]
 15022  012372  0EFE               	movlw	-2
 15023  012374  50E3               	movf	plusw1,w,c
 15024  012376  263D               	addwf	(btemp+8)^0,f,c
 15025  012378  0E00               	movlw	0
 15026  01237A  223E               	addwfc	(btemp+9)^0,f,c
 15027  01237C  503F               	movf	(btemp+10)^0,w,c
 15028  01237E  263D               	addwf	(btemp+8)^0,f,c
 15029  012380  5040               	movf	(btemp+11)^0,w,c
 15030  012382  223E               	addwfc	(btemp+9)^0,f,c
 15031                           
 15032                           ;stkvar	_temp @ sp[(-13)+8]
 15033  012384  0EFB               	movlw	-5
 15034  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15035  01238C  0EFC               	movlw	-4
 15036  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15037  012394  D021               	goto	l6616
 15038  012396                     l6606:
 15039                           
 15040                           ;stkvar	_prod @ sp[(-13)+0]
 15041  012396  90D8               	bcf	status,0,c
 15042  012398  0EF3               	movlw	-13
 15043  01239A  36E3               	rlcf	plusw1,f,c
 15044  01239C  0EF4               	movlw	-12
 15045  01239E  36E3               	rlcf	plusw1,f,c
 15046  0123A0  0EF5               	movlw	-11
 15047  0123A2  36E3               	rlcf	plusw1,f,c
 15048  0123A4  0EF6               	movlw	-10
 15049  0123A6  36E3               	rlcf	plusw1,f,c
 15050                           
 15051                           ;stkvar	_grs @ sp[(-13)+4]
 15052  0123A8  0EFA               	movlw	-6
 15053  0123AA  AEE3               	btfss	plusw1,7,c
 15054  0123AC  D002               	goto	l6612
 15055                           
 15056                           ;stkvar	_prod @ sp[(-13)+0]
 15057  0123AE  0EF3               	movlw	-13
 15058  0123B0  80E3               	bsf	plusw1,0,c
 15059  0123B2                     l6612:
 15060                           
 15061                           ;stkvar	_grs @ sp[(-13)+4]
 15062  0123B2  90D8               	bcf	status,0,c
 15063  0123B4  0EF7               	movlw	-9
 15064  0123B6  36E3               	rlcf	plusw1,f,c
 15065  0123B8  0EF8               	movlw	-8
 15066  0123BA  36E3               	rlcf	plusw1,f,c
 15067  0123BC  0EF9               	movlw	-7
 15068  0123BE  36E3               	rlcf	plusw1,f,c
 15069  0123C0  0EFA               	movlw	-6
 15070  0123C2  36E3               	rlcf	plusw1,f,c
 15071                           
 15072                           ;stkvar	_temp @ sp[(-13)+8]
 15073  0123C4  50E1               	movf	fsr1l,w,c
 15074  0123C6  0FFB               	addlw	-5
 15075  0123C8  6ED9               	movwf	fsr2l,c
 15076  0123CA  50E2               	movf	fsr1h,w,c
 15077  0123CC  6EDA               	movwf	fsr2h,c
 15078  0123CE  0EFF               	movlw	255
 15079  0123D0  22DA               	addwfc	fsr2h,f,c
 15080  0123D2  06DE               	decf	postinc2,f,c
 15081  0123D4  0E00               	movlw	0
 15082  0123D6  5ADD               	subwfb	postdec2,f,c
 15083  0123D8                     l6616:
 15084                           
 15085                           ;stkvar	_prod @ sp[(-13)+0]
 15086  0123D8  0EF5               	movlw	-11
 15087  0123DA  AEE3               	btfss	plusw1,7,c
 15088  0123DC  D7DC               	goto	l6606
 15089                           
 15090                           ;stkvar	_aexp @ sp[(-13)+11]
 15091  0123DE  0EFE               	movlw	-2
 15092  0123E0  6AE3               	clrf	plusw1,c
 15093                           
 15094                           ;stkvar	_grs @ sp[(-13)+4]
 15095  0123E2  0EFA               	movlw	-6
 15096  0123E4  AEE3               	btfss	plusw1,7,c
 15097  0123E6  D020               	goto	l6630
 15098                           
 15099                           ;stkvar	_grs @ sp[(-13)+4]
 15100  0123E8  50E1               	movf	fsr1l,w,c
 15101  0123EA  0FF7               	addlw	-9
 15102  0123EC  6ED9               	movwf	fsr2l,c
 15103  0123EE  50E2               	movf	fsr1h,w,c
 15104  0123F0  6EDA               	movwf	fsr2h,c
 15105  0123F2  0EFF               	movlw	255
 15106  0123F4  22DA               	addwfc	fsr2h,f,c
 15107  0123F6  0EFF               	movlw	255
 15108  0123F8  14DE               	andwf	postinc2,w,c
 15109  0123FA  6E3D               	movwf	(btemp+8)^0,c
 15110  0123FC  0EFF               	movlw	255
 15111  0123FE  14DE               	andwf	postinc2,w,c
 15112  012400  6E3E               	movwf	(btemp+9)^0,c
 15113  012402  0EFF               	movlw	255
 15114  012404  14DE               	andwf	postinc2,w,c
 15115  012406  6E3F               	movwf	(btemp+10)^0,c
 15116  012408  0E7F               	movlw	127
 15117  01240A  14DE               	andwf	postinc2,w,c
 15118  01240C  6E40               	movwf	(btemp+11)^0,c
 15119  01240E  503D               	movf	(btemp+8)^0,w,c
 15120  012410  103E               	iorwf	(btemp+9)^0,w,c
 15121  012412  103F               	iorwf	(btemp+10)^0,w,c
 15122  012414  1040               	iorwf	(btemp+11)^0,w,c
 15123  012416  B4D8               	btfsc	status,2,c
 15124  012418  D004               	goto	l6626
 15125  01241A                     u5670:
 15126                           
 15127                           ;stkvar	_aexp @ sp[(-13)+11]
 15128  01241A  0EFE               	movlw	-2
 15129  01241C  6AE3               	clrf	plusw1,c
 15130  01241E  2AE3               	incf	plusw1,f,c
 15131  012420  D003               	goto	l6630
 15132  012422                     l6626:
 15133                           
 15134                           ;stkvar	_prod @ sp[(-13)+0]
 15135  012422  0EF3               	movlw	-13
 15136  012424  B0E3               	btfsc	plusw1,0,c
 15137  012426  D7F9               	goto	u5670
 15138  012428                     l6630:
 15139                           
 15140                           ;stkvar	_aexp @ sp[(-13)+11]
 15141  012428  0EFE               	movlw	-2
 15142  01242A  50E3               	movf	plusw1,w,c
 15143  01242C  B4D8               	btfsc	status,2,c
 15144  01242E  D036               	goto	l6640
 15145                           
 15146                           ;stkvar	_prod @ sp[(-13)+0]
 15147  012430  50E1               	movf	fsr1l,w,c
 15148  012432  0FF3               	addlw	-13
 15149  012434  6ED9               	movwf	fsr2l,c
 15150  012436  50E2               	movf	fsr1h,w,c
 15151  012438  6EDA               	movwf	fsr2h,c
 15152  01243A  0EFF               	movlw	255
 15153  01243C  22DA               	addwfc	fsr2h,f,c
 15154  01243E  2ADE               	incf	postinc2,f,c
 15155  012440  0E00               	movlw	0
 15156  012442  22DE               	addwfc	postinc2,f,c
 15157  012444  22DE               	addwfc	postinc2,f,c
 15158  012446  22DE               	addwfc	postinc2,f,c
 15159                           
 15160                           ;stkvar	_prod @ sp[(-13)+0]
 15161  012448  0EF6               	movlw	-10
 15162  01244A  A0E3               	btfss	plusw1,0,c
 15163  01244C  D027               	goto	l6640
 15164  01244E  0E01               	movlw	1
 15165  012450  6E40               	movwf	(btemp+11)^0,c
 15166                           
 15167                           ;stkvar	_prod @ sp[(-13)+0]
 15168  012452  50E1               	movf	fsr1l,w,c
 15169  012454  0FF3               	addlw	-13
 15170  012456  6ED9               	movwf	fsr2l,c
 15171  012458  50E2               	movf	fsr1h,w,c
 15172  01245A  6EDA               	movwf	fsr2h,c
 15173  01245C  0EFF               	movlw	255
 15174  01245E  22DA               	addwfc	fsr2h,f,c
 15175  012460  2840               	incf	(btemp+11)^0,w,c
 15176  012462  52DE               	movf	postinc2,f,c
 15177  012464  D008               	goto	u5710
 15178  012466                     u5715:
 15179  012466  52DE               	movf	postinc2,f,c
 15180  012468  90D8               	bcf	status,0,c
 15181  01246A  BEDC               	btfsc	preinc2,7,c
 15182  01246C  80D8               	bsf	status,0,c
 15183  01246E  32DD               	rrcf	postdec2,f,c
 15184  012470  32DD               	rrcf	postdec2,f,c
 15185  012472  32DD               	rrcf	postdec2,f,c
 15186  012474  32DE               	rrcf	postinc2,f,c
 15187  012476                     u5710:
 15188  012476  2EE8               	decfsz	wreg,f,c
 15189  012478  D7F6               	goto	u5715
 15190                           
 15191                           ;stkvar	_temp @ sp[(-13)+8]
 15192  01247A  0EFB               	movlw	-5
 15193  01247C  50E3               	movf	plusw1,w,c
 15194  01247E  0F01               	addlw	1
 15195  012480  6E35               	movwf	btemp^0,c
 15196  012482  0EFB               	movlw	-5
 15197  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 15198  01248A  6A35               	clrf	btemp^0,c
 15199  01248C  0EFC               	movlw	-4
 15200  01248E  50E3               	movf	plusw1,w,c
 15201  012490  2035               	addwfc	btemp^0,w,c
 15202  012492  6E35               	movwf	btemp^0,c
 15203  012494  0EFC               	movlw	-4
 15204  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 15205  01249C                     l6640:
 15206                           
 15207                           ;stkvar	_temp @ sp[(-13)+8]
 15208  01249C  0EFC               	movlw	-4
 15209  01249E  BEE3               	btfsc	plusw1,7,c
 15210  0124A0  D020               	goto	l6644
 15211  0124A2  0EFC               	movlw	-4
 15212  0124A4  50E3               	movf	plusw1,w,c
 15213  0124A6  E104               	bnz	u5720
 15214  0124A8  0EFB               	movlw	-5
 15215  0124AA  28E3               	incf	plusw1,w,c
 15216  0124AC  A0D8               	btfss	status,0,c
 15217  0124AE  D019               	goto	l6644
 15218  0124B0                     u5720:
 15219  0124B0  0E00               	movlw	0
 15220  0124B2  6E3D               	movwf	(btemp+8)^0,c
 15221  0124B4  0E00               	movlw	0
 15222  0124B6  6E3E               	movwf	(btemp+9)^0,c
 15223  0124B8  0E80               	movlw	128
 15224  0124BA  6E3F               	movwf	(btemp+10)^0,c
 15225  0124BC  0E7F               	movlw	127
 15226  0124BE  6E40               	movwf	(btemp+11)^0,c
 15227                           
 15228                           ;stkvar	_prod @ sp[(-13)+0]
 15229  0124C0  0EF3               	movlw	-13
 15230  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15231  0124C8  0EF4               	movlw	-12
 15232  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15233  0124D0  0EF5               	movlw	-11
 15234  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15235  0124D8  0EF6               	movlw	-10
 15236  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15237  0124E0  D044               	goto	l6660
 15238  0124E2                     l6644:
 15239                           
 15240                           ;stkvar	_temp @ sp[(-13)+8]
 15241  0124E2  0EFC               	movlw	-4
 15242  0124E4  BEE3               	btfsc	plusw1,7,c
 15243  0124E6  D007               	goto	u5730
 15244  0124E8  0EFC               	movlw	-4
 15245  0124EA  50E3               	movf	plusw1,w,c
 15246  0124EC  E10F               	bnz	l6650
 15247  0124EE  0EFB               	movlw	-5
 15248  0124F0  04E3               	decf	plusw1,w,c
 15249  0124F2  B0D8               	btfsc	status,0,c
 15250  0124F4  D00B               	goto	l6650
 15251  0124F6                     u5730:
 15252                           
 15253                           ;stkvar	_prod @ sp[(-13)+0]
 15254  0124F6  0EF3               	movlw	-13
 15255  0124F8  6AE3               	clrf	plusw1,c
 15256  0124FA  0EF4               	movlw	-12
 15257  0124FC  6AE3               	clrf	plusw1,c
 15258  0124FE  0EF5               	movlw	-11
 15259  012500  6AE3               	clrf	plusw1,c
 15260  012502  0EF6               	movlw	-10
 15261  012504  6AE3               	clrf	plusw1,c
 15262                           
 15263                           ;stkvar	_sign @ sp[(-13)+12]
 15264  012506  0EFF               	movlw	-1
 15265  012508  6AE3               	clrf	plusw1,c
 15266  01250A  D02F               	goto	l6660
 15267  01250C                     l6650:
 15268                           
 15269                           ;stkvar	_temp @ sp[(-13)+8]
 15270                           ;stkvar	_bexp @ sp[(-13)+10]
 15271  01250C  0EFB               	movlw	-5
 15272  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15273  012514  0EFD               	movlw	-3
 15274  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15275                           
 15276                           ;stkvar	_prod @ sp[(-13)+0]
 15277  01251C  50E1               	movf	fsr1l,w,c
 15278  01251E  0FF3               	addlw	-13
 15279  012520  6ED9               	movwf	fsr2l,c
 15280  012522  50E2               	movf	fsr1h,w,c
 15281  012524  6EDA               	movwf	fsr2h,c
 15282  012526  0EFF               	movlw	255
 15283  012528  22DA               	addwfc	fsr2h,f,c
 15284  01252A  0EFF               	movlw	255
 15285  01252C  16DE               	andwf	postinc2,f,c
 15286  01252E  0EFF               	movlw	255
 15287  012530  16DE               	andwf	postinc2,f,c
 15288  012532  0E7F               	movlw	127
 15289  012534  16DE               	andwf	postinc2,f,c
 15290  012536  0E00               	movlw	0
 15291  012538  16DE               	andwf	postinc2,f,c
 15292                           
 15293                           ;stkvar	_bexp @ sp[(-13)+10]
 15294  01253A  0EFD               	movlw	-3
 15295  01253C  A0E3               	btfss	plusw1,0,c
 15296  01253E  D008               	goto	l6658
 15297                           
 15298                           ;stkvar	_prod @ sp[(-13)+0]
 15299  012540  0EF5               	movlw	245
 15300  012542  24E1               	addwf	fsr1l,w,c
 15301  012544  6ED9               	movwf	fsr2l,c
 15302  012546  0EFF               	movlw	255
 15303  012548  20E2               	addwfc	fsr1h,w,c
 15304  01254A  6EDA               	movwf	fsr2h,c
 15305  01254C  0E00               	movlw	0
 15306  01254E  8EDB               	bsf	plusw2,7,c
 15307  012550                     l6658:
 15308                           
 15309                           ;stkvar	_prod @ sp[(-13)+0]
 15310  012550  0EF6               	movlw	246
 15311  012552  24E1               	addwf	fsr1l,w,c
 15312  012554  6ED9               	movwf	fsr2l,c
 15313  012556  0EFF               	movlw	255
 15314  012558  20E2               	addwfc	fsr1h,w,c
 15315  01255A  6EDA               	movwf	fsr2h,c
 15316                           
 15317                           ;stkvar	_bexp @ sp[(-13)+10]
 15318  01255C  0EFD               	movlw	-3
 15319  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15320  012564  90D8               	bcf	status,0,c
 15321  012566  3040               	rrcf	(btemp+11)^0,w,c
 15322  012568  6EDF               	movwf	indf2,c
 15323  01256A                     l6660:
 15324                           
 15325                           ;stkvar	_sign @ sp[(-13)+12]
 15326  01256A  0EFF               	movlw	-1
 15327  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15328                           
 15329                           ;stkvar	_prod @ sp[(-13)+0]
 15330  012572  0EF6               	movlw	246
 15331  012574  24E1               	addwf	fsr1l,w,c
 15332  012576  6ED9               	movwf	fsr2l,c
 15333  012578  0EFF               	movlw	255
 15334  01257A  20E2               	addwfc	fsr1h,w,c
 15335  01257C  6EDA               	movwf	fsr2h,c
 15336  01257E  5040               	movf	(btemp+11)^0,w,c
 15337  012580  12DF               	iorwf	indf2,f,c
 15338                           
 15339                           ;stkvar	_prod @ sp[(-13)+0]
 15340  012582  0EF3               	movlw	-13
 15341  012584  006F FF8C  F035    	movff	plusw1,btemp
 15342  01258A  0EF4               	movlw	-12
 15343  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15344  012592  0EF5               	movlw	-11
 15345  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15346  01259A  0EF6               	movlw	-10
 15347  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15348  0125A2                     l2582:
 15349                           
 15350                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15351  0125A2  0EEB               	movlw	235
 15352  0125A4  26E1               	addwf	fsr1l,f,c
 15353  0125A6  0EFF               	movlw	255
 15354  0125A8  22E2               	addwfc	fsr1h,f,c
 15355  0125AA  0012               	return		;funcret
 15356  0125AC                     __end_of___flmul:
 15357                           	opt callstack 0
 15358                           
 15359 ;; *************** function ___flge *****************
 15360 ;; Defined at:
 15361 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  ff1             4  [STACK] unsigned char 
 15364 ;;  ff2             4  [STACK] unsigned char 
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;		None
 15367 ;; Return value:  Size  Location     Type
 15368 ;;		None               void
 15369 ;; Registers used:
 15370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15371 ;; Tracked objects:
 15372 ;;		On entry : 0/4
 15373 ;;		On exit  : 0/0
 15374 ;;		Unchanged: 0/0
 15375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15380 ;;Total ram usage:        0 bytes
 15381 ;; Hardware stack levels used:    1
 15382 ;; Hardware stack levels required when called:    6
 15383 ;; This function calls:
 15384 ;;		Nothing
 15385 ;; This function is called by:
 15386 ;;		_efgtoa
 15387 ;; This function uses a reentrant model
 15388 ;;
 15389                           
 15390                           	psect	text50
 15391  015FCA                     __ptext50:
 15392                           	opt callstack 0
 15393  015FCA                     ___flge:
 15394                           	opt callstack 17
 15395                           
 15396                           ;stkvar	_ff1 @ sp[(0)+-4]
 15397                           
 15398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15399                           ;incstack = 0
 15400  015FCA  50E1               	movf	fsr1l,w,c
 15401  015FCC  0FFC               	addlw	-4
 15402  015FCE  6ED9               	movwf	fsr2l,c
 15403  015FD0  50E2               	movf	fsr1h,w,c
 15404  015FD2  6EDA               	movwf	fsr2h,c
 15405  015FD4  0EFF               	movlw	255
 15406  015FD6  22DA               	addwfc	fsr2h,f,c
 15407  015FD8  0E00               	movlw	0
 15408  015FDA  14DE               	andwf	postinc2,w,c
 15409  015FDC  6E3D               	movwf	(btemp+8)^0,c
 15410  015FDE  0E00               	movlw	0
 15411  015FE0  14DE               	andwf	postinc2,w,c
 15412  015FE2  6E3E               	movwf	(btemp+9)^0,c
 15413  015FE4  0E80               	movlw	128
 15414  015FE6  14DE               	andwf	postinc2,w,c
 15415  015FE8  6E3F               	movwf	(btemp+10)^0,c
 15416  015FEA  0E7F               	movlw	127
 15417  015FEC  14DE               	andwf	postinc2,w,c
 15418  015FEE  6E40               	movwf	(btemp+11)^0,c
 15419  015FF0  503D               	movf	(btemp+8)^0,w,c
 15420  015FF2  103E               	iorwf	(btemp+9)^0,w,c
 15421  015FF4  103F               	iorwf	(btemp+10)^0,w,c
 15422  015FF6  1040               	iorwf	(btemp+11)^0,w,c
 15423  015FF8  A4D8               	btfss	status,2,c
 15424  015FFA  D008               	goto	l6776
 15425                           
 15426                           ;stkvar	_ff1 @ sp[(0)+-4]
 15427  015FFC  0EFC               	movlw	-4
 15428  015FFE  6AE3               	clrf	plusw1,c
 15429  016000  0EFD               	movlw	-3
 15430  016002  6AE3               	clrf	plusw1,c
 15431  016004  0EFE               	movlw	-2
 15432  016006  6AE3               	clrf	plusw1,c
 15433  016008  0EFF               	movlw	-1
 15434  01600A  6AE3               	clrf	plusw1,c
 15435  01600C                     l6776:
 15436                           
 15437                           ;stkvar	_ff2 @ sp[(0)+-8]
 15438  01600C  50E1               	movf	fsr1l,w,c
 15439  01600E  0FF8               	addlw	-8
 15440  016010  6ED9               	movwf	fsr2l,c
 15441  016012  50E2               	movf	fsr1h,w,c
 15442  016014  6EDA               	movwf	fsr2h,c
 15443  016016  0EFF               	movlw	255
 15444  016018  22DA               	addwfc	fsr2h,f,c
 15445  01601A  0E00               	movlw	0
 15446  01601C  14DE               	andwf	postinc2,w,c
 15447  01601E  6E3D               	movwf	(btemp+8)^0,c
 15448  016020  0E00               	movlw	0
 15449  016022  14DE               	andwf	postinc2,w,c
 15450  016024  6E3E               	movwf	(btemp+9)^0,c
 15451  016026  0E80               	movlw	128
 15452  016028  14DE               	andwf	postinc2,w,c
 15453  01602A  6E3F               	movwf	(btemp+10)^0,c
 15454  01602C  0E7F               	movlw	127
 15455  01602E  14DE               	andwf	postinc2,w,c
 15456  016030  6E40               	movwf	(btemp+11)^0,c
 15457  016032  503D               	movf	(btemp+8)^0,w,c
 15458  016034  103E               	iorwf	(btemp+9)^0,w,c
 15459  016036  103F               	iorwf	(btemp+10)^0,w,c
 15460  016038  1040               	iorwf	(btemp+11)^0,w,c
 15461  01603A  A4D8               	btfss	status,2,c
 15462  01603C  D008               	goto	l2227
 15463                           
 15464                           ;stkvar	_ff2 @ sp[(0)+-8]
 15465  01603E  0EF8               	movlw	-8
 15466  016040  6AE3               	clrf	plusw1,c
 15467  016042  0EF9               	movlw	-7
 15468  016044  6AE3               	clrf	plusw1,c
 15469  016046  0EFA               	movlw	-6
 15470  016048  6AE3               	clrf	plusw1,c
 15471  01604A  0EFB               	movlw	-5
 15472  01604C  6AE3               	clrf	plusw1,c
 15473  01604E                     l2227:
 15474                           
 15475                           ;stkvar	_ff1 @ sp[(0)+-4]
 15476  01604E  0EFF               	movlw	-1
 15477  016050  AEE3               	btfss	plusw1,7,c
 15478  016052  D024               	goto	l6782
 15479                           
 15480                           ;stkvar	_ff1 @ sp[(0)+-4]
 15481  016054  0E00               	movlw	0
 15482  016056  6E3D               	movwf	(btemp+8)^0,c
 15483  016058  0E00               	movlw	0
 15484  01605A  6E3E               	movwf	(btemp+9)^0,c
 15485  01605C  0E00               	movlw	0
 15486  01605E  6E3F               	movwf	(btemp+10)^0,c
 15487  016060  0E80               	movlw	128
 15488  016062  6E40               	movwf	(btemp+11)^0,c
 15489  016064  0EFC               	movlw	-4
 15490  016066  50E3               	movf	plusw1,w,c
 15491  016068  5E3D               	subwf	(btemp+8)^0,f,c
 15492  01606A  0EFD               	movlw	-3
 15493  01606C  50E3               	movf	plusw1,w,c
 15494  01606E  5A3E               	subwfb	(btemp+9)^0,f,c
 15495  016070  0EFE               	movlw	-2
 15496  016072  50E3               	movf	plusw1,w,c
 15497  016074  5A3F               	subwfb	(btemp+10)^0,f,c
 15498  016076  0EFF               	movlw	-1
 15499  016078  50E3               	movf	plusw1,w,c
 15500  01607A  5A40               	subwfb	(btemp+11)^0,f,c
 15501                           
 15502                           ;stkvar	_ff1 @ sp[(0)+-4]
 15503  01607C  0EFC               	movlw	-4
 15504  01607E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15505  016084  0EFD               	movlw	-3
 15506  016086  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15507  01608C  0EFE               	movlw	-2
 15508  01608E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15509  016094  0EFF               	movlw	-1
 15510  016096  0060  F103  FFE3   	movff	btemp+11,plusw1
 15511  01609C                     l6782:
 15512                           
 15513                           ;stkvar	_ff2 @ sp[(0)+-8]
 15514  01609C  0EFB               	movlw	-5
 15515  01609E  AEE3               	btfss	plusw1,7,c
 15516  0160A0  D024               	goto	l6786
 15517                           
 15518                           ;stkvar	_ff2 @ sp[(0)+-8]
 15519  0160A2  0E00               	movlw	0
 15520  0160A4  6E3D               	movwf	(btemp+8)^0,c
 15521  0160A6  0E00               	movlw	0
 15522  0160A8  6E3E               	movwf	(btemp+9)^0,c
 15523  0160AA  0E00               	movlw	0
 15524  0160AC  6E3F               	movwf	(btemp+10)^0,c
 15525  0160AE  0E80               	movlw	128
 15526  0160B0  6E40               	movwf	(btemp+11)^0,c
 15527  0160B2  0EF8               	movlw	-8
 15528  0160B4  50E3               	movf	plusw1,w,c
 15529  0160B6  5E3D               	subwf	(btemp+8)^0,f,c
 15530  0160B8  0EF9               	movlw	-7
 15531  0160BA  50E3               	movf	plusw1,w,c
 15532  0160BC  5A3E               	subwfb	(btemp+9)^0,f,c
 15533  0160BE  0EFA               	movlw	-6
 15534  0160C0  50E3               	movf	plusw1,w,c
 15535  0160C2  5A3F               	subwfb	(btemp+10)^0,f,c
 15536  0160C4  0EFB               	movlw	-5
 15537  0160C6  50E3               	movf	plusw1,w,c
 15538  0160C8  5A40               	subwfb	(btemp+11)^0,f,c
 15539                           
 15540                           ;stkvar	_ff2 @ sp[(0)+-8]
 15541  0160CA  0EF8               	movlw	-8
 15542  0160CC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15543  0160D2  0EF9               	movlw	-7
 15544  0160D4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15545  0160DA  0EFA               	movlw	-6
 15546  0160DC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15547  0160E2  0EFB               	movlw	-5
 15548  0160E4  0060  F103  FFE3   	movff	btemp+11,plusw1
 15549  0160EA                     l6786:
 15550                           
 15551                           ;stkvar	_ff1 @ sp[(0)+-4]
 15552  0160EA  0EFF               	movlw	-1
 15553  0160EC  7EE3               	btg	plusw1,7,c
 15554                           
 15555                           ;stkvar	_ff2 @ sp[(0)+-8]
 15556  0160EE  0EFB               	movlw	-5
 15557  0160F0  7EE3               	btg	plusw1,7,c
 15558                           
 15559                           ;stkvar	_ff2 @ sp[(0)+-8]
 15560                           ;stkvar	_ff1 @ sp[(0)+-4]
 15561  0160F2  50E1               	movf	fsr1l,w,c
 15562  0160F4  0FFC               	addlw	-4
 15563  0160F6  6ED9               	movwf	fsr2l,c
 15564  0160F8  50E2               	movf	fsr1h,w,c
 15565  0160FA  6EDA               	movwf	fsr2h,c
 15566  0160FC  0EFF               	movlw	255
 15567  0160FE  22DA               	addwfc	fsr2h,f,c
 15568  016100  0EF8               	movlw	-8
 15569  016102  50E3               	movf	plusw1,w,c
 15570  016104  5CDE               	subwf	postinc2,w,c
 15571  016106  0EF9               	movlw	-7
 15572  016108  50E3               	movf	plusw1,w,c
 15573  01610A  58DE               	subwfb	postinc2,w,c
 15574  01610C  0EFA               	movlw	-6
 15575  01610E  50E3               	movf	plusw1,w,c
 15576  016110  58DE               	subwfb	postinc2,w,c
 15577  016112  0EFB               	movlw	-5
 15578  016114  50E3               	movf	plusw1,w,c
 15579  016116  58DE               	subwfb	postinc2,w,c
 15580  016118  B0D8               	btfsc	status,0,c
 15581  01611A  D002               	goto	l6794
 15582  01611C  9035               	bcf	btemp& (0+255),0,c
 15583  01611E  D001               	goto	l2234
 15584  016120                     l6794:
 15585  016120  8035               	bsf	btemp& (0+255),0,c
 15586  016122                     l2234:
 15587                           
 15588                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15589  016122  0EF8               	movlw	248
 15590  016124  26E1               	addwf	fsr1l,f,c
 15591  016126  0EFF               	movlw	255
 15592  016128  22E2               	addwfc	fsr1h,f,c
 15593  01612A  0012               	return		;funcret
 15594  01612C                     __end_of___flge:
 15595                           	opt callstack 0
 15596                           
 15597 ;; *************** function ___fleq *****************
 15598 ;; Defined at:
 15599 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  ff1             4  [STACK] unsigned char 
 15602 ;;  ff2             4  [STACK] unsigned char 
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;		None               void
 15607 ;; Registers used:
 15608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/4
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15618 ;;Total ram usage:        0 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    6
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_efgtoa
 15625 ;; This function uses a reentrant model
 15626 ;;
 15627                           
 15628                           	psect	text51
 15629  016B94                     __ptext51:
 15630                           	opt callstack 0
 15631  016B94                     ___fleq:
 15632                           	opt callstack 17
 15633                           
 15634                           ;stkvar	_ff1 @ sp[(0)+-4]
 15635                           
 15636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15637                           ;incstack = 0
 15638  016B94  50E1               	movf	fsr1l,w,c
 15639  016B96  0FFC               	addlw	-4
 15640  016B98  6ED9               	movwf	fsr2l,c
 15641  016B9A  50E2               	movf	fsr1h,w,c
 15642  016B9C  6EDA               	movwf	fsr2h,c
 15643  016B9E  0EFF               	movlw	255
 15644  016BA0  22DA               	addwfc	fsr2h,f,c
 15645  016BA2  0E00               	movlw	0
 15646  016BA4  14DE               	andwf	postinc2,w,c
 15647  016BA6  6E3D               	movwf	(btemp+8)^0,c
 15648  016BA8  0E00               	movlw	0
 15649  016BAA  14DE               	andwf	postinc2,w,c
 15650  016BAC  6E3E               	movwf	(btemp+9)^0,c
 15651  016BAE  0E80               	movlw	128
 15652  016BB0  14DE               	andwf	postinc2,w,c
 15653  016BB2  6E3F               	movwf	(btemp+10)^0,c
 15654  016BB4  0E7F               	movlw	127
 15655  016BB6  14DE               	andwf	postinc2,w,c
 15656  016BB8  6E40               	movwf	(btemp+11)^0,c
 15657  016BBA  503D               	movf	(btemp+8)^0,w,c
 15658  016BBC  103E               	iorwf	(btemp+9)^0,w,c
 15659  016BBE  103F               	iorwf	(btemp+10)^0,w,c
 15660  016BC0  1040               	iorwf	(btemp+11)^0,w,c
 15661  016BC2  A4D8               	btfss	status,2,c
 15662  016BC4  D008               	goto	l6760
 15663                           
 15664                           ;stkvar	_ff1 @ sp[(0)+-4]
 15665  016BC6  0EFC               	movlw	-4
 15666  016BC8  6AE3               	clrf	plusw1,c
 15667  016BCA  0EFD               	movlw	-3
 15668  016BCC  6AE3               	clrf	plusw1,c
 15669  016BCE  0EFE               	movlw	-2
 15670  016BD0  6AE3               	clrf	plusw1,c
 15671  016BD2  0EFF               	movlw	-1
 15672  016BD4  6AE3               	clrf	plusw1,c
 15673  016BD6                     l6760:
 15674                           
 15675                           ;stkvar	_ff2 @ sp[(0)+-8]
 15676  016BD6  50E1               	movf	fsr1l,w,c
 15677  016BD8  0FF8               	addlw	-8
 15678  016BDA  6ED9               	movwf	fsr2l,c
 15679  016BDC  50E2               	movf	fsr1h,w,c
 15680  016BDE  6EDA               	movwf	fsr2h,c
 15681  016BE0  0EFF               	movlw	255
 15682  016BE2  22DA               	addwfc	fsr2h,f,c
 15683  016BE4  0E00               	movlw	0
 15684  016BE6  14DE               	andwf	postinc2,w,c
 15685  016BE8  6E3D               	movwf	(btemp+8)^0,c
 15686  016BEA  0E00               	movlw	0
 15687  016BEC  14DE               	andwf	postinc2,w,c
 15688  016BEE  6E3E               	movwf	(btemp+9)^0,c
 15689  016BF0  0E80               	movlw	128
 15690  016BF2  14DE               	andwf	postinc2,w,c
 15691  016BF4  6E3F               	movwf	(btemp+10)^0,c
 15692  016BF6  0E7F               	movlw	127
 15693  016BF8  14DE               	andwf	postinc2,w,c
 15694  016BFA  6E40               	movwf	(btemp+11)^0,c
 15695  016BFC  503D               	movf	(btemp+8)^0,w,c
 15696  016BFE  103E               	iorwf	(btemp+9)^0,w,c
 15697  016C00  103F               	iorwf	(btemp+10)^0,w,c
 15698  016C02  1040               	iorwf	(btemp+11)^0,w,c
 15699  016C04  A4D8               	btfss	status,2,c
 15700  016C06  D008               	goto	l6764
 15701                           
 15702                           ;stkvar	_ff2 @ sp[(0)+-8]
 15703  016C08  0EF8               	movlw	-8
 15704  016C0A  6AE3               	clrf	plusw1,c
 15705  016C0C  0EF9               	movlw	-7
 15706  016C0E  6AE3               	clrf	plusw1,c
 15707  016C10  0EFA               	movlw	-6
 15708  016C12  6AE3               	clrf	plusw1,c
 15709  016C14  0EFB               	movlw	-5
 15710  016C16  6AE3               	clrf	plusw1,c
 15711  016C18                     l6764:
 15712                           
 15713                           ;stkvar	_ff2 @ sp[(0)+-8]
 15714                           ;stkvar	_ff1 @ sp[(0)+-4]
 15715  016C18  50E1               	movf	fsr1l,w,c
 15716  016C1A  0FFC               	addlw	-4
 15717  016C1C  6ED9               	movwf	fsr2l,c
 15718  016C1E  50E2               	movf	fsr1h,w,c
 15719  016C20  6EDA               	movwf	fsr2h,c
 15720  016C22  0EFF               	movlw	255
 15721  016C24  22DA               	addwfc	fsr2h,f,c
 15722  016C26  0EF8               	movlw	-8
 15723  016C28  50E3               	movf	plusw1,w,c
 15724  016C2A  18DE               	xorwf	postinc2,w,c
 15725  016C2C  E10D               	bnz	u5910
 15726  016C2E  0EF9               	movlw	-7
 15727  016C30  50E3               	movf	plusw1,w,c
 15728  016C32  18DE               	xorwf	postinc2,w,c
 15729  016C34  E109               	bnz	u5910
 15730  016C36  0EFA               	movlw	-6
 15731  016C38  50E3               	movf	plusw1,w,c
 15732  016C3A  18DE               	xorwf	postinc2,w,c
 15733  016C3C  E105               	bnz	u5910
 15734  016C3E  0EFB               	movlw	-5
 15735  016C40  50E3               	movf	plusw1,w,c
 15736  016C42  18DE               	xorwf	postinc2,w,c
 15737  016C44  B4D8               	btfsc	status,2,c
 15738  016C46  D002               	goto	l6768
 15739  016C48                     u5910:
 15740  016C48  9035               	bcf	btemp& (0+255),0,c
 15741  016C4A  D001               	goto	l2223
 15742  016C4C                     l6768:
 15743  016C4C  8035               	bsf	btemp& (0+255),0,c
 15744  016C4E                     l2223:
 15745                           
 15746                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15747  016C4E  0EF8               	movlw	248
 15748  016C50  26E1               	addwf	fsr1l,f,c
 15749  016C52  0EFF               	movlw	255
 15750  016C54  22E2               	addwfc	fsr1h,f,c
 15751  016C56  0012               	return		;funcret
 15752  016C58                     __end_of___fleq:
 15753                           	opt callstack 0
 15754                           
 15755 ;; *************** function ___fldiv *****************
 15756 ;; Defined at:
 15757 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;  b               4  [STACK] unsigned char 
 15760 ;;  a               4  [STACK] unsigned char 
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;  grs             4  [STACK] unsigned long 
 15763 ;;  rem             4  [STACK] unsigned long 
 15764 ;;  new_exp         2  [STACK] short 
 15765 ;;  aexp            1  [STACK] unsigned char 
 15766 ;;  bexp            1  [STACK] unsigned char 
 15767 ;;  sign            1  [STACK] unsigned char 
 15768 ;; Return value:  Size  Location     Type
 15769 ;;                  4  [STACK] unsigned char 
 15770 ;; Registers used:
 15771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15781 ;;Total ram usage:        0 bytes
 15782 ;; Hardware stack levels used:    1
 15783 ;; Hardware stack levels required when called:    6
 15784 ;; This function calls:
 15785 ;;		Nothing
 15786 ;; This function is called by:
 15787 ;;		_conv_raw_result
 15788 ;;		_lp_filter
 15789 ;;		_efgtoa
 15790 ;; This function uses a reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text52
 15794  0133AE                     __ptext52:
 15795                           	opt callstack 0
 15796  0133AE                     ___fldiv:
 15797                           	opt callstack 0
 15798                           
 15799                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15800  0133AE  0E0D               	movlw	13
 15801  0133B0  26E1               	addwf	fsr1l,f,c
 15802  0133B2  0E00               	movlw	0
 15803  0133B4  22E2               	addwfc	fsr1h,f,c
 15804                           
 15805                           ;stkvar	_b @ sp[(-13)+-4]
 15806                           
 15807                           ;incstack = 0
 15808  0133B6  0EF2               	movlw	242
 15809  0133B8  24E1               	addwf	fsr1l,w,c
 15810  0133BA  6ED9               	movwf	fsr2l,c
 15811  0133BC  0EFF               	movlw	255
 15812  0133BE  20E2               	addwfc	fsr1h,w,c
 15813  0133C0  6EDA               	movwf	fsr2h,c
 15814  0133C2  50DF               	movf	indf2,w,c
 15815  0133C4  6E40               	movwf	(btemp+11)^0,c
 15816  0133C6  0E80               	movlw	128
 15817  0133C8  1640               	andwf	(btemp+11)^0,f,c
 15818                           
 15819                           ;stkvar	_sign @ sp[(-13)+12]
 15820  0133CA  0EFF               	movlw	-1
 15821  0133CC  0060  F103  FFE3   	movff	btemp+11,plusw1
 15822                           
 15823                           ;stkvar	_b @ sp[(-13)+-4]
 15824  0133D2  0EF2               	movlw	242
 15825  0133D4  24E1               	addwf	fsr1l,w,c
 15826  0133D6  6ED9               	movwf	fsr2l,c
 15827  0133D8  0EFF               	movlw	255
 15828  0133DA  20E2               	addwfc	fsr1h,w,c
 15829  0133DC  6EDA               	movwf	fsr2h,c
 15830  0133DE  50DF               	movf	indf2,w,c
 15831  0133E0  6E40               	movwf	(btemp+11)^0,c
 15832  0133E2  90D8               	bcf	status,0,c
 15833  0133E4  3440               	rlcf	(btemp+11)^0,w,c
 15834  0133E6  6E3F               	movwf	(btemp+10)^0,c
 15835                           
 15836                           ;stkvar	_bexp @ sp[(-13)+11]
 15837  0133E8  0EFE               	movlw	-2
 15838  0133EA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15839                           
 15840                           ;stkvar	_b @ sp[(-13)+-4]
 15841  0133F0  0EF1               	movlw	241
 15842  0133F2  24E1               	addwf	fsr1l,w,c
 15843  0133F4  6ED9               	movwf	fsr2l,c
 15844  0133F6  0EFF               	movlw	255
 15845  0133F8  20E2               	addwfc	fsr1h,w,c
 15846  0133FA  6EDA               	movwf	fsr2h,c
 15847  0133FC  AEDF               	btfss	indf2,7,c
 15848  0133FE  D002               	goto	l6362
 15849                           
 15850                           ;stkvar	_bexp @ sp[(-13)+11]
 15851  013400  0EFE               	movlw	-2
 15852  013402  80E3               	bsf	plusw1,0,c
 15853  013404                     l6362:
 15854                           
 15855                           ;stkvar	_bexp @ sp[(-13)+11]
 15856  013404  0EFE               	movlw	-2
 15857  013406  50E3               	movf	plusw1,w,c
 15858  013408  B4D8               	btfsc	status,2,c
 15859  01340A  D027               	goto	l6372
 15860                           
 15861                           ;stkvar	_bexp @ sp[(-13)+11]
 15862  01340C  0EFE               	movlw	-2
 15863  01340E  28E3               	incf	plusw1,w,c
 15864  013410  A4D8               	btfss	status,2,c
 15865  013412  D018               	goto	l6368
 15866  013414  0E00               	movlw	0
 15867  013416  6E3D               	movwf	(btemp+8)^0,c
 15868  013418  0E00               	movlw	0
 15869  01341A  6E3E               	movwf	(btemp+9)^0,c
 15870  01341C  0E00               	movlw	0
 15871  01341E  6E3F               	movwf	(btemp+10)^0,c
 15872  013420  0E00               	movlw	0
 15873  013422  6E40               	movwf	(btemp+11)^0,c
 15874                           
 15875                           ;stkvar	_b @ sp[(-13)+-4]
 15876  013424  0EEF               	movlw	-17
 15877  013426  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15878  01342C  0EF0               	movlw	-16
 15879  01342E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15880  013434  0EF1               	movlw	-15
 15881  013436  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15882  01343C  0EF2               	movlw	-14
 15883  01343E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15884  013444                     l6368:
 15885                           
 15886                           ;stkvar	_b @ sp[(-13)+-4]
 15887  013444  0EF1               	movlw	-15
 15888  013446  8EE3               	bsf	plusw1,7,c
 15889                           
 15890                           ;stkvar	_b @ sp[(-13)+-4]
 15891  013448  0EF2               	movlw	242
 15892  01344A  24E1               	addwf	fsr1l,w,c
 15893  01344C  6ED9               	movwf	fsr2l,c
 15894  01344E  0EFF               	movlw	255
 15895  013450  20E2               	addwfc	fsr1h,w,c
 15896  013452  6EDA               	movwf	fsr2h,c
 15897  013454  0E00               	movlw	0
 15898  013456  6EDF               	movwf	indf2,c
 15899  013458  D018               	goto	l6374
 15900  01345A                     l6372:
 15901  01345A  0E00               	movlw	0
 15902  01345C  6E3D               	movwf	(btemp+8)^0,c
 15903  01345E  0E00               	movlw	0
 15904  013460  6E3E               	movwf	(btemp+9)^0,c
 15905  013462  0E00               	movlw	0
 15906  013464  6E3F               	movwf	(btemp+10)^0,c
 15907  013466  0E00               	movlw	0
 15908  013468  6E40               	movwf	(btemp+11)^0,c
 15909                           
 15910                           ;stkvar	_b @ sp[(-13)+-4]
 15911  01346A  0EEF               	movlw	-17
 15912  01346C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15913  013472  0EF0               	movlw	-16
 15914  013474  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15915  01347A  0EF1               	movlw	-15
 15916  01347C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15917  013482  0EF2               	movlw	-14
 15918  013484  0060  F103  FFE3   	movff	btemp+11,plusw1
 15919  01348A                     l6374:
 15920                           
 15921                           ;stkvar	_a @ sp[(-13)+-8]
 15922  01348A  0EEE               	movlw	238
 15923  01348C  24E1               	addwf	fsr1l,w,c
 15924  01348E  6ED9               	movwf	fsr2l,c
 15925  013490  0EFF               	movlw	255
 15926  013492  20E2               	addwfc	fsr1h,w,c
 15927  013494  6EDA               	movwf	fsr2h,c
 15928  013496  50DF               	movf	indf2,w,c
 15929  013498  6E40               	movwf	(btemp+11)^0,c
 15930  01349A  0E80               	movlw	128
 15931  01349C  1640               	andwf	(btemp+11)^0,f,c
 15932                           
 15933                           ;stkvar	_sign @ sp[(-13)+12]
 15934  01349E  50E1               	movf	fsr1l,w,c
 15935  0134A0  0FFF               	addlw	-1
 15936  0134A2  6ED9               	movwf	fsr2l,c
 15937  0134A4  50E2               	movf	fsr1h,w,c
 15938  0134A6  6EDA               	movwf	fsr2h,c
 15939  0134A8  0EFF               	movlw	255
 15940  0134AA  22DA               	addwfc	fsr2h,f,c
 15941  0134AC  5040               	movf	(btemp+11)^0,w,c
 15942  0134AE  1ADF               	xorwf	indf2,f,c
 15943                           
 15944                           ;stkvar	_a @ sp[(-13)+-8]
 15945  0134B0  0EEE               	movlw	238
 15946  0134B2  24E1               	addwf	fsr1l,w,c
 15947  0134B4  6ED9               	movwf	fsr2l,c
 15948  0134B6  0EFF               	movlw	255
 15949  0134B8  20E2               	addwfc	fsr1h,w,c
 15950  0134BA  6EDA               	movwf	fsr2h,c
 15951  0134BC  50DF               	movf	indf2,w,c
 15952  0134BE  6E40               	movwf	(btemp+11)^0,c
 15953  0134C0  90D8               	bcf	status,0,c
 15954  0134C2  3440               	rlcf	(btemp+11)^0,w,c
 15955  0134C4  6E3F               	movwf	(btemp+10)^0,c
 15956                           
 15957                           ;stkvar	_aexp @ sp[(-13)+10]
 15958  0134C6  0EFD               	movlw	-3
 15959  0134C8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15960                           
 15961                           ;stkvar	_a @ sp[(-13)+-8]
 15962  0134CE  0EED               	movlw	237
 15963  0134D0  24E1               	addwf	fsr1l,w,c
 15964  0134D2  6ED9               	movwf	fsr2l,c
 15965  0134D4  0EFF               	movlw	255
 15966  0134D6  20E2               	addwfc	fsr1h,w,c
 15967  0134D8  6EDA               	movwf	fsr2h,c
 15968  0134DA  AEDF               	btfss	indf2,7,c
 15969  0134DC  D002               	goto	l6382
 15970                           
 15971                           ;stkvar	_aexp @ sp[(-13)+10]
 15972  0134DE  0EFD               	movlw	-3
 15973  0134E0  80E3               	bsf	plusw1,0,c
 15974  0134E2                     l6382:
 15975                           
 15976                           ;stkvar	_aexp @ sp[(-13)+10]
 15977  0134E2  0EFD               	movlw	-3
 15978  0134E4  50E3               	movf	plusw1,w,c
 15979  0134E6  B4D8               	btfsc	status,2,c
 15980  0134E8  D027               	goto	l6392
 15981                           
 15982                           ;stkvar	_aexp @ sp[(-13)+10]
 15983  0134EA  0EFD               	movlw	-3
 15984  0134EC  28E3               	incf	plusw1,w,c
 15985  0134EE  A4D8               	btfss	status,2,c
 15986  0134F0  D018               	goto	l6388
 15987  0134F2  0E00               	movlw	0
 15988  0134F4  6E3D               	movwf	(btemp+8)^0,c
 15989  0134F6  0E00               	movlw	0
 15990  0134F8  6E3E               	movwf	(btemp+9)^0,c
 15991  0134FA  0E00               	movlw	0
 15992  0134FC  6E3F               	movwf	(btemp+10)^0,c
 15993  0134FE  0E00               	movlw	0
 15994  013500  6E40               	movwf	(btemp+11)^0,c
 15995                           
 15996                           ;stkvar	_a @ sp[(-13)+-8]
 15997  013502  0EEB               	movlw	-21
 15998  013504  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15999  01350A  0EEC               	movlw	-20
 16000  01350C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16001  013512  0EED               	movlw	-19
 16002  013514  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16003  01351A  0EEE               	movlw	-18
 16004  01351C  0060  F103  FFE3   	movff	btemp+11,plusw1
 16005  013522                     l6388:
 16006                           
 16007                           ;stkvar	_a @ sp[(-13)+-8]
 16008  013522  0EED               	movlw	-19
 16009  013524  8EE3               	bsf	plusw1,7,c
 16010                           
 16011                           ;stkvar	_a @ sp[(-13)+-8]
 16012  013526  0EEE               	movlw	238
 16013  013528  24E1               	addwf	fsr1l,w,c
 16014  01352A  6ED9               	movwf	fsr2l,c
 16015  01352C  0EFF               	movlw	255
 16016  01352E  20E2               	addwfc	fsr1h,w,c
 16017  013530  6EDA               	movwf	fsr2h,c
 16018  013532  0E00               	movlw	0
 16019  013534  6EDF               	movwf	indf2,c
 16020  013536  D018               	goto	l6394
 16021  013538                     l6392:
 16022  013538  0E00               	movlw	0
 16023  01353A  6E3D               	movwf	(btemp+8)^0,c
 16024  01353C  0E00               	movlw	0
 16025  01353E  6E3E               	movwf	(btemp+9)^0,c
 16026  013540  0E00               	movlw	0
 16027  013542  6E3F               	movwf	(btemp+10)^0,c
 16028  013544  0E00               	movlw	0
 16029  013546  6E40               	movwf	(btemp+11)^0,c
 16030                           
 16031                           ;stkvar	_a @ sp[(-13)+-8]
 16032  013548  0EEB               	movlw	-21
 16033  01354A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16034  013550  0EEC               	movlw	-20
 16035  013552  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16036  013558  0EED               	movlw	-19
 16037  01355A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16038  013560  0EEE               	movlw	-18
 16039  013562  0060  F103  FFE3   	movff	btemp+11,plusw1
 16040  013568                     l6394:
 16041                           
 16042                           ;stkvar	_a @ sp[(-13)+-8]
 16043  013568  0EEB               	movlw	-21
 16044  01356A  50E3               	movf	plusw1,w,c
 16045  01356C  E139               	bnz	l6406
 16046  01356E  0EEC               	movlw	-20
 16047  013570  50E3               	movf	plusw1,w,c
 16048  013572  E136               	bnz	l6406
 16049  013574  0EED               	movlw	-19
 16050  013576  50E3               	movf	plusw1,w,c
 16051  013578  E133               	bnz	l6406
 16052  01357A  0EEE               	movlw	-18
 16053  01357C  50E3               	movf	plusw1,w,c
 16054  01357E  A4D8               	btfss	status,2,c
 16055  013580  D02F               	goto	l6406
 16056                           
 16057                           ;stkvar	_b @ sp[(-13)+-4]
 16058  013582  0EEF               	movlw	-17
 16059  013584  6AE3               	clrf	plusw1,c
 16060  013586  0EF0               	movlw	-16
 16061  013588  6AE3               	clrf	plusw1,c
 16062  01358A  0EF1               	movlw	-15
 16063  01358C  6AE3               	clrf	plusw1,c
 16064  01358E  0EF2               	movlw	-14
 16065  013590  6AE3               	clrf	plusw1,c
 16066                           
 16067                           ;stkvar	_b @ sp[(-13)+-4]
 16068  013592  0EF1               	movlw	241
 16069  013594  24E1               	addwf	fsr1l,w,c
 16070  013596  6ED9               	movwf	fsr2l,c
 16071  013598  0EFF               	movlw	255
 16072  01359A  20E2               	addwfc	fsr1h,w,c
 16073  01359C  6EDA               	movwf	fsr2h,c
 16074  01359E  0E80               	movlw	128
 16075  0135A0  12DE               	iorwf	postinc2,f,c
 16076  0135A2  0E7F               	movlw	127
 16077  0135A4  12DD               	iorwf	postdec2,f,c
 16078  0135A6                     l6400:
 16079                           
 16080                           ;stkvar	_sign @ sp[(-13)+12]
 16081  0135A6  0EFF               	movlw	-1
 16082  0135A8  006F FF8C  F040    	movff	plusw1,btemp+11
 16083                           
 16084                           ;stkvar	_b @ sp[(-13)+-4]
 16085  0135AE  0EF2               	movlw	242
 16086  0135B0  24E1               	addwf	fsr1l,w,c
 16087  0135B2  6ED9               	movwf	fsr2l,c
 16088  0135B4  0EFF               	movlw	255
 16089  0135B6  20E2               	addwfc	fsr1h,w,c
 16090  0135B8  6EDA               	movwf	fsr2h,c
 16091  0135BA  5040               	movf	(btemp+11)^0,w,c
 16092  0135BC  12DF               	iorwf	indf2,f,c
 16093                           
 16094                           ;stkvar	_b @ sp[(-13)+-4]
 16095  0135BE  0EEF               	movlw	-17
 16096  0135C0  006F FF8C  F035    	movff	plusw1,btemp
 16097  0135C6  0EF0               	movlw	-16
 16098  0135C8  006F FF8C  F036    	movff	plusw1,btemp+1
 16099  0135CE  0EF1               	movlw	-15
 16100  0135D0  006F FF8C  F037    	movff	plusw1,btemp+2
 16101  0135D6  0EF2               	movlw	-14
 16102  0135D8  006F FF8C  F038    	movff	plusw1,btemp+3
 16103  0135DE  D19F               	goto	l2546
 16104  0135E0                     l6406:
 16105                           
 16106                           ;stkvar	_bexp @ sp[(-13)+11]
 16107  0135E0  0EFE               	movlw	-2
 16108  0135E2  50E3               	movf	plusw1,w,c
 16109  0135E4  A4D8               	btfss	status,2,c
 16110  0135E6  D009               	goto	l6414
 16111  0135E8  0E00               	movlw	0
 16112  0135EA  6E35               	movwf	btemp^0,c
 16113  0135EC  0E00               	movlw	0
 16114  0135EE  6E36               	movwf	(btemp+1)^0,c
 16115  0135F0  0E00               	movlw	0
 16116  0135F2  6E37               	movwf	(btemp+2)^0,c
 16117  0135F4  0E00               	movlw	0
 16118  0135F6  6E38               	movwf	(btemp+3)^0,c
 16119  0135F8  D192               	goto	l2546
 16120  0135FA                     l6414:
 16121                           
 16122                           ;stkvar	_bexp @ sp[(-13)+11]
 16123  0135FA  0EFE               	movlw	-2
 16124  0135FC  50E3               	movf	plusw1,w,c
 16125  0135FE  6E3F               	movwf	(btemp+10)^0,c
 16126  013600  6A40               	clrf	(btemp+11)^0,c
 16127                           
 16128                           ;stkvar	_aexp @ sp[(-13)+10]
 16129  013602  0EFD               	movlw	-3
 16130  013604  50E3               	movf	plusw1,w,c
 16131  013606  5E3F               	subwf	(btemp+10)^0,f,c
 16132  013608  0E00               	movlw	0
 16133  01360A  5A40               	subwfb	(btemp+11)^0,f,c
 16134  01360C  0E7F               	movlw	127
 16135  01360E  263F               	addwf	(btemp+10)^0,f,c
 16136  013610  0E00               	movlw	0
 16137  013612  2240               	addwfc	(btemp+11)^0,f,c
 16138                           
 16139                           ;stkvar	_new_exp @ sp[(-13)+8]
 16140  013614  0EFB               	movlw	-5
 16141  013616  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16142  01361C  0EFC               	movlw	-4
 16143  01361E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16144                           
 16145                           ;stkvar	_b @ sp[(-13)+-4]
 16146  013624  0EEF               	movlw	-17
 16147  013626  006F FF8C  F03D    	movff	plusw1,btemp+8
 16148  01362C  0EF0               	movlw	-16
 16149  01362E  006F FF8C  F03E    	movff	plusw1,btemp+9
 16150  013634  0EF1               	movlw	-15
 16151  013636  006F FF8C  F03F    	movff	plusw1,btemp+10
 16152  01363C  0EF2               	movlw	-14
 16153  01363E  006F FF8C  F040    	movff	plusw1,btemp+11
 16154                           
 16155                           ;stkvar	_rem @ sp[(-13)+4]
 16156  013644  0EF7               	movlw	-9
 16157  013646  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16158  01364C  0EF8               	movlw	-8
 16159  01364E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16160  013654  0EF9               	movlw	-7
 16161  013656  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16162  01365C  0EFA               	movlw	-6
 16163  01365E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16164                           
 16165                           ;stkvar	_b @ sp[(-13)+-4]
 16166  013664  0EEF               	movlw	-17
 16167  013666  6AE3               	clrf	plusw1,c
 16168  013668  0EF0               	movlw	-16
 16169  01366A  6AE3               	clrf	plusw1,c
 16170  01366C  0EF1               	movlw	-15
 16171  01366E  6AE3               	clrf	plusw1,c
 16172  013670  0EF2               	movlw	-14
 16173  013672  6AE3               	clrf	plusw1,c
 16174                           
 16175                           ;stkvar	_grs @ sp[(-13)+0]
 16176  013674  0EF3               	movlw	-13
 16177  013676  6AE3               	clrf	plusw1,c
 16178  013678  0EF4               	movlw	-12
 16179  01367A  6AE3               	clrf	plusw1,c
 16180  01367C  0EF5               	movlw	-11
 16181  01367E  6AE3               	clrf	plusw1,c
 16182  013680  0EF6               	movlw	-10
 16183  013682  6AE3               	clrf	plusw1,c
 16184                           
 16185                           ;stkvar	_aexp @ sp[(-13)+10]
 16186  013684  0EFD               	movlw	-3
 16187  013686  6AE3               	clrf	plusw1,c
 16188  013688  D050               	goto	l6442
 16189  01368A                     l6424:
 16190                           
 16191                           ;stkvar	_aexp @ sp[(-13)+10]
 16192  01368A  0EFD               	movlw	-3
 16193  01368C  50E3               	movf	plusw1,w,c
 16194  01368E  B4D8               	btfsc	status,2,c
 16195  013690  D020               	goto	l6434
 16196                           
 16197                           ;stkvar	_rem @ sp[(-13)+4]
 16198  013692  90D8               	bcf	status,0,c
 16199  013694  0EF7               	movlw	-9
 16200  013696  36E3               	rlcf	plusw1,f,c
 16201  013698  0EF8               	movlw	-8
 16202  01369A  36E3               	rlcf	plusw1,f,c
 16203  01369C  0EF9               	movlw	-7
 16204  01369E  36E3               	rlcf	plusw1,f,c
 16205  0136A0  0EFA               	movlw	-6
 16206  0136A2  36E3               	rlcf	plusw1,f,c
 16207                           
 16208                           ;stkvar	_b @ sp[(-13)+-4]
 16209  0136A4  90D8               	bcf	status,0,c
 16210  0136A6  0EEF               	movlw	-17
 16211  0136A8  36E3               	rlcf	plusw1,f,c
 16212  0136AA  0EF0               	movlw	-16
 16213  0136AC  36E3               	rlcf	plusw1,f,c
 16214  0136AE  0EF1               	movlw	-15
 16215  0136B0  36E3               	rlcf	plusw1,f,c
 16216  0136B2  0EF2               	movlw	-14
 16217  0136B4  36E3               	rlcf	plusw1,f,c
 16218                           
 16219                           ;stkvar	_grs @ sp[(-13)+0]
 16220  0136B6  0EF6               	movlw	-10
 16221  0136B8  AEE3               	btfss	plusw1,7,c
 16222  0136BA  D002               	goto	l6432
 16223                           
 16224                           ;stkvar	_b @ sp[(-13)+-4]
 16225  0136BC  0EEF               	movlw	-17
 16226  0136BE  80E3               	bsf	plusw1,0,c
 16227  0136C0                     l6432:
 16228                           
 16229                           ;stkvar	_grs @ sp[(-13)+0]
 16230  0136C0  90D8               	bcf	status,0,c
 16231  0136C2  0EF3               	movlw	-13
 16232  0136C4  36E3               	rlcf	plusw1,f,c
 16233  0136C6  0EF4               	movlw	-12
 16234  0136C8  36E3               	rlcf	plusw1,f,c
 16235  0136CA  0EF5               	movlw	-11
 16236  0136CC  36E3               	rlcf	plusw1,f,c
 16237  0136CE  0EF6               	movlw	-10
 16238  0136D0  36E3               	rlcf	plusw1,f,c
 16239  0136D2                     l6434:
 16240                           
 16241                           ;stkvar	_a @ sp[(-13)+-8]
 16242                           ;stkvar	_rem @ sp[(-13)+4]
 16243  0136D2  50E1               	movf	fsr1l,w,c
 16244  0136D4  0FF7               	addlw	-9
 16245  0136D6  6ED9               	movwf	fsr2l,c
 16246  0136D8  50E2               	movf	fsr1h,w,c
 16247  0136DA  6EDA               	movwf	fsr2h,c
 16248  0136DC  0EFF               	movlw	255
 16249  0136DE  22DA               	addwfc	fsr2h,f,c
 16250  0136E0  0EEB               	movlw	-21
 16251  0136E2  50E3               	movf	plusw1,w,c
 16252  0136E4  5CDE               	subwf	postinc2,w,c
 16253  0136E6  0EEC               	movlw	-20
 16254  0136E8  50E3               	movf	plusw1,w,c
 16255  0136EA  58DE               	subwfb	postinc2,w,c
 16256  0136EC  0EED               	movlw	-19
 16257  0136EE  50E3               	movf	plusw1,w,c
 16258  0136F0  58DE               	subwfb	postinc2,w,c
 16259  0136F2  0EEE               	movlw	-18
 16260  0136F4  50E3               	movf	plusw1,w,c
 16261  0136F6  58DE               	subwfb	postinc2,w,c
 16262  0136F8  A0D8               	btfss	status,0,c
 16263  0136FA  D015               	goto	l6440
 16264                           
 16265                           ;stkvar	_grs @ sp[(-13)+0]
 16266  0136FC  0EF6               	movlw	-10
 16267  0136FE  8CE3               	bsf	plusw1,6,c
 16268                           
 16269                           ;stkvar	_a @ sp[(-13)+-8]
 16270                           ;stkvar	_rem @ sp[(-13)+4]
 16271  013700  50E1               	movf	fsr1l,w,c
 16272  013702  0FF7               	addlw	-9
 16273  013704  6ED9               	movwf	fsr2l,c
 16274  013706  50E2               	movf	fsr1h,w,c
 16275  013708  6EDA               	movwf	fsr2h,c
 16276  01370A  0EFF               	movlw	255
 16277  01370C  22DA               	addwfc	fsr2h,f,c
 16278  01370E  0EEB               	movlw	-21
 16279  013710  50E3               	movf	plusw1,w,c
 16280  013712  5EDE               	subwf	postinc2,f,c
 16281  013714  0EEC               	movlw	-20
 16282  013716  50E3               	movf	plusw1,w,c
 16283  013718  5ADE               	subwfb	postinc2,f,c
 16284  01371A  0EED               	movlw	-19
 16285  01371C  50E3               	movf	plusw1,w,c
 16286  01371E  5ADE               	subwfb	postinc2,f,c
 16287  013720  0EEE               	movlw	-18
 16288  013722  50E3               	movf	plusw1,w,c
 16289  013724  5ADE               	subwfb	postinc2,f,c
 16290  013726                     l6440:
 16291                           
 16292                           ;stkvar	_aexp @ sp[(-13)+10]
 16293  013726  0EFD               	movlw	-3
 16294  013728  2AE3               	incf	plusw1,f,c
 16295  01372A                     l6442:
 16296                           
 16297                           ;stkvar	_aexp @ sp[(-13)+10]
 16298  01372A  0EFD               	movlw	-3
 16299  01372C  006F FF8C  F035    	movff	plusw1,btemp
 16300  013732  0E19               	movlw	25
 16301  013734  6435               	cpfsgt	btemp^0,c
 16302  013736  D7A9               	goto	l6424
 16303                           
 16304                           ;stkvar	_rem @ sp[(-13)+4]
 16305  013738  0EF7               	movlw	-9
 16306  01373A  50E3               	movf	plusw1,w,c
 16307  01373C  E10A               	bnz	u5410
 16308  01373E  0EF8               	movlw	-8
 16309  013740  50E3               	movf	plusw1,w,c
 16310  013742  E107               	bnz	u5410
 16311  013744  0EF9               	movlw	-7
 16312  013746  50E3               	movf	plusw1,w,c
 16313  013748  E104               	bnz	u5410
 16314  01374A  0EFA               	movlw	-6
 16315  01374C  50E3               	movf	plusw1,w,c
 16316  01374E  B4D8               	btfsc	status,2,c
 16317  013750  D024               	goto	l6458
 16318  013752                     u5410:
 16319                           
 16320                           ;stkvar	_grs @ sp[(-13)+0]
 16321  013752  0EF3               	movlw	-13
 16322  013754  80E3               	bsf	plusw1,0,c
 16323  013756  D021               	goto	l6458
 16324  013758                     l6448:
 16325                           
 16326                           ;stkvar	_b @ sp[(-13)+-4]
 16327  013758  90D8               	bcf	status,0,c
 16328  01375A  0EEF               	movlw	-17
 16329  01375C  36E3               	rlcf	plusw1,f,c
 16330  01375E  0EF0               	movlw	-16
 16331  013760  36E3               	rlcf	plusw1,f,c
 16332  013762  0EF1               	movlw	-15
 16333  013764  36E3               	rlcf	plusw1,f,c
 16334  013766  0EF2               	movlw	-14
 16335  013768  36E3               	rlcf	plusw1,f,c
 16336                           
 16337                           ;stkvar	_grs @ sp[(-13)+0]
 16338  01376A  0EF6               	movlw	-10
 16339  01376C  AEE3               	btfss	plusw1,7,c
 16340  01376E  D002               	goto	l6454
 16341                           
 16342                           ;stkvar	_b @ sp[(-13)+-4]
 16343  013770  0EEF               	movlw	-17
 16344  013772  80E3               	bsf	plusw1,0,c
 16345  013774                     l6454:
 16346                           
 16347                           ;stkvar	_grs @ sp[(-13)+0]
 16348  013774  90D8               	bcf	status,0,c
 16349  013776  0EF3               	movlw	-13
 16350  013778  36E3               	rlcf	plusw1,f,c
 16351  01377A  0EF4               	movlw	-12
 16352  01377C  36E3               	rlcf	plusw1,f,c
 16353  01377E  0EF5               	movlw	-11
 16354  013780  36E3               	rlcf	plusw1,f,c
 16355  013782  0EF6               	movlw	-10
 16356  013784  36E3               	rlcf	plusw1,f,c
 16357                           
 16358                           ;stkvar	_new_exp @ sp[(-13)+8]
 16359  013786  50E1               	movf	fsr1l,w,c
 16360  013788  0FFB               	addlw	-5
 16361  01378A  6ED9               	movwf	fsr2l,c
 16362  01378C  50E2               	movf	fsr1h,w,c
 16363  01378E  6EDA               	movwf	fsr2h,c
 16364  013790  0EFF               	movlw	255
 16365  013792  22DA               	addwfc	fsr2h,f,c
 16366  013794  06DE               	decf	postinc2,f,c
 16367  013796  0E00               	movlw	0
 16368  013798  5ADD               	subwfb	postdec2,f,c
 16369  01379A                     l6458:
 16370                           
 16371                           ;stkvar	_b @ sp[(-13)+-4]
 16372  01379A  0EF1               	movlw	-15
 16373  01379C  AEE3               	btfss	plusw1,7,c
 16374  01379E  D7DC               	goto	l6448
 16375                           
 16376                           ;stkvar	_aexp @ sp[(-13)+10]
 16377  0137A0  0EFD               	movlw	-3
 16378  0137A2  6AE3               	clrf	plusw1,c
 16379                           
 16380                           ;stkvar	_grs @ sp[(-13)+0]
 16381  0137A4  0EF6               	movlw	-10
 16382  0137A6  AEE3               	btfss	plusw1,7,c
 16383  0137A8  D020               	goto	l6472
 16384                           
 16385                           ;stkvar	_grs @ sp[(-13)+0]
 16386  0137AA  50E1               	movf	fsr1l,w,c
 16387  0137AC  0FF3               	addlw	-13
 16388  0137AE  6ED9               	movwf	fsr2l,c
 16389  0137B0  50E2               	movf	fsr1h,w,c
 16390  0137B2  6EDA               	movwf	fsr2h,c
 16391  0137B4  0EFF               	movlw	255
 16392  0137B6  22DA               	addwfc	fsr2h,f,c
 16393  0137B8  0EFF               	movlw	255
 16394  0137BA  14DE               	andwf	postinc2,w,c
 16395  0137BC  6E3D               	movwf	(btemp+8)^0,c
 16396  0137BE  0EFF               	movlw	255
 16397  0137C0  14DE               	andwf	postinc2,w,c
 16398  0137C2  6E3E               	movwf	(btemp+9)^0,c
 16399  0137C4  0EFF               	movlw	255
 16400  0137C6  14DE               	andwf	postinc2,w,c
 16401  0137C8  6E3F               	movwf	(btemp+10)^0,c
 16402  0137CA  0E7F               	movlw	127
 16403  0137CC  14DE               	andwf	postinc2,w,c
 16404  0137CE  6E40               	movwf	(btemp+11)^0,c
 16405  0137D0  503D               	movf	(btemp+8)^0,w,c
 16406  0137D2  103E               	iorwf	(btemp+9)^0,w,c
 16407  0137D4  103F               	iorwf	(btemp+10)^0,w,c
 16408  0137D6  1040               	iorwf	(btemp+11)^0,w,c
 16409  0137D8  B4D8               	btfsc	status,2,c
 16410  0137DA  D004               	goto	l6468
 16411  0137DC                     u5450:
 16412                           
 16413                           ;stkvar	_aexp @ sp[(-13)+10]
 16414  0137DC  0EFD               	movlw	-3
 16415  0137DE  6AE3               	clrf	plusw1,c
 16416  0137E0  2AE3               	incf	plusw1,f,c
 16417  0137E2  D003               	goto	l6472
 16418  0137E4                     l6468:
 16419                           
 16420                           ;stkvar	_b @ sp[(-13)+-4]
 16421  0137E4  0EEF               	movlw	-17
 16422  0137E6  B0E3               	btfsc	plusw1,0,c
 16423  0137E8  D7F9               	goto	u5450
 16424  0137EA                     l6472:
 16425                           
 16426                           ;stkvar	_aexp @ sp[(-13)+10]
 16427  0137EA  0EFD               	movlw	-3
 16428  0137EC  50E3               	movf	plusw1,w,c
 16429  0137EE  B4D8               	btfsc	status,2,c
 16430  0137F0  D036               	goto	l6482
 16431                           
 16432                           ;stkvar	_b @ sp[(-13)+-4]
 16433  0137F2  50E1               	movf	fsr1l,w,c
 16434  0137F4  0FEF               	addlw	-17
 16435  0137F6  6ED9               	movwf	fsr2l,c
 16436  0137F8  50E2               	movf	fsr1h,w,c
 16437  0137FA  6EDA               	movwf	fsr2h,c
 16438  0137FC  0EFF               	movlw	255
 16439  0137FE  22DA               	addwfc	fsr2h,f,c
 16440  013800  2ADE               	incf	postinc2,f,c
 16441  013802  0E00               	movlw	0
 16442  013804  22DE               	addwfc	postinc2,f,c
 16443  013806  22DE               	addwfc	postinc2,f,c
 16444  013808  22DE               	addwfc	postinc2,f,c
 16445                           
 16446                           ;stkvar	_b @ sp[(-13)+-4]
 16447  01380A  0EF2               	movlw	-14
 16448  01380C  A0E3               	btfss	plusw1,0,c
 16449  01380E  D027               	goto	l6482
 16450  013810  0E01               	movlw	1
 16451  013812  6E40               	movwf	(btemp+11)^0,c
 16452                           
 16453                           ;stkvar	_b @ sp[(-13)+-4]
 16454  013814  50E1               	movf	fsr1l,w,c
 16455  013816  0FEF               	addlw	-17
 16456  013818  6ED9               	movwf	fsr2l,c
 16457  01381A  50E2               	movf	fsr1h,w,c
 16458  01381C  6EDA               	movwf	fsr2h,c
 16459  01381E  0EFF               	movlw	255
 16460  013820  22DA               	addwfc	fsr2h,f,c
 16461  013822  2840               	incf	(btemp+11)^0,w,c
 16462  013824  52DE               	movf	postinc2,f,c
 16463  013826  D008               	goto	u5490
 16464  013828                     u5495:
 16465  013828  52DE               	movf	postinc2,f,c
 16466  01382A  90D8               	bcf	status,0,c
 16467  01382C  BEDC               	btfsc	preinc2,7,c
 16468  01382E  80D8               	bsf	status,0,c
 16469  013830  32DD               	rrcf	postdec2,f,c
 16470  013832  32DD               	rrcf	postdec2,f,c
 16471  013834  32DD               	rrcf	postdec2,f,c
 16472  013836  32DE               	rrcf	postinc2,f,c
 16473  013838                     u5490:
 16474  013838  2EE8               	decfsz	wreg,f,c
 16475  01383A  D7F6               	goto	u5495
 16476                           
 16477                           ;stkvar	_new_exp @ sp[(-13)+8]
 16478  01383C  0EFB               	movlw	-5
 16479  01383E  50E3               	movf	plusw1,w,c
 16480  013840  0F01               	addlw	1
 16481  013842  6E35               	movwf	btemp^0,c
 16482  013844  0EFB               	movlw	-5
 16483  013846  0060  F0D7  FFE3   	movff	btemp,plusw1
 16484  01384C  6A35               	clrf	btemp^0,c
 16485  01384E  0EFC               	movlw	-4
 16486  013850  50E3               	movf	plusw1,w,c
 16487  013852  2035               	addwfc	btemp^0,w,c
 16488  013854  6E35               	movwf	btemp^0,c
 16489  013856  0EFC               	movlw	-4
 16490  013858  0060  F0D7  FFE3   	movff	btemp,plusw1
 16491  01385E                     l6482:
 16492                           
 16493                           ;stkvar	_new_exp @ sp[(-13)+8]
 16494  01385E  0EFC               	movlw	-4
 16495  013860  BEE3               	btfsc	plusw1,7,c
 16496  013862  D01B               	goto	l6488
 16497  013864  0EFC               	movlw	-4
 16498  013866  50E3               	movf	plusw1,w,c
 16499  013868  E104               	bnz	u5500
 16500  01386A  0EFB               	movlw	-5
 16501  01386C  28E3               	incf	plusw1,w,c
 16502  01386E  A0D8               	btfss	status,0,c
 16503  013870  D014               	goto	l6488
 16504  013872                     u5500:
 16505  013872  0EFF               	movlw	255
 16506  013874  6E3F               	movwf	(btemp+10)^0,c
 16507  013876  0E00               	movlw	0
 16508  013878  6E40               	movwf	(btemp+11)^0,c
 16509                           
 16510                           ;stkvar	_new_exp @ sp[(-13)+8]
 16511  01387A  0EFB               	movlw	-5
 16512  01387C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16513  013882  0EFC               	movlw	-4
 16514  013884  0060  F103  FFE3   	movff	btemp+11,plusw1
 16515                           
 16516                           ;stkvar	_b @ sp[(-13)+-4]
 16517  01388A  0EEF               	movlw	-17
 16518  01388C  6AE3               	clrf	plusw1,c
 16519  01388E  0EF0               	movlw	-16
 16520  013890  6AE3               	clrf	plusw1,c
 16521  013892  0EF1               	movlw	-15
 16522  013894  6AE3               	clrf	plusw1,c
 16523  013896  0EF2               	movlw	-14
 16524  013898  6AE3               	clrf	plusw1,c
 16525  01389A                     l6488:
 16526                           
 16527                           ;stkvar	_new_exp @ sp[(-13)+8]
 16528  01389A  0EFC               	movlw	-4
 16529  01389C  BEE3               	btfsc	plusw1,7,c
 16530  01389E  D007               	goto	u5510
 16531  0138A0  0EFC               	movlw	-4
 16532  0138A2  50E3               	movf	plusw1,w,c
 16533  0138A4  E112               	bnz	l6494
 16534  0138A6  0EFB               	movlw	-5
 16535  0138A8  04E3               	decf	plusw1,w,c
 16536  0138AA  B0D8               	btfsc	status,0,c
 16537  0138AC  D00E               	goto	l6494
 16538  0138AE                     u5510:
 16539                           
 16540                           ;stkvar	_new_exp @ sp[(-13)+8]
 16541  0138AE  0EFB               	movlw	-5
 16542  0138B0  6AE3               	clrf	plusw1,c
 16543  0138B2  0EFC               	movlw	-4
 16544  0138B4  6AE3               	clrf	plusw1,c
 16545                           
 16546                           ;stkvar	_b @ sp[(-13)+-4]
 16547  0138B6  0EEF               	movlw	-17
 16548  0138B8  6AE3               	clrf	plusw1,c
 16549  0138BA  0EF0               	movlw	-16
 16550  0138BC  6AE3               	clrf	plusw1,c
 16551  0138BE  0EF1               	movlw	-15
 16552  0138C0  6AE3               	clrf	plusw1,c
 16553  0138C2  0EF2               	movlw	-14
 16554  0138C4  6AE3               	clrf	plusw1,c
 16555                           
 16556                           ;stkvar	_sign @ sp[(-13)+12]
 16557  0138C6  0EFF               	movlw	-1
 16558  0138C8  6AE3               	clrf	plusw1,c
 16559  0138CA                     l6494:
 16560                           
 16561                           ;stkvar	_new_exp @ sp[(-13)+8]
 16562                           ;stkvar	_bexp @ sp[(-13)+11]
 16563  0138CA  0EFB               	movlw	-5
 16564  0138CC  006F FF8C  F035    	movff	plusw1,btemp
 16565  0138D2  0EFE               	movlw	-2
 16566  0138D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 16567                           
 16568                           ;stkvar	_bexp @ sp[(-13)+11]
 16569  0138DA  0EFE               	movlw	-2
 16570  0138DC  A0E3               	btfss	plusw1,0,c
 16571  0138DE  D009               	goto	l6500
 16572                           
 16573                           ;stkvar	_b @ sp[(-13)+-4]
 16574  0138E0  0EF1               	movlw	241
 16575  0138E2  24E1               	addwf	fsr1l,w,c
 16576  0138E4  6ED9               	movwf	fsr2l,c
 16577  0138E6  0EFF               	movlw	255
 16578  0138E8  20E2               	addwfc	fsr1h,w,c
 16579  0138EA  6EDA               	movwf	fsr2h,c
 16580  0138EC  0E00               	movlw	0
 16581  0138EE  8EDB               	bsf	plusw2,7,c
 16582  0138F0  D008               	goto	l6502
 16583  0138F2                     l6500:
 16584                           
 16585                           ;stkvar	_b @ sp[(-13)+-4]
 16586  0138F2  0EF1               	movlw	241
 16587  0138F4  24E1               	addwf	fsr1l,w,c
 16588  0138F6  6ED9               	movwf	fsr2l,c
 16589  0138F8  0EFF               	movlw	255
 16590  0138FA  20E2               	addwfc	fsr1h,w,c
 16591  0138FC  6EDA               	movwf	fsr2h,c
 16592  0138FE  0E7F               	movlw	127
 16593  013900  16DF               	andwf	indf2,f,c
 16594  013902                     l6502:
 16595                           
 16596                           ;stkvar	_b @ sp[(-13)+-4]
 16597  013902  0EF2               	movlw	242
 16598  013904  24E1               	addwf	fsr1l,w,c
 16599  013906  6ED9               	movwf	fsr2l,c
 16600  013908  0EFF               	movlw	255
 16601  01390A  20E2               	addwfc	fsr1h,w,c
 16602  01390C  6EDA               	movwf	fsr2h,c
 16603                           
 16604                           ;stkvar	_bexp @ sp[(-13)+11]
 16605  01390E  0EFE               	movlw	-2
 16606  013910  006F FF8C  F040    	movff	plusw1,btemp+11
 16607  013916  90D8               	bcf	status,0,c
 16608  013918  3040               	rrcf	(btemp+11)^0,w,c
 16609  01391A  6EDF               	movwf	indf2,c
 16610  01391C  D644               	goto	l6400
 16611  01391E                     l2546:
 16612                           
 16613                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16614  01391E  0EEB               	movlw	235
 16615  013920  26E1               	addwf	fsr1l,f,c
 16616  013922  0EFF               	movlw	255
 16617  013924  22E2               	addwfc	fsr1h,f,c
 16618  013926  0012               	return		;funcret
 16619  013928                     __end_of___fldiv:
 16620                           	opt callstack 0
 16621                           
 16622 ;; *************** function ___awmod *****************
 16623 ;; Defined at:
 16624 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16625 ;; Parameters:    Size  Location     Type
 16626 ;;  dividend        2  [STACK] int 
 16627 ;;  divisor         2  [STACK] int 
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;  sign            1  [STACK] unsigned char 
 16630 ;;  counter         1  [STACK] unsigned char 
 16631 ;; Return value:  Size  Location     Type
 16632 ;;                  2  [STACK] int 
 16633 ;; Registers used:
 16634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16635 ;; Tracked objects:
 16636 ;;		On entry : 0/4
 16637 ;;		On exit  : 0/0
 16638 ;;		Unchanged: 0/0
 16639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16644 ;;Total ram usage:        0 bytes
 16645 ;; Hardware stack levels used:    1
 16646 ;; Hardware stack levels required when called:    6
 16647 ;; This function calls:
 16648 ;;		Nothing
 16649 ;; This function is called by:
 16650 ;;		_efgtoa
 16651 ;; This function uses a reentrant model
 16652 ;;
 16653                           
 16654                           	psect	text53
 16655  0164CC                     __ptext53:
 16656                           	opt callstack 0
 16657  0164CC                     ___awmod:
 16658                           	opt callstack 0
 16659                           
 16660                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16661  0164CC  52E6               	movf	postinc1,f,c
 16662  0164CE  52E6               	movf	postinc1,f,c
 16663                           
 16664                           ;stkvar	_sign @ sp[(-2)+0]
 16665                           
 16666                           ;incstack = 0
 16667  0164D0  0EFE               	movlw	-2
 16668  0164D2  6AE3               	clrf	plusw1,c
 16669                           
 16670                           ;stkvar	_dividend @ sp[(-2)+-2]
 16671  0164D4  0EFD               	movlw	-3
 16672  0164D6  AEE3               	btfss	plusw1,7,c
 16673  0164D8  D009               	goto	l6726
 16674                           
 16675                           ;stkvar	_dividend @ sp[(-2)+-2]
 16676                           ;stkvar	_dividend @ sp[(-2)+-2]
 16677  0164DA  0EFC               	movlw	-4
 16678  0164DC  6CE3               	negf	plusw1,c
 16679  0164DE  0EFD               	movlw	-3
 16680  0164E0  1EE3               	comf	plusw1,f,c
 16681  0164E2  B0D8               	btfsc	status,0,c
 16682  0164E4  2AE3               	incf	plusw1,f,c
 16683                           
 16684                           ;stkvar	_sign @ sp[(-2)+0]
 16685  0164E6  0EFE               	movlw	-2
 16686  0164E8  6AE3               	clrf	plusw1,c
 16687  0164EA  2AE3               	incf	plusw1,f,c
 16688  0164EC                     l6726:
 16689                           
 16690                           ;stkvar	_divisor @ sp[(-2)+-4]
 16691  0164EC  0EFB               	movlw	-5
 16692  0164EE  AEE3               	btfss	plusw1,7,c
 16693  0164F0  D006               	goto	l6730
 16694                           
 16695                           ;stkvar	_divisor @ sp[(-2)+-4]
 16696                           ;stkvar	_divisor @ sp[(-2)+-4]
 16697  0164F2  0EFA               	movlw	-6
 16698  0164F4  6CE3               	negf	plusw1,c
 16699  0164F6  0EFB               	movlw	-5
 16700  0164F8  1EE3               	comf	plusw1,f,c
 16701  0164FA  B0D8               	btfsc	status,0,c
 16702  0164FC  2AE3               	incf	plusw1,f,c
 16703  0164FE                     l6730:
 16704                           
 16705                           ;stkvar	_divisor @ sp[(-2)+-4]
 16706  0164FE  0EFA               	movlw	-6
 16707  016500  006F FF8C  F035    	movff	plusw1,btemp
 16708  016506  0EFB               	movlw	-5
 16709  016508  50E3               	movf	plusw1,w,c
 16710  01650A  1035               	iorwf	btemp^0,w,c
 16711  01650C  B4D8               	btfsc	status,2,c
 16712  01650E  D053               	goto	u5870
 16713                           
 16714                           ;stkvar	_counter @ sp[(-2)+1]
 16715  016510  0EFF               	movlw	-1
 16716  016512  6AE3               	clrf	plusw1,c
 16717  016514  D012               	goto	L13
 16718  016516                     l6734:
 16719                           
 16720                           ;stkvar	_divisor @ sp[(-2)+-4]
 16721  016516  0EFA               	movlw	-6
 16722  016518  50E3               	movf	plusw1,w,c
 16723  01651A  90D8               	bcf	status,0,c
 16724  01651C  34E8               	rlcf	wreg,w,c
 16725  01651E  6E35               	movwf	btemp^0,c
 16726  016520  0EFA               	movlw	-6
 16727  016522  0060  F0D7  FFE3   	movff	btemp,plusw1
 16728  016528  0EFB               	movlw	-5
 16729  01652A  50E3               	movf	plusw1,w,c
 16730  01652C  34E8               	rlcf	wreg,w,c
 16731  01652E  6E35               	movwf	btemp^0,c
 16732  016530  0EFB               	movlw	-5
 16733  016532  0060  F0D7  FFE3   	movff	btemp,plusw1
 16734                           
 16735                           ;stkvar	_counter @ sp[(-2)+1]
 16736  016538  0EFF               	movlw	-1
 16737  01653A                     L13:
 16738  01653A  2AE3               	incf	plusw1,f,c
 16739                           
 16740                           ;stkvar	_divisor @ sp[(-2)+-4]
 16741  01653C  0EFB               	movlw	-5
 16742  01653E  AEE3               	btfss	plusw1,7,c
 16743  016540  D7EA               	goto	l6734
 16744  016542                     u5850:
 16745                           
 16746                           ;stkvar	_divisor @ sp[(-2)+-4]
 16747  016542  0EFA               	movlw	-6
 16748  016544  006F FF8C  F03F    	movff	plusw1,btemp+10
 16749  01654A  0EFB               	movlw	-5
 16750  01654C  006F FF8C  F040    	movff	plusw1,btemp+11
 16751                           
 16752                           ;stkvar	_dividend @ sp[(-2)+-2]
 16753  016552  0EFC               	movlw	-4
 16754  016554  006F FF8C  F03D    	movff	plusw1,btemp+8
 16755  01655A  0EFD               	movlw	-3
 16756  01655C  006F FF8C  F03E    	movff	plusw1,btemp+9
 16757  016562  503F               	movf	(btemp+10)^0,w,c
 16758  016564  5C3D               	subwf	(btemp+8)^0,w,c
 16759  016566  5040               	movf	(btemp+11)^0,w,c
 16760  016568  583E               	subwfb	(btemp+9)^0,w,c
 16761  01656A  A0D8               	btfss	status,0,c
 16762  01656C  D014               	goto	l6744
 16763                           
 16764                           ;stkvar	_divisor @ sp[(-2)+-4]
 16765                           ;stkvar	_dividend @ sp[(-2)+-2]
 16766  01656E  0EFC               	movlw	-4
 16767  016570  50E3               	movf	plusw1,w,c
 16768  016572  6E35               	movwf	btemp^0,c
 16769  016574  0EFA               	movlw	-6
 16770  016576  50E3               	movf	plusw1,w,c
 16771  016578  5E35               	subwf	btemp^0,f,c
 16772  01657A  0EFC               	movlw	-4
 16773  01657C  0060  F0D7  FFE3   	movff	btemp,plusw1
 16774  016582  0EFD               	movlw	-3
 16775  016584  50E3               	movf	plusw1,w,c
 16776  016586  6E35               	movwf	btemp^0,c
 16777  016588  0EFB               	movlw	-5
 16778  01658A  50E3               	movf	plusw1,w,c
 16779  01658C  5A35               	subwfb	btemp^0,f,c
 16780  01658E  0EFD               	movlw	-3
 16781  016590  0060  F0D7  FFE3   	movff	btemp,plusw1
 16782  016596                     l6744:
 16783                           
 16784                           ;stkvar	_divisor @ sp[(-2)+-4]
 16785  016596  90D8               	bcf	status,0,c
 16786  016598  0EFB               	movlw	-5
 16787  01659A  32E3               	rrcf	plusw1,f,c
 16788  01659C  0EFA               	movlw	-6
 16789  01659E  32E3               	rrcf	plusw1,f,c
 16790                           
 16791                           ;stkvar	_counter @ sp[(-2)+1]
 16792  0165A0  0EFF               	movlw	-1
 16793  0165A2  50E3               	movf	plusw1,w,c
 16794  0165A4  6E35               	movwf	btemp^0,c
 16795  0165A6  0E01               	movlw	1
 16796  0165A8  5E35               	subwf	btemp^0,f,c
 16797  0165AA  0EFF               	movlw	-1
 16798  0165AC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16799  0165B2  A4D8               	btfss	status,2,c
 16800  0165B4  D7C6               	goto	u5850
 16801  0165B6                     u5870:
 16802                           
 16803                           ;stkvar	_sign @ sp[(-2)+0]
 16804  0165B6  0EFE               	movlw	-2
 16805  0165B8  50E3               	movf	plusw1,w,c
 16806  0165BA  B4D8               	btfsc	status,2,c
 16807  0165BC  D006               	goto	l6752
 16808                           
 16809                           ;stkvar	_dividend @ sp[(-2)+-2]
 16810                           ;stkvar	_dividend @ sp[(-2)+-2]
 16811  0165BE  0EFC               	movlw	-4
 16812  0165C0  6CE3               	negf	plusw1,c
 16813  0165C2  0EFD               	movlw	-3
 16814  0165C4  1EE3               	comf	plusw1,f,c
 16815  0165C6  B0D8               	btfsc	status,0,c
 16816  0165C8  2AE3               	incf	plusw1,f,c
 16817  0165CA                     l6752:
 16818                           
 16819                           ;stkvar	_dividend @ sp[(-2)+-2]
 16820  0165CA  0EFC               	movlw	-4
 16821  0165CC  006F FF8C  F035    	movff	plusw1,btemp
 16822  0165D2  0EFD               	movlw	-3
 16823  0165D4  006F FF8C  F036    	movff	plusw1,btemp+1
 16824                           
 16825                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16826  0165DA  0EFA               	movlw	250
 16827  0165DC  26E1               	addwf	fsr1l,f,c
 16828  0165DE  0EFF               	movlw	255
 16829  0165E0  22E2               	addwfc	fsr1h,f,c
 16830  0165E2  0012               	return		;funcret
 16831  0165E4                     __end_of___awmod:
 16832                           	opt callstack 0
 16833                           
 16834 ;; *************** function ___awdiv *****************
 16835 ;; Defined at:
 16836 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;  dividend        2  [STACK] int 
 16839 ;;  divisor         2  [STACK] int 
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;  quotient        2  [STACK] int 
 16842 ;;  sign            1  [STACK] unsigned char 
 16843 ;;  counter         1  [STACK] unsigned char 
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  2  [STACK] int 
 16846 ;; Registers used:
 16847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/4
 16850 ;;		On exit  : 0/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16857 ;;Total ram usage:        0 bytes
 16858 ;; Hardware stack levels used:    1
 16859 ;; Hardware stack levels required when called:    6
 16860 ;; This function calls:
 16861 ;;		Nothing
 16862 ;; This function is called by:
 16863 ;;		_efgtoa
 16864 ;; This function uses a reentrant model
 16865 ;;
 16866                           
 16867                           	psect	text54
 16868  01612C                     __ptext54:
 16869                           	opt callstack 0
 16870  01612C                     ___awdiv:
 16871                           	opt callstack 0
 16872                           
 16873                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16874  01612C  52E6               	movf	postinc1,f,c
 16875  01612E  52E6               	movf	postinc1,f,c
 16876  016130  52E6               	movf	postinc1,f,c
 16877  016132  52E6               	movf	postinc1,f,c
 16878                           
 16879                           ;stkvar	_sign @ sp[(-4)+2]
 16880                           
 16881                           ;incstack = 0
 16882  016134  0EFE               	movlw	-2
 16883  016136  6AE3               	clrf	plusw1,c
 16884                           
 16885                           ;stkvar	_divisor @ sp[(-4)+-4]
 16886  016138  0EF9               	movlw	-7
 16887  01613A  AEE3               	btfss	plusw1,7,c
 16888  01613C  D009               	goto	l6680
 16889                           
 16890                           ;stkvar	_divisor @ sp[(-4)+-4]
 16891                           ;stkvar	_divisor @ sp[(-4)+-4]
 16892  01613E  0EF8               	movlw	-8
 16893  016140  6CE3               	negf	plusw1,c
 16894  016142  0EF9               	movlw	-7
 16895  016144  1EE3               	comf	plusw1,f,c
 16896  016146  B0D8               	btfsc	status,0,c
 16897  016148  2AE3               	incf	plusw1,f,c
 16898                           
 16899                           ;stkvar	_sign @ sp[(-4)+2]
 16900  01614A  0EFE               	movlw	-2
 16901  01614C  6AE3               	clrf	plusw1,c
 16902  01614E  2AE3               	incf	plusw1,f,c
 16903  016150                     l6680:
 16904                           
 16905                           ;stkvar	_dividend @ sp[(-4)+-2]
 16906  016150  0EFB               	movlw	-5
 16907  016152  AEE3               	btfss	plusw1,7,c
 16908  016154  D008               	goto	l6686
 16909                           
 16910                           ;stkvar	_dividend @ sp[(-4)+-2]
 16911                           ;stkvar	_dividend @ sp[(-4)+-2]
 16912  016156  0EFA               	movlw	-6
 16913  016158  6CE3               	negf	plusw1,c
 16914  01615A  0EFB               	movlw	-5
 16915  01615C  1EE3               	comf	plusw1,f,c
 16916  01615E  B0D8               	btfsc	status,0,c
 16917  016160  2AE3               	incf	plusw1,f,c
 16918                           
 16919                           ;stkvar	_sign @ sp[(-4)+2]
 16920  016162  0EFE               	movlw	-2
 16921  016164  70E3               	btg	plusw1,0,c
 16922  016166                     l6686:
 16923                           
 16924                           ;stkvar	_quotient @ sp[(-4)+0]
 16925  016166  0EFC               	movlw	-4
 16926  016168  6AE3               	clrf	plusw1,c
 16927  01616A  0EFD               	movlw	-3
 16928  01616C  6AE3               	clrf	plusw1,c
 16929                           
 16930                           ;stkvar	_divisor @ sp[(-4)+-4]
 16931  01616E  0EF8               	movlw	-8
 16932  016170  006F FF8C  F035    	movff	plusw1,btemp
 16933  016176  0EF9               	movlw	-7
 16934  016178  50E3               	movf	plusw1,w,c
 16935  01617A  1035               	iorwf	btemp^0,w,c
 16936  01617C  B4D8               	btfsc	status,2,c
 16937  01617E  D066               	goto	u5800
 16938                           
 16939                           ;stkvar	_counter @ sp[(-4)+3]
 16940  016180  0EFF               	movlw	-1
 16941  016182  6AE3               	clrf	plusw1,c
 16942  016184  D012               	goto	L14
 16943  016186                     l6692:
 16944                           
 16945                           ;stkvar	_divisor @ sp[(-4)+-4]
 16946  016186  0EF8               	movlw	-8
 16947  016188  50E3               	movf	plusw1,w,c
 16948  01618A  90D8               	bcf	status,0,c
 16949  01618C  34E8               	rlcf	wreg,w,c
 16950  01618E  6E35               	movwf	btemp^0,c
 16951  016190  0EF8               	movlw	-8
 16952  016192  0060  F0D7  FFE3   	movff	btemp,plusw1
 16953  016198  0EF9               	movlw	-7
 16954  01619A  50E3               	movf	plusw1,w,c
 16955  01619C  34E8               	rlcf	wreg,w,c
 16956  01619E  6E35               	movwf	btemp^0,c
 16957  0161A0  0EF9               	movlw	-7
 16958  0161A2  0060  F0D7  FFE3   	movff	btemp,plusw1
 16959                           
 16960                           ;stkvar	_counter @ sp[(-4)+3]
 16961  0161A8  0EFF               	movlw	-1
 16962  0161AA                     L14:
 16963  0161AA  2AE3               	incf	plusw1,f,c
 16964                           
 16965                           ;stkvar	_divisor @ sp[(-4)+-4]
 16966  0161AC  0EF9               	movlw	-7
 16967  0161AE  AEE3               	btfss	plusw1,7,c
 16968  0161B0  D7EA               	goto	l6692
 16969  0161B2                     u5780:
 16970                           
 16971                           ;stkvar	_quotient @ sp[(-4)+0]
 16972  0161B2  0EFC               	movlw	-4
 16973  0161B4  50E3               	movf	plusw1,w,c
 16974  0161B6  90D8               	bcf	status,0,c
 16975  0161B8  34E8               	rlcf	wreg,w,c
 16976  0161BA  6E35               	movwf	btemp^0,c
 16977  0161BC  0EFC               	movlw	-4
 16978  0161BE  0060  F0D7  FFE3   	movff	btemp,plusw1
 16979  0161C4  0EFD               	movlw	-3
 16980  0161C6  50E3               	movf	plusw1,w,c
 16981  0161C8  34E8               	rlcf	wreg,w,c
 16982  0161CA  6E35               	movwf	btemp^0,c
 16983  0161CC  0EFD               	movlw	-3
 16984  0161CE  0060  F0D7  FFE3   	movff	btemp,plusw1
 16985                           
 16986                           ;stkvar	_divisor @ sp[(-4)+-4]
 16987  0161D4  0EF8               	movlw	-8
 16988  0161D6  006F FF8C  F03F    	movff	plusw1,btemp+10
 16989  0161DC  0EF9               	movlw	-7
 16990  0161DE  006F FF8C  F040    	movff	plusw1,btemp+11
 16991                           
 16992                           ;stkvar	_dividend @ sp[(-4)+-2]
 16993  0161E4  0EFA               	movlw	-6
 16994  0161E6  006F FF8C  F03D    	movff	plusw1,btemp+8
 16995  0161EC  0EFB               	movlw	-5
 16996  0161EE  006F FF8C  F03E    	movff	plusw1,btemp+9
 16997  0161F4  503F               	movf	(btemp+10)^0,w,c
 16998  0161F6  5C3D               	subwf	(btemp+8)^0,w,c
 16999  0161F8  5040               	movf	(btemp+11)^0,w,c
 17000  0161FA  583E               	subwfb	(btemp+9)^0,w,c
 17001  0161FC  A0D8               	btfss	status,0,c
 17002  0161FE  D016               	goto	l6706
 17003                           
 17004                           ;stkvar	_divisor @ sp[(-4)+-4]
 17005                           ;stkvar	_dividend @ sp[(-4)+-2]
 17006  016200  0EFA               	movlw	-6
 17007  016202  50E3               	movf	plusw1,w,c
 17008  016204  6E35               	movwf	btemp^0,c
 17009  016206  0EF8               	movlw	-8
 17010  016208  50E3               	movf	plusw1,w,c
 17011  01620A  5E35               	subwf	btemp^0,f,c
 17012  01620C  0EFA               	movlw	-6
 17013  01620E  0060  F0D7  FFE3   	movff	btemp,plusw1
 17014  016214  0EFB               	movlw	-5
 17015  016216  50E3               	movf	plusw1,w,c
 17016  016218  6E35               	movwf	btemp^0,c
 17017  01621A  0EF9               	movlw	-7
 17018  01621C  50E3               	movf	plusw1,w,c
 17019  01621E  5A35               	subwfb	btemp^0,f,c
 17020  016220  0EFB               	movlw	-5
 17021  016222  0060  F0D7  FFE3   	movff	btemp,plusw1
 17022                           
 17023                           ;stkvar	_quotient @ sp[(-4)+0]
 17024  016228  0EFC               	movlw	-4
 17025  01622A  80E3               	bsf	plusw1,0,c
 17026  01622C                     l6706:
 17027                           
 17028                           ;stkvar	_divisor @ sp[(-4)+-4]
 17029  01622C  90D8               	bcf	status,0,c
 17030  01622E  0EF9               	movlw	-7
 17031  016230  32E3               	rrcf	plusw1,f,c
 17032  016232  0EF8               	movlw	-8
 17033  016234  32E3               	rrcf	plusw1,f,c
 17034                           
 17035                           ;stkvar	_counter @ sp[(-4)+3]
 17036  016236  0EFF               	movlw	-1
 17037  016238  50E3               	movf	plusw1,w,c
 17038  01623A  6E35               	movwf	btemp^0,c
 17039  01623C  0E01               	movlw	1
 17040  01623E  5E35               	subwf	btemp^0,f,c
 17041  016240  0EFF               	movlw	-1
 17042  016242  0060  F0D7  FFE3   	movff	btemp,plusw1
 17043  016248  A4D8               	btfss	status,2,c
 17044  01624A  D7B3               	goto	u5780
 17045  01624C                     u5800:
 17046                           
 17047                           ;stkvar	_sign @ sp[(-4)+2]
 17048  01624C  0EFE               	movlw	-2
 17049  01624E  50E3               	movf	plusw1,w,c
 17050  016250  B4D8               	btfsc	status,2,c
 17051  016252  D006               	goto	l6714
 17052                           
 17053                           ;stkvar	_quotient @ sp[(-4)+0]
 17054                           ;stkvar	_quotient @ sp[(-4)+0]
 17055  016254  0EFC               	movlw	-4
 17056  016256  6CE3               	negf	plusw1,c
 17057  016258  0EFD               	movlw	-3
 17058  01625A  1EE3               	comf	plusw1,f,c
 17059  01625C  B0D8               	btfsc	status,0,c
 17060  01625E  2AE3               	incf	plusw1,f,c
 17061  016260                     l6714:
 17062                           
 17063                           ;stkvar	_quotient @ sp[(-4)+0]
 17064  016260  0EFC               	movlw	-4
 17065  016262  006F FF8C  F035    	movff	plusw1,btemp
 17066  016268  0EFD               	movlw	-3
 17067  01626A  006F FF8C  F036    	movff	plusw1,btemp+1
 17068                           
 17069                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17070  016270  0EF8               	movlw	248
 17071  016272  26E1               	addwf	fsr1l,f,c
 17072  016274  0EFF               	movlw	255
 17073  016276  22E2               	addwfc	fsr1h,f,c
 17074  016278  0012               	return		;funcret
 17075  01627A                     __end_of___awdiv:
 17076                           	opt callstack 0
 17077                           
 17078 ;; *************** function _dtoa *****************
 17079 ;; Defined at:
 17080 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17081 ;; Parameters:    Size  Location     Type
 17082 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17083 ;;		 -> f(6), NULL(0), 
 17084 ;;  d               8  [STACK] long long 
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;  n               8  [STACK] long long 
 17087 ;;  i               2  [STACK] int 
 17088 ;;  s               2  [STACK] int 
 17089 ;;  w               2  [STACK] int 
 17090 ;;  p               2  [STACK] int 
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  2  [STACK] int 
 17093 ;; Registers used:
 17094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/4
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17104 ;;Total ram usage:        0 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; Hardware stack levels required when called:   11
 17107 ;; This function calls:
 17108 ;;		___aodiv
 17109 ;;		___aomod
 17110 ;;		_abs
 17111 ;;		_pad
 17112 ;; This function is called by:
 17113 ;;		_vfpfcnvrt
 17114 ;; This function uses a reentrant model
 17115 ;;
 17116                           
 17117                           	psect	text55
 17118  013928                     __ptext55:
 17119                           	opt callstack 0
 17120  013928                     _dtoa:
 17121                           	opt callstack 0
 17122                           
 17123                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17124  013928  0E12               	movlw	18
 17125  01392A  26E1               	addwf	fsr1l,f,c
 17126  01392C  0E00               	movlw	0
 17127  01392E  22E2               	addwfc	fsr1h,f,c
 17128                           
 17129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17130                           ;stkvar	_d @ sp[(-18)+-10]
 17131                           
 17132                           ;incstack = 0
 17133  013930  0EE4               	movlw	228
 17134  013932  24E1               	addwf	fsr1l,w,c
 17135  013934  6ED9               	movwf	fsr2l,c
 17136  013936  0EFF               	movlw	255
 17137  013938  20E2               	addwfc	fsr1h,w,c
 17138  01393A  6EDA               	movwf	fsr2h,c
 17139                           
 17140                           ;stkvar	_n @ sp[(-18)+2]
 17141  01393C  0E08               	movlw	8
 17142  01393E  6E35               	movwf	btemp^0,c
 17143  013940  0EF0               	movlw	-16
 17144  013942                     us841999:
 17145  013942  006F FF7B FFE3     	movff	postinc2,plusw1
 17146  013948  28E8               	incf	wreg,w,c
 17147  01394A  2E35               	decfsz	btemp^0,f,c
 17148  01394C  D7FA               	bra	us841999
 17149                           
 17150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17151                           ;stkvar	_n @ sp[(-18)+2]
 17152  01394E  0EF7               	movlw	-9
 17153  013950  AEE3               	btfss	plusw1,7,c
 17154  013952  D002               	goto	u8420
 17155  013954  0E01               	movlw	1
 17156  013956  D001               	goto	u8430
 17157  013958                     u8420:
 17158  013958  0E00               	movlw	0
 17159  01395A                     u8430:
 17160  01395A  6E3F               	movwf	(btemp+10)^0,c
 17161  01395C  6A40               	clrf	(btemp+11)^0,c
 17162                           
 17163                           ;stkvar	_s @ sp[(-18)+12]
 17164  01395E  0EFA               	movlw	-6
 17165  013960  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17166  013966  0EFB               	movlw	-5
 17167  013968  0060  F103  FFE3   	movff	btemp+11,plusw1
 17168                           
 17169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17170                           ;stkvar	_s @ sp[(-18)+12]
 17171  01396E  0EFA               	movlw	-6
 17172  013970  006F FF8C  F035    	movff	plusw1,btemp
 17173  013976  0EFB               	movlw	-5
 17174  013978  50E3               	movf	plusw1,w,c
 17175  01397A  1035               	iorwf	btemp^0,w,c
 17176  01397C  B4D8               	btfsc	status,2,c
 17177  01397E  D025               	goto	u8450
 17178                           
 17179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17180                           ;stkvar	_n @ sp[(-18)+2]
 17181                           ;stkvar	_n @ sp[(-18)+2]
 17182  013980  0EF0               	movlw	-16
 17183  013982  6CE3               	negf	plusw1,c
 17184  013984  0EF1               	movlw	-15
 17185  013986  1EE3               	comf	plusw1,f,c
 17186  013988  0EF2               	movlw	-14
 17187  01398A  1EE3               	comf	plusw1,f,c
 17188  01398C  0EF3               	movlw	-13
 17189  01398E  1EE3               	comf	plusw1,f,c
 17190  013990  0EF4               	movlw	-12
 17191  013992  1EE3               	comf	plusw1,f,c
 17192  013994  0EF5               	movlw	-11
 17193  013996  1EE3               	comf	plusw1,f,c
 17194  013998  0EF6               	movlw	-10
 17195  01399A  1EE3               	comf	plusw1,f,c
 17196  01399C  0EF7               	movlw	-9
 17197  01399E  1EE3               	comf	plusw1,f,c
 17198  0139A0  E314               	bnc	u8450
 17199  0139A2  0EF1               	movlw	-15
 17200  0139A4  2AE3               	incf	plusw1,f,c
 17201  0139A6  E311               	bnc	u8450
 17202  0139A8  0EF2               	movlw	-14
 17203  0139AA  2AE3               	incf	plusw1,f,c
 17204  0139AC  E30E               	bnc	u8450
 17205  0139AE  0EF3               	movlw	-13
 17206  0139B0  2AE3               	incf	plusw1,f,c
 17207  0139B2  E30B               	bnc	u8450
 17208  0139B4  0EF4               	movlw	-12
 17209  0139B6  2AE3               	incf	plusw1,f,c
 17210  0139B8  E308               	bnc	u8450
 17211  0139BA  0EF5               	movlw	-11
 17212  0139BC  2AE3               	incf	plusw1,f,c
 17213  0139BE  E305               	bnc	u8450
 17214  0139C0  0EF6               	movlw	-10
 17215  0139C2  2AE3               	incf	plusw1,f,c
 17216  0139C4  E302               	bnc	u8450
 17217  0139C6  0EF7               	movlw	-9
 17218  0139C8  2AE3               	incf	plusw1,f,c
 17219  0139CA                     u8450:
 17220                           
 17221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17222  0139CA  AE21               	btfss	(_prec+1)^0,7,c
 17223                           
 17224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17225  0139CC  9222               	bcf	_flags^0,1,c
 17226                           
 17227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17228  0139CE  BE21               	btfsc	(_prec+1)^0,7,c
 17229  0139D0  D005               	goto	u8470
 17230  0139D2  5021               	movf	(_prec+1)^0,w,c
 17231  0139D4  E110               	bnz	l8948
 17232  0139D6  0420               	decf	_prec^0,w,c
 17233  0139D8  B0D8               	btfsc	status,0,c
 17234  0139DA  D00D               	goto	l8948
 17235  0139DC                     u8470:
 17236  0139DC  0E01               	movlw	1
 17237  0139DE  6E3F               	movwf	(btemp+10)^0,c
 17238  0139E0  0E00               	movlw	0
 17239  0139E2  6E40               	movwf	(btemp+11)^0,c
 17240                           
 17241                           ;stkvar	_p @ sp[(-18)+16]
 17242  0139E4  0EFE               	movlw	-2
 17243  0139E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17244  0139EC  0EFF               	movlw	-1
 17245  0139EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17246  0139F4  D008               	goto	l1750
 17247  0139F6                     l8948:
 17248                           
 17249                           ;stkvar	_p @ sp[(-18)+16]
 17250  0139F6  0EFE               	movlw	-2
 17251  0139F8  0060  F083  FFE3   	movff	_prec,plusw1
 17252  0139FE  0EFF               	movlw	-1
 17253  013A00  0060  F087  FFE3   	movff	_prec+1,plusw1
 17254  013A06                     l1750:
 17255                           
 17256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17257                           ;stkvar	_w @ sp[(-18)+14]
 17258  013A06  0EFC               	movlw	-4
 17259  013A08  0060  F07B  FFE3   	movff	_width,plusw1
 17260  013A0E  0EFD               	movlw	-3
 17261  013A10  0060  F07F  FFE3   	movff	_width+1,plusw1
 17262                           
 17263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17264                           ;stkvar	_s @ sp[(-18)+12]
 17265  013A16  0EFA               	movlw	-6
 17266  013A18  006F FF8C  F035    	movff	plusw1,btemp
 17267  013A1E  0EFB               	movlw	-5
 17268  013A20  50E3               	movf	plusw1,w,c
 17269  013A22  1035               	iorwf	btemp^0,w,c
 17270  013A24  A4D8               	btfss	status,2,c
 17271  013A26  D002               	goto	u8490
 17272  013A28  A422               	btfss	_flags^0,2,c
 17273  013A2A  D00A               	goto	l8956
 17274  013A2C                     u8490:
 17275                           
 17276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17277                           ;stkvar	_w @ sp[(-18)+14]
 17278  013A2C  50E1               	movf	fsr1l,w,c
 17279  013A2E  0FFC               	addlw	-4
 17280  013A30  6ED9               	movwf	fsr2l,c
 17281  013A32  50E2               	movf	fsr1h,w,c
 17282  013A34  6EDA               	movwf	fsr2h,c
 17283  013A36  0EFF               	movlw	255
 17284  013A38  22DA               	addwfc	fsr2h,f,c
 17285  013A3A  06DE               	decf	postinc2,f,c
 17286  013A3C  0E00               	movlw	0
 17287  013A3E  5ADD               	subwfb	postdec2,f,c
 17288  013A40                     l8956:
 17289                           
 17290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17291  013A40  0E4F               	movlw	79
 17292  013A42  6E3F               	movwf	(btemp+10)^0,c
 17293  013A44  0E00               	movlw	0
 17294  013A46  6E40               	movwf	(btemp+11)^0,c
 17295                           
 17296                           ;stkvar	_i @ sp[(-18)+10]
 17297  013A48  0EF8               	movlw	-8
 17298  013A4A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17299  013A50  0EF9               	movlw	-7
 17300  013A52  0060  F103  FFE3   	movff	btemp+11,plusw1
 17301                           
 17302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17303  013A58  0101               	movlb	1	; () banked
 17304  013A5A  6BF3               	clrf	(_dbuf+79)& (0+255),b
 17305                           
 17306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17307  013A5C  D109               	goto	l8970
 17308  013A5E                     l8960:
 17309                           
 17310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17311                           ;stkvar	_i @ sp[(-18)+10]
 17312  013A5E  50E1               	movf	fsr1l,w,c
 17313  013A60  0FF8               	addlw	-8
 17314  013A62  6ED9               	movwf	fsr2l,c
 17315  013A64  50E2               	movf	fsr1h,w,c
 17316  013A66  6EDA               	movwf	fsr2h,c
 17317  013A68  0EFF               	movlw	255
 17318  013A6A  22DA               	addwfc	fsr2h,f,c
 17319  013A6C  06DE               	decf	postinc2,f,c
 17320  013A6E  0E00               	movlw	0
 17321  013A70  5ADD               	subwfb	postdec2,f,c
 17322                           
 17323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17324  013A72  0E0A               	movlw	10
 17325  013A74  6EE6               	movwf	postinc1,c
 17326  013A76  0E00               	movlw	0
 17327  013A78  6EE6               	movwf	postinc1,c
 17328  013A7A  0E00               	movlw	0
 17329  013A7C  6EE6               	movwf	postinc1,c
 17330  013A7E  0E00               	movlw	0
 17331  013A80  6EE6               	movwf	postinc1,c
 17332  013A82  0E00               	movlw	0
 17333  013A84  6EE6               	movwf	postinc1,c
 17334  013A86  0E00               	movlw	0
 17335  013A88  6EE6               	movwf	postinc1,c
 17336  013A8A  0E00               	movlw	0
 17337  013A8C  6EE6               	movwf	postinc1,c
 17338  013A8E  0E00               	movlw	0
 17339  013A90  6EE6               	movwf	postinc1,c
 17340                           
 17341                           ;stkvar	_n @ sp[(-26)+2]
 17342  013A92  50E1               	movf	fsr1l,w,c
 17343  013A94  0FE8               	addlw	-24
 17344  013A96  6ED9               	movwf	fsr2l,c
 17345  013A98  50E2               	movf	fsr1h,w,c
 17346  013A9A  6EDA               	movwf	fsr2h,c
 17347  013A9C  0EFF               	movlw	255
 17348  013A9E  22DA               	addwfc	fsr2h,f,c
 17349  013AA0  006F FF7B FFE6     	movff	postinc2,postinc1
 17350  013AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 17351  013AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 17352  013AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 17353  013AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 17354  013ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 17355  013AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 17356  013ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 17357  013AD0  EC52  F0AA         	call	___aomod	;wreg free
 17358  013AD4  52E5               	movf	postdec1,f,c
 17359  013AD6  006F FF9C  F04C    	movff	indf1,btemp+23
 17360  013ADC  52E5               	movf	postdec1,f,c
 17361  013ADE  006F FF9C  F04B    	movff	indf1,btemp+22
 17362  013AE4  52E5               	movf	postdec1,f,c
 17363  013AE6  006F FF9C  F04A    	movff	indf1,btemp+21
 17364  013AEC  52E5               	movf	postdec1,f,c
 17365  013AEE  006F FF9C  F049    	movff	indf1,btemp+20
 17366  013AF4  52E5               	movf	postdec1,f,c
 17367  013AF6  006F FF9C  F048    	movff	indf1,btemp+19
 17368  013AFC  52E5               	movf	postdec1,f,c
 17369  013AFE  006F FF9C  F047    	movff	indf1,btemp+18
 17370  013B04  52E5               	movf	postdec1,f,c
 17371  013B06  006F FF9C  F046    	movff	indf1,btemp+17
 17372  013B0C  52E5               	movf	postdec1,f,c
 17373  013B0E  006F FF9C  F045    	movff	indf1,btemp+16
 17374  013B14  0EF8               	movlw	248
 17375  013B16  26E1               	addwf	fsr1l,f,c
 17376  013B18  0EFF               	movlw	255
 17377  013B1A  22E2               	addwfc	fsr1h,f,c
 17378  013B1C  0060  F114  F03F   	movff	btemp+16,btemp+10
 17379  013B22  0060  F118  F040   	movff	btemp+17,btemp+11
 17380  013B28  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17381  013B2E  0060  F103  FFE6   	movff	btemp+11,postinc1
 17382  013B34  EC7F  F0BC         	call	_abs	;wreg free
 17383  013B38  0E30               	movlw	48
 17384  013B3A  2635               	addwf	btemp^0,f,c
 17385                           
 17386                           ;stkvar	_i @ sp[(-18)+10]
 17387  013B3C  0EF8               	movlw	-8
 17388  013B3E  006F FF8C  F03F    	movff	plusw1,btemp+10
 17389  013B44  0EF9               	movlw	-7
 17390  013B46  006F FF8C  F040    	movff	plusw1,btemp+11
 17391  013B4C  0EA4               	movlw	low _dbuf
 17392  013B4E  243F               	addwf	(btemp+10)^0,w,c
 17393  013B50  6ED9               	movwf	fsr2l,c
 17394  013B52  0E01               	movlw	high _dbuf
 17395  013B54  2040               	addwfc	(btemp+11)^0,w,c
 17396  013B56  6EDA               	movwf	fsr2h,c
 17397  013B58  0060  F0D7  FFDF   	movff	btemp,indf2
 17398                           
 17399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17400                           ;stkvar	_p @ sp[(-18)+16]
 17401  013B5E  50E1               	movf	fsr1l,w,c
 17402  013B60  0FFE               	addlw	-2
 17403  013B62  6ED9               	movwf	fsr2l,c
 17404  013B64  50E2               	movf	fsr1h,w,c
 17405  013B66  6EDA               	movwf	fsr2h,c
 17406  013B68  0EFF               	movlw	255
 17407  013B6A  22DA               	addwfc	fsr2h,f,c
 17408  013B6C  06DE               	decf	postinc2,f,c
 17409  013B6E  0E00               	movlw	0
 17410  013B70  5ADD               	subwfb	postdec2,f,c
 17411                           
 17412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17413                           ;stkvar	_w @ sp[(-18)+14]
 17414  013B72  50E1               	movf	fsr1l,w,c
 17415  013B74  0FFC               	addlw	-4
 17416  013B76  6ED9               	movwf	fsr2l,c
 17417  013B78  50E2               	movf	fsr1h,w,c
 17418  013B7A  6EDA               	movwf	fsr2h,c
 17419  013B7C  0EFF               	movlw	255
 17420  013B7E  22DA               	addwfc	fsr2h,f,c
 17421  013B80  06DE               	decf	postinc2,f,c
 17422  013B82  0E00               	movlw	0
 17423  013B84  5ADD               	subwfb	postdec2,f,c
 17424                           
 17425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17426  013B86  0E0A               	movlw	10
 17427  013B88  6EE6               	movwf	postinc1,c
 17428  013B8A  0E00               	movlw	0
 17429  013B8C  6EE6               	movwf	postinc1,c
 17430  013B8E  0E00               	movlw	0
 17431  013B90  6EE6               	movwf	postinc1,c
 17432  013B92  0E00               	movlw	0
 17433  013B94  6EE6               	movwf	postinc1,c
 17434  013B96  0E00               	movlw	0
 17435  013B98  6EE6               	movwf	postinc1,c
 17436  013B9A  0E00               	movlw	0
 17437  013B9C  6EE6               	movwf	postinc1,c
 17438  013B9E  0E00               	movlw	0
 17439  013BA0  6EE6               	movwf	postinc1,c
 17440  013BA2  0E00               	movlw	0
 17441  013BA4  6EE6               	movwf	postinc1,c
 17442                           
 17443                           ;stkvar	_n @ sp[(-26)+2]
 17444  013BA6  50E1               	movf	fsr1l,w,c
 17445  013BA8  0FE8               	addlw	-24
 17446  013BAA  6ED9               	movwf	fsr2l,c
 17447  013BAC  50E2               	movf	fsr1h,w,c
 17448  013BAE  6EDA               	movwf	fsr2h,c
 17449  013BB0  0EFF               	movlw	255
 17450  013BB2  22DA               	addwfc	fsr2h,f,c
 17451  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 17452  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 17453  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 17454  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 17455  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 17456  013BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 17457  013BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 17458  013BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 17459  013BE4  ECA9  F0A6         	call	___aodiv	;wreg free
 17460  013BE8  52E5               	movf	postdec1,f,c
 17461  013BEA  006F FF9C  F04C    	movff	indf1,btemp+23
 17462  013BF0  52E5               	movf	postdec1,f,c
 17463  013BF2  006F FF9C  F04B    	movff	indf1,btemp+22
 17464  013BF8  52E5               	movf	postdec1,f,c
 17465  013BFA  006F FF9C  F04A    	movff	indf1,btemp+21
 17466  013C00  52E5               	movf	postdec1,f,c
 17467  013C02  006F FF9C  F049    	movff	indf1,btemp+20
 17468  013C08  52E5               	movf	postdec1,f,c
 17469  013C0A  006F FF9C  F048    	movff	indf1,btemp+19
 17470  013C10  52E5               	movf	postdec1,f,c
 17471  013C12  006F FF9C  F047    	movff	indf1,btemp+18
 17472  013C18  52E5               	movf	postdec1,f,c
 17473  013C1A  006F FF9C  F046    	movff	indf1,btemp+17
 17474  013C20  52E5               	movf	postdec1,f,c
 17475  013C22  006F FF9C  F045    	movff	indf1,btemp+16
 17476  013C28  0EF8               	movlw	248
 17477  013C2A  26E1               	addwf	fsr1l,f,c
 17478  013C2C  0EFF               	movlw	255
 17479  013C2E  22E2               	addwfc	fsr1h,f,c
 17480                           
 17481                           ;stkvar	_n @ sp[(-18)+2]
 17482  013C30  0EF0               	movlw	-16
 17483  013C32  0060  F117  FFE3   	movff	btemp+16,plusw1
 17484  013C38  0EF1               	movlw	-15
 17485  013C3A  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17486  013C40  0EF2               	movlw	-14
 17487  013C42  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17488  013C48  0EF3               	movlw	-13
 17489  013C4A  0060  F123  FFE3   	movff	btemp+19,plusw1
 17490  013C50  0EF4               	movlw	-12
 17491  013C52  0060  F127  FFE3   	movff	btemp+20,plusw1
 17492  013C58  0EF5               	movlw	-11
 17493  013C5A  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17494  013C60  0EF6               	movlw	-10
 17495  013C62  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17496  013C68  0EF7               	movlw	-9
 17497  013C6A  0060  F133  FFE3   	movff	btemp+23,plusw1
 17498  013C70                     l8970:
 17499                           
 17500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17501                           ;stkvar	_i @ sp[(-18)+10]
 17502  013C70  0EF9               	movlw	-7
 17503  013C72  BEE3               	btfsc	plusw1,7,c
 17504  013C74  D036               	goto	u8540
 17505  013C76  0EF9               	movlw	-7
 17506  013C78  50E3               	movf	plusw1,w,c
 17507  013C7A  E104               	bnz	u8500
 17508  013C7C  0EF8               	movlw	-8
 17509  013C7E  04E3               	decf	plusw1,w,c
 17510  013C80  A0D8               	btfss	status,0,c
 17511  013C82  D02F               	goto	u8540
 17512  013C84                     u8500:
 17513                           
 17514                           ;stkvar	_n @ sp[(-18)+2]
 17515  013C84  0EF0               	movlw	-16
 17516  013C86  50E3               	movf	plusw1,w,c
 17517  013C88  E115               	bnz	u8511
 17518  013C8A  0EF1               	movlw	-15
 17519  013C8C  50E3               	movf	plusw1,w,c
 17520  013C8E  E112               	bnz	u8511
 17521  013C90  0EF2               	movlw	-14
 17522  013C92  50E3               	movf	plusw1,w,c
 17523  013C94  E10F               	bnz	u8511
 17524  013C96  0EF3               	movlw	-13
 17525  013C98  50E3               	movf	plusw1,w,c
 17526  013C9A  E10C               	bnz	u8511
 17527  013C9C  0EF4               	movlw	-12
 17528  013C9E  50E3               	movf	plusw1,w,c
 17529  013CA0  E109               	bnz	u8511
 17530  013CA2  0EF5               	movlw	-11
 17531  013CA4  50E3               	movf	plusw1,w,c
 17532  013CA6  E106               	bnz	u8511
 17533  013CA8  0EF6               	movlw	-10
 17534  013CAA  50E3               	movf	plusw1,w,c
 17535  013CAC  E103               	bnz	u8511
 17536  013CAE  0EF7               	movlw	-9
 17537  013CB0  50E3               	movf	plusw1,w,c
 17538  013CB2  A4D8               	btfss	status,2,c
 17539  013CB4                     u8511:
 17540  013CB4  D6D4               	goto	l8960
 17541                           
 17542                           ;stkvar	_p @ sp[(-18)+16]
 17543  013CB6  0EFF               	movlw	-1
 17544  013CB8  BEE3               	btfsc	plusw1,7,c
 17545  013CBA  D007               	goto	u8520
 17546  013CBC  0EFF               	movlw	-1
 17547  013CBE  50E3               	movf	plusw1,w,c
 17548  013CC0  E103               	bnz	u8521
 17549  013CC2  0EFE               	movlw	-2
 17550  013CC4  04E3               	decf	plusw1,w,c
 17551  013CC6  B0D8               	btfsc	status,0,c
 17552  013CC8                     u8521:
 17553  013CC8  D6CA               	goto	l8960
 17554  013CCA                     u8520:
 17555                           
 17556                           ;stkvar	_w @ sp[(-18)+14]
 17557  013CCA  0EFD               	movlw	-3
 17558  013CCC  BEE3               	btfsc	plusw1,7,c
 17559  013CCE  D009               	goto	u8540
 17560  013CD0  0EFD               	movlw	-3
 17561  013CD2  50E3               	movf	plusw1,w,c
 17562  013CD4  E104               	bnz	u8530
 17563  013CD6  0EFC               	movlw	-4
 17564  013CD8  04E3               	decf	plusw1,w,c
 17565  013CDA  A0D8               	btfss	status,0,c
 17566  013CDC  D002               	goto	u8540
 17567  013CDE                     u8530:
 17568  013CDE  B222               	btfsc	_flags^0,1,c
 17569  013CE0  D6BE               	goto	l8960
 17570  013CE2                     u8540:
 17571                           
 17572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17573                           ;stkvar	_s @ sp[(-18)+12]
 17574  013CE2  0EFA               	movlw	-6
 17575  013CE4  006F FF8C  F035    	movff	plusw1,btemp
 17576  013CEA  0EFB               	movlw	-5
 17577  013CEC  50E3               	movf	plusw1,w,c
 17578  013CEE  1035               	iorwf	btemp^0,w,c
 17579  013CF0  A4D8               	btfss	status,2,c
 17580  013CF2  D002               	goto	u8560
 17581  013CF4  A422               	btfss	_flags^0,2,c
 17582  013CF6  D033               	goto	l8994
 17583  013CF8                     u8560:
 17584                           
 17585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17586                           ;stkvar	_i @ sp[(-18)+10]
 17587  013CF8  50E1               	movf	fsr1l,w,c
 17588  013CFA  0FF8               	addlw	-8
 17589  013CFC  6ED9               	movwf	fsr2l,c
 17590  013CFE  50E2               	movf	fsr1h,w,c
 17591  013D00  6EDA               	movwf	fsr2h,c
 17592  013D02  0EFF               	movlw	255
 17593  013D04  22DA               	addwfc	fsr2h,f,c
 17594  013D06  06DE               	decf	postinc2,f,c
 17595  013D08  0E00               	movlw	0
 17596  013D0A  5ADD               	subwfb	postdec2,f,c
 17597                           
 17598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17599                           ;stkvar	_s @ sp[(-18)+12]
 17600  013D0C  0EFA               	movlw	-6
 17601  013D0E  006F FF8C  F035    	movff	plusw1,btemp
 17602  013D14  0EFB               	movlw	-5
 17603  013D16  50E3               	movf	plusw1,w,c
 17604  013D18  1035               	iorwf	btemp^0,w,c
 17605  013D1A  A4D8               	btfss	status,2,c
 17606  013D1C  D002               	goto	l8990
 17607  013D1E  0E2B               	movlw	43
 17608  013D20  D001               	goto	L15
 17609  013D22                     l8990:
 17610  013D22  0E2D               	movlw	45
 17611  013D24                     L15:
 17612  013D24  6E3F               	movwf	(btemp+10)^0,c
 17613  013D26  0E00               	movlw	0
 17614  013D28  6E40               	movwf	(btemp+11)^0,c
 17615                           
 17616                           ;stkvar	_dtoa$4082 @ sp[(-18)+0]
 17617  013D2A  0EEE               	movlw	-18
 17618  013D2C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17619  013D32  0EEF               	movlw	-17
 17620  013D34  0060  F103  FFE3   	movff	btemp+11,plusw1
 17621                           
 17622                           ;stkvar	_dtoa$4082 @ sp[(-18)+0]
 17623                           ;stkvar	_i @ sp[(-18)+10]
 17624  013D3A  0EF8               	movlw	-8
 17625  013D3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 17626  013D42  0EF9               	movlw	-7
 17627  013D44  006F FF8C  F040    	movff	plusw1,btemp+11
 17628  013D4A  0EA4               	movlw	low _dbuf
 17629  013D4C  243F               	addwf	(btemp+10)^0,w,c
 17630  013D4E  6ED9               	movwf	fsr2l,c
 17631  013D50  0E01               	movlw	high _dbuf
 17632  013D52  2040               	addwfc	(btemp+11)^0,w,c
 17633  013D54  6EDA               	movwf	fsr2h,c
 17634  013D56  0EEE               	movlw	-18
 17635  013D58  006F FF8F FFDF     	movff	plusw1,indf2
 17636  013D5E                     l8994:
 17637                           
 17638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17639                           ;stkvar	_w @ sp[(-18)+14]
 17640  013D5E  0EFC               	movlw	-4
 17641  013D60  006F FF8F FFE6     	movff	plusw1,postinc1
 17642  013D66  006F FF8F FFE6     	movff	plusw1,postinc1
 17643                           
 17644                           ;stkvar	_i @ sp[(-20)+10]
 17645  013D6C  0EA4               	movlw	low _dbuf
 17646  013D6E  6E3F               	movwf	(btemp+10)^0,c
 17647  013D70  0E01               	movlw	high _dbuf
 17648  013D72  6E40               	movwf	(btemp+11)^0,c
 17649  013D74  0EF6               	movlw	-10
 17650  013D76  50E3               	movf	plusw1,w,c
 17651  013D78  263F               	addwf	(btemp+10)^0,f,c
 17652  013D7A  0EF7               	movlw	-9
 17653  013D7C  50E3               	movf	plusw1,w,c
 17654  013D7E  2240               	addwfc	(btemp+11)^0,f,c
 17655  013D80  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17656  013D86  0060  F103  FFE6   	movff	btemp+11,postinc1
 17657                           
 17658                           ;stkvar	_fp @ sp[(-22)+-2]
 17659  013D8C  0EE8               	movlw	-24
 17660  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 17661  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 17662  013D9A  ECF2  F0B2         	call	_pad	;wreg free
 17663                           
 17664                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17665  013D9E  0EE4               	movlw	228
 17666  013DA0  26E1               	addwf	fsr1l,f,c
 17667  013DA2  0EFF               	movlw	255
 17668  013DA4  22E2               	addwfc	fsr1h,f,c
 17669  013DA6  0012               	return		;funcret
 17670  013DA8                     __end_of_dtoa:
 17671                           	opt callstack 0
 17672                           
 17673 ;; *************** function _abs *****************
 17674 ;; Defined at:
 17675 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;  a               2  [STACK] int 
 17678 ;; Auto vars:     Size  Location     Type
 17679 ;;		None
 17680 ;; Return value:  Size  Location     Type
 17681 ;;                  2  [STACK] int 
 17682 ;; Registers used:
 17683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17684 ;; Tracked objects:
 17685 ;;		On entry : 0/1
 17686 ;;		On exit  : 0/0
 17687 ;;		Unchanged: 0/0
 17688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17693 ;;Total ram usage:        0 bytes
 17694 ;; Hardware stack levels used:    1
 17695 ;; Hardware stack levels required when called:    6
 17696 ;; This function calls:
 17697 ;;		Nothing
 17698 ;; This function is called by:
 17699 ;;		_dtoa
 17700 ;; This function uses a reentrant model
 17701 ;;
 17702                           
 17703                           	psect	text56
 17704  0178FE                     __ptext56:
 17705                           	opt callstack 0
 17706  0178FE                     _abs:
 17707                           	opt callstack 17
 17708                           
 17709                           ;stkvar	_a @ sp[(0)+-2]
 17710                           
 17711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17712                           ;incstack = 0
 17713  0178FE  0EFF               	movlw	-1
 17714  017900  BEE3               	btfsc	plusw1,7,c
 17715  017902  D007               	goto	u4760
 17716  017904  0EFF               	movlw	-1
 17717  017906  50E3               	movf	plusw1,w,c
 17718  017908  E112               	bnz	l6168
 17719  01790A  0EFE               	movlw	-2
 17720  01790C  04E3               	decf	plusw1,w,c
 17721  01790E  B0D8               	btfsc	status,0,c
 17722  017910  D00E               	goto	l6168
 17723  017912                     u4760:
 17724                           
 17725                           ;stkvar	_a @ sp[(0)+-2]
 17726  017912  0EFE               	movlw	-2
 17727  017914  006F FF8C  F035    	movff	plusw1,btemp
 17728  01791A  1E35               	comf	btemp^0,f,c
 17729  01791C  0EFF               	movlw	-1
 17730  01791E  006F FF8C  F036    	movff	plusw1,btemp+1
 17731  017924  1E36               	comf	(btemp+1)^0,f,c
 17732  017926  2A35               	incf	btemp^0,f,c
 17733  017928  B4D8               	btfsc	status,2,c
 17734  01792A  2A36               	incf	(btemp+1)^0,f,c
 17735  01792C  D008               	goto	l2653
 17736  01792E                     l6168:
 17737                           
 17738                           ;stkvar	_a @ sp[(0)+-2]
 17739  01792E  0EFE               	movlw	-2
 17740  017930  006F FF8C  F035    	movff	plusw1,btemp
 17741  017936  0EFF               	movlw	-1
 17742  017938  006F FF8C  F036    	movff	plusw1,btemp+1
 17743  01793E                     l2653:
 17744                           
 17745                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17746  01793E  52E5               	movf	postdec1,f,c
 17747  017940  52E5               	movf	postdec1,f,c
 17748  017942  0012               	return		;funcret
 17749  017944                     __end_of_abs:
 17750                           	opt callstack 0
 17751                           
 17752 ;; *************** function ___aomod *****************
 17753 ;; Defined at:
 17754 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17755 ;; Parameters:    Size  Location     Type
 17756 ;;  dividend        8  [STACK] long long 
 17757 ;;  divisor         8  [STACK] long long 
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;  sign            1  [STACK] unsigned char 
 17760 ;;  counter         1  [STACK] unsigned char 
 17761 ;; Return value:  Size  Location     Type
 17762 ;;                  8  [STACK] long long 
 17763 ;; Registers used:
 17764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/1
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17774 ;;Total ram usage:        0 bytes
 17775 ;; Hardware stack levels used:    1
 17776 ;; Hardware stack levels required when called:    6
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_dtoa
 17781 ;; This function uses a reentrant model
 17782 ;;
 17783                           
 17784                           	psect	text57
 17785  0154A4                     __ptext57:
 17786                           	opt callstack 0
 17787  0154A4                     ___aomod:
 17788                           	opt callstack 0
 17789                           
 17790                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17791  0154A4  52E6               	movf	postinc1,f,c
 17792  0154A6  52E6               	movf	postinc1,f,c
 17793                           
 17794                           ;stkvar	_sign @ sp[(-2)+0]
 17795                           
 17796                           ;incstack = 0
 17797  0154A8  0EFE               	movlw	-2
 17798  0154AA  6AE3               	clrf	plusw1,c
 17799                           
 17800                           ;stkvar	_dividend @ sp[(-2)+-8]
 17801  0154AC  0EFD               	movlw	-3
 17802  0154AE  AEE3               	btfss	plusw1,7,c
 17803  0154B0  D028               	goto	l6326
 17804                           
 17805                           ;stkvar	_dividend @ sp[(-2)+-8]
 17806                           ;stkvar	_dividend @ sp[(-2)+-8]
 17807  0154B2  0EF6               	movlw	-10
 17808  0154B4  6CE3               	negf	plusw1,c
 17809  0154B6  0EF7               	movlw	-9
 17810  0154B8  1EE3               	comf	plusw1,f,c
 17811  0154BA  0EF8               	movlw	-8
 17812  0154BC  1EE3               	comf	plusw1,f,c
 17813  0154BE  0EF9               	movlw	-7
 17814  0154C0  1EE3               	comf	plusw1,f,c
 17815  0154C2  0EFA               	movlw	-6
 17816  0154C4  1EE3               	comf	plusw1,f,c
 17817  0154C6  0EFB               	movlw	-5
 17818  0154C8  1EE3               	comf	plusw1,f,c
 17819  0154CA  0EFC               	movlw	-4
 17820  0154CC  1EE3               	comf	plusw1,f,c
 17821  0154CE  0EFD               	movlw	-3
 17822  0154D0  1EE3               	comf	plusw1,f,c
 17823  0154D2  E314               	bnc	u5190
 17824  0154D4  0EF7               	movlw	-9
 17825  0154D6  2AE3               	incf	plusw1,f,c
 17826  0154D8  E311               	bnc	u5190
 17827  0154DA  0EF8               	movlw	-8
 17828  0154DC  2AE3               	incf	plusw1,f,c
 17829  0154DE  E30E               	bnc	u5190
 17830  0154E0  0EF9               	movlw	-7
 17831  0154E2  2AE3               	incf	plusw1,f,c
 17832  0154E4  E30B               	bnc	u5190
 17833  0154E6  0EFA               	movlw	-6
 17834  0154E8  2AE3               	incf	plusw1,f,c
 17835  0154EA  E308               	bnc	u5190
 17836  0154EC  0EFB               	movlw	-5
 17837  0154EE  2AE3               	incf	plusw1,f,c
 17838  0154F0  E305               	bnc	u5190
 17839  0154F2  0EFC               	movlw	-4
 17840  0154F4  2AE3               	incf	plusw1,f,c
 17841  0154F6  E302               	bnc	u5190
 17842  0154F8  0EFD               	movlw	-3
 17843  0154FA  2AE3               	incf	plusw1,f,c
 17844  0154FC                     u5190:
 17845                           
 17846                           ;stkvar	_sign @ sp[(-2)+0]
 17847  0154FC  0EFE               	movlw	-2
 17848  0154FE  6AE3               	clrf	plusw1,c
 17849  015500  2AE3               	incf	plusw1,f,c
 17850  015502                     l6326:
 17851                           
 17852                           ;stkvar	_divisor @ sp[(-2)+-16]
 17853  015502  0EF5               	movlw	-11
 17854  015504  AEE3               	btfss	plusw1,7,c
 17855  015506  D025               	goto	u5210
 17856                           
 17857                           ;stkvar	_divisor @ sp[(-2)+-16]
 17858                           ;stkvar	_divisor @ sp[(-2)+-16]
 17859  015508  0EEE               	movlw	-18
 17860  01550A  6CE3               	negf	plusw1,c
 17861  01550C  0EEF               	movlw	-17
 17862  01550E  1EE3               	comf	plusw1,f,c
 17863  015510  0EF0               	movlw	-16
 17864  015512  1EE3               	comf	plusw1,f,c
 17865  015514  0EF1               	movlw	-15
 17866  015516  1EE3               	comf	plusw1,f,c
 17867  015518  0EF2               	movlw	-14
 17868  01551A  1EE3               	comf	plusw1,f,c
 17869  01551C  0EF3               	movlw	-13
 17870  01551E  1EE3               	comf	plusw1,f,c
 17871  015520  0EF4               	movlw	-12
 17872  015522  1EE3               	comf	plusw1,f,c
 17873  015524  0EF5               	movlw	-11
 17874  015526  1EE3               	comf	plusw1,f,c
 17875  015528  E314               	bnc	u5210
 17876  01552A  0EEF               	movlw	-17
 17877  01552C  2AE3               	incf	plusw1,f,c
 17878  01552E  E311               	bnc	u5210
 17879  015530  0EF0               	movlw	-16
 17880  015532  2AE3               	incf	plusw1,f,c
 17881  015534  E30E               	bnc	u5210
 17882  015536  0EF1               	movlw	-15
 17883  015538  2AE3               	incf	plusw1,f,c
 17884  01553A  E30B               	bnc	u5210
 17885  01553C  0EF2               	movlw	-14
 17886  01553E  2AE3               	incf	plusw1,f,c
 17887  015540  E308               	bnc	u5210
 17888  015542  0EF3               	movlw	-13
 17889  015544  2AE3               	incf	plusw1,f,c
 17890  015546  E305               	bnc	u5210
 17891  015548  0EF4               	movlw	-12
 17892  01554A  2AE3               	incf	plusw1,f,c
 17893  01554C  E302               	bnc	u5210
 17894  01554E  0EF5               	movlw	-11
 17895  015550  2AE3               	incf	plusw1,f,c
 17896  015552                     u5210:
 17897                           
 17898                           ;stkvar	_divisor @ sp[(-2)+-16]
 17899  015552  0EEE               	movlw	-18
 17900  015554  50E3               	movf	plusw1,w,c
 17901  015556  E116               	bnz	u5220
 17902  015558  0EEF               	movlw	-17
 17903  01555A  50E3               	movf	plusw1,w,c
 17904  01555C  E113               	bnz	u5220
 17905  01555E  0EF0               	movlw	-16
 17906  015560  50E3               	movf	plusw1,w,c
 17907  015562  E110               	bnz	u5220
 17908  015564  0EF1               	movlw	-15
 17909  015566  50E3               	movf	plusw1,w,c
 17910  015568  E10D               	bnz	u5220
 17911  01556A  0EF2               	movlw	-14
 17912  01556C  50E3               	movf	plusw1,w,c
 17913  01556E  E10A               	bnz	u5220
 17914  015570  0EF3               	movlw	-13
 17915  015572  50E3               	movf	plusw1,w,c
 17916  015574  E107               	bnz	u5220
 17917  015576  0EF4               	movlw	-12
 17918  015578  50E3               	movf	plusw1,w,c
 17919  01557A  E104               	bnz	u5220
 17920  01557C  0EF5               	movlw	-11
 17921  01557E  50E3               	movf	plusw1,w,c
 17922  015580  B4D8               	btfsc	status,2,c
 17923  015582  D075               	goto	u5250
 17924  015584                     u5220:
 17925                           
 17926                           ;stkvar	_counter @ sp[(-2)+1]
 17927  015584  0EFF               	movlw	-1
 17928  015586  6AE3               	clrf	plusw1,c
 17929  015588  D012               	goto	L16
 17930  01558A                     l6334:
 17931                           
 17932                           ;stkvar	_divisor @ sp[(-2)+-16]
 17933  01558A  90D8               	bcf	status,0,c
 17934  01558C  0EEE               	movlw	-18
 17935  01558E  36E3               	rlcf	plusw1,f,c
 17936  015590  0EEF               	movlw	-17
 17937  015592  36E3               	rlcf	plusw1,f,c
 17938  015594  0EF0               	movlw	-16
 17939  015596  36E3               	rlcf	plusw1,f,c
 17940  015598  0EF1               	movlw	-15
 17941  01559A  36E3               	rlcf	plusw1,f,c
 17942  01559C  0EF2               	movlw	-14
 17943  01559E  36E3               	rlcf	plusw1,f,c
 17944  0155A0  0EF3               	movlw	-13
 17945  0155A2  36E3               	rlcf	plusw1,f,c
 17946  0155A4  0EF4               	movlw	-12
 17947  0155A6  36E3               	rlcf	plusw1,f,c
 17948  0155A8  0EF5               	movlw	-11
 17949  0155AA  36E3               	rlcf	plusw1,f,c
 17950                           
 17951                           ;stkvar	_counter @ sp[(-2)+1]
 17952  0155AC  0EFF               	movlw	-1
 17953  0155AE                     L16:
 17954  0155AE  2AE3               	incf	plusw1,f,c
 17955                           
 17956                           ;stkvar	_divisor @ sp[(-2)+-16]
 17957  0155B0  0EF5               	movlw	-11
 17958  0155B2  AEE3               	btfss	plusw1,7,c
 17959  0155B4  D7EA               	goto	l6334
 17960  0155B6                     u5230:
 17961                           
 17962                           ;stkvar	_divisor @ sp[(-2)+-16]
 17963                           ;stkvar	_dividend @ sp[(-2)+-8]
 17964  0155B6  50E1               	movf	fsr1l,w,c
 17965  0155B8  0FF6               	addlw	-10
 17966  0155BA  6ED9               	movwf	fsr2l,c
 17967  0155BC  50E2               	movf	fsr1h,w,c
 17968  0155BE  6EDA               	movwf	fsr2h,c
 17969  0155C0  0EFF               	movlw	255
 17970  0155C2  22DA               	addwfc	fsr2h,f,c
 17971  0155C4  0EEE               	movlw	-18
 17972  0155C6  50E3               	movf	plusw1,w,c
 17973  0155C8  5CDE               	subwf	postinc2,w,c
 17974  0155CA  0EEF               	movlw	-17
 17975  0155CC  50E3               	movf	plusw1,w,c
 17976  0155CE  58DE               	subwfb	postinc2,w,c
 17977  0155D0  0EF0               	movlw	-16
 17978  0155D2  50E3               	movf	plusw1,w,c
 17979  0155D4  58DE               	subwfb	postinc2,w,c
 17980  0155D6  0EF1               	movlw	-15
 17981  0155D8  50E3               	movf	plusw1,w,c
 17982  0155DA  58DE               	subwfb	postinc2,w,c
 17983  0155DC  0EF2               	movlw	-14
 17984  0155DE  50E3               	movf	plusw1,w,c
 17985  0155E0  58DE               	subwfb	postinc2,w,c
 17986  0155E2  0EF3               	movlw	-13
 17987  0155E4  50E3               	movf	plusw1,w,c
 17988  0155E6  58DE               	subwfb	postinc2,w,c
 17989  0155E8  0EF4               	movlw	-12
 17990  0155EA  50E3               	movf	plusw1,w,c
 17991  0155EC  58DE               	subwfb	postinc2,w,c
 17992  0155EE  0EF5               	movlw	-11
 17993  0155F0  50E3               	movf	plusw1,w,c
 17994  0155F2  58DE               	subwfb	postinc2,w,c
 17995  0155F4  A0D8               	btfss	status,0,c
 17996  0155F6  D01F               	goto	l6342
 17997                           
 17998                           ;stkvar	_divisor @ sp[(-2)+-16]
 17999                           ;stkvar	_dividend @ sp[(-2)+-8]
 18000  0155F8  50E1               	movf	fsr1l,w,c
 18001  0155FA  0FF6               	addlw	-10
 18002  0155FC  6ED9               	movwf	fsr2l,c
 18003  0155FE  50E2               	movf	fsr1h,w,c
 18004  015600  6EDA               	movwf	fsr2h,c
 18005  015602  0EFF               	movlw	255
 18006  015604  22DA               	addwfc	fsr2h,f,c
 18007  015606  0EEE               	movlw	-18
 18008  015608  50E3               	movf	plusw1,w,c
 18009  01560A  5EDE               	subwf	postinc2,f,c
 18010  01560C  0EEF               	movlw	-17
 18011  01560E  50E3               	movf	plusw1,w,c
 18012  015610  5ADE               	subwfb	postinc2,f,c
 18013  015612  0EF0               	movlw	-16
 18014  015614  50E3               	movf	plusw1,w,c
 18015  015616  5ADE               	subwfb	postinc2,f,c
 18016  015618  0EF1               	movlw	-15
 18017  01561A  50E3               	movf	plusw1,w,c
 18018  01561C  5ADE               	subwfb	postinc2,f,c
 18019  01561E  0EF2               	movlw	-14
 18020  015620  50E3               	movf	plusw1,w,c
 18021  015622  5ADE               	subwfb	postinc2,f,c
 18022  015624  0EF3               	movlw	-13
 18023  015626  50E3               	movf	plusw1,w,c
 18024  015628  5ADE               	subwfb	postinc2,f,c
 18025  01562A  0EF4               	movlw	-12
 18026  01562C  50E3               	movf	plusw1,w,c
 18027  01562E  5ADE               	subwfb	postinc2,f,c
 18028  015630  0EF5               	movlw	-11
 18029  015632  50E3               	movf	plusw1,w,c
 18030  015634  5ADE               	subwfb	postinc2,f,c
 18031  015636                     l6342:
 18032                           
 18033                           ;stkvar	_divisor @ sp[(-2)+-16]
 18034  015636  90D8               	bcf	status,0,c
 18035  015638  0EF5               	movlw	-11
 18036  01563A  32E3               	rrcf	plusw1,f,c
 18037  01563C  0EF4               	movlw	-12
 18038  01563E  32E3               	rrcf	plusw1,f,c
 18039  015640  0EF3               	movlw	-13
 18040  015642  32E3               	rrcf	plusw1,f,c
 18041  015644  0EF2               	movlw	-14
 18042  015646  32E3               	rrcf	plusw1,f,c
 18043  015648  0EF1               	movlw	-15
 18044  01564A  32E3               	rrcf	plusw1,f,c
 18045  01564C  0EF0               	movlw	-16
 18046  01564E  32E3               	rrcf	plusw1,f,c
 18047  015650  0EEF               	movlw	-17
 18048  015652  32E3               	rrcf	plusw1,f,c
 18049  015654  0EEE               	movlw	-18
 18050  015656  32E3               	rrcf	plusw1,f,c
 18051                           
 18052                           ;stkvar	_counter @ sp[(-2)+1]
 18053  015658  0EFF               	movlw	-1
 18054  01565A  50E3               	movf	plusw1,w,c
 18055  01565C  6E35               	movwf	btemp^0,c
 18056  01565E  0E01               	movlw	1
 18057  015660  5E35               	subwf	btemp^0,f,c
 18058  015662  0EFF               	movlw	-1
 18059  015664  0060  F0D7  FFE3   	movff	btemp,plusw1
 18060  01566A  A4D8               	btfss	status,2,c
 18061  01566C  D7A4               	goto	u5230
 18062  01566E                     u5250:
 18063                           
 18064                           ;stkvar	_sign @ sp[(-2)+0]
 18065  01566E  0EFE               	movlw	-2
 18066  015670  50E3               	movf	plusw1,w,c
 18067  015672  B4D8               	btfsc	status,2,c
 18068  015674  D025               	goto	u5270
 18069                           
 18070                           ;stkvar	_dividend @ sp[(-2)+-8]
 18071                           ;stkvar	_dividend @ sp[(-2)+-8]
 18072  015676  0EF6               	movlw	-10
 18073  015678  6CE3               	negf	plusw1,c
 18074  01567A  0EF7               	movlw	-9
 18075  01567C  1EE3               	comf	plusw1,f,c
 18076  01567E  0EF8               	movlw	-8
 18077  015680  1EE3               	comf	plusw1,f,c
 18078  015682  0EF9               	movlw	-7
 18079  015684  1EE3               	comf	plusw1,f,c
 18080  015686  0EFA               	movlw	-6
 18081  015688  1EE3               	comf	plusw1,f,c
 18082  01568A  0EFB               	movlw	-5
 18083  01568C  1EE3               	comf	plusw1,f,c
 18084  01568E  0EFC               	movlw	-4
 18085  015690  1EE3               	comf	plusw1,f,c
 18086  015692  0EFD               	movlw	-3
 18087  015694  1EE3               	comf	plusw1,f,c
 18088  015696  E314               	bnc	u5270
 18089  015698  0EF7               	movlw	-9
 18090  01569A  2AE3               	incf	plusw1,f,c
 18091  01569C  E311               	bnc	u5270
 18092  01569E  0EF8               	movlw	-8
 18093  0156A0  2AE3               	incf	plusw1,f,c
 18094  0156A2  E30E               	bnc	u5270
 18095  0156A4  0EF9               	movlw	-7
 18096  0156A6  2AE3               	incf	plusw1,f,c
 18097  0156A8  E30B               	bnc	u5270
 18098  0156AA  0EFA               	movlw	-6
 18099  0156AC  2AE3               	incf	plusw1,f,c
 18100  0156AE  E308               	bnc	u5270
 18101  0156B0  0EFB               	movlw	-5
 18102  0156B2  2AE3               	incf	plusw1,f,c
 18103  0156B4  E305               	bnc	u5270
 18104  0156B6  0EFC               	movlw	-4
 18105  0156B8  2AE3               	incf	plusw1,f,c
 18106  0156BA  E302               	bnc	u5270
 18107  0156BC  0EFD               	movlw	-3
 18108  0156BE  2AE3               	incf	plusw1,f,c
 18109  0156C0                     u5270:
 18110                           
 18111                           ;stkvar	_dividend @ sp[(-2)+-8]
 18112  0156C0  0EF6               	movlw	246
 18113  0156C2  24E1               	addwf	fsr1l,w,c
 18114  0156C4  6ED9               	movwf	fsr2l,c
 18115  0156C6  0EFF               	movlw	255
 18116  0156C8  20E2               	addwfc	fsr1h,w,c
 18117  0156CA  6EDA               	movwf	fsr2h,c
 18118                           
 18119                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18120  0156CC  0E08               	movlw	8
 18121  0156CE  6E35               	movwf	btemp^0,c
 18122  0156D0  0EF6               	movlw	-10
 18123  0156D2                     us528999:
 18124  0156D2  006F FF7B FFE3     	movff	postinc2,plusw1
 18125  0156D8  28E8               	incf	wreg,w,c
 18126  0156DA  2E35               	decfsz	btemp^0,f,c
 18127  0156DC  D7FA               	bra	us528999
 18128                           
 18129                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18130  0156DE  52E5               	movf	postdec1,f,c
 18131  0156E0  52E5               	movf	postdec1,f,c
 18132  0156E2  0012               	return		;funcret
 18133  0156E4                     __end_of___aomod:
 18134                           	opt callstack 0
 18135                           
 18136 ;; *************** function ___aodiv *****************
 18137 ;; Defined at:
 18138 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;  dividend        8  [STACK] long long 
 18141 ;;  divisor         8  [STACK] long long 
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  quotient        8  [STACK] long long 
 18144 ;;  sign            1  [STACK] unsigned char 
 18145 ;;  counter         1  [STACK] unsigned char 
 18146 ;; Return value:  Size  Location     Type
 18147 ;;                  8  [STACK] long long 
 18148 ;; Registers used:
 18149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18150 ;; Tracked objects:
 18151 ;;		On entry : 0/1
 18152 ;;		On exit  : 0/0
 18153 ;;		Unchanged: 0/0
 18154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18159 ;;Total ram usage:        0 bytes
 18160 ;; Hardware stack levels used:    1
 18161 ;; Hardware stack levels required when called:    6
 18162 ;; This function calls:
 18163 ;;		Nothing
 18164 ;; This function is called by:
 18165 ;;		_dtoa
 18166 ;; This function uses a reentrant model
 18167 ;;
 18168                           
 18169                           	psect	text58
 18170  014D52                     __ptext58:
 18171                           	opt callstack 0
 18172  014D52                     ___aodiv:
 18173                           	opt callstack 0
 18174                           
 18175                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18176  014D52  0E0A               	movlw	10
 18177  014D54  26E1               	addwf	fsr1l,f,c
 18178  014D56  0E00               	movlw	0
 18179  014D58  22E2               	addwfc	fsr1h,f,c
 18180                           
 18181                           ;stkvar	_sign @ sp[(-10)+8]
 18182                           
 18183                           ;incstack = 0
 18184  014D5A  0EFE               	movlw	-2
 18185  014D5C  6AE3               	clrf	plusw1,c
 18186                           
 18187                           ;stkvar	_divisor @ sp[(-10)+-16]
 18188  014D5E  0EED               	movlw	-19
 18189  014D60  AEE3               	btfss	plusw1,7,c
 18190  014D62  D028               	goto	l6282
 18191                           
 18192                           ;stkvar	_divisor @ sp[(-10)+-16]
 18193                           ;stkvar	_divisor @ sp[(-10)+-16]
 18194  014D64  0EE6               	movlw	-26
 18195  014D66  6CE3               	negf	plusw1,c
 18196  014D68  0EE7               	movlw	-25
 18197  014D6A  1EE3               	comf	plusw1,f,c
 18198  014D6C  0EE8               	movlw	-24
 18199  014D6E  1EE3               	comf	plusw1,f,c
 18200  014D70  0EE9               	movlw	-23
 18201  014D72  1EE3               	comf	plusw1,f,c
 18202  014D74  0EEA               	movlw	-22
 18203  014D76  1EE3               	comf	plusw1,f,c
 18204  014D78  0EEB               	movlw	-21
 18205  014D7A  1EE3               	comf	plusw1,f,c
 18206  014D7C  0EEC               	movlw	-20
 18207  014D7E  1EE3               	comf	plusw1,f,c
 18208  014D80  0EED               	movlw	-19
 18209  014D82  1EE3               	comf	plusw1,f,c
 18210  014D84  E314               	bnc	u5070
 18211  014D86  0EE7               	movlw	-25
 18212  014D88  2AE3               	incf	plusw1,f,c
 18213  014D8A  E311               	bnc	u5070
 18214  014D8C  0EE8               	movlw	-24
 18215  014D8E  2AE3               	incf	plusw1,f,c
 18216  014D90  E30E               	bnc	u5070
 18217  014D92  0EE9               	movlw	-23
 18218  014D94  2AE3               	incf	plusw1,f,c
 18219  014D96  E30B               	bnc	u5070
 18220  014D98  0EEA               	movlw	-22
 18221  014D9A  2AE3               	incf	plusw1,f,c
 18222  014D9C  E308               	bnc	u5070
 18223  014D9E  0EEB               	movlw	-21
 18224  014DA0  2AE3               	incf	plusw1,f,c
 18225  014DA2  E305               	bnc	u5070
 18226  014DA4  0EEC               	movlw	-20
 18227  014DA6  2AE3               	incf	plusw1,f,c
 18228  014DA8  E302               	bnc	u5070
 18229  014DAA  0EED               	movlw	-19
 18230  014DAC  2AE3               	incf	plusw1,f,c
 18231  014DAE                     u5070:
 18232                           
 18233                           ;stkvar	_sign @ sp[(-10)+8]
 18234  014DAE  0EFE               	movlw	-2
 18235  014DB0  6AE3               	clrf	plusw1,c
 18236  014DB2  2AE3               	incf	plusw1,f,c
 18237  014DB4                     l6282:
 18238                           
 18239                           ;stkvar	_dividend @ sp[(-10)+-8]
 18240  014DB4  0EF5               	movlw	-11
 18241  014DB6  AEE3               	btfss	plusw1,7,c
 18242  014DB8  D027               	goto	l6288
 18243                           
 18244                           ;stkvar	_dividend @ sp[(-10)+-8]
 18245                           ;stkvar	_dividend @ sp[(-10)+-8]
 18246  014DBA  0EEE               	movlw	-18
 18247  014DBC  6CE3               	negf	plusw1,c
 18248  014DBE  0EEF               	movlw	-17
 18249  014DC0  1EE3               	comf	plusw1,f,c
 18250  014DC2  0EF0               	movlw	-16
 18251  014DC4  1EE3               	comf	plusw1,f,c
 18252  014DC6  0EF1               	movlw	-15
 18253  014DC8  1EE3               	comf	plusw1,f,c
 18254  014DCA  0EF2               	movlw	-14
 18255  014DCC  1EE3               	comf	plusw1,f,c
 18256  014DCE  0EF3               	movlw	-13
 18257  014DD0  1EE3               	comf	plusw1,f,c
 18258  014DD2  0EF4               	movlw	-12
 18259  014DD4  1EE3               	comf	plusw1,f,c
 18260  014DD6  0EF5               	movlw	-11
 18261  014DD8  1EE3               	comf	plusw1,f,c
 18262  014DDA  E314               	bnc	u5090
 18263  014DDC  0EEF               	movlw	-17
 18264  014DDE  2AE3               	incf	plusw1,f,c
 18265  014DE0  E311               	bnc	u5090
 18266  014DE2  0EF0               	movlw	-16
 18267  014DE4  2AE3               	incf	plusw1,f,c
 18268  014DE6  E30E               	bnc	u5090
 18269  014DE8  0EF1               	movlw	-15
 18270  014DEA  2AE3               	incf	plusw1,f,c
 18271  014DEC  E30B               	bnc	u5090
 18272  014DEE  0EF2               	movlw	-14
 18273  014DF0  2AE3               	incf	plusw1,f,c
 18274  014DF2  E308               	bnc	u5090
 18275  014DF4  0EF3               	movlw	-13
 18276  014DF6  2AE3               	incf	plusw1,f,c
 18277  014DF8  E305               	bnc	u5090
 18278  014DFA  0EF4               	movlw	-12
 18279  014DFC  2AE3               	incf	plusw1,f,c
 18280  014DFE  E302               	bnc	u5090
 18281  014E00  0EF5               	movlw	-11
 18282  014E02  2AE3               	incf	plusw1,f,c
 18283  014E04                     u5090:
 18284                           
 18285                           ;stkvar	_sign @ sp[(-10)+8]
 18286  014E04  0EFE               	movlw	-2
 18287  014E06  70E3               	btg	plusw1,0,c
 18288  014E08                     l6288:
 18289                           
 18290                           ;stkvar	_quotient @ sp[(-10)+0]
 18291  014E08  0E07               	movlw	7
 18292  014E0A  6E35               	movwf	btemp^0,c
 18293  014E0C  0EF6               	movlw	-10
 18294  014E0E                     u5101:
 18295  014E0E  6AE3               	clrf	plusw1,c
 18296  014E10  2AE8               	incf	wreg,f,c
 18297  014E12  0635               	decf	btemp^0,f,c
 18298  014E14  E2FC               	bc	u5101
 18299                           
 18300                           ;stkvar	_divisor @ sp[(-10)+-16]
 18301  014E16  0EE6               	movlw	-26
 18302  014E18  50E3               	movf	plusw1,w,c
 18303  014E1A  E116               	bnz	u5110
 18304  014E1C  0EE7               	movlw	-25
 18305  014E1E  50E3               	movf	plusw1,w,c
 18306  014E20  E113               	bnz	u5110
 18307  014E22  0EE8               	movlw	-24
 18308  014E24  50E3               	movf	plusw1,w,c
 18309  014E26  E110               	bnz	u5110
 18310  014E28  0EE9               	movlw	-23
 18311  014E2A  50E3               	movf	plusw1,w,c
 18312  014E2C  E10D               	bnz	u5110
 18313  014E2E  0EEA               	movlw	-22
 18314  014E30  50E3               	movf	plusw1,w,c
 18315  014E32  E10A               	bnz	u5110
 18316  014E34  0EEB               	movlw	-21
 18317  014E36  50E3               	movf	plusw1,w,c
 18318  014E38  E107               	bnz	u5110
 18319  014E3A  0EEC               	movlw	-20
 18320  014E3C  50E3               	movf	plusw1,w,c
 18321  014E3E  E104               	bnz	u5110
 18322  014E40  0EED               	movlw	-19
 18323  014E42  50E3               	movf	plusw1,w,c
 18324  014E44  B4D8               	btfsc	status,2,c
 18325  014E46  D088               	goto	u5140
 18326  014E48                     u5110:
 18327                           
 18328                           ;stkvar	_counter @ sp[(-10)+9]
 18329  014E48  0EFF               	movlw	-1
 18330  014E4A  6AE3               	clrf	plusw1,c
 18331  014E4C  D012               	goto	L17
 18332  014E4E                     l6294:
 18333                           
 18334                           ;stkvar	_divisor @ sp[(-10)+-16]
 18335  014E4E  90D8               	bcf	status,0,c
 18336  014E50  0EE6               	movlw	-26
 18337  014E52  36E3               	rlcf	plusw1,f,c
 18338  014E54  0EE7               	movlw	-25
 18339  014E56  36E3               	rlcf	plusw1,f,c
 18340  014E58  0EE8               	movlw	-24
 18341  014E5A  36E3               	rlcf	plusw1,f,c
 18342  014E5C  0EE9               	movlw	-23
 18343  014E5E  36E3               	rlcf	plusw1,f,c
 18344  014E60  0EEA               	movlw	-22
 18345  014E62  36E3               	rlcf	plusw1,f,c
 18346  014E64  0EEB               	movlw	-21
 18347  014E66  36E3               	rlcf	plusw1,f,c
 18348  014E68  0EEC               	movlw	-20
 18349  014E6A  36E3               	rlcf	plusw1,f,c
 18350  014E6C  0EED               	movlw	-19
 18351  014E6E  36E3               	rlcf	plusw1,f,c
 18352                           
 18353                           ;stkvar	_counter @ sp[(-10)+9]
 18354  014E70  0EFF               	movlw	-1
 18355  014E72                     L17:
 18356  014E72  2AE3               	incf	plusw1,f,c
 18357                           
 18358                           ;stkvar	_divisor @ sp[(-10)+-16]
 18359  014E74  0EED               	movlw	-19
 18360  014E76  AEE3               	btfss	plusw1,7,c
 18361  014E78  D7EA               	goto	l6294
 18362  014E7A                     u5120:
 18363                           
 18364                           ;stkvar	_quotient @ sp[(-10)+0]
 18365  014E7A  90D8               	bcf	status,0,c
 18366  014E7C  0EF6               	movlw	-10
 18367  014E7E  36E3               	rlcf	plusw1,f,c
 18368  014E80  0EF7               	movlw	-9
 18369  014E82  36E3               	rlcf	plusw1,f,c
 18370  014E84  0EF8               	movlw	-8
 18371  014E86  36E3               	rlcf	plusw1,f,c
 18372  014E88  0EF9               	movlw	-7
 18373  014E8A  36E3               	rlcf	plusw1,f,c
 18374  014E8C  0EFA               	movlw	-6
 18375  014E8E  36E3               	rlcf	plusw1,f,c
 18376  014E90  0EFB               	movlw	-5
 18377  014E92  36E3               	rlcf	plusw1,f,c
 18378  014E94  0EFC               	movlw	-4
 18379  014E96  36E3               	rlcf	plusw1,f,c
 18380  014E98  0EFD               	movlw	-3
 18381  014E9A  36E3               	rlcf	plusw1,f,c
 18382                           
 18383                           ;stkvar	_divisor @ sp[(-10)+-16]
 18384                           ;stkvar	_dividend @ sp[(-10)+-8]
 18385  014E9C  50E1               	movf	fsr1l,w,c
 18386  014E9E  0FEE               	addlw	-18
 18387  014EA0  6ED9               	movwf	fsr2l,c
 18388  014EA2  50E2               	movf	fsr1h,w,c
 18389  014EA4  6EDA               	movwf	fsr2h,c
 18390  014EA6  0EFF               	movlw	255
 18391  014EA8  22DA               	addwfc	fsr2h,f,c
 18392  014EAA  0EE6               	movlw	-26
 18393  014EAC  50E3               	movf	plusw1,w,c
 18394  014EAE  5CDE               	subwf	postinc2,w,c
 18395  014EB0  0EE7               	movlw	-25
 18396  014EB2  50E3               	movf	plusw1,w,c
 18397  014EB4  58DE               	subwfb	postinc2,w,c
 18398  014EB6  0EE8               	movlw	-24
 18399  014EB8  50E3               	movf	plusw1,w,c
 18400  014EBA  58DE               	subwfb	postinc2,w,c
 18401  014EBC  0EE9               	movlw	-23
 18402  014EBE  50E3               	movf	plusw1,w,c
 18403  014EC0  58DE               	subwfb	postinc2,w,c
 18404  014EC2  0EEA               	movlw	-22
 18405  014EC4  50E3               	movf	plusw1,w,c
 18406  014EC6  58DE               	subwfb	postinc2,w,c
 18407  014EC8  0EEB               	movlw	-21
 18408  014ECA  50E3               	movf	plusw1,w,c
 18409  014ECC  58DE               	subwfb	postinc2,w,c
 18410  014ECE  0EEC               	movlw	-20
 18411  014ED0  50E3               	movf	plusw1,w,c
 18412  014ED2  58DE               	subwfb	postinc2,w,c
 18413  014ED4  0EED               	movlw	-19
 18414  014ED6  50E3               	movf	plusw1,w,c
 18415  014ED8  58DE               	subwfb	postinc2,w,c
 18416  014EDA  A0D8               	btfss	status,0,c
 18417  014EDC  D021               	goto	l6306
 18418                           
 18419                           ;stkvar	_divisor @ sp[(-10)+-16]
 18420                           ;stkvar	_dividend @ sp[(-10)+-8]
 18421  014EDE  50E1               	movf	fsr1l,w,c
 18422  014EE0  0FEE               	addlw	-18
 18423  014EE2  6ED9               	movwf	fsr2l,c
 18424  014EE4  50E2               	movf	fsr1h,w,c
 18425  014EE6  6EDA               	movwf	fsr2h,c
 18426  014EE8  0EFF               	movlw	255
 18427  014EEA  22DA               	addwfc	fsr2h,f,c
 18428  014EEC  0EE6               	movlw	-26
 18429  014EEE  50E3               	movf	plusw1,w,c
 18430  014EF0  5EDE               	subwf	postinc2,f,c
 18431  014EF2  0EE7               	movlw	-25
 18432  014EF4  50E3               	movf	plusw1,w,c
 18433  014EF6  5ADE               	subwfb	postinc2,f,c
 18434  014EF8  0EE8               	movlw	-24
 18435  014EFA  50E3               	movf	plusw1,w,c
 18436  014EFC  5ADE               	subwfb	postinc2,f,c
 18437  014EFE  0EE9               	movlw	-23
 18438  014F00  50E3               	movf	plusw1,w,c
 18439  014F02  5ADE               	subwfb	postinc2,f,c
 18440  014F04  0EEA               	movlw	-22
 18441  014F06  50E3               	movf	plusw1,w,c
 18442  014F08  5ADE               	subwfb	postinc2,f,c
 18443  014F0A  0EEB               	movlw	-21
 18444  014F0C  50E3               	movf	plusw1,w,c
 18445  014F0E  5ADE               	subwfb	postinc2,f,c
 18446  014F10  0EEC               	movlw	-20
 18447  014F12  50E3               	movf	plusw1,w,c
 18448  014F14  5ADE               	subwfb	postinc2,f,c
 18449  014F16  0EED               	movlw	-19
 18450  014F18  50E3               	movf	plusw1,w,c
 18451  014F1A  5ADE               	subwfb	postinc2,f,c
 18452                           
 18453                           ;stkvar	_quotient @ sp[(-10)+0]
 18454  014F1C  0EF6               	movlw	-10
 18455  014F1E  80E3               	bsf	plusw1,0,c
 18456  014F20                     l6306:
 18457                           
 18458                           ;stkvar	_divisor @ sp[(-10)+-16]
 18459  014F20  90D8               	bcf	status,0,c
 18460  014F22  0EED               	movlw	-19
 18461  014F24  32E3               	rrcf	plusw1,f,c
 18462  014F26  0EEC               	movlw	-20
 18463  014F28  32E3               	rrcf	plusw1,f,c
 18464  014F2A  0EEB               	movlw	-21
 18465  014F2C  32E3               	rrcf	plusw1,f,c
 18466  014F2E  0EEA               	movlw	-22
 18467  014F30  32E3               	rrcf	plusw1,f,c
 18468  014F32  0EE9               	movlw	-23
 18469  014F34  32E3               	rrcf	plusw1,f,c
 18470  014F36  0EE8               	movlw	-24
 18471  014F38  32E3               	rrcf	plusw1,f,c
 18472  014F3A  0EE7               	movlw	-25
 18473  014F3C  32E3               	rrcf	plusw1,f,c
 18474  014F3E  0EE6               	movlw	-26
 18475  014F40  32E3               	rrcf	plusw1,f,c
 18476                           
 18477                           ;stkvar	_counter @ sp[(-10)+9]
 18478  014F42  0EFF               	movlw	-1
 18479  014F44  50E3               	movf	plusw1,w,c
 18480  014F46  6E35               	movwf	btemp^0,c
 18481  014F48  0E01               	movlw	1
 18482  014F4A  5E35               	subwf	btemp^0,f,c
 18483  014F4C  0EFF               	movlw	-1
 18484  014F4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18485  014F54  A4D8               	btfss	status,2,c
 18486  014F56  D791               	goto	u5120
 18487  014F58                     u5140:
 18488                           
 18489                           ;stkvar	_sign @ sp[(-10)+8]
 18490  014F58  0EFE               	movlw	-2
 18491  014F5A  50E3               	movf	plusw1,w,c
 18492  014F5C  B4D8               	btfsc	status,2,c
 18493  014F5E  D025               	goto	u5160
 18494                           
 18495                           ;stkvar	_quotient @ sp[(-10)+0]
 18496                           ;stkvar	_quotient @ sp[(-10)+0]
 18497  014F60  0EF6               	movlw	-10
 18498  014F62  6CE3               	negf	plusw1,c
 18499  014F64  0EF7               	movlw	-9
 18500  014F66  1EE3               	comf	plusw1,f,c
 18501  014F68  0EF8               	movlw	-8
 18502  014F6A  1EE3               	comf	plusw1,f,c
 18503  014F6C  0EF9               	movlw	-7
 18504  014F6E  1EE3               	comf	plusw1,f,c
 18505  014F70  0EFA               	movlw	-6
 18506  014F72  1EE3               	comf	plusw1,f,c
 18507  014F74  0EFB               	movlw	-5
 18508  014F76  1EE3               	comf	plusw1,f,c
 18509  014F78  0EFC               	movlw	-4
 18510  014F7A  1EE3               	comf	plusw1,f,c
 18511  014F7C  0EFD               	movlw	-3
 18512  014F7E  1EE3               	comf	plusw1,f,c
 18513  014F80  E314               	bnc	u5160
 18514  014F82  0EF7               	movlw	-9
 18515  014F84  2AE3               	incf	plusw1,f,c
 18516  014F86  E311               	bnc	u5160
 18517  014F88  0EF8               	movlw	-8
 18518  014F8A  2AE3               	incf	plusw1,f,c
 18519  014F8C  E30E               	bnc	u5160
 18520  014F8E  0EF9               	movlw	-7
 18521  014F90  2AE3               	incf	plusw1,f,c
 18522  014F92  E30B               	bnc	u5160
 18523  014F94  0EFA               	movlw	-6
 18524  014F96  2AE3               	incf	plusw1,f,c
 18525  014F98  E308               	bnc	u5160
 18526  014F9A  0EFB               	movlw	-5
 18527  014F9C  2AE3               	incf	plusw1,f,c
 18528  014F9E  E305               	bnc	u5160
 18529  014FA0  0EFC               	movlw	-4
 18530  014FA2  2AE3               	incf	plusw1,f,c
 18531  014FA4  E302               	bnc	u5160
 18532  014FA6  0EFD               	movlw	-3
 18533  014FA8  2AE3               	incf	plusw1,f,c
 18534  014FAA                     u5160:
 18535                           
 18536                           ;stkvar	_quotient @ sp[(-10)+0]
 18537  014FAA  0EF6               	movlw	246
 18538  014FAC  24E1               	addwf	fsr1l,w,c
 18539  014FAE  6ED9               	movwf	fsr2l,c
 18540  014FB0  0EFF               	movlw	255
 18541  014FB2  20E2               	addwfc	fsr1h,w,c
 18542  014FB4  6EDA               	movwf	fsr2h,c
 18543                           
 18544                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18545  014FB6  0E08               	movlw	8
 18546  014FB8  6E35               	movwf	btemp^0,c
 18547  014FBA  0EEE               	movlw	-18
 18548  014FBC                     us517999:
 18549  014FBC  006F FF7B FFE3     	movff	postinc2,plusw1
 18550  014FC2  28E8               	incf	wreg,w,c
 18551  014FC4  2E35               	decfsz	btemp^0,f,c
 18552  014FC6  D7FA               	bra	us517999
 18553                           
 18554                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18555  014FC8  0EF6               	movlw	246
 18556  014FCA  26E1               	addwf	fsr1l,f,c
 18557  014FCC  0EFF               	movlw	255
 18558  014FCE  22E2               	addwfc	fsr1h,f,c
 18559  014FD0  0012               	return		;funcret
 18560  014FD2                     __end_of___aodiv:
 18561                           	opt callstack 0
 18562                           
 18563 ;; *************** function _ctoa *****************
 18564 ;; Defined at:
 18565 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18566 ;; Parameters:    Size  Location     Type
 18567 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18568 ;;		 -> f(6), NULL(0), 
 18569 ;;  c               1  [STACK] unsigned char 
 18570 ;; Auto vars:     Size  Location     Type
 18571 ;;  w               2  [STACK] int 
 18572 ;;  l               2    0        int 
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  2  [STACK] int 
 18575 ;; Registers used:
 18576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/4
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18586 ;;Total ram usage:        0 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:   11
 18589 ;; This function calls:
 18590 ;;		_pad
 18591 ;; This function is called by:
 18592 ;;		_vfpfcnvrt
 18593 ;; This function uses a reentrant model
 18594 ;;
 18595                           
 18596                           	psect	text59
 18597  017200                     __ptext59:
 18598                           	opt callstack 0
 18599  017200                     _ctoa:
 18600                           	opt callstack 0
 18601                           
 18602                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18603  017200  52E6               	movf	postinc1,f,c
 18604  017202  52E6               	movf	postinc1,f,c
 18605                           
 18606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18607                           
 18608                           ;incstack = 0
 18609  017204  501E               	movf	_width^0,w,c
 18610  017206  101F               	iorwf	(_width+1)^0,w,c
 18611  017208  A4D8               	btfss	status,2,c
 18612  01720A  D009               	goto	l8922
 18613                           
 18614                           ;stkvar	_w @ sp[(-2)+0]
 18615  01720C  0EFE               	movlw	-2
 18616  01720E  0060  F07B  FFE3   	movff	_width,plusw1
 18617  017214  0EFF               	movlw	-1
 18618  017216  0060  F07F  FFE3   	movff	_width+1,plusw1
 18619  01721C  D016               	goto	l8924
 18620  01721E                     l8922:
 18621  01721E  0EFF               	movlw	255
 18622  017220  6E3F               	movwf	(btemp+10)^0,c
 18623  017222  0EFF               	movlw	255
 18624  017224  6E40               	movwf	(btemp+11)^0,c
 18625  017226  0060  F078  F03D   	movff	_width,btemp+8
 18626  01722C  0060  F07C  F03E   	movff	_width+1,btemp+9
 18627  017232  503F               	movf	(btemp+10)^0,w,c
 18628  017234  263D               	addwf	(btemp+8)^0,f,c
 18629  017236  5040               	movf	(btemp+11)^0,w,c
 18630  017238  223E               	addwfc	(btemp+9)^0,f,c
 18631                           
 18632                           ;stkvar	_w @ sp[(-2)+0]
 18633  01723A  0EFE               	movlw	-2
 18634  01723C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18635  017242  0EFF               	movlw	-1
 18636  017244  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18637  01724A                     l8924:
 18638                           
 18639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18640                           ;stkvar	_c @ sp[(-2)+-3]
 18641  01724A  0EFB               	movlw	-5
 18642  01724C  006F FF8C  F1A4    	movff	plusw1,_dbuf
 18643                           
 18644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18645  017252  0101               	movlb	1	; () banked
 18646  017254  6BA5               	clrf	(_dbuf+1)& (0+255),b
 18647                           
 18648                           ; BSR set to: 1
 18649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18650                           ;stkvar	_w @ sp[(-2)+0]
 18651  017256  0EFE               	movlw	-2
 18652  017258  006F FF8F FFE6     	movff	plusw1,postinc1
 18653  01725E  006F FF8F FFE6     	movff	plusw1,postinc1
 18654  017264  0EA4               	movlw	low _dbuf
 18655  017266  6EE6               	movwf	postinc1,c
 18656  017268  0E01               	movlw	high _dbuf
 18657  01726A  6EE6               	movwf	postinc1,c
 18658                           
 18659                           ;stkvar	_fp @ sp[(-6)+-2]
 18660  01726C  0EF8               	movlw	-8
 18661  01726E  006F FF8F FFE6     	movff	plusw1,postinc1
 18662  017274  006F FF8F FFE6     	movff	plusw1,postinc1
 18663  01727A  ECF2  F0B2         	call	_pad	;wreg free
 18664                           
 18665                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18666  01727E  0EFB               	movlw	251
 18667  017280  26E1               	addwf	fsr1l,f,c
 18668  017282  0EFF               	movlw	255
 18669  017284  22E2               	addwfc	fsr1h,f,c
 18670  017286  0012               	return		;funcret
 18671  017288                     __end_of_ctoa:
 18672                           	opt callstack 0
 18673                           
 18674 ;; *************** function _pad *****************
 18675 ;; Defined at:
 18676 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18679 ;;		 -> f(6), NULL(0), 
 18680 ;;  buf             2  [STACK] PTR unsigned char 
 18681 ;;		 -> dbuf(80), 
 18682 ;;  p               2  [STACK] int 
 18683 ;; Auto vars:     Size  Location     Type
 18684 ;;  w               2  [STACK] int 
 18685 ;;  i               2  [STACK] int 
 18686 ;; Return value:  Size  Location     Type
 18687 ;;                  2  [STACK] int 
 18688 ;; Registers used:
 18689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/1
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18699 ;;Total ram usage:        0 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; Hardware stack levels required when called:   10
 18702 ;; This function calls:
 18703 ;;		_fputc
 18704 ;;		_fputs
 18705 ;;		_strlen
 18706 ;; This function is called by:
 18707 ;;		_ctoa
 18708 ;;		_dtoa
 18709 ;;		_efgtoa
 18710 ;;		_xtoa
 18711 ;; This function uses a reentrant model
 18712 ;;
 18713                           
 18714                           	psect	text60
 18715  0165E4                     __ptext60:
 18716                           	opt callstack 0
 18717  0165E4                     _pad:
 18718                           	opt callstack 0
 18719                           
 18720                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18721  0165E4  52E6               	movf	postinc1,f,c
 18722  0165E6  52E6               	movf	postinc1,f,c
 18723  0165E8  52E6               	movf	postinc1,f,c
 18724  0165EA  52E6               	movf	postinc1,f,c
 18725                           
 18726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18727                           
 18728                           ;incstack = 0
 18729  0165EC  A022               	btfss	_flags^0,0,c
 18730  0165EE  D010               	goto	l8896
 18731                           
 18732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18733                           ;stkvar	_fp @ sp[(-4)+-2]
 18734  0165F0  0EFA               	movlw	-6
 18735  0165F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18736  0165F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18737                           
 18738                           ;stkvar	_buf @ sp[(-6)+-4]
 18739  0165FE  0EF6               	movlw	-10
 18740  016600  006F FF8F FFE6     	movff	plusw1,postinc1
 18741  016606  006F FF8F FFE6     	movff	plusw1,postinc1
 18742  01660C  ECD8  F0B7         	call	_fputs	;wreg free
 18743  016610                     l8896:
 18744                           
 18745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18746                           ;stkvar	_p @ sp[(-4)+-6]
 18747  016610  0EF7               	movlw	-9
 18748  016612  BEE3               	btfsc	plusw1,7,c
 18749  016614  D011               	goto	l8900
 18750                           
 18751                           ;stkvar	_p @ sp[(-4)+-6]
 18752                           ;stkvar	_w @ sp[(-4)+0]
 18753  016616  0EF6               	movlw	-10
 18754  016618  006F FF8C  F035    	movff	plusw1,btemp
 18755  01661E  0EFC               	movlw	-4
 18756  016620  0060  F0D7  FFE3   	movff	btemp,plusw1
 18757  016626  0EF7               	movlw	-9
 18758  016628  006F FF8C  F035    	movff	plusw1,btemp
 18759  01662E  0EFD               	movlw	-3
 18760  016630  0060  F0D7  FFE3   	movff	btemp,plusw1
 18761  016636  D004               	goto	l1730
 18762  016638                     l8900:
 18763                           
 18764                           ;stkvar	_w @ sp[(-4)+0]
 18765  016638  0EFC               	movlw	-4
 18766  01663A  6AE3               	clrf	plusw1,c
 18767  01663C  0EFD               	movlw	-3
 18768  01663E  6AE3               	clrf	plusw1,c
 18769  016640                     l1730:
 18770                           
 18771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18772                           ;stkvar	_i @ sp[(-4)+2]
 18773  016640  0EFE               	movlw	-2
 18774  016642  6AE3               	clrf	plusw1,c
 18775  016644  0EFF               	movlw	-1
 18776  016646  6AE3               	clrf	plusw1,c
 18777                           
 18778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18779  016648  D01E               	goto	l8906
 18780  01664A                     l8902:
 18781                           
 18782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18783                           ;stkvar	_fp @ sp[(-4)+-2]
 18784  01664A  0EFA               	movlw	-6
 18785  01664C  006F FF8F FFE6     	movff	plusw1,postinc1
 18786  016652  006F FF8F FFE6     	movff	plusw1,postinc1
 18787  016658  0E20               	movlw	32
 18788  01665A  6EE6               	movwf	postinc1,c
 18789  01665C  0E00               	movlw	0
 18790  01665E  6EE6               	movwf	postinc1,c
 18791  016660  ECD4  F0B1         	call	_fputc	;wreg free
 18792                           
 18793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18794                           ;stkvar	_i @ sp[(-4)+2]
 18795  016664  0EFE               	movlw	-2
 18796  016666  50E3               	movf	plusw1,w,c
 18797  016668  0F01               	addlw	1
 18798  01666A  6E35               	movwf	btemp^0,c
 18799  01666C  0EFE               	movlw	-2
 18800  01666E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18801  016674  6A35               	clrf	btemp^0,c
 18802  016676  0EFF               	movlw	-1
 18803  016678  50E3               	movf	plusw1,w,c
 18804  01667A  2035               	addwfc	btemp^0,w,c
 18805  01667C  6E35               	movwf	btemp^0,c
 18806  01667E  0EFF               	movlw	-1
 18807  016680  0060  F0D7  FFE3   	movff	btemp,plusw1
 18808  016686                     l8906:
 18809                           
 18810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18811                           ;stkvar	_w @ sp[(-4)+0]
 18812                           ;stkvar	_i @ sp[(-4)+2]
 18813  016686  50E1               	movf	fsr1l,w,c
 18814  016688  0FFE               	addlw	-2
 18815  01668A  6ED9               	movwf	fsr2l,c
 18816  01668C  50E2               	movf	fsr1h,w,c
 18817  01668E  6EDA               	movwf	fsr2h,c
 18818  016690  0EFF               	movlw	255
 18819  016692  22DA               	addwfc	fsr2h,f,c
 18820  016694  0EFC               	movlw	-4
 18821  016696  50E3               	movf	plusw1,w,c
 18822  016698  5CDE               	subwf	postinc2,w,c
 18823  01669A  50DE               	movf	postinc2,w,c
 18824  01669C  0A80               	xorlw	128
 18825  01669E  6E35               	movwf	btemp^0,c
 18826  0166A0  0EFD               	movlw	-3
 18827  0166A2  50E3               	movf	plusw1,w,c
 18828  0166A4  0A80               	xorlw	128
 18829  0166A6  5835               	subwfb	btemp^0,w,c
 18830  0166A8  A0D8               	btfss	status,0,c
 18831  0166AA  D7CF               	goto	l8902
 18832                           
 18833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18834  0166AC  B022               	btfsc	_flags^0,0,c
 18835  0166AE  D010               	goto	l8910
 18836                           
 18837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18838                           ;stkvar	_fp @ sp[(-4)+-2]
 18839  0166B0  0EFA               	movlw	-6
 18840  0166B2  006F FF8F FFE6     	movff	plusw1,postinc1
 18841  0166B8  006F FF8F FFE6     	movff	plusw1,postinc1
 18842                           
 18843                           ;stkvar	_buf @ sp[(-6)+-4]
 18844  0166BE  0EF6               	movlw	-10
 18845  0166C0  006F FF8F FFE6     	movff	plusw1,postinc1
 18846  0166C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18847  0166CC  ECD8  F0B7         	call	_fputs	;wreg free
 18848  0166D0                     l8910:
 18849                           
 18850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18851                           ;stkvar	_w @ sp[(-4)+0]
 18852                           ;stkvar	_buf @ sp[(-4)+-4]
 18853  0166D0  0EF8               	movlw	-8
 18854  0166D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18855  0166D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18856  0166DE  EC87  F0B7         	call	_strlen	;wreg free
 18857  0166E2  0EFC               	movlw	-4
 18858  0166E4  50E3               	movf	plusw1,w,c
 18859  0166E6  2635               	addwf	btemp^0,f,c
 18860  0166E8  0EFD               	movlw	-3
 18861  0166EA  50E3               	movf	plusw1,w,c
 18862  0166EC  2236               	addwfc	(btemp+1)^0,f,c
 18863                           
 18864                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18865  0166EE  0EF6               	movlw	246
 18866  0166F0  26E1               	addwf	fsr1l,f,c
 18867  0166F2  0EFF               	movlw	255
 18868  0166F4  22E2               	addwfc	fsr1h,f,c
 18869  0166F6  0012               	return		;funcret
 18870  0166F8                     __end_of_pad:
 18871                           	opt callstack 0
 18872                           
 18873 ;; *************** function _strlen *****************
 18874 ;; Defined at:
 18875 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18876 ;; Parameters:    Size  Location     Type
 18877 ;;  s               2  [STACK] PTR const unsigned char 
 18878 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18879 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18880 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18881 ;; Auto vars:     Size  Location     Type
 18882 ;;  a               2  [STACK] PTR const unsigned char 
 18883 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18884 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18885 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  2  [STACK] unsigned int 
 18888 ;; Registers used:
 18889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18899 ;;Total ram usage:        0 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:    6
 18902 ;; This function calls:
 18903 ;;		Nothing
 18904 ;; This function is called by:
 18905 ;;		_eaDogM_WriteString
 18906 ;;		_pad
 18907 ;;		_stoa
 18908 ;; This function uses a reentrant model
 18909 ;;
 18910                           
 18911                           	psect	text61
 18912  016F0E                     __ptext61:
 18913                           	opt callstack 0
 18914  016F0E                     _strlen:
 18915                           	opt callstack 0
 18916                           
 18917                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18918  016F0E  52E6               	movf	postinc1,f,c
 18919  016F10  52E6               	movf	postinc1,f,c
 18920                           
 18921                           ;stkvar	_s @ sp[(-2)+-2]
 18922                           
 18923                           ;incstack = 0
 18924  016F12  0EFC               	movlw	-4
 18925  016F14  006F FF8C  F03F    	movff	plusw1,btemp+10
 18926  016F1A  0EFD               	movlw	-3
 18927  016F1C  006F FF8C  F040    	movff	plusw1,btemp+11
 18928                           
 18929                           ;stkvar	_a @ sp[(-2)+0]
 18930  016F22  0EFF               	movlw	-1
 18931  016F24  0060  F103  FFE3   	movff	btemp+11,plusw1
 18932  016F2A  0EFE               	movlw	-2
 18933  016F2C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18934  016F32  D011               	goto	l5900
 18935  016F34                     l5898:
 18936                           
 18937                           ;stkvar	_s @ sp[(-2)+-2]
 18938  016F34  0EFC               	movlw	-4
 18939  016F36  50E3               	movf	plusw1,w,c
 18940  016F38  0F01               	addlw	1
 18941  016F3A  6E35               	movwf	btemp^0,c
 18942  016F3C  0EFC               	movlw	-4
 18943  016F3E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18944  016F44  6A35               	clrf	btemp^0,c
 18945  016F46  0EFD               	movlw	-3
 18946  016F48  50E3               	movf	plusw1,w,c
 18947  016F4A  2035               	addwfc	btemp^0,w,c
 18948  016F4C  6E35               	movwf	btemp^0,c
 18949  016F4E  0EFD               	movlw	-3
 18950  016F50  0060  F0D7  FFE3   	movff	btemp,plusw1
 18951  016F56                     l5900:
 18952                           
 18953                           ;stkvar	_s @ sp[(-2)+-2]
 18954  016F56  0EFC               	movlw	-4
 18955  016F58  006F FF8F FFF6     	movff	plusw1,tblptrl
 18956  016F5E  0EFD               	movlw	-3
 18957  016F60  006F FF8F FFF7     	movff	plusw1,tblptrh
 18958  016F66  0E00               	movlw	low (__mediumconst shr (0+16))
 18959  016F68  6EF8               	movwf	tblptru,c
 18960  016F6A  0E1F               	movlw	(high __ramtop+-1)
 18961  016F6C  64F7               	cpfsgt	tblptrh,c
 18962  016F6E  D003               	bra	u4237
 18963  016F70  0008               	tblrd		*
 18964  016F72  50F5               	movf	tablat,w,c
 18965  016F74  D007               	bra	u4230
 18966  016F76                     u4237:
 18967  016F76  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18968  016F7C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18969  016F82  50EF               	movf	indf0,w,c
 18970  016F84                     u4230:
 18971  016F84  0900               	iorlw	0
 18972  016F86  A4D8               	btfss	status,2,c
 18973  016F88  D7D5               	goto	l5898
 18974                           
 18975                           ;stkvar	_a @ sp[(-2)+0]
 18976                           ;stkvar	_s @ sp[(-2)+-2]
 18977  016F8A  0EFC               	movlw	-4
 18978  016F8C  006F FF8C  F035    	movff	plusw1,btemp
 18979  016F92  0EFD               	movlw	-3
 18980  016F94  006F FF8C  F036    	movff	plusw1,btemp+1
 18981  016F9A  0EFE               	movlw	-2
 18982  016F9C  50E3               	movf	plusw1,w,c
 18983  016F9E  5E35               	subwf	btemp^0,f,c
 18984  016FA0  0EFF               	movlw	-1
 18985  016FA2  50E3               	movf	plusw1,w,c
 18986  016FA4  5A36               	subwfb	(btemp+1)^0,f,c
 18987                           
 18988                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18989  016FA6  52E5               	movf	postdec1,f,c
 18990  016FA8  52E5               	movf	postdec1,f,c
 18991  016FAA  52E5               	movf	postdec1,f,c
 18992  016FAC  52E5               	movf	postdec1,f,c
 18993  016FAE  0012               	return		;funcret
 18994  016FB0                     __end_of_strlen:
 18995                           	opt callstack 0
 18996                           
 18997 ;; *************** function _fputs *****************
 18998 ;; Defined at:
 18999 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;  s               2  [STACK] PTR const unsigned char 
 19002 ;;		 -> dbuf(80), 
 19003 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19004 ;;		 -> f(6), NULL(0), 
 19005 ;; Auto vars:     Size  Location     Type
 19006 ;;  i               2  [STACK] int 
 19007 ;;  c               1  [STACK] unsigned char 
 19008 ;; Return value:  Size  Location     Type
 19009 ;;                  2  [STACK] int 
 19010 ;; Registers used:
 19011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19012 ;; Tracked objects:
 19013 ;;		On entry : 0/1
 19014 ;;		On exit  : 0/0
 19015 ;;		Unchanged: 0/0
 19016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19021 ;;Total ram usage:        0 bytes
 19022 ;; Hardware stack levels used:    1
 19023 ;; Hardware stack levels required when called:    9
 19024 ;; This function calls:
 19025 ;;		_fputc
 19026 ;; This function is called by:
 19027 ;;		_pad
 19028 ;; This function uses a reentrant model
 19029 ;;
 19030                           
 19031                           	psect	text62
 19032  016FB0                     __ptext62:
 19033                           	opt callstack 0
 19034  016FB0                     _fputs:
 19035                           	opt callstack 0
 19036                           
 19037                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19038  016FB0  52E6               	movf	postinc1,f,c
 19039  016FB2  52E6               	movf	postinc1,f,c
 19040  016FB4  52E6               	movf	postinc1,f,c
 19041                           
 19042                           ;stkvar	_i @ sp[(-3)+0]
 19043                           
 19044                           ;incstack = 0
 19045  016FB6  0EFD               	movlw	-3
 19046  016FB8  6AE3               	clrf	plusw1,c
 19047  016FBA  0EFE               	movlw	-2
 19048  016FBC  6AE3               	clrf	plusw1,c
 19049  016FBE  D01F               	goto	l8890
 19050  016FC0                     l8886:
 19051                           
 19052                           ;stkvar	_fp @ sp[(-3)+-4]
 19053  016FC0  0EF9               	movlw	-7
 19054  016FC2  006F FF8F FFE6     	movff	plusw1,postinc1
 19055  016FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 19056                           
 19057                           ;stkvar	_c @ sp[(-5)+2]
 19058  016FCE  0EFD               	movlw	-3
 19059  016FD0  50E3               	movf	plusw1,w,c
 19060  016FD2  6EE6               	movwf	postinc1,c
 19061  016FD4  0E00               	movlw	0
 19062  016FD6  6EE6               	movwf	postinc1,c
 19063  016FD8  ECD4  F0B1         	call	_fputc	;wreg free
 19064                           
 19065                           ;stkvar	_i @ sp[(-3)+0]
 19066  016FDC  0EFD               	movlw	-3
 19067  016FDE  50E3               	movf	plusw1,w,c
 19068  016FE0  0F01               	addlw	1
 19069  016FE2  6E35               	movwf	btemp^0,c
 19070  016FE4  0EFD               	movlw	-3
 19071  016FE6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19072  016FEC  6A35               	clrf	btemp^0,c
 19073  016FEE  0EFE               	movlw	-2
 19074  016FF0  50E3               	movf	plusw1,w,c
 19075  016FF2  2035               	addwfc	btemp^0,w,c
 19076  016FF4  6E35               	movwf	btemp^0,c
 19077  016FF6  0EFE               	movlw	-2
 19078  016FF8  0060  F0D7  FFE3   	movff	btemp,plusw1
 19079  016FFE                     l8890:
 19080                           
 19081                           ;stkvar	_i @ sp[(-3)+0]
 19082  016FFE  0EFD               	movlw	-3
 19083  017000  006F FF8C  F03F    	movff	plusw1,btemp+10
 19084  017006  0EFE               	movlw	-2
 19085  017008  006F FF8C  F040    	movff	plusw1,btemp+11
 19086                           
 19087                           ;stkvar	_s @ sp[(-3)+-2]
 19088  01700E  0EFB               	movlw	-5
 19089  017010  006F FF8C  F03D    	movff	plusw1,btemp+8
 19090  017016  0EFC               	movlw	-4
 19091  017018  006F FF8C  F03E    	movff	plusw1,btemp+9
 19092  01701E  503F               	movf	(btemp+10)^0,w,c
 19093  017020  243D               	addwf	(btemp+8)^0,w,c
 19094  017022  6ED9               	movwf	fsr2l,c
 19095  017024  5040               	movf	(btemp+11)^0,w,c
 19096  017026  203E               	addwfc	(btemp+9)^0,w,c
 19097  017028  6EDA               	movwf	fsr2h,c
 19098  01702A  50DF               	movf	indf2,w,c
 19099  01702C  6E40               	movwf	(btemp+11)^0,c
 19100                           
 19101                           ;stkvar	_c @ sp[(-3)+2]
 19102  01702E  0EFF               	movlw	-1
 19103  017030  0060  F103  FFE3   	movff	btemp+11,plusw1
 19104  017036  0EFF               	movlw	-1
 19105  017038  50E3               	movf	plusw1,w,c
 19106  01703A  A4D8               	btfss	status,2,c
 19107  01703C  D7C1               	goto	l8886
 19108                           
 19109                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19110  01703E  0EF9               	movlw	249
 19111  017040  26E1               	addwf	fsr1l,f,c
 19112  017042  0EFF               	movlw	255
 19113  017044  22E2               	addwfc	fsr1h,f,c
 19114  017046  0012               	return		;funcret
 19115  017048                     __end_of_fputs:
 19116                           	opt callstack 0
 19117                           
 19118 ;; *************** function _fputc *****************
 19119 ;; Defined at:
 19120 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19121 ;; Parameters:    Size  Location     Type
 19122 ;;  c               2  [STACK] int 
 19123 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19124 ;;		 -> f(6), NULL(0), 
 19125 ;; Auto vars:     Size  Location     Type
 19126 ;;		None
 19127 ;; Return value:  Size  Location     Type
 19128 ;;                  2  [STACK] int 
 19129 ;; Registers used:
 19130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19131 ;; Tracked objects:
 19132 ;;		On entry : 0/4
 19133 ;;		On exit  : 0/0
 19134 ;;		Unchanged: 0/0
 19135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19140 ;;Total ram usage:        0 bytes
 19141 ;; Hardware stack levels used:    1
 19142 ;; Hardware stack levels required when called:    8
 19143 ;; This function calls:
 19144 ;;		_putch
 19145 ;; This function is called by:
 19146 ;;		_pad
 19147 ;;		_stoa
 19148 ;;		_vfpfcnvrt
 19149 ;;		_fputs
 19150 ;; This function uses a reentrant model
 19151 ;;
 19152                           
 19153                           	psect	text63
 19154  0163A8                     __ptext63:
 19155                           	opt callstack 0
 19156  0163A8                     _fputc:
 19157                           	opt callstack 13
 19158                           
 19159                           ;stkvar	_fp @ sp[(0)+-4]
 19160                           
 19161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19162                           ;incstack = 0
 19163  0163A8  0EFC               	movlw	-4
 19164  0163AA  006F FF8C  F035    	movff	plusw1,btemp
 19165  0163B0  0EFD               	movlw	-3
 19166  0163B2  50E3               	movf	plusw1,w,c
 19167  0163B4  1035               	iorwf	btemp^0,w,c
 19168  0163B6  B4D8               	btfsc	status,2,c
 19169  0163B8  D009               	goto	u8300
 19170                           
 19171                           ;stkvar	_fp @ sp[(0)+-4]
 19172  0163BA  0EFC               	movlw	-4
 19173  0163BC  006F FF8C  F035    	movff	plusw1,btemp
 19174  0163C2  0EFD               	movlw	-3
 19175  0163C4  50E3               	movf	plusw1,w,c
 19176  0163C6  1035               	iorwf	btemp^0,w,c
 19177  0163C8  A4D8               	btfss	status,2,c
 19178  0163CA  D006               	goto	l8874
 19179  0163CC                     u8300:
 19180                           
 19181                           ;stkvar	_c @ sp[(0)+-2]
 19182  0163CC  0EFE               	movlw	-2
 19183  0163CE  50E3               	movf	plusw1,w,c
 19184  0163D0  6EE6               	movwf	postinc1,c
 19185  0163D2  ECEE  F0C0         	call	_putch	;wreg free
 19186  0163D6  D075               	goto	l2745
 19187  0163D8                     l8874:
 19188                           
 19189                           ;stkvar	_fp @ sp[(0)+-4]
 19190  0163D8  0EFC               	movlw	-4
 19191  0163DA  006F FF8C  F03F    	movff	plusw1,btemp+10
 19192  0163E0  0EFD               	movlw	-3
 19193  0163E2  006F FF8C  F040    	movff	plusw1,btemp+11
 19194  0163E8  0E04               	movlw	4
 19195  0163EA  243F               	addwf	(btemp+10)^0,w,c
 19196  0163EC  6ED9               	movwf	fsr2l,c
 19197  0163EE  0E00               	movlw	0
 19198  0163F0  2040               	addwfc	(btemp+11)^0,w,c
 19199  0163F2  6EDA               	movwf	fsr2h,c
 19200  0163F4  50DE               	movf	postinc2,w,c
 19201  0163F6  10DE               	iorwf	postinc2,w,c
 19202  0163F8  B4D8               	btfsc	status,2,c
 19203  0163FA  D026               	goto	u8320
 19204                           
 19205                           ;stkvar	_fp @ sp[(0)+-4]
 19206  0163FC  0EFC               	movlw	-4
 19207  0163FE  006F FF8C  F03F    	movff	plusw1,btemp+10
 19208  016404  0EFD               	movlw	-3
 19209  016406  006F FF8C  F040    	movff	plusw1,btemp+11
 19210  01640C  0E04               	movlw	4
 19211  01640E  243F               	addwf	(btemp+10)^0,w,c
 19212  016410  6ED9               	movwf	fsr2l,c
 19213  016412  0E00               	movlw	0
 19214  016414  2040               	addwfc	(btemp+11)^0,w,c
 19215  016416  6EDA               	movwf	fsr2h,c
 19216                           
 19217                           ;stkvar	_fp @ sp[(0)+-4]
 19218  016418  0EFC               	movlw	-4
 19219  01641A  006F FF8C  F03F    	movff	plusw1,btemp+10
 19220  016420  0EFD               	movlw	-3
 19221  016422  006F FF8C  F040    	movff	plusw1,btemp+11
 19222  016428  0E02               	movlw	2
 19223  01642A  243F               	addwf	(btemp+10)^0,w,c
 19224  01642C  6EE9               	movwf	fsr0l,c
 19225  01642E  0E00               	movlw	0
 19226  016430  2040               	addwfc	(btemp+11)^0,w,c
 19227  016432  6EEA               	movwf	fsr0h,c
 19228  016434  50DE               	movf	postinc2,w,c
 19229  016436  5CEE               	subwf	postinc0,w,c
 19230  016438  50EE               	movf	postinc0,w,c
 19231  01643A  0A80               	xorlw	128
 19232  01643C  6E35               	movwf	btemp^0,c
 19233  01643E  50DE               	movf	postinc2,w,c
 19234  016440  0A80               	xorlw	128
 19235  016442  5835               	subwfb	btemp^0,w,c
 19236  016444  B0D8               	btfsc	status,0,c
 19237  016446  D03D               	goto	l2745
 19238  016448                     u8320:
 19239                           
 19240                           ;stkvar	_c @ sp[(0)+-2]
 19241                           ;stkvar	_fp @ sp[(0)+-4]
 19242  016448  0EFC               	movlw	-4
 19243  01644A  006F FF8C  F03F    	movff	plusw1,btemp+10
 19244  016450  0EFD               	movlw	-3
 19245  016452  006F FF8C  F040    	movff	plusw1,btemp+11
 19246  016458  0E02               	movlw	2
 19247  01645A  243F               	addwf	(btemp+10)^0,w,c
 19248  01645C  6ED9               	movwf	fsr2l,c
 19249  01645E  0E00               	movlw	0
 19250  016460  2040               	addwfc	(btemp+11)^0,w,c
 19251  016462  6EDA               	movwf	fsr2h,c
 19252  016464  006F FF78  F03F    	movff	postinc2,btemp+10
 19253  01646A  006F FF74  F040    	movff	postdec2,btemp+11
 19254                           
 19255                           ;stkvar	_fp @ sp[(0)+-4]
 19256  016470  0EFC               	movlw	-4
 19257  016472  006F FF8F FFD9     	movff	plusw1,fsr2l
 19258  016478  0EFD               	movlw	-3
 19259  01647A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19260  016480  006F FF78  F03D    	movff	postinc2,btemp+8
 19261  016486  006F FF74  F03E    	movff	postdec2,btemp+9
 19262  01648C  503F               	movf	(btemp+10)^0,w,c
 19263  01648E  243D               	addwf	(btemp+8)^0,w,c
 19264  016490  6ED9               	movwf	fsr2l,c
 19265  016492  5040               	movf	(btemp+11)^0,w,c
 19266  016494  203E               	addwfc	(btemp+9)^0,w,c
 19267  016496  6EDA               	movwf	fsr2h,c
 19268  016498  0EFE               	movlw	-2
 19269  01649A  006F FF8F FFDF     	movff	plusw1,indf2
 19270                           
 19271                           ;stkvar	_fp @ sp[(0)+-4]
 19272  0164A0  0EFC               	movlw	-4
 19273  0164A2  006F FF8C  F03F    	movff	plusw1,btemp+10
 19274  0164A8  0EFD               	movlw	-3
 19275  0164AA  006F FF8C  F040    	movff	plusw1,btemp+11
 19276  0164B0  0E02               	movlw	2
 19277  0164B2  243F               	addwf	(btemp+10)^0,w,c
 19278  0164B4  6ED9               	movwf	fsr2l,c
 19279  0164B6  0E00               	movlw	0
 19280  0164B8  2040               	addwfc	(btemp+11)^0,w,c
 19281  0164BA  6EDA               	movwf	fsr2h,c
 19282  0164BC  2ADE               	incf	postinc2,f,c
 19283  0164BE  0E00               	movlw	0
 19284  0164C0  22DD               	addwfc	postdec2,f,c
 19285  0164C2                     l2745:
 19286                           
 19287                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19288  0164C2  52E5               	movf	postdec1,f,c
 19289  0164C4  52E5               	movf	postdec1,f,c
 19290  0164C6  52E5               	movf	postdec1,f,c
 19291  0164C8  52E5               	movf	postdec1,f,c
 19292  0164CA  0012               	return		;funcret
 19293  0164CC                     __end_of_fputc:
 19294                           	opt callstack 0
 19295                           
 19296 ;; *************** function _putch *****************
 19297 ;; Defined at:
 19298 ;;		line 155 in file "eadog.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;  c               1  [STACK] unsigned char 
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1  [STACK] void 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/4
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19316 ;;Total ram usage:        0 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    7
 19319 ;; This function calls:
 19320 ;;		_ringBufS_put_dma
 19321 ;; This function is called by:
 19322 ;;		_fputc
 19323 ;; This function uses a reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text64
 19327  0181DC                     __ptext64:
 19328                           	opt callstack 0
 19329  0181DC                     _putch:
 19330                           	opt callstack 13
 19331                           
 19332                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19333                           ;stkvar	_c @ sp[(0)+-1]
 19334                           
 19335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19336                           ;incstack = 0
 19337  0181DC  0EFF               	movlw	-1
 19338  0181DE  50E3               	movf	plusw1,w,c
 19339  0181E0  6EE6               	movwf	postinc1,c
 19340  0181E2  0060  F283  FFE6   	movff	_spi_link+6,postinc1
 19341  0181E8  0060  F287  FFE6   	movff	_spi_link+7,postinc1
 19342  0181EE  EC8B  F0B6         	call	_ringBufS_put_dma	;wreg free
 19343                           
 19344                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19345  0181F2  52E5               	movf	postdec1,f,c
 19346  0181F4  0012               	return		;funcret
 19347  0181F6                     __end_of_putch:
 19348                           	opt callstack 0
 19349                           
 19350 ;; *************** function _ringBufS_put_dma *****************
 19351 ;; Defined at:
 19352 ;;		line 67 in file "ringbufs.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19355 ;;		 -> ring_buf1(67), 
 19356 ;;  c               1  [STACK] const unsigned char 
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;		None
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  1  [STACK] void 
 19361 ;; Registers used:
 19362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/4
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19372 ;;Total ram usage:        0 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; Hardware stack levels required when called:    6
 19375 ;; This function calls:
 19376 ;;		Nothing
 19377 ;; This function is called by:
 19378 ;;		_putch
 19379 ;; This function uses a reentrant model
 19380 ;;
 19381                           
 19382                           	psect	text65
 19383  016D16                     __ptext65:
 19384                           	opt callstack 0
 19385  016D16                     _ringBufS_put_dma:
 19386                           	opt callstack 13
 19387                           
 19388                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19389                           ;stkvar	__this @ sp[(0)+-2]
 19390                           
 19391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19392                           ;incstack = 0
 19393  016D16  0EFE               	movlw	-2
 19394  016D18  006F FF8C  F03F    	movff	plusw1,btemp+10
 19395  016D1E  0EFF               	movlw	-1
 19396  016D20  006F FF8C  F040    	movff	plusw1,btemp+11
 19397  016D26  0E42               	movlw	66
 19398  016D28  243F               	addwf	(btemp+10)^0,w,c
 19399  016D2A  6ED9               	movwf	fsr2l,c
 19400  016D2C  0E00               	movlw	0
 19401  016D2E  2040               	addwfc	(btemp+11)^0,w,c
 19402  016D30  6EDA               	movwf	fsr2h,c
 19403  016D32  0E40               	movlw	64
 19404  016D34  60DF               	cpfslt	indf2,c
 19405  016D36  D040               	goto	l1464
 19406                           
 19407                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19408                           ;stkvar	_c @ sp[(0)+-3]
 19409                           ;stkvar	__this @ sp[(0)+-2]
 19410  016D38  0EFE               	movlw	-2
 19411  016D3A  006F FF8C  F03F    	movff	plusw1,btemp+10
 19412  016D40  0EFF               	movlw	-1
 19413  016D42  006F FF8C  F040    	movff	plusw1,btemp+11
 19414  016D48  0E40               	movlw	64
 19415  016D4A  243F               	addwf	(btemp+10)^0,w,c
 19416  016D4C  6ED9               	movwf	fsr2l,c
 19417  016D4E  0E00               	movlw	0
 19418  016D50  2040               	addwfc	(btemp+11)^0,w,c
 19419  016D52  6EDA               	movwf	fsr2h,c
 19420  016D54  50DF               	movf	indf2,w,c
 19421  016D56  6E40               	movwf	(btemp+11)^0,c
 19422                           
 19423                           ;stkvar	__this @ sp[(0)+-2]
 19424  016D58  0EFE               	movlw	-2
 19425  016D5A  006F FF8C  F03D    	movff	plusw1,btemp+8
 19426  016D60  0EFF               	movlw	-1
 19427  016D62  006F FF8C  F03E    	movff	plusw1,btemp+9
 19428  016D68  5040               	movf	(btemp+11)^0,w,c
 19429  016D6A  243D               	addwf	(btemp+8)^0,w,c
 19430  016D6C  6ED9               	movwf	fsr2l,c
 19431  016D6E  0E00               	movlw	0
 19432  016D70  203E               	addwfc	(btemp+9)^0,w,c
 19433  016D72  6EDA               	movwf	fsr2h,c
 19434  016D74  0EFD               	movlw	-3
 19435  016D76  006F FF8F FFDF     	movff	plusw1,indf2
 19436                           
 19437                           ;ringbufs.c: 71:   ++_this->head;
 19438                           ;stkvar	__this @ sp[(0)+-2]
 19439  016D7C  0EFE               	movlw	-2
 19440  016D7E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19441  016D84  0EFF               	movlw	-1
 19442  016D86  006F FF8C  F040    	movff	plusw1,btemp+11
 19443  016D8C  0E40               	movlw	64
 19444  016D8E  243F               	addwf	(btemp+10)^0,w,c
 19445  016D90  6ED9               	movwf	fsr2l,c
 19446  016D92  0E00               	movlw	0
 19447  016D94  2040               	addwfc	(btemp+11)^0,w,c
 19448  016D96  6EDA               	movwf	fsr2h,c
 19449  016D98  2ADF               	incf	indf2,f,c
 19450                           
 19451                           ;ringbufs.c: 72:   ++_this->count;
 19452                           ;stkvar	__this @ sp[(0)+-2]
 19453  016D9A  0EFE               	movlw	-2
 19454  016D9C  006F FF8C  F03F    	movff	plusw1,btemp+10
 19455  016DA2  0EFF               	movlw	-1
 19456  016DA4  006F FF8C  F040    	movff	plusw1,btemp+11
 19457  016DAA  0E42               	movlw	66
 19458  016DAC  243F               	addwf	(btemp+10)^0,w,c
 19459  016DAE  6ED9               	movwf	fsr2l,c
 19460  016DB0  0E00               	movlw	0
 19461  016DB2  2040               	addwfc	(btemp+11)^0,w,c
 19462  016DB4  6EDA               	movwf	fsr2h,c
 19463  016DB6  2ADF               	incf	indf2,f,c
 19464  016DB8                     l1464:
 19465                           
 19466                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19467  016DB8  52E5               	movf	postdec1,f,c
 19468  016DBA  52E5               	movf	postdec1,f,c
 19469  016DBC  52E5               	movf	postdec1,f,c
 19470  016DBE  0012               	return		;funcret
 19471  016DC0                     __end_of_ringBufS_put_dma:
 19472                           	opt callstack 0
 19473                           
 19474 ;; *************** function _atoi *****************
 19475 ;; Defined at:
 19476 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  s               2  [STACK] PTR const unsigned char 
 19479 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19480 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19481 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19482 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19483 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19484 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19485 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;  n               2  [STACK] int 
 19488 ;;  neg             2  [STACK] int 
 19489 ;; Return value:  Size  Location     Type
 19490 ;;                  2  [STACK] int 
 19491 ;; Registers used:
 19492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19493 ;; Tracked objects:
 19494 ;;		On entry : 0/4
 19495 ;;		On exit  : 0/0
 19496 ;;		Unchanged: 0/0
 19497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19502 ;;Total ram usage:        0 bytes
 19503 ;; Hardware stack levels used:    1
 19504 ;; Hardware stack levels required when called:    7
 19505 ;; This function calls:
 19506 ;;		_isdigit
 19507 ;;		_isspace
 19508 ;; This function is called by:
 19509 ;;		_vfpfcnvrt
 19510 ;; This function uses a reentrant model
 19511 ;;
 19512                           
 19513                           	psect	text66
 19514  014FD2                     __ptext66:
 19515                           	opt callstack 0
 19516  014FD2                     _atoi:
 19517                           	opt callstack 0
 19518                           
 19519                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19520  014FD2  0E09               	movlw	9
 19521  014FD4  26E1               	addwf	fsr1l,f,c
 19522  014FD6  0E00               	movlw	0
 19523  014FD8  22E2               	addwfc	fsr1h,f,c
 19524                           
 19525                           ;stkvar	_n @ sp[(-9)+5]
 19526                           
 19527                           ;incstack = 0
 19528  014FDA  0EFC               	movlw	-4
 19529  014FDC  6AE3               	clrf	plusw1,c
 19530  014FDE  0EFD               	movlw	-3
 19531  014FE0  6AE3               	clrf	plusw1,c
 19532                           
 19533                           ;stkvar	_neg @ sp[(-9)+7]
 19534  014FE2  0EFE               	movlw	-2
 19535  014FE4  6AE3               	clrf	plusw1,c
 19536  014FE6  0EFF               	movlw	-1
 19537  014FE8  6AE3               	clrf	plusw1,c
 19538  014FEA  D011               	goto	l7372
 19539  014FEC                     l7370:
 19540                           
 19541                           ;stkvar	_s @ sp[(-9)+-2]
 19542  014FEC  0EF5               	movlw	-11
 19543  014FEE  50E3               	movf	plusw1,w,c
 19544  014FF0  0F01               	addlw	1
 19545  014FF2  6E35               	movwf	btemp^0,c
 19546  014FF4  0EF5               	movlw	-11
 19547  014FF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19548  014FFC  6A35               	clrf	btemp^0,c
 19549  014FFE  0EF6               	movlw	-10
 19550  015000  50E3               	movf	plusw1,w,c
 19551  015002  2035               	addwfc	btemp^0,w,c
 19552  015004  6E35               	movwf	btemp^0,c
 19553  015006  0EF6               	movlw	-10
 19554  015008  0060  F0D7  FFE3   	movff	btemp,plusw1
 19555  01500E                     l7372:
 19556                           
 19557                           ;stkvar	_atoi$4634 @ sp[(-9)+4]
 19558  01500E  0EFB               	movlw	-5
 19559  015010  6AE3               	clrf	plusw1,c
 19560  015012  2AE3               	incf	plusw1,f,c
 19561                           
 19562                           ;stkvar	_s @ sp[(-9)+-2]
 19563  015014  50E1               	movf	fsr1l,w,c
 19564  015016  0FF5               	addlw	-11
 19565  015018  6ED9               	movwf	fsr2l,c
 19566  01501A  50E2               	movf	fsr1h,w,c
 19567  01501C  6EDA               	movwf	fsr2h,c
 19568  01501E  0EFF               	movlw	255
 19569  015020  22DA               	addwfc	fsr2h,f,c
 19570  015022  006F FF7B FFF6     	movff	postinc2,tblptrl
 19571  015028  006F FF77 FFF7     	movff	postdec2,tblptrh
 19572  01502E                     	if	0	;tblptru may be non-zero
 19573  01502E                     	endif
 19574  01502E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19575  01502E  0E00               	movlw	low (__mediumconst shr (0+16))
 19576  015030  6EF8               	movwf	tblptru,c
 19577  015032                     	endif
 19578  015032  0008               	tblrd		*
 19579  015034  50F5               	movf	tablat,w,c
 19580  015036  0A20               	xorlw	32
 19581  015038  B4D8               	btfsc	status,2,c
 19582  01503A  D023               	goto	l7380
 19583  01503C  0EF7               	movlw	247
 19584  01503E  6E3F               	movwf	(btemp+10)^0,c
 19585  015040  0EFF               	movlw	255
 19586  015042  6E40               	movwf	(btemp+11)^0,c
 19587                           
 19588                           ;stkvar	_s @ sp[(-9)+-2]
 19589  015044  50E1               	movf	fsr1l,w,c
 19590  015046  0FF5               	addlw	-11
 19591  015048  6ED9               	movwf	fsr2l,c
 19592  01504A  50E2               	movf	fsr1h,w,c
 19593  01504C  6EDA               	movwf	fsr2h,c
 19594  01504E  0EFF               	movlw	255
 19595  015050  22DA               	addwfc	fsr2h,f,c
 19596  015052  006F FF7B FFF6     	movff	postinc2,tblptrl
 19597  015058  006F FF77 FFF7     	movff	postdec2,tblptrh
 19598  01505E                     	if	0	;tblptru may be non-zero
 19599  01505E                     	endif
 19600  01505E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19601  01505E  0E00               	movlw	low (__mediumconst shr (0+16))
 19602  015060  6EF8               	movwf	tblptru,c
 19603  015062                     	endif
 19604  015062  0008               	tblrd		*
 19605  015064  50F5               	movf	tablat,w,c
 19606  015066  6E3D               	movwf	(btemp+8)^0,c
 19607  015068  6A3E               	clrf	(btemp+9)^0,c
 19608  01506A  503F               	movf	(btemp+10)^0,w,c
 19609  01506C  263D               	addwf	(btemp+8)^0,f,c
 19610  01506E  5040               	movf	(btemp+11)^0,w,c
 19611  015070  223E               	addwfc	(btemp+9)^0,f,c
 19612  015072  503E               	movf	(btemp+9)^0,w,c
 19613  015074  E104               	bnz	u7090
 19614  015076  0E05               	movlw	5
 19615  015078  5C3D               	subwf	(btemp+8)^0,w,c
 19616  01507A  A0D8               	btfss	status,0,c
 19617  01507C  D002               	goto	l7380
 19618  01507E                     u7090:
 19619                           
 19620                           ;stkvar	_atoi$4634 @ sp[(-9)+4]
 19621  01507E  0EFB               	movlw	-5
 19622  015080  6AE3               	clrf	plusw1,c
 19623  015082                     l7380:
 19624                           
 19625                           ;stkvar	_atoi$4634 @ sp[(-9)+4]
 19626  015082  0EFB               	movlw	-5
 19627  015084  50E3               	movf	plusw1,w,c
 19628  015086  6E3F               	movwf	(btemp+10)^0,c
 19629  015088  6A40               	clrf	(btemp+11)^0,c
 19630                           
 19631                           ;stkvar	_atoi$4633 @ sp[(-9)+2]
 19632  01508A  0EF9               	movlw	-7
 19633  01508C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19634  015092  0EFA               	movlw	-6
 19635  015094  0060  F103  FFE3   	movff	btemp+11,plusw1
 19636                           
 19637                           ;stkvar	_atoi$4633 @ sp[(-9)+2]
 19638  01509A  0EF9               	movlw	-7
 19639  01509C  006F FF8C  F035    	movff	plusw1,btemp
 19640  0150A2  0EFA               	movlw	-6
 19641  0150A4  50E3               	movf	plusw1,w,c
 19642  0150A6  1035               	iorwf	btemp^0,w,c
 19643  0150A8  B4D8               	btfsc	status,2,c
 19644  0150AA  D01F               	goto	l7390
 19645  0150AC  D79F               	goto	l7370
 19646  0150AE                     l7386:
 19647  0150AE  0E01               	movlw	1
 19648  0150B0  6E3F               	movwf	(btemp+10)^0,c
 19649  0150B2  0E00               	movlw	0
 19650  0150B4  6E40               	movwf	(btemp+11)^0,c
 19651                           
 19652                           ;stkvar	_neg @ sp[(-9)+7]
 19653  0150B6  0EFE               	movlw	-2
 19654  0150B8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19655  0150BE  0EFF               	movlw	-1
 19656  0150C0  0060  F103  FFE3   	movff	btemp+11,plusw1
 19657  0150C6                     l7388:
 19658                           
 19659                           ;stkvar	_s @ sp[(-9)+-2]
 19660  0150C6  0EF5               	movlw	-11
 19661  0150C8  50E3               	movf	plusw1,w,c
 19662  0150CA  0F01               	addlw	1
 19663  0150CC  6E35               	movwf	btemp^0,c
 19664  0150CE  0EF5               	movlw	-11
 19665  0150D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 19666  0150D6  6A35               	clrf	btemp^0,c
 19667  0150D8  0EF6               	movlw	-10
 19668  0150DA  50E3               	movf	plusw1,w,c
 19669  0150DC  2035               	addwfc	btemp^0,w,c
 19670  0150DE  6E35               	movwf	btemp^0,c
 19671  0150E0  0EF6               	movlw	-10
 19672  0150E2  0060  F0D7  FFE3   	movff	btemp,plusw1
 19673  0150E8  D053               	goto	l7396
 19674  0150EA                     l7390:
 19675                           
 19676                           ;stkvar	_s @ sp[(-9)+-2]
 19677  0150EA  50E1               	movf	fsr1l,w,c
 19678  0150EC  0FF5               	addlw	-11
 19679  0150EE  6ED9               	movwf	fsr2l,c
 19680  0150F0  50E2               	movf	fsr1h,w,c
 19681  0150F2  6EDA               	movwf	fsr2h,c
 19682  0150F4  0EFF               	movlw	255
 19683  0150F6  22DA               	addwfc	fsr2h,f,c
 19684  0150F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 19685  0150FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 19686  015104                     	if	0	;tblptru may be non-zero
 19687  015104                     	endif
 19688  015104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19689  015104  0E00               	movlw	low (__mediumconst shr (0+16))
 19690  015106  6EF8               	movwf	tblptru,c
 19691  015108                     	endif
 19692  015108  0008               	tblrd		*
 19693  01510A  50F5               	movf	tablat,w,c
 19694  01510C  6E3F               	movwf	(btemp+10)^0,c
 19695  01510E  6A40               	clrf	(btemp+11)^0,c
 19696                           
 19697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19698                           ; Switch size 1, requested type "simple"
 19699                           ; Number of cases is 1, Range of values is 0 to 0
 19700                           ; switch strategies available:
 19701                           ; Name         Instructions Cycles
 19702                           ; simple_byte            4     3 (average)
 19703                           ;	Chosen strategy is simple_byte
 19704  015110  5040               	movf	(btemp+11)^0,w,c
 19705  015112  0A00               	xorlw	0	; case 0
 19706  015114  A4D8               	btfss	status,2,c
 19707  015116  D03C               	goto	l7396
 19708                           
 19709                           ; Switch size 1, requested type "simple"
 19710                           ; Number of cases is 2, Range of values is 43 to 45
 19711                           ; switch strategies available:
 19712                           ; Name         Instructions Cycles
 19713                           ; simple_byte            7     4 (average)
 19714                           ;	Chosen strategy is simple_byte
 19715  015118  503F               	movf	(btemp+10)^0,w,c
 19716  01511A  0A2B               	xorlw	43	; case 43
 19717  01511C  B4D8               	btfsc	status,2,c
 19718  01511E  D7D3               	goto	l7388
 19719  015120  0A06               	xorlw	6	; case 45
 19720  015122  B4D8               	btfsc	status,2,c
 19721  015124  D7C4               	goto	l7386
 19722  015126  D034               	goto	l7396
 19723  015128                     l7392:
 19724                           
 19725                           ;stkvar	_n @ sp[(-9)+5]
 19726  015128  0EFC               	movlw	-4
 19727  01512A  006F FF8C  F03F    	movff	plusw1,btemp+10
 19728  015130  0EFD               	movlw	-3
 19729  015132  006F FF8C  F040    	movff	plusw1,btemp+11
 19730  015138  0E0A               	movlw	10
 19731  01513A  023F               	mulwf	(btemp+10)^0,c
 19732  01513C  006F FFCC  F03D    	movff	prodl,btemp+8
 19733  015142  006F FFD0  F03E    	movff	prodh,btemp+9
 19734  015148  0240               	mulwf	(btemp+11)^0,c
 19735  01514A  50F3               	movf	prodl,w,c
 19736  01514C  263E               	addwf	(btemp+9)^0,f,c
 19737                           
 19738                           ;stkvar	_s @ sp[(-9)+-2]
 19739  01514E  50E1               	movf	fsr1l,w,c
 19740  015150  0FF5               	addlw	-11
 19741  015152  6ED9               	movwf	fsr2l,c
 19742  015154  50E2               	movf	fsr1h,w,c
 19743  015156  6EDA               	movwf	fsr2h,c
 19744  015158  0EFF               	movlw	255
 19745  01515A  22DA               	addwfc	fsr2h,f,c
 19746  01515C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19747  015162  006F FF77 FFF7     	movff	postdec2,tblptrh
 19748  015168                     	if	0	;tblptru may be non-zero
 19749  015168                     	endif
 19750  015168                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19751  015168  0E00               	movlw	low (__mediumconst shr (0+16))
 19752  01516A  6EF8               	movwf	tblptru,c
 19753  01516C                     	endif
 19754  01516C  0008               	tblrd		*
 19755  01516E  50F5               	movf	tablat,w,c
 19756  015170  5E3D               	subwf	(btemp+8)^0,f,c
 19757  015172  0E00               	movlw	0
 19758  015174  5A3E               	subwfb	(btemp+9)^0,f,c
 19759  015176  0E30               	movlw	48
 19760  015178  263D               	addwf	(btemp+8)^0,f,c
 19761  01517A  0E00               	movlw	0
 19762  01517C  223E               	addwfc	(btemp+9)^0,f,c
 19763                           
 19764                           ;stkvar	_n @ sp[(-9)+5]
 19765  01517E  0EFC               	movlw	-4
 19766  015180  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19767  015186  0EFD               	movlw	-3
 19768  015188  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19769  01518E  D79B               	goto	l7388
 19770  015190                     l7396:
 19771  015190  0ED0               	movlw	208
 19772  015192  6E3F               	movwf	(btemp+10)^0,c
 19773  015194  0EFF               	movlw	255
 19774  015196  6E40               	movwf	(btemp+11)^0,c
 19775                           
 19776                           ;stkvar	_s @ sp[(-9)+-2]
 19777  015198  50E1               	movf	fsr1l,w,c
 19778  01519A  0FF5               	addlw	-11
 19779  01519C  6ED9               	movwf	fsr2l,c
 19780  01519E  50E2               	movf	fsr1h,w,c
 19781  0151A0  6EDA               	movwf	fsr2h,c
 19782  0151A2  0EFF               	movlw	255
 19783  0151A4  22DA               	addwfc	fsr2h,f,c
 19784  0151A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19785  0151AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19786  0151B2                     	if	0	;tblptru may be non-zero
 19787  0151B2                     	endif
 19788  0151B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19789  0151B2  0E00               	movlw	low (__mediumconst shr (0+16))
 19790  0151B4  6EF8               	movwf	tblptru,c
 19791  0151B6                     	endif
 19792  0151B6  0008               	tblrd		*
 19793  0151B8  50F5               	movf	tablat,w,c
 19794  0151BA  6E3D               	movwf	(btemp+8)^0,c
 19795  0151BC  6A3E               	clrf	(btemp+9)^0,c
 19796  0151BE  503F               	movf	(btemp+10)^0,w,c
 19797  0151C0  263D               	addwf	(btemp+8)^0,f,c
 19798  0151C2  5040               	movf	(btemp+11)^0,w,c
 19799  0151C4  223E               	addwfc	(btemp+9)^0,f,c
 19800  0151C6  503E               	movf	(btemp+9)^0,w,c
 19801  0151C8  E106               	bnz	u7110
 19802  0151CA  0E0A               	movlw	10
 19803  0151CC  5C3D               	subwf	(btemp+8)^0,w,c
 19804  0151CE  B0D8               	btfsc	status,0,c
 19805  0151D0  D002               	goto	u7110
 19806  0151D2  0E01               	movlw	1
 19807  0151D4  D001               	goto	u7120
 19808  0151D6                     u7110:
 19809  0151D6  0E00               	movlw	0
 19810  0151D8                     u7120:
 19811  0151D8  6E3F               	movwf	(btemp+10)^0,c
 19812  0151DA  6A40               	clrf	(btemp+11)^0,c
 19813                           
 19814                           ;stkvar	_atoi$4635 @ sp[(-9)+0]
 19815  0151DC  0EF7               	movlw	-9
 19816  0151DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19817  0151E4  0EF8               	movlw	-8
 19818  0151E6  0060  F103  FFE3   	movff	btemp+11,plusw1
 19819                           
 19820                           ;stkvar	_atoi$4635 @ sp[(-9)+0]
 19821  0151EC  0EF7               	movlw	-9
 19822  0151EE  006F FF8C  F035    	movff	plusw1,btemp
 19823  0151F4  0EF8               	movlw	-8
 19824  0151F6  50E3               	movf	plusw1,w,c
 19825  0151F8  1035               	iorwf	btemp^0,w,c
 19826  0151FA  A4D8               	btfss	status,2,c
 19827  0151FC  D795               	goto	l7392
 19828                           
 19829                           ;stkvar	_neg @ sp[(-9)+7]
 19830  0151FE  0EFE               	movlw	-2
 19831  015200  006F FF8C  F035    	movff	plusw1,btemp
 19832  015206  0EFF               	movlw	-1
 19833  015208  50E3               	movf	plusw1,w,c
 19834  01520A  1035               	iorwf	btemp^0,w,c
 19835  01520C  A4D8               	btfss	status,2,c
 19836  01520E  D00E               	goto	l7406
 19837                           
 19838                           ;stkvar	_n @ sp[(-9)+5]
 19839  015210  0EFC               	movlw	-4
 19840  015212  006F FF8C  F035    	movff	plusw1,btemp
 19841  015218  1E35               	comf	btemp^0,f,c
 19842  01521A  0EFD               	movlw	-3
 19843  01521C  006F FF8C  F036    	movff	plusw1,btemp+1
 19844  015222  1E36               	comf	(btemp+1)^0,f,c
 19845  015224  2A35               	incf	btemp^0,f,c
 19846  015226  B4D8               	btfsc	status,2,c
 19847  015228  2A36               	incf	(btemp+1)^0,f,c
 19848  01522A  D008               	goto	l2684
 19849  01522C                     l7406:
 19850                           
 19851                           ;stkvar	_n @ sp[(-9)+5]
 19852  01522C  0EFC               	movlw	-4
 19853  01522E  006F FF8C  F035    	movff	plusw1,btemp
 19854  015234  0EFD               	movlw	-3
 19855  015236  006F FF8C  F036    	movff	plusw1,btemp+1
 19856  01523C                     l2684:
 19857                           
 19858                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19859  01523C  0EF5               	movlw	245
 19860  01523E  26E1               	addwf	fsr1l,f,c
 19861  015240  0EFF               	movlw	255
 19862  015242  22E2               	addwfc	fsr1h,f,c
 19863  015244  0012               	return		;funcret
 19864  015246                     __end_of_atoi:
 19865                           	opt callstack 0
 19866                           
 19867 ;; *************** function _isspace *****************
 19868 ;; Defined at:
 19869 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;  c               2  [STACK] int 
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;		None
 19874 ;; Return value:  Size  Location     Type
 19875 ;;                  2  [STACK] int 
 19876 ;; Registers used:
 19877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19878 ;; Tracked objects:
 19879 ;;		On entry : 0/0
 19880 ;;		On exit  : 0/0
 19881 ;;		Unchanged: 0/0
 19882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;Total ram usage:        0 bytes
 19888 ;; Hardware stack levels used:    1
 19889 ;; Hardware stack levels required when called:    6
 19890 ;; This function calls:
 19891 ;;		Nothing
 19892 ;; This function is called by:
 19893 ;;		_atoi
 19894 ;; This function uses a reentrant model
 19895 ;;
 19896                           
 19897                           	psect	text67
 19898  01781E                     __ptext67:
 19899                           	opt callstack 0
 19900  01781E                     _isspace:
 19901                           	opt callstack 0
 19902                           
 19903                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19904  01781E  52E6               	movf	postinc1,f,c
 19905                           
 19906                           ;stkvar	_isspace$4673 @ sp[(-1)+0]
 19907                           
 19908                           ;incstack = 0
 19909  017820  0EFF               	movlw	-1
 19910  017822  6AE3               	clrf	plusw1,c
 19911  017824  2AE3               	incf	plusw1,f,c
 19912                           
 19913                           ;stkvar	_c @ sp[(-1)+-2]
 19914  017826  0EFD               	movlw	-3
 19915  017828  006F FF8C  F035    	movff	plusw1,btemp
 19916  01782E  0E20               	movlw	32
 19917  017830  1835               	xorwf	btemp^0,w,c
 19918  017832  E104               	bnz	u6080
 19919  017834  0EFE               	movlw	-2
 19920  017836  50E3               	movf	plusw1,w,c
 19921  017838  B4D8               	btfsc	status,2,c
 19922  01783A  D012               	goto	l6856
 19923  01783C                     u6080:
 19924                           
 19925                           ;stkvar	_c @ sp[(-1)+-2]
 19926  01783C  0EFD               	movlw	-3
 19927  01783E  50E3               	movf	plusw1,w,c
 19928  017840  0FF7               	addlw	247
 19929  017842  6E3F               	movwf	(btemp+10)^0,c
 19930  017844  0EFE               	movlw	-2
 19931  017846  006F FF8C  F040    	movff	plusw1,btemp+11
 19932  01784C  0EFF               	movlw	255
 19933  01784E  2240               	addwfc	(btemp+11)^0,f,c
 19934  017850  5040               	movf	(btemp+11)^0,w,c
 19935  017852  E104               	bnz	u6090
 19936  017854  0E05               	movlw	5
 19937  017856  5C3F               	subwf	(btemp+10)^0,w,c
 19938  017858  A0D8               	btfss	status,0,c
 19939  01785A  D002               	goto	l6856
 19940  01785C                     u6090:
 19941                           
 19942                           ;stkvar	_isspace$4673 @ sp[(-1)+0]
 19943  01785C  0EFF               	movlw	-1
 19944  01785E  6AE3               	clrf	plusw1,c
 19945  017860                     l6856:
 19946                           
 19947                           ;stkvar	_isspace$4673 @ sp[(-1)+0]
 19948  017860  0EFF               	movlw	-1
 19949  017862  50E3               	movf	plusw1,w,c
 19950  017864  6E35               	movwf	btemp^0,c
 19951  017866  6A36               	clrf	(btemp+1)^0,c
 19952                           
 19953                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19954  017868  52E5               	movf	postdec1,f,c
 19955  01786A  52E5               	movf	postdec1,f,c
 19956  01786C  52E5               	movf	postdec1,f,c
 19957  01786E  0012               	return		;funcret
 19958  017870                     __end_of_isspace:
 19959                           	opt callstack 0
 19960                           
 19961 ;; *************** function _isdigit *****************
 19962 ;; Defined at:
 19963 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19964 ;; Parameters:    Size  Location     Type
 19965 ;;  c               2  [STACK] int 
 19966 ;; Auto vars:     Size  Location     Type
 19967 ;;		None
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  2  [STACK] int 
 19970 ;; Registers used:
 19971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19981 ;;Total ram usage:        0 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:    6
 19984 ;; This function calls:
 19985 ;;		Nothing
 19986 ;; This function is called by:
 19987 ;;		_vfpfcnvrt
 19988 ;;		_atoi
 19989 ;; This function uses a reentrant model
 19990 ;;
 19991                           
 19992                           	psect	text68
 19993  017CBC                     __ptext68:
 19994                           	opt callstack 0
 19995  017CBC                     _isdigit:
 19996                           	opt callstack 18
 19997                           
 19998                           ;stkvar	_c @ sp[(0)+-2]
 19999                           
 20000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20001                           ;incstack = 0
 20002  017CBC  0EFE               	movlw	-2
 20003  017CBE  50E3               	movf	plusw1,w,c
 20004  017CC0  0FD0               	addlw	208
 20005  017CC2  6E3F               	movwf	(btemp+10)^0,c
 20006  017CC4  0EFF               	movlw	-1
 20007  017CC6  006F FF8C  F040    	movff	plusw1,btemp+11
 20008  017CCC  0EFF               	movlw	255
 20009  017CCE  2240               	addwfc	(btemp+11)^0,f,c
 20010  017CD0  5040               	movf	(btemp+11)^0,w,c
 20011  017CD2  E106               	bnz	u5040
 20012  017CD4  0E0A               	movlw	10
 20013  017CD6  5C3F               	subwf	(btemp+10)^0,w,c
 20014  017CD8  B0D8               	btfsc	status,0,c
 20015  017CDA  D002               	goto	u5040
 20016  017CDC  0E01               	movlw	1
 20017  017CDE  D001               	goto	u5050
 20018  017CE0                     u5040:
 20019  017CE0  0E00               	movlw	0
 20020  017CE2                     u5050:
 20021  017CE2  6E35               	movwf	btemp^0,c
 20022  017CE4  6A36               	clrf	(btemp+1)^0,c
 20023                           
 20024                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20025  017CE6  52E5               	movf	postdec1,f,c
 20026  017CE8  52E5               	movf	postdec1,f,c
 20027  017CEA  0012               	return		;funcret
 20028  017CEC                     __end_of_isdigit:
 20029                           	opt callstack 0
 20030                           
 20031 ;; *************** function _set_vterm *****************
 20032 ;; Defined at:
 20033 ;;		line 104 in file "mconfig.c"
 20034 ;; Parameters:    Size  Location     Type
 20035 ;;  vterm           1  [STACK] unsigned char 
 20036 ;; Auto vars:     Size  Location     Type
 20037 ;;		None
 20038 ;; Return value:  Size  Location     Type
 20039 ;;                  1  [STACK] unsigned char 
 20040 ;; Registers used:
 20041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20042 ;; Tracked objects:
 20043 ;;		On entry : 0/0
 20044 ;;		On exit  : 3F/4
 20045 ;;		Unchanged: 0/0
 20046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20051 ;;Total ram usage:        0 bytes
 20052 ;; Hardware stack levels used:    1
 20053 ;; Hardware stack levels required when called:    6
 20054 ;; This function calls:
 20055 ;;		Nothing
 20056 ;; This function is called by:
 20057 ;;		_main
 20058 ;;		_check_help
 20059 ;; This function uses a reentrant model
 20060 ;;
 20061                           
 20062                           	psect	text69
 20063  0181C0                     __ptext69:
 20064                           	opt callstack 0
 20065  0181C0                     _set_vterm:
 20066                           	opt callstack 24
 20067                           
 20068                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 20069                           ;stkvar	_vterm @ sp[(0)+-1]
 20070                           
 20071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20072                           ;incstack = 0
 20073  0181C0  0EFF               	movlw	-1
 20074  0181C2  006F FF8C  F040    	movff	plusw1,btemp+11
 20075  0181C8  0E03               	movlw	3
 20076  0181CA  1640               	andwf	(btemp+11)^0,f,c
 20077  0181CC  0104               	movlb	4	; () banked
 20078  0181CE  51D8               	movf	(_D+216)& (0+255),w,b
 20079  0181D0  1840               	xorwf	(btemp+11)^0,w,c
 20080  0181D2  0BFE               	andlw	-2
 20081  0181D4  1840               	xorwf	(btemp+11)^0,w,c
 20082  0181D6  6FD8               	movwf	(_D+216)& (0+255),b
 20083                           
 20084                           ; BSR set to: 4
 20085                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20086  0181D8  52E5               	movf	postdec1,f,c
 20087  0181DA  0012               	return		;funcret
 20088  0181DC                     __end_of_set_vterm:
 20089                           	opt callstack 0
 20090                           
 20091 ;; *************** function _set_temp_display_help *****************
 20092 ;; Defined at:
 20093 ;;		line 208 in file "mconfig.c"
 20094 ;; Parameters:    Size  Location     Type
 20095 ;;  new_response    1  [STACK] const enum E16501
 20096 ;; Auto vars:     Size  Location     Type
 20097 ;;		None
 20098 ;; Return value:  Size  Location     Type
 20099 ;;                  1  [STACK] enum E16501
 20100 ;; Registers used:
 20101 ;;		wreg, fsr1l, fsr1h
 20102 ;; Tracked objects:
 20103 ;;		On entry : 0/4
 20104 ;;		On exit  : 3F/2
 20105 ;;		Unchanged: 0/0
 20106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20111 ;;Total ram usage:        0 bytes
 20112 ;; Hardware stack levels used:    1
 20113 ;; Hardware stack levels required when called:    6
 20114 ;; This function calls:
 20115 ;;		Nothing
 20116 ;; This function is called by:
 20117 ;;		_check_help
 20118 ;; This function uses a reentrant model
 20119 ;;
 20120                           
 20121                           	psect	text70
 20122  0182DA                     __ptext70:
 20123                           	opt callstack 0
 20124  0182DA                     _set_temp_display_help:
 20125                           	opt callstack 23
 20126                           
 20127                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20128                           
 20129                           ; BSR set to: 4
 20130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20131                           ;incstack = 0
 20132  0182DA  0102               	movlb	2	; () banked
 20133  0182DC  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 20134                           
 20135                           ; BSR set to: 2
 20136                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20137                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20138  0182DE  0EFF               	movlw	-1
 20139  0182E0  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 20140                           
 20141                           ; BSR set to: 2
 20142                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20143  0182E6  52E5               	movf	postdec1,f,c
 20144  0182E8  0012               	return		;funcret
 20145  0182EA                     __end_of_set_temp_display_help:
 20146                           	opt callstack 0
 20147                           
 20148 ;; *************** function _set_display_info *****************
 20149 ;; Defined at:
 20150 ;;		line 197 in file "mconfig.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;  new_response    1  [STACK] const enum E16501
 20153 ;; Auto vars:     Size  Location     Type
 20154 ;;		None
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1  [STACK] enum E16986
 20157 ;; Registers used:
 20158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/4
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20168 ;;Total ram usage:        0 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    7
 20171 ;; This function calls:
 20172 ;;		_TimerDone
 20173 ;; This function is called by:
 20174 ;;		_main
 20175 ;;		_check_help
 20176 ;; This function uses a reentrant model
 20177 ;;
 20178                           
 20179                           	psect	text71
 20180  01812C                     __ptext71:
 20181                           	opt callstack 0
 20182  01812C                     _set_display_info:
 20183                           	opt callstack 23
 20184                           
 20185                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20186                           
 20187                           ; BSR set to: 2
 20188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20189                           ;incstack = 0
 20190  01812C  0E07               	movlw	7
 20191  01812E  6EE6               	movwf	postinc1,c
 20192  018130  EC21  F0C0         	call	_TimerDone	;wreg free
 20193  018134  5035               	movf	btemp^0,w,c
 20194  018136  B4D8               	btfsc	status,2,c
 20195  018138  D006               	goto	l1601
 20196                           
 20197                           ;mconfig.c: 202:   old_info = V.response.info;
 20198  01813A  0102               	movlb	2	; () banked
 20199  01813C  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 20200                           
 20201                           ; BSR set to: 2
 20202                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20203                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20204  01813E  0EFF               	movlw	-1
 20205  018140  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 20206  018146                     l1601:
 20207                           
 20208                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20209  018146  52E5               	movf	postdec1,f,c
 20210  018148  0012               	return		;funcret
 20211  01814A                     __end_of_set_display_info:
 20212                           	opt callstack 0
 20213                           
 20214 ;; *************** function _mode_lamp_dim *****************
 20215 ;; Defined at:
 20216 ;;		line 13 in file "mconfig.c"
 20217 ;; Parameters:    Size  Location     Type
 20218 ;;  level           2  [STACK] const unsigned short 
 20219 ;; Auto vars:     Size  Location     Type
 20220 ;;		None
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  1  [STACK] void 
 20223 ;; Registers used:
 20224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/2
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20234 ;;Total ram usage:        0 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; Hardware stack levels required when called:    7
 20237 ;; This function calls:
 20238 ;;		_PWM8_LoadDutyValue
 20239 ;; This function is called by:
 20240 ;;		_main
 20241 ;;		_check_help
 20242 ;; This function uses a reentrant model
 20243 ;;
 20244                           
 20245                           	psect	text72
 20246  01822A                     __ptext72:
 20247                           	opt callstack 0
 20248  01822A                     _mode_lamp_dim:
 20249                           	opt callstack 23
 20250                           
 20251                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20252                           ;stkvar	_level @ sp[(0)+-2]
 20253                           
 20254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20255                           ;incstack = 0
 20256  01822A  0EFE               	movlw	-2
 20257  01822C  006F FF8F FFE6     	movff	plusw1,postinc1
 20258  018232  006F FF8F FFE6     	movff	plusw1,postinc1
 20259  018238  EC2D  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20260                           
 20261                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20262  01823C  52E5               	movf	postdec1,f,c
 20263  01823E  52E5               	movf	postdec1,f,c
 20264  018240  0012               	return		;funcret
 20265  018242                     __end_of_mode_lamp_dim:
 20266                           	opt callstack 0
 20267                           
 20268 ;; *************** function _mode_lamp_bright *****************
 20269 ;; Defined at:
 20270 ;;		line 18 in file "mconfig.c"
 20271 ;; Parameters:    Size  Location     Type
 20272 ;;		None
 20273 ;; Auto vars:     Size  Location     Type
 20274 ;;		None
 20275 ;; Return value:  Size  Location     Type
 20276 ;;                  1  [STACK] void 
 20277 ;; Registers used:
 20278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20279 ;; Tracked objects:
 20280 ;;		On entry : 0/2
 20281 ;;		On exit  : 0/0
 20282 ;;		Unchanged: 0/0
 20283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20288 ;;Total ram usage:        0 bytes
 20289 ;; Hardware stack levels used:    1
 20290 ;; Hardware stack levels required when called:    7
 20291 ;; This function calls:
 20292 ;;		_PWM8_LoadDutyValue
 20293 ;; This function is called by:
 20294 ;;		_check_help
 20295 ;; This function uses a reentrant model
 20296 ;;
 20297                           
 20298                           	psect	text73
 20299  0182F8                     __ptext73:
 20300                           	opt callstack 0
 20301  0182F8                     _mode_lamp_bright:
 20302                           	opt callstack 22
 20303                           
 20304                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20305                           
 20306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20307                           ;incstack = 0
 20308  0182F8  0E2C               	movlw	44
 20309  0182FA  6EE6               	movwf	postinc1,c
 20310  0182FC  0E01               	movlw	1
 20311  0182FE  6EE6               	movwf	postinc1,c
 20312  018300  EC2D  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20313                           
 20314                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20315  018304  0012               	return		;funcret
 20316  018306                     __end_of_mode_lamp_bright:
 20317                           	opt callstack 0
 20318                           
 20319 ;; *************** function _PWM8_LoadDutyValue *****************
 20320 ;; Defined at:
 20321 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20322 ;; Parameters:    Size  Location     Type
 20323 ;;  dutyValue       2  [STACK] unsigned short 
 20324 ;; Auto vars:     Size  Location     Type
 20325 ;;		None
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1  [STACK] void 
 20328 ;; Registers used:
 20329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/2
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20339 ;;Total ram usage:        0 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; Hardware stack levels required when called:    6
 20342 ;; This function calls:
 20343 ;;		Nothing
 20344 ;; This function is called by:
 20345 ;;		_mode_lamp_dim
 20346 ;;		_mode_lamp_bright
 20347 ;; This function uses a reentrant model
 20348 ;;
 20349                           
 20350                           	psect	text74
 20351  017A5A                     __ptext74:
 20352                           	opt callstack 0
 20353  017A5A                     _PWM8_LoadDutyValue:
 20354                           	opt callstack 23
 20355                           
 20356                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20357                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20358                           
 20359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20360                           ;incstack = 0
 20361  017A5A  0EFE               	movlw	-2
 20362  017A5C  006F FF8C  F03F    	movff	plusw1,btemp+10
 20363  017A62  0EFF               	movlw	-1
 20364  017A64  006F FF8C  F040    	movff	plusw1,btemp+11
 20365  017A6A  90D8               	bcf	status,0,c
 20366  017A6C  3240               	rrcf	(btemp+11)^0,f,c
 20367  017A6E  323F               	rrcf	(btemp+10)^0,f,c
 20368  017A70  90D8               	bcf	status,0,c
 20369  017A72  3240               	rrcf	(btemp+11)^0,f,c
 20370  017A74  323F               	rrcf	(btemp+10)^0,f,c
 20371  017A76  503F               	movf	(btemp+10)^0,w,c
 20372  017A78  6E61               	movwf	97,c	;volatile
 20373                           
 20374                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20375                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20376  017A7A  0EFE               	movlw	-2
 20377  017A7C  006F FF8C  F040    	movff	plusw1,btemp+11
 20378  017A82  0E03               	movlw	3
 20379  017A84  1640               	andwf	(btemp+11)^0,f,c
 20380  017A86  0E06               	movlw	6
 20381  017A88  6E35               	movwf	btemp^0,c
 20382  017A8A                     u7575:
 20383  017A8A  90D8               	bcf	status,0,c
 20384  017A8C  3640               	rlcf	(btemp+11)^0,f,c
 20385  017A8E  2E35               	decfsz	btemp^0,f,c
 20386  017A90  D7FC               	goto	u7575
 20387  017A92  5040               	movf	(btemp+11)^0,w,c
 20388  017A94  6E60               	movwf	96,c	;volatile
 20389                           
 20390                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20391  017A96  52E5               	movf	postdec1,f,c
 20392  017A98  52E5               	movf	postdec1,f,c
 20393  017A9A  0012               	return		;funcret
 20394  017A9C                     __end_of_PWM8_LoadDutyValue:
 20395                           	opt callstack 0
 20396                           
 20397 ;; *************** function _help_button *****************
 20398 ;; Defined at:
 20399 ;;		line 26 in file "mconfig.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;		None
 20402 ;; Auto vars:     Size  Location     Type
 20403 ;;		None
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  1  [STACK] _Bool 
 20406 ;; Registers used:
 20407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/2
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20417 ;;Total ram usage:        0 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:    7
 20420 ;; This function calls:
 20421 ;;		_StartTimer
 20422 ;;		_TimerDone
 20423 ;; This function is called by:
 20424 ;;		_check_help
 20425 ;; This function uses a reentrant model
 20426 ;;
 20427                           
 20428                           	psect	text75
 20429  017B18                     __ptext75:
 20430                           	opt callstack 0
 20431  017B18                     _help_button:
 20432                           	opt callstack 22
 20433                           
 20434                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20435                           
 20436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20437                           ;incstack = 0
 20438  017B18  B0CB               	btfsc	203,0,c	;volatile
 20439  017B1A  D00C               	goto	l1544
 20440                           
 20441                           ;mconfig.c: 29:   V.help = 1;
 20442  017B1C  0102               	movlb	2	; () banked
 20443  017B1E  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 20444                           
 20445                           ; BSR set to: 2
 20446                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20447  017B20  0E08               	movlw	8
 20448  017B22  6EE6               	movwf	postinc1,c
 20449  017B24  EC21  F0C0         	call	_TimerDone	;wreg free
 20450  017B28  5035               	movf	btemp^0,w,c
 20451  017B2A  B4D8               	btfsc	status,2,c
 20452  017B2C  D003               	goto	l1544
 20453                           
 20454                           ;mconfig.c: 31:    return 1;
 20455  017B2E  0E01               	movlw	1
 20456  017B30  6E35               	movwf	btemp^0,c
 20457  017B32  0012               	return	
 20458  017B34                     l1544:
 20459                           
 20460                           ;mconfig.c: 34:  if (!V.help)
 20461  017B34  0102               	movlb	2	; () banked
 20462  017B36  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 20463  017B38  D008               	goto	l8238
 20464                           
 20465                           ; BSR set to: 2
 20466                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20467  017B3A  0E2C               	movlw	44
 20468  017B3C  6EE6               	movwf	postinc1,c
 20469  017B3E  0E01               	movlw	1
 20470  017B40  6EE6               	movwf	postinc1,c
 20471  017B42  0E08               	movlw	8
 20472  017B44  6EE6               	movwf	postinc1,c
 20473  017B46  EC6E  F0BD         	call	_StartTimer	;wreg free
 20474  017B4A                     l8238:
 20475                           
 20476                           ;mconfig.c: 37:  return 0;
 20477  017B4A  0E00               	movlw	0
 20478  017B4C  6E35               	movwf	btemp^0,c
 20479                           
 20480                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20481  017B4E  0012               	return		;funcret
 20482  017B50                     __end_of_help_button:
 20483                           	opt callstack 0
 20484                           
 20485 ;; *************** function _TimerDone *****************
 20486 ;; Defined at:
 20487 ;;		line 20 in file "timers.c"
 20488 ;; Parameters:    Size  Location     Type
 20489 ;;  timer           1  [STACK] const unsigned char 
 20490 ;; Auto vars:     Size  Location     Type
 20491 ;;		None
 20492 ;; Return value:  Size  Location     Type
 20493 ;;                  1  [STACK] _Bool 
 20494 ;; Registers used:
 20495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20496 ;; Tracked objects:
 20497 ;;		On entry : 0/4
 20498 ;;		On exit  : 0/0
 20499 ;;		Unchanged: 0/0
 20500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20505 ;;Total ram usage:        0 bytes
 20506 ;; Hardware stack levels used:    1
 20507 ;; Hardware stack levels required when called:    6
 20508 ;; This function calls:
 20509 ;;		Nothing
 20510 ;; This function is called by:
 20511 ;;		_main
 20512 ;;		_WaitMs
 20513 ;;		_help_button
 20514 ;;		_check_help
 20515 ;;		_set_display_info
 20516 ;; This function uses a reentrant model
 20517 ;;
 20518                           
 20519                           	psect	text76
 20520  018042                     __ptext76:
 20521                           	opt callstack 0
 20522  018042                     _TimerDone:
 20523                           	opt callstack 23
 20524                           
 20525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20526                           ;incstack = 0
 20527  018042  0004               	clrwdt		;# 
 20528                           
 20529                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20530                           ;stkvar	_timer @ sp[(0)+-1]
 20531  018044  0EFF               	movlw	-1
 20532  018046  50E3               	movf	plusw1,w,c
 20533  018048  0D02               	mullw	2
 20534  01804A  50F3               	movf	243,w,c
 20535  01804C  0F82               	addlw	low _tickCount
 20536  01804E  6ED9               	movwf	fsr2l,c
 20537  018050  6ADA               	clrf	fsr2h,c
 20538  018052  50DE               	movf	postinc2,w,c
 20539  018054  10DE               	iorwf	postinc2,w,c
 20540  018056  A4D8               	btfss	status,2,c
 20541  018058  D002               	goto	l7692
 20542                           
 20543                           ;timers.c: 24:   return 1;
 20544  01805A  0E01               	movlw	1
 20545  01805C  D001               	goto	L18
 20546  01805E                     l7692:
 20547                           
 20548                           ;timers.c: 26:  return 0;
 20549  01805E  0E00               	movlw	0
 20550  018060                     L18:
 20551  018060  6E35               	movwf	btemp^0,c
 20552                           
 20553                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20554  018062  52E5               	movf	postdec1,f,c
 20555  018064  0012               	return		;funcret
 20556  018066                     __end_of_TimerDone:
 20557                           	opt callstack 0
 20558                           
 20559 ;; *************** function _StartTimer *****************
 20560 ;; Defined at:
 20561 ;;		line 12 in file "timers.c"
 20562 ;; Parameters:    Size  Location     Type
 20563 ;;  timer           1  [STACK] const unsigned char 
 20564 ;;  count           2  [STACK] const unsigned short 
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1  [STACK] void 
 20569 ;; Registers used:
 20570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/4
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;Total ram usage:        0 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    6
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_main
 20587 ;;		_WaitMs
 20588 ;;		_help_button
 20589 ;;		_check_help
 20590 ;; This function uses a reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text77
 20594  017ADC                     __ptext77:
 20595                           	opt callstack 0
 20596  017ADC                     _StartTimer:
 20597                           	opt callstack 21
 20598                           
 20599                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20600                           ;stkvar	_count @ sp[(0)+-3]
 20601                           
 20602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20603                           ;incstack = 0
 20604  017ADC  0EFD               	movlw	-3
 20605  017ADE  006F FF8C  F03F    	movff	plusw1,btemp+10
 20606  017AE4  0EFE               	movlw	-2
 20607  017AE6  006F FF8C  F040    	movff	plusw1,btemp+11
 20608  017AEC  90D8               	bcf	status,0,c
 20609  017AEE  343F               	rlcf	(btemp+10)^0,w,c
 20610  017AF0  6E3D               	movwf	(btemp+8)^0,c
 20611  017AF2  3440               	rlcf	(btemp+11)^0,w,c
 20612  017AF4  6E3E               	movwf	(btemp+9)^0,c
 20613                           
 20614                           ;stkvar	_timer @ sp[(0)+-1]
 20615  017AF6  0EFF               	movlw	-1
 20616  017AF8  50E3               	movf	plusw1,w,c
 20617  017AFA  0D02               	mullw	2
 20618  017AFC  50F3               	movf	243,w,c
 20619  017AFE  0F82               	addlw	low _tickCount
 20620  017B00  6ED9               	movwf	fsr2l,c
 20621  017B02  6ADA               	clrf	fsr2h,c
 20622  017B04  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20623  017B0A  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20624                           
 20625                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20626  017B10  52E5               	movf	postdec1,f,c
 20627  017B12  52E5               	movf	postdec1,f,c
 20628  017B14  52E5               	movf	postdec1,f,c
 20629  017B16  0012               	return		;funcret
 20630  017B18                     __end_of_StartTimer:
 20631                           	opt callstack 0
 20632                           
 20633 ;; *************** function _display_info *****************
 20634 ;; Defined at:
 20635 ;;		line 187 in file "mconfig.c"
 20636 ;; Parameters:    Size  Location     Type
 20637 ;;		None
 20638 ;; Auto vars:     Size  Location     Type
 20639 ;;		None
 20640 ;; Return value:  Size  Location     Type
 20641 ;;                  1  [STACK] enum E16501
 20642 ;; Registers used:
 20643 ;;		btemp
 20644 ;; Tracked objects:
 20645 ;;		On entry : 0/2
 20646 ;;		On exit  : 0/0
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20653 ;;Total ram usage:        0 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; Hardware stack levels required when called:    6
 20656 ;; This function calls:
 20657 ;;		Nothing
 20658 ;; This function is called by:
 20659 ;;		_check_help
 20660 ;; This function uses a reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text78
 20664  018362                     __ptext78:
 20665                           	opt callstack 0
 20666  018362                     _display_info:
 20667                           	opt callstack 23
 20668                           
 20669                           ;mconfig.c: 189:  return V.response.info;
 20670                           
 20671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20672                           ;incstack = 0
 20673  018362  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 20674                           
 20675                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20676  018368  0012               	return		;funcret
 20677  01836A                     __end_of_display_info:
 20678                           	opt callstack 0
 20679                           
 20680 ;; *************** function _display_help *****************
 20681 ;; Defined at:
 20682 ;;		line 192 in file "mconfig.c"
 20683 ;; Parameters:    Size  Location     Type
 20684 ;;		None
 20685 ;; Auto vars:     Size  Location     Type
 20686 ;;		None
 20687 ;; Return value:  Size  Location     Type
 20688 ;;                  1  [STACK] enum E16501
 20689 ;; Registers used:
 20690 ;;		btemp
 20691 ;; Tracked objects:
 20692 ;;		On entry : 3F/2
 20693 ;;		On exit  : 0/0
 20694 ;;		Unchanged: 0/0
 20695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20700 ;;Total ram usage:        0 bytes
 20701 ;; Hardware stack levels used:    1
 20702 ;; Hardware stack levels required when called:    6
 20703 ;; This function calls:
 20704 ;;		Nothing
 20705 ;; This function is called by:
 20706 ;;		_check_help
 20707 ;; This function uses a reentrant model
 20708 ;;
 20709                           
 20710                           	psect	text79
 20711  01836A                     __ptext79:
 20712                           	opt callstack 0
 20713  01836A                     _display_help:
 20714                           	opt callstack 23
 20715                           
 20716                           ;mconfig.c: 194:  return V.response.help_temp;
 20717                           
 20718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20719                           ;incstack = 0
 20720  01836A  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 20721                           
 20722                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20723  018370  0012               	return		;funcret
 20724  018372                     __end_of_display_help:
 20725                           	opt callstack 0
 20726                           
 20727 ;; *************** function _check_adc_scan *****************
 20728 ;; Defined at:
 20729 ;;		line 47 in file "daq.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;		None
 20732 ;; Auto vars:     Size  Location     Type
 20733 ;;		None
 20734 ;; Return value:  Size  Location     Type
 20735 ;;                  1  [STACK] _Bool 
 20736 ;; Registers used:
 20737 ;;		btemp
 20738 ;; Tracked objects:
 20739 ;;		On entry : 0/4
 20740 ;;		On exit  : 0/0
 20741 ;;		Unchanged: 0/0
 20742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20747 ;;Total ram usage:        0 bytes
 20748 ;; Hardware stack levels used:    1
 20749 ;; Hardware stack levels required when called:    6
 20750 ;; This function calls:
 20751 ;;		Nothing
 20752 ;; This function is called by:
 20753 ;;		_main
 20754 ;; This function uses a reentrant model
 20755 ;;
 20756                           
 20757                           	psect	text80
 20758  018372                     __ptext80:
 20759                           	opt callstack 0
 20760  018372                     _check_adc_scan:
 20761                           	opt callstack 24
 20762                           
 20763                           ;daq.c: 49:  return R.done;
 20764                           
 20765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20766                           ;incstack = 0
 20767  018372  0060  F204  F035   	movff	_R+33,btemp	;volatile
 20768                           
 20769                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20770  018378  0012               	return		;funcret
 20771  01837A                     __end_of_check_adc_scan:
 20772                           	opt callstack 0
 20773                           
 20774 ;; *************** function _SYSTEM_Initialize *****************
 20775 ;; Defined at:
 20776 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1  [STACK] void 
 20783 ;; Registers used:
 20784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 3F/3C
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20794 ;;Total ram usage:        0 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; Hardware stack levels required when called:    8
 20797 ;; This function calls:
 20798 ;;		_ADCC_Initialize
 20799 ;;		_CLKREF_Initialize
 20800 ;;		_DMA1_Initialize
 20801 ;;		_DMA2_Initialize
 20802 ;;		_EXT_INT_Initialize
 20803 ;;		_FVR_Initialize
 20804 ;;		_INTERRUPT_Initialize
 20805 ;;		_OSCILLATOR_Initialize
 20806 ;;		_PIN_MANAGER_Initialize
 20807 ;;		_PMD_Initialize
 20808 ;;		_PWM8_Initialize
 20809 ;;		_SPI1_Initialize
 20810 ;;		_TMR2_Initialize
 20811 ;;		_TMR5_Initialize
 20812 ;;		_TMR6_Initialize
 20813 ;;		_UART1_Initialize
 20814 ;;		_UART2_Initialize
 20815 ;; This function is called by:
 20816 ;;		_main
 20817 ;; This function uses a reentrant model
 20818 ;;
 20819                           
 20820                           	psect	text81
 20821  017944                     __ptext81:
 20822                           	opt callstack 0
 20823  017944                     _SYSTEM_Initialize:
 20824                           	opt callstack 22
 20825                           
 20826                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20827                           
 20828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20829                           ;incstack = 0
 20830  017944  EC66  F0BA         	call	_INTERRUPT_Initialize	;wreg free
 20831                           
 20832                           ; BSR set to: 57
 20833                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20834  017948  EC5A  F0C1         	call	_PMD_Initialize	;wreg free
 20835                           
 20836                           ; BSR set to: 57
 20837                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20838  01794C  ECB8  F0B8         	call	_PIN_MANAGER_Initialize	;wreg free
 20839                           
 20840                           ; BSR set to: 58
 20841                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20842  017950  EC4F  F0C1         	call	_OSCILLATOR_Initialize	;wreg free
 20843                           
 20844                           ; BSR set to: 57
 20845                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20846  017954  ECBD  F0C1         	call	_FVR_Initialize	;wreg free
 20847                           
 20848                           ; BSR set to: 62
 20849                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20850  017958  ECFD  F0B9         	call	_ADCC_Initialize	;wreg free
 20851                           
 20852                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20853  01795C  EC44  F0C1         	call	_PWM8_Initialize	;wreg free
 20854                           
 20855                           ; BSR set to: 63
 20856                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20857  017960  EC21  F0C1         	call	_TMR2_Initialize	;wreg free
 20858                           
 20859                           ; BSR set to: 57
 20860                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20861  017964  EC14  F0BE         	call	_EXT_INT_Initialize	;wreg free
 20862                           
 20863                           ; BSR set to: 57
 20864                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20865  017968  ECB9  F0BE         	call	_TMR6_Initialize	;wreg free
 20866                           
 20867                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20868  01796C  ECC5  F0BC         	call	_TMR5_Initialize	;wreg free
 20869                           
 20870                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20871  017970  ECCB  F0BA         	call	_UART1_Initialize	;wreg free
 20872                           
 20873                           ; BSR set to: 57
 20874                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20875  017974  EC2E  F0BB         	call	_UART2_Initialize	;wreg free
 20876                           
 20877                           ; BSR set to: 57
 20878                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20879  017978  EC39  F0C1         	call	_SPI1_Initialize	;wreg free
 20880                           
 20881                           ; BSR set to: 61
 20882                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20883  01797C  ECB9  F0BB         	call	_DMA2_Initialize	;wreg free
 20884                           
 20885                           ; BSR set to: 59
 20886                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20887  017980  ECC8  F0B9         	call	_DMA1_Initialize	;wreg free
 20888                           
 20889                           ; BSR set to: 59
 20890                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20891  017984  EC9B  F0C1         	call	_CLKREF_Initialize	;wreg free
 20892                           
 20893                           ; BSR set to: 60
 20894                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20895  017988  0012               	return		;funcret
 20896  01798A                     __end_of_SYSTEM_Initialize:
 20897                           	opt callstack 0
 20898                           
 20899 ;; *************** function _UART2_Initialize *****************
 20900 ;; Defined at:
 20901 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20902 ;; Parameters:    Size  Location     Type
 20903 ;;		None
 20904 ;; Auto vars:     Size  Location     Type
 20905 ;;		None
 20906 ;; Return value:  Size  Location     Type
 20907 ;;                  1  [STACK] void 
 20908 ;; Registers used:
 20909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20910 ;; Tracked objects:
 20911 ;;		On entry : 3F/39
 20912 ;;		On exit  : 3F/39
 20913 ;;		Unchanged: 0/0
 20914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;Total ram usage:        0 bytes
 20920 ;; Hardware stack levels used:    1
 20921 ;; Hardware stack levels required when called:    7
 20922 ;; This function calls:
 20923 ;;		_UART2_SetRxInterruptHandler
 20924 ;;		_UART2_SetTxInterruptHandler
 20925 ;; This function is called by:
 20926 ;;		_SYSTEM_Initialize
 20927 ;; This function uses a reentrant model
 20928 ;;
 20929                           
 20930                           	psect	text82
 20931  01765C                     __ptext82:
 20932                           	opt callstack 0
 20933  01765C                     _UART2_Initialize:
 20934                           	opt callstack 22
 20935                           
 20936                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 20937                           
 20938                           ; BSR set to: 60
 20939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20940                           ;incstack = 0
 20941  01765C  0139               	movlb	57	; () banked
 20942  01765E  9596               	bcf	150,2,b	;volatile
 20943                           
 20944                           ; BSR set to: 57
 20945                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 20946  017660  0E86               	movlw	low _UART2_Receive_ISR
 20947  017662  6EE6               	movwf	postinc1,c
 20948  017664  0E81               	movlw	high _UART2_Receive_ISR
 20949  017666  6EE6               	movwf	postinc1,c
 20950  017668  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 20951  01766A  6EE6               	movwf	postinc1,c
 20952  01766C  EC1E  F0BF         	call	_UART2_SetRxInterruptHandler	;wreg free
 20953                           
 20954                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 20955  017670  0139               	movlb	57	; () banked
 20956  017672  9796               	bcf	150,3,b	;volatile
 20957                           
 20958                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 20959  017674  0E46               	movlw	low _UART2_Transmit_ISR
 20960  017676  6EE6               	movwf	postinc1,c
 20961  017678  0E7D               	movlw	high _UART2_Transmit_ISR
 20962  01767A  6EE6               	movwf	postinc1,c
 20963  01767C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 20964  01767E  6EE6               	movwf	postinc1,c
 20965  017680  EC0A  F0BF         	call	_UART2_SetTxInterruptHandler	;wreg free
 20966                           
 20967                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 20968  017684  013D               	movlb	61	; () banked
 20969  017686  6BD4               	clrf	212,b	;volatile
 20970                           
 20971                           ; BSR set to: 61
 20972                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 20973  017688  6BD6               	clrf	214,b	;volatile
 20974                           
 20975                           ; BSR set to: 61
 20976                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 20977  01768A  6BD8               	clrf	216,b	;volatile
 20978                           
 20979                           ; BSR set to: 61
 20980                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 20981  01768C  0EB0               	movlw	176
 20982  01768E  6FDA               	movwf	218,b	;volatile
 20983                           
 20984                           ; BSR set to: 61
 20985                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 20986  017690  0E80               	movlw	128
 20987  017692  6FDB               	movwf	219,b	;volatile
 20988                           
 20989                           ; BSR set to: 61
 20990                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 20991  017694  6BDC               	clrf	220,b	;volatile
 20992                           
 20993                           ; BSR set to: 61
 20994                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 20995  017696  0E82               	movlw	130
 20996  017698  6FDD               	movwf	221,b	;volatile
 20997                           
 20998                           ; BSR set to: 61
 20999                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21000  01769A  0E06               	movlw	6
 21001  01769C  6FDE               	movwf	222,b	;volatile
 21002                           
 21003                           ; BSR set to: 61
 21004                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21005  01769E  6BDF               	clrf	223,b	;volatile
 21006                           
 21007                           ; BSR set to: 61
 21008                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21009  0176A0  6BE0               	clrf	224,b	;volatile
 21010                           
 21011                           ; BSR set to: 61
 21012                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21013  0176A2  6BE1               	clrf	225,b	;volatile
 21014                           
 21015                           ; BSR set to: 61
 21016                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21017  0176A4  6BE2               	clrf	226,b	;volatile
 21018                           
 21019                           ; BSR set to: 61
 21020                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21021  0176A6  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 21022                           
 21023                           ; BSR set to: 61
 21024                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21025  0176A8  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 21026                           
 21027                           ; BSR set to: 61
 21028                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21029  0176AA  0E40               	movlw	64
 21030  0176AC  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21031                           
 21032                           ; BSR set to: 61
 21033                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21034  0176AE  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 21035                           
 21036                           ; BSR set to: 61
 21037                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21038  0176B0  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 21039                           
 21040                           ; BSR set to: 61
 21041                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21042  0176B2  6A29               	clrf	_uart2RxCount^0,c	;volatile
 21043                           
 21044                           ; BSR set to: 61
 21045                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21046  0176B4  0139               	movlb	57	; () banked
 21047  0176B6  8596               	bsf	150,2,b	;volatile
 21048                           
 21049                           ; BSR set to: 57
 21050                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21051  0176B8  0012               	return		;funcret
 21052  0176BA                     __end_of_UART2_Initialize:
 21053                           	opt callstack 0
 21054                           
 21055 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21056 ;; Defined at:
 21057 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21060 ;;		 -> UART2_Transmit_ISR(1), 
 21061 ;; Auto vars:     Size  Location     Type
 21062 ;;		None
 21063 ;; Return value:  Size  Location     Type
 21064 ;;                  1  [STACK] void 
 21065 ;; Registers used:
 21066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21067 ;; Tracked objects:
 21068 ;;		On entry : 3F/39
 21069 ;;		On exit  : 0/0
 21070 ;;		Unchanged: 0/0
 21071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21076 ;;Total ram usage:        0 bytes
 21077 ;; Hardware stack levels used:    1
 21078 ;; Hardware stack levels required when called:    6
 21079 ;; This function calls:
 21080 ;;		Nothing
 21081 ;; This function is called by:
 21082 ;;		_UART2_Initialize
 21083 ;; This function uses a reentrant model
 21084 ;;
 21085                           
 21086                           	psect	text83
 21087  017E14                     __ptext83:
 21088                           	opt callstack 0
 21089  017E14                     _UART2_SetTxInterruptHandler:
 21090                           	opt callstack 22
 21091                           
 21092                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21093                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21094                           
 21095                           ; BSR set to: 57
 21096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21097                           ;incstack = 0
 21098  017E14  50E1               	movf	fsr1l,w,c
 21099  017E16  0FFD               	addlw	-3
 21100  017E18  6ED9               	movwf	fsr2l,c
 21101  017E1A  50E2               	movf	fsr1h,w,c
 21102  017E1C  6EDA               	movwf	fsr2h,c
 21103  017E1E  0EFF               	movlw	255
 21104  017E20  22DA               	addwfc	fsr2h,f,c
 21105  017E22  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 21106  017E28  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 21107  017E2E  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 21108                           
 21109                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21110  017E34  52E5               	movf	postdec1,f,c
 21111  017E36  52E5               	movf	postdec1,f,c
 21112  017E38  52E5               	movf	postdec1,f,c
 21113  017E3A  0012               	return		;funcret
 21114  017E3C                     __end_of_UART2_SetTxInterruptHandler:
 21115                           	opt callstack 0
 21116                           
 21117 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21118 ;; Defined at:
 21119 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21120 ;; Parameters:    Size  Location     Type
 21121 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21122 ;;		 -> UART2_Receive_ISR(1), 
 21123 ;; Auto vars:     Size  Location     Type
 21124 ;;		None
 21125 ;; Return value:  Size  Location     Type
 21126 ;;                  1  [STACK] void 
 21127 ;; Registers used:
 21128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21129 ;; Tracked objects:
 21130 ;;		On entry : 3F/39
 21131 ;;		On exit  : 0/0
 21132 ;;		Unchanged: 0/0
 21133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21138 ;;Total ram usage:        0 bytes
 21139 ;; Hardware stack levels used:    1
 21140 ;; Hardware stack levels required when called:    6
 21141 ;; This function calls:
 21142 ;;		Nothing
 21143 ;; This function is called by:
 21144 ;;		_UART2_Initialize
 21145 ;; This function uses a reentrant model
 21146 ;;
 21147                           
 21148                           	psect	text84
 21149  017E3C                     __ptext84:
 21150                           	opt callstack 0
 21151  017E3C                     _UART2_SetRxInterruptHandler:
 21152                           	opt callstack 22
 21153                           
 21154                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21155                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21156                           
 21157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21158                           ;incstack = 0
 21159  017E3C  50E1               	movf	fsr1l,w,c
 21160  017E3E  0FFD               	addlw	-3
 21161  017E40  6ED9               	movwf	fsr2l,c
 21162  017E42  50E2               	movf	fsr1h,w,c
 21163  017E44  6EDA               	movwf	fsr2h,c
 21164  017E46  0EFF               	movlw	255
 21165  017E48  22DA               	addwfc	fsr2h,f,c
 21166  017E4A  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 21167  017E50  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 21168  017E56  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 21169                           
 21170                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21171  017E5C  52E5               	movf	postdec1,f,c
 21172  017E5E  52E5               	movf	postdec1,f,c
 21173  017E60  52E5               	movf	postdec1,f,c
 21174  017E62  0012               	return		;funcret
 21175  017E64                     __end_of_UART2_SetRxInterruptHandler:
 21176                           	opt callstack 0
 21177                           
 21178 ;; *************** function _UART1_Initialize *****************
 21179 ;; Defined at:
 21180 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21181 ;; Parameters:    Size  Location     Type
 21182 ;;		None
 21183 ;; Auto vars:     Size  Location     Type
 21184 ;;		None
 21185 ;; Return value:  Size  Location     Type
 21186 ;;                  1  [STACK] void 
 21187 ;; Registers used:
 21188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21189 ;; Tracked objects:
 21190 ;;		On entry : 0/39
 21191 ;;		On exit  : 3F/39
 21192 ;;		Unchanged: 0/0
 21193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21198 ;;Total ram usage:        0 bytes
 21199 ;; Hardware stack levels used:    1
 21200 ;; Hardware stack levels required when called:    7
 21201 ;; This function calls:
 21202 ;;		_UART1_SetRxInterruptHandler
 21203 ;;		_UART1_SetTxInterruptHandler
 21204 ;; This function is called by:
 21205 ;;		_SYSTEM_Initialize
 21206 ;; This function uses a reentrant model
 21207 ;;
 21208                           
 21209                           	psect	text85
 21210  017596                     __ptext85:
 21211                           	opt callstack 0
 21212  017596                     _UART1_Initialize:
 21213                           	opt callstack 22
 21214                           
 21215                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21216                           
 21217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21218                           ;incstack = 0
 21219  017596  0139               	movlb	57	; () banked
 21220  017598  9793               	bcf	147,3,b	;volatile
 21221                           
 21222                           ; BSR set to: 57
 21223                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21224  01759A  0E68               	movlw	low _UART1_Receive_ISR
 21225  01759C  6EE6               	movwf	postinc1,c
 21226  01759E  0E81               	movlw	high _UART1_Receive_ISR
 21227  0175A0  6EE6               	movwf	postinc1,c
 21228  0175A2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21229  0175A4  6EE6               	movwf	postinc1,c
 21230  0175A6  EC46  F0BF         	call	_UART1_SetRxInterruptHandler	;wreg free
 21231                           
 21232                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21233  0175AA  0139               	movlb	57	; () banked
 21234  0175AC  9993               	bcf	147,4,b	;volatile
 21235                           
 21236                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21237  0175AE  0E1A               	movlw	low _UART1_Transmit_ISR
 21238  0175B0  6EE6               	movwf	postinc1,c
 21239  0175B2  0E7D               	movlw	high _UART1_Transmit_ISR
 21240  0175B4  6EE6               	movwf	postinc1,c
 21241  0175B6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21242  0175B8  6EE6               	movwf	postinc1,c
 21243  0175BA  EC32  F0BF         	call	_UART1_SetTxInterruptHandler	;wreg free
 21244                           
 21245                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21246  0175BE  013D               	movlb	61	; () banked
 21247  0175C0  6BEC               	clrf	236,b	;volatile
 21248                           
 21249                           ; BSR set to: 61
 21250                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21251  0175C2  6BED               	clrf	237,b	;volatile
 21252                           
 21253                           ; BSR set to: 61
 21254                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21255  0175C4  6BEE               	clrf	238,b	;volatile
 21256                           
 21257                           ; BSR set to: 61
 21258                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21259  0175C6  6BEF               	clrf	239,b	;volatile
 21260                           
 21261                           ; BSR set to: 61
 21262                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21263  0175C8  6BF0               	clrf	240,b	;volatile
 21264                           
 21265                           ; BSR set to: 61
 21266                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21267  0175CA  6BF1               	clrf	241,b	;volatile
 21268                           
 21269                           ; BSR set to: 61
 21270                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21271  0175CC  0EB0               	movlw	176
 21272  0175CE  6FF2               	movwf	242,b	;volatile
 21273                           
 21274                           ; BSR set to: 61
 21275                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21276  0175D0  0E80               	movlw	128
 21277  0175D2  6FF3               	movwf	243,b	;volatile
 21278                           
 21279                           ; BSR set to: 61
 21280                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21281  0175D4  6BF4               	clrf	244,b	;volatile
 21282                           
 21283                           ; BSR set to: 61
 21284                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21285  0175D6  0E82               	movlw	130
 21286  0175D8  6FF5               	movwf	245,b	;volatile
 21287                           
 21288                           ; BSR set to: 61
 21289                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21290  0175DA  0E06               	movlw	6
 21291  0175DC  6FF6               	movwf	246,b	;volatile
 21292                           
 21293                           ; BSR set to: 61
 21294                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21295  0175DE  6BF7               	clrf	247,b	;volatile
 21296                           
 21297                           ; BSR set to: 61
 21298                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21299  0175E0  6BF8               	clrf	248,b	;volatile
 21300                           
 21301                           ; BSR set to: 61
 21302                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21303  0175E2  6BF9               	clrf	249,b	;volatile
 21304                           
 21305                           ; BSR set to: 61
 21306                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21307  0175E4  6BFA               	clrf	250,b	;volatile
 21308                           
 21309                           ; BSR set to: 61
 21310                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21311  0175E6  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21312                           
 21313                           ; BSR set to: 61
 21314                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21315  0175E8  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21316                           
 21317                           ; BSR set to: 61
 21318                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21319  0175EA  0E40               	movlw	64
 21320  0175EC  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21321                           
 21322                           ; BSR set to: 61
 21323                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21324  0175EE  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21325                           
 21326                           ; BSR set to: 61
 21327                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21328  0175F0  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21329                           
 21330                           ; BSR set to: 61
 21331                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21332  0175F2  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21333                           
 21334                           ; BSR set to: 61
 21335                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21336  0175F4  0139               	movlb	57	; () banked
 21337  0175F6  8793               	bsf	147,3,b	;volatile
 21338                           
 21339                           ; BSR set to: 57
 21340                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21341  0175F8  0012               	return		;funcret
 21342  0175FA                     __end_of_UART1_Initialize:
 21343                           	opt callstack 0
 21344                           
 21345 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21346 ;; Defined at:
 21347 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21348 ;; Parameters:    Size  Location     Type
 21349 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21350 ;;		 -> UART1_Transmit_ISR(1), 
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;		None
 21353 ;; Return value:  Size  Location     Type
 21354 ;;                  1  [STACK] void 
 21355 ;; Registers used:
 21356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21357 ;; Tracked objects:
 21358 ;;		On entry : 3F/39
 21359 ;;		On exit  : 0/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21366 ;;Total ram usage:        0 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    6
 21369 ;; This function calls:
 21370 ;;		Nothing
 21371 ;; This function is called by:
 21372 ;;		_UART1_Initialize
 21373 ;; This function uses a reentrant model
 21374 ;;
 21375                           
 21376                           	psect	text86
 21377  017E64                     __ptext86:
 21378                           	opt callstack 0
 21379  017E64                     _UART1_SetTxInterruptHandler:
 21380                           	opt callstack 22
 21381                           
 21382                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21383                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21384                           
 21385                           ; BSR set to: 57
 21386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21387                           ;incstack = 0
 21388  017E64  50E1               	movf	fsr1l,w,c
 21389  017E66  0FFD               	addlw	-3
 21390  017E68  6ED9               	movwf	fsr2l,c
 21391  017E6A  50E2               	movf	fsr1h,w,c
 21392  017E6C  6EDA               	movwf	fsr2h,c
 21393  017E6E  0EFF               	movlw	255
 21394  017E70  22DA               	addwfc	fsr2h,f,c
 21395  017E72  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21396  017E78  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21397  017E7E  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21398                           
 21399                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21400  017E84  52E5               	movf	postdec1,f,c
 21401  017E86  52E5               	movf	postdec1,f,c
 21402  017E88  52E5               	movf	postdec1,f,c
 21403  017E8A  0012               	return		;funcret
 21404  017E8C                     __end_of_UART1_SetTxInterruptHandler:
 21405                           	opt callstack 0
 21406                           
 21407 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21408 ;; Defined at:
 21409 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21410 ;; Parameters:    Size  Location     Type
 21411 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21412 ;;		 -> UART1_Receive_ISR(1), 
 21413 ;; Auto vars:     Size  Location     Type
 21414 ;;		None
 21415 ;; Return value:  Size  Location     Type
 21416 ;;                  1  [STACK] void 
 21417 ;; Registers used:
 21418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21419 ;; Tracked objects:
 21420 ;;		On entry : 3F/39
 21421 ;;		On exit  : 0/0
 21422 ;;		Unchanged: 0/0
 21423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21428 ;;Total ram usage:        0 bytes
 21429 ;; Hardware stack levels used:    1
 21430 ;; Hardware stack levels required when called:    6
 21431 ;; This function calls:
 21432 ;;		Nothing
 21433 ;; This function is called by:
 21434 ;;		_UART1_Initialize
 21435 ;; This function uses a reentrant model
 21436 ;;
 21437                           
 21438                           	psect	text87
 21439  017E8C                     __ptext87:
 21440                           	opt callstack 0
 21441  017E8C                     _UART1_SetRxInterruptHandler:
 21442                           	opt callstack 22
 21443                           
 21444                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21445                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21446                           
 21447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21448                           ;incstack = 0
 21449  017E8C  50E1               	movf	fsr1l,w,c
 21450  017E8E  0FFD               	addlw	-3
 21451  017E90  6ED9               	movwf	fsr2l,c
 21452  017E92  50E2               	movf	fsr1h,w,c
 21453  017E94  6EDA               	movwf	fsr2h,c
 21454  017E96  0EFF               	movlw	255
 21455  017E98  22DA               	addwfc	fsr2h,f,c
 21456  017E9A  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21457  017EA0  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21458  017EA6  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21459                           
 21460                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21461  017EAC  52E5               	movf	postdec1,f,c
 21462  017EAE  52E5               	movf	postdec1,f,c
 21463  017EB0  52E5               	movf	postdec1,f,c
 21464  017EB2  0012               	return		;funcret
 21465  017EB4                     __end_of_UART1_SetRxInterruptHandler:
 21466                           	opt callstack 0
 21467                           
 21468 ;; *************** function _TMR6_Initialize *****************
 21469 ;; Defined at:
 21470 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21471 ;; Parameters:    Size  Location     Type
 21472 ;;		None
 21473 ;; Auto vars:     Size  Location     Type
 21474 ;;		None
 21475 ;; Return value:  Size  Location     Type
 21476 ;;                  1  [STACK] void 
 21477 ;; Registers used:
 21478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21479 ;; Tracked objects:
 21480 ;;		On entry : 3F/39
 21481 ;;		On exit  : 0/0
 21482 ;;		Unchanged: 0/0
 21483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21488 ;;Total ram usage:        0 bytes
 21489 ;; Hardware stack levels used:    1
 21490 ;; Hardware stack levels required when called:    7
 21491 ;; This function calls:
 21492 ;;		_TMR6_SetInterruptHandler
 21493 ;; This function is called by:
 21494 ;;		_SYSTEM_Initialize
 21495 ;; This function uses a reentrant model
 21496 ;;
 21497                           
 21498                           	psect	text88
 21499  017D72                     __ptext88:
 21500                           	opt callstack 0
 21501  017D72                     _TMR6_Initialize:
 21502                           	opt callstack 22
 21503                           
 21504                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21505                           
 21506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21507                           ;incstack = 0
 21508  017D72  0E01               	movlw	1
 21509  017D74  6E96               	movwf	150,c	;volatile
 21510                           
 21511                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21512  017D76  6A95               	clrf	149,c	;volatile
 21513                           
 21514                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21515  017D78  6A97               	clrf	151,c	;volatile
 21516                           
 21517                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21518  017D7A  0E7C               	movlw	124
 21519  017D7C  6E93               	movwf	147,c	;volatile
 21520                           
 21521                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21522  017D7E  6A92               	clrf	146,c	;volatile
 21523                           
 21524                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21525  017D80  0139               	movlb	57	; () banked
 21526  017D82  91A9               	bcf	169,0,b	;volatile
 21527                           
 21528                           ; BSR set to: 57
 21529                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21530  017D84  8199               	bsf	153,0,b	;volatile
 21531                           
 21532                           ; BSR set to: 57
 21533                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21534  017D86  0ED0               	movlw	low _TMR6_DefaultInterruptHandler
 21535  017D88  6EE6               	movwf	postinc1,c
 21536  017D8A  0E79               	movlw	high _TMR6_DefaultInterruptHandler
 21537  017D8C  6EE6               	movwf	postinc1,c
 21538  017D8E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21539  017D90  6EE6               	movwf	postinc1,c
 21540  017D92  EC5A  F0BF         	call	_TMR6_SetInterruptHandler	;wreg free
 21541                           
 21542                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21543  017D96  0EE0               	movlw	224
 21544  017D98  6E94               	movwf	148,c	;volatile
 21545                           
 21546                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21547  017D9A  0012               	return		;funcret
 21548  017D9C                     __end_of_TMR6_Initialize:
 21549                           	opt callstack 0
 21550                           
 21551 ;; *************** function _TMR6_SetInterruptHandler *****************
 21552 ;; Defined at:
 21553 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21554 ;; Parameters:    Size  Location     Type
 21555 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21556 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21557 ;; Auto vars:     Size  Location     Type
 21558 ;;		None
 21559 ;; Return value:  Size  Location     Type
 21560 ;;                  1  [STACK] void 
 21561 ;; Registers used:
 21562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21563 ;; Tracked objects:
 21564 ;;		On entry : 3F/39
 21565 ;;		On exit  : 0/0
 21566 ;;		Unchanged: 0/0
 21567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21572 ;;Total ram usage:        0 bytes
 21573 ;; Hardware stack levels used:    1
 21574 ;; Hardware stack levels required when called:    6
 21575 ;; This function calls:
 21576 ;;		Nothing
 21577 ;; This function is called by:
 21578 ;;		_TMR6_Initialize
 21579 ;; This function uses a reentrant model
 21580 ;;
 21581                           
 21582                           	psect	text89
 21583  017EB4                     __ptext89:
 21584                           	opt callstack 0
 21585  017EB4                     _TMR6_SetInterruptHandler:
 21586                           	opt callstack 22
 21587                           
 21588                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21589                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21590                           
 21591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21592                           ;incstack = 0
 21593  017EB4  50E1               	movf	fsr1l,w,c
 21594  017EB6  0FFD               	addlw	-3
 21595  017EB8  6ED9               	movwf	fsr2l,c
 21596  017EBA  50E2               	movf	fsr1h,w,c
 21597  017EBC  6EDA               	movwf	fsr2h,c
 21598  017EBE  0EFF               	movlw	255
 21599  017EC0  22DA               	addwfc	fsr2h,f,c
 21600  017EC2  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21601  017EC8  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21602  017ECE  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21603                           
 21604                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21605  017ED4  52E5               	movf	postdec1,f,c
 21606  017ED6  52E5               	movf	postdec1,f,c
 21607  017ED8  52E5               	movf	postdec1,f,c
 21608  017EDA  0012               	return		;funcret
 21609  017EDC                     __end_of_TMR6_SetInterruptHandler:
 21610                           	opt callstack 0
 21611                           
 21612 ;; *************** function _TMR5_Initialize *****************
 21613 ;; Defined at:
 21614 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;		None
 21617 ;; Auto vars:     Size  Location     Type
 21618 ;;		None
 21619 ;; Return value:  Size  Location     Type
 21620 ;;                  1  [STACK] void 
 21621 ;; Registers used:
 21622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21623 ;; Tracked objects:
 21624 ;;		On entry : 0/39
 21625 ;;		On exit  : 0/0
 21626 ;;		Unchanged: 0/0
 21627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21632 ;;Total ram usage:        0 bytes
 21633 ;; Hardware stack levels used:    1
 21634 ;; Hardware stack levels required when called:    7
 21635 ;; This function calls:
 21636 ;;		_TMR5_SetInterruptHandler
 21637 ;; This function is called by:
 21638 ;;		_SYSTEM_Initialize
 21639 ;; This function uses a reentrant model
 21640 ;;
 21641                           
 21642                           	psect	text90
 21643  01798A                     __ptext90:
 21644                           	opt callstack 0
 21645  01798A                     _TMR5_Initialize:
 21646                           	opt callstack 22
 21647                           
 21648                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21649                           
 21650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21651                           ;incstack = 0
 21652  01798A  6A9B               	clrf	155,c	;volatile
 21653                           
 21654                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21655  01798C  6A9C               	clrf	156,c	;volatile
 21656                           
 21657                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21658  01798E  0E01               	movlw	1
 21659  017990  6E9D               	movwf	157,c	;volatile
 21660                           
 21661                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21662  017992  0E63               	movlw	99
 21663  017994  6E99               	movwf	153,c	;volatile
 21664                           
 21665                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21666  017996  0EC0               	movlw	192
 21667  017998  6E98               	movwf	152,c	;volatile
 21668                           
 21669                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21670  01799A  5098               	movf	152,w,c	;volatile
 21671  01799C  006F FE64  F035    	movff	16281,btemp	;volatile
 21672  0179A2  6A36               	clrf	(btemp+1)^0,c
 21673  0179A4  0060  F0D4  F036   	movff	btemp,btemp+1
 21674  0179AA  6A35               	clrf	btemp^0,c
 21675  0179AC  1035               	iorwf	btemp^0,w,c
 21676  0179AE  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21677  0179B0  5036               	movf	(btemp+1)^0,w,c
 21678  0179B2  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21679                           
 21680                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21681  0179B4  0139               	movlb	57	; () banked
 21682  0179B6  9DA8               	bcf	168,6,b	;volatile
 21683                           
 21684                           ; BSR set to: 57
 21685                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21686  0179B8  8D98               	bsf	152,6,b	;volatile
 21687                           
 21688                           ; BSR set to: 57
 21689                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21690  0179BA  0EF6               	movlw	low _TMR5_DefaultInterruptHandler
 21691  0179BC  6EE6               	movwf	postinc1,c
 21692  0179BE  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 21693  0179C0  6EE6               	movwf	postinc1,c
 21694  0179C2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21695  0179C4  6EE6               	movwf	postinc1,c
 21696  0179C6  EC6E  F0BF         	call	_TMR5_SetInterruptHandler	;wreg free
 21697                           
 21698                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21699  0179CA  0E31               	movlw	49
 21700  0179CC  6E9A               	movwf	154,c	;volatile
 21701                           
 21702                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21703  0179CE  0012               	return		;funcret
 21704  0179D0                     __end_of_TMR5_Initialize:
 21705                           	opt callstack 0
 21706                           
 21707 ;; *************** function _TMR5_SetInterruptHandler *****************
 21708 ;; Defined at:
 21709 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21712 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21713 ;; Auto vars:     Size  Location     Type
 21714 ;;		None
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  1  [STACK] void 
 21717 ;; Registers used:
 21718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21719 ;; Tracked objects:
 21720 ;;		On entry : 3F/39
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21728 ;;Total ram usage:        0 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:    6
 21731 ;; This function calls:
 21732 ;;		Nothing
 21733 ;; This function is called by:
 21734 ;;		_TMR5_Initialize
 21735 ;; This function uses a reentrant model
 21736 ;;
 21737                           
 21738                           	psect	text91
 21739  017EDC                     __ptext91:
 21740                           	opt callstack 0
 21741  017EDC                     _TMR5_SetInterruptHandler:
 21742                           	opt callstack 22
 21743                           
 21744                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21745                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21746                           
 21747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21748                           ;incstack = 0
 21749  017EDC  50E1               	movf	fsr1l,w,c
 21750  017EDE  0FFD               	addlw	-3
 21751  017EE0  6ED9               	movwf	fsr2l,c
 21752  017EE2  50E2               	movf	fsr1h,w,c
 21753  017EE4  6EDA               	movwf	fsr2h,c
 21754  017EE6  0EFF               	movlw	255
 21755  017EE8  22DA               	addwfc	fsr2h,f,c
 21756  017EEA  006F FF78  F0BA    	movff	postinc2,_TMR5_InterruptHandler
 21757  017EF0  006F FF78  F0BB    	movff	postinc2,_TMR5_InterruptHandler+1
 21758  017EF6  006F FF74  F0BC    	movff	postdec2,_TMR5_InterruptHandler+2
 21759                           
 21760                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21761  017EFC  52E5               	movf	postdec1,f,c
 21762  017EFE  52E5               	movf	postdec1,f,c
 21763  017F00  52E5               	movf	postdec1,f,c
 21764  017F02  0012               	return		;funcret
 21765  017F04                     __end_of_TMR5_SetInterruptHandler:
 21766                           	opt callstack 0
 21767                           
 21768 ;; *************** function _TMR2_Initialize *****************
 21769 ;; Defined at:
 21770 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21771 ;; Parameters:    Size  Location     Type
 21772 ;;		None
 21773 ;; Auto vars:     Size  Location     Type
 21774 ;;		None
 21775 ;; Return value:  Size  Location     Type
 21776 ;;                  1  [STACK] void 
 21777 ;; Registers used:
 21778 ;;		wreg, status,2
 21779 ;; Tracked objects:
 21780 ;;		On entry : 3F/3F
 21781 ;;		On exit  : 3F/39
 21782 ;;		Unchanged: 0/0
 21783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21788 ;;Total ram usage:        0 bytes
 21789 ;; Hardware stack levels used:    1
 21790 ;; Hardware stack levels required when called:    6
 21791 ;; This function calls:
 21792 ;;		Nothing
 21793 ;; This function is called by:
 21794 ;;		_SYSTEM_Initialize
 21795 ;; This function uses a reentrant model
 21796 ;;
 21797                           
 21798                           	psect	text92
 21799  018242                     __ptext92:
 21800                           	opt callstack 0
 21801  018242                     _TMR2_Initialize:
 21802                           	opt callstack 23
 21803                           
 21804                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21805                           
 21806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21807                           ;incstack = 0
 21808  018242  0E01               	movlw	1
 21809  018244  6EAE               	movwf	174,c	;volatile
 21810                           
 21811                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21812  018246  6AAD               	clrf	173,c	;volatile
 21813                           
 21814                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21815  018248  6AAF               	clrf	175,c	;volatile
 21816                           
 21817                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21818  01824A  0E63               	movlw	99
 21819  01824C  6EAB               	movwf	171,c	;volatile
 21820                           
 21821                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21822  01824E  6AAA               	clrf	170,c	;volatile
 21823                           
 21824                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21825  018250  0139               	movlb	57	; () banked
 21826  018252  95A4               	bcf	164,2,b	;volatile
 21827                           
 21828                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21829  018254  0EC0               	movlw	192
 21830  018256  6EAC               	movwf	172,c	;volatile
 21831                           
 21832                           ; BSR set to: 57
 21833                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21834  018258  0012               	return		;funcret
 21835  01825A                     __end_of_TMR2_Initialize:
 21836                           	opt callstack 0
 21837                           
 21838 ;; *************** function _SPI1_Initialize *****************
 21839 ;; Defined at:
 21840 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21841 ;; Parameters:    Size  Location     Type
 21842 ;;		None
 21843 ;; Auto vars:     Size  Location     Type
 21844 ;;		None
 21845 ;; Return value:  Size  Location     Type
 21846 ;;                  1  [STACK] void 
 21847 ;; Registers used:
 21848 ;;		wreg, status,2
 21849 ;; Tracked objects:
 21850 ;;		On entry : 3F/39
 21851 ;;		On exit  : 3F/3D
 21852 ;;		Unchanged: 0/0
 21853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21858 ;;Total ram usage:        0 bytes
 21859 ;; Hardware stack levels used:    1
 21860 ;; Hardware stack levels required when called:    6
 21861 ;; This function calls:
 21862 ;;		Nothing
 21863 ;; This function is called by:
 21864 ;;		_SYSTEM_Initialize
 21865 ;; This function uses a reentrant model
 21866 ;;
 21867                           
 21868                           	psect	text93
 21869  018272                     __ptext93:
 21870                           	opt callstack 0
 21871  018272                     _SPI1_Initialize:
 21872                           	opt callstack 23
 21873                           
 21874                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21875                           
 21876                           ; BSR set to: 57
 21877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21878                           ;incstack = 0
 21879  018272  0E40               	movlw	64
 21880  018274  013D               	movlb	61	; () banked
 21881  018276  6F15               	movwf	21,b	;volatile
 21882                           
 21883                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21884  018278  0E03               	movlw	3
 21885  01827A  6F16               	movwf	22,b	;volatile
 21886                           
 21887                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21888  01827C  0E4F               	movlw	79
 21889  01827E  6F19               	movwf	25,b	;volatile
 21890                           
 21891                           ; BSR set to: 61
 21892                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21893  018280  6B1C               	clrf	28,b	;volatile
 21894                           
 21895                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21896  018282  0E83               	movlw	131
 21897  018284  6F14               	movwf	20,b	;volatile
 21898                           
 21899                           ; BSR set to: 61
 21900                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21901  018286  0012               	return		;funcret
 21902  018288                     __end_of_SPI1_Initialize:
 21903                           	opt callstack 0
 21904                           
 21905 ;; *************** function _PWM8_Initialize *****************
 21906 ;; Defined at:
 21907 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21908 ;; Parameters:    Size  Location     Type
 21909 ;;		None
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;		None
 21912 ;; Return value:  Size  Location     Type
 21913 ;;                  1  [STACK] void 
 21914 ;; Registers used:
 21915 ;;		wreg, status,2
 21916 ;; Tracked objects:
 21917 ;;		On entry : 0/3E
 21918 ;;		On exit  : 3F/3F
 21919 ;;		Unchanged: 0/0
 21920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21925 ;;Total ram usage:        0 bytes
 21926 ;; Hardware stack levels used:    1
 21927 ;; Hardware stack levels required when called:    6
 21928 ;; This function calls:
 21929 ;;		Nothing
 21930 ;; This function is called by:
 21931 ;;		_SYSTEM_Initialize
 21932 ;; This function uses a reentrant model
 21933 ;;
 21934                           
 21935                           	psect	text94
 21936  018288                     __ptext94:
 21937                           	opt callstack 0
 21938  018288                     _PWM8_Initialize:
 21939                           	opt callstack 23
 21940                           
 21941                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 21942                           
 21943                           ; BSR set to: 61
 21944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21945                           ;incstack = 0
 21946  018288  0E80               	movlw	128
 21947  01828A  6E62               	movwf	98,c	;volatile
 21948                           
 21949                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 21950  01828C  6A61               	clrf	97,c	;volatile
 21951                           
 21952                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 21953  01828E  0E40               	movlw	64
 21954  018290  6E60               	movwf	96,c	;volatile
 21955                           
 21956                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 21957  018292  013F               	movlb	63	; () banked
 21958  018294  515F               	movf	95,w,b	;volatile
 21959  018296  0B3F               	andlw	-193
 21960  018298  0940               	iorlw	64
 21961  01829A  6F5F               	movwf	95,b	;volatile
 21962                           
 21963                           ; BSR set to: 63
 21964                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21965  01829C  0012               	return		;funcret
 21966  01829E                     __end_of_PWM8_Initialize:
 21967                           	opt callstack 0
 21968                           
 21969 ;; *************** function _PMD_Initialize *****************
 21970 ;; Defined at:
 21971 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21972 ;; Parameters:    Size  Location     Type
 21973 ;;		None
 21974 ;; Auto vars:     Size  Location     Type
 21975 ;;		None
 21976 ;; Return value:  Size  Location     Type
 21977 ;;                  1  [STACK] void 
 21978 ;; Registers used:
 21979 ;;		None
 21980 ;; Tracked objects:
 21981 ;;		On entry : 3F/39
 21982 ;;		On exit  : 3F/39
 21983 ;;		Unchanged: 0/0
 21984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21989 ;;Total ram usage:        0 bytes
 21990 ;; Hardware stack levels used:    1
 21991 ;; Hardware stack levels required when called:    6
 21992 ;; This function calls:
 21993 ;;		Nothing
 21994 ;; This function is called by:
 21995 ;;		_SYSTEM_Initialize
 21996 ;; This function uses a reentrant model
 21997 ;;
 21998                           
 21999                           	psect	text95
 22000  0182B4                     __ptext95:
 22001                           	opt callstack 0
 22002  0182B4                     _PMD_Initialize:
 22003                           	opt callstack 23
 22004                           
 22005                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22006                           
 22007                           ; BSR set to: 63
 22008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22009                           ;incstack = 0
 22010  0182B4  0139               	movlb	57	; () banked
 22011  0182B6  6BC0               	clrf	192,b	;volatile
 22012                           
 22013                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22014  0182B8  6BC1               	clrf	193,b	;volatile
 22015                           
 22016                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22017  0182BA  6BC2               	clrf	194,b	;volatile
 22018                           
 22019                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22020  0182BC  6BC3               	clrf	195,b	;volatile
 22021                           
 22022                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22023  0182BE  6BC4               	clrf	196,b	;volatile
 22024                           
 22025                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22026  0182C0  6BC5               	clrf	197,b	;volatile
 22027                           
 22028                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22029  0182C2  6BC6               	clrf	198,b	;volatile
 22030                           
 22031                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22032  0182C4  6BC7               	clrf	199,b	;volatile
 22033                           
 22034                           ; BSR set to: 57
 22035                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22036  0182C6  0012               	return		;funcret
 22037  0182C8                     __end_of_PMD_Initialize:
 22038                           	opt callstack 0
 22039                           
 22040 ;; *************** function _PIN_MANAGER_Initialize *****************
 22041 ;; Defined at:
 22042 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22043 ;; Parameters:    Size  Location     Type
 22044 ;;		None
 22045 ;; Auto vars:     Size  Location     Type
 22046 ;;		None
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1  [STACK] void 
 22049 ;; Registers used:
 22050 ;;		wreg, status,2
 22051 ;; Tracked objects:
 22052 ;;		On entry : 3F/39
 22053 ;;		On exit  : 3F/3A
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22060 ;;Total ram usage:        0 bytes
 22061 ;; Hardware stack levels used:    1
 22062 ;; Hardware stack levels required when called:    6
 22063 ;; This function calls:
 22064 ;;		Nothing
 22065 ;; This function is called by:
 22066 ;;		_SYSTEM_Initialize
 22067 ;; This function uses a reentrant model
 22068 ;;
 22069                           
 22070                           	psect	text96
 22071  017170                     __ptext96:
 22072                           	opt callstack 0
 22073  017170                     _PIN_MANAGER_Initialize:
 22074                           	opt callstack 23
 22075                           
 22076                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22077                           
 22078                           ; BSR set to: 57
 22079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22080                           ;incstack = 0
 22081  017170  0E07               	movlw	7
 22082  017172  6EBE               	movwf	190,c	;volatile
 22083                           
 22084                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 22085  017174  6ABD               	clrf	189,c	;volatile
 22086                           
 22087                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22088  017176  6ABA               	clrf	186,c	;volatile
 22089                           
 22090                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22091  017178  6ABF               	clrf	191,c	;volatile
 22092                           
 22093                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22094  01717A  6ABB               	clrf	187,c	;volatile
 22095                           
 22096                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22097  01717C  0E07               	movlw	7
 22098  01717E  6EBC               	movwf	188,c	;volatile
 22099                           
 22100                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22101  017180  6AC6               	clrf	198,c	;volatile
 22102                           
 22103                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22104  017182  0E0F               	movlw	15
 22105  017184  6EC7               	movwf	199,c	;volatile
 22106                           
 22107                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22108  017186  68C2               	setf	194,c	;volatile
 22109                           
 22110                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22111  017188  0EBF               	movlw	191
 22112  01718A  6EC3               	movwf	195,c	;volatile
 22113                           
 22114                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22115  01718C  0E90               	movlw	144
 22116  01718E  6EC4               	movwf	196,c	;volatile
 22117                           
 22118                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22119  017190  0E0C               	movlw	12
 22120  017192  6EC5               	movwf	197,c	;volatile
 22121                           
 22122                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22123  017194  013A               	movlb	58	; () banked
 22124  017196  6B70               	clrf	112,b	;volatile
 22125                           
 22126                           ; BSR set to: 58
 22127                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22128  017198  6B60               	clrf	96,b	;volatile
 22129                           
 22130                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22131  01719A  0E3C               	movlw	60
 22132  01719C  6F50               	movwf	80,b	;volatile
 22133                           
 22134                           ; BSR set to: 58
 22135                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22136  01719E  6B80               	clrf	128,b	;volatile
 22137                           
 22138                           ; BSR set to: 58
 22139                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22140  0171A0  6B90               	clrf	144,b	;volatile
 22141                           
 22142                           ; BSR set to: 58
 22143                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22144  0171A2  6940               	setf	64,b	;volatile
 22145                           
 22146                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22147  0171A4  0E0C               	movlw	12
 22148  0171A6  6F71               	movwf	113,b	;volatile
 22149                           
 22150                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22151  0171A8  0E0F               	movlw	15
 22152  0171AA  6F91               	movwf	145,b	;volatile
 22153                           
 22154                           ; BSR set to: 58
 22155                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22156  0171AC  6B81               	clrf	129,b	;volatile
 22157                           
 22158                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 22159  0171AE  0E87               	movlw	135
 22160  0171B0  6F51               	movwf	81,b	;volatile
 22161                           
 22162                           ; BSR set to: 58
 22163                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22164  0171B2  6B41               	clrf	65,b	;volatile
 22165                           
 22166                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22167  0171B4  0E97               	movlw	151
 22168  0171B6  6F61               	movwf	97,b	;volatile
 22169                           
 22170                           ; BSR set to: 58
 22171                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22172  0171B8  6B82               	clrf	130,b	;volatile
 22173                           
 22174                           ; BSR set to: 58
 22175                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22176  0171BA  6B92               	clrf	146,b	;volatile
 22177                           
 22178                           ; BSR set to: 58
 22179                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22180  0171BC  6B42               	clrf	66,b	;volatile
 22181                           
 22182                           ; BSR set to: 58
 22183                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22184  0171BE  6B52               	clrf	82,b	;volatile
 22185                           
 22186                           ; BSR set to: 58
 22187                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22188  0171C0  6B62               	clrf	98,b	;volatile
 22189                           
 22190                           ; BSR set to: 58
 22191                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22192  0171C2  6B72               	clrf	114,b	;volatile
 22193                           
 22194                           ; BSR set to: 58
 22195                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22196  0171C4  6943               	setf	67,b	;volatile
 22197                           
 22198                           ; BSR set to: 58
 22199                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22200  0171C6  6953               	setf	83,b	;volatile
 22201                           
 22202                           ; BSR set to: 58
 22203                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22204  0171C8  6963               	setf	99,b	;volatile
 22205                           
 22206                           ; BSR set to: 58
 22207                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22208  0171CA  6973               	setf	115,b	;volatile
 22209                           
 22210                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22211  0171CC  0E07               	movlw	7
 22212  0171CE  6F83               	movwf	131,b	;volatile
 22213                           
 22214                           ; BSR set to: 58
 22215                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22216  0171D0  6993               	setf	147,b	;volatile
 22217                           
 22218                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22219  0171D2  0E0F               	movlw	15
 22220  0171D4  6FE8               	movwf	232,b	;volatile
 22221                           
 22222                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22223  0171D6  0E13               	movlw	19
 22224  0171D8  6FDE               	movwf	222,b	;volatile
 22225                           
 22226                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22227  0171DA  0E16               	movlw	22
 22228  0171DC  6F0E               	movwf	14,b	;volatile
 22229                           
 22230                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22231  0171DE  0E1E               	movlw	30
 22232  0171E0  6F13               	movwf	19,b	;volatile
 22233                           
 22234                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22235  0171E2  0E08               	movlw	8
 22236  0171E4  6FC0               	movwf	192,b	;volatile
 22237                           
 22238                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22239  0171E6  0E10               	movlw	16
 22240  0171E8  6F19               	movwf	25,b	;volatile
 22241                           
 22242                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22243  0171EA  0E09               	movlw	9
 22244  0171EC  6FC1               	movwf	193,b	;volatile
 22245                           
 22246                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22247  0171EE  0E1F               	movlw	31
 22248  0171F0  6F15               	movwf	21,b	;volatile
 22249                           
 22250                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22251  0171F2  0E13               	movlw	19
 22252  0171F4  6F16               	movwf	22,b	;volatile
 22253                           
 22254                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22255  0171F6  0E17               	movlw	23
 22256  0171F8  6FE5               	movwf	229,b	;volatile
 22257                           
 22258                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22259  0171FA  0E14               	movlw	20
 22260  0171FC  6FDF               	movwf	223,b	;volatile
 22261                           
 22262                           ; BSR set to: 58
 22263                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22264  0171FE  0012               	return		;funcret
 22265  017200                     __end_of_PIN_MANAGER_Initialize:
 22266                           	opt callstack 0
 22267                           
 22268 ;; *************** function _OSCILLATOR_Initialize *****************
 22269 ;; Defined at:
 22270 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22271 ;; Parameters:    Size  Location     Type
 22272 ;;		None
 22273 ;; Auto vars:     Size  Location     Type
 22274 ;;		None
 22275 ;; Return value:  Size  Location     Type
 22276 ;;                  1  [STACK] void 
 22277 ;; Registers used:
 22278 ;;		wreg, status,2
 22279 ;; Tracked objects:
 22280 ;;		On entry : 3F/3A
 22281 ;;		On exit  : 3F/39
 22282 ;;		Unchanged: 0/0
 22283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22288 ;;Total ram usage:        0 bytes
 22289 ;; Hardware stack levels used:    1
 22290 ;; Hardware stack levels required when called:    6
 22291 ;; This function calls:
 22292 ;;		Nothing
 22293 ;; This function is called by:
 22294 ;;		_SYSTEM_Initialize
 22295 ;; This function uses a reentrant model
 22296 ;;
 22297                           
 22298                           	psect	text97
 22299  01829E                     __ptext97:
 22300                           	opt callstack 0
 22301  01829E                     _OSCILLATOR_Initialize:
 22302                           	opt callstack 23
 22303                           
 22304                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22305                           
 22306                           ; BSR set to: 58
 22307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22308                           ;incstack = 0
 22309  01829E  0E20               	movlw	32
 22310  0182A0  0139               	movlb	57	; () banked
 22311  0182A2  6FD9               	movwf	217,b	;volatile
 22312                           
 22313                           ; BSR set to: 57
 22314                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22315  0182A4  6BDB               	clrf	219,b	;volatile
 22316                           
 22317                           ; BSR set to: 57
 22318                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22319  0182A6  6BDD               	clrf	221,b	;volatile
 22320                           
 22321                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22322  0182A8  0E02               	movlw	2
 22323  0182AA  6FDF               	movwf	223,b	;volatile
 22324                           
 22325                           ; BSR set to: 57
 22326                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22327  0182AC  6BDE               	clrf	222,b	;volatile
 22328  0182AE                     l171:
 22329                           
 22330                           ; BSR set to: 57
 22331                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22332  0182AE  B1DC               	btfsc	220,0,b	;volatile
 22333  0182B0  0012               	return	
 22334  0182B2  D7FD               	goto	l171
 22335  0182B4                     __end_of_OSCILLATOR_Initialize:
 22336                           	opt callstack 0
 22337                           
 22338 ;; *************** function _INTERRUPT_Initialize *****************
 22339 ;; Defined at:
 22340 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;		None
 22343 ;; Auto vars:     Size  Location     Type
 22344 ;;  state           1  [STACK] _Bool 
 22345 ;; Return value:  Size  Location     Type
 22346 ;;                  1  [STACK] void 
 22347 ;; Registers used:
 22348 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22349 ;; Tracked objects:
 22350 ;;		On entry : 0/0
 22351 ;;		On exit  : 3F/39
 22352 ;;		Unchanged: 0/0
 22353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22358 ;;Total ram usage:        0 bytes
 22359 ;; Hardware stack levels used:    1
 22360 ;; Hardware stack levels required when called:    6
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_SYSTEM_Initialize
 22365 ;; This function uses a reentrant model
 22366 ;;
 22367                           
 22368                           	psect	text98
 22369  0174CC                     __ptext98:
 22370                           	opt callstack 0
 22371  0174CC                     _INTERRUPT_Initialize:
 22372                           	opt callstack 0
 22373                           
 22374                           ; BSR set to: 57
 22375                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22376  0174CC  52E6               	movf	postinc1,f,c
 22377                           
 22378                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22379                           
 22380                           ;incstack = 0
 22381  0174CE  8AD2               	bsf	210,5,c	;volatile
 22382                           
 22383                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22384  0174D0  AED2               	btfss	16338,7,c	;volatile
 22385  0174D2  D003               	goto	u7590
 22386  0174D4  6A40               	clrf	(btemp+11)^0,c
 22387  0174D6  2A40               	incf	(btemp+11)^0,f,c
 22388  0174D8  D001               	goto	u7608
 22389  0174DA                     u7590:
 22390  0174DA  6A40               	clrf	(btemp+11)^0,c
 22391  0174DC                     u7608:
 22392                           
 22393                           ;stkvar	_state @ sp[(-1)+0]
 22394  0174DC  0EFF               	movlw	-1
 22395  0174DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 22396                           
 22397                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22398  0174E4  9ED2               	bcf	16338,7,c	;volatile
 22399                           
 22400                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22401  0174E6  0E55               	movlw	85
 22402  0174E8  6ED4               	movwf	212,c	;volatile
 22403                           
 22404                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22405  0174EA  0EAA               	movlw	170
 22406  0174EC  6ED4               	movwf	212,c	;volatile
 22407                           
 22408                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22409  0174EE  90D4               	bcf	212,0,c	;volatile
 22410                           
 22411                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22412  0174F0  0138               	movlb	56	; () banked
 22413  0174F2  6B9F               	clrf	159,b	;volatile
 22414                           
 22415                           ; BSR set to: 56
 22416                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22417  0174F4  6B9E               	clrf	158,b	;volatile
 22418                           
 22419                           ; BSR set to: 56
 22420                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22421  0174F6  0E08               	movlw	8
 22422  0174F8  6F9D               	movwf	157,b	;volatile
 22423                           
 22424                           ; BSR set to: 56
 22425                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22426  0174FA  0E55               	movlw	85
 22427  0174FC  6ED4               	movwf	212,c	;volatile
 22428                           
 22429                           ; BSR set to: 56
 22430                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22431  0174FE  0EAA               	movlw	170
 22432  017500  6ED4               	movwf	212,c	;volatile
 22433                           
 22434                           ; BSR set to: 56
 22435                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22436  017502  80D4               	bsf	212,0,c	;volatile
 22437                           
 22438                           ; BSR set to: 56
 22439                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22440                           ;stkvar	_state @ sp[(-1)+0]
 22441  017504  0EFF               	movlw	-1
 22442  017506  B0E3               	btfsc	plusw1,0,c
 22443  017508  D002               	bra	u7615
 22444  01750A  9ED2               	bcf	16338,7,c	;volatile
 22445  01750C  D001               	bra	u7616
 22446  01750E                     u7615:
 22447  01750E  8ED2               	bsf	16338,7,c	;volatile
 22448  017510                     u7616:
 22449                           
 22450                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22451  017510  0139               	movlb	57	; () banked
 22452  017512  8782               	bsf	130,3,b	;volatile
 22453                           
 22454                           ; BSR set to: 57
 22455                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22456  017514  8382               	bsf	130,1,b	;volatile
 22457                           
 22458                           ; BSR set to: 57
 22459                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22460  017516  8182               	bsf	130,0,b	;volatile
 22461                           
 22462                           ; BSR set to: 57
 22463                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22464  017518  8582               	bsf	130,2,b	;volatile
 22465                           
 22466                           ; BSR set to: 57
 22467                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22468  01751A  8786               	bsf	134,3,b	;volatile
 22469                           
 22470                           ; BSR set to: 57
 22471                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22472  01751C  8586               	bsf	134,2,b	;volatile
 22473                           
 22474                           ; BSR set to: 57
 22475                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22476  01751E  8983               	bsf	131,4,b	;volatile
 22477                           
 22478                           ; BSR set to: 57
 22479                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22480  017520  8783               	bsf	131,3,b	;volatile
 22481                           
 22482                           ; BSR set to: 57
 22483                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22484  017522  8181               	bsf	129,0,b	;volatile
 22485                           
 22486                           ; BSR set to: 57
 22487                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22488  017524  8185               	bsf	133,0,b	;volatile
 22489                           
 22490                           ; BSR set to: 57
 22491                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22492  017526  8189               	bsf	137,0,b	;volatile
 22493                           
 22494                           ; BSR set to: 57
 22495                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22496  017528  9D88               	bcf	136,6,b	;volatile
 22497                           
 22498                           ; BSR set to: 57
 22499                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22500  01752A  8581               	bsf	129,2,b	;volatile
 22501                           
 22502                           ; BSR set to: 57
 22503                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22504  01752C  8781               	bsf	129,3,b	;volatile
 22505                           
 22506                           ; BSR set to: 57
 22507                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22508  01752E  52E5               	movf	postdec1,f,c
 22509  017530  0012               	return		;funcret
 22510  017532                     __end_of_INTERRUPT_Initialize:
 22511                           	opt callstack 0
 22512                           
 22513 ;; *************** function _FVR_Initialize *****************
 22514 ;; Defined at:
 22515 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22516 ;; Parameters:    Size  Location     Type
 22517 ;;		None
 22518 ;; Auto vars:     Size  Location     Type
 22519 ;;		None
 22520 ;; Return value:  Size  Location     Type
 22521 ;;                  1  [STACK] void 
 22522 ;; Registers used:
 22523 ;;		wreg, status,2
 22524 ;; Tracked objects:
 22525 ;;		On entry : 3F/39
 22526 ;;		On exit  : 3F/3E
 22527 ;;		Unchanged: 0/0
 22528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;Total ram usage:        0 bytes
 22534 ;; Hardware stack levels used:    1
 22535 ;; Hardware stack levels required when called:    6
 22536 ;; This function calls:
 22537 ;;		Nothing
 22538 ;; This function is called by:
 22539 ;;		_SYSTEM_Initialize
 22540 ;; This function uses a reentrant model
 22541 ;;
 22542                           
 22543                           	psect	text99
 22544  01837A                     __ptext99:
 22545                           	opt callstack 0
 22546  01837A                     _FVR_Initialize:
 22547                           	opt callstack 23
 22548                           
 22549                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22550                           
 22551                           ; BSR set to: 57
 22552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22553                           ;incstack = 0
 22554  01837A  0EAF               	movlw	175
 22555  01837C  013E               	movlb	62	; () banked
 22556  01837E  6FC1               	movwf	193,b	;volatile
 22557                           
 22558                           ; BSR set to: 62
 22559                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22560  018380  0012               	return		;funcret
 22561  018382                     __end_of_FVR_Initialize:
 22562                           	opt callstack 0
 22563                           
 22564 ;; *************** function _EXT_INT_Initialize *****************
 22565 ;; Defined at:
 22566 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22567 ;; Parameters:    Size  Location     Type
 22568 ;;		None
 22569 ;; Auto vars:     Size  Location     Type
 22570 ;;		None
 22571 ;; Return value:  Size  Location     Type
 22572 ;;                  1  [STACK] void 
 22573 ;; Registers used:
 22574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22575 ;; Tracked objects:
 22576 ;;		On entry : 3F/39
 22577 ;;		On exit  : 3F/39
 22578 ;;		Unchanged: 0/0
 22579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22584 ;;Total ram usage:        0 bytes
 22585 ;; Hardware stack levels used:    1
 22586 ;; Hardware stack levels required when called:    7
 22587 ;; This function calls:
 22588 ;;		_INT0_SetInterruptHandler
 22589 ;;		_INT1_SetInterruptHandler
 22590 ;; This function is called by:
 22591 ;;		_SYSTEM_Initialize
 22592 ;; This function uses a reentrant model
 22593 ;;
 22594                           
 22595                           	psect	text100
 22596  017C28                     __ptext100:
 22597                           	opt callstack 0
 22598  017C28                     _EXT_INT_Initialize:
 22599                           	opt callstack 22
 22600                           
 22601                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22602                           
 22603                           ; BSR set to: 62
 22604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22605                           ;incstack = 0
 22606  017C28  0139               	movlb	57	; () banked
 22607  017C2A  91A1               	bcf	161,0,b	;volatile
 22608                           
 22609                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22610  017C2C  90D2               	bcf	210,0,c	;volatile
 22611                           
 22612                           ; BSR set to: 57
 22613                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22614  017C2E  0E9A               	movlw	low _INT0_DefaultInterruptHandler
 22615  017C30  6EE6               	movwf	postinc1,c
 22616  017C32  0E83               	movlw	high _INT0_DefaultInterruptHandler
 22617  017C34  6EE6               	movwf	postinc1,c
 22618  017C36  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22619  017C38  6EE6               	movwf	postinc1,c
 22620  017C3A  EC96  F0BF         	call	_INT0_SetInterruptHandler	;wreg free
 22621                           
 22622                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22623  017C3E  0139               	movlb	57	; () banked
 22624  017C40  8191               	bsf	145,0,b	;volatile
 22625                           
 22626                           ; BSR set to: 57
 22627                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22628  017C42  91A5               	bcf	165,0,b	;volatile
 22629                           
 22630                           ; BSR set to: 57
 22631                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22632  017C44  92D2               	bcf	210,1,c	;volatile
 22633                           
 22634                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22635  017C46  0E9C               	movlw	low _INT1_DefaultInterruptHandler
 22636  017C48  6EE6               	movwf	postinc1,c
 22637  017C4A  0E83               	movlw	high _INT1_DefaultInterruptHandler
 22638  017C4C  6EE6               	movwf	postinc1,c
 22639  017C4E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22640  017C50  6EE6               	movwf	postinc1,c
 22641  017C52  EC82  F0BF         	call	_INT1_SetInterruptHandler	;wreg free
 22642                           
 22643                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22644  017C56  0139               	movlb	57	; () banked
 22645  017C58  8195               	bsf	149,0,b	;volatile
 22646                           
 22647                           ; BSR set to: 57
 22648                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22649  017C5A  0012               	return		;funcret
 22650  017C5C                     __end_of_EXT_INT_Initialize:
 22651                           	opt callstack 0
 22652                           
 22653 ;; *************** function _INT1_SetInterruptHandler *****************
 22654 ;; Defined at:
 22655 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22656 ;; Parameters:    Size  Location     Type
 22657 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22658 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22659 ;; Auto vars:     Size  Location     Type
 22660 ;;		None
 22661 ;; Return value:  Size  Location     Type
 22662 ;;                  1  [STACK] void 
 22663 ;; Registers used:
 22664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22665 ;; Tracked objects:
 22666 ;;		On entry : 3F/39
 22667 ;;		On exit  : 0/0
 22668 ;;		Unchanged: 0/0
 22669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22674 ;;Total ram usage:        0 bytes
 22675 ;; Hardware stack levels used:    1
 22676 ;; Hardware stack levels required when called:    6
 22677 ;; This function calls:
 22678 ;;		Nothing
 22679 ;; This function is called by:
 22680 ;;		_EXT_INT_Initialize
 22681 ;; This function uses a reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text101
 22685  017F04                     __ptext101:
 22686                           	opt callstack 0
 22687  017F04                     _INT1_SetInterruptHandler:
 22688                           	opt callstack 22
 22689                           
 22690                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22691                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22692                           
 22693                           ; BSR set to: 57
 22694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22695                           ;incstack = 0
 22696  017F04  50E1               	movf	fsr1l,w,c
 22697  017F06  0FFD               	addlw	-3
 22698  017F08  6ED9               	movwf	fsr2l,c
 22699  017F0A  50E2               	movf	fsr1h,w,c
 22700  017F0C  6EDA               	movwf	fsr2h,c
 22701  017F0E  0EFF               	movlw	255
 22702  017F10  22DA               	addwfc	fsr2h,f,c
 22703  017F12  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22704  017F18  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22705  017F1E  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22706                           
 22707                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22708  017F24  52E5               	movf	postdec1,f,c
 22709  017F26  52E5               	movf	postdec1,f,c
 22710  017F28  52E5               	movf	postdec1,f,c
 22711  017F2A  0012               	return		;funcret
 22712  017F2C                     __end_of_INT1_SetInterruptHandler:
 22713                           	opt callstack 0
 22714                           
 22715 ;; *************** function _INT0_SetInterruptHandler *****************
 22716 ;; Defined at:
 22717 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22718 ;; Parameters:    Size  Location     Type
 22719 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22720 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22721 ;; Auto vars:     Size  Location     Type
 22722 ;;		None
 22723 ;; Return value:  Size  Location     Type
 22724 ;;                  1  [STACK] void 
 22725 ;; Registers used:
 22726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22727 ;; Tracked objects:
 22728 ;;		On entry : 3F/39
 22729 ;;		On exit  : 0/0
 22730 ;;		Unchanged: 0/0
 22731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22736 ;;Total ram usage:        0 bytes
 22737 ;; Hardware stack levels used:    1
 22738 ;; Hardware stack levels required when called:    6
 22739 ;; This function calls:
 22740 ;;		Nothing
 22741 ;; This function is called by:
 22742 ;;		_EXT_INT_Initialize
 22743 ;; This function uses a reentrant model
 22744 ;;
 22745                           
 22746                           	psect	text102
 22747  017F2C                     __ptext102:
 22748                           	opt callstack 0
 22749  017F2C                     _INT0_SetInterruptHandler:
 22750                           	opt callstack 22
 22751                           
 22752                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22753                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22754                           
 22755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22756                           ;incstack = 0
 22757  017F2C  50E1               	movf	fsr1l,w,c
 22758  017F2E  0FFD               	addlw	-3
 22759  017F30  6ED9               	movwf	fsr2l,c
 22760  017F32  50E2               	movf	fsr1h,w,c
 22761  017F34  6EDA               	movwf	fsr2h,c
 22762  017F36  0EFF               	movlw	255
 22763  017F38  22DA               	addwfc	fsr2h,f,c
 22764  017F3A  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22765  017F40  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22766  017F46  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22767                           
 22768                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22769  017F4C  52E5               	movf	postdec1,f,c
 22770  017F4E  52E5               	movf	postdec1,f,c
 22771  017F50  52E5               	movf	postdec1,f,c
 22772  017F52  0012               	return		;funcret
 22773  017F54                     __end_of_INT0_SetInterruptHandler:
 22774                           	opt callstack 0
 22775                           
 22776 ;; *************** function _DMA2_Initialize *****************
 22777 ;; Defined at:
 22778 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22779 ;; Parameters:    Size  Location     Type
 22780 ;;		None
 22781 ;; Auto vars:     Size  Location     Type
 22782 ;;		None
 22783 ;; Return value:  Size  Location     Type
 22784 ;;                  1  [STACK] void 
 22785 ;; Registers used:
 22786 ;;		wreg, status,2
 22787 ;; Tracked objects:
 22788 ;;		On entry : 3F/3D
 22789 ;;		On exit  : 3F/3B
 22790 ;;		Unchanged: 0/0
 22791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22796 ;;Total ram usage:        0 bytes
 22797 ;; Hardware stack levels used:    1
 22798 ;; Hardware stack levels required when called:    6
 22799 ;; This function calls:
 22800 ;;		Nothing
 22801 ;; This function is called by:
 22802 ;;		_SYSTEM_Initialize
 22803 ;; This function uses a reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text103
 22807  017772                     __ptext103:
 22808                           	opt callstack 0
 22809  017772                     _DMA2_Initialize:
 22810                           	opt callstack 23
 22811                           
 22812                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22813                           
 22814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22815                           ;incstack = 0
 22816  017772  0E00               	movlw	0
 22817  017774  013B               	movlb	59	; () banked
 22818  017776  6FD9               	movwf	217,b	;volatile
 22819  017778  0E10               	movlw	16
 22820  01777A  6FDA               	movwf	218,b	;volatile
 22821  01777C  0E00               	movlw	0
 22822  01777E  6FDB               	movwf	219,b	;volatile
 22823                           
 22824                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22825  017780  0E3F               	movlw	63
 22826  017782  6FD1               	movwf	209,b	;volatile
 22827  017784  0EBB               	movlw	187
 22828  017786  6FD0               	movwf	208,b	;volatile
 22829                           
 22830                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22831  017788  0E03               	movlw	3
 22832  01778A  6FDD               	movwf	221,b	;volatile
 22833                           
 22834                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22835  01778C  0E00               	movlw	0
 22836  01778E  6FD8               	movwf	216,b	;volatile
 22837  017790  0E01               	movlw	1
 22838  017792  6FD7               	movwf	215,b	;volatile
 22839                           
 22840                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22841  017794  0E00               	movlw	0
 22842  017796  6FCF               	movwf	207,b	;volatile
 22843  017798  0E01               	movlw	1
 22844  01779A  6FCE               	movwf	206,b	;volatile
 22845                           
 22846                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22847  01779C  0E46               	movlw	70
 22848  01779E  6FDF               	movwf	223,b	;volatile
 22849                           
 22850                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22851  0177A0  0E3D               	movlw	61
 22852  0177A2  6FDE               	movwf	222,b	;volatile
 22853                           
 22854                           ; BSR set to: 59
 22855                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22856  0177A4  0139               	movlb	57	; () banked
 22857  0177A6  97A5               	bcf	165,3,b	;volatile
 22858                           
 22859                           ; BSR set to: 57
 22860                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22861  0177A8  95A5               	bcf	165,2,b	;volatile
 22862                           
 22863                           ; BSR set to: 57
 22864                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22865  0177AA  9BA5               	bcf	165,5,b	;volatile
 22866                           
 22867                           ; BSR set to: 57
 22868                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22869  0177AC  99A5               	bcf	165,4,b	;volatile
 22870                           
 22871                           ; BSR set to: 57
 22872                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22873  0177AE  9795               	bcf	149,3,b	;volatile
 22874                           
 22875                           ; BSR set to: 57
 22876                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22877  0177B0  9595               	bcf	149,2,b	;volatile
 22878                           
 22879                           ; BSR set to: 57
 22880                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22881  0177B2  9B95               	bcf	149,5,b	;volatile
 22882                           
 22883                           ; BSR set to: 57
 22884                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22885  0177B4  9995               	bcf	149,4,b	;volatile
 22886  0177B6  9ED2               	bcf	16338,7,c	;# 
 22887  0177B8  0139               	banksel	14831	;# 
 22888  0177BA  0E55               	movlw	85	;# 
 22889  0177BC  6FEF               	movwf	14831,b	;# 
 22890  0177BE  0EAA               	movlw	170	;# 
 22891  0177C0  6FEF               	movwf	14831,b	;# 
 22892  0177C2  81EF               	bsf	14831,0,b	;# 
 22893  0177C4  8ED2               	bsf	16338,7,c	;# 
 22894                           
 22895                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22896  0177C6  013B               	movlb	59	; () banked
 22897  0177C8  6BDC               	clrf	220,b	;volatile
 22898                           
 22899                           ; BSR set to: 59
 22900                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22901  0177CA  0012               	return		;funcret
 22902  0177CC                     __end_of_DMA2_Initialize:
 22903                           	opt callstack 0
 22904                           
 22905 ;; *************** function _DMA1_Initialize *****************
 22906 ;; Defined at:
 22907 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22908 ;; Parameters:    Size  Location     Type
 22909 ;;		None
 22910 ;; Auto vars:     Size  Location     Type
 22911 ;;		None
 22912 ;; Return value:  Size  Location     Type
 22913 ;;                  1  [STACK] void 
 22914 ;; Registers used:
 22915 ;;		wreg, status,2
 22916 ;; Tracked objects:
 22917 ;;		On entry : 3F/3B
 22918 ;;		On exit  : 3F/3B
 22919 ;;		Unchanged: 0/0
 22920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;Total ram usage:        0 bytes
 22926 ;; Hardware stack levels used:    1
 22927 ;; Hardware stack levels required when called:    6
 22928 ;; This function calls:
 22929 ;;		Nothing
 22930 ;; This function is called by:
 22931 ;;		_SYSTEM_Initialize
 22932 ;; This function uses a reentrant model
 22933 ;;
 22934                           
 22935                           	psect	text104
 22936  017390                     __ptext104:
 22937                           	opt callstack 0
 22938  017390                     _DMA1_Initialize:
 22939                           	opt callstack 23
 22940                           
 22941                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 22942                           
 22943                           ; BSR set to: 59
 22944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22945                           ;incstack = 0
 22946  017390  0E00               	movlw	0
 22947  017392  013B               	movlb	59	; () banked
 22948  017394  6FF9               	movwf	249,b	;volatile
 22949  017396  0E10               	movlw	16
 22950  017398  6FFA               	movwf	250,b	;volatile
 22951  01739A  0E00               	movlw	0
 22952  01739C  6FFB               	movwf	251,b	;volatile
 22953                           
 22954                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 22955  01739E  0E3D               	movlw	61
 22956  0173A0  6FF1               	movwf	241,b	;volatile
 22957  0173A2  0E11               	movlw	17
 22958  0173A4  6FF0               	movwf	240,b	;volatile
 22959                           
 22960                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 22961  0173A6  0E03               	movlw	3
 22962  0173A8  6FFD               	movwf	253,b	;volatile
 22963                           
 22964                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 22965  0173AA  0E00               	movlw	0
 22966  0173AC  6FF8               	movwf	248,b	;volatile
 22967  0173AE  0E01               	movlw	1
 22968  0173B0  6FF7               	movwf	247,b	;volatile
 22969                           
 22970                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 22971  0173B2  0E00               	movlw	0
 22972  0173B4  6FEF               	movwf	239,b	;volatile
 22973  0173B6  0E01               	movlw	1
 22974  0173B8  6FEE               	movwf	238,b	;volatile
 22975                           
 22976                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 22977  0173BA  0E15               	movlw	21
 22978  0173BC  6FFF               	movwf	255,b	;volatile
 22979                           
 22980                           ; BSR set to: 59
 22981                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 22982  0173BE  6BFE               	clrf	254,b	;volatile
 22983                           
 22984                           ; BSR set to: 59
 22985                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 22986  0173C0  0139               	movlb	57	; () banked
 22987  0173C2  93A2               	bcf	162,1,b	;volatile
 22988                           
 22989                           ; BSR set to: 57
 22990                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 22991  0173C4  91A2               	bcf	162,0,b	;volatile
 22992                           
 22993                           ; BSR set to: 57
 22994                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 22995  0173C6  97A2               	bcf	162,3,b	;volatile
 22996                           
 22997                           ; BSR set to: 57
 22998                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 22999  0173C8  95A2               	bcf	162,2,b	;volatile
 23000                           
 23001                           ; BSR set to: 57
 23002                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23003  0173CA  8392               	bsf	146,1,b	;volatile
 23004                           
 23005                           ; BSR set to: 57
 23006                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23007  0173CC  8192               	bsf	146,0,b	;volatile
 23008                           
 23009                           ; BSR set to: 57
 23010                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23011  0173CE  8792               	bsf	146,3,b	;volatile
 23012                           
 23013                           ; BSR set to: 57
 23014                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23015  0173D0  8592               	bsf	146,2,b	;volatile
 23016                           
 23017                           ; BSR set to: 57
 23018                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23019  0173D2  6BF1               	clrf	241,b	;volatile
 23020                           
 23021                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23022  0173D4  0E01               	movlw	1
 23023  0173D6  6FF2               	movwf	242,b	;volatile
 23024                           
 23025                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23026  0173D8  0E04               	movlw	4
 23027  0173DA  6FF3               	movwf	243,b	;volatile
 23028                           
 23029                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23030  0173DC  0E02               	movlw	2
 23031  0173DE  6FF4               	movwf	244,b	;volatile
 23032                           
 23033                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23034  0173E0  0E03               	movlw	3
 23035  0173E2  6FF7               	movwf	247,b	;volatile
 23036  0173E4  9ED2               	bcf	16338,7,c	;# 
 23037  0173E6  0139               	banksel	14831	;# 
 23038  0173E8  0E55               	movlw	85	;# 
 23039  0173EA  6FEF               	movwf	14831,b	;# 
 23040  0173EC  0EAA               	movlw	170	;# 
 23041  0173EE  6FEF               	movwf	14831,b	;# 
 23042  0173F0  81EF               	bsf	14831,0,b	;# 
 23043  0173F2  8ED2               	bsf	16338,7,c	;# 
 23044                           
 23045                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23046  0173F4  013B               	movlb	59	; () banked
 23047  0173F6  6BFC               	clrf	252,b	;volatile
 23048                           
 23049                           ; BSR set to: 59
 23050                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23051  0173F8  0012               	return		;funcret
 23052  0173FA                     __end_of_DMA1_Initialize:
 23053                           	opt callstack 0
 23054                           
 23055 ;; *************** function _CLKREF_Initialize *****************
 23056 ;; Defined at:
 23057 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23058 ;; Parameters:    Size  Location     Type
 23059 ;;		None
 23060 ;; Auto vars:     Size  Location     Type
 23061 ;;		None
 23062 ;; Return value:  Size  Location     Type
 23063 ;;                  1  [STACK] void 
 23064 ;; Registers used:
 23065 ;;		wreg, status,2
 23066 ;; Tracked objects:
 23067 ;;		On entry : 3F/3B
 23068 ;;		On exit  : 3F/3C
 23069 ;;		Unchanged: 0/0
 23070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23075 ;;Total ram usage:        0 bytes
 23076 ;; Hardware stack levels used:    1
 23077 ;; Hardware stack levels required when called:    6
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_SYSTEM_Initialize
 23082 ;; This function uses a reentrant model
 23083 ;;
 23084                           
 23085                           	psect	text105
 23086  018336                     __ptext105:
 23087                           	opt callstack 0
 23088  018336                     _CLKREF_Initialize:
 23089                           	opt callstack 23
 23090                           
 23091                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23092                           
 23093                           ; BSR set to: 59
 23094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23095                           ;incstack = 0
 23096  018336  013C               	movlb	60	; () banked
 23097  018338  6BE6               	clrf	230,b	;volatile
 23098                           
 23099                           ; BSR set to: 60
 23100                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23101  01833A  0E94               	movlw	148
 23102  01833C  6FE5               	movwf	229,b	;volatile
 23103                           
 23104                           ; BSR set to: 60
 23105                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23106  01833E  0012               	return		;funcret
 23107  018340                     __end_of_CLKREF_Initialize:
 23108                           	opt callstack 0
 23109                           
 23110 ;; *************** function _ADCC_Initialize *****************
 23111 ;; Defined at:
 23112 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23113 ;; Parameters:    Size  Location     Type
 23114 ;;		None
 23115 ;; Auto vars:     Size  Location     Type
 23116 ;;		None
 23117 ;; Return value:  Size  Location     Type
 23118 ;;                  1  [STACK] void 
 23119 ;; Registers used:
 23120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23121 ;; Tracked objects:
 23122 ;;		On entry : 3F/3E
 23123 ;;		On exit  : 0/0
 23124 ;;		Unchanged: 0/0
 23125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23130 ;;Total ram usage:        0 bytes
 23131 ;; Hardware stack levels used:    1
 23132 ;; Hardware stack levels required when called:    7
 23133 ;; This function calls:
 23134 ;;		_ADCC_SetADIInterruptHandler
 23135 ;;		_ADCC_SetADTIInterruptHandler
 23136 ;; This function is called by:
 23137 ;;		_SYSTEM_Initialize
 23138 ;; This function uses a reentrant model
 23139 ;;
 23140                           
 23141                           	psect	text106
 23142  0173FA                     __ptext106:
 23143                           	opt callstack 0
 23144  0173FA                     _ADCC_Initialize:
 23145                           	opt callstack 22
 23146                           
 23147                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23148                           
 23149                           ; BSR set to: 60
 23150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23151                           ;incstack = 0
 23152  0173FA  013E               	movlb	62	; () banked
 23153  0173FC  6BDE               	clrf	222,b	;volatile
 23154                           
 23155                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23156  0173FE  6BDF               	clrf	223,b	;volatile
 23157                           
 23158                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23159  017400  6BE0               	clrf	224,b	;volatile
 23160                           
 23161                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23162  017402  6BE1               	clrf	225,b	;volatile
 23163                           
 23164                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23165  017404  6BE4               	clrf	228,b	;volatile
 23166                           
 23167                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23168  017406  6BE5               	clrf	229,b	;volatile
 23169                           
 23170                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23171  017408  6BEA               	clrf	234,b	;volatile
 23172                           
 23173                           ; BSR set to: 62
 23174                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23175  01740A  0E40               	movlw	64
 23176  01740C  6FEC               	movwf	236,b	;volatile
 23177                           
 23178                           ; BSR set to: 62
 23179                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23180  01740E  6BF1               	clrf	241,b	;volatile
 23181                           
 23182                           ; BSR set to: 62
 23183                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 23184  017410  6BF3               	clrf	243,b	;volatile
 23185                           
 23186                           ; BSR set to: 62
 23187                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23188  017412  6BF4               	clrf	244,b	;volatile
 23189                           
 23190                           ; BSR set to: 62
 23191                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23192  017414  6BF5               	clrf	245,b	;volatile
 23193                           
 23194                           ; BSR set to: 62
 23195                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23196  017416  6BF6               	clrf	246,b	;volatile
 23197                           
 23198                           ; BSR set to: 62
 23199                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23200  017418  6BF7               	clrf	247,b	;volatile
 23201                           
 23202                           ; BSR set to: 62
 23203                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23204  01741A  6BF9               	clrf	249,b	;volatile
 23205                           
 23206                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 23207  01741C  0E6B               	movlw	107
 23208  01741E  6FFA               	movwf	250,b	;volatile
 23209                           
 23210                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23211  017420  0E27               	movlw	39
 23212  017422  6FFB               	movwf	251,b	;volatile
 23213                           
 23214                           ; BSR set to: 62
 23215                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23216  017424  6BFC               	clrf	252,b	;volatile
 23217                           
 23218                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23219  017426  0E02               	movlw	2
 23220  017428  6FFD               	movwf	253,b	;volatile
 23221                           
 23222                           ; BSR set to: 62
 23223                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23224  01742A  6BFE               	clrf	254,b	;volatile
 23225                           
 23226                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 23227  01742C  0E02               	movlw	2
 23228  01742E  6FFF               	movwf	255,b	;volatile
 23229                           
 23230                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 23231  017430  0E94               	movlw	148
 23232  017432  6FF8               	movwf	248,b	;volatile
 23233                           
 23234                           ; BSR set to: 62
 23235                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23236  017434  0139               	movlb	57	; () banked
 23237  017436  95A1               	bcf	161,2,b	;volatile
 23238                           
 23239                           ; BSR set to: 57
 23240                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23241  017438  8591               	bsf	145,2,b	;volatile
 23242                           
 23243                           ; BSR set to: 57
 23244                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23245  01743A  0E9E               	movlw	low _ADCC_DefaultInterruptHandler
 23246  01743C  6EE6               	movwf	postinc1,c
 23247  01743E  0E83               	movlw	high _ADCC_DefaultInterruptHandler
 23248  017440  6EE6               	movwf	postinc1,c
 23249  017442  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23250  017444  6EE6               	movwf	postinc1,c
 23251  017446  ECBE  F0BF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23252                           
 23253                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23254  01744A  0139               	movlb	57	; () banked
 23255  01744C  97A1               	bcf	161,3,b	;volatile
 23256                           
 23257                           ; BSR set to: 57
 23258                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23259  01744E  8791               	bsf	145,3,b	;volatile
 23260                           
 23261                           ; BSR set to: 57
 23262                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23263  017450  0E9E               	movlw	low _ADCC_DefaultInterruptHandler
 23264  017452  6EE6               	movwf	postinc1,c
 23265  017454  0E83               	movlw	high _ADCC_DefaultInterruptHandler
 23266  017456  6EE6               	movwf	postinc1,c
 23267  017458  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23268  01745A  6EE6               	movwf	postinc1,c
 23269  01745C  ECAA  F0BF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23270                           
 23271                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23272  017460  0012               	return		;funcret
 23273  017462                     __end_of_ADCC_Initialize:
 23274                           	opt callstack 0
 23275                           
 23276 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23277 ;; Defined at:
 23278 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23281 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23282 ;; Auto vars:     Size  Location     Type
 23283 ;;		None
 23284 ;; Return value:  Size  Location     Type
 23285 ;;                  1  [STACK] void 
 23286 ;; Registers used:
 23287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23288 ;; Tracked objects:
 23289 ;;		On entry : 0/0
 23290 ;;		On exit  : 0/0
 23291 ;;		Unchanged: 0/0
 23292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;Total ram usage:        0 bytes
 23298 ;; Hardware stack levels used:    1
 23299 ;; Hardware stack levels required when called:    6
 23300 ;; This function calls:
 23301 ;;		Nothing
 23302 ;; This function is called by:
 23303 ;;		_ADCC_Initialize
 23304 ;;		_start_adc_scan
 23305 ;; This function uses a reentrant model
 23306 ;;
 23307                           
 23308                           	psect	text107
 23309  017F54                     __ptext107:
 23310                           	opt callstack 0
 23311  017F54                     _ADCC_SetADTIInterruptHandler:
 23312                           	opt callstack 23
 23313                           
 23314                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23315                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23316                           
 23317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23318                           ;incstack = 0
 23319  017F54  50E1               	movf	fsr1l,w,c
 23320  017F56  0FFD               	addlw	-3
 23321  017F58  6ED9               	movwf	fsr2l,c
 23322  017F5A  50E2               	movf	fsr1h,w,c
 23323  017F5C  6EDA               	movwf	fsr2h,c
 23324  017F5E  0EFF               	movlw	255
 23325  017F60  22DA               	addwfc	fsr2h,f,c
 23326  017F62  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23327  017F68  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23328  017F6E  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23329                           
 23330                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23331  017F74  52E5               	movf	postdec1,f,c
 23332  017F76  52E5               	movf	postdec1,f,c
 23333  017F78  52E5               	movf	postdec1,f,c
 23334  017F7A  0012               	return		;funcret
 23335  017F7C                     __end_of_ADCC_SetADTIInterruptHandler:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23339 ;; Defined at:
 23340 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23343 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;		None
 23346 ;; Return value:  Size  Location     Type
 23347 ;;                  1  [STACK] void 
 23348 ;; Registers used:
 23349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23350 ;; Tracked objects:
 23351 ;;		On entry : 6/0
 23352 ;;		On exit  : 0/0
 23353 ;;		Unchanged: 0/0
 23354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;Total ram usage:        0 bytes
 23360 ;; Hardware stack levels used:    1
 23361 ;; Hardware stack levels required when called:    6
 23362 ;; This function calls:
 23363 ;;		Nothing
 23364 ;; This function is called by:
 23365 ;;		_ADCC_Initialize
 23366 ;;		_start_adc_scan
 23367 ;; This function uses a reentrant model
 23368 ;;
 23369                           
 23370                           	psect	text108
 23371  017F7C                     __ptext108:
 23372                           	opt callstack 0
 23373  017F7C                     _ADCC_SetADIInterruptHandler:
 23374                           	opt callstack 23
 23375                           
 23376                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23377                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23378                           
 23379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23380                           ;incstack = 0
 23381  017F7C  50E1               	movf	fsr1l,w,c
 23382  017F7E  0FFD               	addlw	-3
 23383  017F80  6ED9               	movwf	fsr2l,c
 23384  017F82  50E2               	movf	fsr1h,w,c
 23385  017F84  6EDA               	movwf	fsr2h,c
 23386  017F86  0EFF               	movlw	255
 23387  017F88  22DA               	addwfc	fsr2h,f,c
 23388  017F8A  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23389  017F90  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23390  017F96  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23391                           
 23392                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23393  017F9C  52E5               	movf	postdec1,f,c
 23394  017F9E  52E5               	movf	postdec1,f,c
 23395  017FA0  52E5               	movf	postdec1,f,c
 23396  017FA2  0012               	return		;funcret
 23397  017FA4                     __end_of_ADCC_SetADIInterruptHandler:
 23398                           	opt callstack 0
 23399                           
 23400 ;; *************** function _TMR5_ISR *****************
 23401 ;; Defined at:
 23402 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;		None
 23405 ;; Auto vars:     Size  Location     Type
 23406 ;;		None
 23407 ;; Return value:  Size  Location     Type
 23408 ;;                  1    wreg      void 
 23409 ;; Registers used:
 23410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23411 ;; Tracked objects:
 23412 ;;		On entry : 0/0
 23413 ;;		On exit  : 0/0
 23414 ;;		Unchanged: 0/0
 23415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23418 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23419 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23420 ;;Total ram usage:        4 bytes
 23421 ;; Hardware stack levels used:    1
 23422 ;; Hardware stack levels required when called:    5
 23423 ;; This function calls:
 23424 ;;		_TMR5_CallBack
 23425 ;;		_TMR5_WriteTimer
 23426 ;; This function is called by:
 23427 ;;		Interrupt level 1
 23428 ;; This function uses a non-reentrant model
 23429 ;;
 23430                           
 23431                           	psect	text109
 23432  0176BC                     __ptext109:
 23433                           	opt callstack 0
 23434  0176BC                     _TMR5_ISR:
 23435                           	opt callstack 12
 23436                           
 23437                           ;incstack = 0
 23438  0176BC  006F FF60  F0DF    	movff	status,??_TMR5_ISR+2
 23439  0176C2  0060  F100  F0E0   	movff	btemp+11,??_TMR5_ISR+3
 23440  0176C8  EE15  F3AB         	lfsr	1,___intlo_sp
 23441                           
 23442                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23443  0176CC  0139               	movlb	57	; () banked
 23444  0176CE  9DA8               	bcf	168,6,b	;volatile
 23445                           
 23446                           ; BSR set to: 57
 23447                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23448  0176D0  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23449  0176D6  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23450  0176DC  EC4E  F0BD         	call	_TMR5_WriteTimer	;wreg free
 23451                           
 23452                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23453  0176E0  0102               	movlb	2	; () banked
 23454  0176E2  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 23455  0176E4  0100               	movlb	0	; () banked
 23456  0176E6  6FDD               	movwf	??_TMR5_ISR& (0+255),b
 23457  0176E8  6BDE               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23458  0176EA  0E05               	movlw	5
 23459  0176EC  27DD               	addwf	??_TMR5_ISR& (0+255),f,b
 23460  0176EE  0E00               	movlw	0
 23461  0176F0  23DE               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23462  0176F2  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23463  0176F4  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23464  0176F6  51DD               	movf	??_TMR5_ISR& (0+255),w,b
 23465  0176F8  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23466  0176FA  51DE               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23467  0176FC  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23468  0176FE  A0D8               	btfss	status,0,c
 23469  017700  D004               	goto	i1l1045
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23473  017702  EC33  F0C0         	call	_TMR5_CallBack	;wreg free
 23474                           
 23475                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23476  017706  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23477  017708  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23478  01770A                     i1l1045:
 23479  01770A  0060  F380  F040   	movff	??_TMR5_ISR+3,btemp+11
 23480  017710  0060  F37F  FFD8   	movff	??_TMR5_ISR+2,status
 23481  017716  0011               	retfie		f
 23482  017718                     __end_of_TMR5_ISR:
 23483                           	opt callstack 0
 23484                           
 23485 ;; *************** function _TMR5_WriteTimer *****************
 23486 ;; Defined at:
 23487 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23488 ;; Parameters:    Size  Location     Type
 23489 ;;  timerVal        2  [STACK] unsigned short 
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;		None
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1  [STACK] void 
 23494 ;; Registers used:
 23495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23496 ;; Tracked objects:
 23497 ;;		On entry : 3F/39
 23498 ;;		On exit  : 0/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23505 ;;Total ram usage:        0 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; Hardware stack levels required when called:    3
 23508 ;; This function calls:
 23509 ;;		Nothing
 23510 ;; This function is called by:
 23511 ;;		_TMR5_ISR
 23512 ;; This function uses a reentrant model
 23513 ;;
 23514                           
 23515                           	psect	text110
 23516  017A9C                     __ptext110:
 23517                           	opt callstack 0
 23518  017A9C                     _TMR5_WriteTimer:
 23519                           	opt callstack 13
 23520                           
 23521                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23522                           
 23523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23524                           ;incstack = 0
 23525  017A9C  A49A               	btfss	154,2,c	;volatile
 23526  017A9E  D00F               	goto	l8416
 23527                           
 23528                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23529  017AA0  909A               	bcf	154,0,c	;volatile
 23530                           
 23531                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23532                           ;stkvar	_timerVal @ sp[(0)+-2]
 23533  017AA2  0EFF               	movlw	255
 23534  017AA4  24E1               	addwf	fsr1l,w,c
 23535  017AA6  6ED9               	movwf	fsr2l,c
 23536  017AA8  0EFF               	movlw	255
 23537  017AAA  20E2               	addwfc	fsr1h,w,c
 23538  017AAC  6EDA               	movwf	fsr2h,c
 23539  017AAE  50DF               	movf	indf2,w,c
 23540  017AB0  6E99               	movwf	153,c	;volatile
 23541                           
 23542                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23543                           ;stkvar	_timerVal @ sp[(0)+-2]
 23544  017AB2  0EFE               	movlw	-2
 23545  017AB4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23546                           
 23547                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23548  017ABA  809A               	bsf	154,0,c	;volatile
 23549                           
 23550                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23551  017ABC  D00C               	goto	l1028
 23552  017ABE                     l8416:
 23553                           
 23554                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23555                           ;stkvar	_timerVal @ sp[(0)+-2]
 23556  017ABE  0EFF               	movlw	255
 23557  017AC0  24E1               	addwf	fsr1l,w,c
 23558  017AC2  6ED9               	movwf	fsr2l,c
 23559  017AC4  0EFF               	movlw	255
 23560  017AC6  20E2               	addwfc	fsr1h,w,c
 23561  017AC8  6EDA               	movwf	fsr2h,c
 23562  017ACA  50DF               	movf	indf2,w,c
 23563  017ACC  6E99               	movwf	153,c	;volatile
 23564                           
 23565                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23566                           ;stkvar	_timerVal @ sp[(0)+-2]
 23567  017ACE  0EFE               	movlw	-2
 23568  017AD0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23569  017AD6                     l1028:
 23570                           
 23571                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23572  017AD6  52E5               	movf	postdec1,f,c
 23573  017AD8  52E5               	movf	postdec1,f,c
 23574  017ADA  0012               	return		;funcret
 23575  017ADC                     __end_of_TMR5_WriteTimer:
 23576                           	opt callstack 0
 23577                           
 23578 ;; *************** function _TMR5_CallBack *****************
 23579 ;; Defined at:
 23580 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;		None
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;		None
 23585 ;; Return value:  Size  Location     Type
 23586 ;;                  1  [STACK] void 
 23587 ;; Registers used:
 23588 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23589 ;; Tracked objects:
 23590 ;;		On entry : 3F/0
 23591 ;;		On exit  : 0/0
 23592 ;;		Unchanged: 0/0
 23593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23598 ;;Total ram usage:        0 bytes
 23599 ;; Hardware stack levels used:    1
 23600 ;; Hardware stack levels required when called:    4
 23601 ;; This function calls:
 23602 ;;		Absolute function
 23603 ;;		_TMR5_DefaultInterruptHandler
 23604 ;; This function is called by:
 23605 ;;		_TMR5_ISR
 23606 ;; This function uses a reentrant model
 23607 ;;
 23608                           
 23609                           	psect	text111
 23610  018066                     __ptext111:
 23611                           	opt callstack 0
 23612  018066                     _TMR5_CallBack:
 23613                           	opt callstack 12
 23614                           
 23615                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23616                           
 23617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23618                           ;incstack = 0
 23619  018066  0100               	movlb	0	; () banked
 23620  018068  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23621  01806A  11BB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23622  01806C  11BC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23623  01806E  B4D8               	btfsc	status,2,c
 23624  018070  0012               	return	
 23625                           
 23626                           ; BSR set to: 0
 23627                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23628  018072  D801               	call	u792_28
 23629  018074  0012               	return	
 23630  018076                     u792_28:
 23631  018076  0005               	push	
 23632  018078  6EFA               	movwf	pclath,c
 23633  01807A  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23634  01807C  6EFD               	movwf	tosl,c
 23635  01807E  51BB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23636  018080  6EFE               	movwf	tosh,c
 23637  018082  51BC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23638  018084  6EFF               	movwf	tosu,c
 23639  018086  50FA               	movf	pclath,w,c
 23640  018088  0012               	return		;indir
 23641  01808A                     __end_of_TMR5_CallBack:
 23642                           	opt callstack 0
 23643                           
 23644 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23645 ;; Defined at:
 23646 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23647 ;; Parameters:    Size  Location     Type
 23648 ;;		None
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;		None
 23651 ;; Return value:  Size  Location     Type
 23652 ;;                  1  [STACK] void 
 23653 ;; Registers used:
 23654 ;;		wreg, status,2, status,0, btemp+11
 23655 ;; Tracked objects:
 23656 ;;		On entry : 3F/0
 23657 ;;		On exit  : 0/0
 23658 ;;		Unchanged: 0/0
 23659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23664 ;;Total ram usage:        0 bytes
 23665 ;; Hardware stack levels used:    1
 23666 ;; Hardware stack levels required when called:    3
 23667 ;; This function calls:
 23668 ;;		Nothing
 23669 ;; This function is called by:
 23670 ;;		_TMR5_Initialize
 23671 ;;		_TMR5_CallBack
 23672 ;; This function uses a reentrant model
 23673 ;;
 23674                           
 23675                           	psect	text112
 23676  0181F6                     __ptext112:
 23677                           	opt callstack 0
 23678  0181F6                     _TMR5_DefaultInterruptHandler:
 23679                           	opt callstack 12
 23680                           
 23681                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23682                           
 23683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23684                           ;incstack = 0
 23685  0181F6  A0BE               	btfss	190,0,c	;volatile
 23686  0181F8  D002               	goto	u765_20
 23687  0181FA  0E01               	movlw	1
 23688  0181FC  D001               	goto	u765_26
 23689  0181FE                     u765_20:
 23690  0181FE  0E00               	movlw	0
 23691  018200                     u765_26:
 23692  018200  0AFF               	xorlw	255
 23693  018202  6E40               	movwf	(btemp+11)^0,c
 23694  018204  50BE               	movf	190,w,c	;volatile
 23695  018206  1840               	xorwf	(btemp+11)^0,w,c
 23696  018208  0BFE               	andlw	-2
 23697  01820A  1840               	xorwf	(btemp+11)^0,w,c
 23698  01820C  6EBE               	movwf	190,c	;volatile
 23699                           
 23700                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23701  01820E  0012               	return		;funcret
 23702  018210                     __end_of_TMR5_DefaultInterruptHandler:
 23703                           	opt callstack 0
 23704                           
 23705 ;; *************** function _INT0_ISR *****************
 23706 ;; Defined at:
 23707 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23708 ;; Parameters:    Size  Location     Type
 23709 ;;		None
 23710 ;; Auto vars:     Size  Location     Type
 23711 ;;		None
 23712 ;; Return value:  Size  Location     Type
 23713 ;;                  1    wreg      void 
 23714 ;; Registers used:
 23715 ;;		wreg, status,2, status,0, pclath, tosl
 23716 ;; Tracked objects:
 23717 ;;		On entry : 0/0
 23718 ;;		On exit  : 0/0
 23719 ;;		Unchanged: 0/0
 23720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23725 ;;Total ram usage:        0 bytes
 23726 ;; Hardware stack levels used:    1
 23727 ;; Hardware stack levels required when called:    2
 23728 ;; This function calls:
 23729 ;;		_INT0_CallBack
 23730 ;; This function is called by:
 23731 ;;		Interrupt level 2
 23732 ;; This function uses a non-reentrant model
 23733 ;;
 23734                           
 23735                           	psect	text113
 23736  018308                     __ptext113:
 23737                           	opt callstack 0
 23738  018308                     _INT0_ISR:
 23739                           	opt callstack 12
 23740                           
 23741                           ;incstack = 0
 23742  018308  EE13  F356         	lfsr	1,___inthi_sp
 23743                           
 23744                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23745  01830C  0139               	movlb	57	; () banked
 23746  01830E  91A1               	bcf	161,0,b	;volatile
 23747                           
 23748                           ; BSR set to: 57
 23749                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23750  018310  EC45  F0C0         	call	_INT0_CallBack	;wreg free
 23751  018314  0011               	retfie		f
 23752  018316                     __end_of_INT0_ISR:
 23753                           	opt callstack 0
 23754                           
 23755 ;; *************** function _INT0_CallBack *****************
 23756 ;; Defined at:
 23757 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23758 ;; Parameters:    Size  Location     Type
 23759 ;;		None
 23760 ;; Auto vars:     Size  Location     Type
 23761 ;;		None
 23762 ;; Return value:  Size  Location     Type
 23763 ;;                  1  [STACK] void 
 23764 ;; Registers used:
 23765 ;;		wreg, status,2, status,0, pclath, tosl
 23766 ;; Tracked objects:
 23767 ;;		On entry : 3F/39
 23768 ;;		On exit  : 0/0
 23769 ;;		Unchanged: 0/0
 23770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23775 ;;Total ram usage:        0 bytes
 23776 ;; Hardware stack levels used:    1
 23777 ;; Hardware stack levels required when called:    1
 23778 ;; This function calls:
 23779 ;;		Absolute function
 23780 ;;		_INT0_DefaultInterruptHandler
 23781 ;; This function is called by:
 23782 ;;		_INT0_ISR
 23783 ;; This function uses a reentrant model
 23784 ;;
 23785                           
 23786                           	psect	text114
 23787  01808A                     __ptext114:
 23788                           	opt callstack 0
 23789  01808A                     _INT0_CallBack:
 23790                           	opt callstack 12
 23791                           
 23792                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23793                           
 23794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23795                           ;incstack = 0
 23796  01808A  5019               	movf	_INT0_InterruptHandler^0,w,c
 23797  01808C  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23798  01808E  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23799  018090  B4D8               	btfsc	status,2,c
 23800  018092  0012               	return	
 23801                           
 23802                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23803  018094  D801               	call	u366_48
 23804  018096  0012               	return	
 23805  018098                     u366_48:
 23806  018098  0005               	push	
 23807  01809A  6EFA               	movwf	pclath,c
 23808  01809C  5019               	movf	_INT0_InterruptHandler^0,w,c
 23809  01809E  6EFD               	movwf	tosl,c
 23810  0180A0  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23811  0180A2  6EFE               	movwf	tosh,c
 23812  0180A4  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23813  0180A6  6EFF               	movwf	tosu,c
 23814  0180A8  50FA               	movf	pclath,w,c
 23815  0180AA  0012               	return		;indir
 23816  0180AC                     __end_of_INT0_CallBack:
 23817                           	opt callstack 0
 23818                           
 23819 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23820 ;; Defined at:
 23821 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23822 ;; Parameters:    Size  Location     Type
 23823 ;;		None
 23824 ;; Auto vars:     Size  Location     Type
 23825 ;;		None
 23826 ;; Return value:  Size  Location     Type
 23827 ;;                  1  [STACK] void 
 23828 ;; Registers used:
 23829 ;;		None
 23830 ;; Tracked objects:
 23831 ;;		On entry : 0/39
 23832 ;;		On exit  : 0/0
 23833 ;;		Unchanged: 0/0
 23834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;Total ram usage:        0 bytes
 23840 ;; Hardware stack levels used:    1
 23841 ;; This function calls:
 23842 ;;		Nothing
 23843 ;; This function is called by:
 23844 ;;		_EXT_INT_Initialize
 23845 ;;		_INT0_CallBack
 23846 ;; This function uses a reentrant model
 23847 ;;
 23848                           
 23849                           	psect	text115
 23850  01839A                     __ptext115:
 23851                           	opt callstack 0
 23852  01839A                     _INT0_DefaultInterruptHandler:
 23853                           	opt callstack 12
 23854                           
 23855                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23856                           
 23857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23858                           ;incstack = 0
 23859  01839A  0012               	return		;funcret
 23860  01839C                     __end_of_INT0_DefaultInterruptHandler:
 23861                           	opt callstack 0
 23862                           
 23863 ;; *************** function _INT1_ISR *****************
 23864 ;; Defined at:
 23865 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23866 ;; Parameters:    Size  Location     Type
 23867 ;;		None
 23868 ;; Auto vars:     Size  Location     Type
 23869 ;;		None
 23870 ;; Return value:  Size  Location     Type
 23871 ;;                  1    wreg      void 
 23872 ;; Registers used:
 23873 ;;		wreg, status,2, status,0, pclath, tosl
 23874 ;; Tracked objects:
 23875 ;;		On entry : 0/0
 23876 ;;		On exit  : 0/0
 23877 ;;		Unchanged: 0/0
 23878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23883 ;;Total ram usage:        0 bytes
 23884 ;; Hardware stack levels used:    1
 23885 ;; Hardware stack levels required when called:    2
 23886 ;; This function calls:
 23887 ;;		_INT1_CallBack
 23888 ;; This function is called by:
 23889 ;;		Interrupt level 2
 23890 ;; This function uses a non-reentrant model
 23891 ;;
 23892                           
 23893                           	psect	text116
 23894  018318                     __ptext116:
 23895                           	opt callstack 0
 23896  018318                     _INT1_ISR:
 23897                           	opt callstack 12
 23898                           
 23899                           ;incstack = 0
 23900  018318  EE13  F356         	lfsr	1,___inthi_sp
 23901                           
 23902                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23903  01831C  0139               	movlb	57	; () banked
 23904  01831E  91A5               	bcf	165,0,b	;volatile
 23905                           
 23906                           ; BSR set to: 57
 23907                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23908  018320  EC56  F0C0         	call	_INT1_CallBack	;wreg free
 23909  018324  0011               	retfie		f
 23910  018326                     __end_of_INT1_ISR:
 23911                           	opt callstack 0
 23912                           
 23913 ;; *************** function _INT1_CallBack *****************
 23914 ;; Defined at:
 23915 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23916 ;; Parameters:    Size  Location     Type
 23917 ;;		None
 23918 ;; Auto vars:     Size  Location     Type
 23919 ;;		None
 23920 ;; Return value:  Size  Location     Type
 23921 ;;                  1  [STACK] void 
 23922 ;; Registers used:
 23923 ;;		wreg, status,2, status,0, pclath, tosl
 23924 ;; Tracked objects:
 23925 ;;		On entry : 3F/39
 23926 ;;		On exit  : 0/0
 23927 ;;		Unchanged: 0/0
 23928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;Total ram usage:        0 bytes
 23934 ;; Hardware stack levels used:    1
 23935 ;; Hardware stack levels required when called:    1
 23936 ;; This function calls:
 23937 ;;		Absolute function
 23938 ;;		_INT1_DefaultInterruptHandler
 23939 ;; This function is called by:
 23940 ;;		_INT1_ISR
 23941 ;; This function uses a reentrant model
 23942 ;;
 23943                           
 23944                           	psect	text117
 23945  0180AC                     __ptext117:
 23946                           	opt callstack 0
 23947  0180AC                     _INT1_CallBack:
 23948                           	opt callstack 12
 23949                           
 23950                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 23951                           
 23952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23953                           ;incstack = 0
 23954  0180AC  5016               	movf	_INT1_InterruptHandler^0,w,c
 23955  0180AE  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23956  0180B0  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23957  0180B2  B4D8               	btfsc	status,2,c
 23958  0180B4  0012               	return	
 23959                           
 23960                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 23961  0180B6  D801               	call	u368_48
 23962  0180B8  0012               	return	
 23963  0180BA                     u368_48:
 23964  0180BA  0005               	push	
 23965  0180BC  6EFA               	movwf	pclath,c
 23966  0180BE  5016               	movf	_INT1_InterruptHandler^0,w,c
 23967  0180C0  6EFD               	movwf	tosl,c
 23968  0180C2  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23969  0180C4  6EFE               	movwf	tosh,c
 23970  0180C6  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23971  0180C8  6EFF               	movwf	tosu,c
 23972  0180CA  50FA               	movf	pclath,w,c
 23973  0180CC  0012               	return		;indir
 23974  0180CE                     __end_of_INT1_CallBack:
 23975                           	opt callstack 0
 23976                           
 23977 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23978 ;; Defined at:
 23979 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;		None
 23982 ;; Auto vars:     Size  Location     Type
 23983 ;;		None
 23984 ;; Return value:  Size  Location     Type
 23985 ;;                  1  [STACK] void 
 23986 ;; Registers used:
 23987 ;;		None
 23988 ;; Tracked objects:
 23989 ;;		On entry : 0/39
 23990 ;;		On exit  : 0/0
 23991 ;;		Unchanged: 0/0
 23992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23997 ;;Total ram usage:        0 bytes
 23998 ;; Hardware stack levels used:    1
 23999 ;; This function calls:
 24000 ;;		Nothing
 24001 ;; This function is called by:
 24002 ;;		_EXT_INT_Initialize
 24003 ;;		_INT1_CallBack
 24004 ;; This function uses a reentrant model
 24005 ;;
 24006                           
 24007                           	psect	text118
 24008  01839C                     __ptext118:
 24009                           	opt callstack 0
 24010  01839C                     _INT1_DefaultInterruptHandler:
 24011                           	opt callstack 12
 24012                           
 24013                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24014                           
 24015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24016                           ;incstack = 0
 24017  01839C  0012               	return		;funcret
 24018  01839E                     __end_of_INT1_DefaultInterruptHandler:
 24019                           	opt callstack 0
 24020                           
 24021 ;; *************** function _Default_ISR *****************
 24022 ;; Defined at:
 24023 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24024 ;; Parameters:    Size  Location     Type
 24025 ;;		None
 24026 ;; Auto vars:     Size  Location     Type
 24027 ;;		None
 24028 ;; Return value:  Size  Location     Type
 24029 ;;                  1    wreg      void 
 24030 ;; Registers used:
 24031 ;;		None
 24032 ;; Tracked objects:
 24033 ;;		On entry : 0/0
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;Total ram usage:        0 bytes
 24042 ;; Hardware stack levels used:    1
 24043 ;; This function calls:
 24044 ;;		Nothing
 24045 ;; This function is called by:
 24046 ;;		Interrupt level 2
 24047 ;; This function uses a non-reentrant model
 24048 ;;
 24049                           
 24050                           	psect	text119
 24051  018394                     __ptext119:
 24052                           	opt callstack 0
 24053  018394                     _Default_ISR:
 24054                           	opt callstack 14
 24055                           
 24056                           ;incstack = 0
 24057  018394  EE13  F356         	lfsr	1,___inthi_sp
 24058  018398  0011               	retfie		f
 24059  01839A                     __end_of_Default_ISR:
 24060                           	opt callstack 0
 24061                           
 24062 ;; *************** function _ADCC_ISR *****************
 24063 ;; Defined at:
 24064 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24065 ;; Parameters:    Size  Location     Type
 24066 ;;		None
 24067 ;; Auto vars:     Size  Location     Type
 24068 ;;		None
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      void 
 24071 ;; Registers used:
 24072 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/0
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24082 ;;Total ram usage:        1 bytes
 24083 ;; Hardware stack levels used:    1
 24084 ;; Hardware stack levels required when called:    1
 24085 ;; This function calls:
 24086 ;;		Absolute function
 24087 ;;		_ADCC_DefaultInterruptHandler
 24088 ;;		_adc_int_handler
 24089 ;; This function is called by:
 24090 ;;		Interrupt level 2
 24091 ;; This function uses a non-reentrant model
 24092 ;;
 24093                           
 24094                           	psect	text120
 24095  017B50                     __ptext120:
 24096                           	opt callstack 0
 24097  017B50                     _ADCC_ISR:
 24098                           	opt callstack 13
 24099                           
 24100                           ;incstack = 0
 24101  017B50  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 24102  017B56  EE13  F356         	lfsr	1,___inthi_sp
 24103                           
 24104                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24105  017B5A  0139               	movlb	57	; () banked
 24106  017B5C  95A1               	bcf	161,2,b	;volatile
 24107                           
 24108                           ; BSR set to: 57
 24109                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24110  017B5E  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24111  017B60  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24112  017B62  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24113  017B64  B4D8               	btfsc	status,2,c
 24114  017B66  D00C               	goto	i2u398_49
 24115                           
 24116                           ; BSR set to: 57
 24117                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24118  017B68  D801               	call	i2u398_48
 24119  017B6A  D00A               	goto	i2u398_49
 24120  017B6C                     i2u398_48:
 24121  017B6C  0005               	push	
 24122  017B6E  6EFA               	movwf	pclath,c
 24123  017B70  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24124  017B72  6EFD               	movwf	tosl,c
 24125  017B74  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24126  017B76  6EFE               	movwf	tosh,c
 24127  017B78  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24128  017B7A  6EFF               	movwf	tosu,c
 24129  017B7C  50FA               	movf	pclath,w,c
 24130  017B7E  0012               	return		;indir
 24131  017B80                     i2u398_49:
 24132  017B80  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 24133  017B86  0011               	retfie		f
 24134  017B88                     __end_of_ADCC_ISR:
 24135                           	opt callstack 0
 24136                           
 24137 ;; *************** function _adc_int_t_handler *****************
 24138 ;; Defined at:
 24139 ;;		line 104 in file "daq.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;		None
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;		None
 24144 ;; Return value:  Size  Location     Type
 24145 ;;                  1  [STACK] void 
 24146 ;; Registers used:
 24147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24148 ;; Tracked objects:
 24149 ;;		On entry : 3F/39
 24150 ;;		On exit  : 1/0
 24151 ;;		Unchanged: 0/0
 24152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;Total ram usage:        0 bytes
 24158 ;; Hardware stack levels used:    1
 24159 ;; Hardware stack levels required when called:    1
 24160 ;; This function calls:
 24161 ;;		_ADCC_StartConversion
 24162 ;; This function is called by:
 24163 ;;		_start_adc_scan
 24164 ;;		_ADCC_ThresholdISR
 24165 ;; This function uses a reentrant model
 24166 ;;
 24167                           
 24168                           	psect	text121
 24169  017048                     __ptext121:
 24170                           	opt callstack 0
 24171  017048                     _adc_int_t_handler:
 24172                           	opt callstack 12
 24173                           
 24174                           ;daq.c: 109:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 24175                           
 24176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24177                           ;incstack = 0
 24178  017048  013E               	movlb	62	; () banked
 24179  01704A  51E6               	movf	230,w,b	;volatile
 24180  01704C  006F FB9C  F035    	movff	16103,btemp	;volatile
 24181  017052  6A36               	clrf	(btemp+1)^0,c
 24182  017054  0060  F0D4  F036   	movff	btemp,btemp+1
 24183  01705A  6A35               	clrf	btemp^0,c
 24184  01705C  2635               	addwf	btemp^0,f,c
 24185  01705E  0E00               	movlw	0
 24186  017060  2236               	addwfc	(btemp+1)^0,f,c
 24187  017062  0100               	movlb	0	; () banked
 24188  017064  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 24189  017066  0D02               	mullw	2
 24190  017068  50F3               	movf	243,w,c
 24191  01706A  0F60               	addlw	low _R
 24192  01706C  6ED9               	movwf	fsr2l,c
 24193  01706E  6ADA               	clrf	fsr2h,c
 24194  017070  0060  F0D7  FFDE   	movff	btemp,postinc2
 24195  017076  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 24196  01707C                     l8634:
 24197                           
 24198                           ;daq.c: 111:   if (++R.scan_index > 0XD) {
 24199  01707C  0100               	movlb	0	; () banked
 24200  01707E  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 24201  017080  0E0D               	movlw	13
 24202  017082  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 24203  017084  D004               	goto	l8642
 24204                           
 24205                           ; BSR set to: 0
 24206                           ;daq.c: 112:    R.done = 1;
 24207  017086  0E01               	movlw	1
 24208  017088  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 24209                           
 24210                           ; BSR set to: 0
 24211  01708A  92BE               	bcf	190,1,c	;volatile
 24212  01708C  0012               	return	
 24213  01708E                     l8642:
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;daq.c: 116:  } while (!((R.scan_select >> R.scan_index) &0x01));
 24217  01708E  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 24218  017094  EE20  F07F         	lfsr	2,_R+31	;volatile
 24219  017098  006F FF78  F03D    	movff	postinc2,btemp+8
 24220  01709E  006F FF74  F03E    	movff	postdec2,btemp+9
 24221  0170A4  2A40               	incf	(btemp+11)^0,f,c
 24222  0170A6  D003               	goto	u806_44
 24223  0170A8                     u806_45:
 24224  0170A8  90D8               	bcf	status,0,c
 24225  0170AA  323E               	rrcf	(btemp+9)^0,f,c
 24226  0170AC  323D               	rrcf	(btemp+8)^0,f,c
 24227  0170AE                     u806_44:
 24228  0170AE  2E40               	decfsz	(btemp+11)^0,f,c
 24229  0170B0  D7FB               	goto	u806_45
 24230  0170B2  A03D               	btfss	(btemp+8)^0,0,c
 24231  0170B4  D7E3               	goto	l8634
 24232                           
 24233                           ;daq.c: 117:  ADCC_StartConversion(R.scan_index & 0xf);
 24234  0170B6  0100               	movlb	0	; () banked
 24235  0170B8  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 24236  0170BA  0B0F               	andlw	15
 24237  0170BC  6EE6               	movwf	postinc1,c
 24238  0170BE  EC64  F0C1         	call	_ADCC_StartConversion	;wreg free
 24239                           
 24240                           ; BSR set to: 62
 24241  0170C2  A2BE               	btfss	190,1,c	;volatile
 24242  0170C4  D002               	goto	u808_40
 24243  0170C6  0E01               	movlw	1
 24244  0170C8  D001               	goto	u808_46
 24245  0170CA                     u808_40:
 24246  0170CA  0E00               	movlw	0
 24247  0170CC                     u808_46:
 24248  0170CC  0AFF               	xorlw	255
 24249  0170CE  6E40               	movwf	(btemp+11)^0,c
 24250  0170D0  4640               	rlncf	(btemp+11)^0,f,c
 24251  0170D2  50BE               	movf	190,w,c	;volatile
 24252  0170D4  1840               	xorwf	(btemp+11)^0,w,c
 24253  0170D6  0BFD               	andlw	-3
 24254  0170D8  1840               	xorwf	(btemp+11)^0,w,c
 24255  0170DA  6EBE               	movwf	190,c	;volatile
 24256                           
 24257                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24258  0170DC  0012               	return		;funcret
 24259  0170DE                     __end_of_adc_int_t_handler:
 24260                           	opt callstack 0
 24261                           
 24262 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24263 ;; Defined at:
 24264 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24265 ;; Parameters:    Size  Location     Type
 24266 ;;		None
 24267 ;; Auto vars:     Size  Location     Type
 24268 ;;		None
 24269 ;; Return value:  Size  Location     Type
 24270 ;;                  1  [STACK] void 
 24271 ;; Registers used:
 24272 ;;		None
 24273 ;; Tracked objects:
 24274 ;;		On entry : 3F/39
 24275 ;;		On exit  : 0/0
 24276 ;;		Unchanged: 0/0
 24277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24282 ;;Total ram usage:        0 bytes
 24283 ;; Hardware stack levels used:    1
 24284 ;; This function calls:
 24285 ;;		Nothing
 24286 ;; This function is called by:
 24287 ;;		_ADCC_Initialize
 24288 ;;		_ADCC_ISR
 24289 ;;		_ADCC_ThresholdISR
 24290 ;; This function uses a reentrant model
 24291 ;;
 24292                           
 24293                           	psect	text122
 24294  01839E                     __ptext122:
 24295                           	opt callstack 0
 24296  01839E                     _ADCC_DefaultInterruptHandler:
 24297                           	opt callstack 13
 24298                           
 24299                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24300                           
 24301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24302                           ;incstack = 0
 24303  01839E  0012               	return		;funcret
 24304  0183A0                     __end_of_ADCC_DefaultInterruptHandler:
 24305                           	opt callstack 0
 24306                           
 24307 ;; *************** function _adc_int_handler *****************
 24308 ;; Defined at:
 24309 ;;		line 96 in file "daq.c"
 24310 ;; Parameters:    Size  Location     Type
 24311 ;;		None
 24312 ;; Auto vars:     Size  Location     Type
 24313 ;;		None
 24314 ;; Return value:  Size  Location     Type
 24315 ;;                  1  [STACK] void 
 24316 ;; Registers used:
 24317 ;;		wreg, status,2, status,0, btemp+11
 24318 ;; Tracked objects:
 24319 ;;		On entry : 3F/39
 24320 ;;		On exit  : 0/0
 24321 ;;		Unchanged: 0/0
 24322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24327 ;;Total ram usage:        0 bytes
 24328 ;; Hardware stack levels used:    1
 24329 ;; This function calls:
 24330 ;;		Nothing
 24331 ;; This function is called by:
 24332 ;;		_start_adc_scan
 24333 ;;		_ADCC_ISR
 24334 ;; This function uses a reentrant model
 24335 ;;
 24336                           
 24337                           	psect	text123
 24338  01814A                     __ptext123:
 24339                           	opt callstack 0
 24340  01814A                     _adc_int_handler:
 24341                           	opt callstack 13
 24342                           
 24343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24344                           ;incstack = 0
 24345                           ;daq.c: 98:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24346  01814A  A4BE               	btfss	190,2,c	;volatile
 24347  01814C  D002               	goto	u392_40
 24348  01814E  0E01               	movlw	1
 24349  018150  D001               	goto	u392_46
 24350  018152                     u392_40:
 24351  018152  0E00               	movlw	0
 24352  018154                     u392_46:
 24353  018154  0AFF               	xorlw	255
 24354  018156  6E40               	movwf	(btemp+11)^0,c
 24355  018158  4640               	rlncf	(btemp+11)^0,f,c
 24356  01815A  4640               	rlncf	(btemp+11)^0,f,c
 24357  01815C  50BE               	movf	190,w,c	;volatile
 24358  01815E  1840               	xorwf	(btemp+11)^0,w,c
 24359  018160  0BFB               	andlw	-5
 24360  018162  1840               	xorwf	(btemp+11)^0,w,c
 24361  018164  6EBE               	movwf	190,c	;volatile
 24362                           
 24363                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24364  018166  0012               	return		;funcret
 24365  018168                     __end_of_adc_int_handler:
 24366                           	opt callstack 0
 24367                           
 24368 ;; *************** function _ADCC_ThresholdISR *****************
 24369 ;; Defined at:
 24370 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24371 ;; Parameters:    Size  Location     Type
 24372 ;;		None
 24373 ;; Auto vars:     Size  Location     Type
 24374 ;;		None
 24375 ;; Return value:  Size  Location     Type
 24376 ;;                  1    wreg      void 
 24377 ;; Registers used:
 24378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24379 ;; Tracked objects:
 24380 ;;		On entry : 0/0
 24381 ;;		On exit  : 0/0
 24382 ;;		Unchanged: 0/0
 24383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;Total ram usage:        5 bytes
 24389 ;; Hardware stack levels used:    1
 24390 ;; Hardware stack levels required when called:    2
 24391 ;; This function calls:
 24392 ;;		Absolute function
 24393 ;;		_ADCC_DefaultInterruptHandler
 24394 ;;		_adc_int_t_handler
 24395 ;; This function is called by:
 24396 ;;		Interrupt level 2
 24397 ;; This function uses a non-reentrant model
 24398 ;;
 24399                           
 24400                           	psect	text124
 24401  017464                     __ptext124:
 24402                           	opt callstack 0
 24403  017464                     _ADCC_ThresholdISR:
 24404                           	opt callstack 12
 24405                           
 24406                           ;incstack = 0
 24407  017464  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24408  01746A  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24409  017470  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24410  017476  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24411  01747C  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24412  017482  EE13  F356         	lfsr	1,___inthi_sp
 24413                           
 24414                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24415  017486  0139               	movlb	57	; () banked
 24416  017488  97A1               	bcf	161,3,b	;volatile
 24417                           
 24418                           ; BSR set to: 57
 24419                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24420  01748A  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24421  01748C  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24422  01748E  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24423  017490  B4D8               	btfsc	status,2,c
 24424  017492  D00C               	goto	i2u810_49
 24425                           
 24426                           ; BSR set to: 57
 24427                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24428  017494  D801               	call	i2u810_48
 24429  017496  D00A               	goto	i2u810_49
 24430  017498                     i2u810_48:
 24431  017498  0005               	push	
 24432  01749A  6EFA               	movwf	pclath,c
 24433  01749C  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24434  01749E  6EFD               	movwf	tosl,c
 24435  0174A0  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24436  0174A2  6EFE               	movwf	tosh,c
 24437  0174A4  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24438  0174A6  6EFF               	movwf	tosu,c
 24439  0174A8  50FA               	movf	pclath,w,c
 24440  0174AA  0012               	return		;indir
 24441  0174AC                     i2u810_49:
 24442  0174AC  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24443  0174B2  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24444  0174B8  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24445  0174BE  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24446  0174C4  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24447  0174CA  0011               	retfie		f
 24448  0174CC                     __end_of_ADCC_ThresholdISR:
 24449                           	opt callstack 0
 24450                           
 24451 ;; *************** function _UART1_tx_vect_isr *****************
 24452 ;; Defined at:
 24453 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24454 ;; Parameters:    Size  Location     Type
 24455 ;;		None
 24456 ;; Auto vars:     Size  Location     Type
 24457 ;;		None
 24458 ;; Return value:  Size  Location     Type
 24459 ;;                  1    wreg      void 
 24460 ;; Registers used:
 24461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24462 ;; Tracked objects:
 24463 ;;		On entry : 0/0
 24464 ;;		On exit  : 0/0
 24465 ;;		Unchanged: 0/0
 24466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;Total ram usage:        0 bytes
 24472 ;; Hardware stack levels used:    1
 24473 ;; Hardware stack levels required when called:    1
 24474 ;; This function calls:
 24475 ;;		Absolute function
 24476 ;;		_UART1_Transmit_ISR
 24477 ;; This function is called by:
 24478 ;;		Interrupt level 2
 24479 ;; This function uses a non-reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text125
 24483  017FA4                     __ptext125:
 24484                           	opt callstack 0
 24485  017FA4                     _UART1_tx_vect_isr:
 24486                           	opt callstack 13
 24487                           
 24488                           ;incstack = 0
 24489  017FA4  EE13  F356         	lfsr	1,___inthi_sp
 24490                           
 24491                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24492  017FA8  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24493  017FAA  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24494  017FAC  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24495  017FAE  B4D8               	btfsc	status,2,c
 24496  017FB0  0011               	retfie		f
 24497                           
 24498                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24499  017FB2  D801               	call	i2u982_48
 24500  017FB4  0011               	retfie		f
 24501  017FB6                     i2u982_48:
 24502  017FB6  0005               	push	
 24503  017FB8  6EFA               	movwf	pclath,c
 24504  017FBA  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24505  017FBC  6EFD               	movwf	tosl,c
 24506  017FBE  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24507  017FC0  6EFE               	movwf	tosh,c
 24508  017FC2  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24509  017FC4  6EFF               	movwf	tosu,c
 24510  017FC6  50FA               	movf	pclath,w,c
 24511  017FC8  0012               	return		;indir
 24512  017FCA                     __end_of_UART1_tx_vect_isr:
 24513                           	opt callstack 0
 24514                           
 24515 ;; *************** function _UART1_Transmit_ISR *****************
 24516 ;; Defined at:
 24517 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24518 ;; Parameters:    Size  Location     Type
 24519 ;;		None
 24520 ;; Auto vars:     Size  Location     Type
 24521 ;;		None
 24522 ;; Return value:  Size  Location     Type
 24523 ;;                  1  [STACK] void 
 24524 ;; Registers used:
 24525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24526 ;; Tracked objects:
 24527 ;;		On entry : 0/0
 24528 ;;		On exit  : 3B/39
 24529 ;;		Unchanged: 0/0
 24530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24535 ;;Total ram usage:        0 bytes
 24536 ;; Hardware stack levels used:    1
 24537 ;; This function calls:
 24538 ;;		Nothing
 24539 ;; This function is called by:
 24540 ;;		_UART1_Initialize
 24541 ;;		_UART1_tx_vect_isr
 24542 ;; This function uses a reentrant model
 24543 ;;
 24544                           
 24545                           	psect	text126
 24546  017D1A                     __ptext126:
 24547                           	opt callstack 0
 24548  017D1A                     _UART1_Transmit_ISR:
 24549                           	opt callstack 13
 24550                           
 24551                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24552                           
 24553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24554                           ;incstack = 0
 24555  017D1A  0E40               	movlw	64
 24556  017D1C  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24557  017D1E  D010               	goto	l581
 24558                           
 24559                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24560  017D20  0EBD               	movlw	low _uart1TxBuffer
 24561  017D22  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24562  017D24  6ED9               	movwf	fsr2l,c
 24563  017D26  6ADA               	clrf	fsr2h,c
 24564  017D28  0E02               	movlw	high _uart1TxBuffer
 24565  017D2A  22DA               	addwfc	fsr2h,f,c
 24566  017D2C  50DF               	movf	indf2,w,c
 24567  017D2E  013D               	movlb	61	; () banked
 24568  017D30  6FEA               	movwf	234,b	;volatile
 24569                           
 24570                           ; BSR set to: 61
 24571  017D32  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24572                           
 24573                           ; BSR set to: 61
 24574                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24575  017D34  0E3F               	movlw	63
 24576  017D36  6433               	cpfsgt	_uart1TxTail^0,c
 24577  017D38  D001               	goto	l8368
 24578                           
 24579                           ; BSR set to: 61
 24580                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24581  017D3A  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24582  017D3C                     l8368:
 24583                           
 24584                           ; BSR set to: 61
 24585                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24586  017D3C  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24587                           
 24588                           ;mcc_generated_files/uart1.c: 222:  } else {
 24589  017D3E  0012               	return	
 24590  017D40                     l581:
 24591                           
 24592                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24593  017D40  0139               	movlb	57	; () banked
 24594  017D42  9993               	bcf	147,4,b	;volatile
 24595                           
 24596                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24597  017D44  0012               	return		;funcret
 24598  017D46                     __end_of_UART1_Transmit_ISR:
 24599                           	opt callstack 0
 24600                           
 24601 ;; *************** function _UART1_rx_vect_isr *****************
 24602 ;; Defined at:
 24603 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;		None
 24606 ;; Auto vars:     Size  Location     Type
 24607 ;;		None
 24608 ;; Return value:  Size  Location     Type
 24609 ;;                  1    wreg      void 
 24610 ;; Registers used:
 24611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24612 ;; Tracked objects:
 24613 ;;		On entry : 0/0
 24614 ;;		On exit  : 0/0
 24615 ;;		Unchanged: 0/0
 24616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24621 ;;Total ram usage:        0 bytes
 24622 ;; Hardware stack levels used:    1
 24623 ;; Hardware stack levels required when called:    1
 24624 ;; This function calls:
 24625 ;;		Absolute function
 24626 ;;		_UART1_Receive_ISR
 24627 ;; This function is called by:
 24628 ;;		Interrupt level 2
 24629 ;; This function uses a non-reentrant model
 24630 ;;
 24631                           
 24632                           	psect	text127
 24633  017FCC                     __ptext127:
 24634                           	opt callstack 0
 24635  017FCC                     _UART1_rx_vect_isr:
 24636                           	opt callstack 13
 24637                           
 24638                           ;incstack = 0
 24639  017FCC  EE13  F356         	lfsr	1,___inthi_sp
 24640                           
 24641                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24642  017FD0  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24643  017FD2  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24644  017FD4  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24645  017FD6  B4D8               	btfsc	status,2,c
 24646  017FD8  0011               	retfie		f
 24647                           
 24648                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24649  017FDA  D801               	call	i2u984_48
 24650  017FDC  0011               	retfie		f
 24651  017FDE                     i2u984_48:
 24652  017FDE  0005               	push	
 24653  017FE0  6EFA               	movwf	pclath,c
 24654  017FE2  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24655  017FE4  6EFD               	movwf	tosl,c
 24656  017FE6  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24657  017FE8  6EFE               	movwf	tosh,c
 24658  017FEA  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24659  017FEC  6EFF               	movwf	tosu,c
 24660  017FEE  50FA               	movf	pclath,w,c
 24661  017FF0  0012               	return		;indir
 24662  017FF2                     __end_of_UART1_rx_vect_isr:
 24663                           	opt callstack 0
 24664                           
 24665 ;; *************** function _UART1_Receive_ISR *****************
 24666 ;; Defined at:
 24667 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;		None
 24670 ;; Auto vars:     Size  Location     Type
 24671 ;;		None
 24672 ;; Return value:  Size  Location     Type
 24673 ;;                  1  [STACK] void 
 24674 ;; Registers used:
 24675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24676 ;; Tracked objects:
 24677 ;;		On entry : 0/0
 24678 ;;		On exit  : 0/0
 24679 ;;		Unchanged: 0/0
 24680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24685 ;;Total ram usage:        0 bytes
 24686 ;; Hardware stack levels used:    1
 24687 ;; This function calls:
 24688 ;;		Nothing
 24689 ;; This function is called by:
 24690 ;;		_UART1_Initialize
 24691 ;;		_UART1_rx_vect_isr
 24692 ;; This function uses a reentrant model
 24693 ;;
 24694                           
 24695                           	psect	text128
 24696  018168                     __ptext128:
 24697                           	opt callstack 0
 24698  018168                     _UART1_Receive_ISR:
 24699                           	opt callstack 13
 24700                           
 24701                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24702                           
 24703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24704                           ;incstack = 0
 24705  018168  0E00               	movlw	low _uart1RxBuffer
 24706  01816A  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24707  01816C  6ED9               	movwf	fsr2l,c
 24708  01816E  6ADA               	clrf	fsr2h,c
 24709  018170  0E05               	movlw	high _uart1RxBuffer
 24710  018172  22DA               	addwfc	fsr2h,f,c
 24711  018174  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24712  01817A  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24713                           
 24714                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24715  01817C  2831               	incf	_uart1RxHead^0,w,c
 24716  01817E  B4D8               	btfsc	status,2,c
 24717                           
 24718                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24719  018180  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24720                           
 24721                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24722  018182  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24723                           
 24724                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24725  018184  0012               	return		;funcret
 24726  018186                     __end_of_UART1_Receive_ISR:
 24727                           	opt callstack 0
 24728                           
 24729 ;; *************** function _UART2_tx_vect_isr *****************
 24730 ;; Defined at:
 24731 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24732 ;; Parameters:    Size  Location     Type
 24733 ;;		None
 24734 ;; Auto vars:     Size  Location     Type
 24735 ;;		None
 24736 ;; Return value:  Size  Location     Type
 24737 ;;                  1    wreg      void 
 24738 ;; Registers used:
 24739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24740 ;; Tracked objects:
 24741 ;;		On entry : 0/0
 24742 ;;		On exit  : 0/0
 24743 ;;		Unchanged: 0/0
 24744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24749 ;;Total ram usage:        0 bytes
 24750 ;; Hardware stack levels used:    1
 24751 ;; Hardware stack levels required when called:    1
 24752 ;; This function calls:
 24753 ;;		Absolute function
 24754 ;;		_UART2_Transmit_ISR
 24755 ;; This function is called by:
 24756 ;;		Interrupt level 2
 24757 ;; This function uses a non-reentrant model
 24758 ;;
 24759                           
 24760                           	psect	text129
 24761  017FF4                     __ptext129:
 24762                           	opt callstack 0
 24763  017FF4                     _UART2_tx_vect_isr:
 24764                           	opt callstack 13
 24765                           
 24766                           ;incstack = 0
 24767  017FF4  EE13  F356         	lfsr	1,___inthi_sp
 24768                           
 24769                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24770  017FF8  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24771  017FFA  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24772  017FFC  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24773  017FFE  B4D8               	btfsc	status,2,c
 24774  018000  0011               	retfie		f
 24775                           
 24776                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24777  018002  D801               	call	i2u986_48
 24778  018004  0011               	retfie		f
 24779  018006                     i2u986_48:
 24780  018006  0005               	push	
 24781  018008  6EFA               	movwf	pclath,c
 24782  01800A  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24783  01800C  6EFD               	movwf	tosl,c
 24784  01800E  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24785  018010  6EFE               	movwf	tosh,c
 24786  018012  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24787  018014  6EFF               	movwf	tosu,c
 24788  018016  50FA               	movf	pclath,w,c
 24789  018018  0012               	return		;indir
 24790  01801A                     __end_of_UART2_tx_vect_isr:
 24791                           	opt callstack 0
 24792                           
 24793 ;; *************** function _UART2_Transmit_ISR *****************
 24794 ;; Defined at:
 24795 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24796 ;; Parameters:    Size  Location     Type
 24797 ;;		None
 24798 ;; Auto vars:     Size  Location     Type
 24799 ;;		None
 24800 ;; Return value:  Size  Location     Type
 24801 ;;                  1  [STACK] void 
 24802 ;; Registers used:
 24803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24804 ;; Tracked objects:
 24805 ;;		On entry : 0/0
 24806 ;;		On exit  : 3B/39
 24807 ;;		Unchanged: 0/0
 24808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24813 ;;Total ram usage:        0 bytes
 24814 ;; Hardware stack levels used:    1
 24815 ;; This function calls:
 24816 ;;		Nothing
 24817 ;; This function is called by:
 24818 ;;		_UART2_Initialize
 24819 ;;		_UART2_tx_vect_isr
 24820 ;; This function uses a reentrant model
 24821 ;;
 24822                           
 24823                           	psect	text130
 24824  017D46                     __ptext130:
 24825                           	opt callstack 0
 24826  017D46                     _UART2_Transmit_ISR:
 24827                           	opt callstack 13
 24828                           
 24829                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24830                           
 24831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24832                           ;incstack = 0
 24833  017D46  0E40               	movlw	64
 24834  017D48  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24835  017D4A  D010               	goto	l701
 24836                           
 24837                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24838  017D4C  0E00               	movlw	low _uart2TxBuffer
 24839  017D4E  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24840  017D50  6ED9               	movwf	fsr2l,c
 24841  017D52  6ADA               	clrf	fsr2h,c
 24842  017D54  0E03               	movlw	high _uart2TxBuffer
 24843  017D56  22DA               	addwfc	fsr2h,f,c
 24844  017D58  50DF               	movf	indf2,w,c
 24845  017D5A  013D               	movlb	61	; () banked
 24846  017D5C  6FD2               	movwf	210,b	;volatile
 24847                           
 24848                           ; BSR set to: 61
 24849  017D5E  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24850                           
 24851                           ; BSR set to: 61
 24852                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24853  017D60  0E3F               	movlw	63
 24854  017D62  642D               	cpfsgt	_uart2TxTail^0,c
 24855  017D64  D001               	goto	l8390
 24856                           
 24857                           ; BSR set to: 61
 24858                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24859  017D66  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24860  017D68                     l8390:
 24861                           
 24862                           ; BSR set to: 61
 24863                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24864  017D68  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24865                           
 24866                           ;mcc_generated_files/uart2.c: 224:     }
 24867  017D6A  0012               	return	
 24868  017D6C                     l701:
 24869                           
 24870                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24871  017D6C  0139               	movlb	57	; () banked
 24872  017D6E  9796               	bcf	150,3,b	;volatile
 24873                           
 24874                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24875  017D70  0012               	return		;funcret
 24876  017D72                     __end_of_UART2_Transmit_ISR:
 24877                           	opt callstack 0
 24878                           
 24879 ;; *************** function _UART2_rx_vect_isr *****************
 24880 ;; Defined at:
 24881 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24882 ;; Parameters:    Size  Location     Type
 24883 ;;		None
 24884 ;; Auto vars:     Size  Location     Type
 24885 ;;		None
 24886 ;; Return value:  Size  Location     Type
 24887 ;;                  1    wreg      void 
 24888 ;; Registers used:
 24889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/0
 24892 ;;		On exit  : 0/0
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24899 ;;Total ram usage:        0 bytes
 24900 ;; Hardware stack levels used:    1
 24901 ;; Hardware stack levels required when called:    1
 24902 ;; This function calls:
 24903 ;;		Absolute function
 24904 ;;		_UART2_Receive_ISR
 24905 ;; This function is called by:
 24906 ;;		Interrupt level 2
 24907 ;; This function uses a non-reentrant model
 24908 ;;
 24909                           
 24910                           	psect	text131
 24911  01801C                     __ptext131:
 24912                           	opt callstack 0
 24913  01801C                     _UART2_rx_vect_isr:
 24914                           	opt callstack 13
 24915                           
 24916                           ;incstack = 0
 24917  01801C  EE13  F356         	lfsr	1,___inthi_sp
 24918                           
 24919                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24920  018020  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24921  018022  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24922  018024  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24923  018026  B4D8               	btfsc	status,2,c
 24924  018028  0011               	retfie		f
 24925                           
 24926                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 24927  01802A  D801               	call	i2u988_48
 24928  01802C  0011               	retfie		f
 24929  01802E                     i2u988_48:
 24930  01802E  0005               	push	
 24931  018030  6EFA               	movwf	pclath,c
 24932  018032  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24933  018034  6EFD               	movwf	tosl,c
 24934  018036  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 24935  018038  6EFE               	movwf	tosh,c
 24936  01803A  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 24937  01803C  6EFF               	movwf	tosu,c
 24938  01803E  50FA               	movf	pclath,w,c
 24939  018040  0012               	return		;indir
 24940  018042                     __end_of_UART2_rx_vect_isr:
 24941                           	opt callstack 0
 24942                           
 24943 ;; *************** function _UART2_Receive_ISR *****************
 24944 ;; Defined at:
 24945 ;;		line 233 in file "mcc_generated_files/uart2.c"
 24946 ;; Parameters:    Size  Location     Type
 24947 ;;		None
 24948 ;; Auto vars:     Size  Location     Type
 24949 ;;		None
 24950 ;; Return value:  Size  Location     Type
 24951 ;;                  1  [STACK] void 
 24952 ;; Registers used:
 24953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24954 ;; Tracked objects:
 24955 ;;		On entry : 0/0
 24956 ;;		On exit  : 0/0
 24957 ;;		Unchanged: 0/0
 24958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24963 ;;Total ram usage:        0 bytes
 24964 ;; Hardware stack levels used:    1
 24965 ;; This function calls:
 24966 ;;		Nothing
 24967 ;; This function is called by:
 24968 ;;		_UART2_Initialize
 24969 ;;		_UART2_rx_vect_isr
 24970 ;; This function uses a reentrant model
 24971 ;;
 24972                           
 24973                           	psect	text132
 24974  018186                     __ptext132:
 24975                           	opt callstack 0
 24976  018186                     _UART2_Receive_ISR:
 24977                           	opt callstack 13
 24978                           
 24979                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 24980                           
 24981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24982                           ;incstack = 0
 24983  018186  0E00               	movlw	low _uart2RxBuffer
 24984  018188  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 24985  01818A  6ED9               	movwf	fsr2l,c
 24986  01818C  6ADA               	clrf	fsr2h,c
 24987  01818E  0E06               	movlw	high _uart2RxBuffer
 24988  018190  22DA               	addwfc	fsr2h,f,c
 24989  018192  006F F743 FFDF     	movff	15824,indf2	;volatile
 24990  018198  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 24991                           
 24992                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 24993  01819A  282B               	incf	_uart2RxHead^0,w,c
 24994  01819C  B4D8               	btfsc	status,2,c
 24995                           
 24996                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 24997  01819E  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 24998                           
 24999                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25000  0181A0  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 25001                           
 25002                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25003  0181A2  0012               	return		;funcret
 25004  0181A4                     __end_of_UART2_Receive_ISR:
 25005                           	opt callstack 0
 25006                           
 25007 ;; *************** function _TMR6_ISR *****************
 25008 ;; Defined at:
 25009 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25010 ;; Parameters:    Size  Location     Type
 25011 ;;		None
 25012 ;; Auto vars:     Size  Location     Type
 25013 ;;		None
 25014 ;; Return value:  Size  Location     Type
 25015 ;;                  1    wreg      void 
 25016 ;; Registers used:
 25017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25018 ;; Tracked objects:
 25019 ;;		On entry : 0/0
 25020 ;;		On exit  : 0/0
 25021 ;;		Unchanged: 0/0
 25022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25027 ;;Total ram usage:        1 bytes
 25028 ;; Hardware stack levels used:    1
 25029 ;; Hardware stack levels required when called:    2
 25030 ;; This function calls:
 25031 ;;		_TMR6_CallBack
 25032 ;; This function is called by:
 25033 ;;		Interrupt level 2
 25034 ;; This function uses a non-reentrant model
 25035 ;;
 25036                           
 25037                           	psect	text133
 25038  018210                     __ptext133:
 25039                           	opt callstack 0
 25040  018210                     _TMR6_ISR:
 25041                           	opt callstack 12
 25042                           
 25043                           ;incstack = 0
 25044  018210  0060  F0D4  F0DC   	movff	btemp,??_TMR6_ISR
 25045  018216  EE13  F356         	lfsr	1,___inthi_sp
 25046                           
 25047                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25048  01821A  0139               	movlb	57	; () banked
 25049  01821C  91A9               	bcf	169,0,b	;volatile
 25050                           
 25051                           ; BSR set to: 57
 25052                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25053  01821E  EC67  F0C0         	call	_TMR6_CallBack	;wreg free
 25054  018222  0060  F370  F035   	movff	??_TMR6_ISR,btemp
 25055  018228  0011               	retfie		f
 25056  01822A                     __end_of_TMR6_ISR:
 25057                           	opt callstack 0
 25058                           
 25059 ;; *************** function _TMR6_CallBack *****************
 25060 ;; Defined at:
 25061 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25062 ;; Parameters:    Size  Location     Type
 25063 ;;		None
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;		None
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1  [STACK] void 
 25068 ;; Registers used:
 25069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25070 ;; Tracked objects:
 25071 ;;		On entry : 3F/39
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25079 ;;Total ram usage:        0 bytes
 25080 ;; Hardware stack levels used:    1
 25081 ;; Hardware stack levels required when called:    1
 25082 ;; This function calls:
 25083 ;;		Absolute function
 25084 ;;		_TMR6_DefaultInterruptHandler
 25085 ;; This function is called by:
 25086 ;;		_TMR6_ISR
 25087 ;; This function uses a reentrant model
 25088 ;;
 25089                           
 25090                           	psect	text134
 25091  0180CE                     __ptext134:
 25092                           	opt callstack 0
 25093  0180CE                     _TMR6_CallBack:
 25094                           	opt callstack 12
 25095                           
 25096                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25097                           
 25098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25099                           ;incstack = 0
 25100  0180CE  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25101  0180D0  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 25102  0180D2  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 25103  0180D4  B4D8               	btfsc	status,2,c
 25104  0180D6  0012               	return	
 25105                           
 25106                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25107  0180D8  D801               	call	u789_48
 25108  0180DA  0012               	return	
 25109  0180DC                     u789_48:
 25110  0180DC  0005               	push	
 25111  0180DE  6EFA               	movwf	pclath,c
 25112  0180E0  5001               	movf	_TMR6_InterruptHandler^0,w,c
 25113  0180E2  6EFD               	movwf	tosl,c
 25114  0180E4  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 25115  0180E6  6EFE               	movwf	tosh,c
 25116  0180E8  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 25117  0180EA  6EFF               	movwf	tosu,c
 25118  0180EC  50FA               	movf	pclath,w,c
 25119  0180EE  0012               	return		;indir
 25120  0180F0                     __end_of_TMR6_CallBack:
 25121                           	opt callstack 0
 25122                           
 25123 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25124 ;; Defined at:
 25125 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25126 ;; Parameters:    Size  Location     Type
 25127 ;;		None
 25128 ;; Auto vars:     Size  Location     Type
 25129 ;;  i               1  [STACK] unsigned char 
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1  [STACK] void 
 25132 ;; Registers used:
 25133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25134 ;; Tracked objects:
 25135 ;;		On entry : 0/39
 25136 ;;		On exit  : 0/0
 25137 ;;		Unchanged: 0/0
 25138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25143 ;;Total ram usage:        0 bytes
 25144 ;; Hardware stack levels used:    1
 25145 ;; This function calls:
 25146 ;;		Nothing
 25147 ;; This function is called by:
 25148 ;;		_TMR6_Initialize
 25149 ;;		_TMR6_CallBack
 25150 ;; This function uses a reentrant model
 25151 ;;
 25152                           
 25153                           	psect	text135
 25154  0179D0                     __ptext135:
 25155                           	opt callstack 0
 25156  0179D0                     _TMR6_DefaultInterruptHandler:
 25157                           	opt callstack 0
 25158                           
 25159                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25160  0179D0  52E6               	movf	postinc1,f,c
 25161                           
 25162                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25163                           ;stkvar	_i @ sp[(-1)+0]
 25164                           
 25165                           ;incstack = 0
 25166  0179D2  0EFF               	movlw	-1
 25167  0179D4  6AE3               	clrf	plusw1,c
 25168  0179D6                     l8158:
 25169                           
 25170                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25171                           ;stkvar	_i @ sp[(-1)+0]
 25172  0179D6  0EFF               	movlw	-1
 25173  0179D8  50E3               	movf	plusw1,w,c
 25174  0179DA  0D02               	mullw	2
 25175  0179DC  50F3               	movf	243,w,c
 25176  0179DE  0F82               	addlw	low _tickCount
 25177  0179E0  6ED9               	movwf	fsr2l,c
 25178  0179E2  6ADA               	clrf	fsr2h,c
 25179  0179E4  50DE               	movf	postinc2,w,c
 25180  0179E6  10DE               	iorwf	postinc2,w,c
 25181  0179E8  B4D8               	btfsc	status,2,c
 25182  0179EA  D00A               	goto	l8162
 25183                           
 25184                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25185                           ;stkvar	_i @ sp[(-1)+0]
 25186  0179EC  0EFF               	movlw	-1
 25187  0179EE  50E3               	movf	plusw1,w,c
 25188  0179F0  0D02               	mullw	2
 25189  0179F2  50F3               	movf	243,w,c
 25190  0179F4  0F82               	addlw	low _tickCount
 25191  0179F6  6ED9               	movwf	fsr2l,c
 25192  0179F8  6ADA               	clrf	fsr2h,c
 25193  0179FA  06DE               	decf	postinc2,f,c
 25194  0179FC  0E00               	movlw	0
 25195  0179FE  5ADD               	subwfb	postdec2,f,c
 25196  017A00                     l8162:
 25197                           
 25198                           ;mcc_generated_files/tmr6.c: 207:  }
 25199                           ;stkvar	_i @ sp[(-1)+0]
 25200  017A00  0EFF               	movlw	-1
 25201  017A02  2AE3               	incf	plusw1,f,c
 25202                           
 25203                           ;stkvar	_i @ sp[(-1)+0]
 25204  017A04  0EFF               	movlw	-1
 25205  017A06  006F FF8C  F035    	movff	plusw1,btemp
 25206  017A0C  0E0B               	movlw	11
 25207  017A0E  6435               	cpfsgt	btemp^0,c
 25208  017A10  D7E2               	goto	l8158
 25209                           
 25210                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25211  017A12  52E5               	movf	postdec1,f,c
 25212  017A14  0012               	return		;funcret
 25213  017A16                     __end_of_TMR6_DefaultInterruptHandler:
 25214                           	opt callstack 0
 25215                           
 25216 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25217 ;; Defined at:
 25218 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25219 ;; Parameters:    Size  Location     Type
 25220 ;;		None
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;		None
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  1    wreg      void 
 25225 ;; Registers used:
 25226 ;;		None
 25227 ;; Tracked objects:
 25228 ;;		On entry : 0/0
 25229 ;;		On exit  : 3F/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25236 ;;Total ram usage:        0 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; This function calls:
 25239 ;;		Nothing
 25240 ;; This function is called by:
 25241 ;;		Interrupt level 2
 25242 ;; This function uses a non-reentrant model
 25243 ;;
 25244                           
 25245                           	psect	text136
 25246  018328                     __ptext136:
 25247                           	opt callstack 0
 25248  018328                     _DMA1_DMASCNT_ISR:
 25249                           	opt callstack 14
 25250                           
 25251                           ;incstack = 0
 25252  018328  EE13  F356         	lfsr	1,___inthi_sp
 25253                           
 25254                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25255  01832C  0139               	movlb	57	; () banked
 25256  01832E  91A2               	bcf	162,0,b	;volatile
 25257                           
 25258                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25259  018330  0100               	movlb	0	; () banked
 25260  018332  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 25261                           
 25262                           ; BSR set to: 0
 25263  018334  0011               	retfie		f
 25264  018336                     __end_of_DMA1_DMASCNT_ISR:
 25265                           	opt callstack 0
 25266                           
 25267 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25268 ;; Defined at:
 25269 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;		None
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;		None
 25274 ;; Return value:  Size  Location     Type
 25275 ;;                  1    wreg      void 
 25276 ;; Registers used:
 25277 ;;		None
 25278 ;; Tracked objects:
 25279 ;;		On entry : 0/0
 25280 ;;		On exit  : 3F/39
 25281 ;;		Unchanged: 0/0
 25282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25287 ;;Total ram usage:        0 bytes
 25288 ;; Hardware stack levels used:    1
 25289 ;; This function calls:
 25290 ;;		Nothing
 25291 ;; This function is called by:
 25292 ;;		Interrupt level 2
 25293 ;; This function uses a non-reentrant model
 25294 ;;
 25295                           
 25296                           	psect	text137
 25297  018340                     __ptext137:
 25298                           	opt callstack 0
 25299  018340                     _DMA1_DMADCNT_ISR:
 25300                           	opt callstack 14
 25301                           
 25302                           ; BSR set to: 0
 25303                           ;incstack = 0
 25304  018340  EE13  F356         	lfsr	1,___inthi_sp
 25305                           
 25306                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25307  018344  0139               	movlb	57	; () banked
 25308  018346  93A2               	bcf	162,1,b	;volatile
 25309                           
 25310                           ; BSR set to: 57
 25311  018348  0011               	retfie		f
 25312  01834A                     __end_of_DMA1_DMADCNT_ISR:
 25313                           	opt callstack 0
 25314                           
 25315 ;; *************** function _DMA1_DMAA_ISR *****************
 25316 ;; Defined at:
 25317 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25318 ;; Parameters:    Size  Location     Type
 25319 ;;		None
 25320 ;; Auto vars:     Size  Location     Type
 25321 ;;		None
 25322 ;; Return value:  Size  Location     Type
 25323 ;;                  1    wreg      void 
 25324 ;; Registers used:
 25325 ;;		None
 25326 ;; Tracked objects:
 25327 ;;		On entry : 0/0
 25328 ;;		On exit  : 3F/39
 25329 ;;		Unchanged: 0/0
 25330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25335 ;;Total ram usage:        0 bytes
 25336 ;; Hardware stack levels used:    1
 25337 ;; This function calls:
 25338 ;;		Nothing
 25339 ;; This function is called by:
 25340 ;;		Interrupt level 2
 25341 ;; This function uses a non-reentrant model
 25342 ;;
 25343                           
 25344                           	psect	text138
 25345  01834C                     __ptext138:
 25346                           	opt callstack 0
 25347  01834C                     _DMA1_DMAA_ISR:
 25348                           	opt callstack 14
 25349                           
 25350                           ; BSR set to: 57
 25351                           ;incstack = 0
 25352  01834C  EE13  F356         	lfsr	1,___inthi_sp
 25353                           
 25354                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25355  018350  0139               	movlb	57	; () banked
 25356  018352  97A2               	bcf	162,3,b	;volatile
 25357                           
 25358                           ; BSR set to: 57
 25359  018354  0011               	retfie		f
 25360  018356                     __end_of_DMA1_DMAA_ISR:
 25361                           	opt callstack 0
 25362                           
 25363 ;; *************** function _DMA1_DMAOR_ISR *****************
 25364 ;; Defined at:
 25365 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25366 ;; Parameters:    Size  Location     Type
 25367 ;;		None
 25368 ;; Auto vars:     Size  Location     Type
 25369 ;;		None
 25370 ;; Return value:  Size  Location     Type
 25371 ;;                  1    wreg      void 
 25372 ;; Registers used:
 25373 ;;		None
 25374 ;; Tracked objects:
 25375 ;;		On entry : 0/0
 25376 ;;		On exit  : 3F/39
 25377 ;;		Unchanged: 0/0
 25378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;Total ram usage:        0 bytes
 25384 ;; Hardware stack levels used:    1
 25385 ;; This function calls:
 25386 ;;		Nothing
 25387 ;; This function is called by:
 25388 ;;		Interrupt level 2
 25389 ;; This function uses a non-reentrant model
 25390 ;;
 25391                           
 25392                           	psect	text139
 25393  018358                     __ptext139:
 25394                           	opt callstack 0
 25395  018358                     _DMA1_DMAOR_ISR:
 25396                           	opt callstack 14
 25397                           
 25398                           ; BSR set to: 57
 25399                           ;incstack = 0
 25400  018358  EE13  F356         	lfsr	1,___inthi_sp
 25401                           
 25402                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25403  01835C  0139               	movlb	57	; () banked
 25404  01835E  95A2               	bcf	162,2,b	;volatile
 25405                           
 25406                           ; BSR set to: 57
 25407  018360  0011               	retfie		f
 25408  018362                     __end_of_DMA1_DMAOR_ISR:
 25409                           	opt callstack 0
 25410                           
 25411                           ;
 25412                           ; Interrupt Vector Table @ 0x8
 25413                           ;
 25414                           
 25415                           	psect	ivt0x8
 25416  000008                     __pivt0x8:
 25417                           	opt callstack 0
 25418  000008                     ivt0x8_base:
 25419                           	opt callstack 0
 25420                           
 25421                           ; Vector 0 : SWINT
 25422  000008  60E5               	dw	_Default_ISR shr (0+2)
 25423                           
 25424                           ; Vector 1 : HLVD
 25425  00000A  60E5               	dw	_Default_ISR shr (0+2)
 25426                           
 25427                           ; Vector 2 : OSF
 25428  00000C  60E5               	dw	_Default_ISR shr (0+2)
 25429                           
 25430                           ; Vector 3 : CSW
 25431  00000E  60E5               	dw	_Default_ISR shr (0+2)
 25432                           
 25433                           ; Vector 4 : NVM
 25434  000010  60E5               	dw	_Default_ISR shr (0+2)
 25435                           
 25436                           ; Vector 5 : SCAN
 25437  000012  60E5               	dw	_Default_ISR shr (0+2)
 25438                           
 25439                           ; Vector 6 : CRC
 25440  000014  60E5               	dw	_Default_ISR shr (0+2)
 25441                           
 25442                           ; Vector 7 : IOC
 25443  000016  60E5               	dw	_Default_ISR shr (0+2)
 25444                           
 25445                           ; Vector 8 : INT0
 25446  000018  60C2               	dw	_INT0_ISR shr (0+2)
 25447                           
 25448                           ; Vector 9 : ZCD
 25449  00001A  60E5               	dw	_Default_ISR shr (0+2)
 25450                           
 25451                           ; Vector 10 : AD
 25452  00001C  5ED4               	dw	_ADCC_ISR shr (0+2)
 25453                           
 25454                           ; Vector 11 : ADT
 25455  00001E  5D19               	dw	_ADCC_ThresholdISR shr (0+2)
 25456                           
 25457                           ; Vector 12 : CMP1
 25458  000020  60E5               	dw	_Default_ISR shr (0+2)
 25459                           
 25460                           ; Vector 13 : SMT1
 25461  000022  60E5               	dw	_Default_ISR shr (0+2)
 25462                           
 25463                           ; Vector 14 : SMT1PRA
 25464  000024  60E5               	dw	_Default_ISR shr (0+2)
 25465                           
 25466                           ; Vector 15 : SMT1PRW
 25467  000026  60E5               	dw	_Default_ISR shr (0+2)
 25468                           
 25469                           ; Vector 16 : DMA1SCNT
 25470  000028  60CA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25471                           
 25472                           ; Vector 17 : DMA1DCNT
 25473  00002A  60D0               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25474                           
 25475                           ; Vector 18 : DMA1OR
 25476  00002C  60D6               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25477                           
 25478                           ; Vector 19 : DMA1A
 25479  00002E  60D3               	dw	_DMA1_DMAA_ISR shr (0+2)
 25480                           
 25481                           ; Vector 20 : SPI1RX
 25482  000030  60E5               	dw	_Default_ISR shr (0+2)
 25483                           
 25484                           ; Vector 21 : SPI1TX
 25485  000032  60E5               	dw	_Default_ISR shr (0+2)
 25486                           
 25487                           ; Vector 22 : SPI1
 25488  000034  60E5               	dw	_Default_ISR shr (0+2)
 25489                           
 25490                           ; Vector 23 : I2C1RX
 25491  000036  60E5               	dw	_Default_ISR shr (0+2)
 25492                           
 25493                           ; Vector 24 : I2C1TX
 25494  000038  60E5               	dw	_Default_ISR shr (0+2)
 25495                           
 25496                           ; Vector 25 : I2C1
 25497  00003A  60E5               	dw	_Default_ISR shr (0+2)
 25498                           
 25499                           ; Vector 26 : I2C1E
 25500  00003C  60E5               	dw	_Default_ISR shr (0+2)
 25501                           
 25502                           ; Vector 27 : U1RX
 25503  00003E  5FF3               	dw	_UART1_rx_vect_isr shr (0+2)
 25504                           
 25505                           ; Vector 28 : U1TX
 25506  000040  5FE9               	dw	_UART1_tx_vect_isr shr (0+2)
 25507                           
 25508                           ; Vector 29 : U1E
 25509  000042  60E5               	dw	_Default_ISR shr (0+2)
 25510                           
 25511                           ; Vector 30 : U1
 25512  000044  60E5               	dw	_Default_ISR shr (0+2)
 25513                           
 25514                           ; Vector 31 : TMR0
 25515  000046  60E5               	dw	_Default_ISR shr (0+2)
 25516                           
 25517                           ; Vector 32 : TMR1
 25518  000048  60E5               	dw	_Default_ISR shr (0+2)
 25519                           
 25520                           ; Vector 33 : TMR1G
 25521  00004A  60E5               	dw	_Default_ISR shr (0+2)
 25522                           
 25523                           ; Vector 34 : TMR2
 25524  00004C  60E5               	dw	_Default_ISR shr (0+2)
 25525                           
 25526                           ; Vector 35 : CCP1
 25527  00004E  60E5               	dw	_Default_ISR shr (0+2)
 25528                           
 25529                           ; Vector 36 : Undefined
 25530  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25531                           
 25532                           ; Vector 37 : NCO1
 25533  000052  60E5               	dw	_Default_ISR shr (0+2)
 25534                           
 25535                           ; Vector 38 : CWG1
 25536  000054  60E5               	dw	_Default_ISR shr (0+2)
 25537                           
 25538                           ; Vector 39 : CLC1
 25539  000056  60E5               	dw	_Default_ISR shr (0+2)
 25540                           
 25541                           ; Vector 40 : INT1
 25542  000058  60C6               	dw	_INT1_ISR shr (0+2)
 25543                           
 25544                           ; Vector 41 : CMP2
 25545  00005A  60E5               	dw	_Default_ISR shr (0+2)
 25546                           
 25547                           ; Vector 42 : DMA2SCNT
 25548  00005C  60E5               	dw	_Default_ISR shr (0+2)
 25549                           
 25550                           ; Vector 43 : DMA2DCNT
 25551  00005E  60E5               	dw	_Default_ISR shr (0+2)
 25552                           
 25553                           ; Vector 44 : DMA2OR
 25554  000060  60E5               	dw	_Default_ISR shr (0+2)
 25555                           
 25556                           ; Vector 45 : DMA2A
 25557  000062  60E5               	dw	_Default_ISR shr (0+2)
 25558                           
 25559                           ; Vector 46 : I2C2RX
 25560  000064  60E5               	dw	_Default_ISR shr (0+2)
 25561                           
 25562                           ; Vector 47 : I2C2TX
 25563  000066  60E5               	dw	_Default_ISR shr (0+2)
 25564                           
 25565                           ; Vector 48 : I2C2
 25566  000068  60E5               	dw	_Default_ISR shr (0+2)
 25567                           
 25568                           ; Vector 49 : I2C2E
 25569  00006A  60E5               	dw	_Default_ISR shr (0+2)
 25570                           
 25571                           ; Vector 50 : U2RX
 25572  00006C  6007               	dw	_UART2_rx_vect_isr shr (0+2)
 25573                           
 25574                           ; Vector 51 : U2TX
 25575  00006E  5FFD               	dw	_UART2_tx_vect_isr shr (0+2)
 25576                           
 25577                           ; Vector 52 : U2E
 25578  000070  60E5               	dw	_Default_ISR shr (0+2)
 25579                           
 25580                           ; Vector 53 : U2
 25581  000072  60E5               	dw	_Default_ISR shr (0+2)
 25582                           
 25583                           ; Vector 54 : TMR3
 25584  000074  60E5               	dw	_Default_ISR shr (0+2)
 25585                           
 25586                           ; Vector 55 : TMR3G
 25587  000076  60E5               	dw	_Default_ISR shr (0+2)
 25588                           
 25589                           ; Vector 56 : TMR4
 25590  000078  60E5               	dw	_Default_ISR shr (0+2)
 25591                           
 25592                           ; Vector 57 : CCP2
 25593  00007A  60E5               	dw	_Default_ISR shr (0+2)
 25594                           
 25595                           ; Vector 58 : Undefined
 25596  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25597                           
 25598                           ; Vector 59 : CWG2
 25599  00007E  60E5               	dw	_Default_ISR shr (0+2)
 25600                           
 25601                           ; Vector 60 : CLC2
 25602  000080  60E5               	dw	_Default_ISR shr (0+2)
 25603                           
 25604                           ; Vector 61 : INT2
 25605  000082  60E5               	dw	_Default_ISR shr (0+2)
 25606                           
 25607                           ; Vector 62 : Undefined
 25608  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25609                           
 25610                           ; Vector 63 : Undefined
 25611  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25612                           
 25613                           ; Vector 64 : Undefined
 25614  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25615                           
 25616                           ; Vector 65 : Undefined
 25617  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25618                           
 25619                           ; Vector 66 : Undefined
 25620  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25621                           
 25622                           ; Vector 67 : Undefined
 25623  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25624                           
 25625                           ; Vector 68 : Undefined
 25626  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25627                           
 25628                           ; Vector 69 : Undefined
 25629  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25630                           
 25631                           ; Vector 70 : TMR5
 25632  000094  5DAF               	dw	_TMR5_ISR shr (0+2)
 25633                           
 25634                           ; Vector 71 : TMR5G
 25635  000096  60E5               	dw	_Default_ISR shr (0+2)
 25636                           
 25637                           ; Vector 72 : TMR6
 25638  000098  6084               	dw	_TMR6_ISR shr (0+2)
 25639                           
 25640                           ; Vector 73 : CCP3
 25641  00009A  60E5               	dw	_Default_ISR shr (0+2)
 25642                           
 25643                           ; Vector 74 : CWG3
 25644  00009C  60E5               	dw	_Default_ISR shr (0+2)
 25645                           
 25646                           ; Vector 75 : CLC3
 25647  00009E  60E5               	dw	_Default_ISR shr (0+2)
 25648                           
 25649                           ; Vector 76 : Undefined
 25650  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25651                           
 25652                           ; Vector 77 : Undefined
 25653  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25654                           
 25655                           ; Vector 78 : Undefined
 25656  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25657                           
 25658                           ; Vector 79 : Undefined
 25659  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25660                           
 25661                           ; Vector 80 : CCP4
 25662  0000A8  60E5               	dw	_Default_ISR shr (0+2)
 25663                           
 25664                           ; Vector 81 : CLC4
 25665  0000AA  60E5               	dw	_Default_ISR shr (0+2)
 25666  0000AC                     ivt0x8_undefint:
 25667                           	opt callstack 0
 25668  0000AC  00FF               	reset	
 25669                           
 25670                           	psect	text140
 25671  000000                     __ptext140:
 25672                           	opt callstack 0
 25673                           
 25674                           	psect	param0
 25675  0000                     
 25676                           	psect	temp
 25677  000035                     btemp:
 25678                           	opt callstack 0
 25679  000035                     	ds	32
 25680  0000                     wtemp0	set	btemp
 25681  0000                     wtemp1	set	btemp+2
 25682  0000                     wtemp2	set	btemp+4
 25683  0000                     wtemp3	set	btemp+6
 25684  0000                     wtemp4	set	btemp+8
 25685  0000                     wtemp5	set	btemp+10
 25686  0000                     wtemp8	set	btemp+1
 25687  0000                     ttemp0	set	btemp
 25688  0000                     ttemp1	set	btemp+3
 25689  0000                     ttemp2	set	btemp+6
 25690  0000                     ttemp3	set	btemp+9
 25691  0000                     ttemp5	set	btemp+1
 25692  0000                     ttemp6	set	btemp+4
 25693  0000                     ttemp7	set	btemp+8
 25694  0000                     ltemp0	set	btemp
 25695  0000                     ltemp1	set	btemp+4
 25696  0000                     ltemp2	set	btemp+8
 25697  0000                     lltemp0	set	btemp
 25698  0000                     lltemp1	set	btemp+8
 25699  0000                     lltemp2	set	btemp+16
 25700  0000                     lltemp3	set	btemp+24
 25701                           tosu	equ	0x3FFF
 25702                           tosh	equ	0x3FFE
 25703                           tosl	equ	0x3FFD
 25704                           stkptr	equ	0x3FFC
 25705                           pclatu	equ	0x3FFB
 25706                           pclath	equ	0x3FFA
 25707                           pcl	equ	0x3FF9
 25708                           tblptru	equ	0x3FF8
 25709                           tblptrh	equ	0x3FF7
 25710                           tblptrl	equ	0x3FF6
 25711                           tablat	equ	0x3FF5
 25712                           prodh	equ	0x3FF4
 25713                           prodl	equ	0x3FF3
 25714                           indf0	equ	0x3FEF
 25715                           postinc0	equ	0x3FEE
 25716                           postdec0	equ	0x3FED
 25717                           preinc0	equ	0x3FEC
 25718                           plusw0	equ	0x3FEB
 25719                           fsr0h	equ	0x3FEA
 25720                           fsr0l	equ	0x3FE9
 25721                           wreg	equ	0x3FE8
 25722                           indf1	equ	0x3FE7
 25723                           postinc1	equ	0x3FE6
 25724                           postdec1	equ	0x3FE5
 25725                           preinc1	equ	0x3FE4
 25726                           plusw1	equ	0x3FE3
 25727                           fsr1h	equ	0x3FE2
 25728                           fsr1l	equ	0x3FE1
 25729                           bsr	equ	0x3FE0
 25730                           indf2	equ	0x3FDF
 25731                           postinc2	equ	0x3FDE
 25732                           postdec2	equ	0x3FDD
 25733                           preinc2	equ	0x3FDC
 25734                           plusw2	equ	0x3FDB
 25735                           fsr2h	equ	0x3FDA
 25736                           fsr2l	equ	0x3FD9
 25737                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        212
    BSS         1387
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     129
    BANK1           256      0     244
    BANK2           256      0     253
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4693_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291910
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                    _conv_raw_result
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                            6     0      6    6733
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _conv_raw_result                                      2     0      2    4938
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _get_raw_result
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      81       5       80.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     64A      58        0.0%
DATA                 0      0     64A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov  7 03:05:35 2019

                    _SPI1_Exchange8bit 80F0               __end_of_set_display_info 814A  
                                    _C 0100                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 7F04  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 8382                            __CFG_LVP$ON 000000  
                                  l171 82AE                                    l701 7D6C  
                                  l581 7D40                                    l835 80FE  
                                  _GIE 01FE97                                    _abs 78FE  
                                  _pad 65E4                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 8242                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 808A                     _UART1_Transmit_ISR 7D1A  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 80AC  
                         __CFG_ZCD$OFF 000000                                   l1028 7AD6  
                                 l1242 2DAC                                   l1251 2F58  
                                 l2223 6C4E                                   l1328 7722  
                                 l1601 8146                                   l2234 6122  
                                 l2227 604E                                   l2501 2D5E  
                                 l2261 5FC0                                   l1544 7B34  
                                 l1464 6DB8                                   l2513 2BEE  
                                 l1561 6802                                   l1553 5796  
                                 l1730 6640                                   l1650 4A8E  
                                 l1483 7BA0                                   l1468 7168  
                                 l1557 58F2                                   l1750 3A06  
                                 l1830 0B1A                                   l2622 5AF0  
                                 l1815 066A                                   l1680 549A  
                                 l2546 391E                                   l6100 2C5C  
                                 l6012 296A                                   l2653 793E  
                                 l2645 5E4E                                   l2582 25A2  
                                 l6014 297C                                   l6022 29B6  
                                 l2806 7386                   _ADCC_StartConversion 82C8  
                                 l6112 2CBA                                   l6040 2A52  
                                 l6008 294A                                   l2745 64C2  
                                 l6122 2CE6                                   l6042 2A64  
                                 l6050 2AA0                                   l6018 2986  
                                 l6210 7376                                   l1786 123A  
                                 l2819 7302                                   l1939 1D78  
                                 l2684 523C                                   l1868 4B7E  
                                 l6134 2D3E                                   l6126 2CFE  
                                 l6062 2B78                                   l6046 2A6E  
                                 l2791 5CB8                                   l6400 35A6  
                                 l6128 2D0E                                   l6080 2C10  
                                 l6072 2BD2                                   l6064 2B9E  
                                 l6240 43EE                                   l6224 4280  
                                 l1889 3DEC                                   l6306 4F20  
                                 l6082 2C22                                   l6500 38F2  
                                 l6244 4436                                   l6342 5636  
                                 l6334 558A                                   l6326 5502  
                                 l6502 3902                                   l6414 35FA  
                                 l6406 35E0                                   l6086 2C2E  
                                 l6182 5DEC                                   l6238 439E  
                                 l6168 792E                                   l6440 3726  
                                 l6432 36C0                                   l6424 368A  
                                 l6096 2C56                                   l6192 5E46  
                                 l6248 44A4                                   l6282 4DB4  
                                 l6434 36D2                                   l6442 372A  
                                 l6362 3404                                   l6186 5DF0  
                                 l6266 72F2                                   l5900 6F56  
                                 l6372 345A                                   l6612 23B2  
                                 l6524 1E18                                   l9100 058E  
                                 l9020 00F0                                   l8300 5A3A  
                                 l7406 522C                                   l6294 4E4E  
                                 l6454 3774                                   l6382 34E2  
                                 l6374 348A                                   l6630 2428  
                                 l6606 2396                                   l6542 1EE6  
                                 l6526 1E1E                                   l6518 1DD8  
                                 l7422 5B82                                   l8310 5A6E  
                                 l8302 5A50                                   l6288 4E08  
                                 l6472 37EA                                   l6448 3758  
                                 l6392 3538                                   l6368 3444  
                                 l6640 249C                                   l6616 23D8  
                                 l6544 1EEC                                   l6536 1EA6  
                                 l6528 1E4E                                   l9040 0216  
                                 l9008 00AC                                   l7424 5BEE  
                                 l8320 5AD0                                   l8162 7A00  
                                 l7370 4FEC                                   l6714 6260  
                                 l6706 622C                                   l6730 64FE  
                                 l6482 385E                                   l6458 379A  
                                 l6394 3568                                   l6650 250C  
                                 l6626 2422                                   l6554 1F3E  
                                 l6546 1F1C                                   l6802 788E  
                                 l9202 0CBA                                   l9210 0D24  
                                 l9114 05F6                                   l9106 0594  
                                 l9042 022C                                   l7380 5082  
                                 l7372 500E                                   l6468 37E4  
                                 l6388 3522                                   l6660 256A  
                                 l6644 24E2                                   l5932 2642  
                                 l6812 5EAA                                   l9132 06B8  
                                 l9116 0602                                   l9028 0146  
                                 l8158 79D6                                   l8238 7B4A  
                                 l7390 50EA                                   l6734 6516  
                                 l6726 64EC                                   l6494 38CA  
                                 l5950 26F2                                   l5926 2602  
                                 l6830 5F48                                   l9142 077A  
                                 l9038 01EA                                   l9046 0258  
                                 l9310 4B00                                   l8416 7ABE  
                                 l7392 5128                                   l6680 6150  
                                 l6752 65CA                                   l6744 6596  
                                 l6488 389A                                   l6760 6BD6  
                                 l5960 2748                                   l5944 26C0  
                                 l5936 2658                                   l9152 0926  
                                 l9136 06F0                                   l9072 0396  
                                 l9056 02FC                                   l9064 032A  
                                 l8512 47BC                                   l7386 50AE  
                                 l6658 2550                                   l5962 2778  
                                 l5938 2688                                   l9218 0D90  
                                 l9226 0EA2                                   l9082 04D2  
                                 l9330 4BF0                                   l8290 59D0  
                                 l8530 49B4                                   l7396 5190  
                                 l7388 50C6                                   l6692 6186  
                                 l6764 6C18                                   l5956 2732  
                                 l6836 5F58                                   l6828 5F2C  
                                 l9252 0FD6                                   l9076 0406  
                                 l9340 4CAA                                   l8292 59EE  
                                 l8524 48C0                                   l8390 7D68  
                                 l6686 6166                                   l6782 609C  
                                 l6838 5F6E                                   l9254 0FF0  
                                 l9238 0F3A                                   l9190 0C32  
                                 l9174 0B12                                   l9166 0A48  
                                 l9094 0554                                   l9078 0470  
                                 l9334 4C20                                   l9326 4BB4  
                                 l9422 4118                                   l9406 402E  
                                 l8286 59AC                                   l8278 5940  
                                 l8518 47CC                                   l8368 7D3C  
                                 l6856 7860                                   l6768 6C4C  
                                 l6776 600C                                   l5968 279A  
                                 l9264 1092                                   l9176 0B34  
                                 l9344 4CD6                                   l9520 191C  
                                 l8288 59BA                                   l8536 4A50  
                                 l8544 4A62                                   l8560 5276  
                                 l8642 708E                                   l8634 707C  
                                 l5898 6F34                                   l6794 6120  
                                 l6786 60EA                                   l9290 119A  
                                 l9274 10E2                                   l9098 057C  
                                 l9362 3DDC                                   l9602 4566  
                                 l8298 5A1C                                   l7692 805E  
                                 l8900 6638                                   l9348 4D12  
                                 l9540 1A7C                                   l9516 18E8  
                                 l9508 1830                                   l9444 1326  
                                 l7772 7BAA                                   l8572 52BC  
                                 l8910 66D0                                   l8902 664A  
                                 l5998 28D8                                   l9382 3EB2  
                                 l9374 3E52                                   l9550 1B2A  
                                 l9470 14F8                                   l9446 1360  
                                 l9622 473C                                   l9614 468E  
                                 l9368 3E16                                   l9448 1376  
                                 l9608 4624                                   l9720 671A  
                                 l8568 52A2                                   l8906 6686  
                                 l8922 721E                                   l9570 1D00  
                                 l9466 14A8                                   l9634 6DEA  
                                 l8924 724A                                   l8916 6A42  
                                 l9564 1CA6                                   l9468 14E2  
                                 l9580 1D24                                   l9636 6E2A  
                                 l9398 3FA8                                   l9574 1D04  
                                 l9486 165C                                   l8960 3A5E  
                                 l9496 16F2                                   l8874 63D8  
                                 l8890 6FFE                                   l8970 3C70  
                                 l9922 2DB4                                   l8956 3A40  
                                 l8948 39F6                                   l9836 5766  
                                 l9924 2DC6                                   l9916 2D8E  
                                 l8886 6FC0                                   l8990 3D22  
                                 l9686 6EC0                                   l9918 2D96  
                                 STR_1 FF76                                   l8896 6610  
                                 l9848 588E                                   STR_2 FFA7  
                                 STR_3 FFF2                                   l8994 3D5E  
                                 STR_4 FF65                                   STR_5 FF87  
                                 l9964 2F5C                                   STR_6 FFA7  
                                 STR_7 FFF2                                   l9966 2F84  
                                 STR_8 FF54                                   STR_9 FFB6  
                                 l9986 32A8                                   l9994 3368  
                                 l9978 3284                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u5000 7A50  
                                 u5010 72B0                                   _T2PR 003FAB  
                                 u5020 72B2                                   u5101 4E0E  
                                 u4230 6F84                                   u5110 4E48  
                                 u5040 7CE0                                   u5120 4E7A  
                                 u6000 5ED8                                   u5050 7CE2  
                                 u5210 5552                                   u5140 4F58  
                                 u5220 5584                                   u4420 29AE  
                                 u4260 7CB0                                   u4237 6F76  
                                 u6005 5ECE                                   u5070 4DAE  
                                 u5230 55B6                                   u4430 29CE  
                                 u4270 7CB2                                   u5160 4FAA  
                                 u4425 299E                                   u5090 4E04  
                                 u5250 566E                                   u5410 3752  
                                 u4530 2BC0                                   u4370 28FE  
                                 u6050 5F76                                   _T6PR 003F93  
                                 u5500 3872                                   u4380 291E  
                                 u4700 7C80                                   _PMD0 0039C0  
                                 u4381 2918                                   _PMD1 0039C1  
                                 u7110 51D6                                   u5270 56C0  
                                 u5190 54FC                                   u5510 38AE  
                                 u4630 2CAA                                   u6070 5FA0  
                                 u4710 7C82                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u6080 783C  
                                 u7120 51D8                                   u5600 1F2C  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u6090 785C                                   u5450 37DC  
                                 u4570 2C34                                   u4490 2A96  
                                 _PMD6 0039C6                                   u4635 2C9A  
                                 _PMD7 0039C7                                   u4660 2CCA  
                                 u4820 5E3E                                   u4900 4264  
                                 u5710 2476                                   u4590 2C4E  
                                 u4398 2920                                   u4830 5E40  
                                 u5615 20C0                                   u4495 2A86  
                                 u4815 5E20                                   u4760 7912  
                                 u5800 624C                                   u5720 24B0  
                                 u5625 2188                                   u7090 507E  
                                 u5490 3838                                   u5730 24F6  
                                 u4770 5D70                                   u5715 2466  
                                 u5635 2350                                   u8300 63CC  
                                 u4940 4344                                   u4860 7334  
                                 u4925 429E                                   u5910 6C48  
                                 u5670 241A                                   u4926 42A4  
                                 u4870 7336                                   u7190 5C7A  
                                 u5495 3828                                   u4775 5D66  
                                 u4927 42B2                                   u8320 6448  
                                 u4960 441C                                   u4945 433A  
                                 u5850 6542                                   u4890 4218  
                                 u9050 10B8                                   u9210 3DC2  
                                 u8500 3C84                                   u8420 3958  
                                 u5780 61B2                                   u4965 4412  
                                 u8430 395A                                   u5870 65B6  
                                 u9070 116E                                   u9150 4C16  
                                 u4990 7A4E                                   u9310 402A  
                                 u7615 750E                                   u8511 3CB4  
                                 u4895 420E                                   u7616 7510  
                                 u7608 74DC                                   u8520 3CCA  
                                 u9080 1170                                   u8600 00DA  
                                 u9160 4C5C                                   u9320 404A  
                                 u9240 3EAA                                   u8521 3CC8  
                                 u8530 3CDE                                   u8450 39CA  
                                 u5970 788A                                   u9250 3EFE  
                                 u9410 13BE                                   u9331 407A  
                                 u9315 400C                                   u8540 3CE2  
                                 u5980 5E8A                                   u8380 6ABC  
                                 u9340 4090                                   u9260 3F00  
                                 u9420 13C0                                   u9341 408E  
                                 u7590 74DA                                   u8470 39DC  
                                 u5990 5E9E                                   u8630 0194  
                                 u9190 4D38                                   u9350 40A4  
                                 u9430 13E6                                   u7575 7A8A  
                                 u9167 4C4E                                   u8560 3CF8  
                                 u8720 050E                                   u8640 0196  
                                 u9360 40A8                                   u9280 3F5E  
                                 u5985 5E80                                   u8490 3A2C  
                                 u9290 3F60                                   u9610 1B7E  
                                 u9530 1746                                   u8387 6AAE  
                                 u8820 0648                                   u9460 1540  
                                 u9700 6EA0                                   u7780 5A64  
                                 u7940 5254                                   u8750 0562  
                                 u8670 02A6                                   u9470 1542  
                                 u8680 02A8                                   u9560 19D6  
                                 u9480 1568                                   u9800 58E0  
                                 u9570 19D8                                   _PLLR 01CEE0  
                                 u8780 05C6                                   u9670 47B0  
                                 u8890 0A18                                   u8990 0EE4  
                                 u9790 58DE                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 7B88  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01A4  
                                 _atoi 4FD2                                   _ctoa 7200  
                                 _main 2D68                                   _dtoa 3928  
                                 _seed 00BD                                   _prec 0020  
                                 _nout 001C                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 4A94                                   btemp 0035  
                                 _xtoa 3DA8                 __end_of_check_adc_scan 837A  
                        ___fpclassifyf 5CC2                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0026              __end_of_SPI1_Exchange8bit 810E  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 7FCC  
                         ___param_bank 000000                     ?_UART1_rx_vect_isr 0055  
                     __end_of_INT0_ISR 8316                       __end_of_INT1_ISR 8326  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 6DC0  
        __end_of_OSCILLATOR_Initialize 82B4                                  l10006 339C  
                                PRLOCK 0039EF                        __end_of___aodiv 4FD2  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                      __end_of___fladd 2D68                                  _ADCLK 003EFF  
                      __end_of___aomod 56E4                                  _ADPCH 003EF1  
                      __end_of___fldiv 3928                                  _ADREF 003EFD  
                      __end_of___awdiv 627A                        __end_of___flneg 78B8  
                                STR_10 FFB6                                  STR_11 FFFC  
                                STR_12 FFF9                                  STR_20 FF98  
                                STR_21 FF98                                  STR_22 FF98  
                                STR_14 FFC3                                  STR_15 FFD9  
                                STR_23 FF03                                  STR_40 FFF6  
                                STR_32 FFE2                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_33 FFEA  
                                STR_25 FF41                          __CFG_WDTE$OFF 000000  
                                STR_42 FFF6                                  STR_18 FFCF  
                                STR_26 FF1B                                  STR_19 FFCF  
                                STR_36 FFE6                        __end_of___awmod 65E4  
                                STR_37 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 78FE  
                      __end_of___fltol 5FCA                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00DC                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 8394  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 7FA4                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 7718                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 822A                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 63A8  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 7A5A  
                                _fputs 6FB0                        __end_of_isdigit 7CEC  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 7BF4                                  _width 001E  
                                _putch 81DC                        __end_of_islower 7C8C  
                      __end_of_isspace 7870               _INT1_SetInterruptHandler 7F04  
                      __end_of_isupper 7CBC                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 7EB4  
          _UART1_SetRxInterruptHandler 7E8C                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 6910                        __end_of_tolower 7390  
                      __end_of_strncmp 5CC2                        __end_of_toupper 730C  
                  ??_UART1_tx_vect_isr 00DC              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 7FF2               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 798A                  __end_of_ringBufS_init 7E14  
                      __initialization 6ACE                      _UART2_rx_vect_isr 801C  
                         __end_of_atoi 5246                           __end_of_ctoa 7288  
                         __end_of_main 33AE                           __end_of_dtoa 3DA8  
                         __end_of_stoa 4D52                           __end_of_xtoa 4162  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0055  
              __end_of_TMR2_Initialize 825A               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 7EDC                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 00DC              __end_of_UART1_tx_vect_isr 7FCA  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 7D72  
                      _PWM8_Initialize 8288                       _UART1_Initialize 7596  
                    _UART2_tx_vect_isr 7FF4                     _UART2_Transmit_ISR 7D46  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 7532  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 7A5A  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0055                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1045 770A  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 _FVRCON 003EC1  
                     _mode_lamp_bright 82F8                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 8098  
                               u392_40 8152           __size_of_eaDogM_WriteCommand 000E  
                               u392_46 8154                                 u368_48 80BA  
                               _OSCFRQ 0039DF                                 u806_44 70AE  
                               u806_45 70A8                                 u808_40 70CA  
                               u808_46 70CC                                 u765_20 81FE  
                               u765_26 8200                                 u792_28 8076  
                               u789_48 80DC                       __end_of___xxtofl 5AFA  
             __end_of_send_lcd_cmd_dma 781E                    ??_UART2_tx_vect_isr 00DC  
            __end_of_UART2_rx_vect_isr 8042             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 8336                       _UART2_Initialize 765C  
                               _WaitMs 7B88                        _conv_raw_result 47BA  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___flge 5FCA                                 ___fleq 6B94  
                    _ADCC_ThresholdISR 7464                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 70DE                                 _efgtoa 0000  
                               _floorf 4162                     ?_ADCC_ThresholdISR 0055  
                               _memset 44CE                   __size_of_help_button 0038  
                               clear_0 6B1A                                 clear_1 6B2E  
                               clear_2 6B40                                 clear_3 6B4C  
                               clear_4 6B58                                 clear_5 6B64  
                               clear_6 6B70                                 clear_7 6B7C  
                               _printf 75FA                     _eaDogM_WriteString 6E68  
                               _strcpy 69FA                              ?_ADCC_ISR 0055  
                               _strlen 6F0E                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 73FA                         _PMD_Initialize 82B4  
            __end_of_UART2_tx_vect_isr 801A                                 lltemp0 0035  
                               lltemp1 003D                                 lltemp2 0045  
                               lltemp3 004D                    ??_ADCC_ThresholdISR 0056  
               __end_of_start_adc_scan 7596                           __mediumconst FE72  
                               preinc2 003FDC                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 7772                       __end_of_vfprintf 6E68  
                           _StartTimer 7ADC          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 79D0                      _SYSTEM_Initialize 7944  
                           __accesstop 0060                __end_of__initialization 6B8E  
                            ?_INT0_ISR 0055                              ?_INT1_ISR 0055  
                 __end_of_display_help 8372                   __end_of_display_info 836A  
            __end_of_CLKREF_Initialize 8340                          ___rparam_used 000000  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 7A9C  
                _set_temp_display_help 82DA              __end_of_ADCC_ThresholdISR 74CC  
               __end_of_ringBufS_flush 7170                         __pcstackCOMRAM 0055  
                           ___inthi_sp 0F56                             ___intlo_sp 17AB  
                         __pidataBANK0 825A                           __pidataBANK2 6C58  
                            ?_TMR5_ISR 0055                              ?_TMR6_ISR 0055  
                       ivt0x8_undefint 00AC                          __end_of_fputc 64CC  
                        __end_of_fputs 7048                          __end_of_srand 7C28  
                __end_of_TMR5_CallBack 808A                          __end_of_putch 81F6  
              __end_of_PWM8_Initialize 829E                __end_of_TMR6_Initialize 7D9C  
                    _adc_int_t_handler 7048                 __end_of_PMD_Initialize 82C8  
                           ??_ADCC_ISR 0055                  __end_of_TMR6_CallBack 80F0  
                    lp_filter@lp_speed 00B2            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 834C  
                       _clear_adc_scan 8382                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 798A  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                           __pbssBANK2 02BD                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 56E4  
              __end_of_conv_raw_result 4A94                  _INT0_InterruptHandler 0019  
                           ??_INT0_ISR 0055                             ??_INT1_ISR 0055  
                    __end_of_TimerDone 8066                       _DMA1_DMADCNT_ISR 8340  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                   __size_of_lp_filter 025E                  __end_of_wait_lcd_done 81C0  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 7EDC  
              __end_of_ADCC_Initialize 7462                             ??_TMR5_ISR 00DD  
            __end_of_adc_int_t_handler 70DE                             ??_TMR6_ISR 00DC  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7F7C  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 7F54                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 8168  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 8388                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 8328                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 7ADC  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 822A  
                              __Lparam 0000               __end_of_UART1_Initialize 75FA  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4D52  
                              ___fladd 25AC                                ___aomod 54A4  
                              ___fldiv 33AE                                ___awdiv 612C  
                              ___flneg 7870                                ___awmod 64CC  
                              ___flmul 1D82                                ___flsub 78B8  
                              ___fltol 5E58              __end_of_UART1_Receive_ISR 8186  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 69FA                                __pcinit 6ACE  
             __end_of_mode_lamp_bright 8306                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 82EA  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 2D68                                __ptext1 7532  
                              __ptext2 82C8                                __ptext3 7BF4  
                              __ptext4 5246                                __ptext5 6910  
                              __ptext6 7D9C                                __ptext7 7DC4  
                              __ptext8 80F0                                __ptext9 7DEC  
                    _UART2_Receive_ISR 8186                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                  _OSCILLATOR_Initialize 829E  
                              us517999 4FBC                           __size_of_abs 0046  
                              us528999 56D2                           __size_of_pad 0114  
                              us910999 4AA6                                _isalpha 7A16  
                              _isdigit 7CBC                                us841999 3942  
                              us923999 3E28                                _mode_sw 0028  
                    __end_of_lp_filter 54A4                                _islower 7C5C  
                              _isspace 781E                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 76BA  
                              _isupper 7C8C             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 6806                                _tolower 730C  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 5AFA                                _toupper 7288  
                 end_of_initialization 6B8E    __end_of_UART1_SetTxInterruptHandler 7E8C  
          _UART1_SetTxInterruptHandler 7E64    __end_of_UART2_SetRxInterruptHandler 7E64  
          _UART2_SetRxInterruptHandler 7E3C                      __end_of_set_vterm 81DC  
                    __end_of_vfpfcnvrt 1D82                              _SPI1TCNTL 003D12  
                              postdec0 003FED                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
           __size_of_adc_int_t_handler 0096                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 8394              __end_of_UART2_Receive_ISR 81A4  
                       wdtdelay@dcount 00B6                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 00DD                  _INT1_InterruptHandler 0016  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 7EB4  
                         _display_help 836A                  _TMR5_InterruptHandler 00BA  
                         _display_info 8362   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 0038    __end_of_ADCC_SetADIInterruptHandler 7FA4  
          _ADCC_SetADIInterruptHandler 7F7C                             _update_lcd 66F8  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 7390                        _SPI1_Initialize 8272  
                __end_of_get_vterm_ptr 7D1A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                         __end_of_WaitMs 7BBE  
         __end_of_INTERRUPT_Initialize 7532                             _vterm_dump 627A  
                       __end_of___flge 612C                         __end_of___fleq 6C58  
 __end_of_INT0_DefaultInterruptHandler 839C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 839A             __size_of_UART1_Receive_ISR 001E  
                      _DMA2_Initialize 7772                         __end_of_efgtoa 1244  
                    __size_of_TMR5_ISR 005C                      __size_of_TMR6_ISR 001A  
                  __size_of_check_help 0212                         __end_of_floorf 44CE  
          __size_of_UART2_Transmit_ISR 002C                             floorf@F524 00A6  
                       __end_of_memset 47BA                         __end_of_printf 765C  
             __end_of_DMA1_DMADCNT_ISR 834A            __size_of_PWM8_LoadDutyValue 0042  
                __end_of_INT0_CallBack 80AC                         __end_of_strcpy 6ACE  
                       __end_of_strlen 6FB0                    start_initialization 6ACE  
 __end_of_TMR5_DefaultInterruptHandler 8210  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 81F6        __size_of_PIN_MANAGER_Initialize 0090  
                          __end_of_abs 7944                  __end_of_INT1_CallBack 80CE  
            __size_of_set_display_info 001E                            __end_of_pad 66F8  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 7DEC  
        __size_of_ADCC_StartConversion 0012                             ivt0x8_base 0008  
                        _uart1RxBuffer 0500                  __end_of___fpclassifyf 5E58  
                        _uart2RxBuffer 0600                          _uart1TxBuffer 02BD  
             __end_of_DMA1_DMASCNT_ISR 8336                          _uart2TxBuffer 0300  
                       _DMA1_DMAOR_ISR 8358                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00A6  
                            _TimerDone 8042                          _ringBufS_init 7DEC  
                          __pdataBANK0 00C5                            __pdataBANK2 0200  
           __size_of_UART2_Receive_ISR 001E             __end_of_EXT_INT_Initialize 7C5C  
                  __end_of_help_button 7B50        __end_of_eaDogM_WriteStringAtPos 7BF4  
              __end_of_DMA1_Initialize 73FA                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 7F54                          __pcstackBANK0 00DC  
             __size_of_TMR2_Initialize 0018                      __size_of___xxtofl 0204  
              __end_of_SPI1_Initialize 8288               _UART1_RxInterruptHandler 000D  
             _UART2_TxInterruptHandler 0010                              __end_of_T FF03  
            __size_of_ringBufS_put_dma 00AA                           _init_display 6910  
               __end_of_DMA1_DMAOR_ISR 8362                 __size_of_TMR5_CallBack 0024  
                _TMR6_InterruptHandler 0001                 __size_of_TMR6_CallBack 0022  
              __end_of_DMA2_Initialize 77CC                 _PIN_MANAGER_Initialize 7170  
                 __end_of_wait_lcd_set 838E                          __pmediumconst FE72  
                            __ptext100 7C28                              __ptext101 7F04  
                            __ptext110 7A9C                              __ptext102 7F2C  
                            __ptext111 8066                              __ptext103 7772  
                            __ptext120 7B50                              __ptext112 81F6  
                            __ptext104 7390                              __ptext121 7048  
                            __ptext113 8308                              __ptext105 8336  
                            __ptext130 7D46                              __ptext122 839E  
                            __ptext114 808A                              __ptext106 73FA  
                            __ptext131 801C                              __ptext123 814A  
                            __ptext115 839A                              __ptext107 7F54  
                            __ptext140 0000                              __ptext132 8186  
                            __ptext124 7464                              __ptext116 8318  
                            __ptext108 7F7C                              __ptext133 8210  
                            __ptext125 7FA4                              __ptext117 80AC  
                            __ptext109 76BC                              __ptext134 80CE  
                            __ptext126 7D1A                              __ptext118 839C  
                            __ptext135 79D0                              __ptext127 7FCC  
                            __ptext119 8394                              __ptext136 8328  
                            __ptext128 8168                              __ptext137 8340  
                            __ptext129 7FF4                              __ptext138 834C  
                            __ptext139 8358                     __end_of_StartTimer 7B18  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 7B50                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                              _lp_filter 5246  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 74CC                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 8308  
                             _INT1_ISR 8318                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0082                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               i2u810_48 7498  
                             i2u810_49 74AC                               i2u398_48 7B6C  
                             i2u398_49 7B80                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
                             i2u982_48 7FB6                               i2u984_48 7FDE  
                             i2u986_48 8006                               i2u988_48 802E  
                            _set_vterm 81C0                    __size_of_update_lcd 010E  
                          _help_button 7B18             __end_of_UART1_Transmit_ISR 7D46  
                             _TMR5_ISR 76BC                               _TMR6_ISR 8210  
                            _port_data 00CC                              _vfpfcnvrt 1244  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 8066  
                           _ADCON0bits 003EF8                     __end_of_check_help 58F6  
                            _start_lcd 838E                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 80CE  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 812C               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 6AE2                              copy_data1 6B04  
             _INT0_SetInterruptHandler 7F2C                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 7E3C  
          _UART2_SetTxInterruptHandler 7E14                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000               __size_of_conv_raw_result 02DA  
                        _wait_lcd_done 81A4                           _send_lcd_cmd 7DC4  
                     __size_of___aodiv 0280                       __size_of___fladd 07BC  
                     __size_of___aomod 0240                        _adc_int_handler 814A  
                     __size_of___fldiv 057A                       __size_of___awdiv 014E  
                     __size_of___flneg 0048                       __size_of___awmod 0118  
                     __size_of___flmul 082A                       __size_of___flsub 0046  
                     __size_of___fltol 0172                  __end_of_DMA1_DMAA_ISR 8356  
                   ___fpclassifyf@F463 00AA   __size_of_UART1_SetRxInterruptHandler 0028  
                      lp_filter@smooth 0168                               ___xxtofl 58F6  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 0068  
          __end_of_eaDogM_WriteCommand 82F8                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00DD                               __ptext10 82EA  
                             __ptext11 47BA                               __ptext20 66F8  
                             __ptext12 810E                               __ptext21 7BBE  
                             __ptext13 58F6                               __ptext30 75FA  
                             __ptext22 77CC                               __ptext14 8382  
                             __ptext31 6DC0                               __ptext23 81A4  
                             __ptext15 56E4                               __ptext40 730C  
                             __ptext32 1244                               __ptext24 7718  
                             __ptext16 627A                               __ptext41 7C8C  
                             __ptext33 3DA8                               __ptext25 6E68  
                             __ptext17 6806                               __ptext50 5FCA  
                             __ptext42 69FA                               __ptext34 7288  
                             __ptext26 8388                               __ptext18 7CEC  
                             __ptext51 6B94                               __ptext43 4162  
                             __ptext35 7C5C                               __ptext27 838E  
                             __ptext19 7B88                               __ptext60 65E4  
                             __ptext52 33AE                               __ptext44 5CC2  
                             __ptext36 7A16                               __ptext28 70DE  
                             __ptext61 6F0E                               __ptext53 64CC  
                             __ptext45 5E58                               __ptext37 5AFA  
                             __ptext29 44CE                               __ptext70 82DA  
                             __ptext62 6FB0                               __ptext54 612C  
                             __ptext46 78B8                               __ptext38 4A94  
                             __ptext71 812C                               __ptext63 63A8  
                             __ptext55 3928                               __ptext47 25AC  
                             __ptext39 0000                               __ptext80 8372  
                             __ptext72 822A                               __ptext64 81DC  
                             __ptext56 78FE                               __ptext48 7870  
                             __ptext81 7944                               __ptext73 82F8  
                             __ptext65 6D16                               __ptext57 54A4  
                             __ptext49 1D82                               __ptext90 798A  
                             __ptext82 765C                               __ptext74 7A5A  
                             __ptext66 4FD2                               __ptext58 4D52  
                             __ptext91 7EDC                               __ptext83 7E14  
                             __ptext75 7B18                               __ptext67 781E  
                             __ptext59 7200                               __ptext92 8242  
                             __ptext84 7E3C                               __ptext76 8042  
                             __ptext68 7CBC                               __ptext93 8272  
                             __ptext85 7596                               __ptext77 7ADC  
                             __ptext69 81C0                               __ptext94 8288  
                             __ptext86 7E64                               __ptext78 8362  
                             __ptext95 82B4                               __ptext87 7E8C  
                             __ptext79 836A                               __ptext96 7170  
                             __ptext88 7D72                               __ptext97 829E  
                             __ptext89 7EB4                               __ptext98 74CC  
                             __ptext99 837A                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 6D16                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 0646  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 03BA  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0055  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1166 00C5  
                   ??_DMA1_DMASCNT_ISR 00DD           __end_of_ADCC_StartConversion 82DA  
                             _spi_link 009A                               _wdtdelay 7718  
           __end_of_UART2_Transmit_ISR 7D72                               _vfprintf 6DC0  
           __end_of_PWM8_LoadDutyValue 7A9C   __end_of_INT1_DefaultInterruptHandler 839E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 839C  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 810E                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 8388  
                   _EXT_INT_Initialize 7C28   __end_of_TMR6_DefaultInterruptHandler 7A16  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 79D0  
 __end_of_ADCC_DefaultInterruptHandler 83A0  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 839E                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7D9C  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 82EA  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 6F0E  
                __end_of_mode_lamp_dim 8242                __end_of_adc_int_handler 8168  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 6806                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 837A                          lp_filter@lp_x 00AE  
               __end_of_get_raw_result 812C                       _send_lcd_cmd_dma 77CC  
               __size_of___fpclassifyf 0196                  TMR5_ISR@CountCallBack 0024  
     __end_of_INT1_SetInterruptHandler 7F2C              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 00DD               _UART1_TxInterruptHandler 000A  
            __end_of_send_lcd_cmd_long 7DC4                __size_of_start_adc_scan 0064  
                  __end_of_Default_ISR 839A         __end_of_PIN_MANAGER_Initialize 7200  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 63A8  
              _eaDogM_WriteStringAtPos 7BBE                          _get_vterm_ptr 7CEC  
                       _check_adc_scan 8372              __size_of_UART2_Initialize 005E  
