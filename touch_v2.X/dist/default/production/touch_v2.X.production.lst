

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 22:37:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=4,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=4,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=4,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1,group=1
   225                           	psect	text201,global,reloc=4,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=4,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=4,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=4,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=4,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=4,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   248                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   249                           	psect	text223,global,reloc=4,class=CODE,delta=1
   250                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   251                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   252  0000                     
   253                           ; Version 2.10
   254                           ; Generated 31/07/2019 GMT
   255                           ; 
   256                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   257                           ; All rights reserved.
   258                           ; 
   259                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   260                           ; 
   261                           ; Redistribution and use in source and binary forms, with or without modification, are
   262                           ; permitted provided that the following conditions are met:
   263                           ; 
   264                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   265                           ;        conditions and the following disclaimer.
   266                           ; 
   267                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   268                           ;        of conditions and the following disclaimer in the documentation and/or other
   269                           ;        materials provided with the distribution.
   270                           ; 
   271                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   272                           ;        software without specific prior written permission.
   273                           ; 
   274                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   275                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   276                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   277                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   278                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   279                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   280                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   281                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   282                           ; 
   283                           ; 
   284                           ; Code-generator required, PIC18F57K42 Definitions
   285                           ; 
   286                           ; SFR Addresses
   287  0000                     
   288 ;;_main$4023	offset	0
   289 ;;_main$4019	offset	2
   290 ;;_esr_temp	offset	4
   291 ;;_i_esr	offset	8
   292 ;;_shape	offset	10
   293 ;;_inp_index	offset	11
   294 ;;_k	offset	12
   295 ;;_j	offset	13
   296 ;;_i	offset	14
   297 ;;_mode	offset	15
   298 ;;_i_ror	offset	16
   299 ;;_mode	offset=-1 (param)
   300 ;;_hist	offset=-3 (param)
   301 ;;_s	offset=-2 (param)
   302 ;;_voltage	offset=-4 (param)
   303 ;;_voltage	offset=-4 (param)
   304 ;;_voltage	offset=-4 (param)
   305 ;;_set	offset=-1 (param)
   306 ;;_x	offset	0
   307 ;;_r_cal_ptr	offset	2
   308 ;;_y	offset	4
   309 ;;_crcVal_save	offset	6
   310 ;;_bAdd	offset=-2 (param)
   311 ;;_data	offset=-1 (param)
   312 ;;_cmd	offset=-1 (param)
   313 ;;_cmd	offset=-1 (param)
   314 ;;_data	offset=-1 (param)
   315 ;;__this	offset=-2 (param)
   316 ;;_soc	offset	0
   317 ;;_slot	offset	2
   318 ;;_cvoltage	offset=-4 (param)
   319 ;;_h	offset=-2 (param)
   320 ;;_h	offset=-2 (param)
   321 ;;_fsm	offset=-1 (param)
   322 ;;_mode	offset=-1 (param)
   323 ;;_mode	offset=-1 (param)
   324 ;;_cmd	offset=-1 (param)
   325 ;;_clock	offset	0
   326 ;;_t	offset=-2 (param)
   327 ;;_t	offset=-2 (param)
   328 ;;_tm	offset=-4 (param)
   329 ;;_y	offset	0
   330 ;;_t1	offset	8
   331 ;;_t0	offset	16
   332 ;;_t	offset=-8 (param)
   333 ;;_local	offset=-10 (param)
   334 ;;_isdst	offset=-12 (param)
   335 ;;_offset	offset=-14 (param)
   336 ;;_oppoff	offset=-16 (param)
   337 ;;_zonename	offset=-18 (param)
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_alt	offset=-12 (param)
   341 ;;_z	offset=-2 (param)
   342 ;;_days	offset	0
   343 ;;_wday	offset	2
   344 ;;_t	offset	4
   345 ;;_is_leap	offset	12
   346 ;;_n	offset	14
   347 ;;_x	offset	16
   348 ;;_m	offset	18
   349 ;;_d	offset	20
   350 ;;_rule	offset=-6 (param)
   351 ;;_year	offset=-8 (param)
   352 ;;_m	offset=-2 (param)
   353 ;;_is_leap	offset=-4 (param)
   354 ;;_y	offset	0
   355 ;;_leaps	offset	2
   356 ;;_rem	offset	4
   357 ;;F5	offset	6
   358 ;;_centuries	offset	8
   359 ;;_leaps	offset	10
   360 ;;_cycles	offset	12
   361 ;;_year	offset=-8 (param)
   362 ;;_is_leap	offset=-10 (param)
   363 ;;_t	offset	0
   364 ;;_month	offset=-2 (param)
   365 ;;_is_leap	offset=-4 (param)
   366 ;;_s	offset	0
   367 ;;_r	offset	0
   368 ;;_p	offset=-2 (param)
   369 ;;_rule	offset=-4 (param)
   370 ;;_off	offset	0
   371 ;;_neg	offset	2
   372 ;;_p	offset=-2 (param)
   373 ;;_x	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_i	offset	0
   376 ;;_d	offset=-2 (param)
   377 ;;_p	offset=-4 (param)
   378 ;;___secs_to_tm$7840	offset	0
   379 ;;_years	offset	1
   380 ;;_days	offset	9
   381 ;;_secs	offset	17
   382 ;;_remdays	offset	25
   383 ;;_q_cycles	offset	29
   384 ;;_c_cycles	offset	33
   385 ;;_remyears	offset	37
   386 ;;_remsecs	offset	41
   387 ;;_qc_cycles	offset	45
   388 ;;_months	offset	49
   389 ;;_leap	offset	51
   390 ;;_yday	offset	53
   391 ;;_wday	offset	55
   392 ;;_t	offset=-8 (param)
   393 ;;_tm	offset=-10 (param)
   394 ;;_product	offset	0
   395 ;;_multiplier	offset=-8 (param)
   396 ;;_multiplicand	offset=-16 (param)
   397 ;;_product	offset	0
   398 ;;_multiplier	offset=-4 (param)
   399 ;;_multiplicand	offset=-8 (param)
   400 ;;_sign	offset	0
   401 ;;_counter	offset	1
   402 ;;_dividend	offset=-4 (param)
   403 ;;_divisor	offset=-8 (param)
   404 ;;_quotient	offset	0
   405 ;;_sign	offset	4
   406 ;;_counter	offset	5
   407 ;;_dividend	offset=-4 (param)
   408 ;;_divisor	offset=-8 (param)
   409 ;;_cp	offset	0
   410 ;;_s	offset	2
   411 ;;_tim	offset=-2 (param)
   412 ;;_cp	offset=-2 (param)
   413 ;;_i	offset=-3 (param)
   414 ;;_cl	offset=-4 (param)
   415 ;;_ct	offset=-5 (param)
   416 ;;_rem	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-1 (param)
   419 ;;_divisor	offset=-2 (param)
   420 ;;_cp	offset	0
   421 ;;_cb	offset	4
   422 ;;_x	offset	8
   423 ;;_x	offset	0
   424 ;;_r_cal_ptr	offset	2
   425 ;;_y	offset	4
   426 ;;_crcVal	offset	6
   427 ;;_GIEBitValue	offset	0
   428 ;;_bAdd	offset=-2 (param)
   429 ;;_bData	offset=-3 (param)
   430 ;;_result	offset	0
   431 ;;_mask	offset	2
   432 ;;_reverse	offset=-1 (param)
   433 ;;_xorValue	offset=-3 (param)
   434 ;;_mask	offset	0
   435 ;;_reverse	offset	2
   436 ;;_crc	offset=-2 (param)
   437 ;;_data	offset=-1 (param)
   438 ;;_channel	offset=-1 (param)
   439 ;;_c	offset	0
   440 ;;_shape	offset=-1 (param)
   441 ;;_reset	offset=-2 (param)
   442 ;;_i	offset=-1 (param)
   443 ;;_mode	offset=-1 (param)
   444 ;;_cb	offset=-3 (param)
   445 ;;_cp	offset=-5 (param)
   446 ;;_value	offset=-2 (param)
   447 ;;_window	offset=-4 (param)
   448 ;;_standard	offset=-6 (param)
   449 ;;_i	offset	0
   450 ;;_h	offset=-2 (param)
   451 ;;_flipper	offset=-1 (param)
   452 ;;_f	offset	0
   453 ;;_ap	offset	6
   454 ;;_s	offset=-3 (param)
   455 ;;_fmt	offset=-5 (param)
   456 ;;_line	offset=-1 (param)
   457 ;;_vterm	offset=-2 (param)
   458 ;;_numMilliseconds	offset=-2 (param)
   459 ;;_vterm	offset=-1 (param)
   460 ;;_row	offset	0
   461 ;;_r	offset=-1 (param)
   462 ;;_c	offset=-2 (param)
   463 ;;_strPtr	offset=-4 (param)
   464 ;;_strPtr	offset=-1 (param)
   465 ;;_delay	offset=-4 (param)
   466 ;;_strPtr	offset=-1 (param)
   467 ;;_strPtr	offset=-2 (param)
   468 ;;__this	offset=-2 (param)
   469 ;;_clearBuffer	offset=-3 (param)
   470 ;;_s	offset	0
   471 ;;_k	offset	2
   472 ;;_dest	offset=-2 (param)
   473 ;;_c	offset=-4 (param)
   474 ;;_n	offset=-6 (param)
   475 ;;_ap	offset	0
   476 ;;_fmt	offset=-3 (param)
   477 ;;_cfmt	offset	0
   478 ;;_fp	offset=-2 (param)
   479 ;;_fmt	offset=-4 (param)
   480 ;;_ap	offset=-6 (param)
   481 ;;_vfpfcnvrt$6881	offset	0
   482 ;;_vfpfcnvrt$6892	offset	2
   483 ;;_vfpfcnvrt$6880	offset	4
   484 ;;_llu	offset	6
   485 ;;_ll	offset	14
   486 ;;_f	offset	22
   487 ;;_ct	offset	26
   488 ;;_cp	offset	29
   489 ;;_c	offset	31
   490 ;;_fp	offset=-2 (param)
   491 ;;_fmt	offset=-4 (param)
   492 ;;_ap	offset=-6 (param)
   493 ;;_xtoa$6866	offset	0
   494 ;;_xtoa$6865	offset	2
   495 ;;_n	offset	4
   496 ;;_c	offset	12
   497 ;;_i	offset	14
   498 ;;_w	offset	16
   499 ;;_p	offset	18
   500 ;;_fp	offset=-2 (param)
   501 ;;_d	offset=-10 (param)
   502 ;;_x	offset=-11 (param)
   503 ;;_toupper$7807	offset	0
   504 ;;_c	offset=-2 (param)
   505 ;;_c	offset=-2 (param)
   506 ;;_c	offset=-2 (param)
   507 ;;_n	offset	0
   508 ;;_i	offset	8
   509 ;;_w	offset	10
   510 ;;_p	offset	12
   511 ;;_fp	offset=-2 (param)
   512 ;;_d	offset=-10 (param)
   513 ;;_counter	offset	0
   514 ;;_dividend	offset=-8 (param)
   515 ;;_divisor	offset=-16 (param)
   516 ;;_quotient	offset	0
   517 ;;_counter	offset	8
   518 ;;_dividend	offset=-8 (param)
   519 ;;_divisor	offset=-16 (param)
   520 ;;_r	offset	0
   521 ;;_l	offset	2
   522 ;;__l	offset=-2 (param)
   523 ;;__r	offset=-4 (param)
   524 ;;_n	offset=-6 (param)
   525 ;;_nuls	offset	0
   526 ;;_l	offset	7
   527 ;;_p	offset	9
   528 ;;_cp	offset	11
   529 ;;_w	offset	13
   530 ;;_i	offset	15
   531 ;;_fp	offset=-2 (param)
   532 ;;_s	offset=-4 (param)
   533 ;;_efgtoa$6838	offset	0
   534 ;;_efgtoa$6837	offset	2
   535 ;;_efgtoa$6836	offset	4
   536 ;;_efgtoa$6832	offset	6
   537 ;;_efgtoa$6828	offset	8
   538 ;;_efgtoa$6827	offset	10
   539 ;;_u	offset	12
   540 ;;_g	offset	16
   541 ;;_l	offset	20
   542 ;;_h	offset	24
   543 ;;_ou	offset	28
   544 ;;_n	offset	32
   545 ;;_e	offset	34
   546 ;;_i	offset	36
   547 ;;_w	offset	38
   548 ;;_p	offset	40
   549 ;;_sign	offset	42
   550 ;;_d	offset	44
   551 ;;_ne	offset	46
   552 ;;_m	offset	48
   553 ;;_pp	offset	50
   554 ;;_t	offset	52
   555 ;;_mode	offset	54
   556 ;;_nmode	offset	55
   557 ;;_fp	offset=-2 (param)
   558 ;;_f	offset=-6 (param)
   559 ;;_c	offset=-7 (param)
   560 ;;_tolower$7792	offset	0
   561 ;;_c	offset=-2 (param)
   562 ;;_c	offset=-2 (param)
   563 ;;_d	offset	0
   564 ;;_s	offset	2
   565 ;;_dest	offset=-2 (param)
   566 ;;_src	offset=-4 (param)
   567 ;;_u	offset	0
   568 ;;_m	offset	4
   569 ;;_e	offset	8
   570 ;;_x	offset=-4 (param)
   571 ;;_u	offset	0
   572 ;;_e	offset	4
   573 ;;_x	offset=-4 (param)
   574 ;;_exp1	offset	0
   575 ;;_sign1	offset	1
   576 ;;_f1	offset=-4 (param)
   577 ;;_f1	offset=-4 (param)
   578 ;;_ff1	offset=-4 (param)
   579 ;;_ff2	offset=-8 (param)
   580 ;;_sign	offset	0
   581 ;;_counter	offset	1
   582 ;;_dividend	offset=-2 (param)
   583 ;;_divisor	offset=-4 (param)
   584 ;;_quotient	offset	0
   585 ;;_sign	offset	2
   586 ;;_counter	offset	3
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_dtoa$6804	offset	0
   590 ;;_n	offset	2
   591 ;;_i	offset	10
   592 ;;_s	offset	12
   593 ;;_w	offset	14
   594 ;;_p	offset	16
   595 ;;_fp	offset=-2 (param)
   596 ;;_d	offset=-10 (param)
   597 ;;_a	offset=-2 (param)
   598 ;;_sign	offset	0
   599 ;;_counter	offset	1
   600 ;;_dividend	offset=-8 (param)
   601 ;;_divisor	offset=-16 (param)
   602 ;;_quotient	offset	0
   603 ;;_sign	offset	8
   604 ;;_counter	offset	9
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_w	offset	0
   608 ;;_fp	offset=-2 (param)
   609 ;;_c	offset=-3 (param)
   610 ;;_w	offset	0
   611 ;;_i	offset	2
   612 ;;_fp	offset=-2 (param)
   613 ;;_buf	offset=-4 (param)
   614 ;;_p	offset=-6 (param)
   615 ;;_a	offset	0
   616 ;;_s	offset=-2 (param)
   617 ;;_i	offset	0
   618 ;;_c	offset	2
   619 ;;_s	offset=-2 (param)
   620 ;;_fp	offset=-4 (param)
   621 ;;_c	offset=-2 (param)
   622 ;;_fp	offset=-4 (param)
   623 ;;_c	offset=-1 (param)
   624 ;;__this	offset=-2 (param)
   625 ;;_c	offset=-3 (param)
   626 ;;_atoi$7424	offset	0
   627 ;;_atoi$7422	offset	2
   628 ;;_atoi$7423	offset	4
   629 ;;_n	offset	5
   630 ;;_neg	offset	7
   631 ;;_s	offset=-2 (param)
   632 ;;_isspace$7473	offset	0
   633 ;;_c	offset=-2 (param)
   634 ;;_c	offset=-2 (param)
   635 ;;_vterm	offset=-1 (param)
   636 ;;_new_response_info	offset=-1 (param)
   637 ;;_new_response_info	offset=-1 (param)
   638 ;;_level	offset=-2 (param)
   639 ;;_dutyValue	offset=-2 (param)
   640 ;;_timer	offset=-1 (param)
   641 ;;_timer	offset=-1 (param)
   642 ;;_count	offset=-3 (param)
   643 ;;_h	offset=-2 (param)
   644 ;;_u	offset	0
   645 ;;_x	offset=-4 (param)
   646 ;;_chan	offset=-1 (param)
   647 ;;_to_what	offset=-2 (param)
   648 ;;_u	offset	0
   649 ;;_s	offset=-2 (param)
   650 ;;_index	offset=-1 (param)
   651 ;;_arg	offset	0
   652 ;;_exp	offset	4
   653 ;;_sign	offset=-1 (param)
   654 ;;_val	offset=-5 (param)
   655 ;;_grs	offset	0
   656 ;;_rem	offset	4
   657 ;;_new_exp	offset	8
   658 ;;_aexp	offset	10
   659 ;;_bexp	offset	11
   660 ;;_sign	offset	12
   661 ;;_b	offset=-4 (param)
   662 ;;_a	offset=-8 (param)
   663 ;;_ff1	offset=-4 (param)
   664 ;;_ff2	offset=-8 (param)
   665 ;;_lp_speed	offset	0
   666 ;;_new	offset=-4 (param)
   667 ;;_bn	offset=-5 (param)
   668 ;;_slow	offset=-6 (param)
   669 ;;_b	offset=-4 (param)
   670 ;;_a	offset=-8 (param)
   671 ;;_grs	offset	0
   672 ;;_bexp	offset	1
   673 ;;_aexp	offset	2
   674 ;;_signs	offset	3
   675 ;;_b	offset=-4 (param)
   676 ;;_a	offset=-8 (param)
   677 ;;_prod	offset	0
   678 ;;_grs	offset	4
   679 ;;_temp	offset	8
   680 ;;_bexp	offset	10
   681 ;;_aexp	offset	11
   682 ;;_sign	offset	12
   683 ;;_b	offset=-4 (param)
   684 ;;_a	offset=-8 (param)
   685 ;;_InterruptHandler	offset=-3 (param)
   686 ;;_InterruptHandler	offset=-3 (param)
   687 ;;_InterruptHandler	offset=-3 (param)
   688 ;;_InterruptHandler	offset=-3 (param)
   689 ;;_InterruptHandler	offset=-3 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_state	offset	0
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_seed	offset	0
   695 ;;_poly	offset	2
   696 ;;_InterruptHandler	offset=-3 (param)
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_i	offset	0
   699 ;;_sw_value	offset	1
   700 ;;_timerVal	offset=-2 (param)
   701 ;;_light	offset	0
   702 ;;_mode	offset=-1 (param)
   703 ;;_chan	offset=-1 (param)
   704 ;;_to_what	offset=-2 (param)
   705 ;;_u	offset	0
   706 ;;_s	offset=-2 (param)
   707 ;;_index	offset=-1 (param)
   708 ;;_arg	offset	0
   709 ;;_exp	offset	4
   710 ;;_sign	offset=-1 (param)
   711 ;;_val	offset=-5 (param)
   712 ;;_b	offset=-4 (param)
   713 ;;_a	offset=-8 (param)
   714 ;;_grs	offset	0
   715 ;;_bexp	offset	1
   716 ;;_aexp	offset	2
   717 ;;_signs	offset	3
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_prod	offset	0
   721 ;;_grs	offset	4
   722 ;;_temp	offset	8
   723 ;;_bexp	offset	10
   724 ;;_aexp	offset	11
   725 ;;_sign	offset	12
   726 ;;_b	offset=-4 (param)
   727 ;;_a	offset=-8 (param)
   728 ;;_grs	offset	0
   729 ;;_rem	offset	4
   730 ;;_new_exp	offset	8
   731 ;;_aexp	offset	10
   732 ;;_bexp	offset	11
   733 ;;_sign	offset	12
   734 ;;_b	offset=-4 (param)
   735 ;;_a	offset=-8 (param)
   736 ;;_ff1	offset=-4 (param)
   737 ;;_ff2	offset=-8 (param)
   738 ;;_timerVal	offset=-2 (param)
   739 ;;_adj	offset	0
   740 ;;_log_ptr	offset	4
   741 ;;_f	offset	0
   742 ;;_ap	offset	6
   743 ;;_s	offset=-3 (param)
   744 ;;_fmt	offset=-5 (param)
   745 ;;_cfmt	offset	0
   746 ;;_fp	offset=-2 (param)
   747 ;;_fmt	offset=-4 (param)
   748 ;;_ap	offset=-6 (param)
   749 ;;_vfpfcnvrt$6881	offset	0
   750 ;;_vfpfcnvrt$6892	offset	2
   751 ;;_vfpfcnvrt$6880	offset	4
   752 ;;_llu	offset	6
   753 ;;_ll	offset	14
   754 ;;_f	offset	22
   755 ;;_ct	offset	26
   756 ;;_cp	offset	29
   757 ;;_c	offset	31
   758 ;;_fp	offset=-2 (param)
   759 ;;_fmt	offset=-4 (param)
   760 ;;_ap	offset=-6 (param)
   761 ;;_xtoa$6866	offset	0
   762 ;;_xtoa$6865	offset	2
   763 ;;_n	offset	4
   764 ;;_c	offset	12
   765 ;;_i	offset	14
   766 ;;_w	offset	16
   767 ;;_p	offset	18
   768 ;;_fp	offset=-2 (param)
   769 ;;_d	offset=-10 (param)
   770 ;;_x	offset=-11 (param)
   771 ;;_toupper$7807	offset	0
   772 ;;_c	offset=-2 (param)
   773 ;;_c	offset=-2 (param)
   774 ;;_c	offset=-2 (param)
   775 ;;_n	offset	0
   776 ;;_i	offset	8
   777 ;;_w	offset	10
   778 ;;_p	offset	12
   779 ;;_fp	offset=-2 (param)
   780 ;;_d	offset=-10 (param)
   781 ;;_counter	offset	0
   782 ;;_dividend	offset=-8 (param)
   783 ;;_divisor	offset=-16 (param)
   784 ;;_quotient	offset	0
   785 ;;_counter	offset	8
   786 ;;_dividend	offset=-8 (param)
   787 ;;_divisor	offset=-16 (param)
   788 ;;_r	offset	0
   789 ;;_l	offset	2
   790 ;;__l	offset=-2 (param)
   791 ;;__r	offset=-4 (param)
   792 ;;_n	offset=-6 (param)
   793 ;;_nuls	offset	0
   794 ;;_l	offset	7
   795 ;;_p	offset	9
   796 ;;_cp	offset	11
   797 ;;_w	offset	13
   798 ;;_i	offset	15
   799 ;;_fp	offset=-2 (param)
   800 ;;_s	offset=-4 (param)
   801 ;;_efgtoa$6838	offset	0
   802 ;;_efgtoa$6837	offset	2
   803 ;;_efgtoa$6836	offset	4
   804 ;;_efgtoa$6832	offset	6
   805 ;;_efgtoa$6828	offset	8
   806 ;;_efgtoa$6827	offset	10
   807 ;;_u	offset	12
   808 ;;_g	offset	16
   809 ;;_l	offset	20
   810 ;;_h	offset	24
   811 ;;_ou	offset	28
   812 ;;_n	offset	32
   813 ;;_e	offset	34
   814 ;;_i	offset	36
   815 ;;_w	offset	38
   816 ;;_p	offset	40
   817 ;;_sign	offset	42
   818 ;;_d	offset	44
   819 ;;_ne	offset	46
   820 ;;_m	offset	48
   821 ;;_pp	offset	50
   822 ;;_t	offset	52
   823 ;;_mode	offset	54
   824 ;;_nmode	offset	55
   825 ;;_fp	offset=-2 (param)
   826 ;;_f	offset=-6 (param)
   827 ;;_c	offset=-7 (param)
   828 ;;_tolower$7792	offset	0
   829 ;;_c	offset=-2 (param)
   830 ;;_c	offset=-2 (param)
   831 ;;_d	offset	0
   832 ;;_s	offset	2
   833 ;;_dest	offset=-2 (param)
   834 ;;_src	offset=-4 (param)
   835 ;;_u	offset	0
   836 ;;_m	offset	4
   837 ;;_e	offset	8
   838 ;;_x	offset=-4 (param)
   839 ;;_u	offset	0
   840 ;;_e	offset	4
   841 ;;_x	offset=-4 (param)
   842 ;;_exp1	offset	0
   843 ;;_sign1	offset	1
   844 ;;_f1	offset=-4 (param)
   845 ;;_f1	offset=-4 (param)
   846 ;;_ff1	offset=-4 (param)
   847 ;;_ff2	offset=-8 (param)
   848 ;;_sign	offset	0
   849 ;;_counter	offset	1
   850 ;;_dividend	offset=-2 (param)
   851 ;;_divisor	offset=-4 (param)
   852 ;;_quotient	offset	0
   853 ;;_sign	offset	2
   854 ;;_counter	offset	3
   855 ;;_dividend	offset=-2 (param)
   856 ;;_divisor	offset=-4 (param)
   857 ;;_dtoa$6804	offset	0
   858 ;;_n	offset	2
   859 ;;_i	offset	10
   860 ;;_s	offset	12
   861 ;;_w	offset	14
   862 ;;_p	offset	16
   863 ;;_fp	offset=-2 (param)
   864 ;;_d	offset=-10 (param)
   865 ;;_a	offset=-2 (param)
   866 ;;_sign	offset	0
   867 ;;_counter	offset	1
   868 ;;_dividend	offset=-8 (param)
   869 ;;_divisor	offset=-16 (param)
   870 ;;_quotient	offset	0
   871 ;;_sign	offset	8
   872 ;;_counter	offset	9
   873 ;;_dividend	offset=-8 (param)
   874 ;;_divisor	offset=-16 (param)
   875 ;;_w	offset	0
   876 ;;_fp	offset=-2 (param)
   877 ;;_c	offset=-3 (param)
   878 ;;_w	offset	0
   879 ;;_i	offset	2
   880 ;;_fp	offset=-2 (param)
   881 ;;_buf	offset=-4 (param)
   882 ;;_p	offset=-6 (param)
   883 ;;_a	offset	0
   884 ;;_s	offset=-2 (param)
   885 ;;_i	offset	0
   886 ;;_c	offset	2
   887 ;;_s	offset=-2 (param)
   888 ;;_fp	offset=-4 (param)
   889 ;;_c	offset=-2 (param)
   890 ;;_fp	offset=-4 (param)
   891 ;;_c	offset=-1 (param)
   892 ;;__this	offset=-2 (param)
   893 ;;_c	offset=-3 (param)
   894 ;;_atoi$7424	offset	0
   895 ;;_atoi$7422	offset	2
   896 ;;_atoi$7423	offset	4
   897 ;;_n	offset	5
   898 ;;_neg	offset	7
   899 ;;_s	offset=-2 (param)
   900 ;;_isspace$7473	offset	0
   901 ;;_c	offset=-2 (param)
   902 ;;_c	offset=-2 (param)
   903 ;;_dsize	offset=-2 (param)
   904 ;;_u	offset	0
   905 ;;_x	offset=-4 (param)
   906 ;;_f1p	offset=-2 (param)
   907 ;;_f2	offset=-6 (param)
   908 ;;_timer	offset=-1 (param)
   909 ;;_count	offset=-3 (param)
   910 ;;_channel	offset=-1 (param)
   911 ;;_i	offset	0
   912                           
   913                           	psect	idataBIGRAM
   914  019D24                     __pidataBIGRAM:
   915                           	opt callstack 0
   916                           
   917                           ;initializer for _port_data
   918  019D24  FF                 	db	255
   919  019D25  00                 	db	0
   920  019D26  FF                 	db	255
   921  019D27  00                 	db	0
   922  019D28  FF                 	db	255
   923  019D29  00                 	db	0
   924  019D2A  FF                 	db	255
   925  019D2B  00                 	db	0
   926  019D2C  FF                 	db	255
   927  019D2D  00                 	db	0
   928  019D2E  FF                 	db	255
   929  019D2F  00                 	db	0
   930  019D30  FF                 	db	255
   931  019D31  00                 	db	0
   932  019D32  FF                 	db	255
   933  019D33  00                 	db	0
   934  019D34  00                 	db	0
   935  019D35  00                 	db	0
   936  019D36  00                 	db	0
   937  019D37  00                 	db	0
   938  019D38  00                 	db	0
   939  019D39  00                 	db	0
   940  019D3A  00                 	db	0
   941  019D3B  00                 	db	0
   942  019D3C  00                 	db	0
   943  019D3D  00                 	db	0
   944  019D3E  00                 	db	0
   945  019D3F  00                 	db	0
   946  019D40  00                 	db	0
   947  019D41  00                 	db	0
   948  019D42  00                 	db	0
   949  019D43  00                 	db	0
   950  019D44  00                 	db	0
   951  019D45  00                 	db	0
   952  019D46  00                 	db	0
   953  019D47  00                 	db	0
   954  019D48  00                 	db	0
   955  019D49  00                 	db	0
   956  019D4A  00                 	db	0
   957  019D4B  00                 	db	0
   958  019D4C  00                 	db	0
   959  019D4D  00                 	db	0
   960  019D4E  00                 	db	0
   961  019D4F  00                 	db	0
   962  019D50  00                 	db	0
   963  019D51  00                 	db	0
   964  019D52  00                 	db	0
   965  019D53  00                 	db	0
   966  019D54  00                 	db	0
   967  019D55  00                 	db	0
   968  019D56  00                 	db	0
   969  019D57  00                 	db	0
   970  019D58  00                 	db	0
   971  019D59  00                 	db	0
   972  019D5A  00                 	db	0
   973  019D5B  00                 	db	0
   974  019D5C  00                 	db	0
   975  019D5D  00                 	db	0
   976  019D5E  00                 	db	0
   977  019D5F  00                 	db	0
   978  019D60  00                 	db	0
   979  019D61  00                 	db	0
   980  019D62  00                 	db	0
   981  019D63  00                 	db	0
   982  019D64  00                 	db	0
   983  019D65  00                 	db	0
   984  019D66  00                 	db	0
   985  019D67  00                 	db	0
   986  019D68  00                 	db	0
   987  019D69  00                 	db	0
   988  019D6A  00                 	db	0
   989  019D6B  00                 	db	0
   990  019D6C  00                 	db	0
   991  019D6D  00                 	db	0
   992  019D6E  00                 	db	0
   993  019D6F  00                 	db	0
   994  019D70  00                 	db	0
   995  019D71  00                 	db	0
   996  019D72  00                 	db	0
   997  019D73  00                 	db	0
   998  019D74  00                 	db	0
   999  019D75  00                 	db	0
  1000  019D76  00                 	db	0
  1001  019D77  00                 	db	0
  1002  019D78  00                 	db	0
  1003  019D79  00                 	db	0
  1004  019D7A  00                 	db	0
  1005  019D7B  00                 	db	0
  1006  019D7C  00                 	db	0
  1007  019D7D  00                 	db	0
  1008  019D7E  00                 	db	0
  1009  019D7F  00                 	db	0
  1010  019D80  00                 	db	0
  1011  019D81  00                 	db	0
  1012  019D82  00                 	db	0
  1013  019D83  00                 	db	0
  1014  019D84  00                 	db	0
  1015  019D85  00                 	db	0
  1016  019D86  00                 	db	0
  1017  019D87  00                 	db	0
  1018  019D88  00                 	db	0
  1019  019D89  00                 	db	0
  1020  019D8A  00                 	db	0
  1021  019D8B  00                 	db	0
  1022  019D8C  00                 	db	0
  1023  019D8D  00                 	db	0
  1024  019D8E  00                 	db	0
  1025  019D8F  00                 	db	0
  1026  019D90  00                 	db	0
  1027  019D91  00                 	db	0
  1028  019D92  00                 	db	0
  1029  019D93  00                 	db	0
  1030  019D94  00                 	db	0
  1031  019D95  00                 	db	0
  1032  019D96  00                 	db	0
  1033  019D97  00                 	db	0
  1034  019D98  00                 	db	0
  1035  019D99  00                 	db	0
  1036  019D9A  00                 	db	0
  1037  019D9B  00                 	db	0
  1038  019D9C  00                 	db	0
  1039  019D9D  00                 	db	0
  1040  019D9E  00                 	db	0
  1041  019D9F  00                 	db	0
  1042  019DA0  00                 	db	0
  1043  019DA1  00                 	db	0
  1044  019DA2  00                 	db	0
  1045  019DA3  00                 	db	0
  1046  019DA4  00                 	db	0
  1047  019DA5  00                 	db	0
  1048  019DA6  00                 	db	0
  1049  019DA7  00                 	db	0
  1050  019DA8  00                 	db	0
  1051  019DA9  00                 	db	0
  1052  019DAA  00                 	db	0
  1053  019DAB  00                 	db	0
  1054  019DAC  00                 	db	0
  1055  019DAD  00                 	db	0
  1056  019DAE  00                 	db	0
  1057  019DAF  00                 	db	0
  1058  019DB0  00                 	db	0
  1059  019DB1  00                 	db	0
  1060  019DB2  00                 	db	0
  1061  019DB3  00                 	db	0
  1062  019DB4  00                 	db	0
  1063  019DB5  00                 	db	0
  1064  019DB6  00                 	db	0
  1065  019DB7  00                 	db	0
  1066  019DB8  00                 	db	0
  1067  019DB9  00                 	db	0
  1068  019DBA  00                 	db	0
  1069  019DBB  00                 	db	0
  1070  019DBC  00                 	db	0
  1071  019DBD  00                 	db	0
  1072  019DBE  00                 	db	0
  1073  019DBF  00                 	db	0
  1074  019DC0  00                 	db	0
  1075  019DC1  00                 	db	0
  1076  019DC2  00                 	db	0
  1077  019DC3  00                 	db	0
  1078  019DC4  00                 	db	0
  1079  019DC5  00                 	db	0
  1080  019DC6  00                 	db	0
  1081  019DC7  00                 	db	0
  1082  019DC8  00                 	db	0
  1083  019DC9  00                 	db	0
  1084  019DCA  00                 	db	0
  1085  019DCB  00                 	db	0
  1086  019DCC  00                 	db	0
  1087  019DCD  00                 	db	0
  1088  019DCE  00                 	db	0
  1089  019DCF  00                 	db	0
  1090  019DD0  00                 	db	0
  1091  019DD1  00                 	db	0
  1092  019DD2  00                 	db	0
  1093  019DD3  00                 	db	0
  1094  019DD4  00                 	db	0
  1095  019DD5  00                 	db	0
  1096  019DD6  00                 	db	0
  1097  019DD7  00                 	db	0
  1098  019DD8  00                 	db	0
  1099  019DD9  00                 	db	0
  1100  019DDA  00                 	db	0
  1101  019DDB  00                 	db	0
  1102  019DDC  00                 	db	0
  1103  019DDD  00                 	db	0
  1104  019DDE  00                 	db	0
  1105  019DDF  00                 	db	0
  1106  019DE0  00                 	db	0
  1107  019DE1  00                 	db	0
  1108  019DE2  00                 	db	0
  1109  019DE3  00                 	db	0
  1110  019DE4  00                 	db	0
  1111  019DE5  00                 	db	0
  1112  019DE6  00                 	db	0
  1113  019DE7  00                 	db	0
  1114  019DE8  00                 	db	0
  1115  019DE9  00                 	db	0
  1116  019DEA  00                 	db	0
  1117  019DEB  00                 	db	0
  1118  019DEC  00                 	db	0
  1119  019DED  00                 	db	0
  1120  019DEE  00                 	db	0
  1121  019DEF  00                 	db	0
  1122  019DF0  00                 	db	0
  1123  019DF1  00                 	db	0
  1124  019DF2  00                 	db	0
  1125  019DF3  00                 	db	0
  1126  019DF4  00                 	db	0
  1127  019DF5  00                 	db	0
  1128  019DF6  00                 	db	0
  1129  019DF7  00                 	db	0
  1130  019DF8  00                 	db	0
  1131  019DF9  00                 	db	0
  1132  019DFA  00                 	db	0
  1133  019DFB  00                 	db	0
  1134  019DFC  00                 	db	0
  1135  019DFD  00                 	db	0
  1136  019DFE  00                 	db	0
  1137  019DFF  00                 	db	0
  1138  019E00  00                 	db	0
  1139  019E01  00                 	db	0
  1140  019E02  00                 	db	0
  1141  019E03  00                 	db	0
  1142  019E04  00                 	db	0
  1143  019E05  00                 	db	0
  1144  019E06  00                 	db	0
  1145  019E07  00                 	db	0
  1146  019E08  00                 	db	0
  1147  019E09  00                 	db	0
  1148  019E0A  00                 	db	0
  1149  019E0B  00                 	db	0
  1150  019E0C  00                 	db	0
  1151  019E0D  00                 	db	0
  1152  019E0E  00                 	db	0
  1153  019E0F  00                 	db	0
  1154  019E10  00                 	db	0
  1155  019E11  00                 	db	0
  1156  019E12  00                 	db	0
  1157  019E13  00                 	db	0
  1158  019E14  00                 	db	0
  1159  019E15  00                 	db	0
  1160  019E16  00                 	db	0
  1161  019E17  00                 	db	0
  1162  019E18  00                 	db	0
  1163  019E19  00                 	db	0
  1164  019E1A  00                 	db	0
  1165  019E1B  00                 	db	0
  1166  019E1C  00                 	db	0
  1167  019E1D  00                 	db	0
  1168  019E1E  00                 	db	0
  1169  019E1F  00                 	db	0
  1170  019E20  00                 	db	0
  1171  019E21  00                 	db	0
  1172  019E22  00                 	db	0
  1173  019E23  00                 	db	0
  1174  019E24  00                 	db	0
  1175  019E25  00                 	db	0
  1176  019E26  00                 	db	0
  1177  019E27  00                 	db	0
  1178  019E28  00                 	db	0
  1179  019E29  00                 	db	0
  1180  019E2A  00                 	db	0
  1181  019E2B  00                 	db	0
  1182  019E2C  00                 	db	0
  1183  019E2D  00                 	db	0
  1184  019E2E  00                 	db	0
  1185  019E2F  00                 	db	0
  1186  019E30  00                 	db	0
  1187  019E31  00                 	db	0
  1188  019E32  00                 	db	0
  1189  019E33  00                 	db	0
  1190  019E34  00                 	db	0
  1191  019E35  00                 	db	0
  1192  019E36  00                 	db	0
  1193  019E37  00                 	db	0
  1194  019E38  00                 	db	0
  1195  019E39  00                 	db	0
  1196  019E3A  00                 	db	0
  1197  019E3B  00                 	db	0
  1198  019E3C  00                 	db	0
  1199  019E3D  00                 	db	0
  1200  019E3E  00                 	db	0
  1201  019E3F  00                 	db	0
  1202  019E40  00                 	db	0
  1203  019E41  00                 	db	0
  1204  019E42  00                 	db	0
  1205  019E43  00                 	db	0
  1206  019E44  00                 	db	0
  1207  019E45  00                 	db	0
  1208  019E46  00                 	db	0
  1209  019E47  00                 	db	0
  1210  019E48  00                 	db	0
  1211  019E49  00                 	db	0
  1212  019E4A  00                 	db	0
  1213  019E4B  00                 	db	0
  1214  019E4C  00                 	db	0
  1215  019E4D  00                 	db	0
  1216  019E4E  00                 	db	0
  1217  019E4F  00                 	db	0
  1218  019E50  00                 	db	0
  1219  019E51  00                 	db	0
  1220  019E52  00                 	db	0
  1221  019E53  00                 	db	0
  1222  019E54  00                 	db	0
  1223  019E55  00                 	db	0
  1224  019E56  00                 	db	0
  1225  019E57  00                 	db	0
  1226  019E58  00                 	db	0
  1227  019E59  00                 	db	0
  1228  019E5A  00                 	db	0
  1229  019E5B  00                 	db	0
  1230  019E5C  00                 	db	0
  1231  019E5D  00                 	db	0
  1232  019E5E  00                 	db	0
  1233  019E5F  00                 	db	0
  1234  019E60  00                 	db	0
  1235  019E61  00                 	db	0
  1236  019E62  00                 	db	0
  1237  019E63  00                 	db	0
  1238  019E64  00                 	db	0
  1239  019E65  00                 	db	0
  1240  019E66  00                 	db	0
  1241  019E67  00                 	db	0
  1242  019E68  00                 	db	0
  1243  019E69  00                 	db	0
  1244  019E6A  00                 	db	0
  1245  019E6B  00                 	db	0
  1246  019E6C  00                 	db	0
  1247  019E6D  00                 	db	0
  1248  019E6E  00                 	db	0
  1249  019E6F  00                 	db	0
  1250  019E70  00                 	db	0
  1251  019E71  00                 	db	0
  1252  019E72  00                 	db	0
  1253  019E73  00                 	db	0
  1254  019E74  00                 	db	0
  1255  019E75  00                 	db	0
  1256  019E76  00                 	db	0
  1257  019E77  00                 	db	0
  1258  019E78  00                 	db	0
  1259  019E79  00                 	db	0
  1260  019E7A  00                 	db	0
  1261  019E7B  00                 	db	0
  1262  019E7C  00                 	db	0
  1263  019E7D  00                 	db	0
  1264  019E7E  00                 	db	0
  1265  019E7F  00                 	db	0
  1266  019E80  00                 	db	0
  1267  019E81  00                 	db	0
  1268  019E82  00                 	db	0
  1269  019E83  00                 	db	0
  1270  019E84  00                 	db	0
  1271  019E85  00                 	db	0
  1272  019E86  00                 	db	0
  1273  019E87  00                 	db	0
  1274  019E88  00                 	db	0
  1275  019E89  00                 	db	0
  1276  019E8A  00                 	db	0
  1277  019E8B  00                 	db	0
  1278  019E8C  00                 	db	0
  1279  019E8D  00                 	db	0
  1280  019E8E  00                 	db	0
  1281  019E8F  00                 	db	0
  1282  019E90  00                 	db	0
  1283  019E91  00                 	db	0
  1284  019E92  00                 	db	0
  1285  019E93  00                 	db	0
  1286  019E94  00                 	db	0
  1287  019E95  00                 	db	0
  1288  019E96  00                 	db	0
  1289  019E97  00                 	db	0
  1290  019E98  00                 	db	0
  1291  019E99  00                 	db	0
  1292  019E9A  00                 	db	0
  1293  019E9B  00                 	db	0
  1294  019E9C  00                 	db	0
  1295  019E9D  00                 	db	0
  1296  019E9E  00                 	db	0
  1297  019E9F  00                 	db	0
  1298  019EA0  00                 	db	0
  1299  019EA1  00                 	db	0
  1300  019EA2  00                 	db	0
  1301  019EA3  00                 	db	0
  1302  019EA4  00                 	db	0
  1303  019EA5  00                 	db	0
  1304  019EA6  00                 	db	0
  1305  019EA7  00                 	db	0
  1306  019EA8  00                 	db	0
  1307  019EA9  00                 	db	0
  1308  019EAA  00                 	db	0
  1309  019EAB  00                 	db	0
  1310  019EAC  00                 	db	0
  1311  019EAD  00                 	db	0
  1312  019EAE  00                 	db	0
  1313  019EAF  00                 	db	0
  1314  019EB0  00                 	db	0
  1315  019EB1  00                 	db	0
  1316  019EB2  00                 	db	0
  1317  019EB3  00                 	db	0
  1318  019EB4  00                 	db	0
  1319  019EB5  00                 	db	0
  1320  019EB6  00                 	db	0
  1321  019EB7  00                 	db	0
  1322  019EB8  00                 	db	0
  1323  019EB9  00                 	db	0
  1324  019EBA  00                 	db	0
  1325  019EBB  00                 	db	0
  1326  019EBC  00                 	db	0
  1327  019EBD  00                 	db	0
  1328  019EBE  00                 	db	0
  1329  019EBF  00                 	db	0
  1330  019EC0  00                 	db	0
  1331  019EC1  00                 	db	0
  1332  019EC2  00                 	db	0
  1333  019EC3  00                 	db	0
  1334  019EC4  00                 	db	0
  1335  019EC5  00                 	db	0
  1336  019EC6  00                 	db	0
  1337  019EC7  00                 	db	0
  1338  019EC8  00                 	db	0
  1339  019EC9  00                 	db	0
  1340  019ECA  00                 	db	0
  1341  019ECB  00                 	db	0
  1342  019ECC  00                 	db	0
  1343  019ECD  00                 	db	0
  1344  019ECE  00                 	db	0
  1345  019ECF  00                 	db	0
  1346  019ED0  00                 	db	0
  1347  019ED1  00                 	db	0
  1348  019ED2  00                 	db	0
  1349  019ED3  00                 	db	0
  1350  019ED4  00                 	db	0
  1351  019ED5  00                 	db	0
  1352  019ED6  00                 	db	0
  1353  019ED7  00                 	db	0
  1354  019ED8  00                 	db	0
  1355  019ED9  00                 	db	0
  1356  019EDA  00                 	db	0
  1357  019EDB  00                 	db	0
  1358  019EDC  00                 	db	0
  1359  019EDD  00                 	db	0
  1360  019EDE  00                 	db	0
  1361  019EDF  00                 	db	0
  1362  019EE0  00                 	db	0
  1363  019EE1  00                 	db	0
  1364  019EE2  00                 	db	0
  1365  019EE3  00                 	db	0
  1366  019EE4  00                 	db	0
  1367  019EE5  00                 	db	0
  1368  019EE6  00                 	db	0
  1369  019EE7  00                 	db	0
  1370  019EE8  00                 	db	0
  1371  019EE9  00                 	db	0
  1372  019EEA  00                 	db	0
  1373  019EEB  00                 	db	0
  1374  019EEC  00                 	db	0
  1375  019EED  00                 	db	0
  1376  019EEE  00                 	db	0
  1377  019EEF  00                 	db	0
  1378  019EF0  00                 	db	0
  1379  019EF1  00                 	db	0
  1380  019EF2  00                 	db	0
  1381  019EF3  00                 	db	0
  1382  019EF4  00                 	db	0
  1383  019EF5  00                 	db	0
  1384  019EF6  00                 	db	0
  1385  019EF7  00                 	db	0
  1386  019EF8  00                 	db	0
  1387  019EF9  00                 	db	0
  1388  019EFA  00                 	db	0
  1389  019EFB  00                 	db	0
  1390  019EFC  00                 	db	0
  1391  019EFD  00                 	db	0
  1392  019EFE  00                 	db	0
  1393  019EFF  00                 	db	0
  1394  019F00  00                 	db	0
  1395  019F01  00                 	db	0
  1396  019F02  00                 	db	0
  1397  019F03  00                 	db	0
  1398  019F04  00                 	db	0
  1399  019F05  00                 	db	0
  1400  019F06  00                 	db	0
  1401  019F07  00                 	db	0
  1402  019F08  00                 	db	0
  1403  019F09  00                 	db	0
  1404  019F0A  00                 	db	0
  1405  019F0B  00                 	db	0
  1406  019F0C  00                 	db	0
  1407  019F0D  00                 	db	0
  1408  019F0E  00                 	db	0
  1409  019F0F  00                 	db	0
  1410  019F10  00                 	db	0
  1411  019F11  00                 	db	0
  1412  019F12  00                 	db	0
  1413  019F13  00                 	db	0
  1414  019F14  00                 	db	0
  1415  019F15  00                 	db	0
  1416  019F16  00                 	db	0
  1417  019F17  00                 	db	0
  1418  019F18  00                 	db	0
  1419  019F19  00                 	db	0
  1420  019F1A  00                 	db	0
  1421  019F1B  00                 	db	0
  1422  019F1C  00                 	db	0
  1423  019F1D  00                 	db	0
  1424  019F1E  00                 	db	0
  1425  019F1F  00                 	db	0
  1426  019F20  00                 	db	0
  1427  019F21  00                 	db	0
  1428  019F22  00                 	db	0
  1429  019F23  00                 	db	0
  1430                           
  1431                           ;initializer for _C
  1432  019F24  0000               	dw	0
  1433  019F26  0000               	dw	0
  1434  019F28  0000               	dw	0
  1435  019F2A  0000               	dw	0
  1436  019F2C  0000               	dw	0
  1437  019F2E  0000               	dw	0
  1438  019F30  0000               	dw	0
  1439  019F32  0000               	dw	0
  1440  019F34  0000               	dw	0
  1441  019F36  0000               	dw	0
  1442  019F38  0000               	dw	0
  1443  019F3A  0000               	dw	0
  1444  019F3C  0000               	dw	0
  1445  019F3E  0000               	dw	0
  1446  019F40  0000               	dw	0
  1447  019F42  0000               	dw	0
  1448  019F44  0000               	dw	0
  1449  019F46  0000               	dw	0
  1450  019F48  0000               	dw	0
  1451  019F4A  0000               	dw	0
  1452  019F4C  0000               	dw	0
  1453  019F4E  0000               	dw	0
  1454  019F50  0000               	dw	0
  1455  019F52  0000               	dw	0
  1456  019F54  0000               	dw	0
  1457  019F56  0000               	dw	0
  1458  019F58  0000               	dw	0
  1459  019F5A  0000               	dw	0
  1460  019F5C  0000               	dw	0
  1461  019F5E  0000               	dw	0
  1462  019F60  0000               	dw	0
  1463  019F62  0000               	dw	0
  1464  019F64  0000               	dw	0
  1465  019F66  0000               	dw	0
  1466  019F68  0000               	dw	0
  1467  019F6A  0000               	dw	0
  1468  019F6C  0000               	dw	0
  1469  019F6E  0000               	dw	0
  1470  019F70  0000               	dw	0
  1471  019F72  0000               	dw	0
  1472  019F74  0000               	dw	0
  1473  019F76  0000               	dw	0
  1474  019F78  0000               	dw	0
  1475  019F7A  0000               	dw	0
  1476  019F7C  0000               	dw	0
  1477  019F7E  0000               	dw	0
  1478  019F80  0000               	dw	0
  1479  019F82  0000               	dw	0
  1480  019F84  0000               	dw	0
  1481  019F86  0000               	dw	0
  1482  019F88  0000               	dw	0
  1483  019F8A  0000               	dw	0
  1484  019F8C  0000               	dw	0
  1485  019F8E  0000               	dw	0
  1486  019F90  0000               	dw	0
  1487  019F92  0000               	dw	0
  1488  019F94  0000               	dw	0
  1489  019F96  0000               	dw	0
  1490  019F98  0000               	dw	0
  1491  019F9A  0000               	dw	0
  1492  019F9C  0000               	dw	0
  1493  019F9E  0000               	dw	0
  1494  019FA0  0000               	dw	0
  1495  019FA2  0000               	dw	0
  1496  019FA4  0000               	dw	0
  1497  019FA6  0000               	dw	0
  1498  019FA8  0000               	dw	0
  1499  019FAA  0000               	dw	0
  1500  019FAC  0000               	dw	0
  1501  019FAE  0000               	dw	0
  1502  019FB0  0000               	dw	0
  1503  019FB2  42FA               	dw	17146
  1504  019FB4  0000               	dw	0
  1505  019FB6  0000               	dw	0
  1506  019FB8  0000               	dw	0
  1507  019FBA  0000               	dw	0
  1508  019FBC  0000               	dw	0
  1509  019FBE  0000               	dw	0
  1510  019FC0  0000               	dw	0
  1511  019FC2  0000               	dw	0
  1512  019FC4  0000               	dw	0
  1513  019FC6  0000               	dw	0
  1514  019FC8  0000               	dw	0
  1515  019FCA  0000               	dw	0
  1516  019FCC  0000               	dw	0
  1517  019FCE  0000               	dw	0
  1518  019FD0  0000               	dw	0
  1519  019FD2  0000               	dw	0
  1520  019FD4  0000               	dw	0
  1521  019FD6  0000               	dw	0
  1522  019FD8  0000               	dw	0
  1523  019FDA  0000               	dw	0
  1524  019FDC  00                 	db	0
  1525  019FDD  01                 	db	1
  1526  019FDE  0000               	dw	0
  1527  019FE0  0000               	dw	0
  1528  019FE2  0000               	dw	0
  1529  019FE4  0000               	dw	0
  1530  019FE6  0000               	dw	0
  1531  019FE8  0000               	dw	0
  1532  019FEA  0000               	dw	0
  1533  019FEC  0000               	dw	0
  1534  019FEE  0000               	dw	0
  1535  019FF0  0000               	dw	0
  1536  019FF2  0000               	dw	0
  1537  019FF4  00                 	db	0
  1538  019FF5  00                 	db	0
  1539  019FF6  0000               	dw	0
  1540  019FF8  3F80               	dw	16256
  1541  019FFA  0000               	dw	0
  1542  019FFC  3F80               	dw	16256
  1543  019FFE  0000               	dw	0
  1544  01A000  0000               	dw	0
  1545  01A002  0000               	dw	0
  1546  01A004  0000               	dw	0
  1547  01A006  0000               	dw	0
  1548  01A008  0000               	dw	0
  1549  01A00A  0000               	dw	0
  1550  01A00C  0000               	dw	0
  1551  01A00E  0000               	dw	0
  1552  01A010  0000               	dw	0
  1553  01A012  00                 	db	0
  1554  01A013  00                 	db	0
  1555  01A014  00                 	db	0
  1556  01A015  00                 	db	0
  1557  01A016  00                 	db	0
  1558  01A017  00                 	db	0
  1559  01A018  00                 	db	0
  1560  01A019  00                 	db	0
  1561  01A01A  00                 	db	0
  1562  01A01B  00                 	db	0
  1563  01A01C  00                 	db	0
  1564  01A01D  00                 	db	0
  1565  01A01E  00                 	db	0
  1566  01A01F  00                 	db	0
  1567  01A020  00                 	db	0
  1568  01A021  00                 	db	0
  1569  01A022  00                 	db	0
  1570  01A023  00                 	db	0
  1571  01A024  00                 	db	0
  1572  01A025  00                 	db	0
  1573  01A026  00                 	db	0
  1574  01A027  00                 	db	0
  1575  01A028  00                 	db	0
  1576  01A029  00                 	db	0
  1577  01A02A  00                 	db	0
  1578  01A02B  00                 	db	0
  1579  01A02C  00                 	db	0
  1580  01A02D  00                 	db	0
  1581  01A02E  00                 	db	0
  1582  01A02F  00                 	db	0
  1583  01A030  00                 	db	0
  1584  01A031  00                 	db	0
  1585  01A032  00                 	db	0
  1586  01A033  00                 	db	0
  1587  01A034  00                 	db	0
  1588  01A035  00                 	db	0
  1589  01A036  00                 	db	0
  1590  01A037  00                 	db	0
  1591  01A038  00                 	db	0
  1592  01A039  00                 	db	0
  1593  01A03A  00                 	db	0
  1594  01A03B  00                 	db	0
  1595  01A03C  00                 	db	0
  1596  01A03D  00                 	db	0
  1597  01A03E  00                 	db	0
  1598  01A03F  00                 	db	0
  1599  01A040  00                 	db	0
  1600  01A041  00                 	db	0
  1601  01A042  00                 	db	0
  1602  01A043  00                 	db	0
  1603  01A044  00                 	db	0
  1604  01A045  00                 	db	0
  1605  01A046  00                 	db	0
  1606  01A047  00                 	db	0
  1607  01A048  00                 	db	0
  1608  01A049  00                 	db	0
  1609  01A04A  00                 	db	0
  1610  01A04B  00                 	db	0
  1611  01A04C  00                 	db	0
  1612  01A04D  00                 	db	0
  1613  01A04E  0000               	dw	0
  1614  01A050  0000               	dw	0
  1615  01A052  0000               	dw	0
  1616  01A054  0000               	dw	0
  1617  01A056  0000               	dw	0
  1618  01A058  0000               	dw	0
  1619  01A05A  0000               	dw	0
  1620  01A05C  0000               	dw	0
  1621  01A05E  0000               	dw	0
  1622  01A060  0000               	dw	0
  1623  01A062  01                 	db	1
  1624  01A063  00                 	db	0
  1625  01A064  0000               	dw	0
  1626  01A066  0000               	dw	0
  1627  01A068  0000               	dw	0
  1628  01A06A  0000               	dw	0
  1629  01A06C  0000               	dw	0
  1630  01A06E  0000               	dw	0
  1631  01A070  0000               	dw	0
  1632  01A072  0000               	dw	0
  1633                           
  1634                           	psect	idataBANK1
  1635  01F886                     __pidataBANK1:
  1636                           	opt callstack 0
  1637                           
  1638                           ;initializer for _V
  1639  01F886  00                 	db	0
  1640  01F887  00                 	db	0
  1641  01F888  00                 	db	0
  1642  01F889  00                 	db	0
  1643  01F88A  00                 	db	0
  1644  01F88B  00                 	db	0
  1645  01F88C  00                 	db	0
  1646  01F88D  00                 	db	0
  1647  01F88E  00                 	db	0
  1648  01F88F  00                 	db	0
  1649  01F890  00                 	db	0
  1650  01F891  00                 	db	0
  1651  01F892  00                 	db	0
  1652  01F893  00                 	db	0
  1653  01F894  00                 	db	0
  1654  01F895  00                 	db	0
  1655  01F896  00                 	db	0
  1656  01F897  00                 	db	0
  1657  01F898  00                 	db	0
  1658  01F899  00                 	db	0
  1659  01F89A  00                 	db	0
  1660  01F89B  00                 	db	0
  1661  01F89C  00                 	db	0
  1662  01F89D  00                 	db	0
  1663  01F89E  00                 	db	0
  1664  01F89F  00                 	db	0
  1665  01F8A0  00                 	db	0
  1666  01F8A1  00                 	db	0
  1667  01F8A2  00                 	db	0
  1668  01F8A3  00                 	db	0
  1669  01F8A4  00                 	db	0
  1670  01F8A5  00                 	db	0
  1671  01F8A6  00                 	db	0
  1672  01F8A7  00                 	db	0
  1673  01F8A8  00                 	db	0
  1674  01F8A9  00                 	db	0
  1675  01F8AA  00                 	db	0
  1676  01F8AB  00                 	db	0
  1677  01F8AC  00                 	db	0
  1678  01F8AD  00                 	db	0
  1679  01F8AE  00                 	db	0
  1680  01F8AF  00                 	db	0
  1681  01F8B0  00                 	db	0
  1682  01F8B1  00                 	db	0
  1683  01F8B2  00                 	db	0
  1684  01F8B3  00                 	db	0
  1685  01F8B4  00                 	db	0
  1686  01F8B5  00                 	db	0
  1687  01F8B6  00                 	db	0
  1688  01F8B7  00                 	db	0
  1689  01F8B8  00                 	db	0
  1690  01F8B9  00                 	db	0
  1691  01F8BA  00                 	db	0
  1692  01F8BB  00                 	db	0
  1693  01F8BC  00                 	db	0
  1694  01F8BD  00                 	db	0
  1695  01F8BE  00                 	db	0
  1696  01F8BF  00                 	db	0
  1697  01F8C0  00                 	db	0
  1698  01F8C1  00                 	db	0
  1699  01F8C2  00                 	db	0
  1700  01F8C3  00                 	db	0
  1701  01F8C4  00                 	db	0
  1702  01F8C5  00                 	db	0
  1703  01F8C6  00                 	db	0
  1704  01F8C7  00                 	db	0
  1705  01F8C8  00                 	db	0
  1706  01F8C9  00                 	db	0
  1707  01F8CA  00                 	db	0
  1708  01F8CB  00                 	db	0
  1709  01F8CC  00                 	db	0
  1710  01F8CD  00                 	db	0
  1711  01F8CE  00                 	db	0
  1712  01F8CF  00                 	db	0
  1713  01F8D0  00                 	db	0
  1714  01F8D1  00                 	db	0
  1715  01F8D2  00                 	db	0
  1716  01F8D3  00                 	db	0
  1717  01F8D4  00                 	db	0
  1718  01F8D5  00                 	db	0
  1719  01F8D6  00                 	db	0
  1720  01F8D7  00                 	db	0
  1721  01F8D8  00                 	db	0
  1722  01F8D9  00                 	db	0
  1723  01F8DA  00                 	db	0
  1724  01F8DB  00                 	db	0
  1725  01F8DC  00                 	db	0
  1726  01F8DD  00                 	db	0
  1727  01F8DE  00                 	db	0
  1728  01F8DF  00                 	db	0
  1729  01F8E0  00                 	db	0
  1730  01F8E1  00                 	db	0
  1731  01F8E2  00                 	db	0
  1732  01F8E3  00                 	db	0
  1733  01F8E4  00                 	db	0
  1734  01F8E5  00                 	db	0
  1735  01F8E6  00                 	db	0
  1736  01F8E7  00                 	db	0
  1737  01F8E8  00                 	db	0
  1738  01F8E9  00                 	db	0
  1739  01F8EA  00                 	db	0
  1740  01F8EB  00                 	db	0
  1741  01F8EC  00                 	db	0
  1742  01F8ED  00                 	db	0
  1743  01F8EE  00                 	db	0
  1744  01F8EF  00                 	db	0
  1745  01F8F0  00                 	db	0
  1746  01F8F1  00                 	db	0
  1747  01F8F2  00                 	db	0
  1748  01F8F3  00                 	db	0
  1749  01F8F4  00                 	db	0
  1750  01F8F5  00                 	db	0
  1751  01F8F6  00                 	db	0
  1752  01F8F7  00                 	db	0
  1753  01F8F8  00                 	db	0
  1754  01F8F9  00                 	db	0
  1755  01F8FA  00                 	db	0
  1756  01F8FB  00                 	db	0
  1757  01F8FC  00                 	db	0
  1758  01F8FD  00                 	db	0
  1759  01F8FE  00                 	db	0
  1760  01F8FF  00                 	db	0
  1761  01F900  00                 	db	0
  1762  01F901  00                 	db	0
  1763  01F902  00                 	db	0
  1764  01F903  00                 	db	0
  1765  01F904  00                 	db	0
  1766  01F905  00                 	db	0
  1767  01F906  00                 	db	0
  1768  01F907  019A               	dw	410
  1769  01F909  5E48               	dw	24136
  1770  01F90B  0000               	dw	0
  1771  01F90D  0000               	dw	0
  1772  01F90F  00                 	db	0
  1773  01F910  00                 	db	0
  1774  01F911  00                 	db	0
  1775  01F912  00                 	db	0
  1776  01F913  00                 	db	0
  1777  01F914  00                 	db	0
  1778  01F915  0000               	dw	0
  1779  01F917  0000               	dw	0
  1780  01F919  0000               	dw	0
  1781  01F91B  0000               	dw	0
  1782  01F91D  0000               	dw	0
  1783  01F91F  0000               	dw	0
  1784  01F921  00                 	db	0
  1785  01F922  00                 	db	0
  1786  01F923  00                 	db	0
  1787  01F924  00                 	db	0
  1788  01F925  00                 	db	0
  1789  01F926  00                 	db	0
  1790  01F927  00                 	db	0
  1791  01F928  00                 	db	0
  1792  01F929  00                 	db	0
  1793  01F92A  00                 	db	0
  1794  01F92B  00                 	db	0
  1795  01F92C  0000               	dw	0
  1796  01F92E  0000               	dw	0
  1797  01F930  2D                 	db	45
  1798  01F931  00                 	db	0
  1799  01F932  00                 	db	0
  1800  01F933  00                 	db	0
  1801  01F934  00                 	db	0
  1802  01F935  00                 	db	0
  1803  01F936  0000               	dw	0
  1804  01F938  0000               	dw	0
  1805  01F93A  0000               	dw	0
  1806  01F93C  0000               	dw	0
  1807  01F93E  0000               	dw	0
  1808  01F940  0000               	dw	0
  1809  01F942  0000               	dw	0
  1810  01F944  0000               	dw	0
  1811                           
  1812                           ;initializer for _H
  1813  01F946  00                 	db	0
  1814  01F947  00                 	db	0
  1815  01F948  01                 	db	1
  1816  01F949  00                 	db	0
  1817  01F94A  01                 	db	1
  1818  01F94B  00                 	db	0
  1819  01F94C  01                 	db	1
  1820  01F94D  00                 	db	0
  1821  01F94E  00                 	db	0
  1822                           
  1823                           	psect	idataBANK2
  1824  01FC3C                     __pidataBANK2:
  1825                           	opt callstack 0
  1826                           
  1827                           ;initializer for stoa@F1166
  1828  01FC3C  28                 	db	40
  1829  01FC3D  6E                 	db	110
  1830  01FC3E  75                 	db	117
  1831  01FC3F  6C                 	db	108
  1832  01FC40  6C                 	db	108
  1833  01FC41  29                 	db	41
  1834  01FC42  00                 	db	0
  1835                           
  1836                           ;initializer for _R
  1837  01FC43  0000               	dw	0
  1838  01FC45  0000               	dw	0
  1839  01FC47  0000               	dw	0
  1840  01FC49  0000               	dw	0
  1841  01FC4B  0000               	dw	0
  1842  01FC4D  0000               	dw	0
  1843  01FC4F  0000               	dw	0
  1844  01FC51  0000               	dw	0
  1845  01FC53  0000               	dw	0
  1846  01FC55  0000               	dw	0
  1847  01FC57  0000               	dw	0
  1848  01FC59  0000               	dw	0
  1849  01FC5B  0000               	dw	0
  1850  01FC5D  0000               	dw	0
  1851  01FC5F  0000               	dw	0
  1852  01FC61  0000               	dw	0
  1853  01FC63  0000               	dw	0
  1854  01FC65  0000               	dw	0
  1855  01FC67  0000               	dw	0
  1856  01FC69  0F62               	dw	3938
  1857  01FC6B  0FA4               	dw	4004
  1858  01FC6D  89A0               	dw	35232
  1859  01FC6F  3DB0               	dw	15792
  1860  01FC71  DEA4               	dw	56996
  1861  01FC73  3D13               	dw	15635
  1862  01FC75  00                 	db	0
  1863  01FC76  0000               	dw	0
  1864  01FC78  00                 	db	0
  1865  01FC79  00                 	db	0
  1866  01FC7A  0000               	dw	0
  1867  01FC7C  0000               	dw	0
  1868  01FC7E  0000               	dw	0
  1869  01FC80  0000               	dw	0
  1870  01FC82  0000               	dw	0
  1871  01FC84  0000               	dw	0
  1872  01FC86  0000               	dw	0
  1873  01FC88  0000               	dw	0
  1874  01FC8A  0000               	dw	0
  1875  01FC8C  0000               	dw	0
  1876  01FC8E  0000               	dw	0
  1877  01FC90  00                 	db	0
  1878  01FC91  00                 	db	0
  1879  01FC92  0000               	dw	0
  1880  01FC94  0000               	dw	0
  1881  01FC96  0000               	dw	0
  1882  01FC98  0000               	dw	0
  1883  01FC9A  0000               	dw	0
  1884  01FC9C  0000               	dw	0
  1885  01FC9E  0000               	dw	0
  1886  01FCA0  0000               	dw	0
  1887  01FCA2  0000               	dw	0
  1888  01FCA4  0000               	dw	0
  1889  01FCA6  0000               	dw	0
  1890  01FCA8  0000               	dw	0
  1891  01FCAA  0000               	dw	0
  1892  01FCAC  0000               	dw	0
  1893  01FCAE  0000               	dw	0
  1894  01FCB0  0000               	dw	0
  1895  01FCB2  0000               	dw	0
  1896  01FCB4  0000               	dw	0
  1897  01FCB6  0000               	dw	0
  1898  01FCB8  0000               	dw	0
  1899  01FCBA  0000               	dw	0
  1900  01FCBC  0000               	dw	0
  1901  01FCBE  0000               	dw	0
  1902  01FCC0  0000               	dw	0
  1903  01FCC2  0000               	dw	0
  1904  01FCC4  0000               	dw	0
  1905  01FCC6  0000               	dw	0
  1906  01FCC8  0000               	dw	0
  1907  01FCCA  0000               	dw	0
  1908  01FCCC  0000               	dw	0
  1909  01FCCE  0000               	dw	0
  1910  01FCD0  0000               	dw	0
  1911  01FCD2  0000               	dw	0
  1912  01FCD4  0000               	dw	0
  1913  01FCD6  0000               	dw	0
  1914  01FCD8  0000               	dw	0
  1915  01FCDA  0000               	dw	0
  1916  01FCDC  0000               	dw	0
  1917  01FCDE  0000               	dw	0
  1918  01FCE0  0000               	dw	0
  1919  01FCE2  0000               	dw	0
  1920  01FCE4  0000               	dw	0
  1921  01FCE6  0000               	dw	0
  1922  01FCE8  0000               	dw	0
  1923  01FCEA  00                 	db	0
  1924  01FCEB  1957               	dw	6487
  1925  01FCED  42                 	db	66
  1926                           
  1927                           	psect	mediumconst
  1928  00F812                     __pmediumconst:
  1929                           	opt callstack 0
  1930  00F812  00                 	db	0
  1931  00F813                     _BVSOC_TABLE:
  1932                           	opt callstack 0
  1933  00F813  59D8               	dw	23000
  1934  00F815  0000               	dw	0
  1935  00F817  0005               	dw	5
  1936  00F819  0000               	dw	0
  1937  00F81B  5B68               	dw	23400
  1938  00F81D  0000               	dw	0
  1939  00F81F  000A               	dw	10
  1940  00F821  0000               	dw	0
  1941  00F823  5C30               	dw	23600
  1942  00F825  0000               	dw	0
  1943  00F827  0014               	dw	20
  1944  00F829  0000               	dw	0
  1945  00F82B  5E38               	dw	24120
  1946  00F82D  0000               	dw	0
  1947  00F82F  0019               	dw	25
  1948  00F831  0000               	dw	0
  1949  00F833  5E88               	dw	24200
  1950  00F835  0000               	dw	0
  1951  00F837  001E               	dw	30
  1952  00F839  0000               	dw	0
  1953  00F83B  5F78               	dw	24440
  1954  00F83D  0000               	dw	0
  1955  00F83F  0028               	dw	40
  1956  00F841  0000               	dw	0
  1957  00F843  5FDC               	dw	24540
  1958  00F845  0000               	dw	0
  1959  00F847  002D               	dw	45
  1960  00F849  0000               	dw	0
  1961  00F84B  6018               	dw	24600
  1962  00F84D  0000               	dw	0
  1963  00F84F  0032               	dw	50
  1964  00F851  0000               	dw	0
  1965  00F853  6046               	dw	24646
  1966  00F855  0000               	dw	0
  1967  00F857  0035               	dw	53
  1968  00F859  0000               	dw	0
  1969  00F85B  607C               	dw	24700
  1970  00F85D  0000               	dw	0
  1971  00F85F  0037               	dw	55
  1972  00F861  0000               	dw	0
  1973  00F863  60AE               	dw	24750
  1974  00F865  0000               	dw	0
  1975  00F867  0039               	dw	57
  1976  00F869  0000               	dw	0
  1977  00F86B  60E0               	dw	24800
  1978  00F86D  0000               	dw	0
  1979  00F86F  003C               	dw	60
  1980  00F871  0000               	dw	0
  1981  00F873  6112               	dw	24850
  1982  00F875  0000               	dw	0
  1983  00F877  003F               	dw	63
  1984  00F879  0000               	dw	0
  1985  00F87B  615D               	dw	24925
  1986  00F87D  0000               	dw	0
  1987  00F87F  0043               	dw	67
  1988  00F881  0000               	dw	0
  1989  00F883  61A8               	dw	25000
  1990  00F885  0000               	dw	0
  1991  00F887  0046               	dw	70
  1992  00F889  0000               	dw	0
  1993  00F88B  61BC               	dw	25020
  1994  00F88D  0000               	dw	0
  1995  00F88F  0048               	dw	72
  1996  00F891  0000               	dw	0
  1997  00F893  61D0               	dw	25040
  1998  00F895  0000               	dw	0
  1999  00F897  004B               	dw	75
  2000  00F899  0000               	dw	0
  2001  00F89B  61DA               	dw	25050
  2002  00F89D  0000               	dw	0
  2003  00F89F  0050               	dw	80
  2004  00F8A1  0000               	dw	0
  2005  00F8A3  61E4               	dw	25060
  2006  00F8A5  0000               	dw	0
  2007  00F8A7  0055               	dw	85
  2008  00F8A9  0000               	dw	0
  2009  00F8AB  61F8               	dw	25080
  2010  00F8AD  0000               	dw	0
  2011  00F8AF  005A               	dw	90
  2012  00F8B1  0000               	dw	0
  2013  00F8B3  6208               	dw	25096
  2014  00F8B5  0000               	dw	0
  2015  00F8B7  005C               	dw	92
  2016  00F8B9  0000               	dw	0
  2017  00F8BB  6222               	dw	25122
  2018  00F8BD  0000               	dw	0
  2019  00F8BF  005D               	dw	93
  2020  00F8C1  0000               	dw	0
  2021  00F8C3  6234               	dw	25140
  2022  00F8C5  0000               	dw	0
  2023  00F8C7  005F               	dw	95
  2024  00F8C9  0000               	dw	0
  2025  00F8CB  6248               	dw	25160
  2026  00F8CD  0000               	dw	0
  2027  00F8CF  0061               	dw	97
  2028  00F8D1  0000               	dw	0
  2029  00F8D3  625C               	dw	25180
  2030  00F8D5  0000               	dw	0
  2031  00F8D7  0064               	dw	100
  2032  00F8D9  0000               	dw	0
  2033  00F8DB  6784               	dw	26500
  2034  00F8DD  0000               	dw	0
  2035  00F8DF  0062               	dw	98
  2036  00F8E1  0000               	dw	0
  2037  00F8E3                     __end_of_BVSOC_TABLE:
  2038                           	opt callstack 0
  2039  00F8E3                     ___month_to_secs@secs_through_month:
  2040                           	opt callstack 0
  2041  00F8E3  0000               	dw	0
  2042  00F8E5  0000               	dw	0
  2043  00F8E7  DE80               	dw	56960
  2044  00F8E9  0028               	dw	40
  2045  00F8EB  C880               	dw	51328
  2046  00F8ED  004D               	dw	77
  2047  00F8EF  A700               	dw	42752
  2048  00F8F1  0076               	dw	118
  2049  00F8F3  3400               	dw	13312
  2050  00F8F5  009E               	dw	158
  2051  00F8F7  1280               	dw	4736
  2052  00F8F9  00C7               	dw	199
  2053  00F8FB  9F80               	dw	40832
  2054  00F8FD  00EE               	dw	238
  2055  00F8FF  7E00               	dw	32256
  2056  00F901  0117               	dw	279
  2057  00F903  5C80               	dw	23680
  2058  00F905  0140               	dw	320
  2059  00F907  E980               	dw	59776
  2060  00F909  0167               	dw	359
  2061  00F90B  C800               	dw	51200
  2062  00F90D  0190               	dw	400
  2063  00F90F  5500               	dw	21760
  2064  00F911  01B8               	dw	440
  2065  00F913                     __end_of___month_to_secs@secs_through_month:
  2066                           	opt callstack 0
  2067  00F913                     ___secs_to_tm@days_in_month:
  2068                           	opt callstack 0
  2069  00F913  1F                 	db	31
  2070  00F914  1E                 	db	30
  2071  00F915  1F                 	db	31
  2072  00F916  1E                 	db	30
  2073  00F917  1F                 	db	31
  2074  00F918  1F                 	db	31
  2075  00F919  1E                 	db	30
  2076  00F91A  1F                 	db	31
  2077  00F91B  1E                 	db	30
  2078  00F91C  1F                 	db	31
  2079  00F91D  1F                 	db	31
  2080  00F91E  1D                 	db	29
  2081  00F91F                     __end_of___secs_to_tm@days_in_month:
  2082                           	opt callstack 0
  2083  00F91F                     _T:
  2084                           	opt callstack 0
  2085  00F91F  63                 	db	99
  2086  00F920  6F                 	db	111
  2087  00F921  6D                 	db	109
  2088  00F922  6D                 	db	109
  2089  00F923  61                 	db	97
  2090  00F924  6E                 	db	110
  2091  00F925  64                 	db	100
  2092  00F926  73                 	db	115
  2093  00F927  20                 	db	32
  2094  00F928  31                 	db	49
  2095  00F929  00                 	db	0
  2096  00F92A  00                 	db	0
  2097  00F92B  00                 	db	0
  2098  00F92C  00                 	db	0
  2099  00F92D  00                 	db	0
  2100  00F92E  00                 	db	0
  2101  00F92F  00                 	db	0
  2102  00F930  00                 	db	0
  2103  00F931  64                 	db	100
  2104  00F932  69                 	db	105
  2105  00F933  73                 	db	115
  2106  00F934  70                 	db	112
  2107  00F935  6C                 	db	108
  2108  00F936  61                 	db	97
  2109  00F937  79                 	db	121
  2110  00F938  73                 	db	115
  2111  00F939  20                 	db	32
  2112  00F93A  31                 	db	49
  2113  00F93B  00                 	db	0
  2114  00F93C  00                 	db	0
  2115  00F93D  00                 	db	0
  2116  00F93E  00                 	db	0
  2117  00F93F  00                 	db	0
  2118  00F940  00                 	db	0
  2119  00F941  00                 	db	0
  2120  00F942  00                 	db	0
  2121  00F943  63                 	db	99
  2122  00F944  6F                 	db	111
  2123  00F945  6D                 	db	109
  2124  00F946  6D                 	db	109
  2125  00F947  61                 	db	97
  2126  00F948  6E                 	db	110
  2127  00F949  64                 	db	100
  2128  00F94A  73                 	db	115
  2129  00F94B  20                 	db	32
  2130  00F94C  32                 	db	50
  2131  00F94D  00                 	db	0
  2132  00F94E  00                 	db	0
  2133  00F94F  00                 	db	0
  2134  00F950  00                 	db	0
  2135  00F951  00                 	db	0
  2136  00F952  00                 	db	0
  2137  00F953  00                 	db	0
  2138  00F954  00                 	db	0
  2139  00F955  64                 	db	100
  2140  00F956  69                 	db	105
  2141  00F957  73                 	db	115
  2142  00F958  70                 	db	112
  2143  00F959  6C                 	db	108
  2144  00F95A  61                 	db	97
  2145  00F95B  79                 	db	121
  2146  00F95C  73                 	db	115
  2147  00F95D  20                 	db	32
  2148  00F95E  32                 	db	50
  2149  00F95F  00                 	db	0
  2150  00F960  00                 	db	0
  2151  00F961  00                 	db	0
  2152  00F962  00                 	db	0
  2153  00F963  00                 	db	0
  2154  00F964  00                 	db	0
  2155  00F965  00                 	db	0
  2156  00F966  00                 	db	0
  2157  00F967  63                 	db	99
  2158  00F968  6F                 	db	111
  2159  00F969  6D                 	db	109
  2160  00F96A  6D                 	db	109
  2161  00F96B  61                 	db	97
  2162  00F96C  6E                 	db	110
  2163  00F96D  64                 	db	100
  2164  00F96E  73                 	db	115
  2165  00F96F  20                 	db	32
  2166  00F970  33                 	db	51
  2167  00F971  00                 	db	0
  2168  00F972  00                 	db	0
  2169  00F973  00                 	db	0
  2170  00F974  00                 	db	0
  2171  00F975  00                 	db	0
  2172  00F976  00                 	db	0
  2173  00F977  00                 	db	0
  2174  00F978  00                 	db	0
  2175  00F979  64                 	db	100
  2176  00F97A  69                 	db	105
  2177  00F97B  73                 	db	115
  2178  00F97C  70                 	db	112
  2179  00F97D  6C                 	db	108
  2180  00F97E  61                 	db	97
  2181  00F97F  79                 	db	121
  2182  00F980  73                 	db	115
  2183  00F981  20                 	db	32
  2184  00F982  33                 	db	51
  2185  00F983  00                 	db	0
  2186  00F984  00                 	db	0
  2187  00F985  00                 	db	0
  2188  00F986  00                 	db	0
  2189  00F987  00                 	db	0
  2190  00F988  00                 	db	0
  2191  00F989  00                 	db	0
  2192  00F98A  00                 	db	0
  2193  00F98B  63                 	db	99
  2194  00F98C  6F                 	db	111
  2195  00F98D  6D                 	db	109
  2196  00F98E  6D                 	db	109
  2197  00F98F  61                 	db	97
  2198  00F990  6E                 	db	110
  2199  00F991  64                 	db	100
  2200  00F992  73                 	db	115
  2201  00F993  20                 	db	32
  2202  00F994  34                 	db	52
  2203  00F995  00                 	db	0
  2204  00F996  00                 	db	0
  2205  00F997  00                 	db	0
  2206  00F998  00                 	db	0
  2207  00F999  00                 	db	0
  2208  00F99A  00                 	db	0
  2209  00F99B  00                 	db	0
  2210  00F99C  00                 	db	0
  2211  00F99D  64                 	db	100
  2212  00F99E  69                 	db	105
  2213  00F99F  73                 	db	115
  2214  00F9A0  70                 	db	112
  2215  00F9A1  6C                 	db	108
  2216  00F9A2  61                 	db	97
  2217  00F9A3  79                 	db	121
  2218  00F9A4  73                 	db	115
  2219  00F9A5  20                 	db	32
  2220  00F9A6  34                 	db	52
  2221  00F9A7  00                 	db	0
  2222  00F9A8  00                 	db	0
  2223  00F9A9  00                 	db	0
  2224  00F9AA  00                 	db	0
  2225  00F9AB  00                 	db	0
  2226  00F9AC  00                 	db	0
  2227  00F9AD  00                 	db	0
  2228  00F9AE  00                 	db	0
  2229  00F9AF                     __end_of_T:
  2230                           	opt callstack 0
  2231  00F9AF                     _spin:
  2232                           	opt callstack 0
  2233  00F9AF  7C                 	db	124
  2234  00F9B0  7C                 	db	124
  2235  00F9B1  2F                 	db	47
  2236  00F9B2  2F                 	db	47
  2237  00F9B3  2D                 	db	45
  2238  00F9B4  2D                 	db	45
  2239  00F9B5  00                 	db	0
  2240  00F9B6  00                 	db	0
  2241  00F9B7  00                 	db	0
  2242  00F9B8  00                 	db	0
  2243  00F9B9  00                 	db	0
  2244  00F9BA  00                 	db	0
  2245  00F9BB  00                 	db	0
  2246  00F9BC  00                 	db	0
  2247  00F9BD  00                 	db	0
  2248  00F9BE  00                 	db	0
  2249  00F9BF  00                 	db	0
  2250  00F9C0  00                 	db	0
  2251  00F9C1  00                 	db	0
  2252  00F9C2  00                 	db	0
  2253  00F9C3  7C                 	db	124
  2254  00F9C4  7C                 	db	124
  2255  00F9C5  2F                 	db	47
  2256  00F9C6  2F                 	db	47
  2257  00F9C7  2D                 	db	45
  2258  00F9C8  2D                 	db	45
  2259  00F9C9  5C                 	db	92
  2260  00F9CA  5C                 	db	92
  2261  00F9CB  00                 	db	0
  2262  00F9CC  00                 	db	0
  2263  00F9CD  00                 	db	0
  2264  00F9CE  00                 	db	0
  2265  00F9CF  00                 	db	0
  2266  00F9D0  00                 	db	0
  2267  00F9D1  00                 	db	0
  2268  00F9D2  00                 	db	0
  2269  00F9D3  00                 	db	0
  2270  00F9D4  00                 	db	0
  2271  00F9D5  00                 	db	0
  2272  00F9D6  00                 	db	0
  2273  00F9D7  4F                 	db	79
  2274  00F9D8  4F                 	db	79
  2275  00F9D9  4F                 	db	79
  2276  00F9DA  4F                 	db	79
  2277  00F9DB  4F                 	db	79
  2278  00F9DC  4F                 	db	79
  2279  00F9DD  2D                 	db	45
  2280  00F9DE  2D                 	db	45
  2281  00F9DF  5F                 	db	95
  2282  00F9E0  5F                 	db	95
  2283  00F9E1  2D                 	db	45
  2284  00F9E2  00                 	db	0
  2285  00F9E3  00                 	db	0
  2286  00F9E4  00                 	db	0
  2287  00F9E5  00                 	db	0
  2288  00F9E6  00                 	db	0
  2289  00F9E7  00                 	db	0
  2290  00F9E8  00                 	db	0
  2291  00F9E9  00                 	db	0
  2292  00F9EA  00                 	db	0
  2293  00F9EB  76                 	db	118
  2294  00F9EC  76                 	db	118
  2295  00F9ED  3C                 	db	60
  2296  00F9EE  3C                 	db	60
  2297  00F9EF  5E                 	db	94
  2298  00F9F0  5E                 	db	94
  2299  00F9F1  3E                 	db	62
  2300  00F9F2  3E                 	db	62
  2301  00F9F3  00                 	db	0
  2302  00F9F4  00                 	db	0
  2303  00F9F5  00                 	db	0
  2304  00F9F6  00                 	db	0
  2305  00F9F7  00                 	db	0
  2306  00F9F8  00                 	db	0
  2307  00F9F9  00                 	db	0
  2308  00F9FA  00                 	db	0
  2309  00F9FB  00                 	db	0
  2310  00F9FC  00                 	db	0
  2311  00F9FD  00                 	db	0
  2312  00F9FE  00                 	db	0
  2313  00F9FF  2E                 	db	46
  2314  00FA00  2E                 	db	46
  2315  00FA01  2A                 	db	42
  2316  00FA02  2A                 	db	42
  2317  00FA03  78                 	db	120
  2318  00FA04  23                 	db	35
  2319  00FA05  78                 	db	120
  2320  00FA06  23                 	db	35
  2321  00FA07  58                 	db	88
  2322  00FA08  58                 	db	88
  2323  00FA09  7C                 	db	124
  2324  00FA0A  7C                 	db	124
  2325  00FA0B  2D                 	db	45
  2326  00FA0C  2D                 	db	45
  2327  00FA0D  00                 	db	0
  2328  00FA0E  00                 	db	0
  2329  00FA0F  00                 	db	0
  2330  00FA10  00                 	db	0
  2331  00FA11  00                 	db	0
  2332  00FA12  00                 	db	0
  2333  00FA13  2E                 	db	46
  2334  00FA14  2E                 	db	46
  2335  00FA15  6F                 	db	111
  2336  00FA16  6F                 	db	111
  2337  00FA17  4F                 	db	79
  2338  00FA18  4F                 	db	79
  2339  00FA19  6F                 	db	111
  2340  00FA1A  6F                 	db	111
  2341  00FA1B  00                 	db	0
  2342  00FA1C  00                 	db	0
  2343  00FA1D  00                 	db	0
  2344  00FA1E  00                 	db	0
  2345  00FA1F  00                 	db	0
  2346  00FA20  00                 	db	0
  2347  00FA21  00                 	db	0
  2348  00FA22  00                 	db	0
  2349  00FA23  00                 	db	0
  2350  00FA24  00                 	db	0
  2351  00FA25  00                 	db	0
  2352  00FA26  00                 	db	0
  2353  00FA27                     __end_of_spin:
  2354                           	opt callstack 0
  2355  00FA27  0000               	dw	0
  2356  00FA29  3F80               	dw	16256
  2357  00FA2B  0000               	dw	0
  2358  00FA2D  3FC0               	dw	16320
  2359  00FA2F                     __end_of_bp:
  2360                           	opt callstack 0
  2361  00FA2F                     ___gmt:
  2362                           	opt callstack 0
  2363  00FA2F  47                 	db	71
  2364  00FA30  4D                 	db	77
  2365  00FA31  54                 	db	84
  2366  00FA32  00                 	db	0
  2367  00FA33                     __end_of___gmt:
  2368                           	opt callstack 0
  2369  00FA33  AA00               	dw	43520
  2370  00FA35  3FB8               	dw	16312
  2371  00FA37                     __end_of_ivln2_h:
  2372                           	opt callstack 0
  2373  00FA37  23C6               	dw	9158
  2374  00FA39  B8F6               	dw	47350
  2375  00FA3B                     __end_of_cp_l:
  2376                           	opt callstack 0
  2377  00FA3B  4000               	dw	16384
  2378  00FA3D  3F76               	dw	16246
  2379  00FA3F                     __end_of_cp_h:
  2380                           	opt callstack 0
  2381  0000                     _IVTADL	set	14493
  2382  0000                     _IVTADH	set	14494
  2383  0000                     _IVTADU	set	14495
  2384  0000                     _CRCDATH	set	14689
  2385  0000                     _CRCDATL	set	14688
  2386  0000                     _CRCCON0bits	set	14696
  2387  0000                     _CRCCON1bits	set	14697
  2388  0000                     _CRCXORL	set	14694
  2389  0000                     _CRCXORH	set	14695
  2390  0000                     _SCANTRIG	set	14717
  2391  0000                     _SCANHADRL	set	14713
  2392  0000                     _SCANHADRH	set	14714
  2393  0000                     _SCANHADRU	set	14715
  2394  0000                     _SCANLADRL	set	14710
  2395  0000                     _SCANLADRH	set	14711
  2396  0000                     _SCANLADRU	set	14712
  2397  0000                     _SCANCON0	set	14716
  2398  0000                     _CRCACCH	set	14691
  2399  0000                     _CRCACCL	set	14690
  2400  0000                     _CRCCON1	set	14697
  2401  0000                     _CRCCON0	set	14696
  2402  0000                     _PIR6bits	set	14758
  2403  0000                     _PIR4bits	set	14756
  2404  0000                     _PIE8bits	set	14744
  2405  0000                     _PIR8bits	set	14760
  2406  0000                     _PIR0bits	set	14752
  2407  0000                     _NVMCON2	set	14822
  2408  0000                     _NVMDAT	set	14819
  2409  0000                     _NVMADRL	set	14816
  2410  0000                     _NVMADRH	set	14817
  2411  0000                     _NVMCON1bits	set	14821
  2412  0000                     _SCANPR	set	14839
  2413  0000                     _DMA2PR	set	14836
  2414  0000                     _DMA1PR	set	14835
  2415  0000                     _MAINPR	set	14834
  2416  0000                     _ISRPR	set	14833
  2417  0000                     _PIE2bits	set	14738
  2418  0000                     _PIR2bits	set	14754
  2419  0000                     _PIE9bits	set	14745
  2420  0000                     _PIR9bits	set	14761
  2421  0000                     _PIE6bits	set	14742
  2422  0000                     _PIE3bits	set	14739
  2423  0000                     _PMD7	set	14791
  2424  0000                     _PMD6	set	14790
  2425  0000                     _PMD5	set	14789
  2426  0000                     _PMD4	set	14788
  2427  0000                     _PMD3	set	14787
  2428  0000                     _PMD2	set	14786
  2429  0000                     _PMD1	set	14785
  2430  0000                     _PMD0	set	14784
  2431  0000                     _OSCTUNE	set	14814
  2432  0000                     _OSCFRQ	set	14815
  2433  0000                     _OSCEN	set	14813
  2434  0000                     _OSCCON3	set	14811
  2435  0000                     _OSCCON1	set	14809
  2436  0000                     _IPR8bits	set	14728
  2437  0000                     _IPR9bits	set	14729
  2438  0000                     _IPR5bits	set	14725
  2439  0000                     _IPR1bits	set	14721
  2440  0000                     _IPR3bits	set	14723
  2441  0000                     _IPR6bits	set	14726
  2442  0000                     _IPR2bits	set	14722
  2443  0000                     _PIE5bits	set	14741
  2444  0000                     _PIE1bits	set	14737
  2445  0000                     _PIR5bits	set	14757
  2446  0000                     _PIR1bits	set	14753
  2447  0000                     _PLLR	set	118496
  2448  0000                     _SPI1SDIPPS	set	15071
  2449  0000                     _U1RXPPS	set	15077
  2450  0000                     _RC6PPS	set	14870
  2451  0000                     _RC5PPS	set	14869
  2452  0000                     _INT1PPS	set	15041
  2453  0000                     _RD1PPS	set	14873
  2454  0000                     _INT0PPS	set	15040
  2455  0000                     _RC3PPS	set	14867
  2456  0000                     _RB6PPS	set	14862
  2457  0000                     _SPI1SCKPPS	set	15070
  2458  0000                     _U2RXPPS	set	15080
  2459  0000                     _SLRCONF	set	14995
  2460  0000                     _SLRCONE	set	14979
  2461  0000                     _SLRCOND	set	14963
  2462  0000                     _SLRCONC	set	14947
  2463  0000                     _SLRCONB	set	14931
  2464  0000                     _SLRCONA	set	14915
  2465  0000                     _ODCOND	set	14962
  2466  0000                     _ODCONC	set	14946
  2467  0000                     _ODCONB	set	14930
  2468  0000                     _ODCONA	set	14914
  2469  0000                     _ODCONF	set	14994
  2470  0000                     _ODCONE	set	14978
  2471  0000                     _WPUC	set	14945
  2472  0000                     _WPUA	set	14913
  2473  0000                     _WPUB	set	14929
  2474  0000                     _WPUE	set	14977
  2475  0000                     _WPUF	set	14993
  2476  0000                     _WPUD	set	14961
  2477  0000                     _ANSELA	set	14912
  2478  0000                     _ANSELF	set	14992
  2479  0000                     _ANSELE	set	14976
  2480  0000                     _ANSELB	set	14928
  2481  0000                     _ANSELC	set	14944
  2482  0000                     _ANSELD	set	14960
  2483  0000                     _DMA2SSA	set	15321
  2484  0000                     _DMA1SSA	set	15353
  2485  0000                     _DMA2DSZ	set	15310
  2486  0000                     _DMA2SSZ	set	15319
  2487  0000                     _DMA2DSA	set	15312
  2488  0000                     _DMA1DSZ	set	15342
  2489  0000                     _DMA1SSZ	set	15351
  2490  0000                     _DMA1DSA	set	15344
  2491  0000                     _DMA2CON0bits	set	15324
  2492  0000                     _DMA2CON1bits	set	15325
  2493  0000                     _DMA1CON0bits	set	15356
  2494  0000                     _DMA1CON1bits	set	15357
  2495  0000                     _DMA2CON0	set	15324
  2496  0000                     _DMA2AIRQ	set	15326
  2497  0000                     _DMA2SIRQ	set	15327
  2498  0000                     _DMA2CON1	set	15325
  2499  0000                     _DMA1CON0	set	15356
  2500  0000                     _DMA1AIRQ	set	15358
  2501  0000                     _DMA1SIRQ	set	15359
  2502  0000                     _DMA1CON1	set	15357
  2503  0000                     _CLKRCON	set	15589
  2504  0000                     _CLKRCLK	set	15590
  2505  0000                     _SPI1CON1bits	set	15637
  2506  0000                     _SPI1STATUSbits	set	15639
  2507  0000                     _SPI1INTFbits	set	15642
  2508  0000                     _SPI1CON0bits	set	15636
  2509  0000                     _SPI1RXB	set	15632
  2510  0000                     _SPI1TXB	set	15633
  2511  0000                     _SPI1TCNTL	set	15634
  2512  0000                     _SPI1CON0	set	15636
  2513  0000                     _SPI1CLK	set	15644
  2514  0000                     _SPI1BAUD	set	15641
  2515  0000                     _SPI1CON2	set	15638
  2516  0000                     _SPI1CON1	set	15637
  2517  0000                     _U2RXB	set	15824
  2518  0000                     _U2TXB	set	15826
  2519  0000                     _U2ERRIE	set	15842
  2520  0000                     _U2ERRIR	set	15841
  2521  0000                     _U2UIR	set	15840
  2522  0000                     _U2FIFO	set	15839
  2523  0000                     _U2BRGH	set	15838
  2524  0000                     _U2BRGL	set	15837
  2525  0000                     _U2CON2	set	15836
  2526  0000                     _U2CON1	set	15835
  2527  0000                     _U2CON0	set	15834
  2528  0000                     _U2P3L	set	15832
  2529  0000                     _U2P2L	set	15830
  2530  0000                     _U2P1L	set	15828
  2531  0000                     _U1RXB	set	15848
  2532  0000                     _U1ERRIE	set	15866
  2533  0000                     _U1ERRIR	set	15865
  2534  0000                     _U1UIR	set	15864
  2535  0000                     _U1FIFO	set	15863
  2536  0000                     _U1BRGH	set	15862
  2537  0000                     _U1BRGL	set	15861
  2538  0000                     _U1CON2	set	15860
  2539  0000                     _U1CON1	set	15859
  2540  0000                     _U1CON0	set	15858
  2541  0000                     _U1P3H	set	15857
  2542  0000                     _U1P3L	set	15856
  2543  0000                     _U1P2H	set	15855
  2544  0000                     _U1P2L	set	15854
  2545  0000                     _U1P1H	set	15853
  2546  0000                     _U1P1L	set	15852
  2547  0000                     _FVRCON	set	16065
  2548  0000                     _ADFLTRL	set	16102
  2549  0000                     _ADFLTRH	set	16103
  2550  0000                     _ADCON0bits	set	16120
  2551  0000                     _ADCON0	set	16120
  2552  0000                     _ADCLK	set	16127
  2553  0000                     _ADACT	set	16126
  2554  0000                     _ADREF	set	16125
  2555  0000                     _ADSTAT	set	16124
  2556  0000                     _ADCON3	set	16123
  2557  0000                     _ADCON2	set	16122
  2558  0000                     _ADCON1	set	16121
  2559  0000                     _ADPREH	set	16119
  2560  0000                     _ADPREL	set	16118
  2561  0000                     _ADCAP	set	16117
  2562  0000                     _ADACQH	set	16116
  2563  0000                     _ADACQL	set	16115
  2564  0000                     _ADPCH	set	16113
  2565  0000                     _ADRPT	set	16108
  2566  0000                     _ADACCU	set	16106
  2567  0000                     _ADSTPTH	set	16101
  2568  0000                     _ADSTPTL	set	16100
  2569  0000                     _ADUTHH	set	16097
  2570  0000                     _ADUTHL	set	16096
  2571  0000                     _ADLTHH	set	16095
  2572  0000                     _ADLTHL	set	16094
  2573  0000                     _CCPTMRS1bits	set	16223
  2574  0000                     _PORTDbits	set	16333
  2575  0000                     _PORTFbits	set	16335
  2576  0000                     _LATFbits	set	16319
  2577  0000                     _LATCbits	set	16316
  2578  0000                     _LATDbits	set	16317
  2579  0000                     _PORTBbits	set	16331
  2580  0000                     _T3CONbits	set	16294
  2581  0000                     _T3CON	set	16294
  2582  0000                     _TMR3L	set	16292
  2583  0000                     _TMR3H	set	16293
  2584  0000                     _T3CLK	set	16297
  2585  0000                     _T3GATE	set	16296
  2586  0000                     _T3GCON	set	16295
  2587  0000                     _T2CON	set	16300
  2588  0000                     _T2TMR	set	16298
  2589  0000                     _T2PR	set	16299
  2590  0000                     _T2RST	set	16303
  2591  0000                     _T2HLT	set	16301
  2592  0000                     _T2CLKCON	set	16302
  2593  0000                     _PWM8DCL	set	16224
  2594  0000                     _PWM8DCH	set	16225
  2595  0000                     _PWM8CON	set	16226
  2596  0000                     _LATEbits	set	16318
  2597  0000                     _T5CONbits	set	16282
  2598  0000                     _T5CON	set	16282
  2599  0000                     _TMR5L	set	16280
  2600  0000                     _TMR5H	set	16281
  2601  0000                     _T5CLK	set	16285
  2602  0000                     _T5GATE	set	16284
  2603  0000                     _T5GCON	set	16283
  2604  0000                     _T6CON	set	16276
  2605  0000                     _T6TMR	set	16274
  2606  0000                     _T6PR	set	16275
  2607  0000                     _T6RST	set	16279
  2608  0000                     _T6HLT	set	16277
  2609  0000                     _T6CLKCON	set	16278
  2610  0000                     _TRISD	set	16325
  2611  0000                     _TRISC	set	16324
  2612  0000                     _TRISB	set	16323
  2613  0000                     _TRISA	set	16322
  2614  0000                     _TRISF	set	16327
  2615  0000                     _TRISE	set	16326
  2616  0000                     _LATC	set	16316
  2617  0000                     _LATB	set	16315
  2618  0000                     _LATF	set	16319
  2619  0000                     _LATA	set	16314
  2620  0000                     _LATD	set	16317
  2621  0000                     _LATE	set	16318
  2622  0000                     _IVTLOCKbits	set	16340
  2623  0000                     _IVTLOCK	set	16340
  2624  0000                     _INTCON0bits	set	16338
  2625  0000                     _GIE	set	130711
  2626  00FA3F                     STR_87:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FA3F  20                 	db	32
  2630  00FA40  25                 	db	37
  2631  00FA41  63                 	db	99	;'c'
  2632  00FA42  20                 	db	32
  2633  00FA43  2C                 	db	44
  2634  00FA44  25                 	db	37
  2635  00FA45  6C                 	db	108	;'l'
  2636  00FA46  75                 	db	117	;'u'
  2637  00FA47  2C                 	db	44
  2638  00FA48  25                 	db	37
  2639  00FA49  34                 	db	52	;'4'
  2640  00FA4A  2E                 	db	46
  2641  00FA4B  34                 	db	52	;'4'
  2642  00FA4C  66                 	db	102	;'f'
  2643  00FA4D  2C                 	db	44
  2644  00FA4E  25                 	db	37
  2645  00FA4F  34                 	db	52	;'4'
  2646  00FA50  2E                 	db	46
  2647  00FA51  34                 	db	52	;'4'
  2648  00FA52  66                 	db	102	;'f'
  2649  00FA53  2C                 	db	44
  2650  00FA54  25                 	db	37
  2651  00FA55  34                 	db	52	;'4'
  2652  00FA56  2E                 	db	46
  2653  00FA57  34                 	db	52	;'4'
  2654  00FA58  66                 	db	102	;'f'
  2655  00FA59  2C                 	db	44
  2656  00FA5A  25                 	db	37
  2657  00FA5B  34                 	db	52	;'4'
  2658  00FA5C  2E                 	db	46
  2659  00FA5D  34                 	db	52	;'4'
  2660  00FA5E  66                 	db	102	;'f'
  2661  00FA5F  2C                 	db	44
  2662  00FA60  25                 	db	37
  2663  00FA61  34                 	db	52	;'4'
  2664  00FA62  2E                 	db	46
  2665  00FA63  34                 	db	52	;'4'
  2666  00FA64  66                 	db	102	;'f'
  2667  00FA65  2C                 	db	44
  2668  00FA66  25                 	db	37
  2669  00FA67  34                 	db	52	;'4'
  2670  00FA68  2E                 	db	46
  2671  00FA69  33                 	db	51	;'3'
  2672  00FA6A  66                 	db	102	;'f'
  2673  00FA6B  2C                 	db	44
  2674  00FA6C  25                 	db	37
  2675  00FA6D  34                 	db	52	;'4'
  2676  00FA6E  2E                 	db	46
  2677  00FA6F  33                 	db	51	;'3'
  2678  00FA70  66                 	db	102	;'f'
  2679  00FA71  2C                 	db	44
  2680  00FA72  25                 	db	37
  2681  00FA73  34                 	db	52	;'4'
  2682  00FA74  2E                 	db	46
  2683  00FA75  33                 	db	51	;'3'
  2684  00FA76  66                 	db	102	;'f'
  2685  00FA77  2C                 	db	44
  2686  00FA78  25                 	db	37
  2687  00FA79  34                 	db	52	;'4'
  2688  00FA7A  2E                 	db	46
  2689  00FA7B  33                 	db	51	;'3'
  2690  00FA7C  66                 	db	102	;'f'
  2691  00FA7D  2C                 	db	44
  2692  00FA7E  25                 	db	37
  2693  00FA7F  34                 	db	52	;'4'
  2694  00FA80  2E                 	db	46
  2695  00FA81  33                 	db	51	;'3'
  2696  00FA82  66                 	db	102	;'f'
  2697  00FA83  2C                 	db	44
  2698  00FA84  25                 	db	37
  2699  00FA85  34                 	db	52	;'4'
  2700  00FA86  2E                 	db	46
  2701  00FA87  33                 	db	51	;'3'
  2702  00FA88  66                 	db	102	;'f'
  2703  00FA89  2C                 	db	44
  2704  00FA8A  25                 	db	37
  2705  00FA8B  64                 	db	100	;'d'
  2706  00FA8C  2C                 	db	44
  2707  00FA8D  25                 	db	37
  2708  00FA8E  64                 	db	100	;'d'
  2709  00FA8F  2C                 	db	44
  2710  00FA90  25                 	db	37
  2711  00FA91  32                 	db	50	;'2'
  2712  00FA92  2E                 	db	46
  2713  00FA93  36                 	db	54	;'6'
  2714  00FA94  66                 	db	102	;'f'
  2715  00FA95  2C                 	db	44
  2716  00FA96  25                 	db	37
  2717  00FA97  34                 	db	52	;'4'
  2718  00FA98  2E                 	db	46
  2719  00FA99  33                 	db	51	;'3'
  2720  00FA9A  66                 	db	102	;'f'
  2721  00FA9B  2C                 	db	44
  2722  00FA9C  25                 	db	37
  2723  00FA9D  64                 	db	100	;'d'
  2724  00FA9E  2C                 	db	44
  2725  00FA9F  25                 	db	37
  2726  00FAA0  64                 	db	100	;'d'
  2727  00FAA1  2C                 	db	44
  2728  00FAA2  25                 	db	37
  2729  00FAA3  6C                 	db	108	;'l'
  2730  00FAA4  75                 	db	117	;'u'
  2731  00FAA5  2C                 	db	44
  2732  00FAA6  25                 	db	37
  2733  00FAA7  6C                 	db	108	;'l'
  2734  00FAA8  75                 	db	117	;'u'
  2735  00FAA9  2C                 	db	44
  2736  00FAAA  25                 	db	37
  2737  00FAAB  34                 	db	52	;'4'
  2738  00FAAC  2E                 	db	46
  2739  00FAAD  33                 	db	51	;'3'
  2740  00FAAE  66                 	db	102	;'f'
  2741  00FAAF  2C                 	db	44
  2742  00FAB0  25                 	db	37
  2743  00FAB1  34                 	db	52	;'4'
  2744  00FAB2  2E                 	db	46
  2745  00FAB3  33                 	db	51	;'3'
  2746  00FAB4  66                 	db	102	;'f'
  2747  00FAB5  2C                 	db	44
  2748  00FAB6  25                 	db	37
  2749  00FAB7  34                 	db	52	;'4'
  2750  00FAB8  2E                 	db	46
  2751  00FAB9  33                 	db	51	;'3'
  2752  00FABA  66                 	db	102	;'f'
  2753  00FABB  0D                 	db	13
  2754  00FABC  0A                 	db	10
  2755  00FABD  00                 	db	0
  2756  00FABE                     STR_125:
  2757                           
  2758                           ; BSR set to: 57
  2759  00FABE  4A                 	db	74	;'J'
  2760  00FABF  61                 	db	97	;'a'
  2761  00FAC0  6E                 	db	110	;'n'
  2762  00FAC1  46                 	db	70	;'F'
  2763  00FAC2  65                 	db	101	;'e'
  2764  00FAC3  62                 	db	98	;'b'
  2765  00FAC4  4D                 	db	77	;'M'
  2766  00FAC5  61                 	db	97	;'a'
  2767  00FAC6  72                 	db	114	;'r'
  2768  00FAC7  41                 	db	65	;'A'
  2769  00FAC8  70                 	db	112	;'p'
  2770  00FAC9  72                 	db	114	;'r'
  2771  00FACA  4D                 	db	77	;'M'
  2772  00FACB  61                 	db	97	;'a'
  2773  00FACC  79                 	db	121	;'y'
  2774  00FACD  4A                 	db	74	;'J'
  2775  00FACE  75                 	db	117	;'u'
  2776  00FACF  6E                 	db	110	;'n'
  2777  00FAD0  4A                 	db	74	;'J'
  2778  00FAD1  75                 	db	117	;'u'
  2779  00FAD2  6C                 	db	108	;'l'
  2780  00FAD3  41                 	db	65	;'A'
  2781  00FAD4  75                 	db	117	;'u'
  2782  00FAD5  67                 	db	103	;'g'
  2783  00FAD6  53                 	db	83	;'S'
  2784  00FAD7  65                 	db	101	;'e'
  2785  00FAD8  70                 	db	112	;'p'
  2786  00FAD9  4F                 	db	79	;'O'
  2787  00FADA  63                 	db	99	;'c'
  2788  00FADB  74                 	db	116	;'t'
  2789  00FADC  4E                 	db	78	;'N'
  2790  00FADD  6F                 	db	111	;'o'
  2791  00FADE  76                 	db	118	;'v'
  2792  00FADF  44                 	db	68	;'D'
  2793  00FAE0  65                 	db	101	;'e'
  2794  00FAE1  63                 	db	99	;'c'
  2795  00FAE2  00                 	db	0
  2796  00FAE3                     STR_42:
  2797                           
  2798                           ; BSR set to: 57
  2799  00FAE3  53                 	db	83	;'S'
  2800  00FAE4  25                 	db	37
  2801  00FAE5  63                 	db	99	;'c'
  2802  00FAE6  43                 	db	67	;'C'
  2803  00FAE7  20                 	db	32
  2804  00FAE8  25                 	db	37
  2805  00FAE9  64                 	db	100	;'d'
  2806  00FAEA  20                 	db	32
  2807  00FAEB  52                 	db	82	;'R'
  2808  00FAEC  55                 	db	85	;'U'
  2809  00FAED  4E                 	db	78	;'N'
  2810  00FAEE  20                 	db	32
  2811  00FAEF  25                 	db	37
  2812  00FAF0  64                 	db	100	;'d'
  2813  00FAF1  20                 	db	32
  2814  00FAF2  56                 	db	86	;'V'
  2815  00FAF3  25                 	db	37
  2816  00FAF4  32                 	db	50	;'2'
  2817  00FAF5  2E                 	db	46
  2818  00FAF6  32                 	db	50	;'2'
  2819  00FAF7  66                 	db	102	;'f'
  2820  00FAF8  20                 	db	32
  2821  00FAF9  20                 	db	32
  2822  00FAFA  20                 	db	32
  2823  00FAFB  20                 	db	32
  2824  00FAFC  20                 	db	32
  2825  00FAFD  20                 	db	32
  2826  00FAFE  20                 	db	32
  2827  00FAFF  00                 	db	0
  2828  00FB00                     STR_20:
  2829                           
  2830                           ; BSR set to: 57
  2831  00FB00  52                 	db	82	;'R'
  2832  00FB01  31                 	db	49	;'1'
  2833  00FB02  20                 	db	32
  2834  00FB03  25                 	db	37
  2835  00FB04  32                 	db	50	;'2'
  2836  00FB05  2E                 	db	46
  2837  00FB06  33                 	db	51	;'3'
  2838  00FB07  66                 	db	102	;'f'
  2839  00FB08  20                 	db	32
  2840  00FB09  25                 	db	37
  2841  00FB0A  33                 	db	51	;'3'
  2842  00FB0B  2E                 	db	46
  2843  00FB0C  34                 	db	52	;'4'
  2844  00FB0D  66                 	db	102	;'f'
  2845  00FB0E  20                 	db	32
  2846  00FB0F  20                 	db	32
  2847  00FB10  20                 	db	32
  2848  00FB11  20                 	db	32
  2849  00FB12  20                 	db	32
  2850  00FB13  20                 	db	32
  2851  00FB14  20                 	db	32
  2852  00FB15  20                 	db	32
  2853  00FB16  20                 	db	32
  2854  00FB17  20                 	db	32
  2855  00FB18  20                 	db	32
  2856  00FB19  00                 	db	0
  2857  00FB1A                     STR_21:
  2858                           
  2859                           ; BSR set to: 57
  2860  00FB1A  52                 	db	82	;'R'
  2861  00FB1B  32                 	db	50	;'2'
  2862  00FB1C  20                 	db	32
  2863  00FB1D  25                 	db	37
  2864  00FB1E  32                 	db	50	;'2'
  2865  00FB1F  2E                 	db	46
  2866  00FB20  33                 	db	51	;'3'
  2867  00FB21  66                 	db	102	;'f'
  2868  00FB22  20                 	db	32
  2869  00FB23  25                 	db	37
  2870  00FB24  33                 	db	51	;'3'
  2871  00FB25  2E                 	db	46
  2872  00FB26  34                 	db	52	;'4'
  2873  00FB27  66                 	db	102	;'f'
  2874  00FB28  20                 	db	32
  2875  00FB29  20                 	db	32
  2876  00FB2A  20                 	db	32
  2877  00FB2B  20                 	db	32
  2878  00FB2C  20                 	db	32
  2879  00FB2D  20                 	db	32
  2880  00FB2E  20                 	db	32
  2881  00FB2F  20                 	db	32
  2882  00FB30  20                 	db	32
  2883  00FB31  20                 	db	32
  2884  00FB32  20                 	db	32
  2885  00FB33  00                 	db	0
  2886  00FB34                     STR_11:
  2887                           
  2888                           ; BSR set to: 57
  2889  00FB34  53                 	db	83	;'S'
  2890  00FB35  20                 	db	32
  2891  00FB36  53                 	db	83	;'S'
  2892  00FB37  25                 	db	37
  2893  00FB38  63                 	db	99	;'c'
  2894  00FB39  43                 	db	67	;'C'
  2895  00FB3A  20                 	db	32
  2896  00FB3B  25                 	db	37
  2897  00FB3C  64                 	db	100	;'d'
  2898  00FB3D  20                 	db	32
  2899  00FB3E  25                 	db	37
  2900  00FB3F  32                 	db	50	;'2'
  2901  00FB40  2E                 	db	46
  2902  00FB41  34                 	db	52	;'4'
  2903  00FB42  66                 	db	102	;'f'
  2904  00FB43  20                 	db	32
  2905  00FB44  20                 	db	32
  2906  00FB45  20                 	db	32
  2907  00FB46  20                 	db	32
  2908  00FB47  20                 	db	32
  2909  00FB48  20                 	db	32
  2910  00FB49  20                 	db	32
  2911  00FB4A  20                 	db	32
  2912  00FB4B  20                 	db	32
  2913  00FB4C  20                 	db	32
  2914  00FB4D  00                 	db	0
  2915  00FB4E                     
  2916                           ; BSR set to: 57
  2917  00FB4E  20                 	db	32
  2918  00FB4F  4D                 	db	77	;'M'
  2919  00FB50  65                 	db	101	;'e'
  2920  00FB51  73                 	db	115	;'s'
  2921  00FB52  67                 	db	103	;'g'
  2922  00FB53  20                 	db	32
  2923  00FB54  25                 	db	37
  2924  00FB55  64                 	db	100	;'d'
  2925  00FB56  20                 	db	32
  2926  00FB57  53                 	db	83	;'S'
  2927  00FB58  74                 	db	116	;'t'
  2928  00FB59  61                 	db	97	;'a'
  2929  00FB5A  63                 	db	99	;'c'
  2930  00FB5B  6B                 	db	107	;'k'
  2931  00FB5C  20                 	db	32
  2932  00FB5D  25                 	db	37
  2933  00FB5E  64                 	db	100	;'d'
  2934  00FB5F  20                 	db	32
  2935  00FB60  20                 	db	32
  2936  00FB61  20                 	db	32
  2937  00FB62  20                 	db	32
  2938  00FB63  20                 	db	32
  2939  00FB64  20                 	db	32
  2940  00FB65  00                 	db	0
  2941  00FB66                     STR_43:
  2942                           
  2943                           ; BSR set to: 57
  2944  00FB66  45                 	db	69	;'E'
  2945  00FB67  53                 	db	83	;'S'
  2946  00FB68  52                 	db	82	;'R'
  2947  00FB69  20                 	db	32
  2948  00FB6A  20                 	db	32
  2949  00FB6B  25                 	db	37
  2950  00FB6C  32                 	db	50	;'2'
  2951  00FB6D  2E                 	db	46
  2952  00FB6E  36                 	db	54	;'6'
  2953  00FB6F  66                 	db	102	;'f'
  2954  00FB70  20                 	db	32
  2955  00FB71  20                 	db	32
  2956  00FB72  20                 	db	32
  2957  00FB73  20                 	db	32
  2958  00FB74  20                 	db	32
  2959  00FB75  20                 	db	32
  2960  00FB76  20                 	db	32
  2961  00FB77  20                 	db	32
  2962  00FB78  20                 	db	32
  2963  00FB79  20                 	db	32
  2964  00FB7A  20                 	db	32
  2965  00FB7B  20                 	db	32
  2966  00FB7C  00                 	db	0
  2967  00FB7D                     STR_40:
  2968                           
  2969                           ; BSR set to: 57
  2970  00FB7D  42                 	db	66	;'B'
  2971  00FB7E  41                 	db	65	;'A'
  2972  00FB7F  54                 	db	84	;'T'
  2973  00FB80  54                 	db	84	;'T'
  2974  00FB81  20                 	db	32
  2975  00FB82  50                 	db	80	;'P'
  2976  00FB83  57                 	db	87	;'W'
  2977  00FB84  52                 	db	82	;'R'
  2978  00FB85  20                 	db	32
  2979  00FB86  25                 	db	37
  2980  00FB87  33                 	db	51	;'3'
  2981  00FB88  2E                 	db	46
  2982  00FB89  32                 	db	50	;'2'
  2983  00FB8A  66                 	db	102	;'f'
  2984  00FB8B  20                 	db	32
  2985  00FB8C  20                 	db	32
  2986  00FB8D  20                 	db	32
  2987  00FB8E  20                 	db	32
  2988  00FB8F  20                 	db	32
  2989  00FB90  20                 	db	32
  2990  00FB91  20                 	db	32
  2991  00FB92  20                 	db	32
  2992  00FB93  00                 	db	0
  2993  00FB94                     STR_44:
  2994                           
  2995                           ; BSR set to: 57
  2996  00FB94  52                 	db	82	;'R'
  2997  00FB95  31                 	db	49	;'1'
  2998  00FB96  20                 	db	32
  2999  00FB97  25                 	db	37
  3000  00FB98  32                 	db	50	;'2'
  3001  00FB99  2E                 	db	46
  3002  00FB9A  33                 	db	51	;'3'
  3003  00FB9B  66                 	db	102	;'f'
  3004  00FB9C  20                 	db	32
  3005  00FB9D  25                 	db	37
  3006  00FB9E  33                 	db	51	;'3'
  3007  00FB9F  2E                 	db	46
  3008  00FBA0  34                 	db	52	;'4'
  3009  00FBA1  66                 	db	102	;'f'
  3010  00FBA2  20                 	db	32
  3011  00FBA3  20                 	db	32
  3012  00FBA4  20                 	db	32
  3013  00FBA5  20                 	db	32
  3014  00FBA6  20                 	db	32
  3015  00FBA7  20                 	db	32
  3016  00FBA8  20                 	db	32
  3017  00FBA9  20                 	db	32
  3018  00FBAA  00                 	db	0
  3019  00FBAB                     STR_45:
  3020                           
  3021                           ; BSR set to: 57
  3022  00FBAB  52                 	db	82	;'R'
  3023  00FBAC  32                 	db	50	;'2'
  3024  00FBAD  20                 	db	32
  3025  00FBAE  25                 	db	37
  3026  00FBAF  32                 	db	50	;'2'
  3027  00FBB0  2E                 	db	46
  3028  00FBB1  33                 	db	51	;'3'
  3029  00FBB2  66                 	db	102	;'f'
  3030  00FBB3  20                 	db	32
  3031  00FBB4  25                 	db	37
  3032  00FBB5  33                 	db	51	;'3'
  3033  00FBB6  2E                 	db	46
  3034  00FBB7  34                 	db	52	;'4'
  3035  00FBB8  66                 	db	102	;'f'
  3036  00FBB9  20                 	db	32
  3037  00FBBA  20                 	db	32
  3038  00FBBB  20                 	db	32
  3039  00FBBC  20                 	db	32
  3040  00FBBD  20                 	db	32
  3041  00FBBE  20                 	db	32
  3042  00FBBF  20                 	db	32
  3043  00FBC0  20                 	db	32
  3044  00FBC1  00                 	db	0
  3045  00FBC2                     STR_41:
  3046                           
  3047                           ; BSR set to: 57
  3048  00FBC2  42                 	db	66	;'B'
  3049  00FBC3  41                 	db	65	;'A'
  3050  00FBC4  48                 	db	72	;'H'
  3051  00FBC5  20                 	db	32
  3052  00FBC6  25                 	db	37
  3053  00FBC7  33                 	db	51	;'3'
  3054  00FBC8  2E                 	db	46
  3055  00FBC9  32                 	db	50	;'2'
  3056  00FBCA  66                 	db	102	;'f'
  3057  00FBCB  20                 	db	32
  3058  00FBCC  50                 	db	80	;'P'
  3059  00FBCD  25                 	db	37
  3060  00FBCE  33                 	db	51	;'3'
  3061  00FBCF  2E                 	db	46
  3062  00FBD0  32                 	db	50	;'2'
  3063  00FBD1  66                 	db	102	;'f'
  3064  00FBD2  20                 	db	32
  3065  00FBD3  20                 	db	32
  3066  00FBD4  20                 	db	32
  3067  00FBD5  20                 	db	32
  3068  00FBD6  20                 	db	32
  3069  00FBD7  20                 	db	32
  3070  00FBD8  00                 	db	0
  3071  00FBD9                     STR_124:
  3072                           
  3073                           ; BSR set to: 57
  3074  00FBD9  53                 	db	83	;'S'
  3075  00FBDA  75                 	db	117	;'u'
  3076  00FBDB  6E                 	db	110	;'n'
  3077  00FBDC  4D                 	db	77	;'M'
  3078  00FBDD  6F                 	db	111	;'o'
  3079  00FBDE  6E                 	db	110	;'n'
  3080  00FBDF  54                 	db	84	;'T'
  3081  00FBE0  75                 	db	117	;'u'
  3082  00FBE1  65                 	db	101	;'e'
  3083  00FBE2  57                 	db	87	;'W'
  3084  00FBE3  65                 	db	101	;'e'
  3085  00FBE4  64                 	db	100	;'d'
  3086  00FBE5  54                 	db	84	;'T'
  3087  00FBE6  68                 	db	104	;'h'
  3088  00FBE7  75                 	db	117	;'u'
  3089  00FBE8  46                 	db	70	;'F'
  3090  00FBE9  72                 	db	114	;'r'
  3091  00FBEA  69                 	db	105	;'i'
  3092  00FBEB  53                 	db	83	;'S'
  3093  00FBEC  61                 	db	97	;'a'
  3094  00FBED  74                 	db	116	;'t'
  3095  00FBEE  00                 	db	0
  3096  00FBEF                     STR_14:
  3097                           
  3098                           ; BSR set to: 57
  3099  00FBEF  20                 	db	32
  3100  00FBF0  20                 	db	32
  3101  00FBF1  20                 	db	32
  3102  00FBF2  20                 	db	32
  3103  00FBF3  20                 	db	32
  3104  00FBF4  20                 	db	32
  3105  00FBF5  20                 	db	32
  3106  00FBF6  20                 	db	32
  3107  00FBF7  20                 	db	32
  3108  00FBF8  20                 	db	32
  3109  00FBF9  20                 	db	32
  3110  00FBFA  20                 	db	32
  3111  00FBFB  20                 	db	32
  3112  00FBFC  20                 	db	32
  3113  00FBFD  20                 	db	32
  3114  00FBFE  20                 	db	32
  3115  00FBFF  20                 	db	32
  3116  00FC00  20                 	db	32
  3117  00FC01  20                 	db	32
  3118  00FC02  20                 	db	32
  3119  00FC03  20                 	db	32
  3120  00FC04  00                 	db	0
  3121  00FC05                     STR_19:
  3122                           
  3123                           ; BSR set to: 57
  3124  00FC05  45                 	db	69	;'E'
  3125  00FC06  53                 	db	83	;'S'
  3126  00FC07  52                 	db	82	;'R'
  3127  00FC08  20                 	db	32
  3128  00FC09  20                 	db	32
  3129  00FC0A  25                 	db	37
  3130  00FC0B  32                 	db	50	;'2'
  3131  00FC0C  2E                 	db	46
  3132  00FC0D  36                 	db	54	;'6'
  3133  00FC0E  66                 	db	102	;'f'
  3134  00FC0F  20                 	db	32
  3135  00FC10  20                 	db	32
  3136  00FC11  20                 	db	32
  3137  00FC12  20                 	db	32
  3138  00FC13  20                 	db	32
  3139  00FC14  20                 	db	32
  3140  00FC15  20                 	db	32
  3141  00FC16  20                 	db	32
  3142  00FC17  20                 	db	32
  3143  00FC18  20                 	db	32
  3144  00FC19  20                 	db	32
  3145  00FC1A  00                 	db	0
  3146  00FC1B                     STR_12:
  3147                           
  3148                           ; BSR set to: 57
  3149  00FC1B  53                 	db	83	;'S'
  3150  00FC1C  74                 	db	116	;'t'
  3151  00FC1D  61                 	db	97	;'a'
  3152  00FC1E  74                 	db	116	;'t'
  3153  00FC1F  69                 	db	105	;'i'
  3154  00FC20  63                 	db	99	;'c'
  3155  00FC21  20                 	db	32
  3156  00FC22  53                 	db	83	;'S'
  3157  00FC23  4F                 	db	79	;'O'
  3158  00FC24  43                 	db	67	;'C'
  3159  00FC25  20                 	db	32
  3160  00FC26  25                 	db	37
  3161  00FC27  64                 	db	100	;'d'
  3162  00FC28  20                 	db	32
  3163  00FC29  20                 	db	32
  3164  00FC2A  20                 	db	32
  3165  00FC2B  20                 	db	32
  3166  00FC2C  20                 	db	32
  3167  00FC2D  20                 	db	32
  3168  00FC2E  20                 	db	32
  3169  00FC2F  20                 	db	32
  3170  00FC30  00                 	db	0
  3171  00FC31                     STR_37:
  3172                           
  3173                           ; BSR set to: 57
  3174  00FC31  42                 	db	66	;'B'
  3175  00FC32  41                 	db	65	;'A'
  3176  00FC33  54                 	db	84	;'T'
  3177  00FC34  20                 	db	32
  3178  00FC35  49                 	db	73	;'I'
  3179  00FC36  57                 	db	87	;'W'
  3180  00FC37  48                 	db	72	;'H'
  3181  00FC38  20                 	db	32
  3182  00FC39  25                 	db	37
  3183  00FC3A  34                 	db	52	;'4'
  3184  00FC3B  2E                 	db	46
  3185  00FC3C  31                 	db	49	;'1'
  3186  00FC3D  66                 	db	102	;'f'
  3187  00FC3E  20                 	db	32
  3188  00FC3F  20                 	db	32
  3189  00FC40  20                 	db	32
  3190  00FC41  20                 	db	32
  3191  00FC42  20                 	db	32
  3192  00FC43  20                 	db	32
  3193  00FC44  20                 	db	32
  3194  00FC45  20                 	db	32
  3195  00FC46  00                 	db	0
  3196  00FC47                     STR_38:
  3197                           
  3198                           ; BSR set to: 57
  3199  00FC47  42                 	db	66	;'B'
  3200  00FC48  41                 	db	65	;'A'
  3201  00FC49  54                 	db	84	;'T'
  3202  00FC4A  20                 	db	32
  3203  00FC4B  4F                 	db	79	;'O'
  3204  00FC4C  57                 	db	87	;'W'
  3205  00FC4D  48                 	db	72	;'H'
  3206  00FC4E  20                 	db	32
  3207  00FC4F  25                 	db	37
  3208  00FC50  34                 	db	52	;'4'
  3209  00FC51  2E                 	db	46
  3210  00FC52  31                 	db	49	;'1'
  3211  00FC53  66                 	db	102	;'f'
  3212  00FC54  20                 	db	32
  3213  00FC55  20                 	db	32
  3214  00FC56  20                 	db	32
  3215  00FC57  20                 	db	32
  3216  00FC58  20                 	db	32
  3217  00FC59  20                 	db	32
  3218  00FC5A  20                 	db	32
  3219  00FC5B  20                 	db	32
  3220  00FC5C  00                 	db	0
  3221  00FC5D                     STR_39:
  3222                           
  3223                           ; BSR set to: 57
  3224  00FC5D  42                 	db	66	;'B'
  3225  00FC5E  41                 	db	65	;'A'
  3226  00FC5F  54                 	db	84	;'T'
  3227  00FC60  20                 	db	32
  3228  00FC61  54                 	db	84	;'T'
  3229  00FC62  57                 	db	87	;'W'
  3230  00FC63  48                 	db	72	;'H'
  3231  00FC64  20                 	db	32
  3232  00FC65  25                 	db	37
  3233  00FC66  34                 	db	52	;'4'
  3234  00FC67  2E                 	db	46
  3235  00FC68  31                 	db	49	;'1'
  3236  00FC69  66                 	db	102	;'f'
  3237  00FC6A  20                 	db	32
  3238  00FC6B  20                 	db	32
  3239  00FC6C  20                 	db	32
  3240  00FC6D  20                 	db	32
  3241  00FC6E  20                 	db	32
  3242  00FC6F  20                 	db	32
  3243  00FC70  20                 	db	32
  3244  00FC71  20                 	db	32
  3245  00FC72  00                 	db	0
  3246  00FC73                     STR_33:
  3247                           
  3248                           ; BSR set to: 57
  3249  00FC73  49                 	db	73	;'I'
  3250  00FC74  4E                 	db	78	;'N'
  3251  00FC75  56                 	db	86	;'V'
  3252  00FC76  20                 	db	32
  3253  00FC77  20                 	db	32
  3254  00FC78  57                 	db	87	;'W'
  3255  00FC79  48                 	db	72	;'H'
  3256  00FC7A  20                 	db	32
  3257  00FC7B  25                 	db	37
  3258  00FC7C  33                 	db	51	;'3'
  3259  00FC7D  2E                 	db	46
  3260  00FC7E  32                 	db	50	;'2'
  3261  00FC7F  66                 	db	102	;'f'
  3262  00FC80  20                 	db	32
  3263  00FC81  20                 	db	32
  3264  00FC82  20                 	db	32
  3265  00FC83  20                 	db	32
  3266  00FC84  20                 	db	32
  3267  00FC85  20                 	db	32
  3268  00FC86  20                 	db	32
  3269  00FC87  20                 	db	32
  3270  00FC88  00                 	db	0
  3271  00FC89                     STR_32:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FC89  4C                 	db	76	;'L'
  3275  00FC8A  4F                 	db	79	;'O'
  3276  00FC8B  41                 	db	65	;'A'
  3277  00FC8C  44                 	db	68	;'D'
  3278  00FC8D  20                 	db	32
  3279  00FC8E  57                 	db	87	;'W'
  3280  00FC8F  48                 	db	72	;'H'
  3281  00FC90  20                 	db	32
  3282  00FC91  25                 	db	37
  3283  00FC92  33                 	db	51	;'3'
  3284  00FC93  2E                 	db	46
  3285  00FC94  32                 	db	50	;'2'
  3286  00FC95  66                 	db	102	;'f'
  3287  00FC96  20                 	db	32
  3288  00FC97  20                 	db	32
  3289  00FC98  20                 	db	32
  3290  00FC99  20                 	db	32
  3291  00FC9A  20                 	db	32
  3292  00FC9B  20                 	db	32
  3293  00FC9C  20                 	db	32
  3294  00FC9D  20                 	db	32
  3295  00FC9E  00                 	db	0
  3296  00FC9F                     STR_31:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FC9F  50                 	db	80	;'P'
  3300  00FCA0  56                 	db	86	;'V'
  3301  00FCA1  20                 	db	32
  3302  00FCA2  25                 	db	37
  3303  00FCA3  63                 	db	99	;'c'
  3304  00FCA4  20                 	db	32
  3305  00FCA5  57                 	db	87	;'W'
  3306  00FCA6  48                 	db	72	;'H'
  3307  00FCA7  20                 	db	32
  3308  00FCA8  25                 	db	37
  3309  00FCA9  33                 	db	51	;'3'
  3310  00FCAA  2E                 	db	46
  3311  00FCAB  32                 	db	50	;'2'
  3312  00FCAC  66                 	db	102	;'f'
  3313  00FCAD  20                 	db	32
  3314  00FCAE  20                 	db	32
  3315  00FCAF  20                 	db	32
  3316  00FCB0  20                 	db	32
  3317  00FCB1  20                 	db	32
  3318  00FCB2  20                 	db	32
  3319  00FCB3  20                 	db	32
  3320  00FCB4  00                 	db	0
  3321  00FCB5                     STR_30:
  3322                           
  3323                           ; BSR set to: 57
  3324  00FCB5  49                 	db	73	;'I'
  3325  00FCB6  4E                 	db	78	;'N'
  3326  00FCB7  56                 	db	86	;'V'
  3327  00FCB8  20                 	db	32
  3328  00FCB9  20                 	db	32
  3329  00FCBA  50                 	db	80	;'P'
  3330  00FCBB  57                 	db	87	;'W'
  3331  00FCBC  52                 	db	82	;'R'
  3332  00FCBD  20                 	db	32
  3333  00FCBE  25                 	db	37
  3334  00FCBF  33                 	db	51	;'3'
  3335  00FCC0  2E                 	db	46
  3336  00FCC1  32                 	db	50	;'2'
  3337  00FCC2  66                 	db	102	;'f'
  3338  00FCC3  20                 	db	32
  3339  00FCC4  20                 	db	32
  3340  00FCC5  20                 	db	32
  3341  00FCC6  20                 	db	32
  3342  00FCC7  20                 	db	32
  3343  00FCC8  20                 	db	32
  3344  00FCC9  20                 	db	32
  3345  00FCCA  00                 	db	0
  3346  00FCCB                     STR_29:
  3347                           
  3348                           ; BSR set to: 57
  3349  00FCCB  4C                 	db	76	;'L'
  3350  00FCCC  4F                 	db	79	;'O'
  3351  00FCCD  41                 	db	65	;'A'
  3352  00FCCE  44                 	db	68	;'D'
  3353  00FCCF  20                 	db	32
  3354  00FCD0  50                 	db	80	;'P'
  3355  00FCD1  57                 	db	87	;'W'
  3356  00FCD2  52                 	db	82	;'R'
  3357  00FCD3  20                 	db	32
  3358  00FCD4  25                 	db	37
  3359  00FCD5  33                 	db	51	;'3'
  3360  00FCD6  2E                 	db	46
  3361  00FCD7  32                 	db	50	;'2'
  3362  00FCD8  66                 	db	102	;'f'
  3363  00FCD9  20                 	db	32
  3364  00FCDA  20                 	db	32
  3365  00FCDB  20                 	db	32
  3366  00FCDC  20                 	db	32
  3367  00FCDD  20                 	db	32
  3368  00FCDE  20                 	db	32
  3369  00FCDF  20                 	db	32
  3370  00FCE0  00                 	db	0
  3371  00FCE1                     STR_28:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FCE1  50                 	db	80	;'P'
  3375  00FCE2  56                 	db	86	;'V'
  3376  00FCE3  20                 	db	32
  3377  00FCE4  25                 	db	37
  3378  00FCE5  63                 	db	99	;'c'
  3379  00FCE6  20                 	db	32
  3380  00FCE7  50                 	db	80	;'P'
  3381  00FCE8  57                 	db	87	;'W'
  3382  00FCE9  52                 	db	82	;'R'
  3383  00FCEA  20                 	db	32
  3384  00FCEB  25                 	db	37
  3385  00FCEC  33                 	db	51	;'3'
  3386  00FCED  2E                 	db	46
  3387  00FCEE  32                 	db	50	;'2'
  3388  00FCEF  66                 	db	102	;'f'
  3389  00FCF0  20                 	db	32
  3390  00FCF1  20                 	db	32
  3391  00FCF2  20                 	db	32
  3392  00FCF3  20                 	db	32
  3393  00FCF4  20                 	db	32
  3394  00FCF5  20                 	db	32
  3395  00FCF6  00                 	db	0
  3396  00FCF7                     STR_13:
  3397                           
  3398                           ; BSR set to: 57
  3399  00FCF7  42                 	db	66	;'B'
  3400  00FCF8  61                 	db	97	;'a'
  3401  00FCF9  74                 	db	116	;'t'
  3402  00FCFA  74                 	db	116	;'t'
  3403  00FCFB  65                 	db	101	;'e'
  3404  00FCFC  72                 	db	114	;'r'
  3405  00FCFD  79                 	db	121	;'y'
  3406  00FCFE  20                 	db	32
  3407  00FCFF  41                 	db	65	;'A'
  3408  00FD00  68                 	db	104	;'h'
  3409  00FD01  20                 	db	32
  3410  00FD02  25                 	db	37
  3411  00FD03  33                 	db	51	;'3'
  3412  00FD04  2E                 	db	46
  3413  00FD05  32                 	db	50	;'2'
  3414  00FD06  66                 	db	102	;'f'
  3415  00FD07  20                 	db	32
  3416  00FD08  20                 	db	32
  3417  00FD09  20                 	db	32
  3418  00FD0A  20                 	db	32
  3419  00FD0B  20                 	db	32
  3420  00FD0C  00                 	db	0
  3421  00FD0D                     STR_35:
  3422                           
  3423                           ; BSR set to: 57
  3424  00FD0D  42                 	db	66	;'B'
  3425  00FD0E  56                 	db	86	;'V'
  3426  00FD0F  20                 	db	32
  3427  00FD10  25                 	db	37
  3428  00FD11  32                 	db	50	;'2'
  3429  00FD12  2E                 	db	46
  3430  00FD13  32                 	db	50	;'2'
  3431  00FD14  66                 	db	102	;'f'
  3432  00FD15  20                 	db	32
  3433  00FD16  42                 	db	66	;'B'
  3434  00FD17  41                 	db	65	;'A'
  3435  00FD18  20                 	db	32
  3436  00FD19  25                 	db	37
  3437  00FD1A  32                 	db	50	;'2'
  3438  00FD1B  2E                 	db	46
  3439  00FD1C  32                 	db	50	;'2'
  3440  00FD1D  66                 	db	102	;'f'
  3441  00FD1E  20                 	db	32
  3442  00FD1F  20                 	db	32
  3443  00FD20  20                 	db	32
  3444  00FD21  20                 	db	32
  3445  00FD22  00                 	db	0
  3446  00FD23                     STR_36:
  3447                           
  3448                           ; BSR set to: 57
  3449  00FD23  43                 	db	67	;'C'
  3450  00FD24  56                 	db	86	;'V'
  3451  00FD25  20                 	db	32
  3452  00FD26  25                 	db	37
  3453  00FD27  32                 	db	50	;'2'
  3454  00FD28  2E                 	db	46
  3455  00FD29  32                 	db	50	;'2'
  3456  00FD2A  66                 	db	102	;'f'
  3457  00FD2B  20                 	db	32
  3458  00FD2C  4C                 	db	76	;'L'
  3459  00FD2D  41                 	db	65	;'A'
  3460  00FD2E  20                 	db	32
  3461  00FD2F  25                 	db	37
  3462  00FD30  32                 	db	50	;'2'
  3463  00FD31  2E                 	db	46
  3464  00FD32  32                 	db	50	;'2'
  3465  00FD33  66                 	db	102	;'f'
  3466  00FD34  20                 	db	32
  3467  00FD35  20                 	db	32
  3468  00FD36  20                 	db	32
  3469  00FD37  20                 	db	32
  3470  00FD38  00                 	db	0
  3471  00FD39                     STR_34:
  3472                           
  3473                           ; BSR set to: 57
  3474  00FD39  50                 	db	80	;'P'
  3475  00FD3A  56                 	db	86	;'V'
  3476  00FD3B  20                 	db	32
  3477  00FD3C  25                 	db	37
  3478  00FD3D  32                 	db	50	;'2'
  3479  00FD3E  2E                 	db	46
  3480  00FD3F  32                 	db	50	;'2'
  3481  00FD40  66                 	db	102	;'f'
  3482  00FD41  20                 	db	32
  3483  00FD42  50                 	db	80	;'P'
  3484  00FD43  41                 	db	65	;'A'
  3485  00FD44  20                 	db	32
  3486  00FD45  25                 	db	37
  3487  00FD46  32                 	db	50	;'2'
  3488  00FD47  2E                 	db	46
  3489  00FD48  32                 	db	50	;'2'
  3490  00FD49  66                 	db	102	;'f'
  3491  00FD4A  20                 	db	32
  3492  00FD4B  20                 	db	32
  3493  00FD4C  20                 	db	32
  3494  00FD4D  20                 	db	32
  3495  00FD4E  00                 	db	0
  3496  00FD4F                     STR_46:
  3497                           
  3498                           ; BSR set to: 57
  3499  00FD4F  25                 	db	37
  3500  00FD50  64                 	db	100	;'d'
  3501  00FD51  20                 	db	32
  3502  00FD52  25                 	db	37
  3503  00FD53  32                 	db	50	;'2'
  3504  00FD54  2E                 	db	46
  3505  00FD55  34                 	db	52	;'4'
  3506  00FD56  66                 	db	102	;'f'
  3507  00FD57  2C                 	db	44
  3508  00FD58  20                 	db	32
  3509  00FD59  25                 	db	37
  3510  00FD5A  64                 	db	100	;'d'
  3511  00FD5B  20                 	db	32
  3512  00FD5C  20                 	db	32
  3513  00FD5D  54                 	db	84	;'T'
  3514  00FD5E  52                 	db	82	;'R'
  3515  00FD5F  49                 	db	73	;'I'
  3516  00FD60  4D                 	db	77	;'M'
  3517  00FD61  20                 	db	32
  3518  00FD62  20                 	db	32
  3519  00FD63  20                 	db	32
  3520  00FD64  00                 	db	0
  3521  00FD65                     STR_54:
  3522                           
  3523                           ; BSR set to: 57
  3524  00FD65  20                 	db	32
  3525  00FD66  25                 	db	37
  3526  00FD67  64                 	db	100	;'d'
  3527  00FD68  20                 	db	32
  3528  00FD69  25                 	db	37
  3529  00FD6A  64                 	db	100	;'d'
  3530  00FD6B  20                 	db	32
  3531  00FD6C  20                 	db	32
  3532  00FD6D  20                 	db	32
  3533  00FD6E  20                 	db	32
  3534  00FD6F  20                 	db	32
  3535  00FD70  20                 	db	32
  3536  00FD71  20                 	db	32
  3537  00FD72  20                 	db	32
  3538  00FD73  20                 	db	32
  3539  00FD74  20                 	db	32
  3540  00FD75  20                 	db	32
  3541  00FD76  20                 	db	32
  3542  00FD77  20                 	db	32
  3543  00FD78  20                 	db	32
  3544  00FD79  00                 	db	0
  3545  00FD7A                     STR_57:
  3546                           
  3547                           ; BSR set to: 57
  3548  00FD7A  20                 	db	32
  3549  00FD7B  25                 	db	37
  3550  00FD7C  6C                 	db	108	;'l'
  3551  00FD7D  64                 	db	100	;'d'
  3552  00FD7E  20                 	db	32
  3553  00FD7F  25                 	db	37
  3554  00FD80  6C                 	db	108	;'l'
  3555  00FD81  64                 	db	100	;'d'
  3556  00FD82  20                 	db	32
  3557  00FD83  20                 	db	32
  3558  00FD84  20                 	db	32
  3559  00FD85  20                 	db	32
  3560  00FD86  20                 	db	32
  3561  00FD87  20                 	db	32
  3562  00FD88  20                 	db	32
  3563  00FD89  20                 	db	32
  3564  00FD8A  20                 	db	32
  3565  00FD8B  20                 	db	32
  3566  00FD8C  20                 	db	32
  3567  00FD8D  20                 	db	32
  3568  00FD8E  00                 	db	0
  3569  00FD8F                     STR_10:
  3570                           
  3571                           ; BSR set to: 57
  3572  00FD8F  42                 	db	66	;'B'
  3573  00FD90  56                 	db	86	;'V'
  3574  00FD91  20                 	db	32
  3575  00FD92  25                 	db	37
  3576  00FD93  32                 	db	50	;'2'
  3577  00FD94  2E                 	db	46
  3578  00FD95  34                 	db	52	;'4'
  3579  00FD96  66                 	db	102	;'f'
  3580  00FD97  20                 	db	32
  3581  00FD98  20                 	db	32
  3582  00FD99  20                 	db	32
  3583  00FD9A  20                 	db	32
  3584  00FD9B  20                 	db	32
  3585  00FD9C  20                 	db	32
  3586  00FD9D  20                 	db	32
  3587  00FD9E  20                 	db	32
  3588  00FD9F  20                 	db	32
  3589  00FDA0  20                 	db	32
  3590  00FDA1  20                 	db	32
  3591  00FDA2  20                 	db	32
  3592  00FDA3  00                 	db	0
  3593  00FDA4                     STR_62:
  3594                           
  3595                           ; BSR set to: 57
  3596  00FDA4  48                 	db	72	;'H'
  3597  00FDA5  69                 	db	105	;'i'
  3598  00FDA6  73                 	db	115	;'s'
  3599  00FDA7  74                 	db	116	;'t'
  3600  00FDA8  6F                 	db	111	;'o'
  3601  00FDA9  72                 	db	114	;'r'
  3602  00FDAA  79                 	db	121	;'y'
  3603  00FDAB  20                 	db	32
  3604  00FDAC  33                 	db	51	;'3'
  3605  00FDAD  20                 	db	32
  3606  00FDAE  20                 	db	32
  3607  00FDAF  20                 	db	32
  3608  00FDB0  20                 	db	32
  3609  00FDB1  20                 	db	32
  3610  00FDB2  20                 	db	32
  3611  00FDB3  20                 	db	32
  3612  00FDB4  20                 	db	32
  3613  00FDB5  20                 	db	32
  3614  00FDB6  20                 	db	32
  3615  00FDB7  20                 	db	32
  3616  00FDB8  00                 	db	0
  3617  00FDB9                     STR_4:
  3618                           
  3619                           ; BSR set to: 57
  3620  00FDB9  20                 	db	32
  3621  00FDBA  4E                 	db	78	;'N'
  3622  00FDBB  53                 	db	83	;'S'
  3623  00FDBC  41                 	db	65	;'A'
  3624  00FDBD  53                 	db	83	;'S'
  3625  00FDBE  50                 	db	80	;'P'
  3626  00FDBF  4F                 	db	79	;'O'
  3627  00FDC0  4F                 	db	79	;'O'
  3628  00FDC1  4B                 	db	75	;'K'
  3629  00FDC2  20                 	db	32
  3630  00FDC3  20                 	db	32
  3631  00FDC4  20                 	db	32
  3632  00FDC5  20                 	db	32
  3633  00FDC6  20                 	db	32
  3634  00FDC7  20                 	db	32
  3635  00FDC8  20                 	db	32
  3636  00FDC9  20                 	db	32
  3637  00FDCA  20                 	db	32
  3638  00FDCB  20                 	db	32
  3639  00FDCC  20                 	db	32
  3640  00FDCD  00                 	db	0
  3641  00FDCE                     STR_23:
  3642                           
  3643                           ; BSR set to: 57
  3644  00FDCE  54                 	db	84	;'T'
  3645  00FDCF  6F                 	db	111	;'o'
  3646  00FDD0  20                 	db	32
  3647  00FDD1  45                 	db	69	;'E'
  3648  00FDD2  45                 	db	69	;'E'
  3649  00FDD3  50                 	db	80	;'P'
  3650  00FDD4  52                 	db	82	;'R'
  3651  00FDD5  4F                 	db	79	;'O'
  3652  00FDD6  4D                 	db	77	;'M'
  3653  00FDD7  20                 	db	32
  3654  00FDD8  20                 	db	32
  3655  00FDD9  20                 	db	32
  3656  00FDDA  20                 	db	32
  3657  00FDDB  20                 	db	32
  3658  00FDDC  20                 	db	32
  3659  00FDDD  20                 	db	32
  3660  00FDDE  20                 	db	32
  3661  00FDDF  20                 	db	32
  3662  00FDE0  20                 	db	32
  3663  00FDE1  20                 	db	32
  3664  00FDE2  00                 	db	0
  3665  00FDE3                     STR_15:
  3666                           
  3667                           ; BSR set to: 57
  3668  00FDE3  42                 	db	66	;'B'
  3669  00FDE4  61                 	db	97	;'a'
  3670  00FDE5  74                 	db	116	;'t'
  3671  00FDE6  74                 	db	116	;'t'
  3672  00FDE7  65                 	db	101	;'e'
  3673  00FDE8  72                 	db	114	;'r'
  3674  00FDE9  79                 	db	121	;'y'
  3675  00FDEA  20                 	db	32
  3676  00FDEB  45                 	db	69	;'E'
  3677  00FDEC  53                 	db	83	;'S'
  3678  00FDED  52                 	db	82	;'R'
  3679  00FDEE  20                 	db	32
  3680  00FDEF  20                 	db	32
  3681  00FDF0  20                 	db	32
  3682  00FDF1  20                 	db	32
  3683  00FDF2  20                 	db	32
  3684  00FDF3  20                 	db	32
  3685  00FDF4  20                 	db	32
  3686  00FDF5  20                 	db	32
  3687  00FDF6  20                 	db	32
  3688  00FDF7  00                 	db	0
  3689  00FDF8                     STR_16:
  3690                           
  3691                           ; BSR set to: 57
  3692  00FDF8  43                 	db	67	;'C'
  3693  00FDF9  61                 	db	97	;'a'
  3694  00FDFA  6C                 	db	108	;'l'
  3695  00FDFB  63                 	db	99	;'c'
  3696  00FDFC  75                 	db	117	;'u'
  3697  00FDFD  6C                 	db	108	;'l'
  3698  00FDFE  61                 	db	97	;'a'
  3699  00FDFF  74                 	db	116	;'t'
  3700  00FE00  69                 	db	105	;'i'
  3701  00FE01  6F                 	db	111	;'o'
  3702  00FE02  6E                 	db	110	;'n'
  3703  00FE03  20                 	db	32
  3704  00FE04  20                 	db	32
  3705  00FE05  20                 	db	32
  3706  00FE06  20                 	db	32
  3707  00FE07  20                 	db	32
  3708  00FE08  20                 	db	32
  3709  00FE09  20                 	db	32
  3710  00FE0A  20                 	db	32
  3711  00FE0B  20                 	db	32
  3712  00FE0C  00                 	db	0
  3713  00FE0D                     STR_51:
  3714                           
  3715                           ; BSR set to: 57
  3716  00FE0D  43                 	db	67	;'C'
  3717  00FE0E  61                 	db	97	;'a'
  3718  00FE0F  6C                 	db	108	;'l'
  3719  00FE10  69                 	db	105	;'i'
  3720  00FE11  62                 	db	98	;'b'
  3721  00FE12  72                 	db	114	;'r'
  3722  00FE13  61                 	db	97	;'a'
  3723  00FE14  74                 	db	116	;'t'
  3724  00FE15  69                 	db	105	;'i'
  3725  00FE16  6F                 	db	111	;'o'
  3726  00FE17  6E                 	db	110	;'n'
  3727  00FE18  20                 	db	32
  3728  00FE19  20                 	db	32
  3729  00FE1A  20                 	db	32
  3730  00FE1B  20                 	db	32
  3731  00FE1C  20                 	db	32
  3732  00FE1D  20                 	db	32
  3733  00FE1E  20                 	db	32
  3734  00FE1F  20                 	db	32
  3735  00FE20  20                 	db	32
  3736  00FE21  00                 	db	0
  3737  00FE22                     STR_50:
  3738                           
  3739                           ; BSR set to: 57
  3740  00FE22  53                 	db	83	;'S'
  3741  00FE23  65                 	db	101	;'e'
  3742  00FE24  6E                 	db	110	;'n'
  3743  00FE25  73                 	db	115	;'s'
  3744  00FE26  6F                 	db	111	;'o'
  3745  00FE27  72                 	db	114	;'r'
  3746  00FE28  20                 	db	32
  3747  00FE29  5A                 	db	90	;'Z'
  3748  00FE2A  65                 	db	101	;'e'
  3749  00FE2B  72                 	db	114	;'r'
  3750  00FE2C  6F                 	db	111	;'o'
  3751  00FE2D  20                 	db	32
  3752  00FE2E  20                 	db	32
  3753  00FE2F  20                 	db	32
  3754  00FE30  20                 	db	32
  3755  00FE31  20                 	db	32
  3756  00FE32  20                 	db	32
  3757  00FE33  20                 	db	32
  3758  00FE34  20                 	db	32
  3759  00FE35  20                 	db	32
  3760  00FE36  00                 	db	0
  3761  00FE37                     STR_2:
  3762                           
  3763                           ; BSR set to: 57
  3764  00FE37  20                 	db	32
  3765  00FE38  56                 	db	86	;'V'
  3766  00FE39  65                 	db	101	;'e'
  3767  00FE3A  72                 	db	114	;'r'
  3768  00FE3B  73                 	db	115	;'s'
  3769  00FE3C  69                 	db	105	;'i'
  3770  00FE3D  6F                 	db	111	;'o'
  3771  00FE3E  6E                 	db	110	;'n'
  3772  00FE3F  20                 	db	32
  3773  00FE40  25                 	db	37
  3774  00FE41  73                 	db	115	;'s'
  3775  00FE42  20                 	db	32
  3776  00FE43  20                 	db	32
  3777  00FE44  20                 	db	32
  3778  00FE45  20                 	db	32
  3779  00FE46  20                 	db	32
  3780  00FE47  20                 	db	32
  3781  00FE48  20                 	db	32
  3782  00FE49  20                 	db	32
  3783  00FE4A  20                 	db	32
  3784  00FE4B  00                 	db	0
  3785  00FE4C                     STR_58:
  3786                           
  3787                           ; BSR set to: 57
  3788  00FE4C  5A                 	db	90	;'Z'
  3789  00FE4D  65                 	db	101	;'e'
  3790  00FE4E  72                 	db	114	;'r'
  3791  00FE4F  6F                 	db	111	;'o'
  3792  00FE50  20                 	db	32
  3793  00FE51  43                 	db	67	;'C'
  3794  00FE52  61                 	db	97	;'a'
  3795  00FE53  6C                 	db	108	;'l'
  3796  00FE54  20                 	db	32
  3797  00FE55  53                 	db	83	;'S'
  3798  00FE56  65                 	db	101	;'e'
  3799  00FE57  74                 	db	116	;'t'
  3800  00FE58  20                 	db	32
  3801  00FE59  20                 	db	32
  3802  00FE5A  20                 	db	32
  3803  00FE5B  20                 	db	32
  3804  00FE5C  20                 	db	32
  3805  00FE5D  20                 	db	32
  3806  00FE5E  20                 	db	32
  3807  00FE5F  20                 	db	32
  3808  00FE60  00                 	db	0
  3809  00FE61                     STR_1:
  3810                           
  3811                           ; BSR set to: 57
  3812  00FE61  20                 	db	32
  3813  00FE62  4D                 	db	77	;'M'
  3814  00FE63  42                 	db	66	;'B'
  3815  00FE64  4D                 	db	77	;'M'
  3816  00FE65  43                 	db	67	;'C'
  3817  00FE66  20                 	db	32
  3818  00FE67  53                 	db	83	;'S'
  3819  00FE68  4F                 	db	79	;'O'
  3820  00FE69  4C                 	db	76	;'L'
  3821  00FE6A  41                 	db	65	;'A'
  3822  00FE6B  52                 	db	82	;'R'
  3823  00FE6C  4D                 	db	77	;'M'
  3824  00FE6D  4F                 	db	79	;'O'
  3825  00FE6E  4E                 	db	78	;'N'
  3826  00FE6F  20                 	db	32
  3827  00FE70  20                 	db	32
  3828  00FE71  20                 	db	32
  3829  00FE72  20                 	db	32
  3830  00FE73  20                 	db	32
  3831  00FE74  20                 	db	32
  3832  00FE75  00                 	db	0
  3833  00FE76                     STR_49:
  3834                           
  3835                           ; BSR set to: 57
  3836  00FE76  42                 	db	66	;'B'
  3837  00FE77  61                 	db	97	;'a'
  3838  00FE78  74                 	db	116	;'t'
  3839  00FE79  74                 	db	116	;'t'
  3840  00FE7A  65                 	db	101	;'e'
  3841  00FE7B  72                 	db	114	;'r'
  3842  00FE7C  79                 	db	121	;'y'
  3843  00FE7D  20                 	db	32
  3844  00FE7E  61                 	db	97	;'a'
  3845  00FE7F  6E                 	db	110	;'n'
  3846  00FE80  64                 	db	100	;'d'
  3847  00FE81  20                 	db	32
  3848  00FE82  50                 	db	80	;'P'
  3849  00FE83  56                 	db	86	;'V'
  3850  00FE84  20                 	db	32
  3851  00FE85  20                 	db	32
  3852  00FE86  20                 	db	32
  3853  00FE87  20                 	db	32
  3854  00FE88  20                 	db	32
  3855  00FE89  20                 	db	32
  3856  00FE8A  00                 	db	0
  3857  00FE8B                     STR_18:
  3858                           
  3859                           ; BSR set to: 57
  3860  00FE8B  43                 	db	67	;'C'
  3861  00FE8C  68                 	db	104	;'h'
  3862  00FE8D  65                 	db	101	;'e'
  3863  00FE8E  63                 	db	99	;'c'
  3864  00FE8F  6B                 	db	107	;'k'
  3865  00FE90  69                 	db	105	;'i'
  3866  00FE91  6E                 	db	110	;'n'
  3867  00FE92  67                 	db	103	;'g'
  3868  00FE93  20                 	db	32
  3869  00FE94  25                 	db	37
  3870  00FE95  63                 	db	99	;'c'
  3871  00FE96  20                 	db	32
  3872  00FE97  25                 	db	37
  3873  00FE98  63                 	db	99	;'c'
  3874  00FE99  20                 	db	32
  3875  00FE9A  20                 	db	32
  3876  00FE9B  20                 	db	32
  3877  00FE9C  20                 	db	32
  3878  00FE9D  20                 	db	32
  3879  00FE9E  20                 	db	32
  3880  00FE9F  00                 	db	0
  3881  00FEA0                     STR_24:
  3882                           
  3883                           ; BSR set to: 57
  3884  00FEA0  20                 	db	32
  3885  00FEA1  54                 	db	84	;'T'
  3886  00FEA2  69                 	db	105	;'i'
  3887  00FEA3  6D                 	db	109	;'m'
  3888  00FEA4  65                 	db	101	;'e'
  3889  00FEA5  20                 	db	32
  3890  00FEA6  25                 	db	37
  3891  00FEA7  6C                 	db	108	;'l'
  3892  00FEA8  75                 	db	117	;'u'
  3893  00FEA9  2C                 	db	44
  3894  00FEAA  20                 	db	32
  3895  00FEAB  25                 	db	37
  3896  00FEAC  6C                 	db	108	;'l'
  3897  00FEAD  75                 	db	117	;'u'
  3898  00FEAE  20                 	db	32
  3899  00FEAF  20                 	db	32
  3900  00FEB0  20                 	db	32
  3901  00FEB1  20                 	db	32
  3902  00FEB2  20                 	db	32
  3903  00FEB3  20                 	db	32
  3904  00FEB4  00                 	db	0
  3905  00FEB5                     STR_53:
  3906                           
  3907                           ; BSR set to: 57
  3908  00FEB5  53                 	db	83	;'S'
  3909  00FEB6  65                 	db	101	;'e'
  3910  00FEB7  6E                 	db	110	;'n'
  3911  00FEB8  73                 	db	115	;'s'
  3912  00FEB9  6F                 	db	111	;'o'
  3913  00FEBA  72                 	db	114	;'r'
  3914  00FEBB  20                 	db	32
  3915  00FEBC  52                 	db	82	;'R'
  3916  00FEBD  65                 	db	101	;'e'
  3917  00FEBE  61                 	db	97	;'a'
  3918  00FEBF  64                 	db	100	;'d'
  3919  00FEC0  69                 	db	105	;'i'
  3920  00FEC1  6E                 	db	110	;'n'
  3921  00FEC2  67                 	db	103	;'g'
  3922  00FEC3  73                 	db	115	;'s'
  3923  00FEC4  20                 	db	32
  3924  00FEC5  20                 	db	32
  3925  00FEC6  20                 	db	32
  3926  00FEC7  20                 	db	32
  3927  00FEC8  20                 	db	32
  3928  00FEC9  00                 	db	0
  3929  00FECA                     STR_8:
  3930                           
  3931                           ; BSR set to: 57
  3932  00FECA  52                 	db	82	;'R'
  3933  00FECB  65                 	db	101	;'e'
  3934  00FECC  61                 	db	97	;'a'
  3935  00FECD  64                 	db	100	;'d'
  3936  00FECE  20                 	db	32
  3937  00FECF  45                 	db	69	;'E'
  3938  00FED0  45                 	db	69	;'E'
  3939  00FED1  50                 	db	80	;'P'
  3940  00FED2  52                 	db	82	;'R'
  3941  00FED3  4F                 	db	79	;'O'
  3942  00FED4  4D                 	db	77	;'M'
  3943  00FED5  20                 	db	32
  3944  00FED6  44                 	db	68	;'D'
  3945  00FED7  41                 	db	65	;'A'
  3946  00FED8  54                 	db	84	;'T'
  3947  00FED9  41                 	db	65	;'A'
  3948  00FEDA  20                 	db	32
  3949  00FEDB  20                 	db	32
  3950  00FEDC  20                 	db	32
  3951  00FEDD  20                 	db	32
  3952  00FEDE  00                 	db	0
  3953  00FEDF                     STR_17:
  3954                           
  3955                           ; BSR set to: 57
  3956  00FEDF  43                 	db	67	;'C'
  3957  00FEE0  68                 	db	104	;'h'
  3958  00FEE1  65                 	db	101	;'e'
  3959  00FEE2  63                 	db	99	;'c'
  3960  00FEE3  6B                 	db	107	;'k'
  3961  00FEE4  20                 	db	32
  3962  00FEE5  33                 	db	51	;'3'
  3963  00FEE6  30                 	db	48	;'0'
  3964  00FEE7  20                 	db	32
  3965  00FEE8  73                 	db	115	;'s'
  3966  00FEE9  65                 	db	101	;'e'
  3967  00FEEA  63                 	db	99	;'c'
  3968  00FEEB  6F                 	db	111	;'o'
  3969  00FEEC  6E                 	db	110	;'n'
  3970  00FEED  64                 	db	100	;'d'
  3971  00FEEE  73                 	db	115	;'s'
  3972  00FEEF  20                 	db	32
  3973  00FEF0  20                 	db	32
  3974  00FEF1  20                 	db	32
  3975  00FEF2  20                 	db	32
  3976  00FEF3  00                 	db	0
  3977  00FEF4                     STR_61:
  3978                           
  3979                           ; BSR set to: 57
  3980  00FEF4  5A                 	db	90	;'Z'
  3981  00FEF5  65                 	db	101	;'e'
  3982  00FEF6  72                 	db	114	;'r'
  3983  00FEF7  6F                 	db	111	;'o'
  3984  00FEF8  20                 	db	32
  3985  00FEF9  4F                 	db	79	;'O'
  3986  00FEFA  75                 	db	117	;'u'
  3987  00FEFB  74                 	db	116	;'t'
  3988  00FEFC  20                 	db	32
  3989  00FEFD  4F                 	db	79	;'O'
  3990  00FEFE  66                 	db	102	;'f'
  3991  00FEFF  20                 	db	32
  3992  00FF00  52                 	db	82	;'R'
  3993  00FF01  61                 	db	97	;'a'
  3994  00FF02  6E                 	db	110	;'n'
  3995  00FF03  67                 	db	103	;'g'
  3996  00FF04  65                 	db	101	;'e'
  3997  00FF05  20                 	db	32
  3998  00FF06  20                 	db	32
  3999  00FF07  20                 	db	32
  4000  00FF08  00                 	db	0
  4001  00FF09                     STR_55:
  4002                           
  4003                           ; BSR set to: 57
  4004  00FF09  53                 	db	83	;'S'
  4005  00FF0A  74                 	db	116	;'t'
  4006  00FF0B  61                 	db	97	;'a'
  4007  00FF0C  62                 	db	98	;'b'
  4008  00FF0D  69                 	db	105	;'i'
  4009  00FF0E  6C                 	db	108	;'l'
  4010  00FF0F  69                 	db	105	;'i'
  4011  00FF10  74                 	db	116	;'t'
  4012  00FF11  79                 	db	121	;'y'
  4013  00FF12  20                 	db	32
  4014  00FF13  63                 	db	99	;'c'
  4015  00FF14  6C                 	db	108	;'l'
  4016  00FF15  6F                 	db	111	;'o'
  4017  00FF16  63                 	db	99	;'c'
  4018  00FF17  6B                 	db	107	;'k'
  4019  00FF18  20                 	db	32
  4020  00FF19  25                 	db	37
  4021  00FF1A  64                 	db	100	;'d'
  4022  00FF1B  20                 	db	32
  4023  00FF1C  20                 	db	32
  4024  00FF1D  00                 	db	0
  4025  00FF1E                     STR_9:
  4026                           
  4027                           ; BSR set to: 57
  4028  00FF1E  49                 	db	73	;'I'
  4029  00FF1F  6E                 	db	110	;'n'
  4030  00FF20  76                 	db	118	;'v'
  4031  00FF21  61                 	db	97	;'a'
  4032  00FF22  6C                 	db	108	;'l'
  4033  00FF23  69                 	db	105	;'i'
  4034  00FF24  64                 	db	100	;'d'
  4035  00FF25  20                 	db	32
  4036  00FF26  45                 	db	69	;'E'
  4037  00FF27  45                 	db	69	;'E'
  4038  00FF28  50                 	db	80	;'P'
  4039  00FF29  52                 	db	82	;'R'
  4040  00FF2A  4F                 	db	79	;'O'
  4041  00FF2B  4D                 	db	77	;'M'
  4042  00FF2C  20                 	db	32
  4043  00FF2D  44                 	db	68	;'D'
  4044  00FF2E  41                 	db	65	;'A'
  4045  00FF2F  54                 	db	84	;'T'
  4046  00FF30  41                 	db	65	;'A'
  4047  00FF31  20                 	db	32
  4048  00FF32  00                 	db	0
  4049  00FF33                     STR_22:
  4050                           
  4051                           ; BSR set to: 57
  4052  00FF33  48                 	db	72	;'H'
  4053  00FF34  69                 	db	105	;'i'
  4054  00FF35  73                 	db	115	;'s'
  4055  00FF36  74                 	db	116	;'t'
  4056  00FF37  6F                 	db	111	;'o'
  4057  00FF38  72                 	db	114	;'r'
  4058  00FF39  79                 	db	121	;'y'
  4059  00FF3A  20                 	db	32
  4060  00FF3B  44                 	db	68	;'D'
  4061  00FF3C  61                 	db	97	;'a'
  4062  00FF3D  74                 	db	116	;'t'
  4063  00FF3E  61                 	db	97	;'a'
  4064  00FF3F  20                 	db	32
  4065  00FF40  20                 	db	32
  4066  00FF41  53                 	db	83	;'S'
  4067  00FF42  61                 	db	97	;'a'
  4068  00FF43  76                 	db	118	;'v'
  4069  00FF44  65                 	db	101	;'e'
  4070  00FF45  64                 	db	100	;'d'
  4071  00FF46  20                 	db	32
  4072  00FF47  00                 	db	0
  4073  00FF48                     STR_52:
  4074                           
  4075                           ; BSR set to: 57
  4076  00FF48  52                 	db	82	;'R'
  4077  00FF49  65                 	db	101	;'e'
  4078  00FF4A  6C                 	db	108	;'l'
  4079  00FF4B  65                 	db	101	;'e'
  4080  00FF4C  61                 	db	97	;'a'
  4081  00FF4D  73                 	db	115	;'s'
  4082  00FF4E  65                 	db	101	;'e'
  4083  00FF4F  20                 	db	32
  4084  00FF50  62                 	db	98	;'b'
  4085  00FF51  75                 	db	117	;'u'
  4086  00FF52  74                 	db	116	;'t'
  4087  00FF53  74                 	db	116	;'t'
  4088  00FF54  6F                 	db	111	;'o'
  4089  00FF55  6E                 	db	110	;'n'
  4090  00FF56  20                 	db	32
  4091  00FF57  25                 	db	37
  4092  00FF58  63                 	db	99	;'c'
  4093  00FF59  20                 	db	32
  4094  00FF5A  20                 	db	32
  4095  00FF5B  00                 	db	0
  4096  00FF5C                     STR_70:
  4097                           
  4098                           ; BSR set to: 57
  4099  00FF5C  48                 	db	72	;'H'
  4100  00FF5D  45                 	db	69	;'E'
  4101  00FF5E  4C                 	db	76	;'L'
  4102  00FF5F  50                 	db	80	;'P'
  4103  00FF60  20                 	db	32
  4104  00FF61  25                 	db	37
  4105  00FF62  73                 	db	115	;'s'
  4106  00FF63  20                 	db	32
  4107  00FF64  20                 	db	32
  4108  00FF65  20                 	db	32
  4109  00FF66  20                 	db	32
  4110  00FF67  20                 	db	32
  4111  00FF68  20                 	db	32
  4112  00FF69  20                 	db	32
  4113  00FF6A  20                 	db	32
  4114  00FF6B  20                 	db	32
  4115  00FF6C  20                 	db	32
  4116  00FF6D  20                 	db	32
  4117  00FF6E  00                 	db	0
  4118  00FF6F                     
  4119                           ; BSR set to: 57
  4120  00FF6F  44                 	db	68	;'D'
  4121  00FF70  49                 	db	73	;'I'
  4122  00FF71  53                 	db	83	;'S'
  4123  00FF72  50                 	db	80	;'P'
  4124  00FF73  4C                 	db	76	;'L'
  4125  00FF74  41                 	db	65	;'A'
  4126  00FF75  59                 	db	89	;'Y'
  4127  00FF76  20                 	db	32
  4128  00FF77  25                 	db	37
  4129  00FF78  73                 	db	115	;'s'
  4130  00FF79  20                 	db	32
  4131  00FF7A  20                 	db	32
  4132  00FF7B  20                 	db	32
  4133  00FF7C  20                 	db	32
  4134  00FF7D  20                 	db	32
  4135  00FF7E  20                 	db	32
  4136  00FF7F  20                 	db	32
  4137  00FF80  20                 	db	32
  4138  00FF81  00                 	db	0
  4139  00FF82                     
  4140                           ; BSR set to: 57
  4141  00FF82  25                 	db	37
  4142  00FF83  64                 	db	100	;'d'
  4143  00FF84  20                 	db	32
  4144  00FF85  25                 	db	37
  4145  00FF86  32                 	db	50	;'2'
  4146  00FF87  2E                 	db	46
  4147  00FF88  34                 	db	52	;'4'
  4148  00FF89  66                 	db	102	;'f'
  4149  00FF8A  2C                 	db	44
  4150  00FF8B  20                 	db	32
  4151  00FF8C  25                 	db	37
  4152  00FF8D  64                 	db	100	;'d'
  4153  00FF8E  20                 	db	32
  4154  00FF8F  20                 	db	32
  4155  00FF90  20                 	db	32
  4156  00FF91  23                 	db	35
  4157  00FF92  00                 	db	0
  4158  00FF93                     STR_25:
  4159                           
  4160                           ; BSR set to: 57
  4161  00FF93  25                 	db	37
  4162  00FF94  64                 	db	100	;'d'
  4163  00FF95  20                 	db	32
  4164  00FF96  25                 	db	37
  4165  00FF97  32                 	db	50	;'2'
  4166  00FF98  2E                 	db	46
  4167  00FF99  34                 	db	52	;'4'
  4168  00FF9A  66                 	db	102	;'f'
  4169  00FF9B  20                 	db	32
  4170  00FF9C  20                 	db	32
  4171  00FF9D  20                 	db	32
  4172  00FF9E  25                 	db	37
  4173  00FF9F  64                 	db	100	;'d'
  4174  00FFA0  20                 	db	32
  4175  00FFA1  20                 	db	32
  4176  00FFA2  00                 	db	0
  4177  00FFA3                     STR_74:
  4178                           
  4179                           ; BSR set to: 57
  4180  00FFA3  76                 	db	118	;'v'
  4181  00FFA4  74                 	db	116	;'t'
  4182  00FFA5  65                 	db	101	;'e'
  4183  00FFA6  72                 	db	114	;'r'
  4184  00FFA7  6D                 	db	109	;'m'
  4185  00FFA8  20                 	db	32
  4186  00FFA9  25                 	db	37
  4187  00FFAA  78                 	db	120	;'x'
  4188  00FFAB  3A                 	db	58	;':'
  4189  00FFAC  25                 	db	37
  4190  00FFAD  78                 	db	120	;'x'
  4191  00FFAE  20                 	db	32
  4192  00FFAF  20                 	db	32
  4193  00FFB0  20                 	db	32
  4194  00FFB1  00                 	db	0
  4195  00FFB2                     STR_68:
  4196                           
  4197                           ; BSR set to: 57
  4198  00FFB2  46                 	db	70	;'F'
  4199  00FFB3  65                 	db	101	;'e'
  4200  00FFB4  62                 	db	98	;'b'
  4201  00FFB5  20                 	db	32
  4202  00FFB6  31                 	db	49	;'1'
  4203  00FFB7  35                 	db	53	;'5'
  4204  00FFB8  20                 	db	32
  4205  00FFB9  32                 	db	50	;'2'
  4206  00FFBA  30                 	db	48	;'0'
  4207  00FFBB  32                 	db	50	;'2'
  4208  00FFBC  30                 	db	48	;'0'
  4209  00FFBD  00                 	db	0
  4210  00FFBE                     STR_72:
  4211                           
  4212                           ; BSR set to: 57
  4213  00FFBE  25                 	db	37
  4214  00FFBF  73                 	db	115	;'s'
  4215  00FFC0  20                 	db	32
  4216  00FFC1  20                 	db	32
  4217  00FFC2  20                 	db	32
  4218  00FFC3  20                 	db	32
  4219  00FFC4  20                 	db	32
  4220  00FFC5  20                 	db	32
  4221  00FFC6  20                 	db	32
  4222  00FFC7  00                 	db	0
  4223  00FFC8                     STR_69:
  4224                           
  4225                           ; BSR set to: 57
  4226  00FFC8  31                 	db	49	;'1'
  4227  00FFC9  34                 	db	52	;'4'
  4228  00FFCA  3A                 	db	58	;':'
  4229  00FFCB  33                 	db	51	;'3'
  4230  00FFCC  37                 	db	55	;'7'
  4231  00FFCD  3A                 	db	58	;':'
  4232  00FFCE  30                 	db	48	;'0'
  4233  00FFCF  31                 	db	49	;'1'
  4234  00FFD0  00                 	db	0
  4235  00FFD1                     STR_3:
  4236                           
  4237                           ; BSR set to: 57
  4238  00FFD1  31                 	db	49	;'1'
  4239  00FFD2  2E                 	db	46
  4240  00FFD3  32                 	db	50	;'2'
  4241  00FFD4  32                 	db	50	;'2'
  4242  00FFD5  00                 	db	0
  4243  00FFD6                     STR_88:
  4244                           
  4245                           ; BSR set to: 57
  4246  00FFD6  49                 	db	73	;'I'
  4247  00FFD7  4E                 	db	78	;'N'
  4248  00FFD8  46                 	db	70	;'F'
  4249  00FFD9  00                 	db	0
  4250  00FFDA                     STR_92:
  4251                           
  4252                           ; BSR set to: 57
  4253  00FFDA  4E                 	db	78	;'N'
  4254  00FFDB  41                 	db	65	;'A'
  4255  00FFDC  4E                 	db	78	;'N'
  4256  00FFDD  00                 	db	0
  4257  00FFDE                     STR_89:
  4258                           
  4259                           ; BSR set to: 57
  4260  00FFDE  69                 	db	105	;'i'
  4261  00FFDF  6E                 	db	110	;'n'
  4262  00FFE0  66                 	db	102	;'f'
  4263  00FFE1  00                 	db	0
  4264  00FFE2                     STR_93:
  4265                           
  4266                           ; BSR set to: 57
  4267  00FFE2  6E                 	db	110	;'n'
  4268  00FFE3  61                 	db	97	;'a'
  4269  00FFE4  6E                 	db	110	;'n'
  4270  00FFE5  00                 	db	0
  4271  00FFE6                     STR_119:
  4272                           
  4273                           ; BSR set to: 57
  4274  00FFE6  6C                 	db	108	;'l'
  4275  00FFE7  58                 	db	88	;'X'
  4276  00FFE8  00                 	db	0
  4277  00FFE9                     STR_96:
  4278                           
  4279                           ; BSR set to: 57
  4280  00FFE9  6C                 	db	108	;'l'
  4281  00FFEA  64                 	db	100	;'d'
  4282  00FFEB  00                 	db	0
  4283  00FFEC                     STR_105:
  4284                           
  4285                           ; BSR set to: 57
  4286  00FFEC  6C                 	db	108	;'l'
  4287  00FFED  66                 	db	102	;'f'
  4288  00FFEE  00                 	db	0
  4289  00FFEF                     STR_100:
  4290                           
  4291                           ; BSR set to: 57
  4292  00FFEF  6C                 	db	108	;'l'
  4293  00FFF0  69                 	db	105	;'i'
  4294  00FFF1  00                 	db	0
  4295  00FFF2                     STR_110:
  4296                           
  4297                           ; BSR set to: 57
  4298  00FFF2  6C                 	db	108	;'l'
  4299  00FFF3  75                 	db	117	;'u'
  4300  00FFF4  00                 	db	0
  4301  00FFF5                     STR_115:
  4302                           
  4303                           ; BSR set to: 57
  4304  00FFF5  6C                 	db	108	;'l'
  4305  00FFF6  78                 	db	120	;'x'
  4306  00FFF7  00                 	db	0
  4307  00FFF8                     STR_67:
  4308                           
  4309                           ; BSR set to: 57
  4310  00FFF8  25                 	db	37
  4311  00FFF9  63                 	db	99	;'c'
  4312  00FFFA  00                 	db	0
  4313  00FFFB                     STR_66:
  4314                           
  4315                           ; BSR set to: 57
  4316  00FFFB  25                 	db	37
  4317  00FFFC  73                 	db	115	;'s'
  4318  00FFFD  00                 	db	0
  4319  0000                     
  4320                           ; #config settings
  4321  00FFFE  00                 	db	0	; dummy byte at the end
  4322  0000                     
  4323                           	psect	cinit
  4324  01EF8E                     __pcinit:
  4325                           	opt callstack 0
  4326  01EF8E                     start_initialization:
  4327                           	opt callstack 0
  4328  01EF8E                     __initialization:
  4329                           	opt callstack 0
  4330                           
  4331                           ; Initialize objects allocated to BIGRAM (848 bytes)
  4332                           ; load TBLPTR registers with __pidataBIGRAM
  4333  01EF8E  0E24               	movlw	low __pidataBIGRAM
  4334  01EF90  6EF6               	movwf	tblptrl,c
  4335  01EF92  0E9D               	movlw	high __pidataBIGRAM
  4336  01EF94  6EF7               	movwf	tblptrh,c
  4337  01EF96  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4338  01EF98  6EF8               	movwf	tblptru,c
  4339  01EF9A  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4340  01EF9E  EE20 F350          	lfsr	2,848
  4341  01EFA2                     copy_data0:
  4342  01EFA2  0009               	tblrd		*+
  4343  01EFA4  006F FFD7 FFEE     	movff	tablat,postinc0
  4344  01EFAA  50DD               	movf	postdec2,w,c
  4345  01EFAC  50D9               	movf	fsr2l,w,c
  4346  01EFAE  E1F9               	bnz	copy_data0
  4347  01EFB0  50DA               	movf	fsr2h,w,c
  4348  01EFB2  E1F7               	bnz	copy_data0
  4349                           
  4350                           ; Initialize objects allocated to BANK2 (178 bytes)
  4351                           ; load TBLPTR registers with __pidataBANK2
  4352  01EFB4  0E3C               	movlw	low __pidataBANK2
  4353  01EFB6  6EF6               	movwf	tblptrl,c
  4354  01EFB8  0EFC               	movlw	high __pidataBANK2
  4355  01EFBA  6EF7               	movwf	tblptrh,c
  4356  01EFBC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4357  01EFBE  6EF8               	movwf	tblptru,c
  4358  01EFC0  EE00  F200         	lfsr	0,__pdataBANK2
  4359  01EFC4  EE20 F0B2          	lfsr	2,178
  4360  01EFC8                     copy_data1:
  4361  01EFC8  0009               	tblrd		*+
  4362  01EFCA  006F FFD7 FFEE     	movff	tablat,postinc0
  4363  01EFD0  50DD               	movf	postdec2,w,c
  4364  01EFD2  50D9               	movf	fsr2l,w,c
  4365  01EFD4  E1F9               	bnz	copy_data1
  4366                           
  4367                           ; Initialize objects allocated to BANK1 (201 bytes)
  4368                           ; load TBLPTR registers with __pidataBANK1
  4369  01EFD6  0E86               	movlw	low __pidataBANK1
  4370  01EFD8  6EF6               	movwf	tblptrl,c
  4371  01EFDA  0EF8               	movlw	high __pidataBANK1
  4372  01EFDC  6EF7               	movwf	tblptrh,c
  4373  01EFDE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4374  01EFE0  6EF8               	movwf	tblptru,c
  4375  01EFE2  EE00  F100         	lfsr	0,__pdataBANK1
  4376  01EFE6  EE20 F0C9          	lfsr	2,201
  4377  01EFEA                     copy_data2:
  4378  01EFEA  0009               	tblrd		*+
  4379  01EFEC  006F FFD7 FFEE     	movff	tablat,postinc0
  4380  01EFF2  50DD               	movf	postdec2,w,c
  4381  01EFF4  50D9               	movf	fsr2l,w,c
  4382  01EFF6  E1F9               	bnz	copy_data2
  4383                           
  4384                           ; Clear objects allocated to BIGRAM (482 bytes)
  4385  01EFF8  EE02  F24F         	lfsr	0,__pbssBIGRAM
  4386  01EFFC  EE20 F1E2          	lfsr	2,482
  4387  01F000                     clear_0:
  4388  01F000  6AEE               	clrf	postinc0,c
  4389  01F002  50DD               	movf	postdec2,w,c
  4390  01F004  50D9               	movf	fsr2l,w,c
  4391  01F006  E1FC               	bnz	clear_0
  4392  01F008  50DA               	movf	fsr2h,w,c
  4393  01F00A  E1FA               	bnz	clear_0
  4394                           
  4395                           ; Clear objects allocated to BANK6 (255 bytes)
  4396  01F00C  EE01  F200         	lfsr	0,__pbssBANK6
  4397  01F010  EE20 F0FF          	lfsr	2,255
  4398  01F014                     clear_1:
  4399  01F014  6AEE               	clrf	postinc0,c
  4400  01F016  50DD               	movf	postdec2,w,c
  4401  01F018  50D9               	movf	fsr2l,w,c
  4402  01F01A  E1FC               	bnz	clear_1
  4403  01F01C  50DA               	movf	fsr2h,w,c
  4404  01F01E  E1FA               	bnz	clear_1
  4405                           
  4406                           ; Clear objects allocated to BANK5 (171 bytes)
  4407  01F020  EE01  F100         	lfsr	0,__pbssBANK5
  4408  01F024  0EAB               	movlw	171
  4409  01F026                     clear_2:
  4410  01F026  6AEE               	clrf	postinc0,c
  4411  01F028  06E8               	decf	wreg,f,c
  4412  01F02A  E1FD               	bnz	clear_2
  4413                           
  4414                           ; Clear objects allocated to BANK4 (198 bytes)
  4415  01F02C  EE01  F000         	lfsr	0,__pbssBANK4
  4416  01F030  0EC6               	movlw	198
  4417  01F032                     clear_3:
  4418  01F032  6AEE               	clrf	postinc0,c
  4419  01F034  06E8               	decf	wreg,f,c
  4420  01F036  E1FD               	bnz	clear_3
  4421                           
  4422                           ; Clear objects allocated to BANK3 (247 bytes)
  4423  01F038  EE00  F300         	lfsr	0,__pbssBANK3
  4424  01F03C  0EF7               	movlw	247
  4425  01F03E                     clear_4:
  4426  01F03E  6AEE               	clrf	postinc0,c
  4427  01F040  06E8               	decf	wreg,f,c
  4428  01F042  E1FD               	bnz	clear_4
  4429                           
  4430                           ; Clear objects allocated to BANK2 (62 bytes)
  4431  01F044  EE00  F2B2         	lfsr	0,__pbssBANK2
  4432  01F048  0E3E               	movlw	62
  4433  01F04A                     clear_5:
  4434  01F04A  6AEE               	clrf	postinc0,c
  4435  01F04C  06E8               	decf	wreg,f,c
  4436  01F04E  E1FD               	bnz	clear_5
  4437                           
  4438                           ; Clear objects allocated to BANK1 (55 bytes)
  4439  01F050  EE00  F1C9         	lfsr	0,__pbssBANK1
  4440  01F054  0E37               	movlw	55
  4441  01F056                     clear_6:
  4442  01F056  6AEE               	clrf	postinc0,c
  4443  01F058  06E8               	decf	wreg,f,c
  4444  01F05A  E1FD               	bnz	clear_6
  4445                           
  4446                           ; Clear objects allocated to BANK0 (131 bytes)
  4447  01F05C  EE00  F060         	lfsr	0,__pbssBANK0
  4448  01F060  0E83               	movlw	131
  4449  01F062                     clear_7:
  4450  01F062  6AEE               	clrf	postinc0,c
  4451  01F064  06E8               	decf	wreg,f,c
  4452  01F066  E1FD               	bnz	clear_7
  4453                           
  4454                           ; Clear objects allocated to COMRAM (14 bytes)
  4455  01F068  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4456  01F06C  0E0E               	movlw	14
  4457  01F06E                     clear_8:
  4458  01F06E  6AEE               	clrf	postinc0,c
  4459  01F070  06E8               	decf	wreg,f,c
  4460  01F072  E1FD               	bnz	clear_8
  4461                           
  4462                           ;
  4463                           ; Setup IVTBASE
  4464                           ;
  4465  01F074  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4466  01F076  6ED5               	movwf	213,c
  4467  01F078  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4468  01F07A  6ED6               	movwf	214,c
  4469  01F07C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4470  01F07E  6ED7               	movwf	215,c
  4471  01F080                     end_of_initialization:
  4472                           	opt callstack 0
  4473  01F080                     __end_of__initialization:
  4474                           	opt callstack 0
  4475  01F080  0100               	movlb	0
  4476  01F082  EF00  F080         	goto	_main	;jump to C main() function
  4477                           
  4478                           	psect	bssCOMRAM
  4479  00003A                     __pbssCOMRAM:
  4480                           	opt callstack 0
  4481  00003A                     _width:
  4482                           	opt callstack 0
  4483  00003A                     	ds	2
  4484  00003C                     _prec:
  4485                           	opt callstack 0
  4486  00003C                     	ds	2
  4487  00003E                     _flags:
  4488                           	opt callstack 0
  4489  00003E                     	ds	2
  4490  000040                     calc_bsoc@log_update_wait:
  4491                           	opt callstack 0
  4492  000040                     	ds	1
  4493  000041                     check_day_time@day_delay:
  4494                           	opt callstack 0
  4495  000041                     	ds	1
  4496  000042                     dac_spi_control@init:
  4497                           	opt callstack 0
  4498  000042                     	ds	1
  4499  000043                     display_history@bwait:
  4500                           	opt callstack 0
  4501  000043                     	ds	1
  4502  000044                     _uart2RxHead:
  4503                           	opt callstack 0
  4504  000044                     	ds	1
  4505  000045                     _uart2TxBufferRemaining:
  4506                           	opt callstack 0
  4507  000045                     	ds	1
  4508  000046                     _uart2TxTail:
  4509                           	opt callstack 0
  4510  000046                     	ds	1
  4511  000047                     _uart1RxHead:
  4512                           	opt callstack 0
  4513  000047                     	ds	1
  4514                           
  4515                           	psect	bssBANK0
  4516  000060                     __pbssBANK0:
  4517                           	opt callstack 0
  4518  000060                     _spi_link:
  4519                           	opt callstack 0
  4520  000060                     	ds	12
  4521  00006C                     spinners@s:
  4522                           	opt callstack 0
  4523  00006C                     	ds	6
  4524  000072                     _lock:
  4525                           	opt callstack 0
  4526  000072                     	ds	4
  4527  000076                     ___tzname:
  4528                           	opt callstack 0
  4529  000076                     	ds	4
  4530  00007A                     ___timezone:
  4531                           	opt callstack 0
  4532  00007A                     	ds	4
  4533  00007E                     floorf@F524:
  4534                           	opt callstack 0
  4535  00007E                     	ds	4
  4536  000082                     fabsf@F463:
  4537                           	opt callstack 0
  4538  000082                     	ds	4
  4539  000086                     ___fpclassifyf@F463:
  4540                           	opt callstack 0
  4541  000086                     	ds	4
  4542  00008A                     calc_ror_data@bcror:
  4543                           	opt callstack 0
  4544  00008A                     	ds	4
  4545  00008E                     calc_ror_data@bvror:
  4546                           	opt callstack 0
  4547  00008E                     	ds	4
  4548  000092                     calc_model_data@bcror:
  4549                           	opt callstack 0
  4550  000092                     	ds	4
  4551  000096                     calc_model_data@bvror:
  4552                           	opt callstack 0
  4553  000096                     	ds	4
  4554  00009A                     _utctime:
  4555                           	opt callstack 0
  4556  00009A                     	ds	4
  4557  00009E                     wdtdelay@dcount:
  4558                           	opt callstack 0
  4559  00009E                     	ds	4
  4560  0000A2                     _P:
  4561                           	opt callstack 0
  4562  0000A2                     	ds	4
  4563  0000A6                     _TMR3_InterruptHandler:
  4564                           	opt callstack 0
  4565  0000A6                     	ds	3
  4566  0000A9                     _TMR5_InterruptHandler:
  4567                           	opt callstack 0
  4568  0000A9                     	ds	3
  4569  0000AC                     _TMR6_InterruptHandler:
  4570                           	opt callstack 0
  4571  0000AC                     	ds	3
  4572  0000AF                     _ADCC_ADTI_InterruptHandler:
  4573                           	opt callstack 0
  4574  0000AF                     	ds	3
  4575  0000B2                     _ADCC_ADI_InterruptHandler:
  4576                           	opt callstack 0
  4577  0000B2                     	ds	3
  4578  0000B5                     _UART1_RxInterruptHandler:
  4579                           	opt callstack 0
  4580  0000B5                     	ds	3
  4581  0000B8                     _UART2_TxInterruptHandler:
  4582                           	opt callstack 0
  4583  0000B8                     	ds	3
  4584  0000BB                     _UART2_RxInterruptHandler:
  4585                           	opt callstack 0
  4586  0000BB                     	ds	3
  4587  0000BE                     _INT1_InterruptHandler:
  4588                           	opt callstack 0
  4589  0000BE                     	ds	3
  4590  0000C1                     _INT0_InterruptHandler:
  4591                           	opt callstack 0
  4592  0000C1                     	ds	3
  4593  0000C4                     _dst_off:
  4594                           	opt callstack 0
  4595  0000C4                     	ds	2
  4596  0000C6                     ___daylight:
  4597                           	opt callstack 0
  4598  0000C6                     	ds	2
  4599  0000C8                     _nout:
  4600                           	opt callstack 0
  4601  0000C8                     	ds	2
  4602  0000CA                     _t_mbmc:
  4603                           	opt callstack 0
  4604  0000CA                     	ds	2
  4605  0000CC                     TMR3_ISR@CountCallBack:
  4606                           	opt callstack 0
  4607  0000CC                     	ds	2
  4608  0000CE                     _timer3ReloadVal:
  4609                           	opt callstack 0
  4610  0000CE                     	ds	2
  4611  0000D0                     TMR5_ISR@CountCallBack:
  4612                           	opt callstack 0
  4613  0000D0                     	ds	2
  4614  0000D2                     _timer5ReloadVal:
  4615                           	opt callstack 0
  4616  0000D2                     	ds	2
  4617  0000D4                     esr_check@esr_state:
  4618                           	opt callstack 0
  4619  0000D4                     	ds	1
  4620  0000D5                     dac_spi_control@SB:
  4621                           	opt callstack 0
  4622  0000D5                     	ds	1
  4623  0000D6                     dac_spi_control@SC:
  4624                           	opt callstack 0
  4625  0000D6                     	ds	1
  4626  0000D7                     dac_spi_control@S2:
  4627                           	opt callstack 0
  4628  0000D7                     	ds	1
  4629  0000D8                     dac_spi_control@S1:
  4630                           	opt callstack 0
  4631  0000D8                     	ds	1
  4632  0000D9                     dac_spi_control@S0:
  4633                           	opt callstack 0
  4634  0000D9                     	ds	1
  4635  0000DA                     _mode_sw:
  4636                           	opt callstack 0
  4637  0000DA                     	ds	1
  4638  0000DB                     _uart2RxCount:
  4639                           	opt callstack 0
  4640  0000DB                     	ds	1
  4641  0000DC                     _uart2RxTail:
  4642                           	opt callstack 0
  4643  0000DC                     	ds	1
  4644  0000DD                     _uart2TxHead:
  4645                           	opt callstack 0
  4646  0000DD                     	ds	1
  4647  0000DE                     _uart1RxCount:
  4648                           	opt callstack 0
  4649  0000DE                     	ds	1
  4650  0000DF                     _uart1RxTail:
  4651                           	opt callstack 0
  4652  0000DF                     	ds	1
  4653  0000E0                     _crcObj:
  4654                           	opt callstack 0
  4655  0000E0                     	ds	3
  4656                           
  4657                           	psect	bssBANK1
  4658  0001C9                     __pbssBANK1:
  4659                           	opt callstack 0
  4660  0001C9                     _S:
  4661                           	opt callstack 0
  4662  0001C9                     	ds	41
  4663  0001F2                     _dst_name:
  4664                           	opt callstack 0
  4665  0001F2                     	ds	7
  4666  0001F9                     _std_name:
  4667                           	opt callstack 0
  4668  0001F9                     	ds	7
  4669                           
  4670                           	psect	dataBANK1
  4671  000100                     __pdataBANK1:
  4672                           	opt callstack 0
  4673  000100                     _V:
  4674                           	opt callstack 0
  4675  000100                     	ds	192
  4676  0001C0                     _H:
  4677                           	opt callstack 0
  4678  0001C0                     	ds	9
  4679                           
  4680                           	psect	bssBANK2
  4681  0002B2                     __pbssBANK2:
  4682                           	opt callstack 0
  4683  0002B2                     _tickCount:
  4684                           	opt callstack 0
  4685  0002B2                     	ds	26
  4686  0002CC                     _uart1RxBuffer:
  4687                           	opt callstack 0
  4688  0002CC                     	ds	8
  4689  0002D4                     _r1:
  4690                           	opt callstack 0
  4691  0002D4                     	ds	10
  4692  0002DE                     _r0:
  4693                           	opt callstack 0
  4694  0002DE                     	ds	10
  4695  0002E8                     _seed:
  4696                           	opt callstack 0
  4697  0002E8                     	ds	8
  4698                           
  4699                           	psect	dataBANK2
  4700  000200                     __pdataBANK2:
  4701                           	opt callstack 0
  4702  000200                     stoa@F1166:
  4703                           	opt callstack 0
  4704  000200                     	ds	7
  4705  000207                     _R:
  4706                           	opt callstack 0
  4707  000207                     	ds	171
  4708                           
  4709                           	psect	bssBANK3
  4710  000300                     __pbssBANK3:
  4711                           	opt callstack 0
  4712  000300                     lp_filter@smooth:
  4713                           	opt callstack 0
  4714  000300                     	ds	84
  4715  000354                     _dbuf:
  4716                           	opt callstack 0
  4717  000354                     	ds	80
  4718  0003A4                     	ds	32
  4719  0003C4                     asctime@buf:
  4720                           	opt callstack 0
  4721  0003C4                     	ds	27
  4722  0003DF                     localtime@tm:
  4723                           	opt callstack 0
  4724  0003DF                     	ds	24
  4725                           
  4726                           	psect	bssBANK4
  4727  000400                     __pbssBANK4:
  4728                           	opt callstack 0
  4729  000400                     _uart2TxBuffer:
  4730                           	opt callstack 0
  4731  000400                     	ds	64
  4732  000440                     _ring_buf2:
  4733                           	opt callstack 0
  4734  000440                     	ds	67
  4735  000483                     _ring_buf1:
  4736                           	opt callstack 0
  4737  000483                     	ds	67
  4738                           
  4739                           	psect	bssBANK5
  4740  000500                     __pbssBANK5:
  4741                           	opt callstack 0
  4742  000500                     _r_cal:
  4743                           	opt callstack 0
  4744  000500                     	ds	171
  4745                           
  4746                           	psect	bssBANK6
  4747  000600                     __pbssBANK6:
  4748                           	opt callstack 0
  4749  000600                     _uart2RxBuffer:
  4750                           	opt callstack 0
  4751  000600                     	ds	255
  4752                           
  4753                           	psect	bssBIGRAM
  4754  000A4F                     __pbssBIGRAM:
  4755                           	opt callstack 0
  4756  000A4F                     _D:
  4757                           	opt callstack 0
  4758  000A4F                     	ds	482
  4759                           
  4760                           	psect	dataBIGRAM
  4761  0006FF                     __pdataBIGRAM:
  4762                           	opt callstack 0
  4763  0006FF                     _port_data:
  4764                           	opt callstack 0
  4765  0006FF                     	ds	512
  4766  0008FF                     _C:
  4767                           	opt callstack 0
  4768  0008FF                     	ds	336
  4769                           
  4770                           	psect	cstackBANK0
  4771  0000E3                     __pcstackBANK0:
  4772                           	opt callstack 0
  4773  0000E3                     ??_TMR3_ISR:
  4774                           
  4775                           ; 1 bytes @ 0x0
  4776  0000E3                     	ds	25
  4777                           
  4778                           	psect	cstackCOMRAM
  4779  000021                     __pcstackCOMRAM:
  4780                           	opt callstack 0
  4781  000021                     ??_ADCC_ThresholdISR:
  4782  000021                     
  4783                           ; 1 bytes @ 0x0
  4784  000021                     	ds	5
  4785  000026                     ??_TMR6_ISR:
  4786                           
  4787                           ; 1 bytes @ 0x5
  4788  000026                     	ds	1
  4789  000027                     ??_INT1_ISR:
  4790  000027                     
  4791                           ; 1 bytes @ 0x6
  4792  000027                     	ds	4
  4793  00002B                     ??_TMR5_ISR:
  4794                           
  4795                           ; 1 bytes @ 0xA
  4796  00002B                     	ds	15
  4797                           
  4798 ;;
  4799 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4800 ;;
  4801 ;; *************** function _main *****************
  4802 ;; Defined at:
  4803 ;;		line 198 in file "main.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  esr_temp        4  [STACK] float 
  4808 ;;  i_esr           2  [STACK] unsigned short 
  4809 ;;  shape           1  [STACK] unsigned char 
  4810 ;;  inp_index       1  [STACK] unsigned char 
  4811 ;;  k               1  [STACK] unsigned char 
  4812 ;;  j               1  [STACK] unsigned char 
  4813 ;;  i               1  [STACK] unsigned char 
  4814 ;;  mode            1  [STACK] enum E17179
  4815 ;;  i_ror           1  [STACK] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1  [STACK] void 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels required when called:   29
  4831 ;; This function calls:
  4832 ;;		_SYSTEM_Initialize
  4833 ;;		_StartTimer
  4834 ;;		_TimerDone
  4835 ;;		_WaitMs
  4836 ;;		___fladd
  4837 ;;		___flge
  4838 ;;		___fltol
  4839 ;;		_calc_model_data
  4840 ;;		_calc_ror_data
  4841 ;;		_check_adc_scan
  4842 ;;		_check_enter_button
  4843 ;;		_check_help
  4844 ;;		_clear_adc_scan
  4845 ;;		_clear_hid_pflags
  4846 ;;		_conv_raw_result
  4847 ;;		_convert_adc_data
  4848 ;;		_current_sensor_cal
  4849 ;;		_display_history
  4850 ;;		_eaDogM_WriteCommand
  4851 ;;		_esr_check
  4852 ;;		_fabsf
  4853 ;;		_get_raw_result
  4854 ;;		_get_switch
  4855 ;;		_get_vterm_ptr
  4856 ;;		_hid_display
  4857 ;;		_init_bsoc
  4858 ;;		_init_display
  4859 ;;		_init_port_dma
  4860 ;;		_load_hist_data
  4861 ;;		_lp_filter
  4862 ;;		_mode_lamp_dim
  4863 ;;		_read_cal_data
  4864 ;;		_set_dac
  4865 ;;		_set_dac_a
  4866 ;;		_set_dac_b
  4867 ;;		_set_display_info
  4868 ;;		_set_load_relay_one
  4869 ;;		_set_load_relay_two
  4870 ;;		_set_vterm
  4871 ;;		_spinners
  4872 ;;		_sprintf
  4873 ;;		_srand
  4874 ;;		_start_adc_scan
  4875 ;;		_start_switch_handler
  4876 ;;		_static_soc
  4877 ;;		_update_cal_data
  4878 ;;		_update_hist_data
  4879 ;;		_update_lcd
  4880 ;;		_wait_lcd_done
  4881 ;;		_write_cal_data
  4882 ;; This function is called by:
  4883 ;;		Startup code after reset
  4884 ;; This function uses a reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text0
  4888  010000                     __ptext0:
  4889                           	opt callstack 0
  4890  010000                     _main:
  4891                           	opt callstack 0
  4892                           
  4893                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4894  010000  0E11               	movlw	17
  4895  010002  26E1               	addwf	fsr1l,f,c
  4896  010004  0E00               	movlw	0
  4897  010006  22E2               	addwfc	fsr1h,f,c
  4898                           
  4899                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4900                           ;stkvar	_inp_index @ sp[(-17)+11]
  4901                           
  4902                           ;incstack = 0
  4903  010008  0EFA               	movlw	-6
  4904  01000A  6AE3               	clrf	plusw1,c
  4905                           
  4906                           ;stkvar	_i @ sp[(-17)+14]
  4907  01000C  0EFD               	movlw	-3
  4908  01000E  6AE3               	clrf	plusw1,c
  4909                           
  4910                           ;stkvar	_j @ sp[(-17)+13]
  4911  010010  0EFC               	movlw	-4
  4912  010012  6AE3               	clrf	plusw1,c
  4913  010014  2AE3               	incf	plusw1,f,c
  4914                           
  4915                           ;stkvar	_k @ sp[(-17)+12]
  4916  010016  0EFB               	movlw	-5
  4917  010018  6AE3               	clrf	plusw1,c
  4918  01001A  82E3               	bsf	plusw1,1,c
  4919                           
  4920                           ;main.c: 204:  SYSTEM_Initialize();
  4921  01001C  ECEE  F007         	call	_SYSTEM_Initialize	;wreg free
  4922                           
  4923                           ; BSR set to: 60
  4924                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  4925  010020  8ED2               	bsf	210,7,c	;volatile
  4926                           
  4927                           ; BSR set to: 60
  4928                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  4929  010022  8CD2               	bsf	210,6,c	;volatile
  4930                           
  4931                           ; BSR set to: 60
  4932                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  4933  010024  0101               	movlb	1	; () banked
  4934  010026  6B00               	clrf	_V& (0+255),b	;volatile
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;main.c: 217:  WaitMs(300);
  4938  010028  0E2C               	movlw	44
  4939  01002A  6EE6               	movwf	postinc1,c
  4940  01002C  0E01               	movlw	1
  4941  01002E  6EE6               	movwf	postinc1,c
  4942  010030  ECAC  F00A         	call	_WaitMs	;wreg free
  4943                           
  4944                           ;main.c: 218:  if (PORTBbits.RB0) {
  4945  010034  A0CB               	btfss	203,0,c	;volatile
  4946  010036  D004               	goto	l16987
  4947                           
  4948                           ;main.c: 219:   mode = UI_STATE_HOST;
  4949                           ;stkvar	_mode @ sp[(-17)+15]
  4950  010038  0EFE               	movlw	-2
  4951  01003A  6AE3               	clrf	plusw1,c
  4952  01003C  2AE3               	incf	plusw1,f,c
  4953                           
  4954                           ;main.c: 220:  } else {
  4955  01003E  D004               	goto	l16989
  4956  010040                     l16987:
  4957                           
  4958                           ;main.c: 221:   mode = UI_STATE_LOG;
  4959                           ;stkvar	_mode @ sp[(-17)+15]
  4960  010040  0EFE               	movlw	-2
  4961  010042  6AE3               	clrf	plusw1,c
  4962  010044  80E3               	bsf	plusw1,0,c
  4963  010046  82E3               	bsf	plusw1,1,c	;indir
  4964  010048                     l16989:
  4965                           
  4966                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  4967                           ;stkvar	_mode @ sp[(-17)+15]
  4968  010048  0EFE               	movlw	-2
  4969  01004A  04E3               	decf	plusw1,w,c
  4970  01004C  A4D8               	btfss	status,2,c
  4971  01004E  D007               	goto	l1447
  4972                           
  4973                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  4974  010050  80BD               	bsf	189,0,c	;volatile
  4975                           
  4976                           ;main.c: 226:   V.mode_pwm = 70;
  4977  010052  0E00               	movlw	0
  4978  010054  0101               	movlb	1	; () banked
  4979  010056  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  4980  010058  0E46               	movlw	70
  4981  01005A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  4982                           
  4983                           ;main.c: 227:  } else {
  4984  01005C  D004               	goto	l16993
  4985  01005E                     l1447:
  4986  01005E  90BD               	bcf	189,0,c	;volatile
  4987                           
  4988                           ;main.c: 229:   V.mode_pwm = 0;
  4989  010060  0101               	movlb	1	; () banked
  4990  010062  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  4991  010064  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  4992  010066                     l16993:
  4993                           
  4994                           ; BSR set to: 1
  4995                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  4996  010066  0060  F657  FFE6   	movff	_V+149,postinc1
  4997  01006C  0060  F65B  FFE6   	movff	_V+150,postinc1
  4998  010072  EC87  F00E         	call	_mode_lamp_dim	;wreg free
  4999  010076  D3A4               	goto	l17143
  5000  010078                     l16995:
  5001                           
  5002                           ; BSR set to: 1
  5003                           ;main.c: 239:    init_port_dma();
  5004  010078  EC48  F00B         	call	_init_port_dma	;wreg free
  5005                           
  5006                           ; BSR set to: 59
  5007                           ;main.c: 241:    init_display();
  5008  01007C  ECAD  F0F9         	call	_init_display	;wreg free
  5009                           
  5010                           ; BSR set to: 61
  5011                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5012  010080  0E0C               	movlw	12
  5013  010082  6EE6               	movwf	postinc1,c
  5014  010084  EC04  F00F         	call	_eaDogM_WriteCommand	;wreg free
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 243:    set_dac();
  5018  010088  ECC3  F0FD         	call	_set_dac	;wreg free
  5019                           
  5020                           ;main.c: 247:    set_load_relay_one(1);
  5021  01008C  0E01               	movlw	1
  5022  01008E  6EE6               	movwf	postinc1,c
  5023  010090  ECE4  F00E         	call	_set_load_relay_one	;wreg free
  5024                           
  5025                           ;main.c: 248:    set_load_relay_two(1);
  5026  010094  0E01               	movlw	1
  5027  010096  6EE6               	movwf	postinc1,c
  5028  010098  ECDC  F00E         	call	_set_load_relay_two	;wreg free
  5029                           
  5030                           ;main.c: 250:    V.ui_state = mode;
  5031                           ;stkvar	_mode @ sp[(-17)+15]
  5032  01009C  0EFE               	movlw	-2
  5033  01009E  006F FF8C  F100    	movff	plusw1,_V	;volatile
  5034                           
  5035                           ;main.c: 251:    srand(1957);
  5036  0100A4  0EA5               	movlw	165
  5037  0100A6  6EE6               	movwf	postinc1,c
  5038  0100A8  0E07               	movlw	7
  5039  0100AA  6EE6               	movwf	postinc1,c
  5040  0100AC  ECC7  F00A         	call	_srand	;wreg free
  5041                           
  5042                           ; BSR set to: 2
  5043                           ;main.c: 252:    set_vterm(0);
  5044  0100B0  0E00               	movlw	0
  5045  0100B2  6EE6               	movwf	postinc1,c
  5046  0100B4  EC42  F00E         	call	_set_vterm	;wreg free
  5047                           
  5048                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5049  0100B8  0E61               	movlw	low STR_1
  5050  0100BA  6EE6               	movwf	postinc1,c
  5051  0100BC  0EFE               	movlw	high STR_1
  5052  0100BE  6EE6               	movwf	postinc1,c
  5053  0100C0  0E00               	movlw	0
  5054  0100C2  6EE6               	movwf	postinc1,c
  5055  0100C4  0E00               	movlw	0
  5056  0100C6  6EE6               	movwf	postinc1,c
  5057  0100C8  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5058  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  5059  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5060  0100D8  0E04               	movlw	4
  5061  0100DA  6EE6               	movwf	postinc1,c
  5062  0100DC  EC42  F0F7         	call	_sprintf	;wreg free
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.22");
  5066  0100E0  0ED1               	movlw	low STR_3
  5067  0100E2  6EE6               	movwf	postinc1,c
  5068  0100E4  0EFF               	movlw	high STR_3
  5069  0100E6  6EE6               	movwf	postinc1,c
  5070  0100E8  0E37               	movlw	low STR_2
  5071  0100EA  6EE6               	movwf	postinc1,c
  5072  0100EC  0EFE               	movlw	high STR_2
  5073  0100EE  6EE6               	movwf	postinc1,c
  5074  0100F0  0E00               	movlw	0
  5075  0100F2  6EE6               	movwf	postinc1,c
  5076  0100F4  0E01               	movlw	1
  5077  0100F6  6EE6               	movwf	postinc1,c
  5078  0100F8  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5079  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  5080  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5081  010108  0E06               	movlw	6
  5082  01010A  6EE6               	movwf	postinc1,c
  5083  01010C  EC42  F0F7         	call	_sprintf	;wreg free
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5087  010110  0EB9               	movlw	low STR_4
  5088  010112  6EE6               	movwf	postinc1,c
  5089  010114  0EFD               	movlw	high STR_4
  5090  010116  6EE6               	movwf	postinc1,c
  5091  010118  0E00               	movlw	0
  5092  01011A  6EE6               	movwf	postinc1,c
  5093  01011C  0E02               	movlw	2
  5094  01011E  6EE6               	movwf	postinc1,c
  5095  010120  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5096  010124  0060  F007  FFE6   	movff	btemp,postinc1
  5097  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5098  010130  0E04               	movlw	4
  5099  010132  6EE6               	movwf	postinc1,c
  5100  010134  EC42  F0F7         	call	_sprintf	;wreg free
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;main.c: 256:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5104  010138  0EF0               	movlw	low (STR_14+1)
  5105  01013A  6EE6               	movwf	postinc1,c
  5106  01013C  0EFB               	movlw	high (STR_14+1)
  5107  01013E  6EE6               	movwf	postinc1,c
  5108  010140  0E02               	movlw	2
  5109  010142  6EE6               	movwf	postinc1,c
  5110  010144  0E00               	movlw	0
  5111  010146  6EE6               	movwf	postinc1,c
  5112  010148  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5113  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  5114  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5115  010158  0E04               	movlw	4
  5116  01015A  6EE6               	movwf	postinc1,c
  5117  01015C  EC42  F0F7         	call	_sprintf	;wreg free
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;main.c: 257:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5121  010160  0EF0               	movlw	low (STR_14+1)
  5122  010162  6EE6               	movwf	postinc1,c
  5123  010164  0EFB               	movlw	high (STR_14+1)
  5124  010166  6EE6               	movwf	postinc1,c
  5125  010168  0E02               	movlw	2
  5126  01016A  6EE6               	movwf	postinc1,c
  5127  01016C  0E01               	movlw	1
  5128  01016E  6EE6               	movwf	postinc1,c
  5129  010170  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5130  010174  0060  F007  FFE6   	movff	btemp,postinc1
  5131  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5132  010180  0E04               	movlw	4
  5133  010182  6EE6               	movwf	postinc1,c
  5134  010184  EC42  F0F7         	call	_sprintf	;wreg free
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;main.c: 258:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5138  010188  0EF0               	movlw	low (STR_14+1)
  5139  01018A  6EE6               	movwf	postinc1,c
  5140  01018C  0EFB               	movlw	high (STR_14+1)
  5141  01018E  6EE6               	movwf	postinc1,c
  5142  010190  0E02               	movlw	2
  5143  010192  6EE6               	movwf	postinc1,c
  5144  010194  0E02               	movlw	2
  5145  010196  6EE6               	movwf	postinc1,c
  5146  010198  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5147  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  5148  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5149  0101A8  0E04               	movlw	4
  5150  0101AA  6EE6               	movwf	postinc1,c
  5151  0101AC  EC42  F0F7         	call	_sprintf	;wreg free
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;main.c: 259:    update_lcd(0);
  5155  0101B0  0E00               	movlw	0
  5156  0101B2  6EE6               	movwf	postinc1,c
  5157  0101B4  ECBA  F0F6         	call	_update_lcd	;wreg free
  5158                           
  5159                           ;main.c: 260:    WaitMs(1000);
  5160  0101B8  0EE8               	movlw	232
  5161  0101BA  6EE6               	movwf	postinc1,c
  5162  0101BC  0E03               	movlw	3
  5163  0101BE  6EE6               	movwf	postinc1,c
  5164  0101C0  ECAC  F00A         	call	_WaitMs	;wreg free
  5165                           
  5166                           ;main.c: 261:    StartTimer(TMR_DISPLAY, 250);
  5167  0101C4  0EFA               	movlw	250
  5168  0101C6  6EE6               	movwf	postinc1,c
  5169  0101C8  0E00               	movlw	0
  5170  0101CA  6EE6               	movwf	postinc1,c
  5171  0101CC  0E0A               	movlw	10
  5172  0101CE  6EE6               	movwf	postinc1,c
  5173  0101D0  ECBA  F009         	call	_StartTimer	;wreg free
  5174                           
  5175                           ;main.c: 262:    StartTimer(TMR_ADC, 200);
  5176  0101D4  0EC8               	movlw	200
  5177  0101D6  6EE6               	movwf	postinc1,c
  5178  0101D8  0E00               	movlw	0
  5179  0101DA  6EE6               	movwf	postinc1,c
  5180  0101DC  0E01               	movlw	1
  5181  0101DE  6EE6               	movwf	postinc1,c
  5182  0101E0  ECBA  F009         	call	_StartTimer	;wreg free
  5183                           
  5184                           ;main.c: 263:    StartTimer(TMR_INFO, 3000);
  5185  0101E4  0EB8               	movlw	184
  5186  0101E6  6EE6               	movwf	postinc1,c
  5187  0101E8  0E0B               	movlw	11
  5188  0101EA  6EE6               	movwf	postinc1,c
  5189  0101EC  0E07               	movlw	7
  5190  0101EE  6EE6               	movwf	postinc1,c
  5191  0101F0  ECBA  F009         	call	_StartTimer	;wreg free
  5192                           
  5193                           ;main.c: 264:    StartTimer(TMR_FLIPPER, 1500);
  5194  0101F4  0EDC               	movlw	220
  5195  0101F6  6EE6               	movwf	postinc1,c
  5196  0101F8  0E05               	movlw	5
  5197  0101FA  6EE6               	movwf	postinc1,c
  5198  0101FC  0E0B               	movlw	11
  5199  0101FE  6EE6               	movwf	postinc1,c
  5200  010200  ECBA  F009         	call	_StartTimer	;wreg free
  5201                           
  5202                           ;main.c: 265:    StartTimer(TMR_HELPDIS, 3000);
  5203  010204  0EB8               	movlw	184
  5204  010206  6EE6               	movwf	postinc1,c
  5205  010208  0E0B               	movlw	11
  5206  01020A  6EE6               	movwf	postinc1,c
  5207  01020C  0E09               	movlw	9
  5208  01020E  6EE6               	movwf	postinc1,c
  5209  010210  ECBA  F009         	call	_StartTimer	;wreg free
  5210                           
  5211                           ;main.c: 267:    start_adc_scan();
  5212  010214  EC26  F006         	call	_start_adc_scan	;wreg free
  5213                           
  5214                           ;main.c: 268:    start_switch_handler();
  5215  010218  ECF4  F00D         	call	_start_switch_handler	;wreg free
  5216                           
  5217                           ; BSR set to: 57
  5218                           ;main.c: 269:    WaitMs(1000);
  5219  01021C  0EE8               	movlw	232
  5220  01021E  6EE6               	movwf	postinc1,c
  5221  010220  0E03               	movlw	3
  5222  010222  6EE6               	movwf	postinc1,c
  5223  010224  ECAC  F00A         	call	_WaitMs	;wreg free
  5224                           
  5225                           ;main.c: 274:    if (read_cal_data()) {
  5226  010228  EC5D  F0E6         	call	_read_cal_data	;wreg free
  5227  01022C  5001               	movf	btemp^0,w,c
  5228  01022E  B4D8               	btfsc	status,2,c
  5229  010230  D01F               	goto	l17053
  5230                           
  5231                           ;main.c: 275:     update_cal_data();
  5232  010232  EC71  F007         	call	_update_cal_data	;wreg free
  5233                           
  5234                           ; BSR set to: 2
  5235                           ;main.c: 276:     update_hist_data(1, &C.hist[0]);
  5236  010236  0EB8               	movlw	low (_C+185)
  5237  010238  6EE6               	movwf	postinc1,c
  5238  01023A  0E09               	movlw	high (_C+185)
  5239  01023C  6EE6               	movwf	postinc1,c
  5240  01023E  0E01               	movlw	1
  5241  010240  6EE6               	movwf	postinc1,c
  5242  010242  ECB7  F004         	call	_update_hist_data	;wreg free
  5243                           
  5244                           ;main.c: 277:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5245  010246  0ECA               	movlw	low STR_8
  5246  010248  6EE6               	movwf	postinc1,c
  5247  01024A  0EFE               	movlw	high STR_8
  5248  01024C  6EE6               	movwf	postinc1,c
  5249  01024E  0E00               	movlw	0
  5250  010250  6EE6               	movwf	postinc1,c
  5251  010252  0E02               	movlw	2
  5252  010254  6EE6               	movwf	postinc1,c
  5253  010256  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5254  01025A  0060  F007  FFE6   	movff	btemp,postinc1
  5255  010260  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5256  010266  0E04               	movlw	4
  5257  010268  6EE6               	movwf	postinc1,c
  5258  01026A  EC42  F0F7         	call	_sprintf	;wreg free
  5259                           
  5260                           ;main.c: 278:    } else {
  5261  01026E  D014               	goto	l1453
  5262  010270                     l17053:
  5263                           
  5264                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5265  010270  0E1E               	movlw	low STR_9
  5266  010272  6EE6               	movwf	postinc1,c
  5267  010274  0EFF               	movlw	high STR_9
  5268  010276  6EE6               	movwf	postinc1,c
  5269  010278  0E00               	movlw	0
  5270  01027A  6EE6               	movwf	postinc1,c
  5271  01027C  0E02               	movlw	2
  5272  01027E  6EE6               	movwf	postinc1,c
  5273  010280  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5274  010284  0060  F007  FFE6   	movff	btemp,postinc1
  5275  01028A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5276  010290  0E04               	movlw	4
  5277  010292  6EE6               	movwf	postinc1,c
  5278  010294  EC42  F0F7         	call	_sprintf	;wreg free
  5279  010298                     l1453:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;main.c: 281:    update_lcd(0);
  5283  010298  0E00               	movlw	0
  5284  01029A  6EE6               	movwf	postinc1,c
  5285  01029C  ECBA  F0F6         	call	_update_lcd	;wreg free
  5286                           
  5287                           ;main.c: 282:    WaitMs(2000);
  5288  0102A0  0ED0               	movlw	208
  5289  0102A2  6EE6               	movwf	postinc1,c
  5290  0102A4  0E07               	movlw	7
  5291  0102A6  6EE6               	movwf	postinc1,c
  5292  0102A8  ECAC  F00A         	call	_WaitMs	;wreg free
  5293                           
  5294                           ;main.c: 284:    i_ror = 1;
  5295                           ;stkvar	_i_ror @ sp[(-17)+16]
  5296  0102AC  0EFF               	movlw	-1
  5297  0102AE  6AE3               	clrf	plusw1,c
  5298  0102B0  2AE3               	incf	plusw1,f,c
  5299  0102B2                     l17059:
  5300                           
  5301                           ;main.c: 286:     calc_ror_data();
  5302  0102B2  EC7B  F0EA         	call	_calc_ror_data	;wreg free
  5303                           
  5304                           ;main.c: 287:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5305  0102B6  0E00               	movlw	0
  5306  0102B8  6EE6               	movwf	postinc1,c
  5307  0102BA  0E04               	movlw	4
  5308  0102BC  6EE6               	movwf	postinc1,c
  5309  0102BE  ECFA  F0C1         	call	_conv_raw_result	;wreg free
  5310  0102C2  0060  F007  FFE6   	movff	btemp,postinc1
  5311  0102C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5312  0102CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5313  0102D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5314  0102DA  0E8F               	movlw	low STR_10
  5315  0102DC  6EE6               	movwf	postinc1,c
  5316  0102DE  0EFD               	movlw	high STR_10
  5317  0102E0  6EE6               	movwf	postinc1,c
  5318  0102E2  0E00               	movlw	0
  5319  0102E4  6EE6               	movwf	postinc1,c
  5320  0102E6  0E01               	movlw	1
  5321  0102E8  6EE6               	movwf	postinc1,c
  5322  0102EA  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5323  0102EE  0060  F007  FFE6   	movff	btemp,postinc1
  5324  0102F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5325  0102FA  0E08               	movlw	8
  5326  0102FC  6EE6               	movwf	postinc1,c
  5327  0102FE  EC42  F0F7         	call	_sprintf	;wreg free
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;main.c: 288:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5331  010302  EE22  F16B         	lfsr	2,_C+108	;volatile
  5332  010306  006F FF7B FFE6     	movff	postinc2,postinc1
  5333  01030C  006F FF7B FFE6     	movff	postinc2,postinc1
  5334  010312  006F FF7B FFE6     	movff	postinc2,postinc1
  5335  010318  006F FF7B FFE6     	movff	postinc2,postinc1
  5336                           
  5337                           ;stkvar	_i_ror @ sp[(-21)+16]
  5338  01031E  0EFB               	movlw	-5
  5339  010320  50E3               	movf	plusw1,w,c
  5340  010322  6EE6               	movwf	postinc1,c
  5341  010324  0E00               	movlw	0
  5342  010326  6EE6               	movwf	postinc1,c
  5343  010328  0E00               	movlw	0
  5344  01032A  6EE6               	movwf	postinc1,c
  5345  01032C  0E05               	movlw	5
  5346  01032E  6EE6               	movwf	postinc1,c
  5347  010330  EC22  F0FA         	call	_spinners	;wreg free
  5348  010334  5001               	movf	btemp^0,w,c
  5349  010336  6EE6               	movwf	postinc1,c
  5350  010338  0E00               	movlw	0
  5351  01033A  6EE6               	movwf	postinc1,c
  5352  01033C  0E34               	movlw	low STR_11
  5353  01033E  6EE6               	movwf	postinc1,c
  5354  010340  0EFB               	movlw	high STR_11
  5355  010342  6EE6               	movwf	postinc1,c
  5356  010344  0E00               	movlw	0
  5357  010346  6EE6               	movwf	postinc1,c
  5358  010348  0E02               	movlw	2
  5359  01034A  6EE6               	movwf	postinc1,c
  5360  01034C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5361  010350  0060  F007  FFE6   	movff	btemp,postinc1
  5362  010356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5363  01035C  0E0C               	movlw	12
  5364  01035E  6EE6               	movwf	postinc1,c
  5365  010360  EC42  F0F7         	call	_sprintf	;wreg free
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;main.c: 289:     update_lcd(0);
  5369  010364  0E00               	movlw	0
  5370  010366  6EE6               	movwf	postinc1,c
  5371  010368  ECBA  F0F6         	call	_update_lcd	;wreg free
  5372                           
  5373                           ;main.c: 290:     clear_adc_scan();
  5374  01036C  EC5C  F00F         	call	_clear_adc_scan	;wreg free
  5375                           
  5376                           ; BSR set to: 2
  5377                           ;main.c: 291:     start_adc_scan();
  5378  010370  EC26  F006         	call	_start_adc_scan	;wreg free
  5379                           
  5380                           ;main.c: 292:     WaitMs(2000);
  5381  010374  0ED0               	movlw	208
  5382  010376  6EE6               	movwf	postinc1,c
  5383  010378  0E07               	movlw	7
  5384  01037A  6EE6               	movwf	postinc1,c
  5385  01037C  ECAC  F00A         	call	_WaitMs	;wreg free
  5386                           
  5387                           ;main.c: 295:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5388                           ;stkvar	_i_ror @ sp[(-17)+16]
  5389  010380  0EFF               	movlw	-1
  5390  010382  006F FF8C  F00C    	movff	plusw1,btemp+11
  5391  010388  2A0C               	incf	(btemp+11)^0,f,c
  5392  01038A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5393  010390  060C               	decf	(btemp+11)^0,f,c
  5394  010392  0E1E               	movlw	30
  5395  010394  600C               	cpfslt	(btemp+11)^0,c
  5396  010396  D01A               	goto	u16690
  5397  010398  EE22  F16B         	lfsr	2,_C+108	;volatile
  5398  01039C  006F FF7B FFE6     	movff	postinc2,postinc1
  5399  0103A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5400  0103A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5401  0103AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5402  0103B4  0E42               	movlw	66
  5403  0103B6  6EE6               	movwf	postinc1,c
  5404  0103B8  0E60               	movlw	96
  5405  0103BA  6EE6               	movwf	postinc1,c
  5406  0103BC  0E65               	movlw	101
  5407  0103BE  6EE6               	movwf	postinc1,c
  5408  0103C0  0E3C               	movlw	60
  5409  0103C2  6EE6               	movwf	postinc1,c
  5410  0103C4  EC23  F0EE         	call	___flge	;wreg free
  5411  0103C8  A001               	btfss	btemp& (0+255),0,c
  5412  0103CA  D773               	goto	l17059
  5413  0103CC                     u16690:
  5414                           
  5415                           ;main.c: 297:    static_soc();
  5416  0103CC  ECEA  F006         	call	_static_soc	;wreg free
  5417                           
  5418                           ;main.c: 298:    init_bsoc();
  5419  0103D0  ECC6  F0DD         	call	_init_bsoc	;wreg free
  5420                           
  5421                           ;main.c: 299:    set_load_relay_one(0);
  5422  0103D4  0E00               	movlw	0
  5423  0103D6  6EE6               	movwf	postinc1,c
  5424  0103D8  ECE4  F00E         	call	_set_load_relay_one	;wreg free
  5425                           
  5426                           ;main.c: 300:    set_load_relay_two(0);
  5427  0103DC  0E00               	movlw	0
  5428  0103DE  6EE6               	movwf	postinc1,c
  5429  0103E0  ECDC  F00E         	call	_set_load_relay_two	;wreg free
  5430                           
  5431                           ;main.c: 301:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5432  0103E4  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5433  0103E8  006F FF78  F00B    	movff	postinc2,btemp+10
  5434  0103EE  006F FF74  F00C    	movff	postdec2,btemp+11
  5435  0103F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5436  0103FA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5437  010400  0E1B               	movlw	low STR_12
  5438  010402  6EE6               	movwf	postinc1,c
  5439  010404  0EFC               	movlw	high STR_12
  5440  010406  6EE6               	movwf	postinc1,c
  5441  010408  0E00               	movlw	0
  5442  01040A  6EE6               	movwf	postinc1,c
  5443  01040C  0E00               	movlw	0
  5444  01040E  6EE6               	movwf	postinc1,c
  5445  010410  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5446  010414  0060  F007  FFE6   	movff	btemp,postinc1
  5447  01041A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5448  010420  0E06               	movlw	6
  5449  010422  6EE6               	movwf	postinc1,c
  5450  010424  EC42  F0F7         	call	_sprintf	;wreg free
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;main.c: 302:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5454  010428  EE22  F18F         	lfsr	2,_C+144	;volatile
  5455  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5456  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  01043E  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  010444  0EF7               	movlw	low STR_13
  5460  010446  6EE6               	movwf	postinc1,c
  5461  010448  0EFC               	movlw	high STR_13
  5462  01044A  6EE6               	movwf	postinc1,c
  5463  01044C  0E00               	movlw	0
  5464  01044E  6EE6               	movwf	postinc1,c
  5465  010450  0E01               	movlw	1
  5466  010452  6EE6               	movwf	postinc1,c
  5467  010454  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5468  010458  0060  F007  FFE6   	movff	btemp,postinc1
  5469  01045E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5470  010464  0E08               	movlw	8
  5471  010466  6EE6               	movwf	postinc1,c
  5472  010468  EC42  F0F7         	call	_sprintf	;wreg free
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;main.c: 303:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5476  01046C  0EEF               	movlw	low STR_14
  5477  01046E  6EE6               	movwf	postinc1,c
  5478  010470  0EFB               	movlw	high STR_14
  5479  010472  6EE6               	movwf	postinc1,c
  5480  010474  0E00               	movlw	0
  5481  010476  6EE6               	movwf	postinc1,c
  5482  010478  0E02               	movlw	2
  5483  01047A  6EE6               	movwf	postinc1,c
  5484  01047C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5485  010480  0060  F007  FFE6   	movff	btemp,postinc1
  5486  010486  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5487  01048C  0E04               	movlw	4
  5488  01048E  6EE6               	movwf	postinc1,c
  5489  010490  EC42  F0F7         	call	_sprintf	;wreg free
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;main.c: 304:    update_lcd(0);
  5493  010494  0E00               	movlw	0
  5494  010496  6EE6               	movwf	postinc1,c
  5495  010498  ECBA  F0F6         	call	_update_lcd	;wreg free
  5496                           
  5497                           ;main.c: 305:    WaitMs(2000);
  5498  01049C  0ED0               	movlw	208
  5499  01049E  6EE6               	movwf	postinc1,c
  5500  0104A0  0E07               	movlw	7
  5501  0104A2  6EE6               	movwf	postinc1,c
  5502  0104A4  ECAC  F00A         	call	_WaitMs	;wreg free
  5503                           
  5504                           ;main.c: 306:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5505  0104A8  0EE3               	movlw	low STR_15
  5506  0104AA  6EE6               	movwf	postinc1,c
  5507  0104AC  0EFD               	movlw	high STR_15
  5508  0104AE  6EE6               	movwf	postinc1,c
  5509  0104B0  0E00               	movlw	0
  5510  0104B2  6EE6               	movwf	postinc1,c
  5511  0104B4  0E00               	movlw	0
  5512  0104B6  6EE6               	movwf	postinc1,c
  5513  0104B8  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5514  0104BC  0060  F007  FFE6   	movff	btemp,postinc1
  5515  0104C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5516  0104C8  0E04               	movlw	4
  5517  0104CA  6EE6               	movwf	postinc1,c
  5518  0104CC  EC42  F0F7         	call	_sprintf	;wreg free
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;main.c: 307:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5522  0104D0  0EF8               	movlw	low STR_16
  5523  0104D2  6EE6               	movwf	postinc1,c
  5524  0104D4  0EFD               	movlw	high STR_16
  5525  0104D6  6EE6               	movwf	postinc1,c
  5526  0104D8  0E00               	movlw	0
  5527  0104DA  6EE6               	movwf	postinc1,c
  5528  0104DC  0E01               	movlw	1
  5529  0104DE  6EE6               	movwf	postinc1,c
  5530  0104E0  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5531  0104E4  0060  F007  FFE6   	movff	btemp,postinc1
  5532  0104EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5533  0104F0  0E04               	movlw	4
  5534  0104F2  6EE6               	movwf	postinc1,c
  5535  0104F4  EC42  F0F7         	call	_sprintf	;wreg free
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;main.c: 308:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5539  0104F8  0EDF               	movlw	low STR_17
  5540  0104FA  6EE6               	movwf	postinc1,c
  5541  0104FC  0EFE               	movlw	high STR_17
  5542  0104FE  6EE6               	movwf	postinc1,c
  5543  010500  0E00               	movlw	0
  5544  010502  6EE6               	movwf	postinc1,c
  5545  010504  0E02               	movlw	2
  5546  010506  6EE6               	movwf	postinc1,c
  5547  010508  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5548  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5549  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5550  010518  0E04               	movlw	4
  5551  01051A  6EE6               	movwf	postinc1,c
  5552  01051C  EC42  F0F7         	call	_sprintf	;wreg free
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;main.c: 309:    update_lcd(0);
  5556  010520  0E00               	movlw	0
  5557  010522  6EE6               	movwf	postinc1,c
  5558  010524  ECBA  F0F6         	call	_update_lcd	;wreg free
  5559                           
  5560                           ;main.c: 310:    uint16_t i_esr = 1;
  5561  010528  0E01               	movlw	1
  5562  01052A  6E0B               	movwf	(btemp+10)^0,c
  5563  01052C  0E00               	movlw	0
  5564  01052E  6E0C               	movwf	(btemp+11)^0,c
  5565                           
  5566                           ;stkvar	_i_esr @ sp[(-17)+8]
  5567  010530  0EF7               	movlw	-9
  5568  010532  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5569  010538  0EF8               	movlw	-8
  5570  01053A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5571                           
  5572                           ;main.c: 312:    float esr_temp;;main.c: 313:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5573  010540  D06D               	goto	l17119
  5574  010542                     l17107:
  5575                           
  5576                           ;main.c: 314:     WaitMs(110);
  5577  010542  0E6E               	movlw	110
  5578  010544  6EE6               	movwf	postinc1,c
  5579  010546  0E00               	movlw	0
  5580  010548  6EE6               	movwf	postinc1,c
  5581  01054A  ECAC  F00A         	call	_WaitMs	;wreg free
  5582                           
  5583                           ;main.c: 315:     shape = (uint8_t) fabsf(esr_temp);
  5584                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5585  01054E  0EF3               	movlw	-13
  5586  010550  006F FF8F FFE6     	movff	plusw1,postinc1
  5587  010556  006F FF8F FFE6     	movff	plusw1,postinc1
  5588  01055C  006F FF8F FFE6     	movff	plusw1,postinc1
  5589  010562  006F FF8F FFE6     	movff	plusw1,postinc1
  5590  010568  EC77  F0FE         	call	_fabsf	;wreg free
  5591  01056C  0060  F007  FFE6   	movff	btemp,postinc1
  5592  010572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5593  010578  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5594  01057E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5595  010584  ECB7  F0EC         	call	___fltol	;wreg free
  5596  010588  0060  F004  F00C   	movff	btemp,btemp+11
  5597                           
  5598                           ;stkvar	_shape @ sp[(-17)+10]
  5599  01058E  0EF9               	movlw	-7
  5600  010590  0060  F033  FFE3   	movff	btemp+11,plusw1
  5601                           
  5602                           ;main.c: 316:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5603  010596  0E00               	movlw	0
  5604  010598  6EE6               	movwf	postinc1,c
  5605                           
  5606                           ;stkvar	_shape @ sp[(-18)+10]
  5607  01059A  0EF8               	movlw	-8
  5608  01059C  50E3               	movf	plusw1,w,c
  5609  01059E  6EE6               	movwf	postinc1,c
  5610  0105A0  EC22  F0FA         	call	_spinners	;wreg free
  5611  0105A4  5001               	movf	btemp^0,w,c
  5612  0105A6  6EE6               	movwf	postinc1,c
  5613  0105A8  0E00               	movlw	0
  5614  0105AA  6EE6               	movwf	postinc1,c
  5615  0105AC  0E00               	movlw	0
  5616  0105AE  6EE6               	movwf	postinc1,c
  5617  0105B0  0E00               	movlw	0
  5618  0105B2  6EE6               	movwf	postinc1,c
  5619  0105B4  EC22  F0FA         	call	_spinners	;wreg free
  5620  0105B8  5001               	movf	btemp^0,w,c
  5621  0105BA  6EE6               	movwf	postinc1,c
  5622  0105BC  0E00               	movlw	0
  5623  0105BE  6EE6               	movwf	postinc1,c
  5624  0105C0  0E8B               	movlw	low STR_18
  5625  0105C2  6EE6               	movwf	postinc1,c
  5626  0105C4  0EFE               	movlw	high STR_18
  5627  0105C6  6EE6               	movwf	postinc1,c
  5628  0105C8  0E00               	movlw	0
  5629  0105CA  6EE6               	movwf	postinc1,c
  5630  0105CC  0E02               	movlw	2
  5631  0105CE  6EE6               	movwf	postinc1,c
  5632  0105D0  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5633  0105D4  0060  F007  FFE6   	movff	btemp,postinc1
  5634  0105DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5635  0105E0  0E08               	movlw	8
  5636  0105E2  6EE6               	movwf	postinc1,c
  5637  0105E4  EC42  F0F7         	call	_sprintf	;wreg free
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;main.c: 317:     update_lcd(0);
  5641  0105E8  0E00               	movlw	0
  5642  0105EA  6EE6               	movwf	postinc1,c
  5643  0105EC  ECBA  F0F6         	call	_update_lcd	;wreg free
  5644                           
  5645                           ;main.c: 319:     if (i_esr++ > 512)
  5646                           ;stkvar	_i_esr @ sp[(-17)+8]
  5647  0105F0  50E1               	movf	fsr1l,w,c
  5648  0105F2  0FF7               	addlw	-9
  5649  0105F4  6ED9               	movwf	fsr2l,c
  5650  0105F6  50E2               	movf	fsr1h,w,c
  5651  0105F8  6EDA               	movwf	fsr2h,c
  5652  0105FA  0EFF               	movlw	255
  5653  0105FC  22DA               	addwfc	fsr2h,f,c
  5654  0105FE  006F FF7C  F00B    	movff	indf2,btemp+10
  5655  010604  0E01               	movlw	1
  5656  010606  26DE               	addwf	postinc2,f,c
  5657  010608  006F FF7C  F00C    	movff	indf2,btemp+11
  5658  01060E  0E00               	movlw	0
  5659  010610  22DD               	addwfc	postdec2,f,c
  5660  010612  040B               	decf	(btemp+10)^0,w,c
  5661  010614  0E02               	movlw	2
  5662  010616  580C               	subwfb	(btemp+11)^0,w,c
  5663  010618  B0D8               	btfsc	status,0,c
  5664  01061A  D017               	goto	u16710
  5665  01061C                     l17119:
  5666                           
  5667                           ;main.c: 313:    while ((esr_temp = esr_check(0)) < 0.0) {
  5668  01061C  0E00               	movlw	0
  5669  01061E  6EE6               	movwf	postinc1,c
  5670  010620  ECCE  F0D4         	call	_esr_check	;wreg free
  5671                           
  5672                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5673  010624  0EF3               	movlw	-13
  5674  010626  0060  F007  FFE3   	movff	btemp,plusw1
  5675  01062C  0EF4               	movlw	-12
  5676  01062E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5677  010634  0EF5               	movlw	-11
  5678  010636  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5679  01063C  0EF6               	movlw	-10
  5680  01063E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5681  010644  0EF6               	movlw	-10
  5682  010646  BEE3               	btfsc	plusw1,7,c
  5683  010648  D77C               	goto	l17107
  5684  01064A                     u16710:
  5685                           
  5686                           ;main.c: 322:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5687  01064A  EE22  F187         	lfsr	2,_C+136	;volatile
  5688  01064E  006F FF7B FFE6     	movff	postinc2,postinc1
  5689  010654  006F FF7B FFE6     	movff	postinc2,postinc1
  5690  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  010666  0E05               	movlw	low STR_19
  5693  010668  6EE6               	movwf	postinc1,c
  5694  01066A  0EFC               	movlw	high STR_19
  5695  01066C  6EE6               	movwf	postinc1,c
  5696  01066E  0E00               	movlw	0
  5697  010670  6EE6               	movwf	postinc1,c
  5698  010672  0E00               	movlw	0
  5699  010674  6EE6               	movwf	postinc1,c
  5700  010676  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5701  01067A  0060  F007  FFE6   	movff	btemp,postinc1
  5702  010680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5703  010686  0E08               	movlw	8
  5704  010688  6EE6               	movwf	postinc1,c
  5705  01068A  EC42  F0F7         	call	_sprintf	;wreg free
  5706                           
  5707                           ;main.c: 323:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5708  01068E  EE22  F229         	lfsr	2,_C+298	;volatile
  5709  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  5710  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  5711  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5712  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5713  0106AA  EE22  F235         	lfsr	2,_C+310	;volatile
  5714  0106AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5715  0106B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5716  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5717  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5718  0106C6  0E00               	movlw	low STR_20
  5719  0106C8  6EE6               	movwf	postinc1,c
  5720  0106CA  0EFB               	movlw	high STR_20
  5721  0106CC  6EE6               	movwf	postinc1,c
  5722  0106CE  0E00               	movlw	0
  5723  0106D0  6EE6               	movwf	postinc1,c
  5724  0106D2  0E01               	movlw	1
  5725  0106D4  6EE6               	movwf	postinc1,c
  5726  0106D6  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5727  0106DA  0060  F007  FFE6   	movff	btemp,postinc1
  5728  0106E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5729  0106E6  0E0C               	movlw	12
  5730  0106E8  6EE6               	movwf	postinc1,c
  5731  0106EA  EC42  F0F7         	call	_sprintf	;wreg free
  5732                           
  5733                           ;main.c: 324:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5734  0106EE  EE22  F22D         	lfsr	2,_C+302	;volatile
  5735  0106F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5736  0106F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5737  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5738  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5739  01070A  EE22  F239         	lfsr	2,_C+314	;volatile
  5740  01070E  006F FF7B FFE6     	movff	postinc2,postinc1
  5741  010714  006F FF7B FFE6     	movff	postinc2,postinc1
  5742  01071A  006F FF7B FFE6     	movff	postinc2,postinc1
  5743  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5744  010726  0E1A               	movlw	low STR_21
  5745  010728  6EE6               	movwf	postinc1,c
  5746  01072A  0EFB               	movlw	high STR_21
  5747  01072C  6EE6               	movwf	postinc1,c
  5748  01072E  0E00               	movlw	0
  5749  010730  6EE6               	movwf	postinc1,c
  5750  010732  0E02               	movlw	2
  5751  010734  6EE6               	movwf	postinc1,c
  5752  010736  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5753  01073A  0060  F007  FFE6   	movff	btemp,postinc1
  5754  010740  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5755  010746  0E0C               	movlw	12
  5756  010748  6EE6               	movwf	postinc1,c
  5757  01074A  EC42  F0F7         	call	_sprintf	;wreg free
  5758                           
  5759                           ;main.c: 325:    update_lcd(0);
  5760  01074E  0E00               	movlw	0
  5761  010750  6EE6               	movwf	postinc1,c
  5762  010752  ECBA  F0F6         	call	_update_lcd	;wreg free
  5763                           
  5764                           ;main.c: 326:    WaitMs(4000);
  5765  010756  0EA0               	movlw	160
  5766  010758  6EE6               	movwf	postinc1,c
  5767  01075A  0E0F               	movlw	15
  5768  01075C  6EE6               	movwf	postinc1,c
  5769  01075E  ECAC  F00A         	call	_WaitMs	;wreg free
  5770                           
  5771                           ;main.c: 327:    V.sensor_set = get_switch(SCALIB);
  5772  010762  0E04               	movlw	4
  5773  010764  6EE6               	movwf	postinc1,c
  5774  010766  ECBF  F00B         	call	_get_switch	;wreg free
  5775  01076A  5001               	movf	btemp^0,w,c
  5776  01076C  B4D8               	btfsc	status,2,c
  5777  01076E  D002               	goto	u16720
  5778  010770  0E01               	movlw	1
  5779  010772  D001               	goto	u16730
  5780  010774                     u16720:
  5781  010774  0E00               	movlw	0
  5782  010776                     u16730:
  5783  010776  0101               	movlb	1	; () banked
  5784  010778  6FAE               	movwf	(_V+174)& (0+255),b	;volatile
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;main.c: 328:    WaitMs(1000);
  5788  01077A  0EE8               	movlw	232
  5789  01077C  6EE6               	movwf	postinc1,c
  5790  01077E  0E03               	movlw	3
  5791  010780  6EE6               	movwf	postinc1,c
  5792  010782  ECAC  F00A         	call	_WaitMs	;wreg free
  5793                           
  5794                           ;main.c: 329:    if (V.sensor_set && get_switch(SCALIB)) {
  5795  010786  0101               	movlb	1	; () banked
  5796  010788  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
  5797  01078A  B4D8               	btfsc	status,2,c
  5798  01078C  D00F               	goto	l17137
  5799                           
  5800                           ; BSR set to: 1
  5801  01078E  0E04               	movlw	4
  5802  010790  6EE6               	movwf	postinc1,c
  5803  010792  ECBF  F00B         	call	_get_switch	;wreg free
  5804  010796  5001               	movf	btemp^0,w,c
  5805  010798  B4D8               	btfsc	status,2,c
  5806  01079A  D008               	goto	l17137
  5807                           
  5808                           ;main.c: 330:     current_sensor_cal();
  5809  01079C  EC98  F0C6         	call	_current_sensor_cal	;wreg free
  5810                           
  5811                           ;main.c: 331:     WaitMs(4000);
  5812  0107A0  0EA0               	movlw	160
  5813  0107A2  6EE6               	movwf	postinc1,c
  5814  0107A4  0E0F               	movlw	15
  5815  0107A6  6EE6               	movwf	postinc1,c
  5816  0107A8  ECAC  F00A         	call	_WaitMs	;wreg free
  5817  0107AC                     l17137:
  5818                           
  5819                           ;main.c: 333:    V.sensor_set = 0;
  5820  0107AC  0101               	movlb	1	; () banked
  5821  0107AE  6BAE               	clrf	(_V+174)& (0+255),b	;volatile
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;main.c: 334:    V.system_stable = 1;
  5825  0107B0  0E01               	movlw	1
  5826  0107B2  6FAF               	movwf	(_V+175)& (0+255),b	;volatile
  5827                           
  5828                           ;main.c: 335:    break;
  5829  0107B4  D01C               	goto	l17145
  5830  0107B6                     l1466:
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;main.c: 341:    P.SYSTEM_STABLE = 1;
  5834  0107B6  0100               	movlb	0	; () banked
  5835  0107B8  81A3               	bsf	(_P+1)& (0+255),0,b	;volatile
  5836                           
  5837                           ;main.c: 342:    break;
  5838  0107BA  D019               	goto	l17145
  5839  0107BC                     l1468:
  5840                           
  5841                           ; BSR set to: 1
  5842                           ;main.c: 345:    V.ui_state = UI_STATE_INIT;
  5843  0107BC  6B00               	clrf	_V& (0+255),b	;volatile
  5844                           
  5845                           ;main.c: 346:    break;
  5846  0107BE  D017               	goto	l17145
  5847  0107C0                     l17143:
  5848  0107C0  0101               	movlb	1	; () banked
  5849  0107C2  5100               	movf	_V& (0+255),w,b	;volatile
  5850  0107C4  6E0B               	movwf	(btemp+10)^0,c
  5851  0107C6  6A0C               	clrf	(btemp+11)^0,c
  5852                           
  5853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5854                           ; Switch size 1, requested type "simple"
  5855                           ; Number of cases is 1, Range of values is 0 to 0
  5856                           ; switch strategies available:
  5857                           ; Name         Instructions Cycles
  5858                           ; simple_byte            4     3 (average)
  5859                           ;	Chosen strategy is simple_byte
  5860  0107C8  500C               	movf	(btemp+11)^0,w,c
  5861  0107CA  0A00               	xorlw	0	; case 0
  5862  0107CC  A4D8               	btfss	status,2,c
  5863  0107CE  D7F6               	goto	l1468
  5864                           
  5865                           ; BSR set to: 1
  5866                           ; Switch size 1, requested type "simple"
  5867                           ; Number of cases is 5, Range of values is 0 to 5
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte           16     9 (average)
  5871                           ;	Chosen strategy is simple_byte
  5872  0107D0  500B               	movf	(btemp+10)^0,w,c
  5873  0107D2  0A00               	xorlw	0	; case 0
  5874  0107D4  B4D8               	btfsc	status,2,c
  5875  0107D6  D450               	goto	l16995
  5876  0107D8  0A01               	xorlw	1	; case 1
  5877  0107DA  B4D8               	btfsc	status,2,c
  5878  0107DC  D008               	goto	l17145
  5879  0107DE  0A02               	xorlw	2	; case 3
  5880  0107E0  B4D8               	btfsc	status,2,c
  5881  0107E2  D005               	goto	l17145
  5882  0107E4  0A07               	xorlw	7	; case 4
  5883  0107E6  B4D8               	btfsc	status,2,c
  5884  0107E8  D7E6               	goto	l1466
  5885  0107EA  0A01               	xorlw	1	; case 5
  5886  0107EC  D7E7               	goto	l1468
  5887  0107EE                     l17145:
  5888                           
  5889                           ;main.c: 349:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5890  0107EE  0E01               	movlw	1
  5891  0107F0  6EE6               	movwf	postinc1,c
  5892  0107F2  EC2B  F00C         	call	_TimerDone	;wreg free
  5893  0107F6  5001               	movf	btemp^0,w,c
  5894  0107F8  B4D8               	btfsc	status,2,c
  5895  0107FA  D013               	goto	l17157
  5896  0107FC  EC45  F00F         	call	_check_adc_scan	;wreg free
  5897  010800  5001               	movf	btemp^0,w,c
  5898  010802  B4D8               	btfsc	status,2,c
  5899  010804  D00E               	goto	l17157
  5900                           
  5901                           ;main.c: 353:    convert_adc_data();
  5902  010806  EC67  F0FD         	call	_convert_adc_data	;wreg free
  5903                           
  5904                           ;main.c: 357:    clear_adc_scan();
  5905  01080A  EC5C  F00F         	call	_clear_adc_scan	;wreg free
  5906                           
  5907                           ; BSR set to: 2
  5908                           ;main.c: 358:    start_adc_scan();
  5909  01080E  EC26  F006         	call	_start_adc_scan	;wreg free
  5910                           
  5911                           ;main.c: 359:    StartTimer(TMR_ADC, 200);
  5912  010812  0EC8               	movlw	200
  5913  010814  6EE6               	movwf	postinc1,c
  5914  010816  0E00               	movlw	0
  5915  010818  6EE6               	movwf	postinc1,c
  5916  01081A  0E01               	movlw	1
  5917  01081C  6EE6               	movwf	postinc1,c
  5918  01081E  ECBA  F009         	call	_StartTimer	;wreg free
  5919  010822                     l17157:
  5920                           
  5921                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  5922                           
  5923                           ;main.c: 362:   if (V.ticks) {
  5924  010822  0E0A               	movlw	10
  5925  010824  6EE6               	movwf	postinc1,c
  5926  010826  EC2B  F00C         	call	_TimerDone	;wreg free
  5927  01082A  5001               	movf	btemp^0,w,c
  5928  01082C  B4D8               	btfsc	status,2,c
  5929  01082E  EF34  F089         	goto	l17263
  5930                           
  5931                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  5932  010832  0E09               	movlw	9
  5933  010834  6EE6               	movwf	postinc1,c
  5934  010836  EC2B  F00C         	call	_TimerDone	;wreg free
  5935  01083A  5001               	movf	btemp^0,w,c
  5936  01083C  B4D8               	btfsc	status,2,c
  5937  01083E  D004               	goto	l17165
  5938                           
  5939                           ;main.c: 368:     set_display_info(DIS_STR);
  5940  010840  0E00               	movlw	0
  5941  010842  6EE6               	movwf	postinc1,c
  5942  010844  EC51  F00E         	call	_set_display_info	;wreg free
  5943  010848                     l17165:
  5944                           
  5945                           ;main.c: 370:    calc_model_data();
  5946  010848  ECD2  F0C8         	call	_calc_model_data	;wreg free
  5947                           
  5948                           ; BSR set to: 57
  5949                           ;main.c: 371:    if (C.dupdate) {
  5950  01084C  EE22  F23E         	lfsr	2,_C+319	;volatile
  5951  010850  50DF               	movf	indf2,w,c
  5952  010852  B4D8               	btfsc	status,2,c
  5953  010854  D070               	goto	l17189
  5954                           
  5955                           ; BSR set to: 57
  5956                           ;main.c: 372:     C.dupdate = 0;
  5957  010856  0E00               	movlw	0
  5958  010858  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
  5959                           
  5960                           ; BSR set to: 57
  5961                           ;main.c: 373:     load_hist_data();
  5962  01085E  EC7B  F00E         	call	_load_hist_data	;wreg free
  5963                           
  5964                           ; BSR set to: 57
  5965                           ;main.c: 374:     update_hist_data(0, &C.hist[0]);
  5966  010862  0EB8               	movlw	low (_C+185)
  5967  010864  6EE6               	movwf	postinc1,c
  5968  010866  0E09               	movlw	high (_C+185)
  5969  010868  6EE6               	movwf	postinc1,c
  5970  01086A  0E00               	movlw	0
  5971  01086C  6EE6               	movwf	postinc1,c
  5972  01086E  ECB7  F004         	call	_update_hist_data	;wreg free
  5973                           
  5974                           ;main.c: 375:     write_cal_data();
  5975  010872  EC32  F0F0         	call	_write_cal_data	;wreg free
  5976                           
  5977                           ;main.c: 376:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  5978  010876  0E33               	movlw	low STR_22
  5979  010878  6EE6               	movwf	postinc1,c
  5980  01087A  0EFF               	movlw	high STR_22
  5981  01087C  6EE6               	movwf	postinc1,c
  5982  01087E  0E00               	movlw	0
  5983  010880  6EE6               	movwf	postinc1,c
  5984  010882  0E00               	movlw	0
  5985  010884  6EE6               	movwf	postinc1,c
  5986  010886  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  5987  01088A  0060  F007  FFE6   	movff	btemp,postinc1
  5988  010890  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5989  010896  0E04               	movlw	4
  5990  010898  6EE6               	movwf	postinc1,c
  5991  01089A  EC42  F0F7         	call	_sprintf	;wreg free
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;main.c: 377:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  5995  01089E  0ECE               	movlw	low STR_23
  5996  0108A0  6EE6               	movwf	postinc1,c
  5997  0108A2  0EFD               	movlw	high STR_23
  5998  0108A4  6EE6               	movwf	postinc1,c
  5999  0108A6  0E00               	movlw	0
  6000  0108A8  6EE6               	movwf	postinc1,c
  6001  0108AA  0E01               	movlw	1
  6002  0108AC  6EE6               	movwf	postinc1,c
  6003  0108AE  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6004  0108B2  0060  F007  FFE6   	movff	btemp,postinc1
  6005  0108B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6006  0108BE  0E04               	movlw	4
  6007  0108C0  6EE6               	movwf	postinc1,c
  6008  0108C2  EC42  F0F7         	call	_sprintf	;wreg free
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;main.c: 378:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", V.ticks, C.hist[0
      +                          ].updates);
  6012  0108C6  EE22  F1E9         	lfsr	2,_C+234	;volatile
  6013  0108CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6014  0108D0  006F FF7B FFE6     	movff	postinc2,postinc1
  6015  0108D6  006F FF7B FFE6     	movff	postinc2,postinc1
  6016  0108DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6017  0108E2  0060  F607  FFE6   	movff	_V+129,postinc1
  6018  0108E8  0060  F60B  FFE6   	movff	_V+130,postinc1
  6019  0108EE  0060  F60F  FFE6   	movff	_V+131,postinc1
  6020  0108F4  0060  F613  FFE6   	movff	_V+132,postinc1
  6021  0108FA  0EA0               	movlw	low STR_24
  6022  0108FC  6EE6               	movwf	postinc1,c
  6023  0108FE  0EFE               	movlw	high STR_24
  6024  010900  6EE6               	movwf	postinc1,c
  6025  010902  0E00               	movlw	0
  6026  010904  6EE6               	movwf	postinc1,c
  6027  010906  0E02               	movlw	2
  6028  010908  6EE6               	movwf	postinc1,c
  6029  01090A  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6030  01090E  0060  F007  FFE6   	movff	btemp,postinc1
  6031  010914  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6032  01091A  0E0C               	movlw	12
  6033  01091C  6EE6               	movwf	postinc1,c
  6034  01091E  EC42  F0F7         	call	_sprintf	;wreg free
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;main.c: 379:     update_lcd(0);
  6038  010922  0E00               	movlw	0
  6039  010924  6EE6               	movwf	postinc1,c
  6040  010926  ECBA  F0F6         	call	_update_lcd	;wreg free
  6041                           
  6042                           ;main.c: 380:     WaitMs(2000);
  6043  01092A  0ED0               	movlw	208
  6044  01092C  6EE6               	movwf	postinc1,c
  6045  01092E  0E07               	movlw	7
  6046  010930  6EE6               	movwf	postinc1,c
  6047  010932  ECAC  F00A         	call	_WaitMs	;wreg free
  6048  010936                     l17189:
  6049                           
  6050                           ;main.c: 388:     hid_display(&H);
  6051  010936  0EC0               	movlw	low _H
  6052  010938  6EE6               	movwf	postinc1,c
  6053  01093A  0E01               	movlw	high _H
  6054  01093C  6EE6               	movwf	postinc1,c
  6055  01093E  EC44  F0E3         	call	_hid_display	;wreg free
  6056                           
  6057                           ;main.c: 389:     switch (H.hid_display) {
  6058  010942  EFC8  F088         	goto	l17233
  6059  010946                     l1477:
  6060                           
  6061                           ; BSR set to: 1
  6062                           ;main.c: 391:      V.calib = 0;
  6063  010946  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6064                           
  6065                           ; BSR set to: 1
  6066                           ;main.c: 392:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  6067  010948  EE22  F23D         	lfsr	2,_C+318	;volatile
  6068  01094C  50DF               	movf	indf2,w,c
  6069  01094E  A4D8               	btfss	status,2,c
  6070  010950  D002               	goto	l17195
  6071                           
  6072                           ; BSR set to: 1
  6073  010952  0E20               	movlw	32
  6074  010954  D001               	goto	L1
  6075  010956                     l17195:
  6076                           
  6077                           ; BSR set to: 1
  6078  010956  0E44               	movlw	68
  6079  010958                     L1:
  6080  010958  6E0B               	movwf	(btemp+10)^0,c
  6081  01095A  0E00               	movlw	0
  6082  01095C  6E0C               	movwf	(btemp+11)^0,c
  6083                           
  6084                           ;stkvar	_main$4019 @ sp[(-17)+2]
  6085  01095E  0EF1               	movlw	-15
  6086  010960  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6087  010966  0EF2               	movlw	-14
  6088  010968  0060  F033  FFE3   	movff	btemp+11,plusw1
  6089                           
  6090                           ; BSR set to: 1
  6091  01096E  EE22  F17B         	lfsr	2,_C+124	;volatile
  6092  010972  006F FF7B FFE6     	movff	postinc2,postinc1
  6093  010978  006F FF7B FFE6     	movff	postinc2,postinc1
  6094  01097E  006F FF7B FFE6     	movff	postinc2,postinc1
  6095  010984  006F FF7B FFE6     	movff	postinc2,postinc1
  6096                           
  6097                           ;stkvar	_main$4019 @ sp[(-21)+2]
  6098  01098A  0EED               	movlw	-19
  6099  01098C  006F FF8F FFE6     	movff	plusw1,postinc1
  6100  010992  006F FF8F FFE6     	movff	plusw1,postinc1
  6101  010998  0EE1               	movlw	low STR_28
  6102  01099A  6EE6               	movwf	postinc1,c
  6103  01099C  0EFC               	movlw	high STR_28
  6104  01099E  6EE6               	movwf	postinc1,c
  6105  0109A0  0E00               	movlw	0
  6106  0109A2  6EE6               	movwf	postinc1,c
  6107  0109A4  0E00               	movlw	0
  6108  0109A6  6EE6               	movwf	postinc1,c
  6109  0109A8  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6110  0109AC  0060  F007  FFE6   	movff	btemp,postinc1
  6111  0109B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6112  0109B8  0E0A               	movlw	10
  6113  0109BA  6EE6               	movwf	postinc1,c
  6114  0109BC  EC42  F0F7         	call	_sprintf	;wreg free
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;main.c: 393:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  6118  0109C0  EE22  F173         	lfsr	2,_C+116	;volatile
  6119  0109C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  0109CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  0109D0  006F FF7B FFE6     	movff	postinc2,postinc1
  6122  0109D6  006F FF7B FFE6     	movff	postinc2,postinc1
  6123  0109DC  0ECB               	movlw	low STR_29
  6124  0109DE  6EE6               	movwf	postinc1,c
  6125  0109E0  0EFC               	movlw	high STR_29
  6126  0109E2  6EE6               	movwf	postinc1,c
  6127  0109E4  0E00               	movlw	0
  6128  0109E6  6EE6               	movwf	postinc1,c
  6129  0109E8  0E01               	movlw	1
  6130  0109EA  6EE6               	movwf	postinc1,c
  6131  0109EC  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6132  0109F0  0060  F007  FFE6   	movff	btemp,postinc1
  6133  0109F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6134  0109FC  0E08               	movlw	8
  6135  0109FE  6EE6               	movwf	postinc1,c
  6136  010A00  EC42  F0F7         	call	_sprintf	;wreg free
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;main.c: 394:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  6140  010A04  EE22  F177         	lfsr	2,_C+120	;volatile
  6141  010A08  006F FF7B FFE6     	movff	postinc2,postinc1
  6142  010A0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6143  010A14  006F FF7B FFE6     	movff	postinc2,postinc1
  6144  010A1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6145  010A20  0EB5               	movlw	low STR_30
  6146  010A22  6EE6               	movwf	postinc1,c
  6147  010A24  0EFC               	movlw	high STR_30
  6148  010A26  6EE6               	movwf	postinc1,c
  6149  010A28  0E00               	movlw	0
  6150  010A2A  6EE6               	movwf	postinc1,c
  6151  010A2C  0E02               	movlw	2
  6152  010A2E  6EE6               	movwf	postinc1,c
  6153  010A30  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6154  010A34  0060  F007  FFE6   	movff	btemp,postinc1
  6155  010A3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6156  010A40  0E08               	movlw	8
  6157  010A42  6EE6               	movwf	postinc1,c
  6158  010A44  EC42  F0F7         	call	_sprintf	;wreg free
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  6162  010A48  EE22  F23D         	lfsr	2,_C+318	;volatile
  6163  010A4C  50DF               	movf	indf2,w,c
  6164  010A4E  A4D8               	btfss	status,2,c
  6165  010A50  D002               	goto	l17207
  6166                           
  6167                           ; BSR set to: 0
  6168  010A52  0E20               	movlw	32
  6169  010A54  D001               	goto	L2
  6170  010A56                     l17207:
  6171                           
  6172                           ; BSR set to: 0
  6173  010A56  0E44               	movlw	68
  6174  010A58                     L2:
  6175  010A58  6E0B               	movwf	(btemp+10)^0,c
  6176  010A5A  0E00               	movlw	0
  6177  010A5C  6E0C               	movwf	(btemp+11)^0,c
  6178                           
  6179                           ;stkvar	_main$4023 @ sp[(-17)+0]
  6180  010A5E  0EEF               	movlw	-17
  6181  010A60  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6182  010A66  0EF0               	movlw	-16
  6183  010A68  0060  F033  FFE3   	movff	btemp+11,plusw1
  6184                           
  6185                           ; BSR set to: 0
  6186  010A6E  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6187  010A72  006F FF7B FFE6     	movff	postinc2,postinc1
  6188  010A78  006F FF7B FFE6     	movff	postinc2,postinc1
  6189  010A7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6190  010A84  006F FF7B FFE6     	movff	postinc2,postinc1
  6191                           
  6192                           ;stkvar	_main$4023 @ sp[(-21)+0]
  6193  010A8A  0EEB               	movlw	-21
  6194  010A8C  006F FF8F FFE6     	movff	plusw1,postinc1
  6195  010A92  006F FF8F FFE6     	movff	plusw1,postinc1
  6196  010A98  0E9F               	movlw	low STR_31
  6197  010A9A  6EE6               	movwf	postinc1,c
  6198  010A9C  0EFC               	movlw	high STR_31
  6199  010A9E  6EE6               	movwf	postinc1,c
  6200  010AA0  0E01               	movlw	1
  6201  010AA2  6EE6               	movwf	postinc1,c
  6202  010AA4  0E00               	movlw	0
  6203  010AA6  6EE6               	movwf	postinc1,c
  6204  010AA8  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6205  010AAC  0060  F007  FFE6   	movff	btemp,postinc1
  6206  010AB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6207  010AB8  0E0A               	movlw	10
  6208  010ABA  6EE6               	movwf	postinc1,c
  6209  010ABC  EC42  F0F7         	call	_sprintf	;wreg free
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  6213  010AC0  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6214  010AC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6215  010ACA  006F FF7B FFE6     	movff	postinc2,postinc1
  6216  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6217  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6218  010ADC  0E89               	movlw	low STR_32
  6219  010ADE  6EE6               	movwf	postinc1,c
  6220  010AE0  0EFC               	movlw	high STR_32
  6221  010AE2  6EE6               	movwf	postinc1,c
  6222  010AE4  0E01               	movlw	1
  6223  010AE6  6EE6               	movwf	postinc1,c
  6224  010AE8  0E01               	movlw	1
  6225  010AEA  6EE6               	movwf	postinc1,c
  6226  010AEC  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6227  010AF0  0060  F007  FFE6   	movff	btemp,postinc1
  6228  010AF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6229  010AFC  0E08               	movlw	8
  6230  010AFE  6EE6               	movwf	postinc1,c
  6231  010B00  EC42  F0F7         	call	_sprintf	;wreg free
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  6235  010B04  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6236  010B08  006F FF7B FFE6     	movff	postinc2,postinc1
  6237  010B0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6238  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  6239  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6240  010B20  0E73               	movlw	low STR_33
  6241  010B22  6EE6               	movwf	postinc1,c
  6242  010B24  0EFC               	movlw	high STR_33
  6243  010B26  6EE6               	movwf	postinc1,c
  6244  010B28  0E01               	movlw	1
  6245  010B2A  6EE6               	movwf	postinc1,c
  6246  010B2C  0E02               	movlw	2
  6247  010B2E  6EE6               	movwf	postinc1,c
  6248  010B30  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6249  010B34  0060  F007  FFE6   	movff	btemp,postinc1
  6250  010B3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6251  010B40  0E08               	movlw	8
  6252  010B42  6EE6               	movwf	postinc1,c
  6253  010B44  EC42  F0F7         	call	_sprintf	;wreg free
  6254                           
  6255                           ;main.c: 399:      break;
  6256  010B48  D339               	goto	l17235
  6257  010B4A                     l1487:
  6258                           
  6259                           ; BSR set to: 1
  6260                           ;main.c: 401:      V.calib = 0;
  6261  010B4A  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;main.c: 402:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  6265  010B4C  EE22  F103         	lfsr	2,_C+4	;volatile
  6266  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  6267  010B56  006F FF7B FFE6     	movff	postinc2,postinc1
  6268  010B5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6269  010B62  006F FF7B FFE6     	movff	postinc2,postinc1
  6270  010B68  EE22  F113         	lfsr	2,_C+20	;volatile
  6271  010B6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6272  010B72  006F FF7B FFE6     	movff	postinc2,postinc1
  6273  010B78  006F FF7B FFE6     	movff	postinc2,postinc1
  6274  010B7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6275  010B84  0E39               	movlw	low STR_34
  6276  010B86  6EE6               	movwf	postinc1,c
  6277  010B88  0EFD               	movlw	high STR_34
  6278  010B8A  6EE6               	movwf	postinc1,c
  6279  010B8C  0E00               	movlw	0
  6280  010B8E  6EE6               	movwf	postinc1,c
  6281  010B90  0E00               	movlw	0
  6282  010B92  6EE6               	movwf	postinc1,c
  6283  010B94  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6284  010B98  0060  F007  FFE6   	movff	btemp,postinc1
  6285  010B9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6286  010BA4  0E0C               	movlw	12
  6287  010BA6  6EE6               	movwf	postinc1,c
  6288  010BA8  EC42  F0F7         	call	_sprintf	;wreg free
  6289                           
  6290                           ;main.c: 403:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6291  010BAC  EE22  F0FF         	lfsr	2,_C
  6292  010BB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6293  010BB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6294  010BBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6295  010BC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6296  010BC8  EE22  F10F         	lfsr	2,_C+16	;volatile
  6297  010BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6298  010BD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6299  010BD8  006F FF7B FFE6     	movff	postinc2,postinc1
  6300  010BDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6301  010BE4  0E0D               	movlw	low STR_35
  6302  010BE6  6EE6               	movwf	postinc1,c
  6303  010BE8  0EFD               	movlw	high STR_35
  6304  010BEA  6EE6               	movwf	postinc1,c
  6305  010BEC  0E00               	movlw	0
  6306  010BEE  6EE6               	movwf	postinc1,c
  6307  010BF0  0E01               	movlw	1
  6308  010BF2  6EE6               	movwf	postinc1,c
  6309  010BF4  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6310  010BF8  0060  F007  FFE6   	movff	btemp,postinc1
  6311  010BFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6312  010C04  0E0C               	movlw	12
  6313  010C06  6EE6               	movwf	postinc1,c
  6314  010C08  EC42  F0F7         	call	_sprintf	;wreg free
  6315                           
  6316                           ;main.c: 404:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6317  010C0C  EE22  F13F         	lfsr	2,_C+64	;volatile
  6318  010C10  006F FF7B FFE6     	movff	postinc2,postinc1
  6319  010C16  006F FF7B FFE6     	movff	postinc2,postinc1
  6320  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6321  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6322  010C28  EE22  F107         	lfsr	2,_C+8	;volatile
  6323  010C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6324  010C32  006F FF7B FFE6     	movff	postinc2,postinc1
  6325  010C38  006F FF7B FFE6     	movff	postinc2,postinc1
  6326  010C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6327  010C44  0E23               	movlw	low STR_36
  6328  010C46  6EE6               	movwf	postinc1,c
  6329  010C48  0EFD               	movlw	high STR_36
  6330  010C4A  6EE6               	movwf	postinc1,c
  6331  010C4C  0E00               	movlw	0
  6332  010C4E  6EE6               	movwf	postinc1,c
  6333  010C50  0E02               	movlw	2
  6334  010C52  6EE6               	movwf	postinc1,c
  6335  010C54  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6336  010C58  0060  F007  FFE6   	movff	btemp,postinc1
  6337  010C5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6338  010C64  0E0C               	movlw	12
  6339  010C66  6EE6               	movwf	postinc1,c
  6340  010C68  EC42  F0F7         	call	_sprintf	;wreg free
  6341                           
  6342                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6343  010C6C  EE22  F19F         	lfsr	2,_C+160	;volatile
  6344  010C70  006F FF7B FFE6     	movff	postinc2,postinc1
  6345  010C76  006F FF7B FFE6     	movff	postinc2,postinc1
  6346  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6347  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  6348  010C88  0E31               	movlw	low STR_37
  6349  010C8A  6EE6               	movwf	postinc1,c
  6350  010C8C  0EFC               	movlw	high STR_37
  6351  010C8E  6EE6               	movwf	postinc1,c
  6352  010C90  0E01               	movlw	1
  6353  010C92  6EE6               	movwf	postinc1,c
  6354  010C94  0E00               	movlw	0
  6355  010C96  6EE6               	movwf	postinc1,c
  6356  010C98  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6357  010C9C  0060  F007  FFE6   	movff	btemp,postinc1
  6358  010CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6359  010CA8  0E08               	movlw	8
  6360  010CAA  6EE6               	movwf	postinc1,c
  6361  010CAC  EC42  F0F7         	call	_sprintf	;wreg free
  6362                           
  6363                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6364  010CB0  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6365  010CB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6366  010CBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6367  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6368  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6369  010CCC  0E47               	movlw	low STR_38
  6370  010CCE  6EE6               	movwf	postinc1,c
  6371  010CD0  0EFC               	movlw	high STR_38
  6372  010CD2  6EE6               	movwf	postinc1,c
  6373  010CD4  0E01               	movlw	1
  6374  010CD6  6EE6               	movwf	postinc1,c
  6375  010CD8  0E01               	movlw	1
  6376  010CDA  6EE6               	movwf	postinc1,c
  6377  010CDC  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6378  010CE0  0060  F007  FFE6   	movff	btemp,postinc1
  6379  010CE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6380  010CEC  0E08               	movlw	8
  6381  010CEE  6EE6               	movwf	postinc1,c
  6382  010CF0  EC42  F0F7         	call	_sprintf	;wreg free
  6383                           
  6384                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6385  010CF4  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6386  010CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6387  010CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6388  010D04  006F FF7B FFE6     	movff	postinc2,postinc1
  6389  010D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6390  010D10  EE22  F19F         	lfsr	2,_C+160	;volatile
  6391  010D14  006F FF7B FFE6     	movff	postinc2,postinc1
  6392  010D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6393  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  6394  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  6395  010D2C  EC76  F0B5         	call	___fladd	;wreg free
  6396  010D30  0060  F007  FFE6   	movff	btemp,postinc1
  6397  010D36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6398  010D3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6399  010D42  0060  F013  FFE6   	movff	btemp+3,postinc1
  6400  010D48  0E5D               	movlw	low STR_39
  6401  010D4A  6EE6               	movwf	postinc1,c
  6402  010D4C  0EFC               	movlw	high STR_39
  6403  010D4E  6EE6               	movwf	postinc1,c
  6404  010D50  0E01               	movlw	1
  6405  010D52  6EE6               	movwf	postinc1,c
  6406  010D54  0E02               	movlw	2
  6407  010D56  6EE6               	movwf	postinc1,c
  6408  010D58  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6409  010D5C  0060  F007  FFE6   	movff	btemp,postinc1
  6410  010D62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6411  010D68  0E08               	movlw	8
  6412  010D6A  6EE6               	movwf	postinc1,c
  6413  010D6C  EC42  F0F7         	call	_sprintf	;wreg free
  6414                           
  6415                           ;main.c: 409:      break;
  6416  010D70  D225               	goto	l17235
  6417  010D72                     l1488:
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;main.c: 411:      V.calib = 0;
  6421  010D72  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6422                           
  6423                           ; BSR set to: 1
  6424                           ;main.c: 412:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6425  010D74  EE22  F17F         	lfsr	2,_C+128	;volatile
  6426  010D78  006F FF7B FFE6     	movff	postinc2,postinc1
  6427  010D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6428  010D84  006F FF7B FFE6     	movff	postinc2,postinc1
  6429  010D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  6430  010D90  0E7D               	movlw	low STR_40
  6431  010D92  6EE6               	movwf	postinc1,c
  6432  010D94  0EFB               	movlw	high STR_40
  6433  010D96  6EE6               	movwf	postinc1,c
  6434  010D98  0E00               	movlw	0
  6435  010D9A  6EE6               	movwf	postinc1,c
  6436  010D9C  0E00               	movlw	0
  6437  010D9E  6EE6               	movwf	postinc1,c
  6438  010DA0  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6439  010DA4  0060  F007  FFE6   	movff	btemp,postinc1
  6440  010DAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6441  010DB0  0E08               	movlw	8
  6442  010DB2  6EE6               	movwf	postinc1,c
  6443  010DB4  EC42  F0F7         	call	_sprintf	;wreg free
  6444                           
  6445                           ;main.c: 413:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6446  010DB8  EE22  F193         	lfsr	2,_C+148	;volatile
  6447  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6448  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6449  010DC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6450  010DCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6451  010DD4  EE22  F18F         	lfsr	2,_C+144	;volatile
  6452  010DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  6453  010DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6454  010DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  6455  010DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  6456  010DF0  0EC2               	movlw	low STR_41
  6457  010DF2  6EE6               	movwf	postinc1,c
  6458  010DF4  0EFB               	movlw	high STR_41
  6459  010DF6  6EE6               	movwf	postinc1,c
  6460  010DF8  0E00               	movlw	0
  6461  010DFA  6EE6               	movwf	postinc1,c
  6462  010DFC  0E01               	movlw	1
  6463  010DFE  6EE6               	movwf	postinc1,c
  6464  010E00  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6465  010E04  0060  F007  FFE6   	movff	btemp,postinc1
  6466  010E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6467  010E10  0E0C               	movlw	12
  6468  010E12  6EE6               	movwf	postinc1,c
  6469  010E14  EC42  F0F7         	call	_sprintf	;wreg free
  6470                           
  6471                           ;main.c: 414:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6472  010E18  EE22  F10F         	lfsr	2,_C+16	;volatile
  6473  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6474  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  6475  010E28  006F FF7B FFE6     	movff	postinc2,postinc1
  6476  010E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6477  010E34  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6478  010E38  006F FF78  F00B    	movff	postinc2,btemp+10
  6479  010E3E  006F FF74  F00C    	movff	postdec2,btemp+11
  6480  010E44  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6481  010E4A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6482  010E50  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6483  010E54  006F FF78  F00B    	movff	postinc2,btemp+10
  6484  010E5A  006F FF74  F00C    	movff	postdec2,btemp+11
  6485  010E60  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6486  010E66  0060  F033  FFE6   	movff	btemp+11,postinc1
  6487  010E6C  0E00               	movlw	0
  6488  010E6E  6EE6               	movwf	postinc1,c
  6489  010E70  0E05               	movlw	5
  6490  010E72  6EE6               	movwf	postinc1,c
  6491  010E74  EC22  F0FA         	call	_spinners	;wreg free
  6492  010E78  5001               	movf	btemp^0,w,c
  6493  010E7A  6EE6               	movwf	postinc1,c
  6494  010E7C  0E00               	movlw	0
  6495  010E7E  6EE6               	movwf	postinc1,c
  6496  010E80  0EE3               	movlw	low STR_42
  6497  010E82  6EE6               	movwf	postinc1,c
  6498  010E84  0EFA               	movlw	high STR_42
  6499  010E86  6EE6               	movwf	postinc1,c
  6500  010E88  0E00               	movlw	0
  6501  010E8A  6EE6               	movwf	postinc1,c
  6502  010E8C  0E02               	movlw	2
  6503  010E8E  6EE6               	movwf	postinc1,c
  6504  010E90  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6505  010E94  0060  F007  FFE6   	movff	btemp,postinc1
  6506  010E9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6507  010EA0  0E0E               	movlw	14
  6508  010EA2  6EE6               	movwf	postinc1,c
  6509  010EA4  EC42  F0F7         	call	_sprintf	;wreg free
  6510                           
  6511                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6512  010EA8  EE22  F187         	lfsr	2,_C+136	;volatile
  6513  010EAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6514  010EB2  006F FF7B FFE6     	movff	postinc2,postinc1
  6515  010EB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6516  010EBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6517  010EC4  0E66               	movlw	low STR_43
  6518  010EC6  6EE6               	movwf	postinc1,c
  6519  010EC8  0EFB               	movlw	high STR_43
  6520  010ECA  6EE6               	movwf	postinc1,c
  6521  010ECC  0E01               	movlw	1
  6522  010ECE  6EE6               	movwf	postinc1,c
  6523  010ED0  0E00               	movlw	0
  6524  010ED2  6EE6               	movwf	postinc1,c
  6525  010ED4  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6526  010ED8  0060  F007  FFE6   	movff	btemp,postinc1
  6527  010EDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6528  010EE4  0E08               	movlw	8
  6529  010EE6  6EE6               	movwf	postinc1,c
  6530  010EE8  EC42  F0F7         	call	_sprintf	;wreg free
  6531                           
  6532                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6533  010EEC  EE22  F229         	lfsr	2,_C+298	;volatile
  6534  010EF0  006F FF7B FFE6     	movff	postinc2,postinc1
  6535  010EF6  006F FF7B FFE6     	movff	postinc2,postinc1
  6536  010EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6537  010F02  006F FF7B FFE6     	movff	postinc2,postinc1
  6538  010F08  EE22  F235         	lfsr	2,_C+310	;volatile
  6539  010F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6540  010F12  006F FF7B FFE6     	movff	postinc2,postinc1
  6541  010F18  006F FF7B FFE6     	movff	postinc2,postinc1
  6542  010F1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6543  010F24  0E94               	movlw	low STR_44
  6544  010F26  6EE6               	movwf	postinc1,c
  6545  010F28  0EFB               	movlw	high STR_44
  6546  010F2A  6EE6               	movwf	postinc1,c
  6547  010F2C  0E01               	movlw	1
  6548  010F2E  6EE6               	movwf	postinc1,c
  6549  010F30  0E01               	movlw	1
  6550  010F32  6EE6               	movwf	postinc1,c
  6551  010F34  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6552  010F38  0060  F007  FFE6   	movff	btemp,postinc1
  6553  010F3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6554  010F44  0E0C               	movlw	12
  6555  010F46  6EE6               	movwf	postinc1,c
  6556  010F48  EC42  F0F7         	call	_sprintf	;wreg free
  6557                           
  6558                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6559  010F4C  EE22  F22D         	lfsr	2,_C+302	;volatile
  6560  010F50  006F FF7B FFE6     	movff	postinc2,postinc1
  6561  010F56  006F FF7B FFE6     	movff	postinc2,postinc1
  6562  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6563  010F62  006F FF7B FFE6     	movff	postinc2,postinc1
  6564  010F68  EE22  F239         	lfsr	2,_C+314	;volatile
  6565  010F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6566  010F72  006F FF7B FFE6     	movff	postinc2,postinc1
  6567  010F78  006F FF7B FFE6     	movff	postinc2,postinc1
  6568  010F7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6569  010F84  0EAB               	movlw	low STR_45
  6570  010F86  6EE6               	movwf	postinc1,c
  6571  010F88  0EFB               	movlw	high STR_45
  6572  010F8A  6EE6               	movwf	postinc1,c
  6573  010F8C  0E01               	movlw	1
  6574  010F8E  6EE6               	movwf	postinc1,c
  6575  010F90  0E02               	movlw	2
  6576  010F92  6EE6               	movwf	postinc1,c
  6577  010F94  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6578  010F98  0060  F007  FFE6   	movff	btemp,postinc1
  6579  010F9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6580  010FA4  0E0C               	movlw	12
  6581  010FA6  6EE6               	movwf	postinc1,c
  6582  010FA8  EC42  F0F7         	call	_sprintf	;wreg free
  6583                           
  6584                           ;main.c: 419:      break;
  6585  010FAC  D107               	goto	l17235
  6586  010FAE                     l17219:
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;main.c: 421:      if (!V.calib) {
  6590  010FAE  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  6591  010FB0  A4D8               	btfss	status,2,c
  6592  010FB2  D02D               	goto	l17223
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;main.c: 422:       lp_filter(0.0, i, -1);
  6596  010FB4  0EFF               	movlw	255
  6597  010FB6  6EE6               	movwf	postinc1,c
  6598                           
  6599                           ;stkvar	_i @ sp[(-18)+14]
  6600  010FB8  0EFC               	movlw	-4
  6601  010FBA  50E3               	movf	plusw1,w,c
  6602  010FBC  6EE6               	movwf	postinc1,c
  6603  010FBE  0E00               	movlw	0
  6604  010FC0  6EE6               	movwf	postinc1,c
  6605  010FC2  0E00               	movlw	0
  6606  010FC4  6EE6               	movwf	postinc1,c
  6607  010FC6  0E00               	movlw	0
  6608  010FC8  6EE6               	movwf	postinc1,c
  6609  010FCA  0E00               	movlw	0
  6610  010FCC  6EE6               	movwf	postinc1,c
  6611  010FCE  EC42  F0E7         	call	_lp_filter	;wreg free
  6612                           
  6613                           ;main.c: 423:       lp_filter(0.0, j, -1);
  6614  010FD2  0EFF               	movlw	255
  6615  010FD4  6EE6               	movwf	postinc1,c
  6616                           
  6617                           ;stkvar	_j @ sp[(-18)+13]
  6618  010FD6  0EFB               	movlw	-5
  6619  010FD8  50E3               	movf	plusw1,w,c
  6620  010FDA  6EE6               	movwf	postinc1,c
  6621  010FDC  0E00               	movlw	0
  6622  010FDE  6EE6               	movwf	postinc1,c
  6623  010FE0  0E00               	movlw	0
  6624  010FE2  6EE6               	movwf	postinc1,c
  6625  010FE4  0E00               	movlw	0
  6626  010FE6  6EE6               	movwf	postinc1,c
  6627  010FE8  0E00               	movlw	0
  6628  010FEA  6EE6               	movwf	postinc1,c
  6629  010FEC  EC42  F0E7         	call	_lp_filter	;wreg free
  6630                           
  6631                           ;main.c: 424:       lp_filter(0.0, k, -1);
  6632  010FF0  0EFF               	movlw	255
  6633  010FF2  6EE6               	movwf	postinc1,c
  6634                           
  6635                           ;stkvar	_k @ sp[(-18)+12]
  6636  010FF4  0EFA               	movlw	-6
  6637  010FF6  50E3               	movf	plusw1,w,c
  6638  010FF8  6EE6               	movwf	postinc1,c
  6639  010FFA  0E00               	movlw	0
  6640  010FFC  6EE6               	movwf	postinc1,c
  6641  010FFE  0E00               	movlw	0
  6642  011000  6EE6               	movwf	postinc1,c
  6643  011002  0E00               	movlw	0
  6644  011004  6EE6               	movwf	postinc1,c
  6645  011006  0E00               	movlw	0
  6646  011008  6EE6               	movwf	postinc1,c
  6647  01100A  EC42  F0E7         	call	_lp_filter	;wreg free
  6648  01100E                     l17223:
  6649                           
  6650                           ;main.c: 426:      V.calib = 1;
  6651  01100E  0E01               	movlw	1
  6652  011010  0101               	movlb	1	; () banked
  6653  011012  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  6654                           
  6655                           ; BSR set to: 1
  6656                           ;main.c: 427:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6657                           ;stkvar	_inp_index @ sp[(-17)+11]
  6658  011014  0EFA               	movlw	-6
  6659  011016  50E3               	movf	plusw1,w,c
  6660  011018  6EE6               	movwf	postinc1,c
  6661  01101A  0E00               	movlw	0
  6662  01101C  6EE6               	movwf	postinc1,c
  6663                           
  6664                           ;stkvar	_i @ sp[(-19)+14]
  6665  01101E  0EFB               	movlw	-5
  6666  011020  50E3               	movf	plusw1,w,c
  6667  011022  0D04               	mullw	4
  6668  011024  0EFF               	movlw	low _C
  6669  011026  24F3               	addwf	243,w,c
  6670  011028  6ED9               	movwf	fsr2l,c
  6671  01102A  0E08               	movlw	high _C
  6672  01102C  20F4               	addwfc	prodh,w,c
  6673  01102E  6EDA               	movwf	fsr2h,c
  6674  011030  006F FF7B FFE6     	movff	postinc2,postinc1
  6675  011036  006F FF7B FFE6     	movff	postinc2,postinc1
  6676  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6677  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6678                           
  6679                           ;stkvar	_i @ sp[(-23)+14]
  6680  011048  0EF7               	movlw	-9
  6681  01104A  50E3               	movf	plusw1,w,c
  6682  01104C  6EE6               	movwf	postinc1,c
  6683  01104E  ECC1  F00D         	call	_get_raw_result	;wreg free
  6684  011052  0060  F007  FFE6   	movff	btemp,postinc1
  6685  011058  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6686  01105E  0E4F               	movlw	low STR_46
  6687  011060  6EE6               	movwf	postinc1,c
  6688  011062  0EFD               	movlw	high STR_46
  6689  011064  6EE6               	movwf	postinc1,c
  6690  011066  0E00               	movlw	0
  6691  011068  6EE6               	movwf	postinc1,c
  6692  01106A  0E00               	movlw	0
  6693  01106C  6EE6               	movwf	postinc1,c
  6694  01106E  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6695  011072  0060  F007  FFE6   	movff	btemp,postinc1
  6696  011078  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6697  01107E  0E0C               	movlw	12
  6698  011080  6EE6               	movwf	postinc1,c
  6699  011082  EC42  F0F7         	call	_sprintf	;wreg free
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;main.c: 428:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6703                           ;stkvar	_inp_index @ sp[(-17)+11]
  6704  011086  0EFA               	movlw	-6
  6705  011088  50E3               	movf	plusw1,w,c
  6706  01108A  6E0B               	movwf	(btemp+10)^0,c
  6707  01108C  6A0C               	clrf	(btemp+11)^0,c
  6708  01108E  0E01               	movlw	1
  6709  011090  260B               	addwf	(btemp+10)^0,f,c
  6710  011092  0E00               	movlw	0
  6711  011094  220C               	addwfc	(btemp+11)^0,f,c
  6712  011096  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6713  01109C  0060  F033  FFE6   	movff	btemp+11,postinc1
  6714                           
  6715                           ;stkvar	_j @ sp[(-19)+13]
  6716  0110A2  0EFA               	movlw	-6
  6717  0110A4  50E3               	movf	plusw1,w,c
  6718  0110A6  0D04               	mullw	4
  6719  0110A8  0EFF               	movlw	low _C
  6720  0110AA  24F3               	addwf	243,w,c
  6721  0110AC  6ED9               	movwf	fsr2l,c
  6722  0110AE  0E08               	movlw	high _C
  6723  0110B0  20F4               	addwfc	prodh,w,c
  6724  0110B2  6EDA               	movwf	fsr2h,c
  6725  0110B4  006F FF7B FFE6     	movff	postinc2,postinc1
  6726  0110BA  006F FF7B FFE6     	movff	postinc2,postinc1
  6727  0110C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6728  0110C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6729                           
  6730                           ;stkvar	_j @ sp[(-23)+13]
  6731  0110CC  0EF6               	movlw	-10
  6732  0110CE  50E3               	movf	plusw1,w,c
  6733  0110D0  6EE6               	movwf	postinc1,c
  6734  0110D2  ECC1  F00D         	call	_get_raw_result	;wreg free
  6735  0110D6  0060  F007  FFE6   	movff	btemp,postinc1
  6736  0110DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6737  0110E2  0E4F               	movlw	low STR_46
  6738  0110E4  6EE6               	movwf	postinc1,c
  6739  0110E6  0EFD               	movlw	high STR_46
  6740  0110E8  6EE6               	movwf	postinc1,c
  6741  0110EA  0E00               	movlw	0
  6742  0110EC  6EE6               	movwf	postinc1,c
  6743  0110EE  0E01               	movlw	1
  6744  0110F0  6EE6               	movwf	postinc1,c
  6745  0110F2  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6746  0110F6  0060  F007  FFE6   	movff	btemp,postinc1
  6747  0110FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6748  011102  0E0C               	movlw	12
  6749  011104  6EE6               	movwf	postinc1,c
  6750  011106  EC42  F0F7         	call	_sprintf	;wreg free
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;main.c: 429:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6754                           ;stkvar	_inp_index @ sp[(-17)+11]
  6755  01110A  0EFA               	movlw	-6
  6756  01110C  50E3               	movf	plusw1,w,c
  6757  01110E  6E0B               	movwf	(btemp+10)^0,c
  6758  011110  6A0C               	clrf	(btemp+11)^0,c
  6759  011112  0E02               	movlw	2
  6760  011114  260B               	addwf	(btemp+10)^0,f,c
  6761  011116  0E00               	movlw	0
  6762  011118  220C               	addwfc	(btemp+11)^0,f,c
  6763  01111A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6764  011120  0060  F033  FFE6   	movff	btemp+11,postinc1
  6765                           
  6766                           ;stkvar	_k @ sp[(-19)+12]
  6767  011126  0EF9               	movlw	-7
  6768  011128  50E3               	movf	plusw1,w,c
  6769  01112A  0D04               	mullw	4
  6770  01112C  0EFF               	movlw	low _C
  6771  01112E  24F3               	addwf	243,w,c
  6772  011130  6ED9               	movwf	fsr2l,c
  6773  011132  0E08               	movlw	high _C
  6774  011134  20F4               	addwfc	prodh,w,c
  6775  011136  6EDA               	movwf	fsr2h,c
  6776  011138  006F FF7B FFE6     	movff	postinc2,postinc1
  6777  01113E  006F FF7B FFE6     	movff	postinc2,postinc1
  6778  011144  006F FF7B FFE6     	movff	postinc2,postinc1
  6779  01114A  006F FF7B FFE6     	movff	postinc2,postinc1
  6780                           
  6781                           ;stkvar	_k @ sp[(-23)+12]
  6782  011150  0EF5               	movlw	-11
  6783  011152  50E3               	movf	plusw1,w,c
  6784  011154  6EE6               	movwf	postinc1,c
  6785  011156  ECC1  F00D         	call	_get_raw_result	;wreg free
  6786  01115A  0060  F007  FFE6   	movff	btemp,postinc1
  6787  011160  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6788  011166  0E4F               	movlw	low STR_46
  6789  011168  6EE6               	movwf	postinc1,c
  6790  01116A  0EFD               	movlw	high STR_46
  6791  01116C  6EE6               	movwf	postinc1,c
  6792  01116E  0E00               	movlw	0
  6793  011170  6EE6               	movwf	postinc1,c
  6794  011172  0E02               	movlw	2
  6795  011174  6EE6               	movwf	postinc1,c
  6796  011176  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
  6797  01117A  0060  F007  FFE6   	movff	btemp,postinc1
  6798  011180  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6799  011186  0E0C               	movlw	12
  6800  011188  6EE6               	movwf	postinc1,c
  6801  01118A  EC42  F0F7         	call	_sprintf	;wreg free
  6802                           
  6803                           ;main.c: 430:      break;
  6804  01118E  D016               	goto	l17235
  6805  011190                     l17233:
  6806  011190  0101               	movlb	1	; () banked
  6807  011192  51C0               	movf	_H& (0+255),w,b
  6808  011194  6E0B               	movwf	(btemp+10)^0,c
  6809  011196  6A0C               	clrf	(btemp+11)^0,c
  6810                           
  6811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6812                           ; Switch size 1, requested type "simple"
  6813                           ; Number of cases is 1, Range of values is 0 to 0
  6814                           ; switch strategies available:
  6815                           ; Name         Instructions Cycles
  6816                           ; simple_byte            4     3 (average)
  6817                           ;	Chosen strategy is simple_byte
  6818  011198  500C               	movf	(btemp+11)^0,w,c
  6819  01119A  0A00               	xorlw	0	; case 0
  6820  01119C  A4D8               	btfss	status,2,c
  6821  01119E  D00E               	goto	l17235
  6822                           
  6823                           ; BSR set to: 1
  6824                           ; Switch size 1, requested type "simple"
  6825                           ; Number of cases is 4, Range of values is 0 to 3
  6826                           ; switch strategies available:
  6827                           ; Name         Instructions Cycles
  6828                           ; simple_byte           13     7 (average)
  6829                           ;	Chosen strategy is simple_byte
  6830  0111A0  500B               	movf	(btemp+10)^0,w,c
  6831  0111A2  0A00               	xorlw	0	; case 0
  6832  0111A4  B4D8               	btfsc	status,2,c
  6833  0111A6  D4D1               	goto	l1487
  6834  0111A8  0A01               	xorlw	1	; case 1
  6835  0111AA  B4D8               	btfsc	status,2,c
  6836  0111AC  EFA3  F084         	goto	l1477
  6837  0111B0  0A03               	xorlw	3	; case 2
  6838  0111B2  B4D8               	btfsc	status,2,c
  6839  0111B4  D5DE               	goto	l1488
  6840  0111B6  0A01               	xorlw	1	; case 3
  6841  0111B8  B4D8               	btfsc	status,2,c
  6842  0111BA  D6F9               	goto	l17219
  6843  0111BC                     l17235:
  6844                           
  6845                           ;main.c: 434:     clear_hid_pflags(&H);
  6846  0111BC  0EC0               	movlw	low _H
  6847  0111BE  6EE6               	movwf	postinc1,c
  6848  0111C0  0E01               	movlw	high _H
  6849  0111C2  6EE6               	movwf	postinc1,c
  6850  0111C4  ECCD  F0FF         	call	_clear_hid_pflags	;wreg free
  6851                           
  6852                           ;main.c: 436:    StartTimer(TMR_DISPLAY, 250);
  6853  0111C8  0EFA               	movlw	250
  6854  0111CA  6EE6               	movwf	postinc1,c
  6855  0111CC  0E00               	movlw	0
  6856  0111CE  6EE6               	movwf	postinc1,c
  6857  0111D0  0E0A               	movlw	10
  6858  0111D2  6EE6               	movwf	postinc1,c
  6859  0111D4  ECBA  F009         	call	_StartTimer	;wreg free
  6860                           
  6861                           ;main.c: 437:    V.enter = check_enter_button(&H);
  6862  0111D8  0EC0               	movlw	low _H
  6863  0111DA  6EE6               	movwf	postinc1,c
  6864  0111DC  0E01               	movlw	high _H
  6865  0111DE  6EE6               	movwf	postinc1,c
  6866  0111E0  EC7E  F004         	call	_check_enter_button	;wreg free
  6867  0111E4  5001               	movf	btemp^0,w,c
  6868  0111E6  0101               	movlb	1	; () banked
  6869  0111E8  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  6870                           
  6871                           ; BSR set to: 1
  6872                           ;main.c: 438:    if (V.enter && (H.hid_display != HID_AUX)) {
  6873  0111EA  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6874  0111EC  B4D8               	btfsc	status,2,c
  6875  0111EE  D011               	goto	l17249
  6876                           
  6877                           ; BSR set to: 1
  6878  0111F0  0E03               	movlw	3
  6879  0111F2  19C0               	xorwf	_H& (0+255),w,b
  6880  0111F4  B4D8               	btfsc	status,2,c
  6881  0111F6  D00D               	goto	l17249
  6882                           
  6883                           ; BSR set to: 1
  6884                           ;main.c: 439:     V.enter = 0;
  6885  0111F8  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;main.c: 440:     V.screen = ~V.screen;
  6889  0111FA  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6890  0111FC  D002               	goto	u16860
  6891  0111FE  0E01               	movlw	1
  6892  011200  D001               	goto	u16866
  6893  011202                     u16860:
  6894  011202  0E00               	movlw	0
  6895  011204                     u16866:
  6896  011204  0AFF               	xorlw	255
  6897  011206  6E0C               	movwf	(btemp+11)^0,c
  6898  011208  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  6899  01120A  180C               	xorwf	(btemp+11)^0,w,c
  6900  01120C  0BFE               	andlw	-2
  6901  01120E  180C               	xorwf	(btemp+11)^0,w,c
  6902  011210  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  6903  011212                     l17249:
  6904                           
  6905                           ; BSR set to: 1
  6906                           ;main.c: 442:    set_vterm(V.screen);
  6907  011212  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6908  011214  D002               	goto	u16870
  6909  011216  0E01               	movlw	1
  6910  011218  D001               	goto	u16876
  6911  01121A                     u16870:
  6912  01121A  0E00               	movlw	0
  6913  01121C                     u16876:
  6914  01121C  6EE6               	movwf	postinc1,c
  6915  01121E  EC42  F00E         	call	_set_vterm	;wreg free
  6916                           
  6917                           ;main.c: 443:    update_lcd(V.screen);
  6918  011222  0101               	movlb	1	; () banked
  6919  011224  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  6920  011226  D002               	goto	u16880
  6921  011228  0E01               	movlw	1
  6922  01122A  D001               	goto	u16886
  6923  01122C                     u16880:
  6924  01122C  0E00               	movlw	0
  6925  01122E                     u16886:
  6926  01122E  6EE6               	movwf	postinc1,c
  6927  011230  ECBA  F0F6         	call	_update_lcd	;wreg free
  6928                           
  6929                           ;main.c: 444:    display_history();
  6930  011234  ECB5  F0E9         	call	_display_history	;wreg free
  6931                           
  6932                           ;main.c: 446:    wait_lcd_done();
  6933  011238  ECB0  F00D         	call	_wait_lcd_done	;wreg free
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;main.c: 447:    set_dac_a(3.333);
  6937  01123C  0EDF               	movlw	223
  6938  01123E  6EE6               	movwf	postinc1,c
  6939  011240  0E4F               	movlw	79
  6940  011242  6EE6               	movwf	postinc1,c
  6941  011244  0E55               	movlw	85
  6942  011246  6EE6               	movwf	postinc1,c
  6943  011248  0E40               	movlw	64
  6944  01124A  6EE6               	movwf	postinc1,c
  6945  01124C  ECFB  F00A         	call	_set_dac_a	;wreg free
  6946                           
  6947                           ;main.c: 448:    set_dac_b(6.666);
  6948  011250  0EDF               	movlw	223
  6949  011252  6EE6               	movwf	postinc1,c
  6950  011254  0E4F               	movlw	79
  6951  011256  6EE6               	movwf	postinc1,c
  6952  011258  0ED5               	movlw	213
  6953  01125A  6EE6               	movwf	postinc1,c
  6954  01125C  0E40               	movlw	64
  6955  01125E  6EE6               	movwf	postinc1,c
  6956  011260  ECE1  F00A         	call	_set_dac_b	;wreg free
  6957                           
  6958                           ;main.c: 449:    set_dac();
  6959  011264  ECC3  F0FD         	call	_set_dac	;wreg free
  6960  011268                     l17263:
  6961                           
  6962                           ;main.c: 455:   check_help(V.flipper);
  6963  011268  0101               	movlb	1	; () banked
  6964  01126A  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6965  01126C  6EE6               	movwf	postinc1,c
  6966  01126E  EC52  F0E4         	call	_check_help	;wreg free
  6967                           
  6968                           ;main.c: 457:   if (V.enter) {
  6969  011272  0101               	movlb	1	; () banked
  6970  011274  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  6971  011276  B4D8               	btfsc	status,2,c
  6972  011278  D062               	goto	l1493
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;main.c: 458:    V.enter = 0;
  6976  01127A  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  6977                           
  6978                           ;main.c: 459:    V.calib = 0;
  6979  01127C  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  6980                           
  6981                           ; BSR set to: 1
  6982                           ;main.c: 460:    inp_index += 3;
  6983                           ;stkvar	_inp_index @ sp[(-17)+11]
  6984  01127E  0EFA               	movlw	-6
  6985  011280  006F FF8C  F001    	movff	plusw1,btemp
  6986  011286  0E03               	movlw	3
  6987  011288  2601               	addwf	btemp^0,f,c
  6988  01128A  0EFA               	movlw	-6
  6989  01128C  0060  F007  FFE3   	movff	btemp,plusw1
  6990                           
  6991                           ;main.c: 461:    if (inp_index > 9)
  6992                           ;stkvar	_inp_index @ sp[(-17)+11]
  6993  011292  0EFA               	movlw	-6
  6994  011294  006F FF8C  F001    	movff	plusw1,btemp
  6995  01129A  0E09               	movlw	9
  6996  01129C  6401               	cpfsgt	btemp^0,c
  6997  01129E  D03A               	goto	l17291
  6998                           
  6999                           ; BSR set to: 1
  7000                           ;main.c: 462:     inp_index = 0;
  7001                           ;stkvar	_inp_index @ sp[(-17)+11]
  7002  0112A0  0EFA               	movlw	-6
  7003  0112A2  6AE3               	clrf	plusw1,c
  7004  0112A4  D037               	goto	l17291
  7005  0112A6                     l17273:
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;main.c: 465:     i = C_BATT;
  7009                           ;stkvar	_i @ sp[(-17)+14]
  7010  0112A6  0EFD               	movlw	-3
  7011  0112A8  6AE3               	clrf	plusw1,c
  7012                           
  7013                           ; BSR set to: 1
  7014                           ;main.c: 466:     j = C_PV;
  7015                           ;stkvar	_j @ sp[(-17)+13]
  7016  0112AA  0EFC               	movlw	-4
  7017  0112AC  6AE3               	clrf	plusw1,c
  7018  0112AE  2AE3               	incf	plusw1,f,c
  7019                           
  7020                           ; BSR set to: 1
  7021                           ;main.c: 467:     k = V_CC;
  7022                           ;stkvar	_k @ sp[(-17)+12]
  7023  0112B0  0EFB               	movlw	-5
  7024  0112B2  6AE3               	clrf	plusw1,c
  7025  0112B4  82E3               	bsf	plusw1,1,c
  7026                           
  7027                           ;main.c: 468:     break;
  7028  0112B6  D043               	goto	l1493
  7029  0112B8                     l17279:
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;main.c: 470:     i = V_BAT;
  7033                           ;stkvar	_i @ sp[(-17)+14]
  7034  0112B8  0EFD               	movlw	-3
  7035  0112BA  6AE3               	clrf	plusw1,c
  7036  0112BC  84E3               	bsf	plusw1,2,c
  7037                           
  7038                           ;main.c: 471:     j = V_PV;
  7039                           ;stkvar	_j @ sp[(-17)+13]
  7040  0112BE  0EFC               	movlw	-4
  7041  0112C0  6AE3               	clrf	plusw1,c
  7042  0112C2  80E3               	bsf	plusw1,0,c
  7043  0112C4  84E3               	bsf	plusw1,2,c	;indir
  7044                           
  7045                           ;main.c: 472:     k = V_CBUS;
  7046                           ;stkvar	_k @ sp[(-17)+12]
  7047  0112C6  0EFB               	movlw	-5
  7048  0112C8  6AE3               	clrf	plusw1,c
  7049  0112CA  82E3               	bsf	plusw1,1,c
  7050  0112CC  84E3               	bsf	plusw1,2,c	;indir
  7051                           
  7052                           ;main.c: 473:     break;
  7053  0112CE  D037               	goto	l1493
  7054  0112D0                     l17281:
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;main.c: 475:     i = V_BBAT;
  7058                           ;stkvar	_i @ sp[(-17)+14]
  7059  0112D0  0EFD               	movlw	-3
  7060  0112D2  6AE3               	clrf	plusw1,c
  7061  0112D4  82E3               	bsf	plusw1,1,c
  7062  0112D6  86E3               	bsf	plusw1,3,c	;indir
  7063                           
  7064                           ; BSR set to: 1
  7065                           ;main.c: 476:     j = V_TEMP;
  7066  0112D8  0E0B               	movlw	11
  7067  0112DA  6E0C               	movwf	(btemp+11)^0,c
  7068                           
  7069                           ;stkvar	_j @ sp[(-17)+13]
  7070  0112DC  0EFC               	movlw	-4
  7071  0112DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;main.c: 477:     k = V_INVERTER;
  7075                           ;stkvar	_k @ sp[(-17)+12]
  7076  0112E4  0EFB               	movlw	-5
  7077  0112E6  6AE3               	clrf	plusw1,c
  7078  0112E8  84E3               	bsf	plusw1,2,c
  7079  0112EA  86E3               	bsf	plusw1,3,c	;indir
  7080                           
  7081                           ;main.c: 478:     break;
  7082  0112EC  D028               	goto	l1493
  7083  0112EE                     l17287:
  7084                           
  7085                           ; BSR set to: 1
  7086                           ;main.c: 480:     i = V_LIGHT_SENSOR;
  7087  0112EE  0E0D               	movlw	13
  7088  0112F0  6E0C               	movwf	(btemp+11)^0,c
  7089                           
  7090                           ;stkvar	_i @ sp[(-17)+14]
  7091  0112F2  0EFD               	movlw	-3
  7092  0112F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7093                           
  7094                           ;main.c: 481:     j = V_LIGHT_SENSOR;
  7095  0112FA  0E0D               	movlw	13
  7096  0112FC  6E0C               	movwf	(btemp+11)^0,c
  7097                           
  7098                           ;stkvar	_j @ sp[(-17)+13]
  7099  0112FE  0EFC               	movlw	-4
  7100  011300  0060  F033  FFE3   	movff	btemp+11,plusw1
  7101                           
  7102                           ;main.c: 482:     k = V_LIGHT_SENSOR;
  7103  011306  0E0D               	movlw	13
  7104  011308  6E0C               	movwf	(btemp+11)^0,c
  7105                           
  7106                           ;stkvar	_k @ sp[(-17)+12]
  7107  01130A  0EFB               	movlw	-5
  7108  01130C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7109                           
  7110                           ;main.c: 483:     break;
  7111  011312  D015               	goto	l1493
  7112  011314                     l17291:
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;stkvar	_inp_index @ sp[(-17)+11]
  7116  011314  0EFA               	movlw	-6
  7117  011316  50E3               	movf	plusw1,w,c
  7118  011318  6E0B               	movwf	(btemp+10)^0,c
  7119  01131A  6A0C               	clrf	(btemp+11)^0,c
  7120                           
  7121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7122                           ; Switch size 1, requested type "simple"
  7123                           ; Number of cases is 1, Range of values is 0 to 0
  7124                           ; switch strategies available:
  7125                           ; Name         Instructions Cycles
  7126                           ; simple_byte            4     3 (average)
  7127                           ;	Chosen strategy is simple_byte
  7128  01131C  500C               	movf	(btemp+11)^0,w,c
  7129  01131E  0A00               	xorlw	0	; case 0
  7130  011320  A4D8               	btfss	status,2,c
  7131  011322  D00D               	goto	l1493
  7132                           
  7133                           ; BSR set to: 1
  7134                           ; Switch size 1, requested type "simple"
  7135                           ; Number of cases is 4, Range of values is 0 to 9
  7136                           ; switch strategies available:
  7137                           ; Name         Instructions Cycles
  7138                           ; simple_byte           13     7 (average)
  7139                           ;	Chosen strategy is simple_byte
  7140  011324  500B               	movf	(btemp+10)^0,w,c
  7141  011326  0A00               	xorlw	0	; case 0
  7142  011328  B4D8               	btfsc	status,2,c
  7143  01132A  D7BD               	goto	l17273
  7144  01132C  0A03               	xorlw	3	; case 3
  7145  01132E  B4D8               	btfsc	status,2,c
  7146  011330  D7C3               	goto	l17279
  7147  011332  0A05               	xorlw	5	; case 6
  7148  011334  B4D8               	btfsc	status,2,c
  7149  011336  D7CC               	goto	l17281
  7150  011338  0A0F               	xorlw	15	; case 9
  7151  01133A  B4D8               	btfsc	status,2,c
  7152  01133C  D7D8               	goto	l17287
  7153  01133E                     l1493:
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;main.c: 492:   if (V.set_sequ) {
  7157  01133E  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  7158  011340  EFE0  F083         	goto	l17143
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;main.c: 493:    if (TimerDone(TMR_INFO)) {
  7162  011344  0E07               	movlw	7
  7163  011346  6EE6               	movwf	postinc1,c
  7164  011348  EC2B  F00C         	call	_TimerDone	;wreg free
  7165  01134C  5001               	movf	btemp^0,w,c
  7166  01134E  B4D8               	btfsc	status,2,c
  7167  011350  D00C               	goto	l17301
  7168                           
  7169                           ;main.c: 494:     V.set_sequ = 0;
  7170  011352  0101               	movlb	1	; () banked
  7171  011354  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;main.c: 495:     set_vterm(0);
  7175  011356  0E00               	movlw	0
  7176  011358  6EE6               	movwf	postinc1,c
  7177  01135A  EC42  F00E         	call	_set_vterm	;wreg free
  7178                           
  7179                           ;main.c: 496:     update_lcd(0);
  7180  01135E  0E00               	movlw	0
  7181  011360  6EE6               	movwf	postinc1,c
  7182  011362  ECBA  F0F6         	call	_update_lcd	;wreg free
  7183                           
  7184                           ;main.c: 497:    } else {
  7185  011366  EFE0  F083         	goto	l17143
  7186  01136A                     l17301:
  7187                           
  7188                           ;main.c: 498:     set_vterm(2);
  7189  01136A  0E02               	movlw	2
  7190  01136C  6EE6               	movwf	postinc1,c
  7191  01136E  EC42  F00E         	call	_set_vterm	;wreg free
  7192                           
  7193                           ;main.c: 499:     update_lcd(2);
  7194  011372  0E02               	movlw	2
  7195  011374  6EE6               	movwf	postinc1,c
  7196  011376  ECBA  F0F6         	call	_update_lcd	;wreg free
  7197  01137A  EFE0  F083         	goto	l17143
  7198  01137E                     __end_of_main:
  7199                           	opt callstack 0
  7200                           
  7201 ;; *************** function _update_hist_data *****************
  7202 ;; Defined at:
  7203 ;;		line 454 in file "daq.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  mode            1  [STACK] const _Bool 
  7206 ;;  hist            2  [STACK] PTR volatile struct hist
  7207 ;;		 -> C.hist(113), C(336), 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1  [STACK] void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7214 ;; Tracked objects:
  7215 ;;		On entry : 4/2
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:   15
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_main
  7230 ;; This function uses a reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text1
  7234  00096E                     __ptext1:
  7235                           	opt callstack 0
  7236  00096E                     _update_hist_data:
  7237                           	opt callstack 15
  7238                           
  7239                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  7240                           ;stkvar	_hist @ sp[(0)+-3]
  7241                           
  7242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7243                           ;incstack = 0
  7244  00096E  0EFD               	movlw	-3
  7245  000970  006F FF8C  F001    	movff	plusw1,btemp
  7246  000976  0EFE               	movlw	-2
  7247  000978  50E3               	movf	plusw1,w,c
  7248  00097A  1001               	iorwf	btemp^0,w,c
  7249  00097C  B4D8               	btfsc	status,2,c
  7250  00097E  D02A               	goto	l2088
  7251                           
  7252                           ;daq.c: 459:  if (mode) {
  7253                           ;stkvar	_mode @ sp[(0)+-1]
  7254  000980  0EFF               	movlw	-1
  7255  000982  50E3               	movf	plusw1,w,c
  7256  000984  B4D8               	btfsc	status,2,c
  7257  000986  D014               	goto	l14047
  7258                           
  7259                           ;daq.c: 460:   if (R.hist_save)
  7260  000988  0102               	movlb	2	; () banked
  7261  00098A  A1AE               	btfss	(_R+167)& (0+255),0,b	;volatile
  7262  00098C  D023               	goto	l2088
  7263                           
  7264                           ; BSR set to: 2
  7265                           ;daq.c: 461:    R.H = *hist;
  7266                           ;stkvar	_hist @ sp[(0)+-3]
  7267  00098E  0EFD               	movlw	-3
  7268  000990  006F FF8F FFD9     	movff	plusw1,fsr2l
  7269  000996  0EFE               	movlw	-2
  7270  000998  006F FF8F FFDA     	movff	plusw1,fsr2h
  7271  00099E  EE00  F23D         	lfsr	0,_R+54	;volatile
  7272  0009A2  0E70               	movlw	112
  7273  0009A4                     u13301:
  7274  0009A4  006F FF6F FFEB     	movff	plusw2,plusw0
  7275  0009AA  06E8               	decf	wreg,f,c
  7276  0009AC  E2FB               	bc	u13301
  7277  0009AE  D012               	goto	l2088
  7278  0009B0                     l14047:
  7279                           
  7280                           ;daq.c: 463:   *hist = R.H;
  7281  0009B0  EE20  F23D         	lfsr	2,_R+54	;volatile
  7282                           
  7283                           ;stkvar	_hist @ sp[(0)+-3]
  7284  0009B4  0EFD               	movlw	-3
  7285  0009B6  006F FF8F FFE9     	movff	plusw1,fsr0l
  7286  0009BC  0EFE               	movlw	-2
  7287  0009BE  006F FF8F FFEA     	movff	plusw1,fsr0h
  7288  0009C4  0E70               	movlw	112
  7289  0009C6                     u13311:
  7290  0009C6  006F FF6F FFEB     	movff	plusw2,plusw0
  7291  0009CC  06E8               	decf	wreg,f,c
  7292  0009CE  E2FB               	bc	u13311
  7293                           
  7294                           ;daq.c: 464:   R.hist_save = 1;
  7295  0009D0  0102               	movlb	2	; () banked
  7296  0009D2  81AE               	bsf	(_R+167)& (0+255),0,b	;volatile
  7297  0009D4                     l2088:
  7298                           
  7299                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7300  0009D4  52E5               	movf	postdec1,f,c
  7301  0009D6  52E5               	movf	postdec1,f,c
  7302  0009D8  52E5               	movf	postdec1,f,c
  7303  0009DA  0012               	return		;funcret
  7304  0009DC                     __end_of_update_hist_data:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _update_cal_data *****************
  7308 ;; Defined at:
  7309 ;;		line 435 in file "daq.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1  [STACK] void 
  7316 ;; Registers used:
  7317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/39
  7320 ;;		On exit  : 3F/2
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7327 ;;Total ram usage:        0 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:   15
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_main
  7334 ;; This function uses a reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text2
  7338  000EE2                     __ptext2:
  7339                           	opt callstack 0
  7340  000EE2                     _update_cal_data:
  7341                           	opt callstack 15
  7342                           
  7343                           ;daq.c: 437:  R = r_cal;
  7344                           
  7345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7346                           ;incstack = 0
  7347  000EE2  EE21  F100         	lfsr	2,_r_cal
  7348  000EE6  EE00  F207         	lfsr	0,_R	;volatile
  7349  000EEA  0EAA               	movlw	170
  7350  000EEC                     u13241:
  7351  000EEC  006F FF7B FFEE     	movff	postinc2,postinc0
  7352  000EF2  06E8               	decf	wreg,f,c
  7353  000EF4  E2FB               	bc	u13241
  7354  000EF6  0EAB               	movlw	171
  7355  000EF8  5ED9               	subwf	fsr2l,f,c
  7356  000EFA  5EE9               	subwf	fsr0l,f,c
  7357                           
  7358                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7359  000EFC  0102               	movlb	2	; () banked
  7360  000EFE  B3AE               	btfsc	(_R+167)& (0+255),1,b	;volatile
  7361  000F00  D008               	goto	l14033
  7362                           
  7363                           ; BSR set to: 2
  7364                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7365  000F02  0E0F               	movlw	15
  7366  000F04  6F2E               	movwf	(_R+39)& (0+255),b	;volatile
  7367  000F06  0E62               	movlw	98
  7368  000F08  6F2D               	movwf	(_R+38)& (0+255),b	;volatile
  7369                           
  7370                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7371  000F0A  0E0F               	movlw	15
  7372  000F0C  6F30               	movwf	(_R+41)& (0+255),b	;volatile
  7373  000F0E  0EA4               	movlw	164
  7374  000F10  6F2F               	movwf	(_R+40)& (0+255),b	;volatile
  7375  000F12                     l14033:
  7376                           
  7377                           ; BSR set to: 2
  7378                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7379  000F12  B5AE               	btfsc	(_R+167)& (0+255),2,b	;volatile
  7380  000F14  0012               	return	
  7381                           
  7382                           ; BSR set to: 2
  7383                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7384  000F16  0EA0               	movlw	160
  7385  000F18  6F31               	movwf	(_R+42)& (0+255),b	;volatile
  7386  000F1A  0E89               	movlw	137
  7387  000F1C  6F32               	movwf	(_R+43)& (0+255),b	;volatile
  7388  000F1E  0EB0               	movlw	176
  7389  000F20  6F33               	movwf	(_R+44)& (0+255),b	;volatile
  7390  000F22  0E3D               	movlw	61
  7391  000F24  6F34               	movwf	(_R+45)& (0+255),b	;volatile
  7392                           
  7393                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7394  000F26  0EA4               	movlw	164
  7395  000F28  6F35               	movwf	(_R+46)& (0+255),b	;volatile
  7396  000F2A  0EDE               	movlw	222
  7397  000F2C  6F36               	movwf	(_R+47)& (0+255),b	;volatile
  7398  000F2E  0E13               	movlw	19
  7399  000F30  6F37               	movwf	(_R+48)& (0+255),b	;volatile
  7400  000F32  0E3D               	movlw	61
  7401  000F34  6F38               	movwf	(_R+49)& (0+255),b	;volatile
  7402                           
  7403                           ; BSR set to: 2
  7404                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7405  000F36  0012               	return		;funcret
  7406  000F38                     __end_of_update_cal_data:
  7407                           	opt callstack 0
  7408                           
  7409 ;; *************** function _static_soc *****************
  7410 ;; Defined at:
  7411 ;;		line 118 in file "mbmc.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1  [STACK] void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr2l, fsr2h
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/2
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:   15
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;; This function uses a reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text3
  7440  000DD4                     __ptext3:
  7441                           	opt callstack 0
  7442  000DD4                     _static_soc:
  7443                           	opt callstack 15
  7444                           
  7445                           ;mbmc.c: 120:  C.runtime = 120;
  7446                           
  7447                           ; BSR set to: 2
  7448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7449                           ;incstack = 0
  7450  000DD4  0E78               	movlw	120
  7451  000DD6  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7452  000DDC  0E00               	movlw	0
  7453  000DDE  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7454                           
  7455                           ;mbmc.c: 121:  C.soc = 100;
  7456  000DE4  0E64               	movlw	100
  7457  000DE6  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7458  000DEC  0E00               	movlw	0
  7459  000DEE  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7460                           
  7461                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7462  000DF4  EE22  F18B         	lfsr	2,_C+140	;volatile
  7463  000DF8  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7464  000DFE  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7465  000E04  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7466  000E0A  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7467                           
  7468                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7469  000E10  EE22  F18F         	lfsr	2,_C+144	;volatile
  7470  000E14  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7471  000E1A  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7472  000E20  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7473  000E26  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7474                           
  7475                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7476  000E2C  0012               	return		;funcret
  7477  000E2E                     __end_of_static_soc:
  7478                           	opt callstack 0
  7479                           
  7480 ;; *************** function _start_switch_handler *****************
  7481 ;; Defined at:
  7482 ;;		line 125 in file "dio.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1  [STACK] void 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7491 ;; Tracked objects:
  7492 ;;		On entry : 3/2
  7493 ;;		On exit  : 3F/39
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7500 ;;Total ram usage:        0 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; Hardware stack levels required when called:   16
  7503 ;; This function calls:
  7504 ;;		_INT1_SetInterruptHandler
  7505 ;; This function is called by:
  7506 ;;		_main
  7507 ;; This function uses a reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text4
  7511  001BE8                     __ptext4:
  7512                           	opt callstack 0
  7513  001BE8                     _start_switch_handler:
  7514                           	opt callstack 14
  7515                           
  7516                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7517                           
  7518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7519                           ;incstack = 0
  7520  001BE8  0139               	movlb	57	; () banked
  7521  001BEA  9195               	bcf	149,0,b	;volatile
  7522                           
  7523                           ; BSR set to: 57
  7524                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7525  001BEC  0E0A               	movlw	low _switch_handler
  7526  001BEE  6EE6               	movwf	postinc1,c
  7527  001BF0  0EE3               	movlw	high _switch_handler
  7528  001BF2  6EE6               	movwf	postinc1,c
  7529  001BF4  0E01               	movlw	low (_switch_handler shr (0+16))
  7530  001BF6  6EE6               	movwf	postinc1,c
  7531  001BF8  ECB7  F00C         	call	_INT1_SetInterruptHandler	;wreg free
  7532                           
  7533                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7534  001BFC  0E02               	movlw	2
  7535  001BFE  0101               	movlb	1	; () banked
  7536  001C00  6FEC               	movwf	(_S+35)& (0+255),b	;volatile
  7537                           
  7538                           ; BSR set to: 1
  7539                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7540  001C02  0139               	movlb	57	; () banked
  7541  001C04  8195               	bsf	149,0,b	;volatile
  7542                           
  7543                           ; BSR set to: 57
  7544                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7545  001C06  0012               	return		;funcret
  7546  001C08                     __end_of_start_switch_handler:
  7547                           	opt callstack 0
  7548                           
  7549 ;; *************** function _srand *****************
  7550 ;; Defined at:
  7551 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  s               2  [STACK] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1  [STACK] void 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 3F/2
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7569 ;;Total ram usage:        0 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:   15
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_main
  7576 ;; This function uses a reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text5
  7580  00158E                     __ptext5:
  7581                           	opt callstack 0
  7582  00158E                     _srand:
  7583                           	opt callstack 15
  7584                           
  7585                           ;stkvar	_s @ sp[(0)+-2]
  7586                           
  7587                           ; BSR set to: 57
  7588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7589                           ;incstack = 0
  7590  00158E  0EFE               	movlw	-2
  7591  001590  50E3               	movf	plusw1,w,c
  7592  001592  0FFF               	addlw	255
  7593  001594  6E0B               	movwf	(btemp+10)^0,c
  7594  001596  0EFF               	movlw	-1
  7595  001598  006F FF8C  F00C    	movff	plusw1,btemp+11
  7596  00159E  0EFF               	movlw	255
  7597  0015A0  220C               	addwfc	(btemp+11)^0,f,c
  7598  0015A2  0060  F02C  F2E8   	movff	btemp+10,_seed
  7599  0015A8  0060  F030  F2E9   	movff	btemp+11,_seed+1
  7600  0015AE  0102               	movlb	2	; () banked
  7601  0015B0  6BEA               	clrf	(_seed+2)& (0+255),b
  7602  0015B2  6BEB               	clrf	(_seed+3)& (0+255),b
  7603  0015B4  6BEC               	clrf	(_seed+4)& (0+255),b
  7604  0015B6  6BED               	clrf	(_seed+5)& (0+255),b
  7605  0015B8  6BEE               	clrf	(_seed+6)& (0+255),b
  7606  0015BA  6BEF               	clrf	(_seed+7)& (0+255),b
  7607                           
  7608                           ; BSR set to: 2
  7609                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7610  0015BC  52E5               	movf	postdec1,f,c
  7611  0015BE  52E5               	movf	postdec1,f,c
  7612  0015C0  0012               	return		;funcret
  7613  0015C2                     __end_of_srand:
  7614                           	opt callstack 0
  7615                           
  7616 ;; *************** function _set_dac_b *****************
  7617 ;; Defined at:
  7618 ;;		line 306 in file "daq.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  voltage         4  [STACK] const float 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  2  [STACK] unsigned short 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:   17
  7639 ;; This function calls:
  7640 ;;		_convert_dac_raw
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;; This function uses a reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text6
  7647  0015C2                     __ptext6:
  7648                           	opt callstack 0
  7649  0015C2                     _set_dac_b:
  7650                           	opt callstack 13
  7651                           
  7652                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7653                           ;stkvar	_voltage @ sp[(0)+-4]
  7654                           
  7655                           ; BSR set to: 2
  7656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7657                           ;incstack = 0
  7658  0015C2  0EFC               	movlw	-4
  7659  0015C4  006F FF8F FFE6     	movff	plusw1,postinc1
  7660  0015CA  006F FF8F FFE6     	movff	plusw1,postinc1
  7661  0015D0  006F FF8F FFE6     	movff	plusw1,postinc1
  7662  0015D6  006F FF8F FFE6     	movff	plusw1,postinc1
  7663  0015DC  EC18  F0F5         	call	_convert_dac_raw	;wreg free
  7664  0015E0  0060  F004  F229   	movff	btemp,_R+34	;volatile
  7665  0015E6  0060  F008  F22A   	movff	btemp+1,_R+35	;volatile
  7666                           
  7667                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7668                           
  7669                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7670  0015EC  52E5               	movf	postdec1,f,c
  7671  0015EE  52E5               	movf	postdec1,f,c
  7672  0015F0  52E5               	movf	postdec1,f,c
  7673  0015F2  52E5               	movf	postdec1,f,c
  7674  0015F4  0012               	return		;funcret
  7675  0015F6                     __end_of_set_dac_b:
  7676                           	opt callstack 0
  7677                           
  7678 ;; *************** function _set_dac_a *****************
  7679 ;; Defined at:
  7680 ;;		line 297 in file "daq.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  voltage         4  [STACK] const float 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  2  [STACK] unsigned short 
  7687 ;; Registers used:
  7688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7689 ;; Tracked objects:
  7690 ;;		On entry : 3F/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:   17
  7701 ;; This function calls:
  7702 ;;		_convert_dac_raw
  7703 ;; This function is called by:
  7704 ;;		_main
  7705 ;; This function uses a reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text7
  7709  0015F6                     __ptext7:
  7710                           	opt callstack 0
  7711  0015F6                     _set_dac_a:
  7712                           	opt callstack 13
  7713                           
  7714                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7715                           ;stkvar	_voltage @ sp[(0)+-4]
  7716                           
  7717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7718                           ;incstack = 0
  7719  0015F6  0EFC               	movlw	-4
  7720  0015F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7721  0015FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7722  001604  006F FF8F FFE6     	movff	plusw1,postinc1
  7723  00160A  006F FF8F FFE6     	movff	plusw1,postinc1
  7724  001610  EC18  F0F5         	call	_convert_dac_raw	;wreg free
  7725  001614  0060  F004  F227   	movff	btemp,_R+32	;volatile
  7726  00161A  0060  F008  F228   	movff	btemp+1,_R+33	;volatile
  7727                           
  7728                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7729                           
  7730                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7731  001620  52E5               	movf	postdec1,f,c
  7732  001622  52E5               	movf	postdec1,f,c
  7733  001624  52E5               	movf	postdec1,f,c
  7734  001626  52E5               	movf	postdec1,f,c
  7735  001628  0012               	return		;funcret
  7736  00162A                     __end_of_set_dac_a:
  7737                           	opt callstack 0
  7738                           
  7739 ;; *************** function _convert_dac_raw *****************
  7740 ;; Defined at:
  7741 ;;		line 279 in file "daq.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  voltage         4  [STACK] float 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2  [STACK] unsigned short 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   16
  7762 ;; This function calls:
  7763 ;;		___fldiv
  7764 ;;		___flge
  7765 ;;		___fltol
  7766 ;; This function is called by:
  7767 ;;		_set_dac_a
  7768 ;;		_set_dac_b
  7769 ;; This function uses a reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text8
  7773  01EA30                     __ptext8:
  7774                           	opt callstack 0
  7775  01EA30                     _convert_dac_raw:
  7776                           	opt callstack 13
  7777                           
  7778                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7779                           
  7780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7781                           ;incstack = 0
  7782  01EA30  0E6F               	movlw	111
  7783  01EA32  6EE6               	movwf	postinc1,c
  7784  01EA34  0E12               	movlw	18
  7785  01EA36  6EE6               	movwf	postinc1,c
  7786  01EA38  0E83               	movlw	131
  7787  01EA3A  6EE6               	movwf	postinc1,c
  7788  01EA3C  0E3A               	movlw	58
  7789  01EA3E  6EE6               	movwf	postinc1,c
  7790                           
  7791                           ;stkvar	_voltage @ sp[(-4)+-4]
  7792  01EA40  0EF8               	movlw	-8
  7793  01EA42  006F FF8F FFE6     	movff	plusw1,postinc1
  7794  01EA48  006F FF8F FFE6     	movff	plusw1,postinc1
  7795  01EA4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7796  01EA54  006F FF8F FFE6     	movff	plusw1,postinc1
  7797  01EA5A  EC23  F0EE         	call	___flge	;wreg free
  7798  01EA5E  B001               	btfsc	btemp& (0+255),0,c
  7799  01EA60  D018               	goto	l13567
  7800                           
  7801                           ;daq.c: 285:   voltage = 0.001;
  7802  01EA62  0E6F               	movlw	111
  7803  01EA64  6E09               	movwf	(btemp+8)^0,c
  7804  01EA66  0E12               	movlw	18
  7805  01EA68  6E0A               	movwf	(btemp+9)^0,c
  7806  01EA6A  0E83               	movlw	131
  7807  01EA6C  6E0B               	movwf	(btemp+10)^0,c
  7808  01EA6E  0E3A               	movlw	58
  7809  01EA70  6E0C               	movwf	(btemp+11)^0,c
  7810                           
  7811                           ;stkvar	_voltage @ sp[(0)+-4]
  7812  01EA72  0EFC               	movlw	-4
  7813  01EA74  0060  F027  FFE3   	movff	btemp+8,plusw1
  7814  01EA7A  0EFD               	movlw	-3
  7815  01EA7C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7816  01EA82  0EFE               	movlw	-2
  7817  01EA84  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7818  01EA8A  0EFF               	movlw	-1
  7819  01EA8C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7820  01EA92                     l13567:
  7821                           
  7822                           ;daq.c: 286:  if (voltage > 10.0)
  7823                           ;stkvar	_voltage @ sp[(0)+-4]
  7824  01EA92  0EFC               	movlw	-4
  7825  01EA94  006F FF8F FFE6     	movff	plusw1,postinc1
  7826  01EA9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7827  01EAA0  006F FF8F FFE6     	movff	plusw1,postinc1
  7828  01EAA6  006F FF8F FFE6     	movff	plusw1,postinc1
  7829  01EAAC  0E00               	movlw	0
  7830  01EAAE  6EE6               	movwf	postinc1,c
  7831  01EAB0  0E00               	movlw	0
  7832  01EAB2  6EE6               	movwf	postinc1,c
  7833  01EAB4  0E20               	movlw	32
  7834  01EAB6  6EE6               	movwf	postinc1,c
  7835  01EAB8  0E41               	movlw	65
  7836  01EABA  6EE6               	movwf	postinc1,c
  7837  01EABC  EC23  F0EE         	call	___flge	;wreg free
  7838  01EAC0  B001               	btfsc	btemp& (0+255),0,c
  7839  01EAC2  D018               	goto	l13571
  7840                           
  7841                           ;daq.c: 287:   voltage = 10.0;
  7842  01EAC4  0E00               	movlw	0
  7843  01EAC6  6E09               	movwf	(btemp+8)^0,c
  7844  01EAC8  0E00               	movlw	0
  7845  01EACA  6E0A               	movwf	(btemp+9)^0,c
  7846  01EACC  0E20               	movlw	32
  7847  01EACE  6E0B               	movwf	(btemp+10)^0,c
  7848  01EAD0  0E41               	movlw	65
  7849  01EAD2  6E0C               	movwf	(btemp+11)^0,c
  7850                           
  7851                           ;stkvar	_voltage @ sp[(0)+-4]
  7852  01EAD4  0EFC               	movlw	-4
  7853  01EAD6  0060  F027  FFE3   	movff	btemp+8,plusw1
  7854  01EADC  0EFD               	movlw	-3
  7855  01EADE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7856  01EAE4  0EFE               	movlw	-2
  7857  01EAE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7858  01EAEC  0EFF               	movlw	-1
  7859  01EAEE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7860  01EAF4                     l13571:
  7861                           
  7862                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7863  01EAF4  0EF6               	movlw	246
  7864  01EAF6  6EE6               	movwf	postinc1,c
  7865  01EAF8  0E09               	movlw	9
  7866  01EAFA  6EE6               	movwf	postinc1,c
  7867  01EAFC  0E20               	movlw	32
  7868  01EAFE  6EE6               	movwf	postinc1,c
  7869  01EB00  0E3B               	movlw	59
  7870  01EB02  6EE6               	movwf	postinc1,c
  7871                           
  7872                           ;stkvar	_voltage @ sp[(-4)+-4]
  7873  01EB04  0EF8               	movlw	-8
  7874  01EB06  006F FF8F FFE6     	movff	plusw1,postinc1
  7875  01EB0C  006F FF8F FFE6     	movff	plusw1,postinc1
  7876  01EB12  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  01EB18  006F FF8F FFE6     	movff	plusw1,postinc1
  7878  01EB1E  ECB2  F0BC         	call	___fldiv	;wreg free
  7879  01EB22  0060  F007  FFE6   	movff	btemp,postinc1
  7880  01EB28  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7881  01EB2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7882  01EB34  0060  F013  FFE6   	movff	btemp+3,postinc1
  7883  01EB3A  ECB7  F0EC         	call	___fltol	;wreg free
  7884                           
  7885                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7886  01EB3E  52E5               	movf	postdec1,f,c
  7887  01EB40  52E5               	movf	postdec1,f,c
  7888  01EB42  52E5               	movf	postdec1,f,c
  7889  01EB44  52E5               	movf	postdec1,f,c
  7890  01EB46  0012               	return		;funcret
  7891  01EB48                     __end_of_convert_dac_raw:
  7892                           	opt callstack 0
  7893                           
  7894 ;; *************** function _set_dac *****************
  7895 ;; Defined at:
  7896 ;;		line 255 in file "daq.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1  [STACK] void 
  7903 ;; Registers used:
  7904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7914 ;;Total ram usage:        0 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:   16
  7917 ;; This function calls:
  7918 ;;		_SPI1_Exchange8bit
  7919 ;;		_dac_spi_control
  7920 ;; This function is called by:
  7921 ;;		_main
  7922 ;; This function uses a reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text9
  7926  01FB86                     __ptext9:
  7927                           	opt callstack 0
  7928  01FB86                     _set_dac:
  7929                           	opt callstack 14
  7930                           
  7931                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7932                           
  7933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7934                           ;incstack = 0
  7935  01FB86  013D               	movlb	61	; () banked
  7936  01FB88  AB17               	btfss	23,5,b	;volatile
  7937  01FB8A  D7FD               	goto	_set_dac
  7938                           
  7939                           ; BSR set to: 61
  7940                           
  7941                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7942  01FB8C  84BC               	bsf	188,2,c	;volatile
  7943                           
  7944                           ; BSR set to: 61
  7945                           
  7946                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7947  01FB8E  80BC               	bsf	188,0,c	;volatile
  7948                           
  7949                           ; BSR set to: 61
  7950                           ;daq.c: 260:  dac_spi_control(1);
  7951  01FB90  0E01               	movlw	1
  7952  01FB92  6EE6               	movwf	postinc1,c
  7953  01FB94  EC05  F004         	call	_dac_spi_control	;wreg free
  7954                           
  7955                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7956  01FB98  C227  F22B         	movff	_R+32,_R+36	;volatile
  7957                           
  7958                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7959  01FB9C  EE20  F227         	lfsr	2,_R+32	;volatile
  7960  01FBA0  006F FF78  F00B    	movff	postinc2,btemp+10
  7961  01FBA6  006F FF74  F00C    	movff	postdec2,btemp+11
  7962  01FBAC  0060  F030  F00B   	movff	btemp+11,btemp+10
  7963  01FBB2  6A0C               	clrf	(btemp+11)^0,c
  7964  01FBB4  0E0F               	movlw	15
  7965  01FBB6  160B               	andwf	(btemp+10)^0,f,c
  7966  01FBB8  0102               	movlb	2	; () banked
  7967  01FBBA  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7968  01FBBC  180B               	xorwf	(btemp+10)^0,w,c
  7969  01FBBE  0BF0               	andlw	-16
  7970  01FBC0  180B               	xorwf	(btemp+10)^0,w,c
  7971  01FBC2  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7972                           
  7973                           ; BSR set to: 2
  7974                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  7975  01FBC4  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7976  01FBC6  0B0F               	andlw	-241
  7977  01FBC8  0940               	iorlw	64
  7978  01FBCA  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  7979                           
  7980                           ; BSR set to: 2
  7981  01FBCC  90BF               	bcf	191,0,c	;volatile
  7982                           
  7983                           ; BSR set to: 2
  7984                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7985  01FBCE  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  7986  01FBD0  6EE6               	movwf	postinc1,c
  7987  01FBD2  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  7988                           
  7989                           ; BSR set to: 57
  7990                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7991  01FBD6  0102               	movlb	2	; () banked
  7992  01FBD8  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  7993  01FBDA  6EE6               	movwf	postinc1,c
  7994  01FBDC  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  7995                           
  7996                           ; BSR set to: 57
  7997  01FBE0  80BF               	bsf	191,0,c	;volatile
  7998                           
  7999                           ; BSR set to: 57
  8000                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8001  01FBE2  C229  F22B         	movff	_R+34,_R+36	;volatile
  8002                           
  8003                           ; BSR set to: 57
  8004                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8005  01FBE6  EE20  F229         	lfsr	2,_R+34	;volatile
  8006  01FBEA  006F FF78  F00B    	movff	postinc2,btemp+10
  8007  01FBF0  006F FF74  F00C    	movff	postdec2,btemp+11
  8008  01FBF6  0060  F030  F00B   	movff	btemp+11,btemp+10
  8009  01FBFC  6A0C               	clrf	(btemp+11)^0,c
  8010  01FBFE  0E0F               	movlw	15
  8011  01FC00  160B               	andwf	(btemp+10)^0,f,c
  8012  01FC02  0102               	movlb	2	; () banked
  8013  01FC04  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8014  01FC06  180B               	xorwf	(btemp+10)^0,w,c
  8015  01FC08  0BF0               	andlw	-16
  8016  01FC0A  180B               	xorwf	(btemp+10)^0,w,c
  8017  01FC0C  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8018                           
  8019                           ; BSR set to: 2
  8020                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  8021  01FC0E  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8022  01FC10  0B0F               	andlw	-241
  8023  01FC12  0950               	iorlw	80
  8024  01FC14  6F2C               	movwf	(_R+37)& (0+255),b	;volatile
  8025                           
  8026                           ; BSR set to: 2
  8027  01FC16  90BF               	bcf	191,0,c	;volatile
  8028                           
  8029                           ; BSR set to: 2
  8030                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8031  01FC18  512C               	movf	(_R+37)& (0+255),w,b	;volatile
  8032  01FC1A  6EE6               	movwf	postinc1,c
  8033  01FC1C  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8034                           
  8035                           ; BSR set to: 57
  8036                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8037  01FC20  0102               	movlb	2	; () banked
  8038  01FC22  512B               	movf	(_R+36)& (0+255),w,b	;volatile
  8039  01FC24  6EE6               	movwf	postinc1,c
  8040  01FC26  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8041  01FC2A                     l2025:
  8042  01FC2A  013D               	movlb	61	; () banked
  8043  01FC2C  AB17               	btfss	23,5,b	;volatile
  8044  01FC2E  D7FD               	goto	l2025
  8045                           
  8046                           ; BSR set to: 61
  8047                           
  8048                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  8049  01FC30  80BF               	bsf	191,0,c	;volatile
  8050                           
  8051                           ; BSR set to: 61
  8052                           ;daq.c: 276:  dac_spi_control(0);
  8053  01FC32  0E00               	movlw	0
  8054  01FC34  6EE6               	movwf	postinc1,c
  8055  01FC36  EC05  F004         	call	_dac_spi_control	;wreg free
  8056                           
  8057                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8058  01FC3A  0012               	return		;funcret
  8059  01FC3C                     __end_of_set_dac:
  8060                           	opt callstack 0
  8061                           
  8062 ;; *************** function _dac_spi_control *****************
  8063 ;; Defined at:
  8064 ;;		line 207 in file "daq.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  set             1  [STACK] _Bool 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1  [STACK] void 
  8071 ;; Registers used:
  8072 ;;		wreg, fsr1l, fsr1h, status,2
  8073 ;; Tracked objects:
  8074 ;;		On entry : 3F/3D
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:   15
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_set_dac
  8089 ;; This function uses a reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text10
  8093  00080A                     __ptext10:
  8094                           	opt callstack 0
  8095  00080A                     _dac_spi_control:
  8096                           	opt callstack 14
  8097                           
  8098                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  8099                           ;stkvar	_set @ sp[(0)+-1]
  8100                           
  8101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8102                           ;incstack = 0
  8103  00080A  0EFF               	movlw	-1
  8104  00080C  50E3               	movf	plusw1,w,c
  8105  00080E  B4D8               	btfsc	status,2,c
  8106  000810  D022               	goto	l13559
  8107                           
  8108                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  8109  000812  013D               	movlb	61	; () banked
  8110  000814  9F14               	bcf	20,7,b	;volatile
  8111                           
  8112                           ; BSR set to: 61
  8113                           ;daq.c: 214:   if (!init) {
  8114  000816  5042               	movf	dac_spi_control@init^0,w,c
  8115  000818  A4D8               	btfss	status,2,c
  8116  00081A  D011               	goto	l13547
  8117                           
  8118                           ; BSR set to: 61
  8119                           ;daq.c: 215:    init = 1;
  8120  00081C  0E01               	movlw	1
  8121  00081E  6E42               	movwf	dac_spi_control@init^0,c
  8122                           
  8123                           ; BSR set to: 61
  8124                           ;daq.c: 216:    S0 = SPI1CON0;
  8125  000820  006F F450  F0D9    	movff	15636,dac_spi_control@S0	;volatile
  8126                           
  8127                           ; BSR set to: 61
  8128                           ;daq.c: 217:    S1 = SPI1CON1;
  8129  000826  006F F454  F0D8    	movff	15637,dac_spi_control@S1	;volatile
  8130                           
  8131                           ; BSR set to: 61
  8132                           ;daq.c: 218:    S2 = SPI1CON2;
  8133  00082C  006F F458  F0D7    	movff	15638,dac_spi_control@S2	;volatile
  8134                           
  8135                           ; BSR set to: 61
  8136                           ;daq.c: 219:    SC = SPI1CLK;
  8137  000832  006F F470  F0D6    	movff	15644,dac_spi_control@SC	;volatile
  8138                           
  8139                           ; BSR set to: 61
  8140                           ;daq.c: 220:    SB = SPI1BAUD;
  8141  000838  006F F464  F0D5    	movff	15641,dac_spi_control@SB	;volatile
  8142  00083E                     l13547:
  8143                           
  8144                           ; BSR set to: 61
  8145                           ;daq.c: 226:   SPI1CON1 = 0x00;
  8146  00083E  6B15               	clrf	21,b	;volatile
  8147                           
  8148                           ; BSR set to: 61
  8149                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  8150  000840  8D15               	bsf	21,6,b	;volatile
  8151                           
  8152                           ; BSR set to: 61
  8153                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  8154  000842  9B15               	bcf	21,5,b	;volatile
  8155                           
  8156                           ; BSR set to: 61
  8157                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  8158  000844  9F15               	bcf	21,7,b	;volatile
  8159                           
  8160                           ;daq.c: 231:   SPI1CON2 = 0x03;
  8161  000846  0E03               	movlw	3
  8162  000848  6F16               	movwf	22,b	;volatile
  8163                           
  8164                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  8165  00084A  0E0F               	movlw	15
  8166  00084C  6F19               	movwf	25,b	;volatile
  8167                           
  8168                           ; BSR set to: 61
  8169                           ;daq.c: 235:   SPI1CLK = 0x00;
  8170  00084E  6B1C               	clrf	28,b	;volatile
  8171                           
  8172                           ;daq.c: 237:   SPI1CON0 = 0x83;
  8173  000850  0E83               	movlw	131
  8174  000852  6F14               	movwf	20,b	;volatile
  8175  000854  D014               	goto	L3
  8176  000856                     l13559:
  8177                           
  8178                           ;daq.c: 240:   if (init) {
  8179  000856  5042               	movf	dac_spi_control@init^0,w,c
  8180  000858  B4D8               	btfsc	status,2,c
  8181  00085A  D012               	goto	l2009
  8182                           
  8183                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  8184  00085C  013D               	movlb	61	; () banked
  8185  00085E  9F14               	bcf	20,7,b	;volatile
  8186                           
  8187                           ;daq.c: 245:    SPI1CON1 = S1;
  8188  000860  0060  F363  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8189                           
  8190                           ;daq.c: 246:    SPI1CON2 = S2;
  8191  000866  0060  F35F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8192                           
  8193                           ;daq.c: 247:    SPI1CLK = SC;
  8194  00086C  0060  F35B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8195                           
  8196                           ;daq.c: 248:    SPI1BAUD = SB;
  8197  000872  0060  F357  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8198                           
  8199                           ;daq.c: 249:    SPI1CON0 = S0;
  8200  000878  0060  F367  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8201  00087E                     L3:
  8202                           
  8203                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  8204  00087E  8F14               	bsf	20,7,b	;volatile
  8205  000880                     l2009:
  8206                           
  8207                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8208  000880  52E5               	movf	postdec1,f,c
  8209  000882  0012               	return		;funcret
  8210  000884                     __end_of_dac_spi_control:
  8211                           	opt callstack 0
  8212                           
  8213 ;; *************** function _read_cal_data *****************
  8214 ;; Defined at:
  8215 ;;		line 368 in file "daq.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;  x               2  [STACK] unsigned short 
  8220 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8221 ;;		 -> r_cal(171), 
  8222 ;;  y               2  [STACK] unsigned short 
  8223 ;;  crcVal_save     1  [STACK] unsigned char 
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1  [STACK] _Bool 
  8226 ;; Registers used:
  8227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/39
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:   17
  8240 ;; This function calls:
  8241 ;;		_CRC_8BitDataWrite
  8242 ;;		_CRC_CalculatedResultGet
  8243 ;;		_CRC_Initialize
  8244 ;;		_CRC_IsBusy
  8245 ;;		_CRC_Start
  8246 ;;		_DATAEE_ReadByte
  8247 ;; This function is called by:
  8248 ;;		_main
  8249 ;; This function uses a reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text11
  8253  01CCBA                     __ptext11:
  8254                           	opt callstack 0
  8255  01CCBA                     _read_cal_data:
  8256                           	opt callstack 0
  8257                           
  8258                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8259  01CCBA  0E07               	movlw	7
  8260  01CCBC  26E1               	addwf	fsr1l,f,c
  8261  01CCBE  0E00               	movlw	0
  8262  01CCC0  22E2               	addwfc	fsr1h,f,c
  8263                           
  8264                           ;daq.c: 370:  uint16_t x = 0, y;
  8265                           ;stkvar	_x @ sp[(-7)+0]
  8266                           
  8267                           ;incstack = 0
  8268  01CCC2  0EF9               	movlw	-7
  8269  01CCC4  6AE3               	clrf	plusw1,c
  8270  01CCC6  0EFA               	movlw	-6
  8271  01CCC8  6AE3               	clrf	plusw1,c
  8272                           
  8273                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  8274  01CCCA  0EAB               	movlw	171
  8275  01CCCC  6E0B               	movwf	(btemp+10)^0,c
  8276  01CCCE  0E00               	movlw	0
  8277  01CCD0  6E0C               	movwf	(btemp+11)^0,c
  8278                           
  8279                           ;stkvar	_y @ sp[(-7)+4]
  8280  01CCD2  0EFD               	movlw	-3
  8281  01CCD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8282  01CCDA  0EFE               	movlw	-2
  8283  01CCDC  0060  F033  FFE3   	movff	btemp+11,plusw1
  8284                           
  8285                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  8286                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8287  01CCE2  0E05               	movlw	high _r_cal
  8288  01CCE4  6E01               	movwf	btemp^0,c
  8289  01CCE6  0EFC               	movlw	-4
  8290  01CCE8  0060  F007  FFE3   	movff	btemp,plusw1
  8291  01CCEE  0E00               	movlw	low _r_cal
  8292  01CCF0  6E01               	movwf	btemp^0,c
  8293  01CCF2  0EFB               	movlw	-5
  8294  01CCF4  0060  F007  FFE3   	movff	btemp,plusw1
  8295                           
  8296                           ;daq.c: 376:  CRC_Initialize();
  8297  01CCFA  EC73  F002         	call	_CRC_Initialize	;wreg free
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;daq.c: 379:  CRC_Start();
  8301  01CCFE  EC59  F00F         	call	_CRC_Start	;wreg free
  8302  01CD02                     l13993:
  8303                           
  8304                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8305                           ;stkvar	_x @ sp[(-7)+0]
  8306  01CD02  0EF9               	movlw	-7
  8307  01CD04  006F FF8F FFE6     	movff	plusw1,postinc1
  8308  01CD0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8309  01CD10  EC2F  F00B         	call	_DATAEE_ReadByte	;wreg free
  8310                           
  8311                           ;stkvar	_x @ sp[(-7)+0]
  8312  01CD14  0EF9               	movlw	-7
  8313  01CD16  006F FF8C  F00B    	movff	plusw1,btemp+10
  8314  01CD1C  0EFA               	movlw	-6
  8315  01CD1E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8316                           
  8317                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8318  01CD24  0EFB               	movlw	-5
  8319  01CD26  006F FF8C  F009    	movff	plusw1,btemp+8
  8320  01CD2C  0EFC               	movlw	-4
  8321  01CD2E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8322  01CD34  500B               	movf	(btemp+10)^0,w,c
  8323  01CD36  2409               	addwf	(btemp+8)^0,w,c
  8324  01CD38  6ED9               	movwf	fsr2l,c
  8325  01CD3A  500C               	movf	(btemp+11)^0,w,c
  8326  01CD3C  200A               	addwfc	(btemp+9)^0,w,c
  8327  01CD3E  6EDA               	movwf	fsr2h,c
  8328  01CD40  0060  F007  FFDF   	movff	btemp,indf2
  8329                           
  8330                           ;daq.c: 383:  } while (++x < y);
  8331                           ;stkvar	_y @ sp[(-7)+4]
  8332  01CD46  0EFD               	movlw	-3
  8333  01CD48  006F FF8C  F00B    	movff	plusw1,btemp+10
  8334  01CD4E  0EFE               	movlw	-2
  8335  01CD50  006F FF8C  F00C    	movff	plusw1,btemp+11
  8336                           
  8337                           ;stkvar	_x @ sp[(-7)+0]
  8338  01CD56  0EF9               	movlw	-7
  8339  01CD58  50E3               	movf	plusw1,w,c
  8340  01CD5A  0F01               	addlw	1
  8341  01CD5C  6E01               	movwf	btemp^0,c
  8342  01CD5E  0EF9               	movlw	-7
  8343  01CD60  0060  F007  FFE3   	movff	btemp,plusw1
  8344  01CD66  6A01               	clrf	btemp^0,c
  8345  01CD68  0EFA               	movlw	-6
  8346  01CD6A  50E3               	movf	plusw1,w,c
  8347  01CD6C  2001               	addwfc	btemp^0,w,c
  8348  01CD6E  6E01               	movwf	btemp^0,c
  8349  01CD70  0EFA               	movlw	-6
  8350  01CD72  0060  F007  FFE3   	movff	btemp,plusw1
  8351  01CD78  0EF9               	movlw	-7
  8352  01CD7A  006F FF8C  F009    	movff	plusw1,btemp+8
  8353  01CD80  0EFA               	movlw	-6
  8354  01CD82  006F FF8C  F00A    	movff	plusw1,btemp+9
  8355  01CD88  500B               	movf	(btemp+10)^0,w,c
  8356  01CD8A  5C09               	subwf	(btemp+8)^0,w,c
  8357  01CD8C  500C               	movf	(btemp+11)^0,w,c
  8358  01CD8E  580A               	subwfb	(btemp+9)^0,w,c
  8359  01CD90  A0D8               	btfss	status,0,c
  8360  01CD92  D7B7               	goto	l13993
  8361                           
  8362                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8363                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8364  01CD94  0EFF               	movlw	-1
  8365  01CD96  0061  F6AB  FFE3   	movff	_r_cal+170,plusw1
  8366                           
  8367                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8368  01CD9C  0E57               	movlw	87
  8369  01CD9E  0105               	movlb	5	; () banked
  8370  01CDA0  19A8               	xorwf	(_r_cal+168)& (0+255),w,b
  8371  01CDA2  E163               	bnz	l14013
  8372  01CDA4  0E19               	movlw	25
  8373  01CDA6  19A9               	xorwf	(_r_cal+169)& (0+255),w,b
  8374  01CDA8  A4D8               	btfss	status,2,c
  8375  01CDAA  D05F               	goto	u13230
  8376                           
  8377                           ; BSR set to: 5
  8378                           ;daq.c: 387:   r_cal.crc = 0x42;
  8379  01CDAC  0E42               	movlw	66
  8380  01CDAE  6FAA               	movwf	(_r_cal+170)& (0+255),b
  8381                           
  8382                           ; BSR set to: 5
  8383                           ;daq.c: 388:   x = 0;
  8384                           ;stkvar	_x @ sp[(-7)+0]
  8385  01CDB0  0EF9               	movlw	-7
  8386  01CDB2  6AE3               	clrf	plusw1,c
  8387  01CDB4  0EFA               	movlw	-6
  8388  01CDB6  6AE3               	clrf	plusw1,c
  8389  01CDB8                     l14005:
  8390                           
  8391                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8392                           ;stkvar	_x @ sp[(-7)+0]
  8393  01CDB8  0EF9               	movlw	-7
  8394  01CDBA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8395  01CDC0  0EFA               	movlw	-6
  8396  01CDC2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8397                           
  8398                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8399  01CDC8  0EFB               	movlw	-5
  8400  01CDCA  006F FF8C  F009    	movff	plusw1,btemp+8
  8401  01CDD0  0EFC               	movlw	-4
  8402  01CDD2  006F FF8C  F00A    	movff	plusw1,btemp+9
  8403  01CDD8  500B               	movf	(btemp+10)^0,w,c
  8404  01CDDA  2409               	addwf	(btemp+8)^0,w,c
  8405  01CDDC  6ED9               	movwf	fsr2l,c
  8406  01CDDE  500C               	movf	(btemp+11)^0,w,c
  8407  01CDE0  200A               	addwfc	(btemp+9)^0,w,c
  8408  01CDE2  6EDA               	movwf	fsr2h,c
  8409  01CDE4  50DF               	movf	indf2,w,c
  8410  01CDE6  6EE6               	movwf	postinc1,c
  8411  01CDE8  ECCA  F00E         	call	_CRC_8BitDataWrite	;wreg free
  8412  01CDEC                     l14007:
  8413  01CDEC  ECEC  F00E         	call	_CRC_IsBusy	;wreg free
  8414  01CDF0  5001               	movf	btemp^0,w,c
  8415  01CDF2  A4D8               	btfss	status,2,c
  8416  01CDF4  D7FB               	goto	l14007
  8417                           
  8418                           ;daq.c: 393:   } while (++x < y);
  8419                           ;stkvar	_y @ sp[(-7)+4]
  8420  01CDF6  0EFD               	movlw	-3
  8421  01CDF8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8422  01CDFE  0EFE               	movlw	-2
  8423  01CE00  006F FF8C  F00C    	movff	plusw1,btemp+11
  8424                           
  8425                           ;stkvar	_x @ sp[(-7)+0]
  8426  01CE06  0EF9               	movlw	-7
  8427  01CE08  50E3               	movf	plusw1,w,c
  8428  01CE0A  0F01               	addlw	1
  8429  01CE0C  6E01               	movwf	btemp^0,c
  8430  01CE0E  0EF9               	movlw	-7
  8431  01CE10  0060  F007  FFE3   	movff	btemp,plusw1
  8432  01CE16  6A01               	clrf	btemp^0,c
  8433  01CE18  0EFA               	movlw	-6
  8434  01CE1A  50E3               	movf	plusw1,w,c
  8435  01CE1C  2001               	addwfc	btemp^0,w,c
  8436  01CE1E  6E01               	movwf	btemp^0,c
  8437  01CE20  0EFA               	movlw	-6
  8438  01CE22  0060  F007  FFE3   	movff	btemp,plusw1
  8439  01CE28  0EF9               	movlw	-7
  8440  01CE2A  006F FF8C  F009    	movff	plusw1,btemp+8
  8441  01CE30  0EFA               	movlw	-6
  8442  01CE32  006F FF8C  F00A    	movff	plusw1,btemp+9
  8443  01CE38  500B               	movf	(btemp+10)^0,w,c
  8444  01CE3A  5C09               	subwf	(btemp+8)^0,w,c
  8445  01CE3C  500C               	movf	(btemp+11)^0,w,c
  8446  01CE3E  580A               	subwfb	(btemp+9)^0,w,c
  8447  01CE40  A0D8               	btfss	status,0,c
  8448  01CE42  D7BA               	goto	l14005
  8449                           
  8450                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8451  01CE44  0E00               	movlw	0
  8452  01CE46  6EE6               	movwf	postinc1,c
  8453  01CE48  0E00               	movlw	0
  8454  01CE4A  6EE6               	movwf	postinc1,c
  8455  01CE4C  0E00               	movlw	0
  8456  01CE4E  6EE6               	movwf	postinc1,c
  8457  01CE50  ECFE  F0EB         	call	_CRC_CalculatedResultGet	;wreg free
  8458                           
  8459                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8460  01CE54  0EFF               	movlw	-1
  8461  01CE56  50E3               	movf	plusw1,w,c
  8462  01CE58  6E0B               	movwf	(btemp+10)^0,c
  8463  01CE5A  6A0C               	clrf	(btemp+11)^0,c
  8464  01CE5C  500B               	movf	(btemp+10)^0,w,c
  8465  01CE5E  1801               	xorwf	btemp^0,w,c
  8466  01CE60  E104               	bnz	u13230
  8467  01CE62  500C               	movf	(btemp+11)^0,w,c
  8468  01CE64  1802               	xorwf	(btemp+1)^0,w,c
  8469  01CE66  B4D8               	btfsc	status,2,c
  8470  01CE68  D002               	goto	l14021
  8471  01CE6A                     u13230:
  8472  01CE6A                     l14013:
  8473                           
  8474                           ;daq.c: 395:    return 0;
  8475  01CE6A  0E00               	movlw	0
  8476  01CE6C  D005               	goto	L4
  8477  01CE6E                     l14021:
  8478                           
  8479                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8480                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8481  01CE6E  0EFF               	movlw	-1
  8482  01CE70  006F FF8C  F5AA    	movff	plusw1,_r_cal+170
  8483                           
  8484                           ;daq.c: 400:  return 1;
  8485  01CE76  0E01               	movlw	1
  8486  01CE78                     L4:
  8487  01CE78  6E01               	movwf	btemp^0,c
  8488                           
  8489                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8490  01CE7A  0EF9               	movlw	249
  8491  01CE7C  26E1               	addwf	fsr1l,f,c
  8492  01CE7E  0EFF               	movlw	255
  8493  01CE80  22E2               	addwfc	fsr1h,f,c
  8494  01CE82  0012               	return		;funcret
  8495  01CE84                     __end_of_read_cal_data:
  8496                           	opt callstack 0
  8497                           
  8498 ;; *************** function _DATAEE_ReadByte *****************
  8499 ;; Defined at:
  8500 ;;		line 194 in file "mcc_generated_files/memory.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  bAdd            2  [STACK] unsigned short 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1  [STACK] unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/39
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;Total ram usage:        0 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:   15
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_read_cal_data
  8525 ;; This function uses a reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text12
  8529  00165E                     __ptext12:
  8530                           	opt callstack 0
  8531  00165E                     _DATAEE_ReadByte:
  8532                           	opt callstack 14
  8533                           
  8534                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8535                           ;stkvar	_bAdd @ sp[(0)+-2]
  8536                           
  8537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8538                           ;incstack = 0
  8539  00165E  0EFF               	movlw	255
  8540  001660  24E1               	addwf	fsr1l,w,c
  8541  001662  6ED9               	movwf	fsr2l,c
  8542  001664  0EFF               	movlw	255
  8543  001666  20E2               	addwfc	fsr1h,w,c
  8544  001668  6EDA               	movwf	fsr2h,c
  8545  00166A  50DF               	movf	indf2,w,c
  8546  00166C  0B03               	andlw	3
  8547  00166E  0139               	movlb	57	; () banked
  8548  001670  6FE1               	movwf	225,b	;volatile
  8549                           
  8550                           ; BSR set to: 57
  8551                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8552                           ;stkvar	_bAdd @ sp[(0)+-2]
  8553  001672  0EFE               	movlw	-2
  8554  001674  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8555                           
  8556                           ; BSR set to: 57
  8557                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8558  00167A  0E3F               	movlw	-193
  8559  00167C  17E5               	andwf	229,f,b	;volsfr
  8560                           
  8561                           ; BSR set to: 57
  8562                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8563  00167E  81E5               	bsf	229,0,b	;volsfr
  8564                           
  8565                           ; BSR set to: 57
  8566                           ;mcc_generated_files/memory.c: 200:     __nop();
  8567  001680  F000               	nop	
  8568                           
  8569                           ;mcc_generated_files/memory.c: 201:     __nop();
  8570  001682  F000               	nop	
  8571                           
  8572                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8573  001684  006E F78C  F001    	movff	14819,btemp	;volatile
  8574                           
  8575                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8576  00168A  52E5               	movf	postdec1,f,c
  8577  00168C  52E5               	movf	postdec1,f,c
  8578  00168E  0012               	return		;funcret
  8579  001690                     __end_of_DATAEE_ReadByte:
  8580                           	opt callstack 0
  8581                           
  8582 ;; *************** function _load_hist_data *****************
  8583 ;; Defined at:
  8584 ;;		line 224 in file "mbmc.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1  [STACK] void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp+11
  8593 ;; Tracked objects:
  8594 ;;		On entry : 3F/39
  8595 ;;		On exit  : 3F/39
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:   16
  8605 ;; This function calls:
  8606 ;;		_start_bsoc
  8607 ;;		_stop_bsoc
  8608 ;; This function is called by:
  8609 ;;		_main
  8610 ;; This function uses a reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text13
  8614  001CF6                     __ptext13:
  8615                           	opt callstack 0
  8616  001CF6                     _load_hist_data:
  8617                           	opt callstack 14
  8618                           
  8619                           ;mbmc.c: 226:  stop_bsoc();
  8620                           
  8621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8622                           ;incstack = 0
  8623  001CF6  EC65  F00F         	call	_stop_bsoc	;wreg free
  8624                           
  8625                           ; BSR set to: 57
  8626                           ;mbmc.c: 227:  C.hist[0].updates++;
  8627  001CFA  EE22  F1E9         	lfsr	2,_C+234	;volatile
  8628  001CFE  2ADE               	incf	postinc2,f,c
  8629  001D00  0E00               	movlw	0
  8630  001D02  22DE               	addwfc	postinc2,f,c
  8631  001D04  22DE               	addwfc	postinc2,f,c
  8632  001D06  22DE               	addwfc	postinc2,f,c
  8633                           
  8634                           ; BSR set to: 57
  8635                           ;mbmc.c: 228:  start_bsoc();
  8636  001D08  ECD2  F00D         	call	_start_bsoc	;wreg free
  8637                           
  8638                           ; BSR set to: 57
  8639                           ; _load_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8640  001D0C  0012               	return		;funcret
  8641  001D0E                     __end_of_load_hist_data:
  8642                           	opt callstack 0
  8643                           
  8644 ;; *************** function _init_port_dma *****************
  8645 ;; Defined at:
  8646 ;;		line 104 in file "eadog.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1  [STACK] void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/1
  8657 ;;		On exit  : 3F/3B
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:   15
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;; This function uses a reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text14
  8675  001690                     __ptext14:
  8676                           	opt callstack 0
  8677  001690                     _init_port_dma:
  8678                           	opt callstack 15
  8679                           
  8680                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8681                           
  8682                           ; BSR set to: 57
  8683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8684                           ;incstack = 0
  8685  001690  0E3F               	movlw	-193
  8686  001692  013B               	movlb	59	; () banked
  8687  001694  17DD               	andwf	221,f,b	;volatile
  8688                           
  8689                           ; BSR set to: 59
  8690                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8691  001696  9BDD               	bcf	221,5,b	;volatile
  8692                           
  8693                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8694  001698  51DD               	movf	221,w,b	;volatile
  8695  00169A  0BF9               	andlw	-7
  8696  00169C  0902               	iorlw	2
  8697  00169E  6FDD               	movwf	221,b	;volatile
  8698                           
  8699                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8700  0016A0  0EE7               	movlw	-25
  8701  0016A2  17DD               	andwf	221,f,b	;volatile
  8702                           
  8703                           ; BSR set to: 59
  8704                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8705  0016A4  81DD               	bsf	221,0,b	;volatile
  8706                           
  8707                           ; BSR set to: 59
  8708                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8709  0016A6  9DDC               	bcf	220,6,b	;volatile
  8710                           
  8711                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8712  0016A8  0E3D               	movlw	61
  8713  0016AA  6FD1               	movwf	209,b	;volatile
  8714  0016AC  0EEA               	movlw	234
  8715  0016AE  6FD0               	movwf	208,b	;volatile
  8716                           
  8717                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8718  0016B0  0EFF               	movlw	low _port_data
  8719  0016B2  6FD9               	movwf	217,b	;volatile
  8720  0016B4  0E06               	movlw	high _port_data
  8721  0016B6  6FDA               	movwf	218,b	;volatile
  8722  0016B8  0E00               	movlw	low (_port_data shr (0+16))
  8723  0016BA  6FDB               	movwf	219,b	;volatile
  8724                           
  8725                           ; BSR set to: 59
  8726                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8727  0016BC  9BDC               	bcf	220,5,b	;volatile
  8728                           
  8729                           ; BSR set to: 59
  8730                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8731  0016BE  0012               	return		;funcret
  8732  0016C0                     __end_of_init_port_dma:
  8733                           	opt callstack 0
  8734                           
  8735 ;; *************** function _init_display *****************
  8736 ;; Defined at:
  8737 ;;		line 38 in file "eadog.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;		None
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1  [STACK] void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8746 ;; Tracked objects:
  8747 ;;		On entry : 3F/3B
  8748 ;;		On exit  : 3F/3D
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8755 ;;Total ram usage:        0 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:   17
  8758 ;; This function calls:
  8759 ;;		_ringBufS_init
  8760 ;;		_send_lcd_cmd
  8761 ;;		_send_lcd_cmd_long
  8762 ;;		_send_lcd_data
  8763 ;;		_wdtdelay
  8764 ;; This function is called by:
  8765 ;;		_main
  8766 ;; This function uses a reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text15
  8770  01F35A                     __ptext15:
  8771                           	opt callstack 0
  8772  01F35A                     _init_display:
  8773                           	opt callstack 13
  8774                           
  8775                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8776                           
  8777                           ; BSR set to: 59
  8778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8779                           ;incstack = 0
  8780  01F35A  0E83               	movlw	low _ring_buf1
  8781  01F35C  0100               	movlb	0	; () banked
  8782  01F35E  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8783  01F360  0E04               	movlw	high _ring_buf1
  8784  01F362  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8785                           
  8786                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8787  01F364  0E40               	movlw	low _ring_buf2
  8788  01F366  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8789  01F368  0E04               	movlw	high _ring_buf2
  8790  01F36A  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8794  01F36C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8795  01F372  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8796  01F378  EC17  F00C         	call	_ringBufS_init	;wreg free
  8797                           
  8798                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8799  01F37C  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8800  01F382  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8801  01F388  EC17  F00C         	call	_ringBufS_init	;wreg free
  8802                           
  8803                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8804  01F38C  84BE               	bsf	190,2,c	;volatile
  8805                           
  8806                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8807  01F38E  013D               	movlb	61	; () banked
  8808  01F390  9F14               	bcf	20,7,b	;volatile
  8809                           
  8810                           ; BSR set to: 61
  8811                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8812  01F392  0E20               	movlw	32
  8813  01F394  6F15               	movwf	21,b	;volatile
  8814                           
  8815                           ; BSR set to: 61
  8816                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8817  01F396  0E03               	movlw	3
  8818  01F398  6F16               	movwf	22,b	;volatile
  8819                           
  8820                           ; BSR set to: 61
  8821                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8822  01F39A  0E04               	movlw	4
  8823  01F39C  6F19               	movwf	25,b	;volatile
  8824                           
  8825                           ; BSR set to: 61
  8826                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8827  01F39E  0E02               	movlw	2
  8828  01F3A0  6F1C               	movwf	28,b	;volatile
  8829                           
  8830                           ; BSR set to: 61
  8831                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8832  01F3A2  0E83               	movlw	131
  8833  01F3A4  6F14               	movwf	20,b	;volatile
  8834                           
  8835                           ; BSR set to: 61
  8836                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8837  01F3A6  8F14               	bsf	20,7,b	;volatile
  8838                           
  8839                           ; BSR set to: 61
  8840                           ;eadog.c: 60:  wdtdelay(350000);
  8841  01F3A8  0E30               	movlw	48
  8842  01F3AA  6EE6               	movwf	postinc1,c
  8843  01F3AC  0E57               	movlw	87
  8844  01F3AE  6EE6               	movwf	postinc1,c
  8845  01F3B0  0E05               	movlw	5
  8846  01F3B2  6EE6               	movwf	postinc1,c
  8847  01F3B4  0E00               	movlw	0
  8848  01F3B6  6EE6               	movwf	postinc1,c
  8849  01F3B8  EC17  F007         	call	_wdtdelay	;wreg free
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8853  01F3BC  0E46               	movlw	70
  8854  01F3BE  6EE6               	movwf	postinc1,c
  8855  01F3C0  EC7A  F009         	call	_send_lcd_cmd_long	;wreg free
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8859  01F3C4  0E41               	movlw	65
  8860  01F3C6  6EE6               	movwf	postinc1,c
  8861  01F3C8  EC9A  F009         	call	_send_lcd_cmd	;wreg free
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;eadog.c: 63:  wdtdelay(80);
  8865  01F3CC  0E50               	movlw	80
  8866  01F3CE  6EE6               	movwf	postinc1,c
  8867  01F3D0  0E00               	movlw	0
  8868  01F3D2  6EE6               	movwf	postinc1,c
  8869  01F3D4  0E00               	movlw	0
  8870  01F3D6  6EE6               	movwf	postinc1,c
  8871  01F3D8  0E00               	movlw	0
  8872  01F3DA  6EE6               	movwf	postinc1,c
  8873  01F3DC  EC17  F007         	call	_wdtdelay	;wreg free
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8877  01F3E0  0E53               	movlw	83
  8878  01F3E2  6EE6               	movwf	postinc1,c
  8879  01F3E4  EC9A  F009         	call	_send_lcd_cmd	;wreg free
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;eadog.c: 65:  send_lcd_data(2);
  8883  01F3E8  0E02               	movlw	2
  8884  01F3EA  6EE6               	movwf	postinc1,c
  8885  01F3EC  EC44  F00D         	call	_send_lcd_data	;wreg free
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;eadog.c: 66:  wdtdelay(80);
  8889  01F3F0  0E50               	movlw	80
  8890  01F3F2  6EE6               	movwf	postinc1,c
  8891  01F3F4  0E00               	movlw	0
  8892  01F3F6  6EE6               	movwf	postinc1,c
  8893  01F3F8  0E00               	movlw	0
  8894  01F3FA  6EE6               	movwf	postinc1,c
  8895  01F3FC  0E00               	movlw	0
  8896  01F3FE  6EE6               	movwf	postinc1,c
  8897  01F400  EC17  F007         	call	_wdtdelay	;wreg free
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8901  01F404  0E51               	movlw	81
  8902  01F406  6EE6               	movwf	postinc1,c
  8903  01F408  EC7A  F009         	call	_send_lcd_cmd_long	;wreg free
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8907  01F40C  013D               	movlb	61	; () banked
  8908  01F40E  9F14               	bcf	20,7,b	;volatile
  8909                           
  8910                           ; BSR set to: 61
  8911                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8912  01F410  0E02               	movlw	2
  8913  01F412  6F16               	movwf	22,b	;volatile
  8914                           
  8915                           ; BSR set to: 61
  8916                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8917  01F414  8F14               	bsf	20,7,b	;volatile
  8918                           
  8919                           ; BSR set to: 61
  8920                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8921  01F416  931A               	bcf	26,1,b	;volatile
  8922                           
  8923                           ; BSR set to: 61
  8924                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8925  01F418  0E3F               	movlw	-193
  8926  01F41A  013B               	movlb	59	; () banked
  8927  01F41C  17FD               	andwf	253,f,b	;volatile
  8928                           
  8929                           ; BSR set to: 59
  8930                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8931  01F41E  9BFD               	bcf	253,5,b	;volatile
  8932                           
  8933                           ; BSR set to: 59
  8934                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8935  01F420  51FD               	movf	253,w,b	;volatile
  8936  01F422  0BF9               	andlw	-7
  8937  01F424  0902               	iorlw	2
  8938  01F426  6FFD               	movwf	253,b	;volatile
  8939                           
  8940                           ; BSR set to: 59
  8941                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8942  01F428  0EE7               	movlw	-25
  8943  01F42A  17FD               	andwf	253,f,b	;volatile
  8944                           
  8945                           ; BSR set to: 59
  8946                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8947  01F42C  81FD               	bsf	253,0,b	;volatile
  8948                           
  8949                           ; BSR set to: 59
  8950                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8951  01F42E  0E83               	movlw	low _ring_buf1
  8952  01F430  6FF9               	movwf	249,b	;volatile
  8953  01F432  0E04               	movlw	high _ring_buf1
  8954  01F434  6FFA               	movwf	250,b	;volatile
  8955  01F436  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8956  01F438  6FFB               	movwf	251,b	;volatile
  8957                           
  8958                           ; BSR set to: 59
  8959                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8960  01F43A  9BFC               	bcf	252,5,b	;volatile
  8961                           
  8962                           ; BSR set to: 59
  8963                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8964  01F43C  013D               	movlb	61	; () banked
  8965  01F43E  831A               	bsf	26,1,b	;volatile
  8966                           
  8967                           ; BSR set to: 61
  8968                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8969  01F440  94BE               	bcf	190,2,c	;volatile
  8970                           
  8971                           ; BSR set to: 61
  8972                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8973  01F442  0012               	return		;funcret
  8974  01F444                     __end_of_init_display:
  8975                           	opt callstack 0
  8976                           
  8977 ;; *************** function _send_lcd_data *****************
  8978 ;; Defined at:
  8979 ;;		line 123 in file "eadog.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  data            1  [STACK] const unsigned char 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1  [STACK] void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8988 ;; Tracked objects:
  8989 ;;		On entry : 3F/0
  8990 ;;		On exit  : 3F/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:   16
  9000 ;; This function calls:
  9001 ;;		_SPI1_Exchange8bit
  9002 ;;		_wdtdelay
  9003 ;; This function is called by:
  9004 ;;		_init_display
  9005 ;; This function uses a reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text16
  9009  001A88                     __ptext16:
  9010                           	opt callstack 0
  9011  001A88                     _send_lcd_data:
  9012                           	opt callstack 13
  9013                           
  9014                           ; BSR set to: 61
  9015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9016                           ;incstack = 0
  9017                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9018  001A88  94BC               	bcf	188,2,c	;volatile
  9019                           
  9020                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9021                           ;stkvar	_data @ sp[(0)+-1]
  9022  001A8A  0EFF               	movlw	-1
  9023  001A8C  50E3               	movf	plusw1,w,c
  9024  001A8E  6EE6               	movwf	postinc1,c
  9025  001A90  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9026                           
  9027                           ; BSR set to: 57
  9028                           ;eadog.c: 127:  wdtdelay(8);
  9029  001A94  0E08               	movlw	8
  9030  001A96  6EE6               	movwf	postinc1,c
  9031  001A98  0E00               	movlw	0
  9032  001A9A  6EE6               	movwf	postinc1,c
  9033  001A9C  0E00               	movlw	0
  9034  001A9E  6EE6               	movwf	postinc1,c
  9035  001AA0  0E00               	movlw	0
  9036  001AA2  6EE6               	movwf	postinc1,c
  9037  001AA4  EC17  F007         	call	_wdtdelay	;wreg free
  9038                           
  9039                           ; BSR set to: 0
  9040                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9041  001AA8  52E5               	movf	postdec1,f,c
  9042  001AAA  0012               	return		;funcret
  9043  001AAC                     __end_of_send_lcd_data:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function _send_lcd_cmd_long *****************
  9047 ;; Defined at:
  9048 ;;		line 139 in file "eadog.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  cmd             1  [STACK] const unsigned char 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1  [STACK] void 
  9055 ;; Registers used:
  9056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9057 ;; Tracked objects:
  9058 ;;		On entry : 3F/0
  9059 ;;		On exit  : 3F/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;Total ram usage:        0 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:   16
  9069 ;; This function calls:
  9070 ;;		_SPI1_Exchange8bit
  9071 ;;		_wdtdelay
  9072 ;; This function is called by:
  9073 ;;		_init_display
  9074 ;; This function uses a reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text17
  9078  0012F4                     __ptext17:
  9079                           	opt callstack 0
  9080  0012F4                     _send_lcd_cmd_long:
  9081                           	opt callstack 13
  9082                           
  9083                           ; BSR set to: 0
  9084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9085                           ;incstack = 0
  9086                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9087  0012F4  94BC               	bcf	188,2,c	;volatile
  9088                           
  9089                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9090  0012F6  0EFE               	movlw	254
  9091  0012F8  6EE6               	movwf	postinc1,c
  9092  0012FA  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9093                           
  9094                           ; BSR set to: 57
  9095                           ;eadog.c: 143:  wdtdelay(8);
  9096  0012FE  0E08               	movlw	8
  9097  001300  6EE6               	movwf	postinc1,c
  9098  001302  0E00               	movlw	0
  9099  001304  6EE6               	movwf	postinc1,c
  9100  001306  0E00               	movlw	0
  9101  001308  6EE6               	movwf	postinc1,c
  9102  00130A  0E00               	movlw	0
  9103  00130C  6EE6               	movwf	postinc1,c
  9104  00130E  EC17  F007         	call	_wdtdelay	;wreg free
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9108                           ;stkvar	_cmd @ sp[(0)+-1]
  9109  001312  0EFF               	movlw	-1
  9110  001314  50E3               	movf	plusw1,w,c
  9111  001316  6EE6               	movwf	postinc1,c
  9112  001318  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9113                           
  9114                           ;eadog.c: 145:  wdtdelay(800);
  9115  00131C  0E20               	movlw	32
  9116  00131E  6EE6               	movwf	postinc1,c
  9117  001320  0E03               	movlw	3
  9118  001322  6EE6               	movwf	postinc1,c
  9119  001324  0E00               	movlw	0
  9120  001326  6EE6               	movwf	postinc1,c
  9121  001328  0E00               	movlw	0
  9122  00132A  6EE6               	movwf	postinc1,c
  9123  00132C  EC17  F007         	call	_wdtdelay	;wreg free
  9124                           
  9125                           ; BSR set to: 0
  9126                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9127  001330  52E5               	movf	postdec1,f,c
  9128  001332  0012               	return		;funcret
  9129  001334                     __end_of_send_lcd_cmd_long:
  9130                           	opt callstack 0
  9131                           
  9132 ;; *************** function _send_lcd_cmd *****************
  9133 ;; Defined at:
  9134 ;;		line 130 in file "eadog.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;  cmd             1  [STACK] const unsigned char 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1  [STACK] void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9143 ;; Tracked objects:
  9144 ;;		On entry : 3F/0
  9145 ;;		On exit  : 3F/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:   16
  9155 ;; This function calls:
  9156 ;;		_SPI1_Exchange8bit
  9157 ;;		_wdtdelay
  9158 ;; This function is called by:
  9159 ;;		_init_display
  9160 ;; This function uses a reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text18
  9164  001334                     __ptext18:
  9165                           	opt callstack 0
  9166  001334                     _send_lcd_cmd:
  9167                           	opt callstack 13
  9168                           
  9169                           ; BSR set to: 0
  9170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9171                           ;incstack = 0
  9172                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9173  001334  94BC               	bcf	188,2,c	;volatile
  9174                           
  9175                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9176  001336  0EFE               	movlw	254
  9177  001338  6EE6               	movwf	postinc1,c
  9178  00133A  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9179                           
  9180                           ; BSR set to: 57
  9181                           ;eadog.c: 134:  wdtdelay(8);
  9182  00133E  0E08               	movlw	8
  9183  001340  6EE6               	movwf	postinc1,c
  9184  001342  0E00               	movlw	0
  9185  001344  6EE6               	movwf	postinc1,c
  9186  001346  0E00               	movlw	0
  9187  001348  6EE6               	movwf	postinc1,c
  9188  00134A  0E00               	movlw	0
  9189  00134C  6EE6               	movwf	postinc1,c
  9190  00134E  EC17  F007         	call	_wdtdelay	;wreg free
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9194                           ;stkvar	_cmd @ sp[(0)+-1]
  9195  001352  0EFF               	movlw	-1
  9196  001354  50E3               	movf	plusw1,w,c
  9197  001356  6EE6               	movwf	postinc1,c
  9198  001358  EC24  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9199                           
  9200                           ;eadog.c: 136:  wdtdelay(8);
  9201  00135C  0E08               	movlw	8
  9202  00135E  6EE6               	movwf	postinc1,c
  9203  001360  0E00               	movlw	0
  9204  001362  6EE6               	movwf	postinc1,c
  9205  001364  0E00               	movlw	0
  9206  001366  6EE6               	movwf	postinc1,c
  9207  001368  0E00               	movlw	0
  9208  00136A  6EE6               	movwf	postinc1,c
  9209  00136C  EC17  F007         	call	_wdtdelay	;wreg free
  9210                           
  9211                           ; BSR set to: 0
  9212                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9213  001370  52E5               	movf	postdec1,f,c
  9214  001372  0012               	return		;funcret
  9215  001374                     __end_of_send_lcd_cmd:
  9216                           	opt callstack 0
  9217                           
  9218 ;; *************** function _SPI1_Exchange8bit *****************
  9219 ;; Defined at:
  9220 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  data            1  [STACK] unsigned char 
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1  [STACK] unsigned char 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/2
  9231 ;;		On exit  : 3F/39
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:   15
  9241 ;; This function calls:
  9242 ;;		Nothing
  9243 ;; This function is called by:
  9244 ;;		_send_lcd_data
  9245 ;;		_send_lcd_cmd
  9246 ;;		_send_lcd_cmd_long
  9247 ;;		_set_dac
  9248 ;; This function uses a reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text19
  9252  001C48                     __ptext19:
  9253                           	opt callstack 0
  9254  001C48                     _SPI1_Exchange8bit:
  9255                           	opt callstack 14
  9256                           
  9257                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9258                           
  9259                           ; BSR set to: 0
  9260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9261                           ;incstack = 0
  9262  001C48  0E01               	movlw	1
  9263  001C4A  013D               	movlb	61	; () banked
  9264  001C4C  6F12               	movwf	18,b	;volatile
  9265                           
  9266                           ; BSR set to: 61
  9267                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9268                           ;stkvar	_data @ sp[(0)+-1]
  9269  001C4E  0EFF               	movlw	-1
  9270  001C50  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9271  001C56                     l809:
  9272                           
  9273                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9274  001C56  0139               	movlb	57	; () banked
  9275  001C58  A9A2               	btfss	162,4,b	;volatile
  9276  001C5A  D7FD               	goto	l809
  9277                           
  9278                           ; BSR set to: 57
  9279                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9280  001C5C  006F F440  F001    	movff	15632,btemp	;volatile
  9281                           
  9282                           ; BSR set to: 57
  9283                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9284  001C62  52E5               	movf	postdec1,f,c
  9285  001C64  0012               	return		;funcret
  9286  001C66                     __end_of_SPI1_Exchange8bit:
  9287                           	opt callstack 0
  9288                           
  9289 ;; *************** function _ringBufS_init *****************
  9290 ;; Defined at:
  9291 ;;		line 22 in file "ringbufs.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  _this           2  [STACK] PTR volatile struct ring
  9294 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1  [STACK] void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:   16
  9313 ;; This function calls:
  9314 ;;		_memset
  9315 ;; This function is called by:
  9316 ;;		_init_display
  9317 ;; This function uses a reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text20
  9321  00182E                     __ptext20:
  9322                           	opt callstack 0
  9323  00182E                     _ringBufS_init:
  9324                           	opt callstack 13
  9325                           
  9326                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9327                           
  9328                           ; BSR set to: 57
  9329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9330                           ;incstack = 0
  9331  00182E  0E43               	movlw	67
  9332  001830  6EE6               	movwf	postinc1,c
  9333  001832  0E00               	movlw	0
  9334  001834  6EE6               	movwf	postinc1,c
  9335  001836  0E00               	movlw	0
  9336  001838  6EE6               	movwf	postinc1,c
  9337  00183A  0E00               	movlw	0
  9338  00183C  6EE6               	movwf	postinc1,c
  9339                           
  9340                           ;stkvar	__this @ sp[(-4)+-2]
  9341  00183E  0EFA               	movlw	-6
  9342  001840  006F FF8F FFE6     	movff	plusw1,postinc1
  9343  001846  006F FF8F FFE6     	movff	plusw1,postinc1
  9344  00184C  EC58  F0D3         	call	_memset	;wreg free
  9345                           
  9346                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9347  001850  52E5               	movf	postdec1,f,c
  9348  001852  52E5               	movf	postdec1,f,c
  9349  001854  0012               	return		;funcret
  9350  001856                     __end_of_ringBufS_init:
  9351                           	opt callstack 0
  9352                           
  9353 ;; *************** function _init_bsoc *****************
  9354 ;; Defined at:
  9355 ;;		line 110 in file "bsoc.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;		None
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1  [STACK] void 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/2
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:   18
  9376 ;; This function calls:
  9377 ;;		_TMR3_SetInterruptHandler
  9378 ;;		_Volts_to_SOC
  9379 ;;		___fldiv
  9380 ;;		___flmul
  9381 ;;		___fltol
  9382 ;;		___xxtofl
  9383 ;;		_conv_raw_result
  9384 ;; This function is called by:
  9385 ;;		_main
  9386 ;; This function uses a reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text21
  9390  01BB8C                     __ptext21:
  9391                           	opt callstack 0
  9392  01BB8C                     _init_bsoc:
  9393                           	opt callstack 12
  9394                           
  9395                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9396                           
  9397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9398                           ;incstack = 0
  9399  01BB8C  0E00               	movlw	0
  9400  01BB8E  6EE6               	movwf	postinc1,c
  9401  01BB90  0E00               	movlw	0
  9402  01BB92  6EE6               	movwf	postinc1,c
  9403  01BB94  0E7A               	movlw	122
  9404  01BB96  6EE6               	movwf	postinc1,c
  9405  01BB98  0E44               	movlw	68
  9406  01BB9A  6EE6               	movwf	postinc1,c
  9407  01BB9C  0E00               	movlw	0
  9408  01BB9E  6EE6               	movwf	postinc1,c
  9409  01BBA0  0E04               	movlw	4
  9410  01BBA2  6EE6               	movwf	postinc1,c
  9411  01BBA4  ECFA  F0C1         	call	_conv_raw_result	;wreg free
  9412  01BBA8  0060  F007  FFE6   	movff	btemp,postinc1
  9413  01BBAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9414  01BBB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9415  01BBBA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9416  01BBC0  ECB7  F0EC         	call	___fltol	;wreg free
  9417  01BBC4  0060  F007  FFE6   	movff	btemp,postinc1
  9418  01BBCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9419  01BBD0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9420  01BBD6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9421  01BBDC  0E00               	movlw	0
  9422  01BBDE  6EE6               	movwf	postinc1,c
  9423  01BBE0  EC5B  F0E5         	call	___xxtofl	;wreg free
  9424  01BBE4  0060  F007  FFE6   	movff	btemp,postinc1
  9425  01BBEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9426  01BBF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9427  01BBF6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9428  01BBFC  EC61  F0B1         	call	___flmul	;wreg free
  9429  01BC00  0060  F007  FFE6   	movff	btemp,postinc1
  9430  01BC06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9431  01BC0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9432  01BC12  0060  F013  FFE6   	movff	btemp+3,postinc1
  9433  01BC18  ECB7  F0EC         	call	___fltol	;wreg free
  9434  01BC1C  0060  F007  FFE6   	movff	btemp,postinc1
  9435  01BC22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9436  01BC28  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9437  01BC2E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9438  01BC34  EC0A  F0FD         	call	_Volts_to_SOC	;wreg free
  9439  01BC38  0060  F004  F9B5   	movff	btemp,_C+182	;volatile
  9440  01BC3E  0060  F008  F9B6   	movff	btemp+1,_C+183	;volatile
  9441                           
  9442                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9443  01BC44  EE22  F18B         	lfsr	2,_C+140	;volatile
  9444  01BC48  006F FF7B FFE6     	movff	postinc2,postinc1
  9445  01BC4E  006F FF7B FFE6     	movff	postinc2,postinc1
  9446  01BC54  006F FF7B FFE6     	movff	postinc2,postinc1
  9447  01BC5A  006F FF7B FFE6     	movff	postinc2,postinc1
  9448  01BC60  0E00               	movlw	0
  9449  01BC62  6EE6               	movwf	postinc1,c
  9450  01BC64  0E00               	movlw	0
  9451  01BC66  6EE6               	movwf	postinc1,c
  9452  01BC68  0EC8               	movlw	200
  9453  01BC6A  6EE6               	movwf	postinc1,c
  9454  01BC6C  0E42               	movlw	66
  9455  01BC6E  6EE6               	movwf	postinc1,c
  9456  01BC70  0E00               	movlw	0
  9457  01BC72  6EE6               	movwf	postinc1,c
  9458  01BC74  0E00               	movlw	0
  9459  01BC76  6EE6               	movwf	postinc1,c
  9460  01BC78  0E7A               	movlw	122
  9461  01BC7A  6EE6               	movwf	postinc1,c
  9462  01BC7C  0E44               	movlw	68
  9463  01BC7E  6EE6               	movwf	postinc1,c
  9464  01BC80  0E00               	movlw	0
  9465  01BC82  6EE6               	movwf	postinc1,c
  9466  01BC84  0E04               	movlw	4
  9467  01BC86  6EE6               	movwf	postinc1,c
  9468  01BC88  ECFA  F0C1         	call	_conv_raw_result	;wreg free
  9469  01BC8C  0060  F007  FFE6   	movff	btemp,postinc1
  9470  01BC92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9471  01BC98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9472  01BC9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9473  01BCA4  ECB7  F0EC         	call	___fltol	;wreg free
  9474  01BCA8  0060  F007  FFE6   	movff	btemp,postinc1
  9475  01BCAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9476  01BCB4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9477  01BCBA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9478  01BCC0  0E00               	movlw	0
  9479  01BCC2  6EE6               	movwf	postinc1,c
  9480  01BCC4  EC5B  F0E5         	call	___xxtofl	;wreg free
  9481  01BCC8  0060  F007  FFE6   	movff	btemp,postinc1
  9482  01BCCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9483  01BCD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9484  01BCDA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9485  01BCE0  EC61  F0B1         	call	___flmul	;wreg free
  9486  01BCE4  0060  F007  FFE6   	movff	btemp,postinc1
  9487  01BCEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9488  01BCF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9489  01BCF6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9490  01BCFC  ECB7  F0EC         	call	___fltol	;wreg free
  9491  01BD00  0060  F007  FFE6   	movff	btemp,postinc1
  9492  01BD06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9493  01BD0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9494  01BD12  0060  F013  FFE6   	movff	btemp+3,postinc1
  9495  01BD18  EC0A  F0FD         	call	_Volts_to_SOC	;wreg free
  9496  01BD1C  0060  F004  F00B   	movff	btemp,btemp+10
  9497  01BD22  0060  F008  F00C   	movff	btemp+1,btemp+11
  9498  01BD28  500B               	movf	(btemp+10)^0,w,c
  9499  01BD2A  6E05               	movwf	(btemp+4)^0,c
  9500  01BD2C  500C               	movf	(btemp+11)^0,w,c
  9501  01BD2E  6E06               	movwf	(btemp+5)^0,c
  9502  01BD30  6A07               	clrf	(btemp+6)^0,c
  9503  01BD32  6A08               	clrf	(btemp+7)^0,c
  9504  01BD34  0060  F017  FFE6   	movff	btemp+4,postinc1
  9505  01BD3A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  9506  01BD40  0060  F01F  FFE6   	movff	btemp+6,postinc1
  9507  01BD46  0060  F023  FFE6   	movff	btemp+7,postinc1
  9508  01BD4C  0E00               	movlw	0
  9509  01BD4E  6EE6               	movwf	postinc1,c
  9510  01BD50  EC5B  F0E5         	call	___xxtofl	;wreg free
  9511  01BD54  0060  F007  FFE6   	movff	btemp,postinc1
  9512  01BD5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9513  01BD60  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9514  01BD66  0060  F013  FFE6   	movff	btemp+3,postinc1
  9515  01BD6C  ECB2  F0BC         	call	___fldiv	;wreg free
  9516  01BD70  0060  F007  FFE6   	movff	btemp,postinc1
  9517  01BD76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9518  01BD7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9519  01BD82  0060  F013  FFE6   	movff	btemp+3,postinc1
  9520  01BD88  EC61  F0B1         	call	___flmul	;wreg free
  9521  01BD8C  0060  F004  F98F   	movff	btemp,_C+144	;volatile
  9522  01BD92  0060  F008  F990   	movff	btemp+1,_C+145	;volatile
  9523  01BD98  0060  F00C  F991   	movff	btemp+2,_C+146	;volatile
  9524  01BD9E  0060  F010  F992   	movff	btemp+3,_C+147	;volatile
  9525                           
  9526                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9527  01BDA4  EE22  F18F         	lfsr	2,_C+144	;volatile
  9528  01BDA8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9529  01BDAE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9530  01BDB4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9531  01BDBA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9532                           
  9533                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9534  01BDC0  0E40               	movlw	low _calc_bsoc
  9535  01BDC2  6EE6               	movwf	postinc1,c
  9536  01BDC4  0E46               	movlw	high _calc_bsoc
  9537  01BDC6  6EE6               	movwf	postinc1,c
  9538  01BDC8  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9539  01BDCA  6EE6               	movwf	postinc1,c
  9540  01BDCC  ECA3  F00C         	call	_TMR3_SetInterruptHandler	;wreg free
  9541                           
  9542                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9543  01BDD0  0012               	return		;funcret
  9544  01BDD2                     __end_of_init_bsoc:
  9545                           	opt callstack 0
  9546                           
  9547 ;; *************** function _Volts_to_SOC *****************
  9548 ;; Defined at:
  9549 ;;		line 175 in file "bsoc.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  cvoltage        4  [STACK] const unsigned long 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  soc             2  [STACK] unsigned short 
  9554 ;;  slot            1  [STACK] unsigned char 
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  2  [STACK] unsigned short 
  9557 ;; Registers used:
  9558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/2
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;Total ram usage:        0 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:   15
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_init_bsoc
  9575 ;; This function uses a reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text22
  9579  01FA14                     __ptext22:
  9580                           	opt callstack 0
  9581  01FA14                     _Volts_to_SOC:
  9582                           	opt callstack 0
  9583                           
  9584                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9585  01FA14  52E6               	movf	postinc1,f,c
  9586  01FA16  52E6               	movf	postinc1,f,c
  9587  01FA18  52E6               	movf	postinc1,f,c
  9588                           
  9589                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9590                           ;stkvar	_soc @ sp[(-3)+0]
  9591                           
  9592                           ;incstack = 0
  9593  01FA1A  0EFD               	movlw	-3
  9594  01FA1C  6AE3               	clrf	plusw1,c
  9595  01FA1E  0EFE               	movlw	-2
  9596  01FA20  6AE3               	clrf	plusw1,c
  9597                           
  9598                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9599                           ;stkvar	_slot @ sp[(-3)+2]
  9600  01FA22  0EFF               	movlw	-1
  9601  01FA24  6AE3               	clrf	plusw1,c
  9602  01FA26                     l13735:
  9603                           
  9604                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9605                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9606                           ;stkvar	_slot @ sp[(-3)+2]
  9607  01FA26  0EFF               	movlw	-1
  9608  01FA28  50E3               	movf	plusw1,w,c
  9609  01FA2A  0D08               	mullw	8
  9610  01FA2C  0E13               	movlw	low _BVSOC_TABLE
  9611  01FA2E  24F3               	addwf	243,w,c
  9612  01FA30  6EF6               	movwf	tblptrl,c
  9613  01FA32  0EF8               	movlw	high _BVSOC_TABLE
  9614  01FA34  20F4               	addwfc	244,w,c
  9615  01FA36  6EF7               	movwf	tblptrh,c
  9616  01FA38                     	if	1	;There are 3 active tblptr bytes
  9617  01FA38  6AF8               	clrf	tblptru,c
  9618  01FA3A  0E00               	movlw	low (__mediumconst shr (0+16))
  9619  01FA3C  22F8               	addwfc	tblptru,f,c
  9620  01FA3E                     	endif
  9621  01FA3E  0EF9               	movlw	-7
  9622  01FA40  50E3               	movf	plusw1,w,c
  9623  01FA42  0009               	tblrd		*+
  9624  01FA44  5CF5               	subwf	tablat,w,c
  9625  01FA46  0EFA               	movlw	-6
  9626  01FA48  50E3               	movf	plusw1,w,c
  9627  01FA4A  0009               	tblrd		*+
  9628  01FA4C  58F5               	subwfb	tablat,w,c
  9629  01FA4E  0EFB               	movlw	-5
  9630  01FA50  50E3               	movf	plusw1,w,c
  9631  01FA52  0009               	tblrd		*+
  9632  01FA54  58F5               	subwfb	tablat,w,c
  9633  01FA56  0EFC               	movlw	-4
  9634  01FA58  50E3               	movf	plusw1,w,c
  9635  01FA5A  0009               	tblrd		*+
  9636  01FA5C  58F5               	subwfb	tablat,w,c
  9637  01FA5E  B0D8               	btfsc	status,0,c
  9638  01FA60  D020               	goto	l13739
  9639                           
  9640                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9641                           ;stkvar	_slot @ sp[(-3)+2]
  9642  01FA62  0EFF               	movlw	-1
  9643  01FA64  50E3               	movf	plusw1,w,c
  9644  01FA66  0D08               	mullw	8
  9645  01FA68  0E04               	movlw	4
  9646  01FA6A  26F3               	addwf	243,f,c
  9647  01FA6C  0E00               	movlw	0
  9648  01FA6E  22F4               	addwfc	244,f,c
  9649  01FA70  0E13               	movlw	low _BVSOC_TABLE
  9650  01FA72  24F3               	addwf	243,w,c
  9651  01FA74  6EF6               	movwf	tblptrl,c
  9652  01FA76  0EF8               	movlw	high _BVSOC_TABLE
  9653  01FA78  20F4               	addwfc	244,w,c
  9654  01FA7A  6EF7               	movwf	tblptrh,c
  9655  01FA7C                     	if	1	;There are 3 active tblptr bytes
  9656  01FA7C  6AF8               	clrf	tblptru,c
  9657  01FA7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9658  01FA80  22F8               	addwfc	tblptru,f,c
  9659  01FA82                     	endif
  9660  01FA82  0009               	tblrd		*+
  9661  01FA84  006F FFD4  F00B    	movff	tablat,btemp+10
  9662  01FA8A  0009               	tblrd		*+
  9663  01FA8C  006F FFD4  F00C    	movff	tablat,btemp+11
  9664                           
  9665                           ;stkvar	_soc @ sp[(-3)+0]
  9666  01FA92  0EFD               	movlw	-3
  9667  01FA94  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9668  01FA9A  0EFE               	movlw	-2
  9669  01FA9C  0060  F033  FFE3   	movff	btemp+11,plusw1
  9670  01FAA2                     l13739:
  9671                           
  9672                           ;bsoc.c: 187:  }
  9673                           ;stkvar	_slot @ sp[(-3)+2]
  9674  01FAA2  0EFF               	movlw	-1
  9675  01FAA4  2AE3               	incf	plusw1,f,c
  9676                           
  9677                           ;stkvar	_slot @ sp[(-3)+2]
  9678  01FAA6  0EFF               	movlw	-1
  9679  01FAA8  006F FF8C  F001    	movff	plusw1,btemp
  9680  01FAAE  0E19               	movlw	25
  9681  01FAB0  6401               	cpfsgt	btemp^0,c
  9682  01FAB2  D7B9               	goto	l13735
  9683                           
  9684                           ;bsoc.c: 188:  return soc;
  9685                           ;stkvar	_soc @ sp[(-3)+0]
  9686  01FAB4  0EFD               	movlw	-3
  9687  01FAB6  006F FF8C  F001    	movff	plusw1,btemp
  9688  01FABC  0EFE               	movlw	-2
  9689  01FABE  006F FF8C  F002    	movff	plusw1,btemp+1
  9690                           
  9691                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9692  01FAC4  0EF9               	movlw	249
  9693  01FAC6  26E1               	addwf	fsr1l,f,c
  9694  01FAC8  0EFF               	movlw	255
  9695  01FACA  22E2               	addwfc	fsr1h,f,c
  9696  01FACC  0012               	return		;funcret
  9697  01FACE                     __end_of_Volts_to_SOC:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function _hid_display *****************
  9701 ;; Defined at:
  9702 ;;		line 22 in file "hid.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  h               2  [STACK] PTR struct H_data
  9705 ;;		 -> H(9), 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;		None
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  2  [STACK] PTR struct H_data
  9710 ;; Registers used:
  9711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/39
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;Total ram usage:        0 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:   17
  9724 ;; This function calls:
  9725 ;;		_hid_input
  9726 ;; This function is called by:
  9727 ;;		_main
  9728 ;; This function uses a reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text23
  9732  01C688                     __ptext23:
  9733                           	opt callstack 0
  9734  01C688                     _hid_display:
  9735                           	opt callstack 13
  9736                           
  9737                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9738                           ;stkvar	_h @ sp[(0)+-2]
  9739                           
  9740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9741                           ;incstack = 0
  9742  01C688  0EFE               	movlw	-2
  9743  01C68A  006F FF8F FFE6     	movff	plusw1,postinc1
  9744  01C690  006F FF8F FFE6     	movff	plusw1,postinc1
  9745  01C696  ECC6  F0F2         	call	_hid_input	;wreg free
  9746                           
  9747                           ;hid.c: 26:  switch (h->h_state) {
  9748  01C69A  D0E6               	goto	l16851
  9749  01C69C                     l16825:
  9750                           
  9751                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9752                           ;stkvar	_h @ sp[(0)+-2]
  9753  01C69C  0EFE               	movlw	-2
  9754  01C69E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9755  01C6A4  0EFF               	movlw	-1
  9756  01C6A6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9757  01C6AC  0E01               	movlw	1
  9758  01C6AE  240B               	addwf	(btemp+10)^0,w,c
  9759  01C6B0  6ED9               	movwf	fsr2l,c
  9760  01C6B2  0E00               	movlw	0
  9761  01C6B4  200C               	addwfc	(btemp+11)^0,w,c
  9762  01C6B6  6EDA               	movwf	fsr2h,c
  9763  01C6B8  0E01               	movlw	1
  9764  01C6BA  6EDF               	movwf	indf2,c
  9765                           
  9766                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9767                           ;stkvar	_h @ sp[(0)+-2]
  9768  01C6BC  0EFE               	movlw	-2
  9769  01C6BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9770  01C6C4  0EFF               	movlw	-1
  9771  01C6C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9772  01C6CC  0E00               	movlw	0
  9773  01C6CE  6EDF               	movwf	indf2,c
  9774                           
  9775                           ;hid.c: 30:   h->wait_enter = 1;
  9776                           ;stkvar	_h @ sp[(0)+-2]
  9777  01C6D0  0EFE               	movlw	-2
  9778  01C6D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9779  01C6D8  0EFF               	movlw	-1
  9780  01C6DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9781  01C6E0  0E04               	movlw	4
  9782  01C6E2  240B               	addwf	(btemp+10)^0,w,c
  9783  01C6E4  6ED9               	movwf	fsr2l,c
  9784  01C6E6  0E00               	movlw	0
  9785  01C6E8  200C               	addwfc	(btemp+11)^0,w,c
  9786  01C6EA  6EDA               	movwf	fsr2h,c
  9787  01C6EC  0E01               	movlw	1
  9788  01C6EE  6EDF               	movwf	indf2,c
  9789                           
  9790                           ;hid.c: 31:   h->wait_select = 1;
  9791                           ;stkvar	_h @ sp[(0)+-2]
  9792  01C6F0  0EFE               	movlw	-2
  9793  01C6F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9794  01C6F8  0EFF               	movlw	-1
  9795  01C6FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9796  01C700  0E02               	movlw	2
  9797  01C702  240B               	addwf	(btemp+10)^0,w,c
  9798  01C704  6ED9               	movwf	fsr2l,c
  9799  01C706  0E00               	movlw	0
  9800  01C708  200C               	addwfc	(btemp+11)^0,w,c
  9801  01C70A  6EDA               	movwf	fsr2h,c
  9802  01C70C  0E01               	movlw	1
  9803  01C70E  6EDF               	movwf	indf2,c
  9804                           
  9805                           ;hid.c: 32:   h->wait_calib = 1;
  9806                           ;stkvar	_h @ sp[(0)+-2]
  9807  01C710  0EFE               	movlw	-2
  9808  01C712  006F FF8C  F00B    	movff	plusw1,btemp+10
  9809  01C718  0EFF               	movlw	-1
  9810  01C71A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9811  01C720  0E06               	movlw	6
  9812  01C722  240B               	addwf	(btemp+10)^0,w,c
  9813  01C724  6ED9               	movwf	fsr2l,c
  9814  01C726  0E00               	movlw	0
  9815  01C728  200C               	addwfc	(btemp+11)^0,w,c
  9816  01C72A  6EDA               	movwf	fsr2h,c
  9817  01C72C  0E01               	movlw	1
  9818  01C72E  6EDF               	movwf	indf2,c
  9819                           
  9820                           ;hid.c: 33:   h->select_p = SW_OFF;
  9821                           ;stkvar	_h @ sp[(0)+-2]
  9822  01C730  0EFE               	movlw	-2
  9823  01C732  006F FF8C  F00B    	movff	plusw1,btemp+10
  9824  01C738  0EFF               	movlw	-1
  9825  01C73A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9826  01C740  0E03               	movlw	3
  9827  01C742  240B               	addwf	(btemp+10)^0,w,c
  9828  01C744  6ED9               	movwf	fsr2l,c
  9829  01C746  0E00               	movlw	0
  9830  01C748  200C               	addwfc	(btemp+11)^0,w,c
  9831  01C74A  6EDA               	movwf	fsr2h,c
  9832  01C74C  0E00               	movlw	0
  9833  01C74E  6EDF               	movwf	indf2,c
  9834                           
  9835                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9836                           ;stkvar	_h @ sp[(0)+-2]
  9837  01C750  0EFE               	movlw	-2
  9838  01C752  006F FF8C  F00B    	movff	plusw1,btemp+10
  9839  01C758  0EFF               	movlw	-1
  9840  01C75A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9841  01C760  0E05               	movlw	5
  9842  01C762  240B               	addwf	(btemp+10)^0,w,c
  9843  01C764  6ED9               	movwf	fsr2l,c
  9844  01C766  0E00               	movlw	0
  9845  01C768  200C               	addwfc	(btemp+11)^0,w,c
  9846  01C76A  6EDA               	movwf	fsr2h,c
  9847  01C76C  0E00               	movlw	0
  9848  01C76E  6EDF               	movwf	indf2,c
  9849                           
  9850                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9851                           ;stkvar	_h @ sp[(0)+-2]
  9852  01C770  0EFE               	movlw	-2
  9853  01C772  006F FF8C  F00B    	movff	plusw1,btemp+10
  9854  01C778  0EFF               	movlw	-1
  9855  01C77A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9856  01C780  0E07               	movlw	7
  9857  01C782  240B               	addwf	(btemp+10)^0,w,c
  9858  01C784  6ED9               	movwf	fsr2l,c
  9859  01C786  0E00               	movlw	0
  9860  01C788  200C               	addwfc	(btemp+11)^0,w,c
  9861  01C78A  6EDA               	movwf	fsr2h,c
  9862  01C78C  0E00               	movlw	0
  9863  01C78E  D06A               	goto	L5
  9864  01C790                     l16841:
  9865                           
  9866                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9867                           ;stkvar	_h @ sp[(0)+-2]
  9868  01C790  0EFE               	movlw	-2
  9869  01C792  006F FF8C  F00B    	movff	plusw1,btemp+10
  9870  01C798  0EFF               	movlw	-1
  9871  01C79A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9872  01C7A0  0E02               	movlw	2
  9873  01C7A2  240B               	addwf	(btemp+10)^0,w,c
  9874  01C7A4  6ED9               	movwf	fsr2l,c
  9875  01C7A6  0E00               	movlw	0
  9876  01C7A8  200C               	addwfc	(btemp+11)^0,w,c
  9877  01C7AA  6EDA               	movwf	fsr2h,c
  9878  01C7AC  50DF               	movf	indf2,w,c
  9879  01C7AE  A4D8               	btfss	status,2,c
  9880  01C7B0  D076               	goto	l2265
  9881                           
  9882                           ;stkvar	_h @ sp[(0)+-2]
  9883  01C7B2  0EFE               	movlw	-2
  9884  01C7B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9885  01C7BA  0EFF               	movlw	-1
  9886  01C7BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9887  01C7C2  0E03               	movlw	3
  9888  01C7C4  240B               	addwf	(btemp+10)^0,w,c
  9889  01C7C6  6ED9               	movwf	fsr2l,c
  9890  01C7C8  0E00               	movlw	0
  9891  01C7CA  200C               	addwfc	(btemp+11)^0,w,c
  9892  01C7CC  6EDA               	movwf	fsr2h,c
  9893  01C7CE  50DF               	movf	indf2,w,c
  9894  01C7D0  A4D8               	btfss	status,2,c
  9895  01C7D2  D065               	goto	l2265
  9896                           
  9897                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9898                           ;stkvar	_h @ sp[(0)+-2]
  9899  01C7D4  0EFE               	movlw	-2
  9900  01C7D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9901  01C7DC  0EFF               	movlw	-1
  9902  01C7DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9903  01C7E4  0E08               	movlw	8
  9904  01C7E6  240B               	addwf	(btemp+10)^0,w,c
  9905  01C7E8  6ED9               	movwf	fsr2l,c
  9906  01C7EA  0E00               	movlw	0
  9907  01C7EC  200C               	addwfc	(btemp+11)^0,w,c
  9908  01C7EE  6EDA               	movwf	fsr2h,c
  9909                           
  9910                           ;stkvar	_h @ sp[(0)+-2]
  9911  01C7F0  0EFE               	movlw	-2
  9912  01C7F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9913  01C7F8  0EFF               	movlw	-1
  9914  01C7FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9915  01C800  0E08               	movlw	8
  9916  01C802  240B               	addwf	(btemp+10)^0,w,c
  9917  01C804  6EE9               	movwf	fsr0l,c
  9918  01C806  0E00               	movlw	0
  9919  01C808  200C               	addwfc	(btemp+11)^0,w,c
  9920  01C80A  6EEA               	movwf	fsr0h,c
  9921  01C80C  2AEF               	incf	indf0,f,c
  9922  01C80E  50EF               	movf	indf0,w,c
  9923  01C810  0B03               	andlw	3
  9924  01C812  6EDF               	movwf	indf2,c
  9925                           
  9926                           ;hid.c: 41:    h->hid_display = h->sequence;
  9927                           ;stkvar	_h @ sp[(0)+-2]
  9928  01C814  0EFE               	movlw	-2
  9929  01C816  006F FF8C  F00B    	movff	plusw1,btemp+10
  9930  01C81C  0EFF               	movlw	-1
  9931  01C81E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9932  01C824  0E08               	movlw	8
  9933  01C826  240B               	addwf	(btemp+10)^0,w,c
  9934  01C828  6ED9               	movwf	fsr2l,c
  9935  01C82A  0E00               	movlw	0
  9936  01C82C  200C               	addwfc	(btemp+11)^0,w,c
  9937  01C82E  6EDA               	movwf	fsr2h,c
  9938                           
  9939                           ;stkvar	_h @ sp[(0)+-2]
  9940  01C830  0EFE               	movlw	-2
  9941  01C832  006F FF8F FFE9     	movff	plusw1,fsr0l
  9942  01C838  0EFF               	movlw	-1
  9943  01C83A  006F FF8F FFEA     	movff	plusw1,fsr0h
  9944  01C840  006F FF7F FFEF     	movff	indf2,indf0
  9945                           
  9946                           ;hid.c: 42:    h->wait_select = 1;
  9947                           ;stkvar	_h @ sp[(0)+-2]
  9948  01C846  0EFE               	movlw	-2
  9949  01C848  006F FF8C  F00B    	movff	plusw1,btemp+10
  9950  01C84E  0EFF               	movlw	-1
  9951  01C850  006F FF8C  F00C    	movff	plusw1,btemp+11
  9952  01C856  0E02               	movlw	2
  9953  01C858  240B               	addwf	(btemp+10)^0,w,c
  9954  01C85A  6ED9               	movwf	fsr2l,c
  9955  01C85C  0E00               	movlw	0
  9956  01C85E  200C               	addwfc	(btemp+11)^0,w,c
  9957  01C860  6EDA               	movwf	fsr2h,c
  9958  01C862  0E01               	movlw	1
  9959  01C864                     L5:
  9960  01C864  6EDF               	movwf	indf2,c
  9961  01C866  D01B               	goto	l2265
  9962  01C868                     l16851:
  9963                           
  9964                           ;stkvar	_h @ sp[(0)+-2]
  9965  01C868  0EFE               	movlw	-2
  9966  01C86A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9967  01C870  0EFF               	movlw	-1
  9968  01C872  006F FF8C  F00C    	movff	plusw1,btemp+11
  9969  01C878  0E01               	movlw	1
  9970  01C87A  240B               	addwf	(btemp+10)^0,w,c
  9971  01C87C  6ED9               	movwf	fsr2l,c
  9972  01C87E  0E00               	movlw	0
  9973  01C880  200C               	addwfc	(btemp+11)^0,w,c
  9974  01C882  6EDA               	movwf	fsr2h,c
  9975  01C884  50DF               	movf	indf2,w,c
  9976  01C886  6E0B               	movwf	(btemp+10)^0,c
  9977  01C888  6A0C               	clrf	(btemp+11)^0,c
  9978                           
  9979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9980                           ; Switch size 1, requested type "simple"
  9981                           ; Number of cases is 1, Range of values is 0 to 0
  9982                           ; switch strategies available:
  9983                           ; Name         Instructions Cycles
  9984                           ; simple_byte            4     3 (average)
  9985                           ;	Chosen strategy is simple_byte
  9986  01C88A  500C               	movf	(btemp+11)^0,w,c
  9987  01C88C  0A00               	xorlw	0	; case 0
  9988  01C88E  A4D8               	btfss	status,2,c
  9989  01C890  D77F               	goto	l16841
  9990                           
  9991                           ; Switch size 1, requested type "simple"
  9992                           ; Number of cases is 2, Range of values is 0 to 1
  9993                           ; switch strategies available:
  9994                           ; Name         Instructions Cycles
  9995                           ; simple_byte            7     4 (average)
  9996                           ;	Chosen strategy is simple_byte
  9997  01C892  500B               	movf	(btemp+10)^0,w,c
  9998  01C894  0A00               	xorlw	0	; case 0
  9999  01C896  B4D8               	btfsc	status,2,c
 10000  01C898  D701               	goto	l16825
 10001  01C89A  0A01               	xorlw	1	; case 1
 10002  01C89C  D779               	goto	l16841
 10003  01C89E                     l2265:
 10004                           
 10005                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10006  01C89E  52E5               	movf	postdec1,f,c
 10007  01C8A0  52E5               	movf	postdec1,f,c
 10008  01C8A2  0012               	return		;funcret
 10009  01C8A4                     __end_of_hid_display:
 10010                           	opt callstack 0
 10011                           
 10012 ;; *************** function _hid_input *****************
 10013 ;; Defined at:
 10014 ;;		line 3 in file "hid.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  h               2  [STACK] PTR struct H_data
 10017 ;;		 -> H(9), 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  2  [STACK] PTR struct H_data
 10022 ;; Registers used:
 10023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/39
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   16
 10036 ;; This function calls:
 10037 ;;		_get_switch
 10038 ;; This function is called by:
 10039 ;;		_hid_display
 10040 ;; This function uses a reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text24
 10044  01E58C                     __ptext24:
 10045                           	opt callstack 0
 10046  01E58C                     _hid_input:
 10047                           	opt callstack 13
 10048                           
 10049                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10050                           
 10051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10052                           ;incstack = 0
 10053  01E58C  0E02               	movlw	2
 10054  01E58E  6EE6               	movwf	postinc1,c
 10055  01E590  ECBF  F00B         	call	_get_switch	;wreg free
 10056  01E594  5001               	movf	btemp^0,w,c
 10057  01E596  B4D8               	btfsc	status,2,c
 10058  01E598  D02C               	goto	l16587
 10059                           
 10060                           ;hid.c: 6:   h->wait_select = 0;
 10061                           ;stkvar	_h @ sp[(0)+-2]
 10062  01E59A  0EFE               	movlw	-2
 10063  01E59C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10064  01E5A2  0EFF               	movlw	-1
 10065  01E5A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10066  01E5AA  0E02               	movlw	2
 10067  01E5AC  240B               	addwf	(btemp+10)^0,w,c
 10068  01E5AE  6ED9               	movwf	fsr2l,c
 10069  01E5B0  0E00               	movlw	0
 10070  01E5B2  200C               	addwfc	(btemp+11)^0,w,c
 10071  01E5B4  6EDA               	movwf	fsr2h,c
 10072  01E5B6  0E00               	movlw	0
 10073  01E5B8  6EDF               	movwf	indf2,c
 10074                           
 10075                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10076  01E5BA  0E02               	movlw	2
 10077  01E5BC  6EE6               	movwf	postinc1,c
 10078  01E5BE  ECBF  F00B         	call	_get_switch	;wreg free
 10079  01E5C2  5001               	movf	btemp^0,w,c
 10080  01E5C4  B4D8               	btfsc	status,2,c
 10081  01E5C6  D003               	goto	u16190
 10082  01E5C8  6A0C               	clrf	(btemp+11)^0,c
 10083  01E5CA  2A0C               	incf	(btemp+11)^0,f,c
 10084  01E5CC  D001               	goto	u16208
 10085  01E5CE                     u16190:
 10086  01E5CE  6A0C               	clrf	(btemp+11)^0,c
 10087  01E5D0                     u16208:
 10088                           
 10089                           ;stkvar	_h @ sp[(0)+-2]
 10090  01E5D0  0EFE               	movlw	-2
 10091  01E5D2  006F FF8C  F009    	movff	plusw1,btemp+8
 10092  01E5D8  0EFF               	movlw	-1
 10093  01E5DA  006F FF8C  F00A    	movff	plusw1,btemp+9
 10094  01E5E0  0E03               	movlw	3
 10095  01E5E2  2409               	addwf	(btemp+8)^0,w,c
 10096  01E5E4  6ED9               	movwf	fsr2l,c
 10097  01E5E6  0E00               	movlw	0
 10098  01E5E8  200A               	addwfc	(btemp+9)^0,w,c
 10099  01E5EA  6EDA               	movwf	fsr2h,c
 10100  01E5EC  0060  F033  FFDF   	movff	btemp+11,indf2
 10101  01E5F2                     l16587:
 10102                           
 10103                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10104  01E5F2  0E03               	movlw	3
 10105  01E5F4  6EE6               	movwf	postinc1,c
 10106  01E5F6  ECBF  F00B         	call	_get_switch	;wreg free
 10107  01E5FA  5001               	movf	btemp^0,w,c
 10108  01E5FC  B4D8               	btfsc	status,2,c
 10109  01E5FE  D02C               	goto	l16593
 10110                           
 10111                           ;hid.c: 11:   h->wait_enter = 0;
 10112                           ;stkvar	_h @ sp[(0)+-2]
 10113  01E600  0EFE               	movlw	-2
 10114  01E602  006F FF8C  F00B    	movff	plusw1,btemp+10
 10115  01E608  0EFF               	movlw	-1
 10116  01E60A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10117  01E610  0E04               	movlw	4
 10118  01E612  240B               	addwf	(btemp+10)^0,w,c
 10119  01E614  6ED9               	movwf	fsr2l,c
 10120  01E616  0E00               	movlw	0
 10121  01E618  200C               	addwfc	(btemp+11)^0,w,c
 10122  01E61A  6EDA               	movwf	fsr2h,c
 10123  01E61C  0E00               	movlw	0
 10124  01E61E  6EDF               	movwf	indf2,c
 10125                           
 10126                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10127  01E620  0E03               	movlw	3
 10128  01E622  6EE6               	movwf	postinc1,c
 10129  01E624  ECBF  F00B         	call	_get_switch	;wreg free
 10130  01E628  5001               	movf	btemp^0,w,c
 10131  01E62A  B4D8               	btfsc	status,2,c
 10132  01E62C  D003               	goto	u16220
 10133  01E62E  6A0C               	clrf	(btemp+11)^0,c
 10134  01E630  2A0C               	incf	(btemp+11)^0,f,c
 10135  01E632  D001               	goto	u16238
 10136  01E634                     u16220:
 10137  01E634  6A0C               	clrf	(btemp+11)^0,c
 10138  01E636                     u16238:
 10139                           
 10140                           ;stkvar	_h @ sp[(0)+-2]
 10141  01E636  0EFE               	movlw	-2
 10142  01E638  006F FF8C  F009    	movff	plusw1,btemp+8
 10143  01E63E  0EFF               	movlw	-1
 10144  01E640  006F FF8C  F00A    	movff	plusw1,btemp+9
 10145  01E646  0E05               	movlw	5
 10146  01E648  2409               	addwf	(btemp+8)^0,w,c
 10147  01E64A  6ED9               	movwf	fsr2l,c
 10148  01E64C  0E00               	movlw	0
 10149  01E64E  200A               	addwfc	(btemp+9)^0,w,c
 10150  01E650  6EDA               	movwf	fsr2h,c
 10151  01E652  0060  F033  FFDF   	movff	btemp+11,indf2
 10152  01E658                     l16593:
 10153                           
 10154                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10155  01E658  0E04               	movlw	4
 10156  01E65A  6EE6               	movwf	postinc1,c
 10157  01E65C  ECBF  F00B         	call	_get_switch	;wreg free
 10158  01E660  5001               	movf	btemp^0,w,c
 10159  01E662  B4D8               	btfsc	status,2,c
 10160  01E664  D02C               	goto	l2256
 10161                           
 10162                           ;hid.c: 16:   h->wait_calib = 0;
 10163                           ;stkvar	_h @ sp[(0)+-2]
 10164  01E666  0EFE               	movlw	-2
 10165  01E668  006F FF8C  F00B    	movff	plusw1,btemp+10
 10166  01E66E  0EFF               	movlw	-1
 10167  01E670  006F FF8C  F00C    	movff	plusw1,btemp+11
 10168  01E676  0E06               	movlw	6
 10169  01E678  240B               	addwf	(btemp+10)^0,w,c
 10170  01E67A  6ED9               	movwf	fsr2l,c
 10171  01E67C  0E00               	movlw	0
 10172  01E67E  200C               	addwfc	(btemp+11)^0,w,c
 10173  01E680  6EDA               	movwf	fsr2h,c
 10174  01E682  0E00               	movlw	0
 10175  01E684  6EDF               	movwf	indf2,c
 10176                           
 10177                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10178  01E686  0E04               	movlw	4
 10179  01E688  6EE6               	movwf	postinc1,c
 10180  01E68A  ECBF  F00B         	call	_get_switch	;wreg free
 10181  01E68E  5001               	movf	btemp^0,w,c
 10182  01E690  B4D8               	btfsc	status,2,c
 10183  01E692  D003               	goto	u16250
 10184  01E694  6A0C               	clrf	(btemp+11)^0,c
 10185  01E696  2A0C               	incf	(btemp+11)^0,f,c
 10186  01E698  D001               	goto	u16268
 10187  01E69A                     u16250:
 10188  01E69A  6A0C               	clrf	(btemp+11)^0,c
 10189  01E69C                     u16268:
 10190                           
 10191                           ;stkvar	_h @ sp[(0)+-2]
 10192  01E69C  0EFE               	movlw	-2
 10193  01E69E  006F FF8C  F009    	movff	plusw1,btemp+8
 10194  01E6A4  0EFF               	movlw	-1
 10195  01E6A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 10196  01E6AC  0E07               	movlw	7
 10197  01E6AE  2409               	addwf	(btemp+8)^0,w,c
 10198  01E6B0  6ED9               	movwf	fsr2l,c
 10199  01E6B2  0E00               	movlw	0
 10200  01E6B4  200A               	addwfc	(btemp+9)^0,w,c
 10201  01E6B6  6EDA               	movwf	fsr2h,c
 10202  01E6B8  0060  F033  FFDF   	movff	btemp+11,indf2
 10203  01E6BE                     l2256:
 10204                           
 10205                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10206  01E6BE  52E5               	movf	postdec1,f,c
 10207  01E6C0  52E5               	movf	postdec1,f,c
 10208  01E6C2  0012               	return		;funcret
 10209  01E6C4                     __end_of_hid_input:
 10210                           	opt callstack 0
 10211                           
 10212 ;; *************** function _esr_check *****************
 10213 ;; Defined at:
 10214 ;;		line 197 in file "bsoc.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;  fsm             1  [STACK] const unsigned char 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  4  [STACK] float 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:   18
 10235 ;; This function calls:
 10236 ;;		_StartTimer
 10237 ;;		_TimerDone
 10238 ;;		___fldiv
 10239 ;;		___flsub
 10240 ;;		_conv_raw_result
 10241 ;;		_fabsf
 10242 ;;		_set_load_relay_one
 10243 ;;		_set_load_relay_two
 10244 ;;		_update_adc_result
 10245 ;; This function is called by:
 10246 ;;		_main
 10247 ;; This function uses a reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text25
 10251  01A99C                     __ptext25:
 10252                           	opt callstack 0
 10253  01A99C                     _esr_check:
 10254                           	opt callstack 12
 10255                           
 10256                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10257                           ;stkvar	_fsm @ sp[(0)+-1]
 10258                           
 10259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10260                           ;incstack = 0
 10261  01A99C  0EFF               	movlw	-1
 10262  01A99E  50E3               	movf	plusw1,w,c
 10263  01A9A0  B4D8               	btfsc	status,2,c
 10264  01A9A2  D149               	goto	l14145
 10265                           
 10266                           ;bsoc.c: 202:   esr_state = 0;
 10267  01A9A4  0100               	movlb	0	; () banked
 10268  01A9A6  6BD4               	clrf	esr_check@esr_state& (0+255),b
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;bsoc.c: 203:   return -10.0;
 10272  01A9A8  0E00               	movlw	0
 10273  01A9AA  6E01               	movwf	btemp^0,c
 10274  01A9AC  0E00               	movlw	0
 10275  01A9AE  6E02               	movwf	(btemp+1)^0,c
 10276  01A9B0  0E20               	movlw	32
 10277  01A9B2  6E03               	movwf	(btemp+2)^0,c
 10278  01A9B4  0EC1               	movlw	193
 10279  01A9B6  D15B               	goto	L6
 10280  01A9B8                     l14077:
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10284  01A9B8  0E10               	movlw	16
 10285  01A9BA  6EE6               	movwf	postinc1,c
 10286  01A9BC  0E27               	movlw	39
 10287  01A9BE  6EE6               	movwf	postinc1,c
 10288  01A9C0  0E0C               	movlw	12
 10289  01A9C2  6EE6               	movwf	postinc1,c
 10290  01A9C4  ECBA  F009         	call	_StartTimer	;wreg free
 10291  01A9C8                     l14079:
 10292                           
 10293                           ;bsoc.c: 209:   esr_state++;
 10294  01A9C8  0100               	movlb	0	; () banked
 10295  01A9CA  2BD4               	incf	esr_check@esr_state& (0+255),f,b
 10296                           
 10297                           ;bsoc.c: 210:   break;
 10298  01A9CC  D149               	goto	l14147
 10299  01A9CE                     l14081:
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;bsoc.c: 215:   set_load_relay_one(0);
 10303  01A9CE  0E00               	movlw	0
 10304  01A9D0  6EE6               	movwf	postinc1,c
 10305  01A9D2  ECE4  F00E         	call	_set_load_relay_one	;wreg free
 10306                           
 10307                           ;bsoc.c: 216:   set_load_relay_two(0);
 10308  01A9D6  0E00               	movlw	0
 10309  01A9D8  6EE6               	movwf	postinc1,c
 10310  01A9DA  ECDC  F00E         	call	_set_load_relay_two	;wreg free
 10311                           
 10312                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10313  01A9DE  0E0C               	movlw	12
 10314  01A9E0  6EE6               	movwf	postinc1,c
 10315  01A9E2  EC2B  F00C         	call	_TimerDone	;wreg free
 10316  01A9E6  5001               	movf	btemp^0,w,c
 10317  01A9E8  B4D8               	btfsc	status,2,c
 10318  01A9EA  D009               	goto	l14087
 10319                           
 10320                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10321  01A9EC  0E10               	movlw	16
 10322  01A9EE  6EE6               	movwf	postinc1,c
 10323  01A9F0  0E27               	movlw	39
 10324  01A9F2  6EE6               	movwf	postinc1,c
 10325  01A9F4  0E0C               	movlw	12
 10326  01A9F6  6EE6               	movwf	postinc1,c
 10327  01A9F8  ECBA  F009         	call	_StartTimer	;wreg free
 10328                           
 10329                           ;bsoc.c: 219:   } else {
 10330  01A9FC  D006               	goto	l14091
 10331  01A9FE                     l14087:
 10332                           
 10333                           ;bsoc.c: 220:    return -2.0;
 10334  01A9FE  0E00               	movlw	0
 10335  01AA00  6E01               	movwf	btemp^0,c
 10336  01AA02  0E00               	movlw	0
 10337  01AA04  6E02               	movwf	(btemp+1)^0,c
 10338  01AA06  0E00               	movlw	0
 10339  01AA08  D066               	goto	L8
 10340  01AA0A                     l14091:
 10341                           
 10342                           ;bsoc.c: 225:   update_adc_result();
 10343  01AA0A  EC57  F00A         	call	_update_adc_result	;wreg free
 10344                           
 10345                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10346  01AA0E  0E00               	movlw	0
 10347  01AA10  6EE6               	movwf	postinc1,c
 10348  01AA12  0E04               	movlw	4
 10349  01AA14  6EE6               	movwf	postinc1,c
 10350  01AA16  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 10351  01AA1A  0060  F004  FA31   	movff	btemp,_C+306	;volatile
 10352  01AA20  0060  F008  FA32   	movff	btemp+1,_C+307	;volatile
 10353  01AA26  0060  F00C  FA33   	movff	btemp+2,_C+308	;volatile
 10354  01AA2C  0060  F010  FA34   	movff	btemp+3,_C+309	;volatile
 10355  01AA32  D7CA               	goto	l14079
 10356  01AA34                     l14097:
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;bsoc.c: 230:   set_load_relay_one(1);
 10360  01AA34  0E01               	movlw	1
 10361  01AA36  6EE6               	movwf	postinc1,c
 10362  01AA38  ECE4  F00E         	call	_set_load_relay_one	;wreg free
 10363                           
 10364                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10365  01AA3C  0E0C               	movlw	12
 10366  01AA3E  6EE6               	movwf	postinc1,c
 10367  01AA40  EC2B  F00C         	call	_TimerDone	;wreg free
 10368  01AA44  5001               	movf	btemp^0,w,c
 10369  01AA46  B4D8               	btfsc	status,2,c
 10370  01AA48  D009               	goto	l14103
 10371                           
 10372                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10373  01AA4A  0E10               	movlw	16
 10374  01AA4C  6EE6               	movwf	postinc1,c
 10375  01AA4E  0E27               	movlw	39
 10376  01AA50  6EE6               	movwf	postinc1,c
 10377  01AA52  0E0C               	movlw	12
 10378  01AA54  6EE6               	movwf	postinc1,c
 10379  01AA56  ECBA  F009         	call	_StartTimer	;wreg free
 10380                           
 10381                           ;bsoc.c: 233:   } else {
 10382  01AA5A  D006               	goto	l14107
 10383  01AA5C                     l14103:
 10384                           
 10385                           ;bsoc.c: 234:    return -3.0;
 10386  01AA5C  0E00               	movlw	0
 10387  01AA5E  6E01               	movwf	btemp^0,c
 10388  01AA60  0E00               	movlw	0
 10389  01AA62  6E02               	movwf	(btemp+1)^0,c
 10390  01AA64  0E40               	movlw	64
 10391  01AA66  D037               	goto	L8
 10392  01AA68                     l14107:
 10393                           
 10394                           ;bsoc.c: 237:   update_adc_result();
 10395  01AA68  EC57  F00A         	call	_update_adc_result	;wreg free
 10396                           
 10397                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10398  01AA6C  0E00               	movlw	0
 10399  01AA6E  6EE6               	movwf	postinc1,c
 10400  01AA70  0E04               	movlw	4
 10401  01AA72  6EE6               	movwf	postinc1,c
 10402  01AA74  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 10403  01AA78  0060  F004  FA35   	movff	btemp,_C+310	;volatile
 10404  01AA7E  0060  F008  FA36   	movff	btemp+1,_C+311	;volatile
 10405  01AA84  0060  F00C  FA37   	movff	btemp+2,_C+312	;volatile
 10406  01AA8A  0060  F010  FA38   	movff	btemp+3,_C+313	;volatile
 10407                           
 10408                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10409  01AA90  0E00               	movlw	0
 10410  01AA92  6EE6               	movwf	postinc1,c
 10411  01AA94  0E00               	movlw	0
 10412  01AA96  6EE6               	movwf	postinc1,c
 10413  01AA98  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 10414  01AA9C  0060  F004  FA29   	movff	btemp,_C+298	;volatile
 10415  01AAA2  0060  F008  FA2A   	movff	btemp+1,_C+299	;volatile
 10416  01AAA8  0060  F00C  FA2B   	movff	btemp+2,_C+300	;volatile
 10417  01AAAE  0060  F010  FA2C   	movff	btemp+3,_C+301	;volatile
 10418  01AAB4  D789               	goto	l14079
 10419  01AAB6                     l14115:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;bsoc.c: 243:   set_load_relay_two(1);
 10423  01AAB6  0E01               	movlw	1
 10424  01AAB8  6EE6               	movwf	postinc1,c
 10425  01AABA  ECDC  F00E         	call	_set_load_relay_two	;wreg free
 10426                           
 10427                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10428  01AABE  0E0C               	movlw	12
 10429  01AAC0  6EE6               	movwf	postinc1,c
 10430  01AAC2  EC2B  F00C         	call	_TimerDone	;wreg free
 10431  01AAC6  5001               	movf	btemp^0,w,c
 10432  01AAC8  A4D8               	btfss	status,2,c
 10433  01AACA  D008               	goto	l14123
 10434                           
 10435                           ;bsoc.c: 245:    return -4.0;
 10436  01AACC  0E00               	movlw	0
 10437  01AACE  6E01               	movwf	btemp^0,c
 10438  01AAD0  0E00               	movlw	0
 10439  01AAD2  6E02               	movwf	(btemp+1)^0,c
 10440  01AAD4  0E80               	movlw	128
 10441  01AAD6                     L8:
 10442  01AAD6  6E03               	movwf	(btemp+2)^0,c
 10443  01AAD8  0EC0               	movlw	192
 10444  01AADA  D0C9               	goto	L6
 10445  01AADC                     l14123:
 10446                           
 10447                           ;bsoc.c: 247:   update_adc_result();
 10448  01AADC  EC57  F00A         	call	_update_adc_result	;wreg free
 10449                           
 10450                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10451  01AAE0  0E00               	movlw	0
 10452  01AAE2  6EE6               	movwf	postinc1,c
 10453  01AAE4  0E04               	movlw	4
 10454  01AAE6  6EE6               	movwf	postinc1,c
 10455  01AAE8  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 10456  01AAEC  0060  F004  FA39   	movff	btemp,_C+314	;volatile
 10457  01AAF2  0060  F008  FA3A   	movff	btemp+1,_C+315	;volatile
 10458  01AAF8  0060  F00C  FA3B   	movff	btemp+2,_C+316	;volatile
 10459  01AAFE  0060  F010  FA3C   	movff	btemp+3,_C+317	;volatile
 10460                           
 10461                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10462  01AB04  0E00               	movlw	0
 10463  01AB06  6EE6               	movwf	postinc1,c
 10464  01AB08  0E00               	movlw	0
 10465  01AB0A  6EE6               	movwf	postinc1,c
 10466  01AB0C  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 10467  01AB10  0060  F004  FA2D   	movff	btemp,_C+302	;volatile
 10468  01AB16  0060  F008  FA2E   	movff	btemp+1,_C+303	;volatile
 10469  01AB1C  0060  F00C  FA2F   	movff	btemp+2,_C+304	;volatile
 10470  01AB22  0060  F010  FA30   	movff	btemp+3,_C+305	;volatile
 10471                           
 10472                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10473  01AB28  EE22  F22D         	lfsr	2,_C+302	;volatile
 10474  01AB2C  006F FF7B FFE6     	movff	postinc2,postinc1
 10475  01AB32  006F FF7B FFE6     	movff	postinc2,postinc1
 10476  01AB38  006F FF7B FFE6     	movff	postinc2,postinc1
 10477  01AB3E  006F FF7B FFE6     	movff	postinc2,postinc1
 10478  01AB44  EE22  F229         	lfsr	2,_C+298	;volatile
 10479  01AB48  006F FF7B FFE6     	movff	postinc2,postinc1
 10480  01AB4E  006F FF7B FFE6     	movff	postinc2,postinc1
 10481  01AB54  006F FF7B FFE6     	movff	postinc2,postinc1
 10482  01AB5A  006F FF7B FFE6     	movff	postinc2,postinc1
 10483  01AB60  EC14  F009         	call	___flsub	;wreg free
 10484  01AB64  0060  F007  FFE6   	movff	btemp,postinc1
 10485  01AB6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10486  01AB70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10487  01AB76  0060  F013  FFE6   	movff	btemp+3,postinc1
 10488  01AB7C  EE22  F239         	lfsr	2,_C+314	;volatile
 10489  01AB80  006F FF7B FFE6     	movff	postinc2,postinc1
 10490  01AB86  006F FF7B FFE6     	movff	postinc2,postinc1
 10491  01AB8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10492  01AB92  006F FF7B FFE6     	movff	postinc2,postinc1
 10493  01AB98  EE22  F235         	lfsr	2,_C+310	;volatile
 10494  01AB9C  006F FF7B FFE6     	movff	postinc2,postinc1
 10495  01ABA2  006F FF7B FFE6     	movff	postinc2,postinc1
 10496  01ABA8  006F FF7B FFE6     	movff	postinc2,postinc1
 10497  01ABAE  006F FF7B FFE6     	movff	postinc2,postinc1
 10498  01ABB4  EC14  F009         	call	___flsub	;wreg free
 10499  01ABB8  0060  F007  FFE6   	movff	btemp,postinc1
 10500  01ABBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10501  01ABC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10502  01ABCA  0060  F013  FFE6   	movff	btemp+3,postinc1
 10503  01ABD0  ECB2  F0BC         	call	___fldiv	;wreg free
 10504  01ABD4  0060  F007  FFE6   	movff	btemp,postinc1
 10505  01ABDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10506  01ABE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10507  01ABE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 10508  01ABEC  EC77  F0FE         	call	_fabsf	;wreg free
 10509  01ABF0  0060  F004  F987   	movff	btemp,_C+136	;volatile
 10510  01ABF6  0060  F008  F988   	movff	btemp+1,_C+137	;volatile
 10511  01ABFC  0060  F00C  F989   	movff	btemp+2,_C+138	;volatile
 10512  01AC02  0060  F010  F98A   	movff	btemp+3,_C+139	;volatile
 10513                           
 10514                           ;bsoc.c: 252:   set_load_relay_one(0);
 10515  01AC08  0E00               	movlw	0
 10516  01AC0A  6EE6               	movwf	postinc1,c
 10517  01AC0C  ECE4  F00E         	call	_set_load_relay_one	;wreg free
 10518                           
 10519                           ;bsoc.c: 253:   set_load_relay_two(0);
 10520  01AC10  0E00               	movlw	0
 10521  01AC12  6EE6               	movwf	postinc1,c
 10522  01AC14  ECDC  F00E         	call	_set_load_relay_two	;wreg free
 10523                           
 10524                           ;bsoc.c: 254:   esr_state = 0;
 10525  01AC18  0100               	movlb	0	; () banked
 10526  01AC1A  6BD4               	clrf	esr_check@esr_state& (0+255),b
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;bsoc.c: 255:   return C.esr;
 10530  01AC1C  0062  F61C  F001   	movff	_C+136,btemp	;volatile
 10531  01AC22  0062  F620  F002   	movff	_C+137,btemp+1	;volatile
 10532  01AC28  0062  F624  F003   	movff	_C+138,btemp+2	;volatile
 10533  01AC2E  0062  F628  F004   	movff	_C+139,btemp+3	;volatile
 10534  01AC34  D01D               	goto	l2381
 10535  01AC36                     l14145:
 10536  01AC36  0100               	movlb	0	; () banked
 10537  01AC38  51D4               	movf	esr_check@esr_state& (0+255),w,b
 10538  01AC3A  6E0B               	movwf	(btemp+10)^0,c
 10539  01AC3C  6A0C               	clrf	(btemp+11)^0,c
 10540                           
 10541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10542                           ; Switch size 1, requested type "simple"
 10543                           ; Number of cases is 1, Range of values is 0 to 0
 10544                           ; switch strategies available:
 10545                           ; Name         Instructions Cycles
 10546                           ; simple_byte            4     3 (average)
 10547                           ;	Chosen strategy is simple_byte
 10548  01AC3E  500C               	movf	(btemp+11)^0,w,c
 10549  01AC40  0A00               	xorlw	0	; case 0
 10550  01AC42  A4D8               	btfss	status,2,c
 10551  01AC44  D00D               	goto	l14147
 10552                           
 10553                           ; BSR set to: 0
 10554                           ; Switch size 1, requested type "simple"
 10555                           ; Number of cases is 4, Range of values is 0 to 3
 10556                           ; switch strategies available:
 10557                           ; Name         Instructions Cycles
 10558                           ; simple_byte           13     7 (average)
 10559                           ;	Chosen strategy is simple_byte
 10560  01AC46  500B               	movf	(btemp+10)^0,w,c
 10561  01AC48  0A00               	xorlw	0	; case 0
 10562  01AC4A  B4D8               	btfsc	status,2,c
 10563  01AC4C  D6B5               	goto	l14077
 10564  01AC4E  0A01               	xorlw	1	; case 1
 10565  01AC50  B4D8               	btfsc	status,2,c
 10566  01AC52  D6BD               	goto	l14081
 10567  01AC54  0A03               	xorlw	3	; case 2
 10568  01AC56  B4D8               	btfsc	status,2,c
 10569  01AC58  D6ED               	goto	l14097
 10570  01AC5A  0A01               	xorlw	1	; case 3
 10571  01AC5C  B4D8               	btfsc	status,2,c
 10572  01AC5E  D72B               	goto	l14115
 10573  01AC60                     l14147:
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;bsoc.c: 260:  return -1.0;
 10577  01AC60  0E00               	movlw	0
 10578  01AC62  6E01               	movwf	btemp^0,c
 10579  01AC64  0E00               	movlw	0
 10580  01AC66  6E02               	movwf	(btemp+1)^0,c
 10581  01AC68  0E80               	movlw	128
 10582  01AC6A  6E03               	movwf	(btemp+2)^0,c
 10583  01AC6C  0EBF               	movlw	191
 10584  01AC6E                     L6:
 10585  01AC6E  6E04               	movwf	(btemp+3)^0,c
 10586  01AC70                     l2381:
 10587                           
 10588                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10589  01AC70  52E5               	movf	postdec1,f,c
 10590  01AC72  0012               	return		;funcret
 10591  01AC74                     __end_of_esr_check:
 10592                           	opt callstack 0
 10593                           
 10594 ;; *************** function _update_adc_result *****************
 10595 ;; Defined at:
 10596 ;;		line 109 in file "daq.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;		None
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;		None
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1  [STACK] _Bool 
 10603 ;; Registers used:
 10604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10614 ;;Total ram usage:        0 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; Hardware stack levels required when called:   17
 10617 ;; This function calls:
 10618 ;;		_StartTimer
 10619 ;;		_TimerDone
 10620 ;;		_check_adc_scan
 10621 ;;		_clear_adc_scan
 10622 ;;		_start_adc_scan
 10623 ;; This function is called by:
 10624 ;;		_esr_check
 10625 ;; This function uses a reentrant model
 10626 ;;
 10627                           
 10628                           	psect	text26
 10629  0014AE                     __ptext26:
 10630                           	opt callstack 0
 10631  0014AE                     _update_adc_result:
 10632                           	opt callstack 12
 10633                           
 10634                           ;daq.c: 111:  if (R.done) {
 10635                           
 10636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10637                           ;incstack = 0
 10638  0014AE  0102               	movlb	2	; () banked
 10639  0014B0  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 10640  0014B2  B4D8               	btfsc	status,2,c
 10641  0014B4  0012               	return	
 10642                           
 10643                           ; BSR set to: 2
 10644                           ;daq.c: 112:   clear_adc_scan();
 10645  0014B6  EC5C  F00F         	call	_clear_adc_scan	;wreg free
 10646                           
 10647                           ; BSR set to: 2
 10648                           ;daq.c: 113:   start_adc_scan();
 10649  0014BA  EC26  F006         	call	_start_adc_scan	;wreg free
 10650                           
 10651                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10652  0014BE  0EC8               	movlw	200
 10653  0014C0  6EE6               	movwf	postinc1,c
 10654  0014C2  0E00               	movlw	0
 10655  0014C4  6EE6               	movwf	postinc1,c
 10656  0014C6  0E01               	movlw	1
 10657  0014C8  6EE6               	movwf	postinc1,c
 10658  0014CA  ECBA  F009         	call	_StartTimer	;wreg free
 10659  0014CE                     l13523:
 10660  0014CE  0E01               	movlw	1
 10661  0014D0  6EE6               	movwf	postinc1,c
 10662  0014D2  EC2B  F00C         	call	_TimerDone	;wreg free
 10663  0014D6  5001               	movf	btemp^0,w,c
 10664  0014D8  A4D8               	btfss	status,2,c
 10665  0014DA  0012               	return	
 10666  0014DC  EC45  F00F         	call	_check_adc_scan	;wreg free
 10667  0014E0  5001               	movf	btemp^0,w,c
 10668  0014E2  A4D8               	btfss	status,2,c
 10669  0014E4  0012               	return	
 10670  0014E6  D7F3               	goto	l13523
 10671  0014E8                     __end_of_update_adc_result:
 10672                           	opt callstack 0
 10673                           
 10674 ;; *************** function _check_adc_scan *****************
 10675 ;; Defined at:
 10676 ;;		line 93 in file "daq.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;		None
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1  [STACK] _Bool 
 10683 ;; Registers used:
 10684 ;;		btemp
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/1
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10694 ;;Total ram usage:        0 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:   15
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_main
 10701 ;;		_update_adc_result
 10702 ;; This function uses a reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text27
 10706  001E8A                     __ptext27:
 10707                           	opt callstack 0
 10708  001E8A                     _check_adc_scan:
 10709                           	opt callstack 13
 10710                           
 10711                           ;daq.c: 95:  return R.done;
 10712                           
 10713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10714                           ;incstack = 0
 10715  001E8A  0060  F8F0  F001   	movff	_R+53,btemp	;volatile
 10716                           
 10717                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10718  001E90  0012               	return		;funcret
 10719  001E92                     __end_of_check_adc_scan:
 10720                           	opt callstack 0
 10721                           
 10722 ;; *************** function _set_load_relay_two *****************
 10723 ;; Defined at:
 10724 ;;		line 131 in file "mbmc.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  mode            1  [STACK] const _Bool 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;		None
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1  [STACK] void 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr1l, fsr1h
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;Total ram usage:        0 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:   15
 10745 ;; This function calls:
 10746 ;;		Nothing
 10747 ;; This function is called by:
 10748 ;;		_main
 10749 ;;		_esr_check
 10750 ;; This function uses a reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text28
 10754  001DB8                     __ptext28:
 10755                           	opt callstack 0
 10756  001DB8                     _set_load_relay_two:
 10757                           	opt callstack 15
 10758                           
 10759                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 10760                           ;stkvar	_mode @ sp[(0)+-1]
 10761                           
 10762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10763                           ;incstack = 0
 10764  001DB8  0EFF               	movlw	-1
 10765  001DBA  B0E3               	btfsc	plusw1,0,c
 10766  001DBC  D002               	bra	u12415
 10767  001DBE  9ABD               	bcf	189,5,c	;volatile
 10768  001DC0  D001               	bra	u12416
 10769  001DC2                     u12415:
 10770  001DC2  8ABD               	bsf	189,5,c	;volatile
 10771  001DC4                     u12416:
 10772                           
 10773                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10774  001DC4  52E5               	movf	postdec1,f,c
 10775  001DC6  0012               	return		;funcret
 10776  001DC8                     __end_of_set_load_relay_two:
 10777                           	opt callstack 0
 10778                           
 10779 ;; *************** function _set_load_relay_one *****************
 10780 ;; Defined at:
 10781 ;;		line 126 in file "mbmc.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  mode            1  [STACK] const _Bool 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1  [STACK] void 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr1l, fsr1h
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10799 ;;Total ram usage:        0 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:   15
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_main
 10806 ;;		_esr_check
 10807 ;; This function uses a reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text29
 10811  001DC8                     __ptext29:
 10812                           	opt callstack 0
 10813  001DC8                     _set_load_relay_one:
 10814                           	opt callstack 15
 10815                           
 10816                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 10817                           ;stkvar	_mode @ sp[(0)+-1]
 10818                           
 10819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10820                           ;incstack = 0
 10821  001DC8  0EFF               	movlw	-1
 10822  001DCA  B0E3               	btfsc	plusw1,0,c
 10823  001DCC  D002               	bra	u12405
 10824  001DCE  98BD               	bcf	189,4,c	;volatile
 10825  001DD0  D001               	bra	u12406
 10826  001DD2                     u12405:
 10827  001DD2  88BD               	bsf	189,4,c	;volatile
 10828  001DD4                     u12406:
 10829                           
 10830                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10831  001DD4  52E5               	movf	postdec1,f,c
 10832  001DD6  0012               	return		;funcret
 10833  001DD8                     __end_of_set_load_relay_one:
 10834                           	opt callstack 0
 10835                           
 10836 ;; *************** function _eaDogM_WriteCommand *****************
 10837 ;; Defined at:
 10838 ;;		line 385 in file "eadog.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;  cmd             1  [STACK] const unsigned char 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1  [STACK] void 
 10845 ;; Registers used:
 10846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10847 ;; Tracked objects:
 10848 ;;		On entry : 3F/3D
 10849 ;;		On exit  : 3F/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10856 ;;Total ram usage:        0 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:   26
 10859 ;; This function calls:
 10860 ;;		_send_lcd_cmd_dma
 10861 ;; This function is called by:
 10862 ;;		_main
 10863 ;; This function uses a reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text30
 10867  001E08                     __ptext30:
 10868                           	opt callstack 0
 10869  001E08                     _eaDogM_WriteCommand:
 10870                           	opt callstack 4
 10871                           
 10872                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10873                           ;stkvar	_cmd @ sp[(0)+-1]
 10874                           
 10875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10876                           ;incstack = 0
 10877  001E08  0EFF               	movlw	-1
 10878  001E0A  50E3               	movf	plusw1,w,c
 10879  001E0C  6EE6               	movwf	postinc1,c
 10880  001E0E  EC33  F00E         	call	_send_lcd_cmd_dma	;wreg free
 10881                           
 10882                           ; BSR set to: 0
 10883                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10884  001E12  52E5               	movf	postdec1,f,c
 10885  001E14  0012               	return		;funcret
 10886  001E16                     __end_of_eaDogM_WriteCommand:
 10887                           	opt callstack 0
 10888                           
 10889 ;; *************** function _display_history *****************
 10890 ;; Defined at:
 10891 ;;		line 613 in file "main.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  clock           8  [STACK] long long 
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1  [STACK] _Bool 
 10898 ;; Registers used:
 10899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/1
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:   28
 10912 ;; This function calls:
 10913 ;;		_WaitMs
 10914 ;;		_asctime
 10915 ;;		_get_switch
 10916 ;;		_get_vterm_ptr
 10917 ;;		_localtime
 10918 ;;		_sprintf
 10919 ;;		_update_lcd
 10920 ;; This function is called by:
 10921 ;;		_main
 10922 ;; This function uses a reentrant model
 10923 ;;
 10924                           
 10925                           	psect	text31
 10926  01D36A                     __ptext31:
 10927                           	opt callstack 0
 10928  01D36A                     _display_history:
 10929                           	opt callstack 0
 10930                           
 10931                           ; BSR set to: 0
 10932                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10933  01D36A  0E08               	movlw	8
 10934  01D36C  26E1               	addwf	fsr1l,f,c
 10935  01D36E  0E00               	movlw	0
 10936  01D370  22E2               	addwfc	fsr1h,f,c
 10937                           
 10938                           ;main.c: 615:  static uint8_t bwait = 0;;main.c: 616:  time_t clock = V.ticks;
 10939                           
 10940                           ;incstack = 0
 10941  01D372  0101               	movlb	1	; () banked
 10942  01D374  5181               	movf	(_V+129)& (0+255),w,b	;volatile
 10943  01D376  6E11               	movwf	(btemp+16)^0,c
 10944  01D378  5182               	movf	(_V+130)& (0+255),w,b	;volatile
 10945  01D37A  6E12               	movwf	(btemp+17)^0,c
 10946  01D37C  5183               	movf	(_V+131)& (0+255),w,b	;volatile
 10947  01D37E  6E13               	movwf	(btemp+18)^0,c
 10948  01D380  5184               	movf	(_V+132)& (0+255),w,b	;volatile
 10949  01D382  6E14               	movwf	(btemp+19)^0,c
 10950  01D384  6A15               	clrf	(btemp+20)^0,c
 10951  01D386  6A16               	clrf	(btemp+21)^0,c
 10952  01D388  6A17               	clrf	(btemp+22)^0,c
 10953  01D38A  6A18               	clrf	(btemp+23)^0,c
 10954                           
 10955                           ;stkvar	_clock @ sp[(-8)+0]
 10956  01D38C  0EF8               	movlw	-8
 10957  01D38E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10958  01D394  0EF9               	movlw	-7
 10959  01D396  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10960  01D39C  0EFA               	movlw	-6
 10961  01D39E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10962  01D3A4  0EFB               	movlw	-5
 10963  01D3A6  0060  F053  FFE3   	movff	btemp+19,plusw1
 10964  01D3AC  0EFC               	movlw	-4
 10965  01D3AE  0060  F057  FFE3   	movff	btemp+20,plusw1
 10966  01D3B4  0EFD               	movlw	-3
 10967  01D3B6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10968  01D3BC  0EFE               	movlw	-2
 10969  01D3BE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10970  01D3C4  0EFF               	movlw	-1
 10971  01D3C6  0060  F063  FFE3   	movff	btemp+23,plusw1
 10972                           
 10973                           ; BSR set to: 1
 10974                           ;main.c: 618:  if (get_switch(SCALIB) && (++bwait > 5)) {
 10975  01D3CC  0E04               	movlw	4
 10976  01D3CE  6EE6               	movwf	postinc1,c
 10977  01D3D0  ECBF  F00B         	call	_get_switch	;wreg free
 10978  01D3D4  5001               	movf	btemp^0,w,c
 10979  01D3D6  B4D8               	btfsc	status,2,c
 10980  01D3D8  D082               	goto	l16899
 10981  01D3DA  2A43               	incf	display_history@bwait^0,f,c
 10982  01D3DC  0E05               	movlw	5
 10983  01D3DE  6443               	cpfsgt	display_history@bwait^0,c
 10984  01D3E0  D07E               	goto	l16899
 10985                           
 10986                           ;main.c: 619:   t_mbmc = localtime(&clock);
 10987                           ;stkvar	_clock @ sp[(-8)+0]
 10988  01D3E2  0EF8               	movlw	248
 10989  01D3E4  24E1               	addwf	fsr1l,w,c
 10990  01D3E6  6E01               	movwf	btemp^0,c
 10991  01D3E8  0EFF               	movlw	255
 10992  01D3EA  20E2               	addwfc	fsr1h,w,c
 10993  01D3EC  6E02               	movwf	(btemp+1)^0,c
 10994  01D3EE  0060  F007  FFE6   	movff	btemp,postinc1
 10995  01D3F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10996  01D3FA  EC04  F00E         	call	_localtime	;wreg free
 10997  01D3FE  0060  F004  F0CA   	movff	btemp,_t_mbmc
 10998  01D404  0060  F008  F0CB   	movff	btemp+1,_t_mbmc+1
 10999                           
 11000                           ;main.c: 620:   sprintf(get_vterm_ptr(0, 0), "History 3           ");
 11001  01D40A  0EA4               	movlw	low STR_62
 11002  01D40C  6EE6               	movwf	postinc1,c
 11003  01D40E  0EFD               	movlw	high STR_62
 11004  01D410  6EE6               	movwf	postinc1,c
 11005  01D412  0E00               	movlw	0
 11006  01D414  6EE6               	movwf	postinc1,c
 11007  01D416  0E00               	movlw	0
 11008  01D418  6EE6               	movwf	postinc1,c
 11009  01D41A  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 11010  01D41E  0060  F007  FFE6   	movff	btemp,postinc1
 11011  01D424  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11012  01D42A  0E04               	movlw	4
 11013  01D42C  6EE6               	movwf	postinc1,c
 11014  01D42E  EC42  F0F7         	call	_sprintf	;wreg free
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;main.c: 621:   sprintf(get_vterm_ptr(1, 0), "History 3           ");
 11018  01D432  0EA4               	movlw	low STR_62
 11019  01D434  6EE6               	movwf	postinc1,c
 11020  01D436  0EFD               	movlw	high STR_62
 11021  01D438  6EE6               	movwf	postinc1,c
 11022  01D43A  0E00               	movlw	0
 11023  01D43C  6EE6               	movwf	postinc1,c
 11024  01D43E  0E01               	movlw	1
 11025  01D440  6EE6               	movwf	postinc1,c
 11026  01D442  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 11027  01D446  0060  F007  FFE6   	movff	btemp,postinc1
 11028  01D44C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11029  01D452  0E04               	movlw	4
 11030  01D454  6EE6               	movwf	postinc1,c
 11031  01D456  EC42  F0F7         	call	_sprintf	;wreg free
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;main.c: 622:   sprintf(get_vterm_ptr(2, 0), "History 3           ");
 11035  01D45A  0EA4               	movlw	low STR_62
 11036  01D45C  6EE6               	movwf	postinc1,c
 11037  01D45E  0EFD               	movlw	high STR_62
 11038  01D460  6EE6               	movwf	postinc1,c
 11039  01D462  0E00               	movlw	0
 11040  01D464  6EE6               	movwf	postinc1,c
 11041  01D466  0E02               	movlw	2
 11042  01D468  6EE6               	movwf	postinc1,c
 11043  01D46A  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 11044  01D46E  0060  F007  FFE6   	movff	btemp,postinc1
 11045  01D474  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11046  01D47A  0E04               	movlw	4
 11047  01D47C  6EE6               	movwf	postinc1,c
 11048  01D47E  EC42  F0F7         	call	_sprintf	;wreg free
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;main.c: 623:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11052  01D482  0060  F32B  FFE6   	movff	_t_mbmc,postinc1
 11053  01D488  0060  F32F  FFE6   	movff	_t_mbmc+1,postinc1
 11054  01D48E  EC6F  F0BF         	call	_asctime	;wreg free
 11055  01D492  0060  F007  FFE6   	movff	btemp,postinc1
 11056  01D498  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11057  01D49E  0E61               	movlw	low (STR_70+5)
 11058  01D4A0  6EE6               	movwf	postinc1,c
 11059  01D4A2  0EFF               	movlw	high (STR_70+5)
 11060  01D4A4  6EE6               	movwf	postinc1,c
 11061  01D4A6  0E00               	movlw	0
 11062  01D4A8  6EE6               	movwf	postinc1,c
 11063  01D4AA  0E03               	movlw	3
 11064  01D4AC  6EE6               	movwf	postinc1,c
 11065  01D4AE  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 11066  01D4B2  0060  F007  FFE6   	movff	btemp,postinc1
 11067  01D4B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11068  01D4BE  0E06               	movlw	6
 11069  01D4C0  6EE6               	movwf	postinc1,c
 11070  01D4C2  EC42  F0F7         	call	_sprintf	;wreg free
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;main.c: 624:   update_lcd(0);
 11074  01D4C6  0E00               	movlw	0
 11075  01D4C8  6EE6               	movwf	postinc1,c
 11076  01D4CA  ECBA  F0F6         	call	_update_lcd	;wreg free
 11077                           
 11078                           ;main.c: 625:   WaitMs(2000);
 11079  01D4CE  0ED0               	movlw	208
 11080  01D4D0  6EE6               	movwf	postinc1,c
 11081  01D4D2  0E07               	movlw	7
 11082  01D4D4  6EE6               	movwf	postinc1,c
 11083  01D4D6  ECAC  F00A         	call	_WaitMs	;wreg free
 11084  01D4DA                     l16893:
 11085                           
 11086                           ;main.c: 626:   bwait = 0;
 11087  01D4DA  6A43               	clrf	display_history@bwait^0,c
 11088  01D4DC  D007               	goto	l1523
 11089  01D4DE                     l16899:
 11090                           
 11091                           ;main.c: 629:   if (!get_switch(SCALIB))
 11092  01D4DE  0E04               	movlw	4
 11093  01D4E0  6EE6               	movwf	postinc1,c
 11094  01D4E2  ECBF  F00B         	call	_get_switch	;wreg free
 11095  01D4E6  5001               	movf	btemp^0,w,c
 11096  01D4E8  B4D8               	btfsc	status,2,c
 11097  01D4EA  D7F7               	goto	l16893
 11098  01D4EC                     l1523:
 11099                           
 11100                           ; _display_history: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11101  01D4EC  0EF8               	movlw	248
 11102  01D4EE  26E1               	addwf	fsr1l,f,c
 11103  01D4F0  0EFF               	movlw	255
 11104  01D4F2  22E2               	addwfc	fsr1h,f,c
 11105  01D4F4  0012               	return		;funcret
 11106  01D4F6                     __end_of_display_history:
 11107                           	opt callstack 0
 11108                           
 11109 ;; *************** function _localtime *****************
 11110 ;; Defined at:
 11111 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;  t               2  [STACK] PTR const long long 
 11114 ;;		 -> clock(8), 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  2  [STACK] PTR struct tm
 11119 ;; Registers used:
 11120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/1
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11130 ;;Total ram usage:        0 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:   21
 11133 ;; This function calls:
 11134 ;;		___localtime_r
 11135 ;; This function is called by:
 11136 ;;		_display_history
 11137 ;; This function uses a reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text32
 11141  001C08                     __ptext32:
 11142                           	opt callstack 0
 11143  001C08                     _localtime:
 11144                           	opt callstack 8
 11145                           
 11146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11147                           ;incstack = 0
 11148  001C08  0EDF               	movlw	low localtime@tm
 11149  001C0A  6EE6               	movwf	postinc1,c
 11150  001C0C  0E03               	movlw	high localtime@tm
 11151  001C0E  6EE6               	movwf	postinc1,c
 11152                           
 11153                           ;stkvar	_t @ sp[(-2)+-2]
 11154  001C10  0EFC               	movlw	-4
 11155  001C12  006F FF8F FFE6     	movff	plusw1,postinc1
 11156  001C18  006F FF8F FFE6     	movff	plusw1,postinc1
 11157  001C1E  EC93  F0DC         	call	___localtime_r	;wreg free
 11158                           
 11159                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11160  001C22  52E5               	movf	postdec1,f,c
 11161  001C24  52E5               	movf	postdec1,f,c
 11162  001C26  0012               	return		;funcret
 11163  001C28                     __end_of_localtime:
 11164                           	opt callstack 0
 11165                           
 11166 ;; *************** function ___localtime_r *****************
 11167 ;; Defined at:
 11168 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  t               2  [STACK] PTR const long long 
 11171 ;;		 -> clock(8), 
 11172 ;;  tm              2  [STACK] PTR struct tm
 11173 ;;		 -> localtime@tm(24), 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  2  [STACK] PTR struct tm
 11178 ;; Registers used:
 11179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/1
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11189 ;;Total ram usage:        0 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:   20
 11192 ;; This function calls:
 11193 ;;		___secs_to_tm
 11194 ;;		___secs_to_zone
 11195 ;; This function is called by:
 11196 ;;		_localtime
 11197 ;; This function uses a reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text33
 11201  01B926                     __ptext33:
 11202                           	opt callstack 0
 11203  01B926                     ___localtime_r:
 11204                           	opt callstack 8
 11205                           
 11206                           ;stkvar	_t @ sp[(0)+-2]
 11207                           
 11208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11209                           ;incstack = 0
 11210  01B926  0EFE               	movlw	-2
 11211  01B928  006F FF8F FFD9     	movff	plusw1,fsr2l
 11212  01B92E  0EFF               	movlw	-1
 11213  01B930  006F FF8F FFDA     	movff	plusw1,fsr2h
 11214  01B936  0E07               	movlw	7
 11215  01B938  AEDB               	btfss	plusw2,7,c
 11216  01B93A  D010               	goto	u16130
 11217  01B93C  52DE               	movf	postinc2,f,c
 11218  01B93E  52DE               	movf	postinc2,f,c
 11219  01B940  0E80               	movlw	128
 11220  01B942  5CDE               	subwf	postinc2,w,c
 11221  01B944  0EBD               	movlw	189
 11222  01B946  58DE               	subwfb	postinc2,w,c
 11223  01B948  0E0E               	movlw	14
 11224  01B94A  58DE               	subwfb	postinc2,w,c
 11225  01B94C  0EFF               	movlw	255
 11226  01B94E  58DE               	subwfb	postinc2,w,c
 11227  01B950  0EFF               	movlw	255
 11228  01B952  58DE               	subwfb	postinc2,w,c
 11229  01B954  0EFF               	movlw	255
 11230  01B956  58DE               	subwfb	postinc2,w,c
 11231  01B958  A0D8               	btfss	status,0,c
 11232  01B95A  D01F               	goto	u16140
 11233  01B95C                     u16130:
 11234                           
 11235                           ;stkvar	_t @ sp[(0)+-2]
 11236  01B95C  0EFE               	movlw	-2
 11237  01B95E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11238  01B964  0EFF               	movlw	-1
 11239  01B966  006F FF8F FFDA     	movff	plusw1,fsr2h
 11240  01B96C  0E07               	movlw	7
 11241  01B96E  BEDB               	btfsc	plusw2,7,c
 11242  01B970  D019               	goto	l16465
 11243  01B972  0E07               	movlw	7
 11244  01B974  50DB               	movf	plusw2,w,c
 11245  01B976  E111               	bnz	u16140
 11246  01B978  0E06               	movlw	6
 11247  01B97A  50DB               	movf	plusw2,w,c
 11248  01B97C  E10E               	bnz	u16140
 11249  01B97E  0E05               	movlw	5
 11250  01B980  50DB               	movf	plusw2,w,c
 11251  01B982  E10B               	bnz	u16140
 11252  01B984  04DE               	decf	postinc2,w,c
 11253  01B986  0E7B               	movlw	123
 11254  01B988  58DE               	subwfb	postinc2,w,c
 11255  01B98A  0E9D               	movlw	157
 11256  01B98C  58DE               	subwfb	postinc2,w,c
 11257  01B98E  0E40               	movlw	64
 11258  01B990  58DE               	subwfb	postinc2,w,c
 11259  01B992  0EF1               	movlw	241
 11260  01B994  58DE               	subwfb	postinc2,w,c
 11261  01B996  A0D8               	btfss	status,0,c
 11262  01B998  D005               	goto	l16465
 11263  01B99A                     u16140:
 11264  01B99A  0E00               	movlw	0
 11265  01B99C  6E01               	movwf	btemp^0,c
 11266  01B99E  0E00               	movlw	0
 11267  01B9A0  6E02               	movwf	(btemp+1)^0,c
 11268  01B9A2  D0EF               	goto	l3490
 11269  01B9A4                     l16465:
 11270                           
 11271                           ;stkvar	_tm @ sp[(0)+-4]
 11272  01B9A4  0EFC               	movlw	-4
 11273  01B9A6  50E3               	movf	plusw1,w,c
 11274  01B9A8  0F16               	addlw	22
 11275  01B9AA  6E0B               	movwf	(btemp+10)^0,c
 11276  01B9AC  0EFD               	movlw	-3
 11277  01B9AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11278  01B9B4  0E00               	movlw	0
 11279  01B9B6  220C               	addwfc	(btemp+11)^0,f,c
 11280  01B9B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11281  01B9BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 11282  01B9C4  0E00               	movlw	0
 11283  01B9C6  6EE6               	movwf	postinc1,c
 11284  01B9C8  0E00               	movlw	0
 11285  01B9CA  6EE6               	movwf	postinc1,c
 11286                           
 11287                           ;stkvar	_tm @ sp[(-4)+-4]
 11288  01B9CC  0EF8               	movlw	-8
 11289  01B9CE  50E3               	movf	plusw1,w,c
 11290  01B9D0  0F12               	addlw	18
 11291  01B9D2  6E0B               	movwf	(btemp+10)^0,c
 11292  01B9D4  0EF9               	movlw	-7
 11293  01B9D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11294  01B9DC  0E00               	movlw	0
 11295  01B9DE  220C               	addwfc	(btemp+11)^0,f,c
 11296  01B9E0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11297  01B9E6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11298                           
 11299                           ;stkvar	_tm @ sp[(-6)+-4]
 11300  01B9EC  0EF6               	movlw	-10
 11301  01B9EE  50E3               	movf	plusw1,w,c
 11302  01B9F0  0F10               	addlw	16
 11303  01B9F2  6E0B               	movwf	(btemp+10)^0,c
 11304  01B9F4  0EF7               	movlw	-9
 11305  01B9F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11306  01B9FC  0E00               	movlw	0
 11307  01B9FE  220C               	addwfc	(btemp+11)^0,f,c
 11308  01BA00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11309  01BA06  0060  F033  FFE6   	movff	btemp+11,postinc1
 11310  01BA0C  0E00               	movlw	0
 11311  01BA0E  6EE6               	movwf	postinc1,c
 11312  01BA10  0E00               	movlw	0
 11313  01BA12  6EE6               	movwf	postinc1,c
 11314                           
 11315                           ;stkvar	_t @ sp[(-10)+-2]
 11316  01BA14  0EF4               	movlw	-12
 11317  01BA16  006F FF8F FFD9     	movff	plusw1,fsr2l
 11318  01BA1C  0EF5               	movlw	-11
 11319  01BA1E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11320  01BA24  006F FF7B FFE6     	movff	postinc2,postinc1
 11321  01BA2A  006F FF7B FFE6     	movff	postinc2,postinc1
 11322  01BA30  006F FF7B FFE6     	movff	postinc2,postinc1
 11323  01BA36  006F FF7B FFE6     	movff	postinc2,postinc1
 11324  01BA3C  006F FF7B FFE6     	movff	postinc2,postinc1
 11325  01BA42  006F FF7B FFE6     	movff	postinc2,postinc1
 11326  01BA48  006F FF7B FFE6     	movff	postinc2,postinc1
 11327  01BA4E  006F FF7B FFE6     	movff	postinc2,postinc1
 11328  01BA54  EC10  F0AD         	call	___secs_to_zone	;wreg free
 11329                           
 11330                           ;stkvar	_tm @ sp[(0)+-4]
 11331  01BA58  0EFC               	movlw	-4
 11332  01BA5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  01BA60  006F FF8F FFE6     	movff	plusw1,postinc1
 11334                           
 11335                           ;stkvar	_t @ sp[(-2)+-2]
 11336  01BA66  0EFC               	movlw	-4
 11337  01BA68  006F FF8F FFD9     	movff	plusw1,fsr2l
 11338  01BA6E  0EFD               	movlw	-3
 11339  01BA70  006F FF8F FFDA     	movff	plusw1,fsr2h
 11340  01BA76  006F FF78  F011    	movff	postinc2,btemp+16
 11341  01BA7C  006F FF78  F012    	movff	postinc2,btemp+17
 11342  01BA82  006F FF78  F013    	movff	postinc2,btemp+18
 11343  01BA88  006F FF78  F014    	movff	postinc2,btemp+19
 11344  01BA8E  006F FF78  F015    	movff	postinc2,btemp+20
 11345  01BA94  006F FF78  F016    	movff	postinc2,btemp+21
 11346  01BA9A  006F FF78  F017    	movff	postinc2,btemp+22
 11347  01BAA0  006F FF78  F018    	movff	postinc2,btemp+23
 11348                           
 11349                           ;stkvar	_tm @ sp[(-2)+-4]
 11350  01BAA6  0EFA               	movlw	-6
 11351  01BAA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11352  01BAAE  0EFB               	movlw	-5
 11353  01BAB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11354  01BAB6  0E12               	movlw	18
 11355  01BAB8  240B               	addwf	(btemp+10)^0,w,c
 11356  01BABA  6ED9               	movwf	fsr2l,c
 11357  01BABC  0E00               	movlw	0
 11358  01BABE  200C               	addwfc	(btemp+11)^0,w,c
 11359  01BAC0  6EDA               	movwf	fsr2h,c
 11360  01BAC2  006F FF78  F009    	movff	postinc2,btemp+8
 11361  01BAC8  006F FF78  F00A    	movff	postinc2,btemp+9
 11362  01BACE  006F FF78  F00B    	movff	postinc2,btemp+10
 11363  01BAD4  006F FF78  F00C    	movff	postinc2,btemp+11
 11364  01BADA  0060  F024  F019   	movff	btemp+8,btemp+24
 11365  01BAE0  0060  F028  F01A   	movff	btemp+9,btemp+25
 11366  01BAE6  0060  F02C  F01B   	movff	btemp+10,btemp+26
 11367  01BAEC  0060  F030  F01C   	movff	btemp+11,btemp+27
 11368  01BAF2  6A1D               	clrf	(btemp+28)^0,c
 11369  01BAF4  BE1C               	btfsc	(btemp+27)^0,7,c
 11370  01BAF6  681D               	setf	(btemp+28)^0,c
 11371  01BAF8  0060  F074  F01E   	movff	btemp+28,btemp+29
 11372  01BAFE  0060  F074  F01F   	movff	btemp+28,btemp+30
 11373  01BB04  0060  F074  F020   	movff	btemp+28,btemp+31
 11374  01BB0A  5011               	movf	(btemp+16)^0,w,c
 11375  01BB0C  2419               	addwf	(btemp+24)^0,w,c
 11376  01BB0E  6E09               	movwf	(btemp+8)^0,c
 11377  01BB10  5012               	movf	(btemp+17)^0,w,c
 11378  01BB12  201A               	addwfc	(btemp+25)^0,w,c
 11379  01BB14  6E0A               	movwf	(btemp+9)^0,c
 11380  01BB16  5013               	movf	(btemp+18)^0,w,c
 11381  01BB18  201B               	addwfc	(btemp+26)^0,w,c
 11382  01BB1A  6E0B               	movwf	(btemp+10)^0,c
 11383  01BB1C  5014               	movf	(btemp+19)^0,w,c
 11384  01BB1E  201C               	addwfc	(btemp+27)^0,w,c
 11385  01BB20  6E0C               	movwf	(btemp+11)^0,c
 11386  01BB22  5015               	movf	(btemp+20)^0,w,c
 11387  01BB24  201D               	addwfc	(btemp+28)^0,w,c
 11388  01BB26  6E0D               	movwf	(btemp+12)^0,c
 11389  01BB28  5016               	movf	(btemp+21)^0,w,c
 11390  01BB2A  201E               	addwfc	(btemp+29)^0,w,c
 11391  01BB2C  6E0E               	movwf	(btemp+13)^0,c
 11392  01BB2E  5017               	movf	(btemp+22)^0,w,c
 11393  01BB30  201F               	addwfc	(btemp+30)^0,w,c
 11394  01BB32  6E0F               	movwf	(btemp+14)^0,c
 11395  01BB34  5018               	movf	(btemp+23)^0,w,c
 11396  01BB36  2020               	addwfc	(btemp+31)^0,w,c
 11397  01BB38  6E10               	movwf	(btemp+15)^0,c
 11398  01BB3A  0060  F027  FFE6   	movff	btemp+8,postinc1
 11399  01BB40  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11400  01BB46  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11401  01BB4C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11402  01BB52  0060  F037  FFE6   	movff	btemp+12,postinc1
 11403  01BB58  0060  F03B  FFE6   	movff	btemp+13,postinc1
 11404  01BB5E  0060  F03F  FFE6   	movff	btemp+14,postinc1
 11405  01BB64  0060  F043  FFE6   	movff	btemp+15,postinc1
 11406  01BB6A  ECE1  F092         	call	___secs_to_tm	;wreg free
 11407  01BB6E  BE04               	btfsc	(btemp+3)^0,7,c
 11408  01BB70  D714               	goto	u16140
 11409                           
 11410                           ;stkvar	_tm @ sp[(0)+-4]
 11411  01BB72  0EFC               	movlw	-4
 11412  01BB74  006F FF8C  F001    	movff	plusw1,btemp
 11413  01BB7A  0EFD               	movlw	-3
 11414  01BB7C  006F FF8C  F002    	movff	plusw1,btemp+1
 11415  01BB82                     l3490:
 11416                           
 11417                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 11418  01BB82  52E5               	movf	postdec1,f,c
 11419  01BB84  52E5               	movf	postdec1,f,c
 11420  01BB86  52E5               	movf	postdec1,f,c
 11421  01BB88  52E5               	movf	postdec1,f,c
 11422  01BB8A  0012               	return		;funcret
 11423  01BB8C                     __end_of___localtime_r:
 11424                           	opt callstack 0
 11425                           
 11426 ;; *************** function ___secs_to_zone *****************
 11427 ;; Defined at:
 11428 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  t               8  [STACK] long long 
 11431 ;;  local           2  [STACK] int 
 11432 ;;  isdst           2  [STACK] PTR int 
 11433 ;;		 -> localtime@tm(24), 
 11434 ;;  offset          2  [STACK] PTR long 
 11435 ;;		 -> localtime@tm(24), 
 11436 ;;  oppoff          2  [STACK] PTR long 
 11437 ;;		 -> NULL(0), 
 11438 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 11439 ;;		 -> localtime@tm(24), 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  alt             2  [STACK] unsigned int 
 11442 ;;  i               2    0        unsigned int 
 11443 ;;  y               8  [STACK] long long 
 11444 ;;  t1              8  [STACK] long long 
 11445 ;;  t0              8  [STACK] long long 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  1  [STACK] void 
 11448 ;; Registers used:
 11449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/1
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11459 ;;Total ram usage:        0 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; Hardware stack levels required when called:   19
 11462 ;; This function calls:
 11463 ;;		___aodiv
 11464 ;;		___year_to_secs
 11465 ;;		_do_tzset
 11466 ;;		_rule_to_secs
 11467 ;;		_scan_trans
 11468 ;;		_zi_read32
 11469 ;; This function is called by:
 11470 ;;		___localtime_r
 11471 ;; This function uses a reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text34
 11475  015A20                     __ptext34:
 11476                           	opt callstack 0
 11477  015A20                     ___secs_to_zone:
 11478                           	opt callstack 0
 11479                           
 11480                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11481  015A20  0E18               	movlw	24
 11482  015A22  26E1               	addwf	fsr1l,f,c
 11483  015A24  0E00               	movlw	0
 11484  015A26  22E2               	addwfc	fsr1h,f,c
 11485                           
 11486                           ;incstack = 0
 11487  015A28  EC99  F0D7         	call	_do_tzset	;wreg free
 11488  015A2C  0100               	movlb	0	; () banked
 11489  015A2E  51C6               	movf	___daylight& (0+255),w,b
 11490  015A30  11C7               	iorwf	(___daylight+1)& (0+255),w,b
 11491  015A32  B4D8               	btfsc	status,2,c
 11492  015A34  D356               	goto	u15920
 11493                           
 11494                           ; BSR set to: 0
 11495  015A36  0E58               	movlw	88
 11496  015A38  6EE6               	movwf	postinc1,c
 11497  015A3A  0E85               	movlw	133
 11498  015A3C  6EE6               	movwf	postinc1,c
 11499  015A3E  0EE1               	movlw	225
 11500  015A40  6EE6               	movwf	postinc1,c
 11501  015A42  0E01               	movlw	1
 11502  015A44  6EE6               	movwf	postinc1,c
 11503  015A46  0E00               	movlw	0
 11504  015A48  6EE6               	movwf	postinc1,c
 11505  015A4A  0E00               	movlw	0
 11506  015A4C  6EE6               	movwf	postinc1,c
 11507  015A4E  0E00               	movlw	0
 11508  015A50  6EE6               	movwf	postinc1,c
 11509  015A52  0E00               	movlw	0
 11510  015A54  6EE6               	movwf	postinc1,c
 11511                           
 11512                           ;stkvar	_t @ sp[(-32)+-8]
 11513  015A56  50E1               	movf	fsr1l,w,c
 11514  015A58  0FD8               	addlw	-40
 11515  015A5A  6ED9               	movwf	fsr2l,c
 11516  015A5C  50E2               	movf	fsr1h,w,c
 11517  015A5E  6EDA               	movwf	fsr2h,c
 11518  015A60  0EFF               	movlw	255
 11519  015A62  22DA               	addwfc	fsr2h,f,c
 11520  015A64  006F FF7B FFE6     	movff	postinc2,postinc1
 11521  015A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 11522  015A70  006F FF7B FFE6     	movff	postinc2,postinc1
 11523  015A76  006F FF7B FFE6     	movff	postinc2,postinc1
 11524  015A7C  006F FF7B FFE6     	movff	postinc2,postinc1
 11525  015A82  006F FF7B FFE6     	movff	postinc2,postinc1
 11526  015A88  006F FF7B FFE6     	movff	postinc2,postinc1
 11527  015A8E  006F FF7B FFE6     	movff	postinc2,postinc1
 11528  015A94  EC19  F0DA         	call	___aodiv	;wreg free
 11529  015A98  52E5               	movf	postdec1,f,c
 11530  015A9A  006F FF9C  F018    	movff	indf1,btemp+23
 11531  015AA0  52E5               	movf	postdec1,f,c
 11532  015AA2  006F FF9C  F017    	movff	indf1,btemp+22
 11533  015AA8  52E5               	movf	postdec1,f,c
 11534  015AAA  006F FF9C  F016    	movff	indf1,btemp+21
 11535  015AB0  52E5               	movf	postdec1,f,c
 11536  015AB2  006F FF9C  F015    	movff	indf1,btemp+20
 11537  015AB8  52E5               	movf	postdec1,f,c
 11538  015ABA  006F FF9C  F014    	movff	indf1,btemp+19
 11539  015AC0  52E5               	movf	postdec1,f,c
 11540  015AC2  006F FF9C  F013    	movff	indf1,btemp+18
 11541  015AC8  52E5               	movf	postdec1,f,c
 11542  015ACA  006F FF9C  F012    	movff	indf1,btemp+17
 11543  015AD0  52E5               	movf	postdec1,f,c
 11544  015AD2  006F FF9C  F011    	movff	indf1,btemp+16
 11545  015AD8  0EF8               	movlw	248
 11546  015ADA  26E1               	addwf	fsr1l,f,c
 11547  015ADC  0EFF               	movlw	255
 11548  015ADE  22E2               	addwfc	fsr1h,f,c
 11549  015AE0  0E46               	movlw	70
 11550  015AE2  2411               	addwf	(btemp+16)^0,w,c
 11551  015AE4  6E19               	movwf	(btemp+24)^0,c
 11552  015AE6  0E00               	movlw	0
 11553  015AE8  2012               	addwfc	(btemp+17)^0,w,c
 11554  015AEA  6E1A               	movwf	(btemp+25)^0,c
 11555  015AEC  0E00               	movlw	0
 11556  015AEE  2013               	addwfc	(btemp+18)^0,w,c
 11557  015AF0  6E1B               	movwf	(btemp+26)^0,c
 11558  015AF2  0E00               	movlw	0
 11559  015AF4  2014               	addwfc	(btemp+19)^0,w,c
 11560  015AF6  6E1C               	movwf	(btemp+27)^0,c
 11561  015AF8  0E00               	movlw	0
 11562  015AFA  2015               	addwfc	(btemp+20)^0,w,c
 11563  015AFC  6E1D               	movwf	(btemp+28)^0,c
 11564  015AFE  0E00               	movlw	0
 11565  015B00  2016               	addwfc	(btemp+21)^0,w,c
 11566  015B02  6E1E               	movwf	(btemp+29)^0,c
 11567  015B04  0E00               	movlw	0
 11568  015B06  2017               	addwfc	(btemp+22)^0,w,c
 11569  015B08  6E1F               	movwf	(btemp+30)^0,c
 11570  015B0A  0E00               	movlw	0
 11571  015B0C  2018               	addwfc	(btemp+23)^0,w,c
 11572  015B0E  6E20               	movwf	(btemp+31)^0,c
 11573                           
 11574                           ;stkvar	_y @ sp[(-24)+0]
 11575  015B10  0EE8               	movlw	-24
 11576  015B12  0060  F067  FFE3   	movff	btemp+24,plusw1
 11577  015B18  0EE9               	movlw	-23
 11578  015B1A  0060  F06B  FFE3   	movff	btemp+25,plusw1
 11579  015B20  0EEA               	movlw	-22
 11580  015B22  0060  F06F  FFE3   	movff	btemp+26,plusw1
 11581  015B28  0EEB               	movlw	-21
 11582  015B2A  0060  F073  FFE3   	movff	btemp+27,plusw1
 11583  015B30  0EEC               	movlw	-20
 11584  015B32  0060  F077  FFE3   	movff	btemp+28,plusw1
 11585  015B38  0EED               	movlw	-19
 11586  015B3A  0060  F07B  FFE3   	movff	btemp+29,plusw1
 11587  015B40  0EEE               	movlw	-18
 11588  015B42  0060  F07F  FFE3   	movff	btemp+30,plusw1
 11589  015B48  0EEF               	movlw	-17
 11590  015B4A  0060  F083  FFE3   	movff	btemp+31,plusw1
 11591  015B50  D010               	goto	l16235
 11592  015B52                     l16233:
 11593                           
 11594                           ;stkvar	_y @ sp[(-24)+0]
 11595  015B52  50E1               	movf	fsr1l,w,c
 11596  015B54  0FE8               	addlw	-24
 11597  015B56  6ED9               	movwf	fsr2l,c
 11598  015B58  50E2               	movf	fsr1h,w,c
 11599  015B5A  6EDA               	movwf	fsr2h,c
 11600  015B5C  0EFF               	movlw	255
 11601  015B5E  22DA               	addwfc	fsr2h,f,c
 11602  015B60  06DE               	decf	postinc2,f,c
 11603  015B62  0E00               	movlw	0
 11604  015B64  5ADE               	subwfb	postinc2,f,c
 11605  015B66  5ADE               	subwfb	postinc2,f,c
 11606  015B68  5ADE               	subwfb	postinc2,f,c
 11607  015B6A  5ADE               	subwfb	postinc2,f,c
 11608  015B6C  5ADE               	subwfb	postinc2,f,c
 11609  015B6E  5ADE               	subwfb	postinc2,f,c
 11610  015B70  5ADE               	subwfb	postinc2,f,c
 11611  015B72                     l16235:
 11612  015B72  0E00               	movlw	0
 11613  015B74  6EE6               	movwf	postinc1,c
 11614  015B76  0E00               	movlw	0
 11615  015B78  6EE6               	movwf	postinc1,c
 11616                           
 11617                           ;stkvar	_y @ sp[(-26)+0]
 11618  015B7A  50E1               	movf	fsr1l,w,c
 11619  015B7C  0FE6               	addlw	-26
 11620  015B7E  6ED9               	movwf	fsr2l,c
 11621  015B80  50E2               	movf	fsr1h,w,c
 11622  015B82  6EDA               	movwf	fsr2h,c
 11623  015B84  0EFF               	movlw	255
 11624  015B86  22DA               	addwfc	fsr2h,f,c
 11625  015B88  006F FF7B FFE6     	movff	postinc2,postinc1
 11626  015B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 11627  015B94  006F FF7B FFE6     	movff	postinc2,postinc1
 11628  015B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 11629  015BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 11630  015BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 11631  015BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 11632  015BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 11633  015BB8  EC57  F0A8         	call	___year_to_secs	;wreg free
 11634  015BBC  52E5               	movf	postdec1,f,c
 11635  015BBE  006F FF9C  F018    	movff	indf1,btemp+23
 11636  015BC4  52E5               	movf	postdec1,f,c
 11637  015BC6  006F FF9C  F017    	movff	indf1,btemp+22
 11638  015BCC  52E5               	movf	postdec1,f,c
 11639  015BCE  006F FF9C  F016    	movff	indf1,btemp+21
 11640  015BD4  52E5               	movf	postdec1,f,c
 11641  015BD6  006F FF9C  F015    	movff	indf1,btemp+20
 11642  015BDC  52E5               	movf	postdec1,f,c
 11643  015BDE  006F FF9C  F014    	movff	indf1,btemp+19
 11644  015BE4  52E5               	movf	postdec1,f,c
 11645  015BE6  006F FF9C  F013    	movff	indf1,btemp+18
 11646  015BEC  52E5               	movf	postdec1,f,c
 11647  015BEE  006F FF9C  F012    	movff	indf1,btemp+17
 11648  015BF4  52E5               	movf	postdec1,f,c
 11649  015BF6  006F FF9C  F011    	movff	indf1,btemp+16
 11650  015BFC  52E5               	movf	postdec1,f,c
 11651  015BFE  52E5               	movf	postdec1,f,c
 11652                           
 11653                           ;stkvar	_t @ sp[(-24)+-8]
 11654  015C00  0EE0               	movlw	-32
 11655  015C02  006F FF8C  F001    	movff	plusw1,btemp
 11656  015C08  5011               	movf	(btemp+16)^0,w,c
 11657  015C0A  5C01               	subwf	btemp^0,w,c
 11658  015C0C  0EE1               	movlw	-31
 11659  015C0E  006F FF8C  F001    	movff	plusw1,btemp
 11660  015C14  5012               	movf	(btemp+17)^0,w,c
 11661  015C16  5801               	subwfb	btemp^0,w,c
 11662  015C18  0EE2               	movlw	-30
 11663  015C1A  006F FF8C  F001    	movff	plusw1,btemp
 11664  015C20  5013               	movf	(btemp+18)^0,w,c
 11665  015C22  5801               	subwfb	btemp^0,w,c
 11666  015C24  0EE3               	movlw	-29
 11667  015C26  006F FF8C  F001    	movff	plusw1,btemp
 11668  015C2C  5014               	movf	(btemp+19)^0,w,c
 11669  015C2E  5801               	subwfb	btemp^0,w,c
 11670  015C30  0EE4               	movlw	-28
 11671  015C32  006F FF8C  F001    	movff	plusw1,btemp
 11672  015C38  5015               	movf	(btemp+20)^0,w,c
 11673  015C3A  5801               	subwfb	btemp^0,w,c
 11674  015C3C  0EE5               	movlw	-27
 11675  015C3E  006F FF8C  F001    	movff	plusw1,btemp
 11676  015C44  5016               	movf	(btemp+21)^0,w,c
 11677  015C46  5801               	subwfb	btemp^0,w,c
 11678  015C48  0EE6               	movlw	-26
 11679  015C4A  006F FF8C  F001    	movff	plusw1,btemp
 11680  015C50  5017               	movf	(btemp+22)^0,w,c
 11681  015C52  5801               	subwfb	btemp^0,w,c
 11682  015C54  0EE7               	movlw	-25
 11683  015C56  50E3               	movf	plusw1,w,c
 11684  015C58  0A80               	xorlw	128
 11685  015C5A  6E01               	movwf	btemp^0,c
 11686  015C5C  5018               	movf	(btemp+23)^0,w,c
 11687  015C5E  0A80               	xorlw	128
 11688  015C60  5801               	subwfb	btemp^0,w,c
 11689  015C62  B0D8               	btfsc	status,0,c
 11690  015C64  D011               	goto	l16239
 11691  015C66  D775               	goto	l16233
 11692  015C68                     l16237:
 11693                           
 11694                           ;stkvar	_y @ sp[(-24)+0]
 11695  015C68  50E1               	movf	fsr1l,w,c
 11696  015C6A  0FE8               	addlw	-24
 11697  015C6C  6ED9               	movwf	fsr2l,c
 11698  015C6E  50E2               	movf	fsr1h,w,c
 11699  015C70  6EDA               	movwf	fsr2h,c
 11700  015C72  0EFF               	movlw	255
 11701  015C74  22DA               	addwfc	fsr2h,f,c
 11702  015C76  2ADE               	incf	postinc2,f,c
 11703  015C78  0E00               	movlw	0
 11704  015C7A  22DE               	addwfc	postinc2,f,c
 11705  015C7C  22DE               	addwfc	postinc2,f,c
 11706  015C7E  22DE               	addwfc	postinc2,f,c
 11707  015C80  22DE               	addwfc	postinc2,f,c
 11708  015C82  22DE               	addwfc	postinc2,f,c
 11709  015C84  22DE               	addwfc	postinc2,f,c
 11710  015C86  22DE               	addwfc	postinc2,f,c
 11711  015C88                     l16239:
 11712                           
 11713                           ;stkvar	_t @ sp[(-24)+-8]
 11714  015C88  0E00               	movlw	0
 11715  015C8A  6EE6               	movwf	postinc1,c
 11716  015C8C  0E00               	movlw	0
 11717  015C8E  6EE6               	movwf	postinc1,c
 11718                           
 11719                           ;stkvar	_y @ sp[(-26)+0]
 11720  015C90  0EE6               	movlw	-26
 11721  015C92  50E3               	movf	plusw1,w,c
 11722  015C94  0F01               	addlw	1
 11723  015C96  6E11               	movwf	(btemp+16)^0,c
 11724  015C98  0EE7               	movlw	-25
 11725  015C9A  006F FF8C  F012    	movff	plusw1,btemp+17
 11726  015CA0  0E00               	movlw	0
 11727  015CA2  2212               	addwfc	(btemp+17)^0,f,c
 11728  015CA4  0EE8               	movlw	-24
 11729  015CA6  006F FF8C  F013    	movff	plusw1,btemp+18
 11730  015CAC  0E00               	movlw	0
 11731  015CAE  2213               	addwfc	(btemp+18)^0,f,c
 11732  015CB0  0EE9               	movlw	-23
 11733  015CB2  006F FF8C  F014    	movff	plusw1,btemp+19
 11734  015CB8  0E00               	movlw	0
 11735  015CBA  2214               	addwfc	(btemp+19)^0,f,c
 11736  015CBC  0EEA               	movlw	-22
 11737  015CBE  006F FF8C  F015    	movff	plusw1,btemp+20
 11738  015CC4  0E00               	movlw	0
 11739  015CC6  2215               	addwfc	(btemp+20)^0,f,c
 11740  015CC8  0EEB               	movlw	-21
 11741  015CCA  006F FF8C  F016    	movff	plusw1,btemp+21
 11742  015CD0  0E00               	movlw	0
 11743  015CD2  2216               	addwfc	(btemp+21)^0,f,c
 11744  015CD4  0EEC               	movlw	-20
 11745  015CD6  006F FF8C  F017    	movff	plusw1,btemp+22
 11746  015CDC  0E00               	movlw	0
 11747  015CDE  2217               	addwfc	(btemp+22)^0,f,c
 11748  015CE0  0EED               	movlw	-19
 11749  015CE2  006F FF8C  F018    	movff	plusw1,btemp+23
 11750  015CE8  0E00               	movlw	0
 11751  015CEA  2218               	addwfc	(btemp+23)^0,f,c
 11752  015CEC  0060  F047  FFE6   	movff	btemp+16,postinc1
 11753  015CF2  0060  F04B  FFE6   	movff	btemp+17,postinc1
 11754  015CF8  0060  F04F  FFE6   	movff	btemp+18,postinc1
 11755  015CFE  0060  F053  FFE6   	movff	btemp+19,postinc1
 11756  015D04  0060  F057  FFE6   	movff	btemp+20,postinc1
 11757  015D0A  0060  F05B  FFE6   	movff	btemp+21,postinc1
 11758  015D10  0060  F05F  FFE6   	movff	btemp+22,postinc1
 11759  015D16  0060  F063  FFE6   	movff	btemp+23,postinc1
 11760  015D1C  EC57  F0A8         	call	___year_to_secs	;wreg free
 11761  015D20  52E5               	movf	postdec1,f,c
 11762  015D22  006F FF9C  F018    	movff	indf1,btemp+23
 11763  015D28  52E5               	movf	postdec1,f,c
 11764  015D2A  006F FF9C  F017    	movff	indf1,btemp+22
 11765  015D30  52E5               	movf	postdec1,f,c
 11766  015D32  006F FF9C  F016    	movff	indf1,btemp+21
 11767  015D38  52E5               	movf	postdec1,f,c
 11768  015D3A  006F FF9C  F015    	movff	indf1,btemp+20
 11769  015D40  52E5               	movf	postdec1,f,c
 11770  015D42  006F FF9C  F014    	movff	indf1,btemp+19
 11771  015D48  52E5               	movf	postdec1,f,c
 11772  015D4A  006F FF9C  F013    	movff	indf1,btemp+18
 11773  015D50  52E5               	movf	postdec1,f,c
 11774  015D52  006F FF9C  F012    	movff	indf1,btemp+17
 11775  015D58  52E5               	movf	postdec1,f,c
 11776  015D5A  006F FF9C  F011    	movff	indf1,btemp+16
 11777  015D60  52E5               	movf	postdec1,f,c
 11778  015D62  52E5               	movf	postdec1,f,c
 11779  015D64  0EE0               	movlw	-32
 11780  015D66  50E3               	movf	plusw1,w,c
 11781  015D68  5C11               	subwf	(btemp+16)^0,w,c
 11782  015D6A  0EE1               	movlw	-31
 11783  015D6C  50E3               	movf	plusw1,w,c
 11784  015D6E  5812               	subwfb	(btemp+17)^0,w,c
 11785  015D70  0EE2               	movlw	-30
 11786  015D72  50E3               	movf	plusw1,w,c
 11787  015D74  5813               	subwfb	(btemp+18)^0,w,c
 11788  015D76  0EE3               	movlw	-29
 11789  015D78  50E3               	movf	plusw1,w,c
 11790  015D7A  5814               	subwfb	(btemp+19)^0,w,c
 11791  015D7C  0EE4               	movlw	-28
 11792  015D7E  50E3               	movf	plusw1,w,c
 11793  015D80  5815               	subwfb	(btemp+20)^0,w,c
 11794  015D82  0EE5               	movlw	-27
 11795  015D84  50E3               	movf	plusw1,w,c
 11796  015D86  5816               	subwfb	(btemp+21)^0,w,c
 11797  015D88  0EE6               	movlw	-26
 11798  015D8A  50E3               	movf	plusw1,w,c
 11799  015D8C  5817               	subwfb	(btemp+22)^0,w,c
 11800  015D8E  5018               	movf	(btemp+23)^0,w,c
 11801  015D90  0A80               	xorlw	128
 11802  015D92  6E01               	movwf	btemp^0,c
 11803  015D94  0EE7               	movlw	-25
 11804  015D96  50E3               	movf	plusw1,w,c
 11805  015D98  0A80               	xorlw	128
 11806  015D9A  5801               	subwfb	btemp^0,w,c
 11807  015D9C  A0D8               	btfss	status,0,c
 11808  015D9E  D764               	goto	l16237
 11809                           
 11810                           ;stkvar	_y @ sp[(-24)+0]
 11811  015DA0  0EE8               	movlw	-24
 11812  015DA2  006F FF8F FFE6     	movff	plusw1,postinc1
 11813  015DA8  006F FF8F FFE6     	movff	plusw1,postinc1
 11814  015DAE  0EDE               	movlw	low _r0
 11815  015DB0  6EE6               	movwf	postinc1,c
 11816  015DB2  0E02               	movlw	high _r0
 11817  015DB4  6EE6               	movwf	postinc1,c
 11818  015DB6  EC54  F0B9         	call	_rule_to_secs	;wreg free
 11819  015DBA  52E5               	movf	postdec1,f,c
 11820  015DBC  006F FF9C  F018    	movff	indf1,btemp+23
 11821  015DC2  52E5               	movf	postdec1,f,c
 11822  015DC4  006F FF9C  F017    	movff	indf1,btemp+22
 11823  015DCA  52E5               	movf	postdec1,f,c
 11824  015DCC  006F FF9C  F016    	movff	indf1,btemp+21
 11825  015DD2  52E5               	movf	postdec1,f,c
 11826  015DD4  006F FF9C  F015    	movff	indf1,btemp+20
 11827  015DDA  52E5               	movf	postdec1,f,c
 11828  015DDC  006F FF9C  F014    	movff	indf1,btemp+19
 11829  015DE2  52E5               	movf	postdec1,f,c
 11830  015DE4  006F FF9C  F013    	movff	indf1,btemp+18
 11831  015DEA  52E5               	movf	postdec1,f,c
 11832  015DEC  006F FF9C  F012    	movff	indf1,btemp+17
 11833  015DF2  52E5               	movf	postdec1,f,c
 11834  015DF4  006F FF9C  F011    	movff	indf1,btemp+16
 11835                           
 11836                           ;stkvar	_t0 @ sp[(-24)+16]
 11837  015DFA  0EF8               	movlw	-8
 11838  015DFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 11839  015E02  0EF9               	movlw	-7
 11840  015E04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11841  015E0A  0EFA               	movlw	-6
 11842  015E0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11843  015E12  0EFB               	movlw	-5
 11844  015E14  0060  F053  FFE3   	movff	btemp+19,plusw1
 11845  015E1A  0EFC               	movlw	-4
 11846  015E1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 11847  015E22  0EFD               	movlw	-3
 11848  015E24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11849  015E2A  0EFE               	movlw	-2
 11850  015E2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11851  015E32  0EFF               	movlw	-1
 11852  015E34  0060  F063  FFE3   	movff	btemp+23,plusw1
 11853                           
 11854                           ;stkvar	_y @ sp[(-24)+0]
 11855  015E3A  0EE8               	movlw	-24
 11856  015E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11857  015E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11858  015E48  0ED4               	movlw	low _r1
 11859  015E4A  6EE6               	movwf	postinc1,c
 11860  015E4C  0E02               	movlw	high _r1
 11861  015E4E  6EE6               	movwf	postinc1,c
 11862  015E50  EC54  F0B9         	call	_rule_to_secs	;wreg free
 11863  015E54  52E5               	movf	postdec1,f,c
 11864  015E56  006F FF9C  F018    	movff	indf1,btemp+23
 11865  015E5C  52E5               	movf	postdec1,f,c
 11866  015E5E  006F FF9C  F017    	movff	indf1,btemp+22
 11867  015E64  52E5               	movf	postdec1,f,c
 11868  015E66  006F FF9C  F016    	movff	indf1,btemp+21
 11869  015E6C  52E5               	movf	postdec1,f,c
 11870  015E6E  006F FF9C  F015    	movff	indf1,btemp+20
 11871  015E74  52E5               	movf	postdec1,f,c
 11872  015E76  006F FF9C  F014    	movff	indf1,btemp+19
 11873  015E7C  52E5               	movf	postdec1,f,c
 11874  015E7E  006F FF9C  F013    	movff	indf1,btemp+18
 11875  015E84  52E5               	movf	postdec1,f,c
 11876  015E86  006F FF9C  F012    	movff	indf1,btemp+17
 11877  015E8C  52E5               	movf	postdec1,f,c
 11878  015E8E  006F FF9C  F011    	movff	indf1,btemp+16
 11879                           
 11880                           ;stkvar	_t1 @ sp[(-24)+8]
 11881  015E94  0EF0               	movlw	-16
 11882  015E96  0060  F047  FFE3   	movff	btemp+16,plusw1
 11883  015E9C  0EF1               	movlw	-15
 11884  015E9E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11885  015EA4  0EF2               	movlw	-14
 11886  015EA6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11887  015EAC  0EF3               	movlw	-13
 11888  015EAE  0060  F053  FFE3   	movff	btemp+19,plusw1
 11889  015EB4  0EF4               	movlw	-12
 11890  015EB6  0060  F057  FFE3   	movff	btemp+20,plusw1
 11891  015EBC  0EF5               	movlw	-11
 11892  015EBE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11893  015EC4  0EF6               	movlw	-10
 11894  015EC6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11895  015ECC  0EF7               	movlw	-9
 11896  015ECE  0060  F063  FFE3   	movff	btemp+23,plusw1
 11897                           
 11898                           ;stkvar	_local @ sp[(-24)+-10]
 11899  015ED4  0EDE               	movlw	-34
 11900  015ED6  006F FF8C  F001    	movff	plusw1,btemp
 11901  015EDC  0EDF               	movlw	-33
 11902  015EDE  50E3               	movf	plusw1,w,c
 11903  015EE0  1001               	iorwf	btemp^0,w,c
 11904  015EE2  A4D8               	btfss	status,2,c
 11905  015EE4  D044               	goto	l16249
 11906  015EE6  0060  F1E8  F011   	movff	___timezone,btemp+16
 11907  015EEC  0060  F1EC  F012   	movff	___timezone+1,btemp+17
 11908  015EF2  0060  F1F0  F013   	movff	___timezone+2,btemp+18
 11909  015EF8  0060  F1F4  F014   	movff	___timezone+3,btemp+19
 11910  015EFE  6A15               	clrf	(btemp+20)^0,c
 11911  015F00  BE14               	btfsc	(btemp+19)^0,7,c
 11912  015F02  6815               	setf	(btemp+20)^0,c
 11913  015F04  0060  F054  F016   	movff	btemp+20,btemp+21
 11914  015F0A  0060  F054  F017   	movff	btemp+20,btemp+22
 11915  015F10  0060  F054  F018   	movff	btemp+20,btemp+23
 11916                           
 11917                           ;stkvar	_t0 @ sp[(-24)+16]
 11918  015F16  50E1               	movf	fsr1l,w,c
 11919  015F18  0FF8               	addlw	-8
 11920  015F1A  6ED9               	movwf	fsr2l,c
 11921  015F1C  50E2               	movf	fsr1h,w,c
 11922  015F1E  6EDA               	movwf	fsr2h,c
 11923  015F20  0EFF               	movlw	255
 11924  015F22  22DA               	addwfc	fsr2h,f,c
 11925  015F24  5011               	movf	(btemp+16)^0,w,c
 11926  015F26  26DE               	addwf	postinc2,f,c
 11927  015F28  5012               	movf	(btemp+17)^0,w,c
 11928  015F2A  22DE               	addwfc	postinc2,f,c
 11929  015F2C  5013               	movf	(btemp+18)^0,w,c
 11930  015F2E  22DE               	addwfc	postinc2,f,c
 11931  015F30  5014               	movf	(btemp+19)^0,w,c
 11932  015F32  22DE               	addwfc	postinc2,f,c
 11933  015F34  5015               	movf	(btemp+20)^0,w,c
 11934  015F36  22DE               	addwfc	postinc2,f,c
 11935  015F38  5016               	movf	(btemp+21)^0,w,c
 11936  015F3A  22DE               	addwfc	postinc2,f,c
 11937  015F3C  5017               	movf	(btemp+22)^0,w,c
 11938  015F3E  22DE               	addwfc	postinc2,f,c
 11939  015F40  5018               	movf	(btemp+23)^0,w,c
 11940  015F42  22DE               	addwfc	postinc2,f,c
 11941                           
 11942                           ;stkvar	_t1 @ sp[(-24)+8]
 11943  015F44  50E1               	movf	fsr1l,w,c
 11944  015F46  0FF0               	addlw	-16
 11945  015F48  6ED9               	movwf	fsr2l,c
 11946  015F4A  50E2               	movf	fsr1h,w,c
 11947  015F4C  6EDA               	movwf	fsr2h,c
 11948  015F4E  0EFF               	movlw	255
 11949  015F50  22DA               	addwfc	fsr2h,f,c
 11950  015F52  0100               	movlb	0	; () banked
 11951  015F54  51C4               	movf	_dst_off& (0+255),w,b
 11952  015F56  26DE               	addwf	postinc2,f,c
 11953  015F58  51C5               	movf	(_dst_off+1)& (0+255),w,b
 11954  015F5A  22DE               	addwfc	postinc2,f,c
 11955  015F5C  0E00               	movlw	0
 11956  015F5E  BFC5               	btfsc	(_dst_off+1)& (0+255),7,b
 11957  015F60  0EFF               	movlw	255
 11958  015F62  22DE               	addwfc	postinc2,f,c
 11959  015F64  22DE               	addwfc	postinc2,f,c
 11960  015F66  22DE               	addwfc	postinc2,f,c
 11961  015F68  22DE               	addwfc	postinc2,f,c
 11962  015F6A  22DE               	addwfc	postinc2,f,c
 11963  015F6C  22DE               	addwfc	postinc2,f,c
 11964  015F6E                     l16249:
 11965                           
 11966                           ;stkvar	_t1 @ sp[(-24)+8]
 11967                           ;stkvar	_t0 @ sp[(-24)+16]
 11968  015F6E  50E1               	movf	fsr1l,w,c
 11969  015F70  0FF8               	addlw	-8
 11970  015F72  6ED9               	movwf	fsr2l,c
 11971  015F74  50E2               	movf	fsr1h,w,c
 11972  015F76  6EDA               	movwf	fsr2h,c
 11973  015F78  0EFF               	movlw	255
 11974  015F7A  22DA               	addwfc	fsr2h,f,c
 11975  015F7C  0EF0               	movlw	-16
 11976  015F7E  50E3               	movf	plusw1,w,c
 11977  015F80  5CDE               	subwf	postinc2,w,c
 11978  015F82  0EF1               	movlw	-15
 11979  015F84  50E3               	movf	plusw1,w,c
 11980  015F86  58DE               	subwfb	postinc2,w,c
 11981  015F88  0EF2               	movlw	-14
 11982  015F8A  50E3               	movf	plusw1,w,c
 11983  015F8C  58DE               	subwfb	postinc2,w,c
 11984  015F8E  0EF3               	movlw	-13
 11985  015F90  50E3               	movf	plusw1,w,c
 11986  015F92  58DE               	subwfb	postinc2,w,c
 11987  015F94  0EF4               	movlw	-12
 11988  015F96  50E3               	movf	plusw1,w,c
 11989  015F98  58DE               	subwfb	postinc2,w,c
 11990  015F9A  0EF5               	movlw	-11
 11991  015F9C  50E3               	movf	plusw1,w,c
 11992  015F9E  58DE               	subwfb	postinc2,w,c
 11993  015FA0  0EF6               	movlw	-10
 11994  015FA2  50E3               	movf	plusw1,w,c
 11995  015FA4  58DE               	subwfb	postinc2,w,c
 11996  015FA6  50DE               	movf	postinc2,w,c
 11997  015FA8  0A80               	xorlw	128
 11998  015FAA  6E01               	movwf	btemp^0,c
 11999  015FAC  0EF7               	movlw	-9
 12000  015FAE  50E3               	movf	plusw1,w,c
 12001  015FB0  0A80               	xorlw	128
 12002  015FB2  5801               	subwfb	btemp^0,w,c
 12003  015FB4  B0D8               	btfsc	status,0,c
 12004  015FB6  D04B               	goto	l16259
 12005                           
 12006                           ;stkvar	_t0 @ sp[(-24)+16]
 12007                           ;stkvar	_t @ sp[(-24)+-8]
 12008  015FB8  50E1               	movf	fsr1l,w,c
 12009  015FBA  0FE0               	addlw	-32
 12010  015FBC  6ED9               	movwf	fsr2l,c
 12011  015FBE  50E2               	movf	fsr1h,w,c
 12012  015FC0  6EDA               	movwf	fsr2h,c
 12013  015FC2  0EFF               	movlw	255
 12014  015FC4  22DA               	addwfc	fsr2h,f,c
 12015  015FC6  0EF8               	movlw	-8
 12016  015FC8  50E3               	movf	plusw1,w,c
 12017  015FCA  5CDE               	subwf	postinc2,w,c
 12018  015FCC  0EF9               	movlw	-7
 12019  015FCE  50E3               	movf	plusw1,w,c
 12020  015FD0  58DE               	subwfb	postinc2,w,c
 12021  015FD2  0EFA               	movlw	-6
 12022  015FD4  50E3               	movf	plusw1,w,c
 12023  015FD6  58DE               	subwfb	postinc2,w,c
 12024  015FD8  0EFB               	movlw	-5
 12025  015FDA  50E3               	movf	plusw1,w,c
 12026  015FDC  58DE               	subwfb	postinc2,w,c
 12027  015FDE  0EFC               	movlw	-4
 12028  015FE0  50E3               	movf	plusw1,w,c
 12029  015FE2  58DE               	subwfb	postinc2,w,c
 12030  015FE4  0EFD               	movlw	-3
 12031  015FE6  50E3               	movf	plusw1,w,c
 12032  015FE8  58DE               	subwfb	postinc2,w,c
 12033  015FEA  0EFE               	movlw	-2
 12034  015FEC  50E3               	movf	plusw1,w,c
 12035  015FEE  58DE               	subwfb	postinc2,w,c
 12036  015FF0  50DE               	movf	postinc2,w,c
 12037  015FF2  0A80               	xorlw	128
 12038  015FF4  6E01               	movwf	btemp^0,c
 12039  015FF6  0EFF               	movlw	-1
 12040  015FF8  50E3               	movf	plusw1,w,c
 12041  015FFA  0A80               	xorlw	128
 12042  015FFC  5801               	subwfb	btemp^0,w,c
 12043  015FFE  A0D8               	btfss	status,0,c
 12044  016000  D070               	goto	u15920
 12045                           
 12046                           ;stkvar	_t1 @ sp[(-24)+8]
 12047                           ;stkvar	_t @ sp[(-24)+-8]
 12048  016002  50E1               	movf	fsr1l,w,c
 12049  016004  0FE0               	addlw	-32
 12050  016006  6ED9               	movwf	fsr2l,c
 12051  016008  50E2               	movf	fsr1h,w,c
 12052  01600A  6EDA               	movwf	fsr2h,c
 12053  01600C  0EFF               	movlw	255
 12054  01600E  22DA               	addwfc	fsr2h,f,c
 12055  016010  0EF0               	movlw	-16
 12056  016012  50E3               	movf	plusw1,w,c
 12057  016014  5CDE               	subwf	postinc2,w,c
 12058  016016  0EF1               	movlw	-15
 12059  016018  50E3               	movf	plusw1,w,c
 12060  01601A  58DE               	subwfb	postinc2,w,c
 12061  01601C  0EF2               	movlw	-14
 12062  01601E  50E3               	movf	plusw1,w,c
 12063  016020  58DE               	subwfb	postinc2,w,c
 12064  016022  0EF3               	movlw	-13
 12065  016024  50E3               	movf	plusw1,w,c
 12066  016026  58DE               	subwfb	postinc2,w,c
 12067  016028  0EF4               	movlw	-12
 12068  01602A  50E3               	movf	plusw1,w,c
 12069  01602C  58DE               	subwfb	postinc2,w,c
 12070  01602E  0EF5               	movlw	-11
 12071  016030  50E3               	movf	plusw1,w,c
 12072  016032  58DE               	subwfb	postinc2,w,c
 12073  016034  0EF6               	movlw	-10
 12074  016036  50E3               	movf	plusw1,w,c
 12075  016038  58DE               	subwfb	postinc2,w,c
 12076  01603A  50DE               	movf	postinc2,w,c
 12077  01603C  0A80               	xorlw	128
 12078  01603E  6E01               	movwf	btemp^0,c
 12079  016040  0EF7               	movlw	-9
 12080  016042  50E3               	movf	plusw1,w,c
 12081  016044  0A80               	xorlw	128
 12082  016046  5801               	subwfb	btemp^0,w,c
 12083  016048  A0D8               	btfss	status,0,c
 12084  01604A  D0C1               	goto	l16277
 12085  01604C  D04A               	goto	u15920
 12086  01604E                     l16259:
 12087                           
 12088                           ;stkvar	_t1 @ sp[(-24)+8]
 12089                           ;stkvar	_t @ sp[(-24)+-8]
 12090  01604E  50E1               	movf	fsr1l,w,c
 12091  016050  0FE0               	addlw	-32
 12092  016052  6ED9               	movwf	fsr2l,c
 12093  016054  50E2               	movf	fsr1h,w,c
 12094  016056  6EDA               	movwf	fsr2h,c
 12095  016058  0EFF               	movlw	255
 12096  01605A  22DA               	addwfc	fsr2h,f,c
 12097  01605C  0EF0               	movlw	-16
 12098  01605E  50E3               	movf	plusw1,w,c
 12099  016060  5CDE               	subwf	postinc2,w,c
 12100  016062  0EF1               	movlw	-15
 12101  016064  50E3               	movf	plusw1,w,c
 12102  016066  58DE               	subwfb	postinc2,w,c
 12103  016068  0EF2               	movlw	-14
 12104  01606A  50E3               	movf	plusw1,w,c
 12105  01606C  58DE               	subwfb	postinc2,w,c
 12106  01606E  0EF3               	movlw	-13
 12107  016070  50E3               	movf	plusw1,w,c
 12108  016072  58DE               	subwfb	postinc2,w,c
 12109  016074  0EF4               	movlw	-12
 12110  016076  50E3               	movf	plusw1,w,c
 12111  016078  58DE               	subwfb	postinc2,w,c
 12112  01607A  0EF5               	movlw	-11
 12113  01607C  50E3               	movf	plusw1,w,c
 12114  01607E  58DE               	subwfb	postinc2,w,c
 12115  016080  0EF6               	movlw	-10
 12116  016082  50E3               	movf	plusw1,w,c
 12117  016084  58DE               	subwfb	postinc2,w,c
 12118  016086  50DE               	movf	postinc2,w,c
 12119  016088  0A80               	xorlw	128
 12120  01608A  6E01               	movwf	btemp^0,c
 12121  01608C  0EF7               	movlw	-9
 12122  01608E  50E3               	movf	plusw1,w,c
 12123  016090  0A80               	xorlw	128
 12124  016092  5801               	subwfb	btemp^0,w,c
 12125  016094  A0D8               	btfss	status,0,c
 12126  016096  D09B               	goto	l16277
 12127                           
 12128                           ;stkvar	_t0 @ sp[(-24)+16]
 12129                           ;stkvar	_t @ sp[(-24)+-8]
 12130  016098  50E1               	movf	fsr1l,w,c
 12131  01609A  0FE0               	addlw	-32
 12132  01609C  6ED9               	movwf	fsr2l,c
 12133  01609E  50E2               	movf	fsr1h,w,c
 12134  0160A0  6EDA               	movwf	fsr2h,c
 12135  0160A2  0EFF               	movlw	255
 12136  0160A4  22DA               	addwfc	fsr2h,f,c
 12137  0160A6  0EF8               	movlw	-8
 12138  0160A8  50E3               	movf	plusw1,w,c
 12139  0160AA  5CDE               	subwf	postinc2,w,c
 12140  0160AC  0EF9               	movlw	-7
 12141  0160AE  50E3               	movf	plusw1,w,c
 12142  0160B0  58DE               	subwfb	postinc2,w,c
 12143  0160B2  0EFA               	movlw	-6
 12144  0160B4  50E3               	movf	plusw1,w,c
 12145  0160B6  58DE               	subwfb	postinc2,w,c
 12146  0160B8  0EFB               	movlw	-5
 12147  0160BA  50E3               	movf	plusw1,w,c
 12148  0160BC  58DE               	subwfb	postinc2,w,c
 12149  0160BE  0EFC               	movlw	-4
 12150  0160C0  50E3               	movf	plusw1,w,c
 12151  0160C2  58DE               	subwfb	postinc2,w,c
 12152  0160C4  0EFD               	movlw	-3
 12153  0160C6  50E3               	movf	plusw1,w,c
 12154  0160C8  58DE               	subwfb	postinc2,w,c
 12155  0160CA  0EFE               	movlw	-2
 12156  0160CC  50E3               	movf	plusw1,w,c
 12157  0160CE  58DE               	subwfb	postinc2,w,c
 12158  0160D0  50DE               	movf	postinc2,w,c
 12159  0160D2  0A80               	xorlw	128
 12160  0160D4  6E01               	movwf	btemp^0,c
 12161  0160D6  0EFF               	movlw	-1
 12162  0160D8  50E3               	movf	plusw1,w,c
 12163  0160DA  0A80               	xorlw	128
 12164  0160DC  5801               	subwfb	btemp^0,w,c
 12165  0160DE  B0D8               	btfsc	status,0,c
 12166  0160E0  D076               	goto	l16277
 12167  0160E2                     u15920:
 12168                           
 12169                           ;stkvar	_isdst @ sp[(-24)+-12]
 12170  0160E2  0EDC               	movlw	-36
 12171  0160E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12172  0160EA  0EDD               	movlw	-35
 12173  0160EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12174  0160F2  0E00               	movlw	0
 12175  0160F4  6EDE               	movwf	postinc2,c
 12176  0160F6  0E00               	movlw	0
 12177  0160F8  6EDD               	movwf	postdec2,c
 12178  0160FA  0060  F1E8  F009   	movff	___timezone,btemp+8
 12179  016100  0060  F1EC  F00A   	movff	___timezone+1,btemp+9
 12180  016106  0060  F1F0  F00B   	movff	___timezone+2,btemp+10
 12181  01610C  0060  F1F4  F00C   	movff	___timezone+3,btemp+11
 12182  016112  1E09               	comf	(btemp+8)^0,f,c
 12183  016114  1E0A               	comf	(btemp+9)^0,f,c
 12184  016116  1E0B               	comf	(btemp+10)^0,f,c
 12185  016118  1E0C               	comf	(btemp+11)^0,f,c
 12186  01611A  2A09               	incf	(btemp+8)^0,f,c
 12187  01611C  0E00               	movlw	0
 12188  01611E  220A               	addwfc	(btemp+9)^0,f,c
 12189  016120  220B               	addwfc	(btemp+10)^0,f,c
 12190  016122  220C               	addwfc	(btemp+11)^0,f,c
 12191                           
 12192                           ;stkvar	_offset @ sp[(-24)+-14]
 12193  016124  0EDA               	movlw	-38
 12194  016126  006F FF8F FFD9     	movff	plusw1,fsr2l
 12195  01612C  0EDB               	movlw	-37
 12196  01612E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12197  016134  0060  F027  FFDE   	movff	btemp+8,postinc2
 12198  01613A  0060  F02B  FFDE   	movff	btemp+9,postinc2
 12199  016140  0060  F02F  FFDE   	movff	btemp+10,postinc2
 12200  016146  0060  F033  FFDE   	movff	btemp+11,postinc2
 12201                           
 12202                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12203  01614C  0ED8               	movlw	-40
 12204  01614E  006F FF8C  F001    	movff	plusw1,btemp
 12205  016154  0ED9               	movlw	-39
 12206  016156  50E3               	movf	plusw1,w,c
 12207  016158  1001               	iorwf	btemp^0,w,c
 12208  01615A  B4D8               	btfsc	status,2,c
 12209  01615C  D029               	goto	l16273
 12210  01615E  0060  F310  F00B   	movff	_dst_off,btemp+10
 12211  016164  0060  F314  F00C   	movff	_dst_off+1,btemp+11
 12212  01616A  1E0B               	comf	(btemp+10)^0,f,c
 12213  01616C  1E0C               	comf	(btemp+11)^0,f,c
 12214  01616E  4A0B               	infsnz	(btemp+10)^0,f,c
 12215  016170  2A0C               	incf	(btemp+11)^0,f,c
 12216  016172  0060  F02C  F005   	movff	btemp+10,btemp+4
 12217  016178  0060  F030  F006   	movff	btemp+11,btemp+5
 12218  01617E  0E00               	movlw	0
 12219  016180  BE06               	btfsc	(btemp+5)^0,7,c
 12220  016182  0EFF               	movlw	255
 12221  016184  6E07               	movwf	(btemp+6)^0,c
 12222  016186  6E08               	movwf	(btemp+7)^0,c
 12223                           
 12224                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12225  016188  0ED8               	movlw	-40
 12226  01618A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12227  016190  0ED9               	movlw	-39
 12228  016192  006F FF8F FFDA     	movff	plusw1,fsr2h
 12229  016198  0060  F017  FFDE   	movff	btemp+4,postinc2
 12230  01619E  0060  F01B  FFDE   	movff	btemp+5,postinc2
 12231  0161A4  0060  F01F  FFDE   	movff	btemp+6,postinc2
 12232  0161AA  0060  F023  FFDE   	movff	btemp+7,postinc2
 12233  0161B0                     l16273:
 12234                           
 12235                           ;stkvar	_zonename @ sp[(-24)+-18]
 12236  0161B0  0ED6               	movlw	-42
 12237  0161B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12238  0161B8  0ED7               	movlw	-41
 12239  0161BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12240  0161C0  0060  F1DB  FFDE   	movff	___tzname,postinc2
 12241  0161C6  0060  F1DF  FFDD   	movff	___tzname+1,postdec2
 12242  0161CC  D075               	goto	l4002
 12243  0161CE                     l16277:
 12244                           
 12245                           ;stkvar	_isdst @ sp[(-24)+-12]
 12246  0161CE  0EDC               	movlw	-36
 12247  0161D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12248  0161D6  0EDD               	movlw	-35
 12249  0161D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12250  0161DE  0E01               	movlw	1
 12251  0161E0  6EDE               	movwf	postinc2,c
 12252  0161E2  0E00               	movlw	0
 12253  0161E4  6EDD               	movwf	postdec2,c
 12254  0161E6  0060  F310  F00B   	movff	_dst_off,btemp+10
 12255  0161EC  0060  F314  F00C   	movff	_dst_off+1,btemp+11
 12256  0161F2  1E0B               	comf	(btemp+10)^0,f,c
 12257  0161F4  1E0C               	comf	(btemp+11)^0,f,c
 12258  0161F6  4A0B               	infsnz	(btemp+10)^0,f,c
 12259  0161F8  2A0C               	incf	(btemp+11)^0,f,c
 12260  0161FA  0060  F02C  F005   	movff	btemp+10,btemp+4
 12261  016200  0060  F030  F006   	movff	btemp+11,btemp+5
 12262  016206  0E00               	movlw	0
 12263  016208  BE06               	btfsc	(btemp+5)^0,7,c
 12264  01620A  0EFF               	movlw	255
 12265  01620C  6E07               	movwf	(btemp+6)^0,c
 12266  01620E  6E08               	movwf	(btemp+7)^0,c
 12267                           
 12268                           ;stkvar	_offset @ sp[(-24)+-14]
 12269  016210  0EDA               	movlw	-38
 12270  016212  006F FF8F FFD9     	movff	plusw1,fsr2l
 12271  016218  0EDB               	movlw	-37
 12272  01621A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12273  016220  0060  F017  FFDE   	movff	btemp+4,postinc2
 12274  016226  0060  F01B  FFDE   	movff	btemp+5,postinc2
 12275  01622C  0060  F01F  FFDE   	movff	btemp+6,postinc2
 12276  016232  0060  F023  FFDE   	movff	btemp+7,postinc2
 12277                           
 12278                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12279  016238  0ED8               	movlw	-40
 12280  01623A  006F FF8C  F001    	movff	plusw1,btemp
 12281  016240  0ED9               	movlw	-39
 12282  016242  50E3               	movf	plusw1,w,c
 12283  016244  1001               	iorwf	btemp^0,w,c
 12284  016246  B4D8               	btfsc	status,2,c
 12285  016248  D029               	goto	l16285
 12286  01624A  0060  F1E8  F009   	movff	___timezone,btemp+8
 12287  016250  0060  F1EC  F00A   	movff	___timezone+1,btemp+9
 12288  016256  0060  F1F0  F00B   	movff	___timezone+2,btemp+10
 12289  01625C  0060  F1F4  F00C   	movff	___timezone+3,btemp+11
 12290  016262  1E09               	comf	(btemp+8)^0,f,c
 12291  016264  1E0A               	comf	(btemp+9)^0,f,c
 12292  016266  1E0B               	comf	(btemp+10)^0,f,c
 12293  016268  1E0C               	comf	(btemp+11)^0,f,c
 12294  01626A  2A09               	incf	(btemp+8)^0,f,c
 12295  01626C  0E00               	movlw	0
 12296  01626E  220A               	addwfc	(btemp+9)^0,f,c
 12297  016270  220B               	addwfc	(btemp+10)^0,f,c
 12298  016272  220C               	addwfc	(btemp+11)^0,f,c
 12299                           
 12300                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12301  016274  0ED8               	movlw	-40
 12302  016276  006F FF8F FFD9     	movff	plusw1,fsr2l
 12303  01627C  0ED9               	movlw	-39
 12304  01627E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12305  016284  0060  F027  FFDE   	movff	btemp+8,postinc2
 12306  01628A  0060  F02B  FFDE   	movff	btemp+9,postinc2
 12307  016290  0060  F02F  FFDE   	movff	btemp+10,postinc2
 12308  016296  0060  F033  FFDE   	movff	btemp+11,postinc2
 12309  01629C                     l16285:
 12310                           
 12311                           ;stkvar	_zonename @ sp[(-24)+-18]
 12312  01629C  0ED6               	movlw	-42
 12313  01629E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12314  0162A4  0ED7               	movlw	-41
 12315  0162A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12316  0162AC  0060  F1E3  FFDE   	movff	___tzname+2,postinc2
 12317  0162B2  0060  F1E7  FFDD   	movff	___tzname+3,postdec2
 12318  0162B8                     l4002:
 12319                           
 12320                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 12321  0162B8  0ED6               	movlw	214
 12322  0162BA  26E1               	addwf	fsr1l,f,c
 12323  0162BC  0EFF               	movlw	255
 12324  0162BE  22E2               	addwfc	fsr1h,f,c
 12325  0162C0  0012               	return		;funcret
 12326  0162C2                     __end_of___secs_to_zone:
 12327                           	opt callstack 0
 12328                           
 12329 ;; *************** function _scan_trans *****************
 12330 ;; Defined at:
 12331 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  t               8  [STACK] long long 
 12334 ;;  local           2  [STACK] int 
 12335 ;;  alt             2  [STACK] PTR unsigned int 
 12336 ;;		 -> alt(2), 
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;  x               8    0        unsigned long long 
 12339 ;;  a               2    0        unsigned int 
 12340 ;;  scale           2    0        int 
 12341 ;;  n               2    0        unsigned int 
 12342 ;;  m               2    0        unsigned int 
 12343 ;;  off             2    0        int 
 12344 ;; Return value:  Size  Location     Type
 12345 ;;                  2  [STACK] unsigned int 
 12346 ;; Registers used:
 12347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12348 ;; Tracked objects:
 12349 ;;		On entry : 0/0
 12350 ;;		On exit  : 0/0
 12351 ;;		Unchanged: 0/0
 12352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12357 ;;Total ram usage:        0 bytes
 12358 ;; Hardware stack levels used:    1
 12359 ;; Hardware stack levels required when called:   16
 12360 ;; This function calls:
 12361 ;;		_zi_read32
 12362 ;; This function is called by:
 12363 ;;		___secs_to_zone
 12364 ;; This function uses a reentrant model
 12365 ;;
 12366                           
 12367                           	psect	text35
 12368  001472                     __ptext35:
 12369                           	opt callstack 0
 12370  001472                     _scan_trans:
 12371                           	opt callstack 10
 12372                           
 12373                           ;stkvar	_alt @ sp[(0)+-12]
 12374                           
 12375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 12376                           ;incstack = 0
 12377  001472  0EF4               	movlw	-12
 12378  001474  006F FF8C  F001    	movff	plusw1,btemp
 12379  00147A  0EF5               	movlw	-11
 12380  00147C  50E3               	movf	plusw1,w,c
 12381  00147E  1001               	iorwf	btemp^0,w,c
 12382  001480  B4D8               	btfsc	status,2,c
 12383  001482  D00C               	goto	l12017
 12384                           
 12385                           ;stkvar	_alt @ sp[(0)+-12]
 12386  001484  0EF4               	movlw	-12
 12387  001486  006F FF8F FFD9     	movff	plusw1,fsr2l
 12388  00148C  0EF5               	movlw	-11
 12389  00148E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12390  001494  0E00               	movlw	0
 12391  001496  6EDE               	movwf	postinc2,c
 12392  001498  0E00               	movlw	0
 12393  00149A  6EDD               	movwf	postdec2,c
 12394  00149C                     l12017:
 12395  00149C  0E00               	movlw	0
 12396  00149E  6E01               	movwf	btemp^0,c
 12397  0014A0  0E00               	movlw	0
 12398  0014A2  6E02               	movwf	(btemp+1)^0,c
 12399                           
 12400                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 12401  0014A4  0EF4               	movlw	244
 12402  0014A6  26E1               	addwf	fsr1l,f,c
 12403  0014A8  0EFF               	movlw	255
 12404  0014AA  22E2               	addwfc	fsr1h,f,c
 12405  0014AC  0012               	return		;funcret
 12406  0014AE                     __end_of_scan_trans:
 12407                           	opt callstack 0
 12408                           
 12409 ;; *************** function _zi_read32 *****************
 12410 ;; Defined at:
 12411 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;  z               2  [STACK] PTR const unsigned char 
 12414 ;;		 -> NULL(0), 
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;		None
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  4  [STACK] unsigned long 
 12419 ;; Registers used:
 12420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12430 ;;Total ram usage:        0 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:   15
 12433 ;; This function calls:
 12434 ;;		Nothing
 12435 ;; This function is called by:
 12436 ;;		_scan_trans
 12437 ;;		___secs_to_zone
 12438 ;; This function uses a reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text36
 12442  01F086                     __ptext36:
 12443                           	opt callstack 0
 12444  01F086                     _zi_read32:
 12445                           	opt callstack 11
 12446                           
 12447                           ;stkvar	_z @ sp[(0)+-2]
 12448                           
 12449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12450                           ;incstack = 0
 12451  01F086  0EFE               	movlw	-2
 12452  01F088  006F FF8C  F00B    	movff	plusw1,btemp+10
 12453  01F08E  0EFF               	movlw	-1
 12454  01F090  006F FF8C  F00C    	movff	plusw1,btemp+11
 12455  01F096  0E02               	movlw	2
 12456  01F098  240B               	addwf	(btemp+10)^0,w,c
 12457  01F09A  6ED9               	movwf	fsr2l,c
 12458  01F09C  0E00               	movlw	0
 12459  01F09E  200C               	addwfc	(btemp+11)^0,w,c
 12460  01F0A0  6EDA               	movwf	fsr2h,c
 12461  01F0A2  50DF               	movf	indf2,w,c
 12462  01F0A4  6E0C               	movwf	(btemp+11)^0,c
 12463  01F0A6  0060  F030  F005   	movff	btemp+11,btemp+4
 12464  01F0AC  6A06               	clrf	(btemp+5)^0,c
 12465  01F0AE  6A07               	clrf	(btemp+6)^0,c
 12466  01F0B0  6A08               	clrf	(btemp+7)^0,c
 12467  01F0B2  0060  F01C  F008   	movff	btemp+6,btemp+7
 12468  01F0B8  0060  F018  F007   	movff	btemp+5,btemp+6
 12469  01F0BE  0060  F014  F006   	movff	btemp+4,btemp+5
 12470  01F0C4  6A05               	clrf	(btemp+4)^0,c
 12471                           
 12472                           ;stkvar	_z @ sp[(0)+-2]
 12473  01F0C6  0EFE               	movlw	-2
 12474  01F0C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12475  01F0CE  0EFF               	movlw	-1
 12476  01F0D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12477  01F0D6  0E01               	movlw	1
 12478  01F0D8  240B               	addwf	(btemp+10)^0,w,c
 12479  01F0DA  6ED9               	movwf	fsr2l,c
 12480  01F0DC  0E00               	movlw	0
 12481  01F0DE  200C               	addwfc	(btemp+11)^0,w,c
 12482  01F0E0  6EDA               	movwf	fsr2h,c
 12483  01F0E2  50DF               	movf	indf2,w,c
 12484  01F0E4  6E0C               	movwf	(btemp+11)^0,c
 12485  01F0E6  0060  F030  F001   	movff	btemp+11,btemp
 12486  01F0EC  6A02               	clrf	(btemp+1)^0,c
 12487  01F0EE  6A03               	clrf	(btemp+2)^0,c
 12488  01F0F0  6A04               	clrf	(btemp+3)^0,c
 12489  01F0F2  0060  F008  F004   	movff	btemp+1,btemp+3
 12490  01F0F8  0060  F004  F003   	movff	btemp,btemp+2
 12491  01F0FE  6A02               	clrf	(btemp+1)^0,c
 12492  01F100  6A01               	clrf	btemp^0,c
 12493                           
 12494                           ;stkvar	_z @ sp[(0)+-2]
 12495  01F102  0EFE               	movlw	-2
 12496  01F104  006F FF8F FFD9     	movff	plusw1,fsr2l
 12497  01F10A  0EFF               	movlw	-1
 12498  01F10C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12499  01F112  50DF               	movf	indf2,w,c
 12500  01F114  6E09               	movwf	(btemp+8)^0,c
 12501  01F116  6A0A               	clrf	(btemp+9)^0,c
 12502  01F118  6A0B               	clrf	(btemp+10)^0,c
 12503  01F11A  6A0C               	clrf	(btemp+11)^0,c
 12504  01F11C  0060  F024  F00C   	movff	btemp+8,btemp+11
 12505  01F122  6A0B               	clrf	(btemp+10)^0,c
 12506  01F124  6A0A               	clrf	(btemp+9)^0,c
 12507  01F126  6A09               	clrf	(btemp+8)^0,c
 12508  01F128  5001               	movf	btemp^0,w,c
 12509  01F12A  1209               	iorwf	(btemp+8)^0,f,c
 12510  01F12C  5002               	movf	(btemp+1)^0,w,c
 12511  01F12E  120A               	iorwf	(btemp+9)^0,f,c
 12512  01F130  5003               	movf	(btemp+2)^0,w,c
 12513  01F132  120B               	iorwf	(btemp+10)^0,f,c
 12514  01F134  5004               	movf	(btemp+3)^0,w,c
 12515  01F136  120C               	iorwf	(btemp+11)^0,f,c
 12516  01F138  5005               	movf	(btemp+4)^0,w,c
 12517  01F13A  1209               	iorwf	(btemp+8)^0,f,c
 12518  01F13C  5006               	movf	(btemp+5)^0,w,c
 12519  01F13E  120A               	iorwf	(btemp+9)^0,f,c
 12520  01F140  5007               	movf	(btemp+6)^0,w,c
 12521  01F142  120B               	iorwf	(btemp+10)^0,f,c
 12522  01F144  5008               	movf	(btemp+7)^0,w,c
 12523  01F146  120C               	iorwf	(btemp+11)^0,f,c
 12524                           
 12525                           ;stkvar	_z @ sp[(0)+-2]
 12526  01F148  0EFE               	movlw	-2
 12527  01F14A  006F FF8C  F007    	movff	plusw1,btemp+6
 12528  01F150  0EFF               	movlw	-1
 12529  01F152  006F FF8C  F008    	movff	plusw1,btemp+7
 12530  01F158  0E03               	movlw	3
 12531  01F15A  2407               	addwf	(btemp+6)^0,w,c
 12532  01F15C  6ED9               	movwf	fsr2l,c
 12533  01F15E  0E00               	movlw	0
 12534  01F160  2008               	addwfc	(btemp+7)^0,w,c
 12535  01F162  6EDA               	movwf	fsr2h,c
 12536  01F164  50DF               	movf	indf2,w,c
 12537  01F166  1009               	iorwf	(btemp+8)^0,w,c
 12538  01F168  6E01               	movwf	btemp^0,c
 12539  01F16A  500A               	movf	(btemp+9)^0,w,c
 12540  01F16C  6E02               	movwf	(btemp+1)^0,c
 12541  01F16E  500B               	movf	(btemp+10)^0,w,c
 12542  01F170  6E03               	movwf	(btemp+2)^0,c
 12543  01F172  500C               	movf	(btemp+11)^0,w,c
 12544  01F174  6E04               	movwf	(btemp+3)^0,c
 12545                           
 12546                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 12547  01F176  52E5               	movf	postdec1,f,c
 12548  01F178  52E5               	movf	postdec1,f,c
 12549  01F17A  0012               	return		;funcret
 12550  01F17C                     __end_of_zi_read32:
 12551                           	opt callstack 0
 12552                           
 12553 ;; *************** function _rule_to_secs *****************
 12554 ;; Defined at:
 12555 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;  rule            2  [STACK] PTR const int 
 12558 ;;		 -> r1(10), r0(10), 
 12559 ;;  year            2  [STACK] int 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  days            2  [STACK] int 
 12562 ;;  wday            2  [STACK] int 
 12563 ;;  t               8  [STACK] long long 
 12564 ;;  is_leap         2  [STACK] int 
 12565 ;;  n               2  [STACK] int 
 12566 ;;  x               2  [STACK] int 
 12567 ;;  m               2  [STACK] int 
 12568 ;;  d               2  [STACK] int 
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  8  [STACK] long long 
 12571 ;; Registers used:
 12572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12582 ;;Total ram usage:        0 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:   17
 12585 ;; This function calls:
 12586 ;;		___aldiv
 12587 ;;		___aomod
 12588 ;;		___lmul
 12589 ;;		___month_to_secs
 12590 ;;		___year_to_secs
 12591 ;;		_days_in_month
 12592 ;; This function is called by:
 12593 ;;		___secs_to_zone
 12594 ;; This function uses a reentrant model
 12595 ;;
 12596                           
 12597                           	psect	text37
 12598  0172A8                     __ptext37:
 12599                           	opt callstack 0
 12600  0172A8                     _rule_to_secs:
 12601                           	opt callstack 0
 12602                           
 12603                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 12604  0172A8  0E1A               	movlw	26
 12605  0172AA  26E1               	addwf	fsr1l,f,c
 12606  0172AC  0E00               	movlw	0
 12607  0172AE  22E2               	addwfc	fsr1h,f,c
 12608                           
 12609                           ;stkvar	_is_leap @ sp[(-22)+12]
 12610                           
 12611                           ;incstack = 0
 12612  0172B0  0EF6               	movlw	246
 12613  0172B2  24E1               	addwf	fsr1l,w,c
 12614  0172B4  6E01               	movwf	btemp^0,c
 12615  0172B6  0EFF               	movlw	255
 12616  0172B8  20E2               	addwfc	fsr1h,w,c
 12617  0172BA  6E02               	movwf	(btemp+1)^0,c
 12618  0172BC  0060  F007  FFE6   	movff	btemp,postinc1
 12619  0172C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12620                           
 12621                           ;stkvar	_year @ sp[(-24)+-8]
 12622  0172C8  0EE0               	movlw	-32
 12623  0172CA  006F FF8C  F011    	movff	plusw1,btemp+16
 12624  0172D0  0EE1               	movlw	-31
 12625  0172D2  006F FF8C  F012    	movff	plusw1,btemp+17
 12626  0172D8  6A13               	clrf	(btemp+18)^0,c
 12627  0172DA  BE12               	btfsc	(btemp+17)^0,7,c
 12628  0172DC  6813               	setf	(btemp+18)^0,c
 12629  0172DE  0060  F04C  F014   	movff	btemp+18,btemp+19
 12630  0172E4  0060  F04C  F015   	movff	btemp+18,btemp+20
 12631  0172EA  0060  F04C  F016   	movff	btemp+18,btemp+21
 12632  0172F0  0060  F04C  F017   	movff	btemp+18,btemp+22
 12633  0172F6  0060  F04C  F018   	movff	btemp+18,btemp+23
 12634  0172FC  0060  F047  FFE6   	movff	btemp+16,postinc1
 12635  017302  0060  F04B  FFE6   	movff	btemp+17,postinc1
 12636  017308  0060  F04F  FFE6   	movff	btemp+18,postinc1
 12637  01730E  0060  F053  FFE6   	movff	btemp+19,postinc1
 12638  017314  0060  F057  FFE6   	movff	btemp+20,postinc1
 12639  01731A  0060  F05B  FFE6   	movff	btemp+21,postinc1
 12640  017320  0060  F05F  FFE6   	movff	btemp+22,postinc1
 12641  017326  0060  F063  FFE6   	movff	btemp+23,postinc1
 12642  01732C  EC57  F0A8         	call	___year_to_secs	;wreg free
 12643  017330  52E5               	movf	postdec1,f,c
 12644  017332  006F FF9C  F018    	movff	indf1,btemp+23
 12645  017338  52E5               	movf	postdec1,f,c
 12646  01733A  006F FF9C  F017    	movff	indf1,btemp+22
 12647  017340  52E5               	movf	postdec1,f,c
 12648  017342  006F FF9C  F016    	movff	indf1,btemp+21
 12649  017348  52E5               	movf	postdec1,f,c
 12650  01734A  006F FF9C  F015    	movff	indf1,btemp+20
 12651  017350  52E5               	movf	postdec1,f,c
 12652  017352  006F FF9C  F014    	movff	indf1,btemp+19
 12653  017358  52E5               	movf	postdec1,f,c
 12654  01735A  006F FF9C  F013    	movff	indf1,btemp+18
 12655  017360  52E5               	movf	postdec1,f,c
 12656  017362  006F FF9C  F012    	movff	indf1,btemp+17
 12657  017368  52E5               	movf	postdec1,f,c
 12658  01736A  006F FF9C  F011    	movff	indf1,btemp+16
 12659  017370  52E5               	movf	postdec1,f,c
 12660  017372  52E5               	movf	postdec1,f,c
 12661                           
 12662                           ;stkvar	_t @ sp[(-22)+4]
 12663  017374  0EEE               	movlw	-18
 12664  017376  0060  F047  FFE3   	movff	btemp+16,plusw1
 12665  01737C  0EEF               	movlw	-17
 12666  01737E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12667  017384  0EF0               	movlw	-16
 12668  017386  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12669  01738C  0EF1               	movlw	-15
 12670  01738E  0060  F053  FFE3   	movff	btemp+19,plusw1
 12671  017394  0EF2               	movlw	-14
 12672  017396  0060  F057  FFE3   	movff	btemp+20,plusw1
 12673  01739C  0EF3               	movlw	-13
 12674  01739E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12675  0173A4  0EF4               	movlw	-12
 12676  0173A6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12677  0173AC  0EF5               	movlw	-11
 12678  0173AE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12679                           
 12680                           ;stkvar	_rule @ sp[(-22)+-6]
 12681  0173B4  0EE4               	movlw	-28
 12682  0173B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12683  0173BC  0EE5               	movlw	-27
 12684  0173BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12685  0173C4  0E4D               	movlw	77
 12686  0173C6  18DE               	xorwf	postinc2,w,c
 12687  0173C8  10DE               	iorwf	postinc2,w,c
 12688  0173CA  B4D8               	btfsc	status,2,c
 12689  0173CC  D074               	goto	l16147
 12690                           
 12691                           ;stkvar	_rule @ sp[(-22)+-6]
 12692  0173CE  0EE4               	movlw	-28
 12693  0173D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12694  0173D6  0EE5               	movlw	-27
 12695  0173D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12696  0173DE  0E02               	movlw	2
 12697  0173E0  240B               	addwf	(btemp+10)^0,w,c
 12698  0173E2  6ED9               	movwf	fsr2l,c
 12699  0173E4  0E00               	movlw	0
 12700  0173E6  200C               	addwfc	(btemp+11)^0,w,c
 12701  0173E8  6EDA               	movwf	fsr2h,c
 12702  0173EA  006F FF78  F00B    	movff	postinc2,btemp+10
 12703  0173F0  006F FF74  F00C    	movff	postdec2,btemp+11
 12704                           
 12705                           ;stkvar	_x @ sp[(-22)+16]
 12706  0173F6  0EFA               	movlw	-6
 12707  0173F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12708  0173FE  0EFB               	movlw	-5
 12709  017400  0060  F033  FFE3   	movff	btemp+11,plusw1
 12710                           
 12711                           ;stkvar	_rule @ sp[(-22)+-6]
 12712  017406  0EE4               	movlw	-28
 12713  017408  006F FF8F FFD9     	movff	plusw1,fsr2l
 12714  01740E  0EE5               	movlw	-27
 12715  017410  006F FF8F FFDA     	movff	plusw1,fsr2h
 12716  017416  0E4A               	movlw	74
 12717  017418  18DE               	xorwf	postinc2,w,c
 12718  01741A  10DE               	iorwf	postinc2,w,c
 12719  01741C  A4D8               	btfss	status,2,c
 12720  01741E  D021               	goto	l16145
 12721                           
 12722                           ;stkvar	_x @ sp[(-22)+16]
 12723  017420  0EFB               	movlw	-5
 12724  017422  BEE3               	btfsc	plusw1,7,c
 12725  017424  D014               	goto	u15770
 12726  017426  0EFB               	movlw	-5
 12727  017428  50E3               	movf	plusw1,w,c
 12728  01742A  E108               	bnz	u15760
 12729  01742C  0EFA               	movlw	-6
 12730  01742E  006F FF8C  F001    	movff	plusw1,btemp
 12731  017434  0E3C               	movlw	60
 12732  017436  5E01               	subwf	btemp^0,f,c
 12733  017438  A0D8               	btfss	status,0,c
 12734  01743A  D009               	goto	u15770
 12735  01743C                     u15760:
 12736                           
 12737                           ;stkvar	_is_leap @ sp[(-22)+12]
 12738  01743C  0EF6               	movlw	-10
 12739  01743E  006F FF8C  F001    	movff	plusw1,btemp
 12740  017444  0EF7               	movlw	-9
 12741  017446  50E3               	movf	plusw1,w,c
 12742  017448  1001               	iorwf	btemp^0,w,c
 12743  01744A  A4D8               	btfss	status,2,c
 12744  01744C  D00A               	goto	l16145
 12745  01744E                     u15770:
 12746                           
 12747                           ;stkvar	_x @ sp[(-22)+16]
 12748  01744E  50E1               	movf	fsr1l,w,c
 12749  017450  0FFA               	addlw	-6
 12750  017452  6ED9               	movwf	fsr2l,c
 12751  017454  50E2               	movf	fsr1h,w,c
 12752  017456  6EDA               	movwf	fsr2h,c
 12753  017458  0EFF               	movlw	255
 12754  01745A  22DA               	addwfc	fsr2h,f,c
 12755  01745C  06DE               	decf	postinc2,f,c
 12756  01745E  0E00               	movlw	0
 12757  017460  5ADD               	subwfb	postdec2,f,c
 12758  017462                     l16145:
 12759  017462  0E80               	movlw	128
 12760  017464  6EE6               	movwf	postinc1,c
 12761  017466  0E51               	movlw	81
 12762  017468  6EE6               	movwf	postinc1,c
 12763  01746A  0E01               	movlw	1
 12764  01746C  6EE6               	movwf	postinc1,c
 12765  01746E  0E00               	movlw	0
 12766  017470  6EE6               	movwf	postinc1,c
 12767                           
 12768                           ;stkvar	_x @ sp[(-26)+16]
 12769  017472  0EF6               	movlw	-10
 12770  017474  006F FF8C  F00B    	movff	plusw1,btemp+10
 12771  01747A  0EF7               	movlw	-9
 12772  01747C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12773  017482  0060  F02C  F005   	movff	btemp+10,btemp+4
 12774  017488  0060  F030  F006   	movff	btemp+11,btemp+5
 12775  01748E  0E00               	movlw	0
 12776  017490  BE06               	btfsc	(btemp+5)^0,7,c
 12777  017492  0EFF               	movlw	255
 12778  017494  6E07               	movwf	(btemp+6)^0,c
 12779  017496  6E08               	movwf	(btemp+7)^0,c
 12780  017498  0060  F017  FFE6   	movff	btemp+4,postinc1
 12781  01749E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 12782  0174A4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 12783  0174AA  0060  F023  FFE6   	movff	btemp+7,postinc1
 12784  0174B0  EC07  F0FB         	call	___lmul	;wreg free
 12785  0174B4  D1EC               	goto	L9
 12786  0174B6                     l16147:
 12787                           
 12788                           ;stkvar	_rule @ sp[(-22)+-6]
 12789  0174B6  0EE4               	movlw	-28
 12790  0174B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12791  0174BE  0EE5               	movlw	-27
 12792  0174C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12793  0174C6  0E02               	movlw	2
 12794  0174C8  240B               	addwf	(btemp+10)^0,w,c
 12795  0174CA  6ED9               	movwf	fsr2l,c
 12796  0174CC  0E00               	movlw	0
 12797  0174CE  200C               	addwfc	(btemp+11)^0,w,c
 12798  0174D0  6EDA               	movwf	fsr2h,c
 12799  0174D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12800  0174D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12801                           
 12802                           ;stkvar	_m @ sp[(-22)+18]
 12803  0174DE  0EFC               	movlw	-4
 12804  0174E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12805  0174E6  0EFD               	movlw	-3
 12806  0174E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12807                           
 12808                           ;stkvar	_rule @ sp[(-22)+-6]
 12809  0174EE  0EE4               	movlw	-28
 12810  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 12811  0174F6  0EE5               	movlw	-27
 12812  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 12813  0174FE  0E04               	movlw	4
 12814  017500  240B               	addwf	(btemp+10)^0,w,c
 12815  017502  6ED9               	movwf	fsr2l,c
 12816  017504  0E00               	movlw	0
 12817  017506  200C               	addwfc	(btemp+11)^0,w,c
 12818  017508  6EDA               	movwf	fsr2h,c
 12819  01750A  006F FF78  F00B    	movff	postinc2,btemp+10
 12820  017510  006F FF74  F00C    	movff	postdec2,btemp+11
 12821                           
 12822                           ;stkvar	_n @ sp[(-22)+14]
 12823  017516  0EF8               	movlw	-8
 12824  017518  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12825  01751E  0EF9               	movlw	-7
 12826  017520  0060  F033  FFE3   	movff	btemp+11,plusw1
 12827                           
 12828                           ;stkvar	_rule @ sp[(-22)+-6]
 12829  017526  0EE4               	movlw	-28
 12830  017528  006F FF8C  F00B    	movff	plusw1,btemp+10
 12831  01752E  0EE5               	movlw	-27
 12832  017530  006F FF8C  F00C    	movff	plusw1,btemp+11
 12833  017536  0E06               	movlw	6
 12834  017538  240B               	addwf	(btemp+10)^0,w,c
 12835  01753A  6ED9               	movwf	fsr2l,c
 12836  01753C  0E00               	movlw	0
 12837  01753E  200C               	addwfc	(btemp+11)^0,w,c
 12838  017540  6EDA               	movwf	fsr2h,c
 12839  017542  006F FF78  F00B    	movff	postinc2,btemp+10
 12840  017548  006F FF74  F00C    	movff	postdec2,btemp+11
 12841                           
 12842                           ;stkvar	_d @ sp[(-22)+20]
 12843  01754E  0EFE               	movlw	-2
 12844  017550  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12845  017556  0EFF               	movlw	-1
 12846  017558  0060  F033  FFE3   	movff	btemp+11,plusw1
 12847                           
 12848                           ;stkvar	_is_leap @ sp[(-22)+12]
 12849  01755E  0EF6               	movlw	-10
 12850  017560  006F FF8F FFE6     	movff	plusw1,postinc1
 12851  017566  006F FF8F FFE6     	movff	plusw1,postinc1
 12852                           
 12853                           ;stkvar	_m @ sp[(-24)+18]
 12854  01756C  0EFA               	movlw	-6
 12855  01756E  50E3               	movf	plusw1,w,c
 12856  017570  0FFF               	addlw	255
 12857  017572  6E0B               	movwf	(btemp+10)^0,c
 12858  017574  0EFB               	movlw	-5
 12859  017576  006F FF8C  F00C    	movff	plusw1,btemp+11
 12860  01757C  0EFF               	movlw	255
 12861  01757E  220C               	addwfc	(btemp+11)^0,f,c
 12862  017580  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12863  017586  0060  F033  FFE6   	movff	btemp+11,postinc1
 12864  01758C  EC37  F0F9         	call	___month_to_secs	;wreg free
 12865  017590  0060  F004  F011   	movff	btemp,btemp+16
 12866  017596  0060  F008  F012   	movff	btemp+1,btemp+17
 12867  01759C  0060  F00C  F013   	movff	btemp+2,btemp+18
 12868  0175A2  0060  F010  F014   	movff	btemp+3,btemp+19
 12869  0175A8  6A15               	clrf	(btemp+20)^0,c
 12870  0175AA  BE14               	btfsc	(btemp+19)^0,7,c
 12871  0175AC  6815               	setf	(btemp+20)^0,c
 12872  0175AE  0060  F054  F016   	movff	btemp+20,btemp+21
 12873  0175B4  0060  F054  F017   	movff	btemp+20,btemp+22
 12874  0175BA  0060  F054  F018   	movff	btemp+20,btemp+23
 12875                           
 12876                           ;stkvar	_t @ sp[(-22)+4]
 12877  0175C0  50E1               	movf	fsr1l,w,c
 12878  0175C2  0FEE               	addlw	-18
 12879  0175C4  6ED9               	movwf	fsr2l,c
 12880  0175C6  50E2               	movf	fsr1h,w,c
 12881  0175C8  6EDA               	movwf	fsr2h,c
 12882  0175CA  0EFF               	movlw	255
 12883  0175CC  22DA               	addwfc	fsr2h,f,c
 12884  0175CE  5011               	movf	(btemp+16)^0,w,c
 12885  0175D0  26DE               	addwf	postinc2,f,c
 12886  0175D2  5012               	movf	(btemp+17)^0,w,c
 12887  0175D4  22DE               	addwfc	postinc2,f,c
 12888  0175D6  5013               	movf	(btemp+18)^0,w,c
 12889  0175D8  22DE               	addwfc	postinc2,f,c
 12890  0175DA  5014               	movf	(btemp+19)^0,w,c
 12891  0175DC  22DE               	addwfc	postinc2,f,c
 12892  0175DE  5015               	movf	(btemp+20)^0,w,c
 12893  0175E0  22DE               	addwfc	postinc2,f,c
 12894  0175E2  5016               	movf	(btemp+21)^0,w,c
 12895  0175E4  22DE               	addwfc	postinc2,f,c
 12896  0175E6  5017               	movf	(btemp+22)^0,w,c
 12897  0175E8  22DE               	addwfc	postinc2,f,c
 12898  0175EA  5018               	movf	(btemp+23)^0,w,c
 12899  0175EC  22DE               	addwfc	postinc2,f,c
 12900  0175EE  0E80               	movlw	128
 12901  0175F0  6EE6               	movwf	postinc1,c
 12902  0175F2  0E51               	movlw	81
 12903  0175F4  6EE6               	movwf	postinc1,c
 12904  0175F6  0E01               	movlw	1
 12905  0175F8  6EE6               	movwf	postinc1,c
 12906  0175FA  0E00               	movlw	0
 12907  0175FC  6EE6               	movwf	postinc1,c
 12908  0175FE  0E80               	movlw	128
 12909  017600  6EE6               	movwf	postinc1,c
 12910  017602  0E3A               	movlw	58
 12911  017604  6EE6               	movwf	postinc1,c
 12912  017606  0E09               	movlw	9
 12913  017608  6EE6               	movwf	postinc1,c
 12914  01760A  0E00               	movlw	0
 12915  01760C  6EE6               	movwf	postinc1,c
 12916  01760E  0E00               	movlw	0
 12917  017610  6EE6               	movwf	postinc1,c
 12918  017612  0E00               	movlw	0
 12919  017614  6EE6               	movwf	postinc1,c
 12920  017616  0E00               	movlw	0
 12921  017618  6EE6               	movwf	postinc1,c
 12922  01761A  0E00               	movlw	0
 12923  01761C  6EE6               	movwf	postinc1,c
 12924                           
 12925                           ;stkvar	_t @ sp[(-34)+4]
 12926  01761E  0EE2               	movlw	-30
 12927  017620  50E3               	movf	plusw1,w,c
 12928  017622  0F00               	addlw	0
 12929  017624  6E11               	movwf	(btemp+16)^0,c
 12930  017626  0EE3               	movlw	-29
 12931  017628  006F FF8C  F012    	movff	plusw1,btemp+17
 12932  01762E  0E46               	movlw	70
 12933  017630  2212               	addwfc	(btemp+17)^0,f,c
 12934  017632  0EE4               	movlw	-28
 12935  017634  006F FF8C  F013    	movff	plusw1,btemp+18
 12936  01763A  0E05               	movlw	5
 12937  01763C  2213               	addwfc	(btemp+18)^0,f,c
 12938  01763E  0EE5               	movlw	-27
 12939  017640  006F FF8C  F014    	movff	plusw1,btemp+19
 12940  017646  0E00               	movlw	0
 12941  017648  2214               	addwfc	(btemp+19)^0,f,c
 12942  01764A  0EE6               	movlw	-26
 12943  01764C  006F FF8C  F015    	movff	plusw1,btemp+20
 12944  017652  0E00               	movlw	0
 12945  017654  2215               	addwfc	(btemp+20)^0,f,c
 12946  017656  0EE7               	movlw	-25
 12947  017658  006F FF8C  F016    	movff	plusw1,btemp+21
 12948  01765E  0E00               	movlw	0
 12949  017660  2216               	addwfc	(btemp+21)^0,f,c
 12950  017662  0EE8               	movlw	-24
 12951  017664  006F FF8C  F017    	movff	plusw1,btemp+22
 12952  01766A  0E00               	movlw	0
 12953  01766C  2217               	addwfc	(btemp+22)^0,f,c
 12954  01766E  0EE9               	movlw	-23
 12955  017670  006F FF8C  F018    	movff	plusw1,btemp+23
 12956  017676  0E00               	movlw	0
 12957  017678  2218               	addwfc	(btemp+23)^0,f,c
 12958  01767A  0060  F047  FFE6   	movff	btemp+16,postinc1
 12959  017680  0060  F04B  FFE6   	movff	btemp+17,postinc1
 12960  017686  0060  F04F  FFE6   	movff	btemp+18,postinc1
 12961  01768C  0060  F053  FFE6   	movff	btemp+19,postinc1
 12962  017692  0060  F057  FFE6   	movff	btemp+20,postinc1
 12963  017698  0060  F05B  FFE6   	movff	btemp+21,postinc1
 12964  01769E  0060  F05F  FFE6   	movff	btemp+22,postinc1
 12965  0176A4  0060  F063  FFE6   	movff	btemp+23,postinc1
 12966  0176AA  ECE9  F0DE         	call	___aomod	;wreg free
 12967  0176AE  52E5               	movf	postdec1,f,c
 12968  0176B0  006F FF9C  F018    	movff	indf1,btemp+23
 12969  0176B6  52E5               	movf	postdec1,f,c
 12970  0176B8  006F FF9C  F017    	movff	indf1,btemp+22
 12971  0176BE  52E5               	movf	postdec1,f,c
 12972  0176C0  006F FF9C  F016    	movff	indf1,btemp+21
 12973  0176C6  52E5               	movf	postdec1,f,c
 12974  0176C8  006F FF9C  F015    	movff	indf1,btemp+20
 12975  0176CE  52E5               	movf	postdec1,f,c
 12976  0176D0  006F FF9C  F014    	movff	indf1,btemp+19
 12977  0176D6  52E5               	movf	postdec1,f,c
 12978  0176D8  006F FF9C  F013    	movff	indf1,btemp+18
 12979  0176DE  52E5               	movf	postdec1,f,c
 12980  0176E0  006F FF9C  F012    	movff	indf1,btemp+17
 12981  0176E6  52E5               	movf	postdec1,f,c
 12982  0176E8  006F FF9C  F011    	movff	indf1,btemp+16
 12983  0176EE  0EF8               	movlw	248
 12984  0176F0  26E1               	addwf	fsr1l,f,c
 12985  0176F2  0EFF               	movlw	255
 12986  0176F4  22E2               	addwfc	fsr1h,f,c
 12987  0176F6  0060  F044  F00B   	movff	btemp+16,btemp+10
 12988  0176FC  0060  F048  F00C   	movff	btemp+17,btemp+11
 12989  017702  0060  F02C  F005   	movff	btemp+10,btemp+4
 12990  017708  0060  F030  F006   	movff	btemp+11,btemp+5
 12991  01770E  0E00               	movlw	0
 12992  017710  BE06               	btfsc	(btemp+5)^0,7,c
 12993  017712  0EFF               	movlw	255
 12994  017714  6E07               	movwf	(btemp+6)^0,c
 12995  017716  6E08               	movwf	(btemp+7)^0,c
 12996  017718  0060  F017  FFE6   	movff	btemp+4,postinc1
 12997  01771E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 12998  017724  0060  F01F  FFE6   	movff	btemp+6,postinc1
 12999  01772A  0060  F023  FFE6   	movff	btemp+7,postinc1
 13000  017730  ECEB  F0E8         	call	___aldiv	;wreg free
 13001  017734  0060  F004  F00B   	movff	btemp,btemp+10
 13002  01773A  0060  F008  F00C   	movff	btemp+1,btemp+11
 13003                           
 13004                           ;stkvar	_wday @ sp[(-22)+2]
 13005  017740  0EEC               	movlw	-20
 13006  017742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13007  017748  0EED               	movlw	-19
 13008  01774A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13009                           
 13010                           ;stkvar	_wday @ sp[(-22)+2]
 13011                           ;stkvar	_d @ sp[(-22)+20]
 13012  017750  0EFE               	movlw	-2
 13013  017752  006F FF8C  F00B    	movff	plusw1,btemp+10
 13014  017758  0EFF               	movlw	-1
 13015  01775A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13016  017760  0EEC               	movlw	-20
 13017  017762  50E3               	movf	plusw1,w,c
 13018  017764  5E0B               	subwf	(btemp+10)^0,f,c
 13019  017766  0EED               	movlw	-19
 13020  017768  50E3               	movf	plusw1,w,c
 13021  01776A  5A0C               	subwfb	(btemp+11)^0,f,c
 13022                           
 13023                           ;stkvar	_days @ sp[(-22)+0]
 13024  01776C  0EEA               	movlw	-22
 13025  01776E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13026  017774  0EEB               	movlw	-21
 13027  017776  0060  F033  FFE3   	movff	btemp+11,plusw1
 13028                           
 13029                           ;stkvar	_days @ sp[(-22)+0]
 13030  01777C  0EEB               	movlw	-21
 13031  01777E  AEE3               	btfss	plusw1,7,c
 13032  017780  D011               	goto	l3994
 13033                           
 13034                           ;stkvar	_days @ sp[(-22)+0]
 13035  017782  0EEA               	movlw	-22
 13036  017784  50E3               	movf	plusw1,w,c
 13037  017786  0F07               	addlw	7
 13038  017788  6E01               	movwf	btemp^0,c
 13039  01778A  0EEA               	movlw	-22
 13040  01778C  0060  F007  FFE3   	movff	btemp,plusw1
 13041  017792  6A01               	clrf	btemp^0,c
 13042  017794  0EEB               	movlw	-21
 13043  017796  50E3               	movf	plusw1,w,c
 13044  017798  2001               	addwfc	btemp^0,w,c
 13045  01779A  6E01               	movwf	btemp^0,c
 13046  01779C  0EEB               	movlw	-21
 13047  01779E  0060  F007  FFE3   	movff	btemp,plusw1
 13048  0177A4                     l3994:
 13049                           
 13050                           ;stkvar	_n @ sp[(-22)+14]
 13051  0177A4  0EF8               	movlw	-8
 13052  0177A6  006F FF8C  F001    	movff	plusw1,btemp
 13053  0177AC  0E05               	movlw	5
 13054  0177AE  1801               	xorwf	btemp^0,w,c
 13055  0177B0  E134               	bnz	l16163
 13056  0177B2  0EF9               	movlw	-7
 13057  0177B4  50E3               	movf	plusw1,w,c
 13058  0177B6  A4D8               	btfss	status,2,c
 13059  0177B8  D030               	goto	l16163
 13060                           
 13061                           ;stkvar	_is_leap @ sp[(-22)+12]
 13062  0177BA  0EF6               	movlw	-10
 13063  0177BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13064  0177C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13065                           
 13066                           ;stkvar	_m @ sp[(-24)+18]
 13067  0177C8  0EFA               	movlw	-6
 13068  0177CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13069  0177D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13070  0177D6  ECF4  F005         	call	_days_in_month	;wreg free
 13071                           
 13072                           ;stkvar	_days @ sp[(-22)+0]
 13073  0177DA  0EEA               	movlw	-22
 13074  0177DC  50E3               	movf	plusw1,w,c
 13075  0177DE  0F1C               	addlw	28
 13076  0177E0  6E0B               	movwf	(btemp+10)^0,c
 13077  0177E2  0EEB               	movlw	-21
 13078  0177E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13079  0177EA  0E00               	movlw	0
 13080  0177EC  220C               	addwfc	(btemp+11)^0,f,c
 13081  0177EE  5001               	movf	btemp^0,w,c
 13082  0177F0  5C0B               	subwf	(btemp+10)^0,w,c
 13083  0177F2  500C               	movf	(btemp+11)^0,w,c
 13084  0177F4  0A80               	xorlw	128
 13085  0177F6  6E03               	movwf	(btemp+2)^0,c
 13086  0177F8  5002               	movf	(btemp+1)^0,w,c
 13087  0177FA  0A80               	xorlw	128
 13088  0177FC  5803               	subwfb	(btemp+2)^0,w,c
 13089  0177FE  A0D8               	btfss	status,0,c
 13090  017800  D00C               	goto	l16163
 13091  017802  0E04               	movlw	4
 13092  017804  6E0B               	movwf	(btemp+10)^0,c
 13093  017806  0E00               	movlw	0
 13094  017808  6E0C               	movwf	(btemp+11)^0,c
 13095                           
 13096                           ;stkvar	_n @ sp[(-22)+14]
 13097  01780A  0EF8               	movlw	-8
 13098  01780C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13099  017812  0EF9               	movlw	-7
 13100  017814  0060  F033  FFE3   	movff	btemp+11,plusw1
 13101  01781A                     l16163:
 13102  01781A  0E80               	movlw	128
 13103  01781C  6EE6               	movwf	postinc1,c
 13104  01781E  0E51               	movlw	81
 13105  017820  6EE6               	movwf	postinc1,c
 13106  017822  0E01               	movlw	1
 13107  017824  6EE6               	movwf	postinc1,c
 13108  017826  0E00               	movlw	0
 13109  017828  6EE6               	movwf	postinc1,c
 13110                           
 13111                           ;stkvar	_days @ sp[(-26)+0]
 13112                           ;stkvar	_n @ sp[(-26)+14]
 13113  01782A  0EF4               	movlw	-12
 13114  01782C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13115  017832  0EF5               	movlw	-11
 13116  017834  006F FF8C  F00C    	movff	plusw1,btemp+11
 13117  01783A  0E07               	movlw	7
 13118  01783C  020B               	mulwf	(btemp+10)^0,c
 13119  01783E  006F FFCC  F009    	movff	prodl,btemp+8
 13120  017844  006F FFD0  F00A    	movff	prodh,btemp+9
 13121  01784A  020C               	mulwf	(btemp+11)^0,c
 13122  01784C  50F3               	movf	prodl,w,c
 13123  01784E  260A               	addwf	(btemp+9)^0,f,c
 13124  017850  0EE6               	movlw	-26
 13125  017852  50E3               	movf	plusw1,w,c
 13126  017854  2609               	addwf	(btemp+8)^0,f,c
 13127  017856  0EE7               	movlw	-25
 13128  017858  50E3               	movf	plusw1,w,c
 13129  01785A  220A               	addwfc	(btemp+9)^0,f,c
 13130  01785C  0EF9               	movlw	249
 13131  01785E  2409               	addwf	(btemp+8)^0,w,c
 13132  017860  6E05               	movwf	(btemp+4)^0,c
 13133  017862  0EFF               	movlw	255
 13134  017864  200A               	addwfc	(btemp+9)^0,w,c
 13135  017866  6E06               	movwf	(btemp+5)^0,c
 13136  017868  6A07               	clrf	(btemp+6)^0,c
 13137  01786A  BE06               	btfsc	(btemp+5)^0,7,c
 13138  01786C  0607               	decf	(btemp+6)^0,f,c
 13139  01786E  5007               	movf	(btemp+6)^0,w,c
 13140  017870  6E08               	movwf	(btemp+7)^0,c
 13141  017872  0060  F017  FFE6   	movff	btemp+4,postinc1
 13142  017878  0060  F01B  FFE6   	movff	btemp+5,postinc1
 13143  01787E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 13144  017884  0060  F023  FFE6   	movff	btemp+7,postinc1
 13145  01788A  EC07  F0FB         	call	___lmul	;wreg free
 13146  01788E                     L9:
 13147  01788E  0060  F004  F011   	movff	btemp,btemp+16
 13148  017894  0060  F008  F012   	movff	btemp+1,btemp+17
 13149  01789A  0060  F00C  F013   	movff	btemp+2,btemp+18
 13150  0178A0  0060  F010  F014   	movff	btemp+3,btemp+19
 13151  0178A6  6A15               	clrf	(btemp+20)^0,c
 13152  0178A8  BE14               	btfsc	(btemp+19)^0,7,c
 13153  0178AA  6815               	setf	(btemp+20)^0,c
 13154  0178AC  0060  F054  F016   	movff	btemp+20,btemp+21
 13155  0178B2  0060  F054  F017   	movff	btemp+20,btemp+22
 13156  0178B8  0060  F054  F018   	movff	btemp+20,btemp+23
 13157                           
 13158                           ;stkvar	_t @ sp[(-22)+4]
 13159  0178BE  50E1               	movf	fsr1l,w,c
 13160  0178C0  0FEE               	addlw	-18
 13161  0178C2  6ED9               	movwf	fsr2l,c
 13162  0178C4  50E2               	movf	fsr1h,w,c
 13163  0178C6  6EDA               	movwf	fsr2h,c
 13164  0178C8  0EFF               	movlw	255
 13165  0178CA  22DA               	addwfc	fsr2h,f,c
 13166  0178CC  5011               	movf	(btemp+16)^0,w,c
 13167  0178CE  26DE               	addwf	postinc2,f,c
 13168  0178D0  5012               	movf	(btemp+17)^0,w,c
 13169  0178D2  22DE               	addwfc	postinc2,f,c
 13170  0178D4  5013               	movf	(btemp+18)^0,w,c
 13171  0178D6  22DE               	addwfc	postinc2,f,c
 13172  0178D8  5014               	movf	(btemp+19)^0,w,c
 13173  0178DA  22DE               	addwfc	postinc2,f,c
 13174  0178DC  5015               	movf	(btemp+20)^0,w,c
 13175  0178DE  22DE               	addwfc	postinc2,f,c
 13176  0178E0  5016               	movf	(btemp+21)^0,w,c
 13177  0178E2  22DE               	addwfc	postinc2,f,c
 13178  0178E4  5017               	movf	(btemp+22)^0,w,c
 13179  0178E6  22DE               	addwfc	postinc2,f,c
 13180  0178E8  5018               	movf	(btemp+23)^0,w,c
 13181  0178EA  22DE               	addwfc	postinc2,f,c
 13182                           
 13183                           ;stkvar	_rule @ sp[(-22)+-6]
 13184  0178EC  0EE4               	movlw	-28
 13185  0178EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13186  0178F4  0EE5               	movlw	-27
 13187  0178F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13188  0178FC  0E08               	movlw	8
 13189  0178FE  240B               	addwf	(btemp+10)^0,w,c
 13190  017900  6ED9               	movwf	fsr2l,c
 13191  017902  0E00               	movlw	0
 13192  017904  200C               	addwfc	(btemp+11)^0,w,c
 13193  017906  6EDA               	movwf	fsr2h,c
 13194  017908  006F FF78  F00B    	movff	postinc2,btemp+10
 13195  01790E  006F FF74  F00C    	movff	postdec2,btemp+11
 13196                           
 13197                           ;stkvar	_t @ sp[(-22)+4]
 13198  017914  50E1               	movf	fsr1l,w,c
 13199  017916  0FEE               	addlw	-18
 13200  017918  6ED9               	movwf	fsr2l,c
 13201  01791A  50E2               	movf	fsr1h,w,c
 13202  01791C  6EDA               	movwf	fsr2h,c
 13203  01791E  0EFF               	movlw	255
 13204  017920  22DA               	addwfc	fsr2h,f,c
 13205  017922  500B               	movf	(btemp+10)^0,w,c
 13206  017924  26DE               	addwf	postinc2,f,c
 13207  017926  500C               	movf	(btemp+11)^0,w,c
 13208  017928  22DE               	addwfc	postinc2,f,c
 13209  01792A  0E00               	movlw	0
 13210  01792C  BE0C               	btfsc	(btemp+11)^0,7,c
 13211  01792E  0EFF               	movlw	255
 13212  017930  22DE               	addwfc	postinc2,f,c
 13213  017932  22DE               	addwfc	postinc2,f,c
 13214  017934  22DE               	addwfc	postinc2,f,c
 13215  017936  22DE               	addwfc	postinc2,f,c
 13216  017938  22DE               	addwfc	postinc2,f,c
 13217  01793A  22DE               	addwfc	postinc2,f,c
 13218                           
 13219                           ;stkvar	_t @ sp[(-22)+4]
 13220  01793C  0EEE               	movlw	238
 13221  01793E  24E1               	addwf	fsr1l,w,c
 13222  017940  6ED9               	movwf	fsr2l,c
 13223  017942  0EFF               	movlw	255
 13224  017944  20E2               	addwfc	fsr1h,w,c
 13225  017946  6EDA               	movwf	fsr2h,c
 13226                           
 13227                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13228  017948  0E08               	movlw	8
 13229  01794A  6E01               	movwf	btemp^0,c
 13230  01794C  0EE2               	movlw	-30
 13231  01794E                     us1581999:
 13232  01794E  006F FF7B FFE3     	movff	postinc2,plusw1
 13233  017954  28E8               	incf	wreg,w,c
 13234  017956  2E01               	decfsz	btemp^0,f,c
 13235  017958  D7FA               	bra	us1581999
 13236                           
 13237                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13238  01795A  0EEA               	movlw	234
 13239  01795C  26E1               	addwf	fsr1l,f,c
 13240  01795E  0EFF               	movlw	255
 13241  017960  22E2               	addwfc	fsr1h,f,c
 13242  017962  0012               	return		;funcret
 13243  017964                     __end_of_rule_to_secs:
 13244                           	opt callstack 0
 13245                           
 13246 ;; *************** function _days_in_month *****************
 13247 ;; Defined at:
 13248 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  m               2  [STACK] int 
 13251 ;;  is_leap         2  [STACK] int 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  2  [STACK] int 
 13256 ;; Registers used:
 13257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:   15
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_rule_to_secs
 13274 ;; This function uses a reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text38
 13278  000BE8                     __ptext38:
 13279                           	opt callstack 0
 13280  000BE8                     _days_in_month:
 13281                           	opt callstack 10
 13282                           
 13283                           ;stkvar	_m @ sp[(0)+-2]
 13284                           
 13285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13286                           ;incstack = 0
 13287  000BE8  0EFE               	movlw	-2
 13288  000BEA  006F FF8C  F001    	movff	plusw1,btemp
 13289  000BF0  0E02               	movlw	2
 13290  000BF2  1801               	xorwf	btemp^0,w,c
 13291  000BF4  E10D               	bnz	l11539
 13292  000BF6  0EFF               	movlw	-1
 13293  000BF8  50E3               	movf	plusw1,w,c
 13294  000BFA  A4D8               	btfss	status,2,c
 13295  000BFC  D009               	goto	l11539
 13296                           
 13297                           ;stkvar	_is_leap @ sp[(0)+-4]
 13298  000BFE  0EFC               	movlw	-4
 13299  000C00  50E3               	movf	plusw1,w,c
 13300  000C02  0F1C               	addlw	28
 13301  000C04  6E01               	movwf	btemp^0,c
 13302  000C06  0EFD               	movlw	-3
 13303  000C08  006F FF8C  F002    	movff	plusw1,btemp+1
 13304  000C0E  D017               	goto	L10
 13305  000C10                     l11539:
 13306  000C10  0EFF               	movlw	255
 13307  000C12  6E0C               	movwf	(btemp+11)^0,c
 13308                           
 13309                           ;stkvar	_m @ sp[(0)+-2]
 13310  000C14  0EFE               	movlw	-2
 13311  000C16  50E3               	movf	plusw1,w,c
 13312  000C18  240C               	addwf	(btemp+11)^0,w,c
 13313  000C1A  6E0B               	movwf	(btemp+10)^0,c
 13314  000C1C  0ED5               	movlw	213
 13315  000C1E  6E01               	movwf	btemp^0,c
 13316  000C20  0E0A               	movlw	10
 13317  000C22  6E02               	movwf	(btemp+1)^0,c
 13318  000C24  2A0B               	incf	(btemp+10)^0,f,c
 13319  000C26  D003               	goto	u10644
 13320  000C28                     u10645:
 13321  000C28  3402               	rlcf	(btemp+1)^0,w,c
 13322  000C2A  3202               	rrcf	(btemp+1)^0,f,c
 13323  000C2C  3201               	rrcf	btemp^0,f,c
 13324  000C2E                     u10644:
 13325  000C2E  2E0B               	decfsz	(btemp+10)^0,f,c
 13326  000C30  D7FB               	goto	u10645
 13327  000C32  0E01               	movlw	1
 13328  000C34  1601               	andwf	btemp^0,f,c
 13329  000C36  0E00               	movlw	0
 13330  000C38  1602               	andwf	(btemp+1)^0,f,c
 13331  000C3A  0E1E               	movlw	30
 13332  000C3C  2601               	addwf	btemp^0,f,c
 13333  000C3E                     L10:
 13334  000C3E  0E00               	movlw	0
 13335  000C40  2202               	addwfc	(btemp+1)^0,f,c
 13336                           
 13337                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13338  000C42  52E5               	movf	postdec1,f,c
 13339  000C44  52E5               	movf	postdec1,f,c
 13340  000C46  52E5               	movf	postdec1,f,c
 13341  000C48  52E5               	movf	postdec1,f,c
 13342  000C4A  0012               	return		;funcret
 13343  000C4C                     __end_of_days_in_month:
 13344                           	opt callstack 0
 13345                           
 13346 ;; *************** function ___year_to_secs *****************
 13347 ;; Defined at:
 13348 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 13349 ;; Parameters:    Size  Location     Type
 13350 ;;  year            8  [STACK] long long 
 13351 ;;  is_leap         2  [STACK] PTR int 
 13352 ;;		 -> F5(2), is_leap(2), NULL(0), 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;  y               2  [STACK] int 
 13355 ;;  leaps           2  [STACK] int 
 13356 ;;  rem             2  [STACK] int 
 13357 ;;  5               2  [STACK] int 
 13358 ;;  centuries       2  [STACK] int 
 13359 ;;  leaps           2  [STACK] int 
 13360 ;;  cycles          2  [STACK] int 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  8  [STACK] long long 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;Total ram usage:        0 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:   16
 13377 ;; This function calls:
 13378 ;;		___aodiv
 13379 ;;		___aomod
 13380 ;;		___lmul
 13381 ;;		___omul
 13382 ;; This function is called by:
 13383 ;;		_rule_to_secs
 13384 ;;		___secs_to_zone
 13385 ;; This function uses a reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text39
 13389  0150AE                     __ptext39:
 13390                           	opt callstack 0
 13391  0150AE                     ___year_to_secs:
 13392                           	opt callstack 0
 13393                           
 13394                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 13395  0150AE  0E0E               	movlw	14
 13396  0150B0  26E1               	addwf	fsr1l,f,c
 13397  0150B2  0E00               	movlw	0
 13398  0150B4  22E2               	addwfc	fsr1h,f,c
 13399                           
 13400                           ;stkvar	_year @ sp[(-14)+-8]
 13401                           
 13402                           ;incstack = 0
 13403  0150B6  0EEA               	movlw	-22
 13404  0150B8  50E3               	movf	plusw1,w,c
 13405  0150BA  0FFE               	addlw	254
 13406  0150BC  6E11               	movwf	(btemp+16)^0,c
 13407  0150BE  0EEB               	movlw	-21
 13408  0150C0  006F FF8C  F012    	movff	plusw1,btemp+17
 13409  0150C6  0EFF               	movlw	255
 13410  0150C8  2212               	addwfc	(btemp+17)^0,f,c
 13411  0150CA  0EEC               	movlw	-20
 13412  0150CC  006F FF8C  F013    	movff	plusw1,btemp+18
 13413  0150D2  0EFF               	movlw	255
 13414  0150D4  2213               	addwfc	(btemp+18)^0,f,c
 13415  0150D6  0EED               	movlw	-19
 13416  0150D8  006F FF8C  F014    	movff	plusw1,btemp+19
 13417  0150DE  0EFF               	movlw	255
 13418  0150E0  2214               	addwfc	(btemp+19)^0,f,c
 13419  0150E2  0EEE               	movlw	-18
 13420  0150E4  006F FF8C  F015    	movff	plusw1,btemp+20
 13421  0150EA  0EFF               	movlw	255
 13422  0150EC  2215               	addwfc	(btemp+20)^0,f,c
 13423  0150EE  0EEF               	movlw	-17
 13424  0150F0  006F FF8C  F016    	movff	plusw1,btemp+21
 13425  0150F6  0EFF               	movlw	255
 13426  0150F8  2216               	addwfc	(btemp+21)^0,f,c
 13427  0150FA  0EF0               	movlw	-16
 13428  0150FC  006F FF8C  F017    	movff	plusw1,btemp+22
 13429  015102  0EFF               	movlw	255
 13430  015104  2217               	addwfc	(btemp+22)^0,f,c
 13431  015106  0EF1               	movlw	-15
 13432  015108  006F FF8C  F018    	movff	plusw1,btemp+23
 13433  01510E  0EFF               	movlw	255
 13434  015110  2218               	addwfc	(btemp+23)^0,f,c
 13435  015112  5018               	movf	(btemp+23)^0,w,c
 13436  015114  1017               	iorwf	(btemp+22)^0,w,c
 13437  015116  1016               	iorwf	(btemp+21)^0,w,c
 13438  015118  1015               	iorwf	(btemp+20)^0,w,c
 13439  01511A  1014               	iorwf	(btemp+19)^0,w,c
 13440  01511C  1013               	iorwf	(btemp+18)^0,w,c
 13441  01511E  1012               	iorwf	(btemp+17)^0,w,c
 13442  015120  E103               	bnz	u10651
 13443  015122  0E89               	movlw	137
 13444  015124  5C11               	subwf	(btemp+16)^0,w,c
 13445  015126  B0D8               	btfsc	status,0,c
 13446  015128                     u10651:
 13447  015128  D0E7               	goto	l11565
 13448                           
 13449                           ;stkvar	_year @ sp[(-14)+-8]
 13450                           ;stkvar	_y @ sp[(-14)+0]
 13451  01512A  0EEA               	movlw	-22
 13452  01512C  006F FF8C  F001    	movff	plusw1,btemp
 13453  015132  0EF2               	movlw	-14
 13454  015134  0060  F007  FFE3   	movff	btemp,plusw1
 13455  01513A  0EEB               	movlw	-21
 13456  01513C  006F FF8C  F001    	movff	plusw1,btemp
 13457  015142  0EF3               	movlw	-13
 13458  015144  0060  F007  FFE3   	movff	btemp,plusw1
 13459                           
 13460                           ;stkvar	_y @ sp[(-14)+0]
 13461  01514A  0EF2               	movlw	-14
 13462  01514C  50E3               	movf	plusw1,w,c
 13463  01514E  0FBC               	addlw	188
 13464  015150  6E0B               	movwf	(btemp+10)^0,c
 13465  015152  0EF3               	movlw	-13
 13466  015154  006F FF8C  F00C    	movff	plusw1,btemp+11
 13467  01515A  0EFF               	movlw	255
 13468  01515C  220C               	addwfc	(btemp+11)^0,f,c
 13469  01515E  340C               	rlcf	(btemp+11)^0,w,c
 13470  015160  320C               	rrcf	(btemp+11)^0,f,c
 13471  015162  320B               	rrcf	(btemp+10)^0,f,c
 13472  015164  340C               	rlcf	(btemp+11)^0,w,c
 13473  015166  320C               	rrcf	(btemp+11)^0,f,c
 13474  015168  320B               	rrcf	(btemp+10)^0,f,c
 13475                           
 13476                           ;stkvar	_leaps @ sp[(-14)+2]
 13477  01516A  0EF4               	movlw	-12
 13478  01516C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13479  015172  0EF5               	movlw	-11
 13480  015174  0060  F033  FFE3   	movff	btemp+11,plusw1
 13481  01517A  0EBC               	movlw	188
 13482  01517C  6E0C               	movwf	(btemp+11)^0,c
 13483                           
 13484                           ;stkvar	_y @ sp[(-14)+0]
 13485  01517E  0EF2               	movlw	-14
 13486  015180  50E3               	movf	plusw1,w,c
 13487  015182  240C               	addwf	(btemp+11)^0,w,c
 13488  015184  6E0B               	movwf	(btemp+10)^0,c
 13489  015186  0E03               	movlw	3
 13490  015188  160B               	andwf	(btemp+10)^0,f,c
 13491  01518A  A4D8               	btfss	status,2,c
 13492  01518C  D01D               	goto	l11557
 13493                           
 13494                           ;stkvar	_leaps @ sp[(-14)+2]
 13495  01518E  50E1               	movf	fsr1l,w,c
 13496  015190  0FF4               	addlw	-12
 13497  015192  6ED9               	movwf	fsr2l,c
 13498  015194  50E2               	movf	fsr1h,w,c
 13499  015196  6EDA               	movwf	fsr2h,c
 13500  015198  0EFF               	movlw	255
 13501  01519A  22DA               	addwfc	fsr2h,f,c
 13502  01519C  06DE               	decf	postinc2,f,c
 13503  01519E  0E00               	movlw	0
 13504  0151A0  5ADD               	subwfb	postdec2,f,c
 13505                           
 13506                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13507  0151A2  0EE8               	movlw	-24
 13508  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 13509  0151AA  0EE9               	movlw	-23
 13510  0151AC  50E3               	movf	plusw1,w,c
 13511  0151AE  1001               	iorwf	btemp^0,w,c
 13512  0151B0  B4D8               	btfsc	status,2,c
 13513  0151B2  D01F               	goto	l11561
 13514                           
 13515                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13516  0151B4  0EE8               	movlw	-24
 13517  0151B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13518  0151BC  0EE9               	movlw	-23
 13519  0151BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13520  0151C4  0E01               	movlw	1
 13521  0151C6  D012               	goto	L11
 13522  0151C8                     l11557:
 13523                           
 13524                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13525  0151C8  0EE8               	movlw	-24
 13526  0151CA  006F FF8C  F001    	movff	plusw1,btemp
 13527  0151D0  0EE9               	movlw	-23
 13528  0151D2  50E3               	movf	plusw1,w,c
 13529  0151D4  1001               	iorwf	btemp^0,w,c
 13530  0151D6  B4D8               	btfsc	status,2,c
 13531  0151D8  D00C               	goto	l11561
 13532                           
 13533                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13534  0151DA  0EE8               	movlw	-24
 13535  0151DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13536  0151E2  0EE9               	movlw	-23
 13537  0151E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13538  0151EA  0E00               	movlw	0
 13539  0151EC                     L11:
 13540  0151EC  6EDE               	movwf	postinc2,c
 13541  0151EE  0E00               	movlw	0
 13542  0151F0  6EDD               	movwf	postdec2,c
 13543  0151F2                     l11561:
 13544  0151F2  0E80               	movlw	128
 13545  0151F4  6EE6               	movwf	postinc1,c
 13546  0151F6  0E33               	movlw	51
 13547  0151F8  6EE6               	movwf	postinc1,c
 13548  0151FA  0EE1               	movlw	225
 13549  0151FC  6EE6               	movwf	postinc1,c
 13550  0151FE  0E01               	movlw	1
 13551  015200  6EE6               	movwf	postinc1,c
 13552                           
 13553                           ;stkvar	_y @ sp[(-18)+0]
 13554  015202  0EEE               	movlw	-18
 13555  015204  006F FF8C  F00B    	movff	plusw1,btemp+10
 13556  01520A  0EEF               	movlw	-17
 13557  01520C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13558  015212  0EBA               	movlw	186
 13559  015214  240B               	addwf	(btemp+10)^0,w,c
 13560  015216  6E05               	movwf	(btemp+4)^0,c
 13561  015218  0EFF               	movlw	255
 13562  01521A  200C               	addwfc	(btemp+11)^0,w,c
 13563  01521C  6E06               	movwf	(btemp+5)^0,c
 13564  01521E  6A07               	clrf	(btemp+6)^0,c
 13565  015220  BE06               	btfsc	(btemp+5)^0,7,c
 13566  015222  0607               	decf	(btemp+6)^0,f,c
 13567  015224  5007               	movf	(btemp+6)^0,w,c
 13568  015226  6E08               	movwf	(btemp+7)^0,c
 13569  015228  0060  F017  FFE6   	movff	btemp+4,postinc1
 13570  01522E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 13571  015234  0060  F01F  FFE6   	movff	btemp+6,postinc1
 13572  01523A  0060  F023  FFE6   	movff	btemp+7,postinc1
 13573  015240  EC07  F0FB         	call	___lmul	;wreg free
 13574  015244  0060  F004  F009   	movff	btemp,btemp+8
 13575  01524A  0060  F008  F00A   	movff	btemp+1,btemp+9
 13576  015250  0060  F00C  F00B   	movff	btemp+2,btemp+10
 13577  015256  0060  F010  F00C   	movff	btemp+3,btemp+11
 13578  01525C  0E80               	movlw	128
 13579  01525E  6EE6               	movwf	postinc1,c
 13580  015260  0E51               	movlw	81
 13581  015262  6EE6               	movwf	postinc1,c
 13582  015264  0E01               	movlw	1
 13583  015266  6EE6               	movwf	postinc1,c
 13584  015268  0E00               	movlw	0
 13585  01526A  6EE6               	movwf	postinc1,c
 13586                           
 13587                           ;stkvar	_leaps @ sp[(-18)+2]
 13588  01526C  0EF0               	movlw	-16
 13589  01526E  006F FF8C  F007    	movff	plusw1,btemp+6
 13590  015274  0EF1               	movlw	-15
 13591  015276  006F FF8C  F008    	movff	plusw1,btemp+7
 13592  01527C  0060  F01C  F001   	movff	btemp+6,btemp
 13593  015282  0060  F020  F002   	movff	btemp+7,btemp+1
 13594  015288  0E00               	movlw	0
 13595  01528A  BE02               	btfsc	(btemp+1)^0,7,c
 13596  01528C  0EFF               	movlw	255
 13597  01528E  6E03               	movwf	(btemp+2)^0,c
 13598  015290  6E04               	movwf	(btemp+3)^0,c
 13599  015292  0060  F007  FFE6   	movff	btemp,postinc1
 13600  015298  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13601  01529E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13602  0152A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 13603  0152AA  EC07  F0FB         	call	___lmul	;wreg free
 13604  0152AE  5001               	movf	btemp^0,w,c
 13605  0152B0  2409               	addwf	(btemp+8)^0,w,c
 13606  0152B2  6E05               	movwf	(btemp+4)^0,c
 13607  0152B4  5002               	movf	(btemp+1)^0,w,c
 13608  0152B6  200A               	addwfc	(btemp+9)^0,w,c
 13609  0152B8  6E06               	movwf	(btemp+5)^0,c
 13610  0152BA  5003               	movf	(btemp+2)^0,w,c
 13611  0152BC  200B               	addwfc	(btemp+10)^0,w,c
 13612  0152BE  6E07               	movwf	(btemp+6)^0,c
 13613  0152C0  5004               	movf	(btemp+3)^0,w,c
 13614  0152C2  200C               	addwfc	(btemp+11)^0,w,c
 13615  0152C4  6E08               	movwf	(btemp+7)^0,c
 13616  0152C6  0060  F014  F011   	movff	btemp+4,btemp+16
 13617  0152CC  0060  F018  F012   	movff	btemp+5,btemp+17
 13618  0152D2  0060  F01C  F013   	movff	btemp+6,btemp+18
 13619  0152D8  0060  F020  F014   	movff	btemp+7,btemp+19
 13620  0152DE  6A15               	clrf	(btemp+20)^0,c
 13621  0152E0  BE14               	btfsc	(btemp+19)^0,7,c
 13622  0152E2  6815               	setf	(btemp+20)^0,c
 13623  0152E4  0060  F054  F016   	movff	btemp+20,btemp+21
 13624  0152EA  0060  F054  F017   	movff	btemp+20,btemp+22
 13625  0152F0  0060  F054  F018   	movff	btemp+20,btemp+23
 13626  0152F6  D36F               	goto	L12
 13627  0152F8                     l11565:
 13628                           
 13629                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13630  0152F8  0EE8               	movlw	-24
 13631  0152FA  006F FF8C  F001    	movff	plusw1,btemp
 13632  015300  0EE9               	movlw	-23
 13633  015302  50E3               	movf	plusw1,w,c
 13634  015304  1001               	iorwf	btemp^0,w,c
 13635  015306  A4D8               	btfss	status,2,c
 13636  015308  D012               	goto	l11571
 13637                           
 13638                           ;stkvar	F5 @ sp[(-14)+6]
 13639  01530A  0EF8               	movlw	-8
 13640  01530C  6AE3               	clrf	plusw1,c
 13641  01530E  0EF9               	movlw	-7
 13642  015310  6AE3               	clrf	plusw1,c
 13643                           
 13644                           ;stkvar	F5 @ sp[(-14)+6]
 13645  015312  0EF8               	movlw	248
 13646  015314  24E1               	addwf	fsr1l,w,c
 13647  015316  6E0B               	movwf	(btemp+10)^0,c
 13648  015318  0EFF               	movlw	255
 13649  01531A  20E2               	addwfc	fsr1h,w,c
 13650  01531C  6E0C               	movwf	(btemp+11)^0,c
 13651                           
 13652                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13653  01531E  0EE9               	movlw	-23
 13654  015320  0060  F033  FFE3   	movff	btemp+11,plusw1
 13655  015326  0EE8               	movlw	-24
 13656  015328  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13657  01532E                     l11571:
 13658  01532E  0E90               	movlw	144
 13659  015330  6EE6               	movwf	postinc1,c
 13660  015332  0E01               	movlw	1
 13661  015334  6EE6               	movwf	postinc1,c
 13662  015336  0E00               	movlw	0
 13663  015338  6EE6               	movwf	postinc1,c
 13664  01533A  0E00               	movlw	0
 13665  01533C  6EE6               	movwf	postinc1,c
 13666  01533E  0E00               	movlw	0
 13667  015340  6EE6               	movwf	postinc1,c
 13668  015342  0E00               	movlw	0
 13669  015344  6EE6               	movwf	postinc1,c
 13670  015346  0E00               	movlw	0
 13671  015348  6EE6               	movwf	postinc1,c
 13672  01534A  0E00               	movlw	0
 13673  01534C  6EE6               	movwf	postinc1,c
 13674                           
 13675                           ;stkvar	_year @ sp[(-22)+-8]
 13676  01534E  0EE2               	movlw	-30
 13677  015350  50E3               	movf	plusw1,w,c
 13678  015352  0F9C               	addlw	156
 13679  015354  6E11               	movwf	(btemp+16)^0,c
 13680  015356  0EE3               	movlw	-29
 13681  015358  006F FF8C  F012    	movff	plusw1,btemp+17
 13682  01535E  0EFF               	movlw	255
 13683  015360  2212               	addwfc	(btemp+17)^0,f,c
 13684  015362  0EE4               	movlw	-28
 13685  015364  006F FF8C  F013    	movff	plusw1,btemp+18
 13686  01536A  0EFF               	movlw	255
 13687  01536C  2213               	addwfc	(btemp+18)^0,f,c
 13688  01536E  0EE5               	movlw	-27
 13689  015370  006F FF8C  F014    	movff	plusw1,btemp+19
 13690  015376  0EFF               	movlw	255
 13691  015378  2214               	addwfc	(btemp+19)^0,f,c
 13692  01537A  0EE6               	movlw	-26
 13693  01537C  006F FF8C  F015    	movff	plusw1,btemp+20
 13694  015382  0EFF               	movlw	255
 13695  015384  2215               	addwfc	(btemp+20)^0,f,c
 13696  015386  0EE7               	movlw	-25
 13697  015388  006F FF8C  F016    	movff	plusw1,btemp+21
 13698  01538E  0EFF               	movlw	255
 13699  015390  2216               	addwfc	(btemp+21)^0,f,c
 13700  015392  0EE8               	movlw	-24
 13701  015394  006F FF8C  F017    	movff	plusw1,btemp+22
 13702  01539A  0EFF               	movlw	255
 13703  01539C  2217               	addwfc	(btemp+22)^0,f,c
 13704  01539E  0EE9               	movlw	-23
 13705  0153A0  006F FF8C  F018    	movff	plusw1,btemp+23
 13706  0153A6  0EFF               	movlw	255
 13707  0153A8  2218               	addwfc	(btemp+23)^0,f,c
 13708  0153AA  0060  F047  FFE6   	movff	btemp+16,postinc1
 13709  0153B0  0060  F04B  FFE6   	movff	btemp+17,postinc1
 13710  0153B6  0060  F04F  FFE6   	movff	btemp+18,postinc1
 13711  0153BC  0060  F053  FFE6   	movff	btemp+19,postinc1
 13712  0153C2  0060  F057  FFE6   	movff	btemp+20,postinc1
 13713  0153C8  0060  F05B  FFE6   	movff	btemp+21,postinc1
 13714  0153CE  0060  F05F  FFE6   	movff	btemp+22,postinc1
 13715  0153D4  0060  F063  FFE6   	movff	btemp+23,postinc1
 13716  0153DA  EC19  F0DA         	call	___aodiv	;wreg free
 13717  0153DE  52E5               	movf	postdec1,f,c
 13718  0153E0  006F FF9C  F018    	movff	indf1,btemp+23
 13719  0153E6  52E5               	movf	postdec1,f,c
 13720  0153E8  006F FF9C  F017    	movff	indf1,btemp+22
 13721  0153EE  52E5               	movf	postdec1,f,c
 13722  0153F0  006F FF9C  F016    	movff	indf1,btemp+21
 13723  0153F6  52E5               	movf	postdec1,f,c
 13724  0153F8  006F FF9C  F015    	movff	indf1,btemp+20
 13725  0153FE  52E5               	movf	postdec1,f,c
 13726  015400  006F FF9C  F014    	movff	indf1,btemp+19
 13727  015406  52E5               	movf	postdec1,f,c
 13728  015408  006F FF9C  F013    	movff	indf1,btemp+18
 13729  01540E  52E5               	movf	postdec1,f,c
 13730  015410  006F FF9C  F012    	movff	indf1,btemp+17
 13731  015416  52E5               	movf	postdec1,f,c
 13732  015418  006F FF9C  F011    	movff	indf1,btemp+16
 13733  01541E  0EF8               	movlw	248
 13734  015420  26E1               	addwf	fsr1l,f,c
 13735  015422  0EFF               	movlw	255
 13736  015424  22E2               	addwfc	fsr1h,f,c
 13737  015426  0060  F044  F00B   	movff	btemp+16,btemp+10
 13738  01542C  0060  F048  F00C   	movff	btemp+17,btemp+11
 13739                           
 13740                           ;stkvar	_cycles @ sp[(-14)+12]
 13741  015432  0EFE               	movlw	-2
 13742  015434  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13743  01543A  0EFF               	movlw	-1
 13744  01543C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13745  015442  0E90               	movlw	144
 13746  015444  6EE6               	movwf	postinc1,c
 13747  015446  0E01               	movlw	1
 13748  015448  6EE6               	movwf	postinc1,c
 13749  01544A  0E00               	movlw	0
 13750  01544C  6EE6               	movwf	postinc1,c
 13751  01544E  0E00               	movlw	0
 13752  015450  6EE6               	movwf	postinc1,c
 13753  015452  0E00               	movlw	0
 13754  015454  6EE6               	movwf	postinc1,c
 13755  015456  0E00               	movlw	0
 13756  015458  6EE6               	movwf	postinc1,c
 13757  01545A  0E00               	movlw	0
 13758  01545C  6EE6               	movwf	postinc1,c
 13759  01545E  0E00               	movlw	0
 13760  015460  6EE6               	movwf	postinc1,c
 13761                           
 13762                           ;stkvar	_year @ sp[(-22)+-8]
 13763  015462  0EE2               	movlw	-30
 13764  015464  50E3               	movf	plusw1,w,c
 13765  015466  0F9C               	addlw	156
 13766  015468  6E11               	movwf	(btemp+16)^0,c
 13767  01546A  0EE3               	movlw	-29
 13768  01546C  006F FF8C  F012    	movff	plusw1,btemp+17
 13769  015472  0EFF               	movlw	255
 13770  015474  2212               	addwfc	(btemp+17)^0,f,c
 13771  015476  0EE4               	movlw	-28
 13772  015478  006F FF8C  F013    	movff	plusw1,btemp+18
 13773  01547E  0EFF               	movlw	255
 13774  015480  2213               	addwfc	(btemp+18)^0,f,c
 13775  015482  0EE5               	movlw	-27
 13776  015484  006F FF8C  F014    	movff	plusw1,btemp+19
 13777  01548A  0EFF               	movlw	255
 13778  01548C  2214               	addwfc	(btemp+19)^0,f,c
 13779  01548E  0EE6               	movlw	-26
 13780  015490  006F FF8C  F015    	movff	plusw1,btemp+20
 13781  015496  0EFF               	movlw	255
 13782  015498  2215               	addwfc	(btemp+20)^0,f,c
 13783  01549A  0EE7               	movlw	-25
 13784  01549C  006F FF8C  F016    	movff	plusw1,btemp+21
 13785  0154A2  0EFF               	movlw	255
 13786  0154A4  2216               	addwfc	(btemp+21)^0,f,c
 13787  0154A6  0EE8               	movlw	-24
 13788  0154A8  006F FF8C  F017    	movff	plusw1,btemp+22
 13789  0154AE  0EFF               	movlw	255
 13790  0154B0  2217               	addwfc	(btemp+22)^0,f,c
 13791  0154B2  0EE9               	movlw	-23
 13792  0154B4  006F FF8C  F018    	movff	plusw1,btemp+23
 13793  0154BA  0EFF               	movlw	255
 13794  0154BC  2218               	addwfc	(btemp+23)^0,f,c
 13795  0154BE  0060  F047  FFE6   	movff	btemp+16,postinc1
 13796  0154C4  0060  F04B  FFE6   	movff	btemp+17,postinc1
 13797  0154CA  0060  F04F  FFE6   	movff	btemp+18,postinc1
 13798  0154D0  0060  F053  FFE6   	movff	btemp+19,postinc1
 13799  0154D6  0060  F057  FFE6   	movff	btemp+20,postinc1
 13800  0154DC  0060  F05B  FFE6   	movff	btemp+21,postinc1
 13801  0154E2  0060  F05F  FFE6   	movff	btemp+22,postinc1
 13802  0154E8  0060  F063  FFE6   	movff	btemp+23,postinc1
 13803  0154EE  ECE9  F0DE         	call	___aomod	;wreg free
 13804  0154F2  52E5               	movf	postdec1,f,c
 13805  0154F4  006F FF9C  F018    	movff	indf1,btemp+23
 13806  0154FA  52E5               	movf	postdec1,f,c
 13807  0154FC  006F FF9C  F017    	movff	indf1,btemp+22
 13808  015502  52E5               	movf	postdec1,f,c
 13809  015504  006F FF9C  F016    	movff	indf1,btemp+21
 13810  01550A  52E5               	movf	postdec1,f,c
 13811  01550C  006F FF9C  F015    	movff	indf1,btemp+20
 13812  015512  52E5               	movf	postdec1,f,c
 13813  015514  006F FF9C  F014    	movff	indf1,btemp+19
 13814  01551A  52E5               	movf	postdec1,f,c
 13815  01551C  006F FF9C  F013    	movff	indf1,btemp+18
 13816  015522  52E5               	movf	postdec1,f,c
 13817  015524  006F FF9C  F012    	movff	indf1,btemp+17
 13818  01552A  52E5               	movf	postdec1,f,c
 13819  01552C  006F FF9C  F011    	movff	indf1,btemp+16
 13820  015532  0EF8               	movlw	248
 13821  015534  26E1               	addwf	fsr1l,f,c
 13822  015536  0EFF               	movlw	255
 13823  015538  22E2               	addwfc	fsr1h,f,c
 13824  01553A  0060  F044  F00B   	movff	btemp+16,btemp+10
 13825  015540  0060  F048  F00C   	movff	btemp+17,btemp+11
 13826                           
 13827                           ;stkvar	_rem @ sp[(-14)+4]
 13828  015546  0EF6               	movlw	-10
 13829  015548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13830  01554E  0EF7               	movlw	-9
 13831  015550  0060  F033  FFE3   	movff	btemp+11,plusw1
 13832                           
 13833                           ;stkvar	_rem @ sp[(-14)+4]
 13834  015556  0EF7               	movlw	-9
 13835  015558  AEE3               	btfss	plusw1,7,c
 13836  01555A  D015               	goto	l11581
 13837                           
 13838                           ;stkvar	_cycles @ sp[(-14)+12]
 13839  01555C  50E1               	movf	fsr1l,w,c
 13840  01555E  0FFE               	addlw	-2
 13841  015560  6ED9               	movwf	fsr2l,c
 13842  015562  50E2               	movf	fsr1h,w,c
 13843  015564  6EDA               	movwf	fsr2h,c
 13844  015566  0EFF               	movlw	255
 13845  015568  22DA               	addwfc	fsr2h,f,c
 13846  01556A  06DE               	decf	postinc2,f,c
 13847  01556C  0E00               	movlw	0
 13848  01556E  5ADD               	subwfb	postdec2,f,c
 13849                           
 13850                           ;stkvar	_rem @ sp[(-14)+4]
 13851  015570  50E1               	movf	fsr1l,w,c
 13852  015572  0FF6               	addlw	-10
 13853  015574  6ED9               	movwf	fsr2l,c
 13854  015576  50E2               	movf	fsr1h,w,c
 13855  015578  6EDA               	movwf	fsr2h,c
 13856  01557A  0EFF               	movlw	255
 13857  01557C  22DA               	addwfc	fsr2h,f,c
 13858  01557E  0E90               	movlw	144
 13859  015580  26DE               	addwf	postinc2,f,c
 13860  015582  0E01               	movlw	1
 13861  015584  22DD               	addwfc	postdec2,f,c
 13862  015586                     l11581:
 13863                           
 13864                           ;stkvar	_rem @ sp[(-14)+4]
 13865  015586  0EF6               	movlw	-10
 13866  015588  006F FF8C  F001    	movff	plusw1,btemp
 13867  01558E  0EF7               	movlw	-9
 13868  015590  50E3               	movf	plusw1,w,c
 13869  015592  1001               	iorwf	btemp^0,w,c
 13870  015594  A4D8               	btfss	status,2,c
 13871  015596  D015               	goto	l11589
 13872                           
 13873                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13874  015598  0EE8               	movlw	-24
 13875  01559A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13876  0155A0  0EE9               	movlw	-23
 13877  0155A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13878  0155A8  0E01               	movlw	1
 13879  0155AA  6EDE               	movwf	postinc2,c
 13880  0155AC  0E00               	movlw	0
 13881  0155AE  6EDD               	movwf	postdec2,c
 13882                           
 13883                           ;stkvar	_centuries @ sp[(-14)+8]
 13884  0155B0  0EFA               	movlw	-6
 13885  0155B2  6AE3               	clrf	plusw1,c
 13886  0155B4  0EFB               	movlw	-5
 13887  0155B6  6AE3               	clrf	plusw1,c
 13888  0155B8                     l11587:
 13889                           
 13890                           ;stkvar	_leaps @ sp[(-14)+10]
 13891  0155B8  0EFC               	movlw	-4
 13892  0155BA  6AE3               	clrf	plusw1,c
 13893  0155BC  0EFD               	movlw	-3
 13894  0155BE  6AE3               	clrf	plusw1,c
 13895  0155C0  D0D6               	goto	l11621
 13896  0155C2                     l11589:
 13897                           
 13898                           ;stkvar	_rem @ sp[(-14)+4]
 13899  0155C2  0EF7               	movlw	-9
 13900  0155C4  BEE3               	btfsc	plusw1,7,c
 13901  0155C6  D04A               	goto	l11601
 13902  0155C8  0EF7               	movlw	-9
 13903  0155CA  50E3               	movf	plusw1,w,c
 13904  0155CC  E108               	bnz	u10720
 13905  0155CE  0EF6               	movlw	-10
 13906  0155D0  006F FF8C  F001    	movff	plusw1,btemp
 13907  0155D6  0EC8               	movlw	200
 13908  0155D8  5E01               	subwf	btemp^0,f,c
 13909  0155DA  A0D8               	btfss	status,0,c
 13910  0155DC  D03F               	goto	l11601
 13911  0155DE                     u10720:
 13912                           
 13913                           ;stkvar	_rem @ sp[(-14)+4]
 13914  0155DE  0EF7               	movlw	-9
 13915  0155E0  BEE3               	btfsc	plusw1,7,c
 13916  0155E2  D025               	goto	l11597
 13917  0155E4  0EF6               	movlw	-10
 13918  0155E6  006F FF8C  F001    	movff	plusw1,btemp
 13919  0155EC  0E2C               	movlw	44
 13920  0155EE  5E01               	subwf	btemp^0,f,c
 13921  0155F0  0EF7               	movlw	-9
 13922  0155F2  006F FF8C  F001    	movff	plusw1,btemp
 13923  0155F8  0E01               	movlw	1
 13924  0155FA  5A01               	subwfb	btemp^0,f,c
 13925  0155FC  A0D8               	btfss	status,0,c
 13926  0155FE  D017               	goto	l11597
 13927  015600  0E03               	movlw	3
 13928  015602  6E0B               	movwf	(btemp+10)^0,c
 13929  015604  0E00               	movlw	0
 13930  015606  6E0C               	movwf	(btemp+11)^0,c
 13931                           
 13932                           ;stkvar	_centuries @ sp[(-14)+8]
 13933  015608  0EFA               	movlw	-6
 13934  01560A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13935  015610  0EFB               	movlw	-5
 13936  015612  0060  F033  FFE3   	movff	btemp+11,plusw1
 13937                           
 13938                           ;stkvar	_rem @ sp[(-14)+4]
 13939  015618  50E1               	movf	fsr1l,w,c
 13940  01561A  0FF6               	addlw	-10
 13941  01561C  6ED9               	movwf	fsr2l,c
 13942  01561E  50E2               	movf	fsr1h,w,c
 13943  015620  6EDA               	movwf	fsr2h,c
 13944  015622  0EFF               	movlw	255
 13945  015624  22DA               	addwfc	fsr2h,f,c
 13946  015626  0ED4               	movlw	212
 13947  015628  26DE               	addwf	postinc2,f,c
 13948  01562A  0EFE               	movlw	254
 13949  01562C  D015               	goto	L13
 13950  01562E                     l11597:
 13951  01562E  0E02               	movlw	2
 13952  015630  6E0B               	movwf	(btemp+10)^0,c
 13953  015632  0E00               	movlw	0
 13954  015634  6E0C               	movwf	(btemp+11)^0,c
 13955                           
 13956                           ;stkvar	_centuries @ sp[(-14)+8]
 13957  015636  0EFA               	movlw	-6
 13958  015638  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13959  01563E  0EFB               	movlw	-5
 13960  015640  0060  F033  FFE3   	movff	btemp+11,plusw1
 13961                           
 13962                           ;stkvar	_rem @ sp[(-14)+4]
 13963  015646  50E1               	movf	fsr1l,w,c
 13964  015648  0FF6               	addlw	-10
 13965  01564A  6ED9               	movwf	fsr2l,c
 13966  01564C  50E2               	movf	fsr1h,w,c
 13967  01564E  6EDA               	movwf	fsr2h,c
 13968  015650  0EFF               	movlw	255
 13969  015652  22DA               	addwfc	fsr2h,f,c
 13970  015654  0E38               	movlw	56
 13971  015656  D024               	goto	L14
 13972  015658                     L13:
 13973  015658  22DD               	addwfc	postdec2,f,c
 13974  01565A  D029               	goto	l11609
 13975  01565C                     l11601:
 13976                           
 13977                           ;stkvar	_rem @ sp[(-14)+4]
 13978  01565C  0EF7               	movlw	-9
 13979  01565E  BEE3               	btfsc	plusw1,7,c
 13980  015660  D022               	goto	l11607
 13981  015662  0EF7               	movlw	-9
 13982  015664  50E3               	movf	plusw1,w,c
 13983  015666  E108               	bnz	u10740
 13984  015668  0EF6               	movlw	-10
 13985  01566A  006F FF8C  F001    	movff	plusw1,btemp
 13986  015670  0E64               	movlw	100
 13987  015672  5E01               	subwf	btemp^0,f,c
 13988  015674  A0D8               	btfss	status,0,c
 13989  015676  D017               	goto	l11607
 13990  015678                     u10740:
 13991  015678  0E01               	movlw	1
 13992  01567A  6E0B               	movwf	(btemp+10)^0,c
 13993  01567C  0E00               	movlw	0
 13994  01567E  6E0C               	movwf	(btemp+11)^0,c
 13995                           
 13996                           ;stkvar	_centuries @ sp[(-14)+8]
 13997  015680  0EFA               	movlw	-6
 13998  015682  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13999  015688  0EFB               	movlw	-5
 14000  01568A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14001                           
 14002                           ;stkvar	_rem @ sp[(-14)+4]
 14003  015690  50E1               	movf	fsr1l,w,c
 14004  015692  0FF6               	addlw	-10
 14005  015694  6ED9               	movwf	fsr2l,c
 14006  015696  50E2               	movf	fsr1h,w,c
 14007  015698  6EDA               	movwf	fsr2h,c
 14008  01569A  0EFF               	movlw	255
 14009  01569C  22DA               	addwfc	fsr2h,f,c
 14010  01569E  0E9C               	movlw	156
 14011  0156A0                     L14:
 14012  0156A0  26DE               	addwf	postinc2,f,c
 14013  0156A2  0EFF               	movlw	255
 14014  0156A4  D7D9               	goto	L13
 14015  0156A6                     l11607:
 14016                           
 14017                           ;stkvar	_centuries @ sp[(-14)+8]
 14018  0156A6  0EFA               	movlw	-6
 14019  0156A8  6AE3               	clrf	plusw1,c
 14020  0156AA  0EFB               	movlw	-5
 14021  0156AC  6AE3               	clrf	plusw1,c
 14022  0156AE                     l11609:
 14023                           
 14024                           ;stkvar	_rem @ sp[(-14)+4]
 14025  0156AE  0EF6               	movlw	-10
 14026  0156B0  006F FF8C  F001    	movff	plusw1,btemp
 14027  0156B6  0EF7               	movlw	-9
 14028  0156B8  50E3               	movf	plusw1,w,c
 14029  0156BA  1001               	iorwf	btemp^0,w,c
 14030  0156BC  A4D8               	btfss	status,2,c
 14031  0156BE  D00D               	goto	l11615
 14032                           
 14033                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14034  0156C0  0EE8               	movlw	-24
 14035  0156C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14036  0156C8  0EE9               	movlw	-23
 14037  0156CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14038  0156D0  0E00               	movlw	0
 14039  0156D2  6EDE               	movwf	postinc2,c
 14040  0156D4  0E00               	movlw	0
 14041  0156D6  6EDD               	movwf	postdec2,c
 14042  0156D8  D76F               	goto	l11587
 14043  0156DA                     l11615:
 14044                           
 14045                           ;stkvar	_rem @ sp[(-14)+4]
 14046  0156DA  0EF6               	movlw	-10
 14047  0156DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14048  0156E2  0EF7               	movlw	-9
 14049  0156E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14050  0156EA  90D8               	bcf	status,0,c
 14051  0156EC  320C               	rrcf	(btemp+11)^0,f,c
 14052  0156EE  320B               	rrcf	(btemp+10)^0,f,c
 14053  0156F0  90D8               	bcf	status,0,c
 14054  0156F2  320C               	rrcf	(btemp+11)^0,f,c
 14055  0156F4  320B               	rrcf	(btemp+10)^0,f,c
 14056                           
 14057                           ;stkvar	_leaps @ sp[(-14)+10]
 14058  0156F6  0EFC               	movlw	-4
 14059  0156F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14060  0156FE  0EFD               	movlw	-3
 14061  015700  0060  F033  FFE3   	movff	btemp+11,plusw1
 14062  015706  0E03               	movlw	3
 14063  015708  6E0B               	movwf	(btemp+10)^0,c
 14064  01570A  0E00               	movlw	0
 14065  01570C  6E0C               	movwf	(btemp+11)^0,c
 14066                           
 14067                           ;stkvar	_rem @ sp[(-14)+4]
 14068  01570E  0EF6               	movlw	-10
 14069  015710  006F FF8C  F001    	movff	plusw1,btemp
 14070  015716  500B               	movf	(btemp+10)^0,w,c
 14071  015718  1601               	andwf	btemp^0,f,c
 14072  01571A  0EF6               	movlw	-10
 14073  01571C  0060  F007  FFE3   	movff	btemp,plusw1
 14074  015722  0EF7               	movlw	-9
 14075  015724  006F FF8C  F001    	movff	plusw1,btemp
 14076  01572A  500C               	movf	(btemp+11)^0,w,c
 14077  01572C  1601               	andwf	btemp^0,f,c
 14078  01572E  0EF7               	movlw	-9
 14079  015730  0060  F007  FFE3   	movff	btemp,plusw1
 14080                           
 14081                           ;stkvar	_rem @ sp[(-14)+4]
 14082  015736  0EF6               	movlw	-10
 14083  015738  006F FF8C  F001    	movff	plusw1,btemp
 14084  01573E  0EF7               	movlw	-9
 14085  015740  50E3               	movf	plusw1,w,c
 14086  015742  1001               	iorwf	btemp^0,w,c
 14087  015744  A4D8               	btfss	status,2,c
 14088  015746  D002               	goto	u10760
 14089  015748  0E01               	movlw	1
 14090  01574A  D001               	goto	u10770
 14091  01574C                     u10760:
 14092  01574C  0E00               	movlw	0
 14093  01574E                     u10770:
 14094  01574E  6E0B               	movwf	(btemp+10)^0,c
 14095  015750  6A0C               	clrf	(btemp+11)^0,c
 14096                           
 14097                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14098  015752  0EE8               	movlw	-24
 14099  015754  006F FF8F FFD9     	movff	plusw1,fsr2l
 14100  01575A  0EE9               	movlw	-23
 14101  01575C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14102  015762  0060  F02F  FFDE   	movff	btemp+10,postinc2
 14103  015768  0060  F033  FFDD   	movff	btemp+11,postdec2
 14104  01576E                     l11621:
 14105                           
 14106                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14107  01576E  0EE8               	movlw	-24
 14108  015770  006F FF8F FFD9     	movff	plusw1,fsr2l
 14109  015776  0EE9               	movlw	-23
 14110  015778  006F FF8F FFDA     	movff	plusw1,fsr2h
 14111  01577E  006F FF78  F00B    	movff	postinc2,btemp+10
 14112  015784  006F FF74  F00C    	movff	postdec2,btemp+11
 14113                           
 14114                           ;stkvar	_centuries @ sp[(-14)+8]
 14115  01578A  0EFA               	movlw	-6
 14116  01578C  006F FF8C  F009    	movff	plusw1,btemp+8
 14117  015792  0EFB               	movlw	-5
 14118  015794  006F FF8C  F00A    	movff	plusw1,btemp+9
 14119  01579A  0E18               	movlw	24
 14120  01579C  0209               	mulwf	(btemp+8)^0,c
 14121  01579E  006F FFCC  F007    	movff	prodl,btemp+6
 14122  0157A4  006F FFD0  F008    	movff	prodh,btemp+7
 14123  0157AA  020A               	mulwf	(btemp+9)^0,c
 14124  0157AC  50F3               	movf	prodl,w,c
 14125  0157AE  2608               	addwf	(btemp+7)^0,f,c
 14126                           
 14127                           ;stkvar	_cycles @ sp[(-14)+12]
 14128  0157B0  0EFE               	movlw	-2
 14129  0157B2  006F FF8C  F009    	movff	plusw1,btemp+8
 14130  0157B8  0EFF               	movlw	-1
 14131  0157BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 14132  0157C0  0E61               	movlw	97
 14133  0157C2  0209               	mulwf	(btemp+8)^0,c
 14134  0157C4  006F FFCC  F005    	movff	prodl,btemp+4
 14135  0157CA  006F FFD0  F006    	movff	prodh,btemp+5
 14136  0157D0  020A               	mulwf	(btemp+9)^0,c
 14137  0157D2  50F3               	movf	prodl,w,c
 14138  0157D4  2606               	addwf	(btemp+5)^0,f,c
 14139  0157D6  5007               	movf	(btemp+6)^0,w,c
 14140  0157D8  2605               	addwf	(btemp+4)^0,f,c
 14141  0157DA  5008               	movf	(btemp+7)^0,w,c
 14142  0157DC  2206               	addwfc	(btemp+5)^0,f,c
 14143  0157DE  500B               	movf	(btemp+10)^0,w,c
 14144  0157E0  5E05               	subwf	(btemp+4)^0,f,c
 14145  0157E2  500C               	movf	(btemp+11)^0,w,c
 14146  0157E4  5A06               	subwfb	(btemp+5)^0,f,c
 14147                           
 14148                           ;stkvar	_leaps @ sp[(-14)+10]
 14149  0157E6  50E1               	movf	fsr1l,w,c
 14150  0157E8  0FFC               	addlw	-4
 14151  0157EA  6ED9               	movwf	fsr2l,c
 14152  0157EC  50E2               	movf	fsr1h,w,c
 14153  0157EE  6EDA               	movwf	fsr2h,c
 14154  0157F0  0EFF               	movlw	255
 14155  0157F2  22DA               	addwfc	fsr2h,f,c
 14156  0157F4  5005               	movf	(btemp+4)^0,w,c
 14157  0157F6  26DE               	addwf	postinc2,f,c
 14158  0157F8  5006               	movf	(btemp+5)^0,w,c
 14159  0157FA  22DD               	addwfc	postdec2,f,c
 14160  0157FC  0E80               	movlw	128
 14161  0157FE  6EE6               	movwf	postinc1,c
 14162  015800  0E51               	movlw	81
 14163  015802  6EE6               	movwf	postinc1,c
 14164  015804  0E01               	movlw	1
 14165  015806  6EE6               	movwf	postinc1,c
 14166  015808  0E00               	movlw	0
 14167  01580A  6EE6               	movwf	postinc1,c
 14168  01580C  0E00               	movlw	0
 14169  01580E  6EE6               	movwf	postinc1,c
 14170  015810  0E00               	movlw	0
 14171  015812  6EE6               	movwf	postinc1,c
 14172  015814  0E00               	movlw	0
 14173  015816  6EE6               	movwf	postinc1,c
 14174  015818  0E00               	movlw	0
 14175  01581A  6EE6               	movwf	postinc1,c
 14176                           
 14177                           ;stkvar	_leaps @ sp[(-22)+10]
 14178  01581C  0EF4               	movlw	-12
 14179  01581E  006F FF8C  F011    	movff	plusw1,btemp+16
 14180  015824  0EF5               	movlw	-11
 14181  015826  006F FF8C  F012    	movff	plusw1,btemp+17
 14182  01582C  6A13               	clrf	(btemp+18)^0,c
 14183  01582E  BE12               	btfsc	(btemp+17)^0,7,c
 14184  015830  6813               	setf	(btemp+18)^0,c
 14185  015832  0060  F04C  F014   	movff	btemp+18,btemp+19
 14186  015838  0060  F04C  F015   	movff	btemp+18,btemp+20
 14187  01583E  0060  F04C  F016   	movff	btemp+18,btemp+21
 14188  015844  0060  F04C  F017   	movff	btemp+18,btemp+22
 14189  01584A  0060  F04C  F018   	movff	btemp+18,btemp+23
 14190  015850  0060  F047  FFE6   	movff	btemp+16,postinc1
 14191  015856  0060  F04B  FFE6   	movff	btemp+17,postinc1
 14192  01585C  0060  F04F  FFE6   	movff	btemp+18,postinc1
 14193  015862  0060  F053  FFE6   	movff	btemp+19,postinc1
 14194  015868  0060  F057  FFE6   	movff	btemp+20,postinc1
 14195  01586E  0060  F05B  FFE6   	movff	btemp+21,postinc1
 14196  015874  0060  F05F  FFE6   	movff	btemp+22,postinc1
 14197  01587A  0060  F063  FFE6   	movff	btemp+23,postinc1
 14198  015880  EC85  F0EF         	call	___omul	;wreg free
 14199  015884  52E5               	movf	postdec1,f,c
 14200  015886  006F FF9C  F018    	movff	indf1,btemp+23
 14201  01588C  52E5               	movf	postdec1,f,c
 14202  01588E  006F FF9C  F017    	movff	indf1,btemp+22
 14203  015894  52E5               	movf	postdec1,f,c
 14204  015896  006F FF9C  F016    	movff	indf1,btemp+21
 14205  01589C  52E5               	movf	postdec1,f,c
 14206  01589E  006F FF9C  F015    	movff	indf1,btemp+20
 14207  0158A4  52E5               	movf	postdec1,f,c
 14208  0158A6  006F FF9C  F014    	movff	indf1,btemp+19
 14209  0158AC  52E5               	movf	postdec1,f,c
 14210  0158AE  006F FF9C  F013    	movff	indf1,btemp+18
 14211  0158B4  52E5               	movf	postdec1,f,c
 14212  0158B6  006F FF9C  F012    	movff	indf1,btemp+17
 14213  0158BC  52E5               	movf	postdec1,f,c
 14214  0158BE  006F FF9C  F011    	movff	indf1,btemp+16
 14215  0158C4  0EF8               	movlw	248
 14216  0158C6  26E1               	addwf	fsr1l,f,c
 14217  0158C8  0EFF               	movlw	255
 14218  0158CA  22E2               	addwfc	fsr1h,f,c
 14219  0158CC  0E80               	movlw	128
 14220  0158CE  6EE6               	movwf	postinc1,c
 14221  0158D0  0E33               	movlw	51
 14222  0158D2  6EE6               	movwf	postinc1,c
 14223  0158D4  0EE1               	movlw	225
 14224  0158D6  6EE6               	movwf	postinc1,c
 14225  0158D8  0E01               	movlw	1
 14226  0158DA  6EE6               	movwf	postinc1,c
 14227  0158DC  0E00               	movlw	0
 14228  0158DE  6EE6               	movwf	postinc1,c
 14229  0158E0  0E00               	movlw	0
 14230  0158E2  6EE6               	movwf	postinc1,c
 14231  0158E4  0E00               	movlw	0
 14232  0158E6  6EE6               	movwf	postinc1,c
 14233  0158E8  0E00               	movlw	0
 14234  0158EA  6EE6               	movwf	postinc1,c
 14235                           
 14236                           ;stkvar	_year @ sp[(-22)+-8]
 14237  0158EC  50E1               	movf	fsr1l,w,c
 14238  0158EE  0FE2               	addlw	-30
 14239  0158F0  6ED9               	movwf	fsr2l,c
 14240  0158F2  50E2               	movf	fsr1h,w,c
 14241  0158F4  6EDA               	movwf	fsr2h,c
 14242  0158F6  0EFF               	movlw	255
 14243  0158F8  22DA               	addwfc	fsr2h,f,c
 14244  0158FA  006F FF7B FFE6     	movff	postinc2,postinc1
 14245  015900  006F FF7B FFE6     	movff	postinc2,postinc1
 14246  015906  006F FF7B FFE6     	movff	postinc2,postinc1
 14247  01590C  006F FF7B FFE6     	movff	postinc2,postinc1
 14248  015912  006F FF7B FFE6     	movff	postinc2,postinc1
 14249  015918  006F FF7B FFE6     	movff	postinc2,postinc1
 14250  01591E  006F FF7B FFE6     	movff	postinc2,postinc1
 14251  015924  006F FF7B FFE6     	movff	postinc2,postinc1
 14252  01592A  EC85  F0EF         	call	___omul	;wreg free
 14253  01592E  52E5               	movf	postdec1,f,c
 14254  015930  006F FF9C  F020    	movff	indf1,btemp+31
 14255  015936  52E5               	movf	postdec1,f,c
 14256  015938  006F FF9C  F01F    	movff	indf1,btemp+30
 14257  01593E  52E5               	movf	postdec1,f,c
 14258  015940  006F FF9C  F01E    	movff	indf1,btemp+29
 14259  015946  52E5               	movf	postdec1,f,c
 14260  015948  006F FF9C  F01D    	movff	indf1,btemp+28
 14261  01594E  52E5               	movf	postdec1,f,c
 14262  015950  006F FF9C  F01C    	movff	indf1,btemp+27
 14263  015956  52E5               	movf	postdec1,f,c
 14264  015958  006F FF9C  F01B    	movff	indf1,btemp+26
 14265  01595E  52E5               	movf	postdec1,f,c
 14266  015960  006F FF9C  F01A    	movff	indf1,btemp+25
 14267  015966  52E5               	movf	postdec1,f,c
 14268  015968  006F FF9C  F019    	movff	indf1,btemp+24
 14269  01596E  0EF8               	movlw	248
 14270  015970  26E1               	addwf	fsr1l,f,c
 14271  015972  0EFF               	movlw	255
 14272  015974  22E2               	addwfc	fsr1h,f,c
 14273  015976  5011               	movf	(btemp+16)^0,w,c
 14274  015978  2419               	addwf	(btemp+24)^0,w,c
 14275  01597A  6E09               	movwf	(btemp+8)^0,c
 14276  01597C  5012               	movf	(btemp+17)^0,w,c
 14277  01597E  201A               	addwfc	(btemp+25)^0,w,c
 14278  015980  6E0A               	movwf	(btemp+9)^0,c
 14279  015982  5013               	movf	(btemp+18)^0,w,c
 14280  015984  201B               	addwfc	(btemp+26)^0,w,c
 14281  015986  6E0B               	movwf	(btemp+10)^0,c
 14282  015988  5014               	movf	(btemp+19)^0,w,c
 14283  01598A  201C               	addwfc	(btemp+27)^0,w,c
 14284  01598C  6E0C               	movwf	(btemp+11)^0,c
 14285  01598E  5015               	movf	(btemp+20)^0,w,c
 14286  015990  201D               	addwfc	(btemp+28)^0,w,c
 14287  015992  6E0D               	movwf	(btemp+12)^0,c
 14288  015994  5016               	movf	(btemp+21)^0,w,c
 14289  015996  201E               	addwfc	(btemp+29)^0,w,c
 14290  015998  6E0E               	movwf	(btemp+13)^0,c
 14291  01599A  5017               	movf	(btemp+22)^0,w,c
 14292  01599C  201F               	addwfc	(btemp+30)^0,w,c
 14293  01599E  6E0F               	movwf	(btemp+14)^0,c
 14294  0159A0  5018               	movf	(btemp+23)^0,w,c
 14295  0159A2  2020               	addwfc	(btemp+31)^0,w,c
 14296  0159A4  6E10               	movwf	(btemp+15)^0,c
 14297  0159A6  0E00               	movlw	0
 14298  0159A8  2409               	addwf	(btemp+8)^0,w,c
 14299  0159AA  6E11               	movwf	(btemp+16)^0,c
 14300  0159AC  0E77               	movlw	119
 14301  0159AE  200A               	addwfc	(btemp+9)^0,w,c
 14302  0159B0  6E12               	movwf	(btemp+17)^0,c
 14303  0159B2  0E76               	movlw	118
 14304  0159B4  200B               	addwfc	(btemp+10)^0,w,c
 14305  0159B6  6E13               	movwf	(btemp+18)^0,c
 14306  0159B8  0E7C               	movlw	124
 14307  0159BA  200C               	addwfc	(btemp+11)^0,w,c
 14308  0159BC  6E14               	movwf	(btemp+19)^0,c
 14309  0159BE  0EFF               	movlw	255
 14310  0159C0  200D               	addwfc	(btemp+12)^0,w,c
 14311  0159C2  6E15               	movwf	(btemp+20)^0,c
 14312  0159C4  0EFF               	movlw	255
 14313  0159C6  200E               	addwfc	(btemp+13)^0,w,c
 14314  0159C8  6E16               	movwf	(btemp+21)^0,c
 14315  0159CA  0EFF               	movlw	255
 14316  0159CC  200F               	addwfc	(btemp+14)^0,w,c
 14317  0159CE  6E17               	movwf	(btemp+22)^0,c
 14318  0159D0  0EFF               	movlw	255
 14319  0159D2  2010               	addwfc	(btemp+15)^0,w,c
 14320  0159D4  6E18               	movwf	(btemp+23)^0,c
 14321  0159D6                     L12:
 14322                           
 14323                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 14324  0159D6  0EEA               	movlw	-22
 14325  0159D8  0060  F047  FFE3   	movff	btemp+16,plusw1
 14326  0159DE  0EEB               	movlw	-21
 14327  0159E0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14328  0159E6  0EEC               	movlw	-20
 14329  0159E8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14330  0159EE  0EED               	movlw	-19
 14331  0159F0  0060  F053  FFE3   	movff	btemp+19,plusw1
 14332  0159F6  0EEE               	movlw	-18
 14333  0159F8  0060  F057  FFE3   	movff	btemp+20,plusw1
 14334  0159FE  0EEF               	movlw	-17
 14335  015A00  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14336  015A06  0EF0               	movlw	-16
 14337  015A08  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14338  015A0E  0EF1               	movlw	-15
 14339  015A10  0060  F063  FFE3   	movff	btemp+23,plusw1
 14340                           
 14341                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 14342  015A16  0EF2               	movlw	242
 14343  015A18  26E1               	addwf	fsr1l,f,c
 14344  015A1A  0EFF               	movlw	255
 14345  015A1C  22E2               	addwfc	fsr1h,f,c
 14346  015A1E  0012               	return		;funcret
 14347  015A20                     __end_of___year_to_secs:
 14348                           	opt callstack 0
 14349                           
 14350 ;; *************** function ___month_to_secs *****************
 14351 ;; Defined at:
 14352 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 14353 ;; Parameters:    Size  Location     Type
 14354 ;;  month           2  [STACK] int 
 14355 ;;  is_leap         2  [STACK] int 
 14356 ;; Auto vars:     Size  Location     Type
 14357 ;;  t               4  [STACK] long 
 14358 ;; Return value:  Size  Location     Type
 14359 ;;                  4  [STACK] long 
 14360 ;; Registers used:
 14361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 14362 ;; Tracked objects:
 14363 ;;		On entry : 0/0
 14364 ;;		On exit  : 0/0
 14365 ;;		Unchanged: 0/0
 14366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14371 ;;Total ram usage:        0 bytes
 14372 ;; Hardware stack levels used:    1
 14373 ;; Hardware stack levels required when called:   15
 14374 ;; This function calls:
 14375 ;;		Nothing
 14376 ;; This function is called by:
 14377 ;;		_rule_to_secs
 14378 ;; This function uses a reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text40
 14382  01F26E                     __ptext40:
 14383                           	opt callstack 0
 14384  01F26E                     ___month_to_secs:
 14385                           	opt callstack 0
 14386                           
 14387                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14388  01F26E  52E6               	movf	postinc1,f,c
 14389  01F270  52E6               	movf	postinc1,f,c
 14390  01F272  52E6               	movf	postinc1,f,c
 14391  01F274  52E6               	movf	postinc1,f,c
 14392                           
 14393                           ;stkvar	_month @ sp[(-4)+-2]
 14394                           
 14395                           ;incstack = 0
 14396  01F276  0EFA               	movlw	-6
 14397  01F278  006F FF8C  F00B    	movff	plusw1,btemp+10
 14398  01F27E  0EFB               	movlw	-5
 14399  01F280  006F FF8C  F00C    	movff	plusw1,btemp+11
 14400  01F286  90D8               	bcf	status,0,c
 14401  01F288  360B               	rlcf	(btemp+10)^0,f,c
 14402  01F28A  360C               	rlcf	(btemp+11)^0,f,c
 14403  01F28C  90D8               	bcf	status,0,c
 14404  01F28E  360B               	rlcf	(btemp+10)^0,f,c
 14405  01F290  360C               	rlcf	(btemp+11)^0,f,c
 14406  01F292  0EE3               	movlw	low ___month_to_secs@secs_through_month
 14407  01F294  240B               	addwf	(btemp+10)^0,w,c
 14408  01F296  6EF6               	movwf	tblptrl,c
 14409  01F298  0EF8               	movlw	high ___month_to_secs@secs_through_month
 14410  01F29A  200C               	addwfc	(btemp+11)^0,w,c
 14411  01F29C  6EF7               	movwf	tblptrh,c
 14412  01F29E                     	if	1	;There are 3 active tblptr bytes
 14413  01F29E  6AF8               	clrf	tblptru,c
 14414  01F2A0  0E00               	movlw	low (__mediumconst shr (0+16))
 14415  01F2A2  22F8               	addwfc	tblptru,f,c
 14416  01F2A4                     	endif
 14417  01F2A4  0009               	tblrd		*+
 14418  01F2A6  006F FFD4  F009    	movff	tablat,btemp+8
 14419  01F2AC  0009               	tblrd		*+
 14420  01F2AE  006F FFD4  F00A    	movff	tablat,btemp+9
 14421  01F2B4  0009               	tblrd		*+
 14422  01F2B6  006F FFD4  F00B    	movff	tablat,btemp+10
 14423  01F2BC  0009               	tblrd		*+
 14424  01F2BE  006F FFD4  F00C    	movff	tablat,btemp+11
 14425                           
 14426                           ;stkvar	_t @ sp[(-4)+0]
 14427  01F2C4  0EFC               	movlw	-4
 14428  01F2C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 14429  01F2CC  0EFD               	movlw	-3
 14430  01F2CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14431  01F2D4  0EFE               	movlw	-2
 14432  01F2D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14433  01F2DC  0EFF               	movlw	-1
 14434  01F2DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14435                           
 14436                           ;stkvar	_is_leap @ sp[(-4)+-4]
 14437  01F2E4  0EF8               	movlw	-8
 14438  01F2E6  006F FF8C  F001    	movff	plusw1,btemp
 14439  01F2EC  0EF9               	movlw	-7
 14440  01F2EE  50E3               	movf	plusw1,w,c
 14441  01F2F0  1001               	iorwf	btemp^0,w,c
 14442  01F2F2  B4D8               	btfsc	status,2,c
 14443  01F2F4  D01D               	goto	l11635
 14444                           
 14445                           ;stkvar	_month @ sp[(-4)+-2]
 14446  01F2F6  0EFB               	movlw	-5
 14447  01F2F8  BEE3               	btfsc	plusw1,7,c
 14448  01F2FA  D01A               	goto	l11635
 14449  01F2FC  0EFB               	movlw	-5
 14450  01F2FE  50E3               	movf	plusw1,w,c
 14451  01F300  E108               	bnz	u10790
 14452  01F302  0EFA               	movlw	-6
 14453  01F304  006F FF8C  F001    	movff	plusw1,btemp
 14454  01F30A  0E02               	movlw	2
 14455  01F30C  5E01               	subwf	btemp^0,f,c
 14456  01F30E  A0D8               	btfss	status,0,c
 14457  01F310  D00F               	goto	l11635
 14458  01F312                     u10790:
 14459                           
 14460                           ;stkvar	_t @ sp[(-4)+0]
 14461  01F312  50E1               	movf	fsr1l,w,c
 14462  01F314  0FFC               	addlw	-4
 14463  01F316  6ED9               	movwf	fsr2l,c
 14464  01F318  50E2               	movf	fsr1h,w,c
 14465  01F31A  6EDA               	movwf	fsr2h,c
 14466  01F31C  0EFF               	movlw	255
 14467  01F31E  22DA               	addwfc	fsr2h,f,c
 14468  01F320  0E80               	movlw	128
 14469  01F322  26DE               	addwf	postinc2,f,c
 14470  01F324  0E51               	movlw	81
 14471  01F326  22DE               	addwfc	postinc2,f,c
 14472  01F328  0E01               	movlw	1
 14473  01F32A  22DE               	addwfc	postinc2,f,c
 14474  01F32C  0E00               	movlw	0
 14475  01F32E  22DE               	addwfc	postinc2,f,c
 14476  01F330                     l11635:
 14477                           
 14478                           ;stkvar	_t @ sp[(-4)+0]
 14479  01F330  0EFC               	movlw	-4
 14480  01F332  006F FF8C  F001    	movff	plusw1,btemp
 14481  01F338  0EFD               	movlw	-3
 14482  01F33A  006F FF8C  F002    	movff	plusw1,btemp+1
 14483  01F340  0EFE               	movlw	-2
 14484  01F342  006F FF8C  F003    	movff	plusw1,btemp+2
 14485  01F348  0EFF               	movlw	-1
 14486  01F34A  006F FF8C  F004    	movff	plusw1,btemp+3
 14487                           
 14488                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 14489  01F350  0EF8               	movlw	248
 14490  01F352  26E1               	addwf	fsr1l,f,c
 14491  01F354  0EFF               	movlw	255
 14492  01F356  22E2               	addwfc	fsr1h,f,c
 14493  01F358  0012               	return		;funcret
 14494  01F35A                     __end_of___month_to_secs:
 14495                           	opt callstack 0
 14496                           
 14497 ;; *************** function _do_tzset *****************
 14498 ;; Defined at:
 14499 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  s               2  [STACK] PTR const unsigned char 
 14504 ;;		 -> __gmt(4), 
 14505 ;; Return value:  Size  Location     Type
 14506 ;;                  1  [STACK] void 
 14507 ;; Registers used:
 14508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14509 ;; Tracked objects:
 14510 ;;		On entry : 0/1
 14511 ;;		On exit  : 0/0
 14512 ;;		Unchanged: 0/0
 14513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14518 ;;Total ram usage:        0 bytes
 14519 ;; Hardware stack levels used:    1
 14520 ;; Hardware stack levels required when called:   18
 14521 ;; This function calls:
 14522 ;;		_getname
 14523 ;;		_getoff
 14524 ;;		_getrule
 14525 ;; This function is called by:
 14526 ;;		___secs_to_zone
 14527 ;; This function uses a reentrant model
 14528 ;;
 14529                           
 14530                           	psect	text41
 14531  01AF32                     __ptext41:
 14532                           	opt callstack 0
 14533  01AF32                     _do_tzset:
 14534                           	opt callstack 0
 14535                           
 14536                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14537  01AF32  52E6               	movf	postinc1,f,c
 14538  01AF34  52E6               	movf	postinc1,f,c
 14539                           
 14540                           ;stkvar	_s @ sp[(-2)+0]
 14541                           
 14542                           ;incstack = 0
 14543  01AF36  0EFA               	movlw	high ___gmt
 14544  01AF38  6E01               	movwf	btemp^0,c
 14545  01AF3A  0EFF               	movlw	-1
 14546  01AF3C  0060  F007  FFE3   	movff	btemp,plusw1
 14547  01AF42  0E2F               	movlw	low ___gmt
 14548  01AF44  6E01               	movwf	btemp^0,c
 14549  01AF46  0EFE               	movlw	-2
 14550  01AF48  0060  F007  FFE3   	movff	btemp,plusw1
 14551                           
 14552                           ;stkvar	_s @ sp[(-2)+0]
 14553  01AF4E  0EFE               	movlw	254
 14554  01AF50  24E1               	addwf	fsr1l,w,c
 14555  01AF52  6E01               	movwf	btemp^0,c
 14556  01AF54  0EFF               	movlw	255
 14557  01AF56  20E2               	addwfc	fsr1h,w,c
 14558  01AF58  6E02               	movwf	(btemp+1)^0,c
 14559  01AF5A  0060  F007  FFE6   	movff	btemp,postinc1
 14560  01AF60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14561  01AF66  0EF9               	movlw	low _std_name
 14562  01AF68  6EE6               	movwf	postinc1,c
 14563  01AF6A  0E01               	movlw	high _std_name
 14564  01AF6C  6EE6               	movwf	postinc1,c
 14565  01AF6E  ECDA  F0D1         	call	_getname	;wreg free
 14566  01AF72  0EF9               	movlw	low _std_name
 14567  01AF74  0100               	movlb	0	; () banked
 14568  01AF76  6F76               	movwf	___tzname& (0+255),b
 14569  01AF78  0E01               	movlw	high _std_name
 14570  01AF7A  6F77               	movwf	(___tzname+1)& (0+255),b
 14571                           
 14572                           ; BSR set to: 0
 14573                           ;stkvar	_s @ sp[(-2)+0]
 14574  01AF7C  0EFE               	movlw	254
 14575  01AF7E  24E1               	addwf	fsr1l,w,c
 14576  01AF80  6E01               	movwf	btemp^0,c
 14577  01AF82  0EFF               	movlw	255
 14578  01AF84  20E2               	addwfc	fsr1h,w,c
 14579  01AF86  6E02               	movwf	(btemp+1)^0,c
 14580  01AF88  0060  F007  FFE6   	movff	btemp,postinc1
 14581  01AF8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14582  01AF94  EC09  F0E0         	call	_getoff	;wreg free
 14583  01AF98  0060  F004  F07A   	movff	btemp,___timezone
 14584  01AF9E  0060  F008  F07B   	movff	btemp+1,___timezone+1
 14585  01AFA4  0100               	movlb	0	; () banked
 14586  01AFA6  0E00               	movlw	0
 14587  01AFA8  BF7B               	btfsc	(___timezone+1)& (0+255),7,b
 14588  01AFAA  0EFF               	movlw	-1
 14589  01AFAC  6F7C               	movwf	(___timezone+2)& (0+255),b
 14590  01AFAE  6F7D               	movwf	(___timezone+3)& (0+255),b
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;stkvar	_s @ sp[(-2)+0]
 14594  01AFB0  0EFE               	movlw	254
 14595  01AFB2  24E1               	addwf	fsr1l,w,c
 14596  01AFB4  6E01               	movwf	btemp^0,c
 14597  01AFB6  0EFF               	movlw	255
 14598  01AFB8  20E2               	addwfc	fsr1h,w,c
 14599  01AFBA  6E02               	movwf	(btemp+1)^0,c
 14600  01AFBC  0060  F007  FFE6   	movff	btemp,postinc1
 14601  01AFC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14602  01AFC8  0EF2               	movlw	low _dst_name
 14603  01AFCA  6EE6               	movwf	postinc1,c
 14604  01AFCC  0E01               	movlw	high _dst_name
 14605  01AFCE  6EE6               	movwf	postinc1,c
 14606  01AFD0  ECDA  F0D1         	call	_getname	;wreg free
 14607  01AFD4  0EF2               	movlw	low _dst_name
 14608  01AFD6  0100               	movlb	0	; () banked
 14609  01AFD8  6F78               	movwf	(___tzname+2)& (0+255),b
 14610  01AFDA  0E01               	movlw	high _dst_name
 14611  01AFDC  6F79               	movwf	(___tzname+3)& (0+255),b
 14612                           
 14613                           ; BSR set to: 0
 14614  01AFDE  0101               	movlb	1	; () banked
 14615  01AFE0  51F2               	movf	_dst_name& (0+255),w,b
 14616  01AFE2  B4D8               	btfsc	status,2,c
 14617  01AFE4  D070               	goto	l3942
 14618                           
 14619                           ; BSR set to: 1
 14620  01AFE6  0E00               	movlw	0
 14621  01AFE8  0100               	movlb	0	; () banked
 14622  01AFEA  6FC7               	movwf	(___daylight+1)& (0+255),b
 14623  01AFEC  0E01               	movlw	1
 14624  01AFEE  6FC6               	movwf	___daylight& (0+255),b
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;stkvar	_s @ sp[(-2)+0]
 14628  01AFF0  50E1               	movf	fsr1l,w,c
 14629  01AFF2  0FFE               	addlw	-2
 14630  01AFF4  6ED9               	movwf	fsr2l,c
 14631  01AFF6  50E2               	movf	fsr1h,w,c
 14632  01AFF8  6EDA               	movwf	fsr2h,c
 14633  01AFFA  0EFF               	movlw	255
 14634  01AFFC  22DA               	addwfc	fsr2h,f,c
 14635  01AFFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 14636  01B004  006F FF77 FFF7     	movff	postdec2,tblptrh
 14637  01B00A                     	if	0	;tblptru may be non-zero
 14638  01B00A                     	endif
 14639  01B00A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14640  01B00A  0E00               	movlw	low (__mediumconst shr (0+16))
 14641  01B00C  6EF8               	movwf	tblptru,c
 14642  01B00E                     	endif
 14643  01B00E  0008               	tblrd		*
 14644  01B010  50F5               	movf	tablat,w,c
 14645  01B012  0A2B               	xorlw	43
 14646  01B014  B4D8               	btfsc	status,2,c
 14647  01B016  D035               	goto	u15710
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;stkvar	_s @ sp[(-2)+0]
 14651  01B018  50E1               	movf	fsr1l,w,c
 14652  01B01A  0FFE               	addlw	-2
 14653  01B01C  6ED9               	movwf	fsr2l,c
 14654  01B01E  50E2               	movf	fsr1h,w,c
 14655  01B020  6EDA               	movwf	fsr2h,c
 14656  01B022  0EFF               	movlw	255
 14657  01B024  22DA               	addwfc	fsr2h,f,c
 14658  01B026  006F FF7B FFF6     	movff	postinc2,tblptrl
 14659  01B02C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14660  01B032                     	if	0	;tblptru may be non-zero
 14661  01B032                     	endif
 14662  01B032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14663  01B032  0E00               	movlw	low (__mediumconst shr (0+16))
 14664  01B034  6EF8               	movwf	tblptru,c
 14665  01B036                     	endif
 14666  01B036  0008               	tblrd		*
 14667  01B038  50F5               	movf	tablat,w,c
 14668  01B03A  0A2D               	xorlw	45
 14669  01B03C  B4D8               	btfsc	status,2,c
 14670  01B03E  D021               	goto	u15710
 14671                           
 14672                           ; BSR set to: 0
 14673  01B040  0ED0               	movlw	208
 14674  01B042  6E0B               	movwf	(btemp+10)^0,c
 14675  01B044  0EFF               	movlw	255
 14676  01B046  6E0C               	movwf	(btemp+11)^0,c
 14677                           
 14678                           ;stkvar	_s @ sp[(-2)+0]
 14679  01B048  50E1               	movf	fsr1l,w,c
 14680  01B04A  0FFE               	addlw	-2
 14681  01B04C  6ED9               	movwf	fsr2l,c
 14682  01B04E  50E2               	movf	fsr1h,w,c
 14683  01B050  6EDA               	movwf	fsr2h,c
 14684  01B052  0EFF               	movlw	255
 14685  01B054  22DA               	addwfc	fsr2h,f,c
 14686  01B056  006F FF7B FFF6     	movff	postinc2,tblptrl
 14687  01B05C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14688  01B062                     	if	0	;tblptru may be non-zero
 14689  01B062                     	endif
 14690  01B062                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14691  01B062  0E00               	movlw	low (__mediumconst shr (0+16))
 14692  01B064  6EF8               	movwf	tblptru,c
 14693  01B066                     	endif
 14694  01B066  0008               	tblrd		*
 14695  01B068  50F5               	movf	tablat,w,c
 14696  01B06A  6E09               	movwf	(btemp+8)^0,c
 14697  01B06C  6A0A               	clrf	(btemp+9)^0,c
 14698  01B06E  500B               	movf	(btemp+10)^0,w,c
 14699  01B070  2609               	addwf	(btemp+8)^0,f,c
 14700  01B072  500C               	movf	(btemp+11)^0,w,c
 14701  01B074  220A               	addwfc	(btemp+9)^0,f,c
 14702  01B076  500A               	movf	(btemp+9)^0,w,c
 14703  01B078  E119               	bnz	l16117
 14704  01B07A  0E0A               	movlw	10
 14705  01B07C  5C09               	subwf	(btemp+8)^0,w,c
 14706  01B07E  B0D8               	btfsc	status,0,c
 14707  01B080  D015               	goto	l16117
 14708  01B082                     u15710:
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;stkvar	_s @ sp[(-2)+0]
 14712  01B082  0EFE               	movlw	254
 14713  01B084  24E1               	addwf	fsr1l,w,c
 14714  01B086  6E01               	movwf	btemp^0,c
 14715  01B088  0EFF               	movlw	255
 14716  01B08A  20E2               	addwfc	fsr1h,w,c
 14717  01B08C  6E02               	movwf	(btemp+1)^0,c
 14718  01B08E  0060  F007  FFE6   	movff	btemp,postinc1
 14719  01B094  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14720  01B09A  EC09  F0E0         	call	_getoff	;wreg free
 14721  01B09E  0060  F004  F0C4   	movff	btemp,_dst_off
 14722  01B0A4  0060  F008  F0C5   	movff	btemp+1,_dst_off+1
 14723  01B0AA  D012               	goto	l16119
 14724  01B0AC                     l16117:
 14725                           
 14726                           ; BSR set to: 0
 14727  01B0AC  0060  F1E8  F00B   	movff	___timezone,btemp+10
 14728  01B0B2  0060  F1EC  F00C   	movff	___timezone+1,btemp+11
 14729  01B0B8  0EF0               	movlw	240
 14730  01B0BA  240B               	addwf	(btemp+10)^0,w,c
 14731  01B0BC  6FC4               	movwf	_dst_off& (0+255),b
 14732  01B0BE  0EF1               	movlw	241
 14733  01B0C0  200C               	addwfc	(btemp+11)^0,w,c
 14734  01B0C2  6FC5               	movwf	(_dst_off+1)& (0+255),b
 14735  01B0C4  D005               	goto	l16119
 14736  01B0C6                     l3942:
 14737                           
 14738                           ; BSR set to: 1
 14739  01B0C6  0100               	movlb	0	; () banked
 14740  01B0C8  6BC6               	clrf	___daylight& (0+255),b
 14741  01B0CA  6BC7               	clrf	(___daylight+1)& (0+255),b
 14742  01B0CC  6BC4               	clrf	_dst_off& (0+255),b
 14743  01B0CE  6BC5               	clrf	(_dst_off+1)& (0+255),b
 14744  01B0D0                     l16119:
 14745                           
 14746                           ;stkvar	_s @ sp[(-2)+0]
 14747  01B0D0  50E1               	movf	fsr1l,w,c
 14748  01B0D2  0FFE               	addlw	-2
 14749  01B0D4  6ED9               	movwf	fsr2l,c
 14750  01B0D6  50E2               	movf	fsr1h,w,c
 14751  01B0D8  6EDA               	movwf	fsr2h,c
 14752  01B0DA  0EFF               	movlw	255
 14753  01B0DC  22DA               	addwfc	fsr2h,f,c
 14754  01B0DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 14755  01B0E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 14756  01B0EA                     	if	0	;tblptru may be non-zero
 14757  01B0EA                     	endif
 14758  01B0EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14759  01B0EA  0E00               	movlw	low (__mediumconst shr (0+16))
 14760  01B0EC  6EF8               	movwf	tblptru,c
 14761  01B0EE                     	endif
 14762  01B0EE  0008               	tblrd		*
 14763  01B0F0  50F5               	movf	tablat,w,c
 14764  01B0F2  0A2C               	xorlw	44
 14765  01B0F4  A4D8               	btfss	status,2,c
 14766  01B0F6  D023               	goto	l16125
 14767                           
 14768                           ;stkvar	_s @ sp[(-2)+0]
 14769  01B0F8  0EFE               	movlw	-2
 14770  01B0FA  50E3               	movf	plusw1,w,c
 14771  01B0FC  0F01               	addlw	1
 14772  01B0FE  6E01               	movwf	btemp^0,c
 14773  01B100  0EFE               	movlw	-2
 14774  01B102  0060  F007  FFE3   	movff	btemp,plusw1
 14775  01B108  6A01               	clrf	btemp^0,c
 14776  01B10A  0EFF               	movlw	-1
 14777  01B10C  50E3               	movf	plusw1,w,c
 14778  01B10E  2001               	addwfc	btemp^0,w,c
 14779  01B110  6E01               	movwf	btemp^0,c
 14780  01B112  0EFF               	movlw	-1
 14781  01B114  0060  F007  FFE3   	movff	btemp,plusw1
 14782  01B11A  0EDE               	movlw	low _r0
 14783  01B11C  6EE6               	movwf	postinc1,c
 14784  01B11E  0E02               	movlw	high _r0
 14785  01B120  6EE6               	movwf	postinc1,c
 14786                           
 14787                           ;stkvar	_s @ sp[(-4)+0]
 14788  01B122  0EFC               	movlw	252
 14789  01B124  24E1               	addwf	fsr1l,w,c
 14790  01B126  6E01               	movwf	btemp^0,c
 14791  01B128  0EFF               	movlw	255
 14792  01B12A  20E2               	addwfc	fsr1h,w,c
 14793  01B12C  6E02               	movwf	(btemp+1)^0,c
 14794  01B12E  0060  F007  FFE6   	movff	btemp,postinc1
 14795  01B134  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14796  01B13A  ECD9  F0D8         	call	_getrule	;wreg free
 14797  01B13E                     l16125:
 14798                           
 14799                           ;stkvar	_s @ sp[(-2)+0]
 14800  01B13E  50E1               	movf	fsr1l,w,c
 14801  01B140  0FFE               	addlw	-2
 14802  01B142  6ED9               	movwf	fsr2l,c
 14803  01B144  50E2               	movf	fsr1h,w,c
 14804  01B146  6EDA               	movwf	fsr2h,c
 14805  01B148  0EFF               	movlw	255
 14806  01B14A  22DA               	addwfc	fsr2h,f,c
 14807  01B14C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14808  01B152  006F FF77 FFF7     	movff	postdec2,tblptrh
 14809  01B158                     	if	0	;tblptru may be non-zero
 14810  01B158                     	endif
 14811  01B158                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14812  01B158  0E00               	movlw	low (__mediumconst shr (0+16))
 14813  01B15A  6EF8               	movwf	tblptru,c
 14814  01B15C                     	endif
 14815  01B15C  0008               	tblrd		*
 14816  01B15E  50F5               	movf	tablat,w,c
 14817  01B160  0A2C               	xorlw	44
 14818  01B162  A4D8               	btfss	status,2,c
 14819  01B164  D023               	goto	l3950
 14820                           
 14821                           ;stkvar	_s @ sp[(-2)+0]
 14822  01B166  0EFE               	movlw	-2
 14823  01B168  50E3               	movf	plusw1,w,c
 14824  01B16A  0F01               	addlw	1
 14825  01B16C  6E01               	movwf	btemp^0,c
 14826  01B16E  0EFE               	movlw	-2
 14827  01B170  0060  F007  FFE3   	movff	btemp,plusw1
 14828  01B176  6A01               	clrf	btemp^0,c
 14829  01B178  0EFF               	movlw	-1
 14830  01B17A  50E3               	movf	plusw1,w,c
 14831  01B17C  2001               	addwfc	btemp^0,w,c
 14832  01B17E  6E01               	movwf	btemp^0,c
 14833  01B180  0EFF               	movlw	-1
 14834  01B182  0060  F007  FFE3   	movff	btemp,plusw1
 14835  01B188  0ED4               	movlw	low _r1
 14836  01B18A  6EE6               	movwf	postinc1,c
 14837  01B18C  0E02               	movlw	high _r1
 14838  01B18E  6EE6               	movwf	postinc1,c
 14839                           
 14840                           ;stkvar	_s @ sp[(-4)+0]
 14841  01B190  0EFC               	movlw	252
 14842  01B192  24E1               	addwf	fsr1l,w,c
 14843  01B194  6E01               	movwf	btemp^0,c
 14844  01B196  0EFF               	movlw	255
 14845  01B198  20E2               	addwfc	fsr1h,w,c
 14846  01B19A  6E02               	movwf	(btemp+1)^0,c
 14847  01B19C  0060  F007  FFE6   	movff	btemp,postinc1
 14848  01B1A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14849  01B1A8  ECD9  F0D8         	call	_getrule	;wreg free
 14850  01B1AC                     l3950:
 14851                           
 14852                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 14853  01B1AC  52E5               	movf	postdec1,f,c
 14854  01B1AE  52E5               	movf	postdec1,f,c
 14855  01B1B0  0012               	return		;funcret
 14856  01B1B2                     __end_of_do_tzset:
 14857                           	opt callstack 0
 14858                           
 14859 ;; *************** function _getrule *****************
 14860 ;; Defined at:
 14861 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;  p               2  [STACK] PTR PTR const unsigned c
 14864 ;;		 -> s(2), 
 14865 ;;  rule            2  [STACK] PTR int 
 14866 ;;		 -> r1(10), r0(10), 
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;  r               2  [STACK] int 
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1  [STACK] void 
 14871 ;; Registers used:
 14872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/0
 14875 ;;		On exit  : 0/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14882 ;;Total ram usage:        0 bytes
 14883 ;; Hardware stack levels used:    1
 14884 ;; Hardware stack levels required when called:   17
 14885 ;; This function calls:
 14886 ;;		_getint
 14887 ;;		_getoff
 14888 ;; This function is called by:
 14889 ;;		_do_tzset
 14890 ;; This function uses a reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text42
 14894  01B1B2                     __ptext42:
 14895                           	opt callstack 0
 14896  01B1B2                     _getrule:
 14897                           	opt callstack 0
 14898                           
 14899                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14900  01B1B2  52E6               	movf	postinc1,f,c
 14901  01B1B4  52E6               	movf	postinc1,f,c
 14902                           
 14903                           ;stkvar	_p @ sp[(-2)+-2]
 14904                           
 14905                           ;incstack = 0
 14906  01B1B6  0EFC               	movlw	-4
 14907  01B1B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14908  01B1BE  0EFD               	movlw	-3
 14909  01B1C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14910  01B1C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14911  01B1CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14912  01B1D2                     	if	0	;tblptru may be non-zero
 14913  01B1D2                     	endif
 14914  01B1D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14915  01B1D2  0E00               	movlw	low (__mediumconst shr (0+16))
 14916  01B1D4  6EF8               	movwf	tblptru,c
 14917  01B1D6                     	endif
 14918  01B1D6  0008               	tblrd		*
 14919  01B1D8  50F5               	movf	tablat,w,c
 14920  01B1DA  6E0B               	movwf	(btemp+10)^0,c
 14921  01B1DC  6A0C               	clrf	(btemp+11)^0,c
 14922                           
 14923                           ;stkvar	_rule @ sp[(-2)+-4]
 14924  01B1DE  0EFA               	movlw	-6
 14925  01B1E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14926  01B1E6  0EFB               	movlw	-5
 14927  01B1E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14928  01B1EE  0060  F02F  FFDE   	movff	btemp+10,postinc2
 14929  01B1F4  0060  F033  FFDD   	movff	btemp+11,postdec2
 14930  01B1FA  006F FF78  F00B    	movff	postinc2,btemp+10
 14931  01B200  006F FF74  F00C    	movff	postdec2,btemp+11
 14932                           
 14933                           ;stkvar	_r @ sp[(-2)+0]
 14934  01B206  0EFE               	movlw	-2
 14935  01B208  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14936  01B20E  0EFF               	movlw	-1
 14937  01B210  0060  F033  FFE3   	movff	btemp+11,plusw1
 14938                           
 14939                           ;stkvar	_r @ sp[(-2)+0]
 14940  01B216  0EFE               	movlw	-2
 14941  01B218  006F FF8C  F001    	movff	plusw1,btemp
 14942  01B21E  0E4D               	movlw	77
 14943  01B220  1801               	xorwf	btemp^0,w,c
 14944  01B222  E104               	bnz	u15290
 14945  01B224  0EFF               	movlw	-1
 14946  01B226  50E3               	movf	plusw1,w,c
 14947  01B228  B4D8               	btfsc	status,2,c
 14948  01B22A  D036               	goto	l15821
 14949  01B22C                     u15290:
 14950                           
 14951                           ;stkvar	_r @ sp[(-2)+0]
 14952  01B22C  0EFE               	movlw	-2
 14953  01B22E  006F FF8C  F001    	movff	plusw1,btemp
 14954  01B234  0E4A               	movlw	74
 14955  01B236  1801               	xorwf	btemp^0,w,c
 14956  01B238  E110               	bnz	l15817
 14957  01B23A  0EFF               	movlw	-1
 14958  01B23C  50E3               	movf	plusw1,w,c
 14959  01B23E  A4D8               	btfss	status,2,c
 14960  01B240  D00C               	goto	l15817
 14961                           
 14962                           ;stkvar	_p @ sp[(-2)+-2]
 14963  01B242  0EFC               	movlw	-4
 14964  01B244  006F FF8F FFD9     	movff	plusw1,fsr2l
 14965  01B24A  0EFD               	movlw	-3
 14966  01B24C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14967  01B252  2ADE               	incf	postinc2,f,c
 14968  01B254  0E00               	movlw	0
 14969  01B256  22DD               	addwfc	postdec2,f,c
 14970  01B258  D00C               	goto	l15819
 14971  01B25A                     l15817:
 14972                           
 14973                           ;stkvar	_rule @ sp[(-2)+-4]
 14974  01B25A  0EFA               	movlw	-6
 14975  01B25C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14976  01B262  0EFB               	movlw	-5
 14977  01B264  006F FF8F FFDA     	movff	plusw1,fsr2h
 14978  01B26A  0E00               	movlw	0
 14979  01B26C  6EDE               	movwf	postinc2,c
 14980  01B26E  0E00               	movlw	0
 14981  01B270  6EDD               	movwf	postdec2,c
 14982  01B272                     l15819:
 14983                           
 14984                           ;stkvar	_p @ sp[(-2)+-2]
 14985  01B272  0EFC               	movlw	-4
 14986  01B274  006F FF8F FFE6     	movff	plusw1,postinc1
 14987  01B27A  006F FF8F FFE6     	movff	plusw1,postinc1
 14988  01B280  ECBE  F0F8         	call	_getint	;wreg free
 14989                           
 14990                           ;stkvar	_rule @ sp[(-2)+-4]
 14991  01B284  0EFA               	movlw	-6
 14992  01B286  006F FF8C  F00B    	movff	plusw1,btemp+10
 14993  01B28C  0EFB               	movlw	-5
 14994  01B28E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14995  01B294  0E02               	movlw	2
 14996  01B296  D06D               	goto	L15
 14997  01B298                     l15821:
 14998                           
 14999                           ;stkvar	_p @ sp[(-2)+-2]
 15000  01B298  0EFC               	movlw	-4
 15001  01B29A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15002  01B2A0  0EFD               	movlw	-3
 15003  01B2A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15004  01B2A8  2ADE               	incf	postinc2,f,c
 15005  01B2AA  0E00               	movlw	0
 15006  01B2AC  22DD               	addwfc	postdec2,f,c
 15007                           
 15008                           ;stkvar	_p @ sp[(-2)+-2]
 15009  01B2AE  0EFC               	movlw	-4
 15010  01B2B0  006F FF8F FFE6     	movff	plusw1,postinc1
 15011  01B2B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15012  01B2BC  ECBE  F0F8         	call	_getint	;wreg free
 15013                           
 15014                           ;stkvar	_rule @ sp[(-2)+-4]
 15015  01B2C0  0EFA               	movlw	-6
 15016  01B2C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15017  01B2C8  0EFB               	movlw	-5
 15018  01B2CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15019  01B2D0  0E02               	movlw	2
 15020  01B2D2  240B               	addwf	(btemp+10)^0,w,c
 15021  01B2D4  6ED9               	movwf	fsr2l,c
 15022  01B2D6  0E00               	movlw	0
 15023  01B2D8  200C               	addwfc	(btemp+11)^0,w,c
 15024  01B2DA  6EDA               	movwf	fsr2h,c
 15025  01B2DC  0060  F007  FFDE   	movff	btemp,postinc2
 15026  01B2E2  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15027                           
 15028                           ;stkvar	_p @ sp[(-2)+-2]
 15029  01B2E8  0EFC               	movlw	-4
 15030  01B2EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15031  01B2F0  0EFD               	movlw	-3
 15032  01B2F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15033  01B2F8  2ADE               	incf	postinc2,f,c
 15034  01B2FA  0E00               	movlw	0
 15035  01B2FC  22DD               	addwfc	postdec2,f,c
 15036                           
 15037                           ;stkvar	_p @ sp[(-2)+-2]
 15038  01B2FE  0EFC               	movlw	-4
 15039  01B300  006F FF8F FFE6     	movff	plusw1,postinc1
 15040  01B306  006F FF8F FFE6     	movff	plusw1,postinc1
 15041  01B30C  ECBE  F0F8         	call	_getint	;wreg free
 15042                           
 15043                           ;stkvar	_rule @ sp[(-2)+-4]
 15044  01B310  0EFA               	movlw	-6
 15045  01B312  006F FF8C  F00B    	movff	plusw1,btemp+10
 15046  01B318  0EFB               	movlw	-5
 15047  01B31A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15048  01B320  0E04               	movlw	4
 15049  01B322  240B               	addwf	(btemp+10)^0,w,c
 15050  01B324  6ED9               	movwf	fsr2l,c
 15051  01B326  0E00               	movlw	0
 15052  01B328  200C               	addwfc	(btemp+11)^0,w,c
 15053  01B32A  6EDA               	movwf	fsr2h,c
 15054  01B32C  0060  F007  FFDE   	movff	btemp,postinc2
 15055  01B332  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15056                           
 15057                           ;stkvar	_p @ sp[(-2)+-2]
 15058  01B338  0EFC               	movlw	-4
 15059  01B33A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15060  01B340  0EFD               	movlw	-3
 15061  01B342  006F FF8F FFDA     	movff	plusw1,fsr2h
 15062  01B348  2ADE               	incf	postinc2,f,c
 15063  01B34A  0E00               	movlw	0
 15064  01B34C  22DD               	addwfc	postdec2,f,c
 15065                           
 15066                           ;stkvar	_p @ sp[(-2)+-2]
 15067  01B34E  0EFC               	movlw	-4
 15068  01B350  006F FF8F FFE6     	movff	plusw1,postinc1
 15069  01B356  006F FF8F FFE6     	movff	plusw1,postinc1
 15070  01B35C  ECBE  F0F8         	call	_getint	;wreg free
 15071                           
 15072                           ;stkvar	_rule @ sp[(-2)+-4]
 15073  01B360  0EFA               	movlw	-6
 15074  01B362  006F FF8C  F00B    	movff	plusw1,btemp+10
 15075  01B368  0EFB               	movlw	-5
 15076  01B36A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15077  01B370  0E06               	movlw	6
 15078  01B372                     L15:
 15079  01B372  240B               	addwf	(btemp+10)^0,w,c
 15080  01B374  6ED9               	movwf	fsr2l,c
 15081  01B376  0E00               	movlw	0
 15082  01B378  200C               	addwfc	(btemp+11)^0,w,c
 15083  01B37A  6EDA               	movwf	fsr2h,c
 15084  01B37C  0060  F007  FFDE   	movff	btemp,postinc2
 15085  01B382  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15086                           
 15087                           ;stkvar	_p @ sp[(-2)+-2]
 15088  01B388  0EFC               	movlw	-4
 15089  01B38A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15090  01B390  0EFD               	movlw	-3
 15091  01B392  006F FF8F FFDA     	movff	plusw1,fsr2h
 15092  01B398  006F FF7B FFF6     	movff	postinc2,tblptrl
 15093  01B39E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15094  01B3A4                     	if	0	;tblptru may be non-zero
 15095  01B3A4                     	endif
 15096  01B3A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15097  01B3A4  0E00               	movlw	low (__mediumconst shr (0+16))
 15098  01B3A6  6EF8               	movwf	tblptru,c
 15099  01B3A8                     	endif
 15100  01B3A8  0008               	tblrd		*
 15101  01B3AA  50F5               	movf	tablat,w,c
 15102  01B3AC  0A2F               	xorlw	47
 15103  01B3AE  A4D8               	btfss	status,2,c
 15104  01B3B0  D029               	goto	l15837
 15105                           
 15106                           ;stkvar	_p @ sp[(-2)+-2]
 15107  01B3B2  0EFC               	movlw	-4
 15108  01B3B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15109  01B3BA  0EFD               	movlw	-3
 15110  01B3BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15111  01B3C2  2ADE               	incf	postinc2,f,c
 15112  01B3C4  0E00               	movlw	0
 15113  01B3C6  22DD               	addwfc	postdec2,f,c
 15114                           
 15115                           ;stkvar	_p @ sp[(-2)+-2]
 15116  01B3C8  0EFC               	movlw	-4
 15117  01B3CA  006F FF8F FFE6     	movff	plusw1,postinc1
 15118  01B3D0  006F FF8F FFE6     	movff	plusw1,postinc1
 15119  01B3D6  EC09  F0E0         	call	_getoff	;wreg free
 15120                           
 15121                           ;stkvar	_rule @ sp[(-2)+-4]
 15122  01B3DA  0EFA               	movlw	-6
 15123  01B3DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15124  01B3E2  0EFB               	movlw	-5
 15125  01B3E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15126  01B3EA  0E08               	movlw	8
 15127  01B3EC  240B               	addwf	(btemp+10)^0,w,c
 15128  01B3EE  6ED9               	movwf	fsr2l,c
 15129  01B3F0  0E00               	movlw	0
 15130  01B3F2  200C               	addwfc	(btemp+11)^0,w,c
 15131  01B3F4  6EDA               	movwf	fsr2h,c
 15132  01B3F6  0060  F007  FFDE   	movff	btemp,postinc2
 15133  01B3FC  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15134  01B402  D012               	goto	l3915
 15135  01B404                     l15837:
 15136                           
 15137                           ;stkvar	_rule @ sp[(-2)+-4]
 15138  01B404  0EFA               	movlw	-6
 15139  01B406  006F FF8C  F00B    	movff	plusw1,btemp+10
 15140  01B40C  0EFB               	movlw	-5
 15141  01B40E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15142  01B414  0E08               	movlw	8
 15143  01B416  240B               	addwf	(btemp+10)^0,w,c
 15144  01B418  6ED9               	movwf	fsr2l,c
 15145  01B41A  0E00               	movlw	0
 15146  01B41C  200C               	addwfc	(btemp+11)^0,w,c
 15147  01B41E  6EDA               	movwf	fsr2h,c
 15148  01B420  0E20               	movlw	32
 15149  01B422  6EDE               	movwf	postinc2,c
 15150  01B424  0E1C               	movlw	28
 15151  01B426  6EDD               	movwf	postdec2,c
 15152  01B428                     l3915:
 15153                           
 15154                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15155  01B428  0EFA               	movlw	250
 15156  01B42A  26E1               	addwf	fsr1l,f,c
 15157  01B42C  0EFF               	movlw	255
 15158  01B42E  22E2               	addwfc	fsr1h,f,c
 15159  01B430  0012               	return		;funcret
 15160  01B432                     __end_of_getrule:
 15161                           	opt callstack 0
 15162                           
 15163 ;; *************** function _getoff *****************
 15164 ;; Defined at:
 15165 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;  p               2  [STACK] PTR PTR const unsigned c
 15168 ;;		 -> s(2), 
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;  off             2  [STACK] int 
 15171 ;;  neg             2  [STACK] int 
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  2  [STACK] int 
 15174 ;; Registers used:
 15175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15185 ;;Total ram usage:        0 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:   16
 15188 ;; This function calls:
 15189 ;;		_getint
 15190 ;; This function is called by:
 15191 ;;		_getrule
 15192 ;;		_do_tzset
 15193 ;; This function uses a reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text43
 15197  01C012                     __ptext43:
 15198                           	opt callstack 0
 15199  01C012                     _getoff:
 15200                           	opt callstack 0
 15201                           
 15202                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15203  01C012  52E6               	movf	postinc1,f,c
 15204  01C014  52E6               	movf	postinc1,f,c
 15205  01C016  52E6               	movf	postinc1,f,c
 15206  01C018  52E6               	movf	postinc1,f,c
 15207                           
 15208                           ;stkvar	_neg @ sp[(-4)+2]
 15209                           
 15210                           ;incstack = 0
 15211  01C01A  0EFE               	movlw	-2
 15212  01C01C  6AE3               	clrf	plusw1,c
 15213  01C01E  0EFF               	movlw	-1
 15214  01C020  6AE3               	clrf	plusw1,c
 15215                           
 15216                           ;stkvar	_p @ sp[(-4)+-2]
 15217  01C022  0EFA               	movlw	-6
 15218  01C024  006F FF8F FFD9     	movff	plusw1,fsr2l
 15219  01C02A  0EFB               	movlw	-5
 15220  01C02C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15221  01C032  006F FF7B FFF6     	movff	postinc2,tblptrl
 15222  01C038  006F FF77 FFF7     	movff	postdec2,tblptrh
 15223  01C03E                     	if	0	;tblptru may be non-zero
 15224  01C03E                     	endif
 15225  01C03E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15226  01C03E  0E00               	movlw	low (__mediumconst shr (0+16))
 15227  01C040  6EF8               	movwf	tblptru,c
 15228  01C042                     	endif
 15229  01C042  0008               	tblrd		*
 15230  01C044  50F5               	movf	tablat,w,c
 15231  01C046  0A2D               	xorlw	45
 15232  01C048  A4D8               	btfss	status,2,c
 15233  01C04A  D018               	goto	l10755
 15234                           
 15235                           ;stkvar	_p @ sp[(-4)+-2]
 15236  01C04C  0EFA               	movlw	-6
 15237  01C04E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15238  01C054  0EFB               	movlw	-5
 15239  01C056  006F FF8F FFDA     	movff	plusw1,fsr2h
 15240  01C05C  2ADE               	incf	postinc2,f,c
 15241  01C05E  0E00               	movlw	0
 15242  01C060  22DD               	addwfc	postdec2,f,c
 15243  01C062  0E01               	movlw	1
 15244  01C064  6E0B               	movwf	(btemp+10)^0,c
 15245  01C066  0E00               	movlw	0
 15246  01C068  6E0C               	movwf	(btemp+11)^0,c
 15247                           
 15248                           ;stkvar	_neg @ sp[(-4)+2]
 15249  01C06A  0EFE               	movlw	-2
 15250  01C06C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15251  01C072  0EFF               	movlw	-1
 15252  01C074  0060  F033  FFE3   	movff	btemp+11,plusw1
 15253  01C07A  D020               	goto	l10759
 15254  01C07C                     l10755:
 15255                           
 15256                           ;stkvar	_p @ sp[(-4)+-2]
 15257  01C07C  0EFA               	movlw	-6
 15258  01C07E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15259  01C084  0EFB               	movlw	-5
 15260  01C086  006F FF8F FFDA     	movff	plusw1,fsr2h
 15261  01C08C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15262  01C092  006F FF77 FFF7     	movff	postdec2,tblptrh
 15263  01C098                     	if	0	;tblptru may be non-zero
 15264  01C098                     	endif
 15265  01C098                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15266  01C098  0E00               	movlw	low (__mediumconst shr (0+16))
 15267  01C09A  6EF8               	movwf	tblptru,c
 15268  01C09C                     	endif
 15269  01C09C  0008               	tblrd		*
 15270  01C09E  50F5               	movf	tablat,w,c
 15271  01C0A0  0A2B               	xorlw	43
 15272  01C0A2  A4D8               	btfss	status,2,c
 15273  01C0A4  D00B               	goto	l10759
 15274                           
 15275                           ;stkvar	_p @ sp[(-4)+-2]
 15276  01C0A6  0EFA               	movlw	-6
 15277  01C0A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15278  01C0AE  0EFB               	movlw	-5
 15279  01C0B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15280  01C0B6  2ADE               	incf	postinc2,f,c
 15281  01C0B8  0E00               	movlw	0
 15282  01C0BA  22DD               	addwfc	postdec2,f,c
 15283  01C0BC                     l10759:
 15284                           
 15285                           ;stkvar	_p @ sp[(-4)+-2]
 15286  01C0BC  0EFA               	movlw	-6
 15287  01C0BE  006F FF8F FFE6     	movff	plusw1,postinc1
 15288  01C0C4  006F FF8F FFE6     	movff	plusw1,postinc1
 15289  01C0CA  ECBE  F0F8         	call	_getint	;wreg free
 15290  01C0CE  0060  F004  F00B   	movff	btemp,btemp+10
 15291  01C0D4  0060  F008  F00C   	movff	btemp+1,btemp+11
 15292  01C0DA  0E10               	movlw	16
 15293  01C0DC  020B               	mulwf	(btemp+10)^0,c
 15294  01C0DE  006F FFCC  F009    	movff	prodl,btemp+8
 15295  01C0E4  006F FFD0  F00A    	movff	prodh,btemp+9
 15296  01C0EA  020C               	mulwf	(btemp+11)^0,c
 15297  01C0EC  50F3               	movf	prodl,w,c
 15298  01C0EE  260A               	addwf	(btemp+9)^0,f,c
 15299  01C0F0  0E0E               	movlw	14
 15300  01C0F2  020B               	mulwf	(btemp+10)^0,c
 15301  01C0F4  50F3               	movf	prodl,w,c
 15302  01C0F6  260A               	addwf	(btemp+9)^0,f,c
 15303                           
 15304                           ;stkvar	_off @ sp[(-4)+0]
 15305  01C0F8  0EFC               	movlw	-4
 15306  01C0FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 15307  01C100  0EFD               	movlw	-3
 15308  01C102  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15309                           
 15310                           ;stkvar	_p @ sp[(-4)+-2]
 15311  01C108  0EFA               	movlw	-6
 15312  01C10A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15313  01C110  0EFB               	movlw	-5
 15314  01C112  006F FF8F FFDA     	movff	plusw1,fsr2h
 15315  01C118  006F FF7B FFF6     	movff	postinc2,tblptrl
 15316  01C11E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15317  01C124                     	if	0	;tblptru may be non-zero
 15318  01C124                     	endif
 15319  01C124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15320  01C124  0E00               	movlw	low (__mediumconst shr (0+16))
 15321  01C126  6EF8               	movwf	tblptru,c
 15322  01C128                     	endif
 15323  01C128  0008               	tblrd		*
 15324  01C12A  50F5               	movf	tablat,w,c
 15325  01C12C  0A3A               	xorlw	58
 15326  01C12E  A4D8               	btfss	status,2,c
 15327  01C130  D064               	goto	l10773
 15328                           
 15329                           ;stkvar	_p @ sp[(-4)+-2]
 15330  01C132  0EFA               	movlw	-6
 15331  01C134  006F FF8F FFD9     	movff	plusw1,fsr2l
 15332  01C13A  0EFB               	movlw	-5
 15333  01C13C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15334  01C142  2ADE               	incf	postinc2,f,c
 15335  01C144  0E00               	movlw	0
 15336  01C146  22DD               	addwfc	postdec2,f,c
 15337                           
 15338                           ;stkvar	_p @ sp[(-4)+-2]
 15339  01C148  0EFA               	movlw	-6
 15340  01C14A  006F FF8F FFE6     	movff	plusw1,postinc1
 15341  01C150  006F FF8F FFE6     	movff	plusw1,postinc1
 15342  01C156  ECBE  F0F8         	call	_getint	;wreg free
 15343  01C15A  0060  F004  F00B   	movff	btemp,btemp+10
 15344  01C160  0060  F008  F00C   	movff	btemp+1,btemp+11
 15345  01C166  0E3C               	movlw	60
 15346  01C168  020B               	mulwf	(btemp+10)^0,c
 15347  01C16A  006F FFCC  F009    	movff	prodl,btemp+8
 15348  01C170  006F FFD0  F00A    	movff	prodh,btemp+9
 15349  01C176  020C               	mulwf	(btemp+11)^0,c
 15350  01C178  50F3               	movf	prodl,w,c
 15351  01C17A  260A               	addwf	(btemp+9)^0,f,c
 15352                           
 15353                           ;stkvar	_off @ sp[(-4)+0]
 15354  01C17C  50E1               	movf	fsr1l,w,c
 15355  01C17E  0FFC               	addlw	-4
 15356  01C180  6ED9               	movwf	fsr2l,c
 15357  01C182  50E2               	movf	fsr1h,w,c
 15358  01C184  6EDA               	movwf	fsr2h,c
 15359  01C186  0EFF               	movlw	255
 15360  01C188  22DA               	addwfc	fsr2h,f,c
 15361  01C18A  5009               	movf	(btemp+8)^0,w,c
 15362  01C18C  26DE               	addwf	postinc2,f,c
 15363  01C18E  500A               	movf	(btemp+9)^0,w,c
 15364  01C190  22DD               	addwfc	postdec2,f,c
 15365                           
 15366                           ;stkvar	_p @ sp[(-4)+-2]
 15367  01C192  0EFA               	movlw	-6
 15368  01C194  006F FF8F FFD9     	movff	plusw1,fsr2l
 15369  01C19A  0EFB               	movlw	-5
 15370  01C19C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15371  01C1A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15372  01C1A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15373  01C1AE                     	if	0	;tblptru may be non-zero
 15374  01C1AE                     	endif
 15375  01C1AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15376  01C1AE  0E00               	movlw	low (__mediumconst shr (0+16))
 15377  01C1B0  6EF8               	movwf	tblptru,c
 15378  01C1B2                     	endif
 15379  01C1B2  0008               	tblrd		*
 15380  01C1B4  50F5               	movf	tablat,w,c
 15381  01C1B6  0A3A               	xorlw	58
 15382  01C1B8  A4D8               	btfss	status,2,c
 15383  01C1BA  D01F               	goto	l10773
 15384                           
 15385                           ;stkvar	_p @ sp[(-4)+-2]
 15386  01C1BC  0EFA               	movlw	-6
 15387  01C1BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15388  01C1C4  0EFB               	movlw	-5
 15389  01C1C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15390  01C1CC  2ADE               	incf	postinc2,f,c
 15391  01C1CE  0E00               	movlw	0
 15392  01C1D0  22DD               	addwfc	postdec2,f,c
 15393                           
 15394                           ;stkvar	_p @ sp[(-4)+-2]
 15395  01C1D2  0EFA               	movlw	-6
 15396  01C1D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15397  01C1DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15398  01C1E0  ECBE  F0F8         	call	_getint	;wreg free
 15399                           
 15400                           ;stkvar	_off @ sp[(-4)+0]
 15401  01C1E4  50E1               	movf	fsr1l,w,c
 15402  01C1E6  0FFC               	addlw	-4
 15403  01C1E8  6ED9               	movwf	fsr2l,c
 15404  01C1EA  50E2               	movf	fsr1h,w,c
 15405  01C1EC  6EDA               	movwf	fsr2h,c
 15406  01C1EE  0EFF               	movlw	255
 15407  01C1F0  22DA               	addwfc	fsr2h,f,c
 15408  01C1F2  5001               	movf	btemp^0,w,c
 15409  01C1F4  26DE               	addwf	postinc2,f,c
 15410  01C1F6  5002               	movf	(btemp+1)^0,w,c
 15411  01C1F8  22DD               	addwfc	postdec2,f,c
 15412  01C1FA                     l10773:
 15413                           
 15414                           ;stkvar	_neg @ sp[(-4)+2]
 15415  01C1FA  0EFE               	movlw	-2
 15416  01C1FC  006F FF8C  F001    	movff	plusw1,btemp
 15417  01C202  0EFF               	movlw	-1
 15418  01C204  50E3               	movf	plusw1,w,c
 15419  01C206  1001               	iorwf	btemp^0,w,c
 15420  01C208  A4D8               	btfss	status,2,c
 15421  01C20A  D009               	goto	l10777
 15422                           
 15423                           ;stkvar	_off @ sp[(-4)+0]
 15424  01C20C  0EFC               	movlw	-4
 15425  01C20E  006F FF8C  F001    	movff	plusw1,btemp
 15426  01C214  0EFD               	movlw	-3
 15427  01C216  006F FF8C  F002    	movff	plusw1,btemp+1
 15428  01C21C  D00D               	goto	l3906
 15429  01C21E                     l10777:
 15430                           
 15431                           ;stkvar	_off @ sp[(-4)+0]
 15432  01C21E  0EFC               	movlw	-4
 15433  01C220  006F FF8C  F001    	movff	plusw1,btemp
 15434  01C226  1E01               	comf	btemp^0,f,c
 15435  01C228  0EFD               	movlw	-3
 15436  01C22A  006F FF8C  F002    	movff	plusw1,btemp+1
 15437  01C230  1E02               	comf	(btemp+1)^0,f,c
 15438  01C232  2A01               	incf	btemp^0,f,c
 15439  01C234  B4D8               	btfsc	status,2,c
 15440  01C236  2A02               	incf	(btemp+1)^0,f,c
 15441  01C238                     l3906:
 15442                           
 15443                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15444  01C238  0EFA               	movlw	250
 15445  01C23A  26E1               	addwf	fsr1l,f,c
 15446  01C23C  0EFF               	movlw	255
 15447  01C23E  22E2               	addwfc	fsr1h,f,c
 15448  01C240  0012               	return		;funcret
 15449  01C242                     __end_of_getoff:
 15450                           	opt callstack 0
 15451                           
 15452 ;; *************** function _getint *****************
 15453 ;; Defined at:
 15454 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;  p               2  [STACK] PTR PTR const unsigned c
 15457 ;;		 -> s(2), 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  x               2  [STACK] unsigned int 
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  2  [STACK] int 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15473 ;;Total ram usage:        0 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:   15
 15476 ;; This function calls:
 15477 ;;		Nothing
 15478 ;; This function is called by:
 15479 ;;		_getoff
 15480 ;;		_getrule
 15481 ;; This function uses a reentrant model
 15482 ;;
 15483                           
 15484                           	psect	text44
 15485  01F17C                     __ptext44:
 15486                           	opt callstack 0
 15487  01F17C                     _getint:
 15488                           	opt callstack 0
 15489                           
 15490                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15491  01F17C  52E6               	movf	postinc1,f,c
 15492  01F17E  52E6               	movf	postinc1,f,c
 15493                           
 15494                           ;stkvar	_x @ sp[(-2)+0]
 15495                           
 15496                           ;incstack = 0
 15497  01F180  0EFE               	movlw	-2
 15498  01F182  6AE3               	clrf	plusw1,c
 15499  01F184  0EFF               	movlw	-1
 15500  01F186  6AE3               	clrf	plusw1,c
 15501  01F188  D043               	goto	l9911
 15502  01F18A                     l9907:
 15503  01F18A  0ED0               	movlw	208
 15504  01F18C  6E0B               	movwf	(btemp+10)^0,c
 15505  01F18E  0EFF               	movlw	255
 15506  01F190  6E0C               	movwf	(btemp+11)^0,c
 15507                           
 15508                           ;stkvar	_x @ sp[(-2)+0]
 15509  01F192  0EFE               	movlw	-2
 15510  01F194  006F FF8C  F009    	movff	plusw1,btemp+8
 15511  01F19A  0EFF               	movlw	-1
 15512  01F19C  006F FF8C  F00A    	movff	plusw1,btemp+9
 15513  01F1A2  0E0A               	movlw	10
 15514  01F1A4  0209               	mulwf	(btemp+8)^0,c
 15515  01F1A6  006F FFCC  F007    	movff	prodl,btemp+6
 15516  01F1AC  006F FFD0  F008    	movff	prodh,btemp+7
 15517  01F1B2  020A               	mulwf	(btemp+9)^0,c
 15518  01F1B4  50F3               	movf	prodl,w,c
 15519  01F1B6  2608               	addwf	(btemp+7)^0,f,c
 15520                           
 15521                           ;stkvar	_p @ sp[(-2)+-2]
 15522  01F1B8  0EFC               	movlw	-4
 15523  01F1BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15524  01F1C0  0EFD               	movlw	-3
 15525  01F1C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15526  01F1C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15527  01F1CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15528  01F1D4                     	if	0	;tblptru may be non-zero
 15529  01F1D4                     	endif
 15530  01F1D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15531  01F1D4  0E00               	movlw	low (__mediumconst shr (0+16))
 15532  01F1D6  6EF8               	movwf	tblptru,c
 15533  01F1D8                     	endif
 15534  01F1D8  0008               	tblrd		*
 15535  01F1DA  50F5               	movf	tablat,w,c
 15536  01F1DC  2607               	addwf	(btemp+6)^0,f,c
 15537  01F1DE  0E00               	movlw	0
 15538  01F1E0  2208               	addwfc	(btemp+7)^0,f,c
 15539  01F1E2  500B               	movf	(btemp+10)^0,w,c
 15540  01F1E4  2607               	addwf	(btemp+6)^0,f,c
 15541  01F1E6  500C               	movf	(btemp+11)^0,w,c
 15542  01F1E8  2208               	addwfc	(btemp+7)^0,f,c
 15543                           
 15544                           ;stkvar	_x @ sp[(-2)+0]
 15545  01F1EA  0EFE               	movlw	-2
 15546  01F1EC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15547  01F1F2  0EFF               	movlw	-1
 15548  01F1F4  0060  F023  FFE3   	movff	btemp+7,plusw1
 15549                           
 15550                           ;stkvar	_p @ sp[(-2)+-2]
 15551  01F1FA  0EFC               	movlw	-4
 15552  01F1FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15553  01F202  0EFD               	movlw	-3
 15554  01F204  006F FF8F FFDA     	movff	plusw1,fsr2h
 15555  01F20A  2ADE               	incf	postinc2,f,c
 15556  01F20C  0E00               	movlw	0
 15557  01F20E  22DD               	addwfc	postdec2,f,c
 15558  01F210                     l9911:
 15559  01F210  0ED0               	movlw	208
 15560  01F212  6E0B               	movwf	(btemp+10)^0,c
 15561  01F214  0EFF               	movlw	255
 15562  01F216  6E0C               	movwf	(btemp+11)^0,c
 15563                           
 15564                           ;stkvar	_p @ sp[(-2)+-2]
 15565  01F218  0EFC               	movlw	-4
 15566  01F21A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15567  01F220  0EFD               	movlw	-3
 15568  01F222  006F FF8F FFDA     	movff	plusw1,fsr2h
 15569  01F228  006F FF7B FFF6     	movff	postinc2,tblptrl
 15570  01F22E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15571  01F234                     	if	0	;tblptru may be non-zero
 15572  01F234                     	endif
 15573  01F234                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15574  01F234  0E00               	movlw	low (__mediumconst shr (0+16))
 15575  01F236  6EF8               	movwf	tblptru,c
 15576  01F238                     	endif
 15577  01F238  0008               	tblrd		*
 15578  01F23A  50F5               	movf	tablat,w,c
 15579  01F23C  6E09               	movwf	(btemp+8)^0,c
 15580  01F23E  6A0A               	clrf	(btemp+9)^0,c
 15581  01F240  500B               	movf	(btemp+10)^0,w,c
 15582  01F242  2609               	addwf	(btemp+8)^0,f,c
 15583  01F244  500C               	movf	(btemp+11)^0,w,c
 15584  01F246  220A               	addwfc	(btemp+9)^0,f,c
 15585  01F248  500A               	movf	(btemp+9)^0,w,c
 15586  01F24A  E104               	bnz	u7570
 15587  01F24C  0E0A               	movlw	10
 15588  01F24E  5C09               	subwf	(btemp+8)^0,w,c
 15589  01F250  A0D8               	btfss	status,0,c
 15590  01F252  D79B               	goto	l9907
 15591  01F254                     u7570:
 15592                           
 15593                           ;stkvar	_x @ sp[(-2)+0]
 15594  01F254  0EFE               	movlw	-2
 15595  01F256  006F FF8C  F001    	movff	plusw1,btemp
 15596  01F25C  0EFF               	movlw	-1
 15597  01F25E  006F FF8C  F002    	movff	plusw1,btemp+1
 15598                           
 15599                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15600  01F264  52E5               	movf	postdec1,f,c
 15601  01F266  52E5               	movf	postdec1,f,c
 15602  01F268  52E5               	movf	postdec1,f,c
 15603  01F26A  52E5               	movf	postdec1,f,c
 15604  01F26C  0012               	return		;funcret
 15605  01F26E                     __end_of_getint:
 15606                           	opt callstack 0
 15607                           
 15608 ;; *************** function _getname *****************
 15609 ;; Defined at:
 15610 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15611 ;; Parameters:    Size  Location     Type
 15612 ;;  d               2  [STACK] PTR unsigned char 
 15613 ;;		 -> dst_name(7), std_name(7), 
 15614 ;;  p               2  [STACK] PTR PTR const unsigned c
 15615 ;;		 -> s(2), 
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;  i               2  [STACK] int 
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  1  [STACK] void 
 15620 ;; Registers used:
 15621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 15622 ;; Tracked objects:
 15623 ;;		On entry : 0/1
 15624 ;;		On exit  : 0/0
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15631 ;;Total ram usage:        0 bytes
 15632 ;; Hardware stack levels used:    1
 15633 ;; Hardware stack levels required when called:   15
 15634 ;; This function calls:
 15635 ;;		Nothing
 15636 ;; This function is called by:
 15637 ;;		_do_tzset
 15638 ;; This function uses a reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text45
 15642  01A3B4                     __ptext45:
 15643                           	opt callstack 0
 15644  01A3B4                     _getname:
 15645                           	opt callstack 0
 15646                           
 15647                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15648  01A3B4  52E6               	movf	postinc1,f,c
 15649  01A3B6  52E6               	movf	postinc1,f,c
 15650                           
 15651                           ;stkvar	_p @ sp[(-2)+-4]
 15652                           
 15653                           ;incstack = 0
 15654  01A3B8  0EFA               	movlw	-6
 15655  01A3BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15656  01A3C0  0EFB               	movlw	-5
 15657  01A3C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15658  01A3C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15659  01A3CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15660  01A3D4                     	if	0	;tblptru may be non-zero
 15661  01A3D4                     	endif
 15662  01A3D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15663  01A3D4  0E00               	movlw	low (__mediumconst shr (0+16))
 15664  01A3D6  6EF8               	movwf	tblptru,c
 15665  01A3D8                     	endif
 15666  01A3D8  0008               	tblrd		*
 15667  01A3DA  50F5               	movf	tablat,w,c
 15668  01A3DC  0A3C               	xorlw	60
 15669  01A3DE  A4D8               	btfss	status,2,c
 15670  01A3E0  D09E               	goto	l15855
 15671                           
 15672                           ;stkvar	_p @ sp[(-2)+-4]
 15673  01A3E2  0EFA               	movlw	-6
 15674  01A3E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15675  01A3EA  0EFB               	movlw	-5
 15676  01A3EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15677  01A3F2  2ADE               	incf	postinc2,f,c
 15678  01A3F4  0E00               	movlw	0
 15679  01A3F6  22DD               	addwfc	postdec2,f,c
 15680                           
 15681                           ;stkvar	_i @ sp[(-2)+0]
 15682  01A3F8  0EFE               	movlw	-2
 15683  01A3FA  6AE3               	clrf	plusw1,c
 15684  01A3FC  0EFF               	movlw	-1
 15685  01A3FE  6AE3               	clrf	plusw1,c
 15686  01A400  D04D               	goto	l15849
 15687  01A402                     l15845:
 15688                           
 15689                           ;stkvar	_i @ sp[(-2)+0]
 15690  01A402  0EFE               	movlw	-2
 15691  01A404  006F FF8C  F00B    	movff	plusw1,btemp+10
 15692  01A40A  0EFF               	movlw	-1
 15693  01A40C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15694                           
 15695                           ;stkvar	_p @ sp[(-2)+-4]
 15696  01A412  0EFA               	movlw	-6
 15697  01A414  006F FF8F FFD9     	movff	plusw1,fsr2l
 15698  01A41A  0EFB               	movlw	-5
 15699  01A41C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15700  01A422  006F FF78  F009    	movff	postinc2,btemp+8
 15701  01A428  006F FF74  F00A    	movff	postdec2,btemp+9
 15702  01A42E  500B               	movf	(btemp+10)^0,w,c
 15703  01A430  2609               	addwf	(btemp+8)^0,f,c
 15704  01A432  500C               	movf	(btemp+11)^0,w,c
 15705  01A434  220A               	addwfc	(btemp+9)^0,f,c
 15706  01A436  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15707  01A43C  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15708  01A442                     	if	0	;tblptru may be non-zero
 15709  01A442                     	endif
 15710  01A442                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15711  01A442  0E00               	movlw	low (__mediumconst shr (0+16))
 15712  01A444  6EF8               	movwf	tblptru,c
 15713  01A446                     	endif
 15714                           
 15715                           ;stkvar	_i @ sp[(-2)+0]
 15716  01A446  0EFE               	movlw	-2
 15717  01A448  006F FF8C  F00B    	movff	plusw1,btemp+10
 15718  01A44E  0EFF               	movlw	-1
 15719  01A450  006F FF8C  F00C    	movff	plusw1,btemp+11
 15720                           
 15721                           ;stkvar	_d @ sp[(-2)+-2]
 15722  01A456  0EFC               	movlw	-4
 15723  01A458  006F FF8C  F009    	movff	plusw1,btemp+8
 15724  01A45E  0EFD               	movlw	-3
 15725  01A460  006F FF8C  F00A    	movff	plusw1,btemp+9
 15726  01A466  500B               	movf	(btemp+10)^0,w,c
 15727  01A468  2409               	addwf	(btemp+8)^0,w,c
 15728  01A46A  6ED9               	movwf	fsr2l,c
 15729  01A46C  500C               	movf	(btemp+11)^0,w,c
 15730  01A46E  200A               	addwfc	(btemp+9)^0,w,c
 15731  01A470  6EDA               	movwf	fsr2h,c
 15732  01A472  0008               	tblrd		*
 15733  01A474  006F FFD7 FFDF     	movff	tablat,indf2
 15734                           
 15735                           ;stkvar	_i @ sp[(-2)+0]
 15736  01A47A  0EFE               	movlw	-2
 15737  01A47C  50E3               	movf	plusw1,w,c
 15738  01A47E  0F01               	addlw	1
 15739  01A480  6E01               	movwf	btemp^0,c
 15740  01A482  0EFE               	movlw	-2
 15741  01A484  0060  F007  FFE3   	movff	btemp,plusw1
 15742  01A48A  6A01               	clrf	btemp^0,c
 15743  01A48C  0EFF               	movlw	-1
 15744  01A48E  50E3               	movf	plusw1,w,c
 15745  01A490  2001               	addwfc	btemp^0,w,c
 15746  01A492  6E01               	movwf	btemp^0,c
 15747  01A494  0EFF               	movlw	-1
 15748  01A496  0060  F007  FFE3   	movff	btemp,plusw1
 15749  01A49C                     l15849:
 15750                           
 15751                           ;stkvar	_i @ sp[(-2)+0]
 15752  01A49C  0EFE               	movlw	-2
 15753  01A49E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15754  01A4A4  0EFF               	movlw	-1
 15755  01A4A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15756                           
 15757                           ;stkvar	_p @ sp[(-2)+-4]
 15758  01A4AC  0EFA               	movlw	-6
 15759  01A4AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15760  01A4B4  0EFB               	movlw	-5
 15761  01A4B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15762  01A4BC  006F FF78  F009    	movff	postinc2,btemp+8
 15763  01A4C2  006F FF74  F00A    	movff	postdec2,btemp+9
 15764  01A4C8  500B               	movf	(btemp+10)^0,w,c
 15765  01A4CA  2609               	addwf	(btemp+8)^0,f,c
 15766  01A4CC  500C               	movf	(btemp+11)^0,w,c
 15767  01A4CE  220A               	addwfc	(btemp+9)^0,f,c
 15768  01A4D0  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15769  01A4D6  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15770  01A4DC                     	if	0	;tblptru may be non-zero
 15771  01A4DC                     	endif
 15772  01A4DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15773  01A4DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15774  01A4DE  6EF8               	movwf	tblptru,c
 15775  01A4E0                     	endif
 15776  01A4E0  0008               	tblrd		*
 15777  01A4E2  50F5               	movf	tablat,w,c
 15778  01A4E4  0A3E               	xorlw	62
 15779  01A4E6  B4D8               	btfsc	status,2,c
 15780  01A4E8  D00E               	goto	u15340
 15781                           
 15782                           ;stkvar	_i @ sp[(-2)+0]
 15783  01A4EA  0EFF               	movlw	-1
 15784  01A4EC  BEE3               	btfsc	plusw1,7,c
 15785  01A4EE  D789               	goto	l15845
 15786  01A4F0  0EFF               	movlw	-1
 15787  01A4F2  50E3               	movf	plusw1,w,c
 15788  01A4F4  E108               	bnz	u15340
 15789  01A4F6  0EFE               	movlw	-2
 15790  01A4F8  006F FF8C  F001    	movff	plusw1,btemp
 15791  01A4FE  0E06               	movlw	6
 15792  01A500  5E01               	subwf	btemp^0,f,c
 15793  01A502  A0D8               	btfss	status,0,c
 15794  01A504  D77E               	goto	l15845
 15795  01A506                     u15340:
 15796                           
 15797                           ;stkvar	_p @ sp[(-2)+-4]
 15798  01A506  0EFA               	movlw	-6
 15799  01A508  006F FF8F FFD9     	movff	plusw1,fsr2l
 15800  01A50E  0EFB               	movlw	-5
 15801  01A510  006F FF8F FFDA     	movff	plusw1,fsr2h
 15802  01A516  2ADE               	incf	postinc2,f,c
 15803  01A518  0E00               	movlw	0
 15804  01A51A  22DD               	addwfc	postdec2,f,c
 15805  01A51C  D098               	goto	u15360
 15806  01A51E                     l15855:
 15807                           
 15808                           ;stkvar	_i @ sp[(-2)+0]
 15809  01A51E  0EFE               	movlw	-2
 15810  01A520  6AE3               	clrf	plusw1,c
 15811  01A522  0EFF               	movlw	-1
 15812  01A524  6AE3               	clrf	plusw1,c
 15813  01A526  D04D               	goto	l15861
 15814  01A528                     l15857:
 15815                           
 15816                           ;stkvar	_i @ sp[(-2)+0]
 15817  01A528  0EFE               	movlw	-2
 15818  01A52A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15819  01A530  0EFF               	movlw	-1
 15820  01A532  006F FF8C  F00C    	movff	plusw1,btemp+11
 15821                           
 15822                           ;stkvar	_p @ sp[(-2)+-4]
 15823  01A538  0EFA               	movlw	-6
 15824  01A53A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15825  01A540  0EFB               	movlw	-5
 15826  01A542  006F FF8F FFDA     	movff	plusw1,fsr2h
 15827  01A548  006F FF78  F009    	movff	postinc2,btemp+8
 15828  01A54E  006F FF74  F00A    	movff	postdec2,btemp+9
 15829  01A554  500B               	movf	(btemp+10)^0,w,c
 15830  01A556  2609               	addwf	(btemp+8)^0,f,c
 15831  01A558  500C               	movf	(btemp+11)^0,w,c
 15832  01A55A  220A               	addwfc	(btemp+9)^0,f,c
 15833  01A55C  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15834  01A562  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15835  01A568                     	if	0	;tblptru may be non-zero
 15836  01A568                     	endif
 15837  01A568                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15838  01A568  0E00               	movlw	low (__mediumconst shr (0+16))
 15839  01A56A  6EF8               	movwf	tblptru,c
 15840  01A56C                     	endif
 15841                           
 15842                           ;stkvar	_i @ sp[(-2)+0]
 15843  01A56C  0EFE               	movlw	-2
 15844  01A56E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15845  01A574  0EFF               	movlw	-1
 15846  01A576  006F FF8C  F00C    	movff	plusw1,btemp+11
 15847                           
 15848                           ;stkvar	_d @ sp[(-2)+-2]
 15849  01A57C  0EFC               	movlw	-4
 15850  01A57E  006F FF8C  F009    	movff	plusw1,btemp+8
 15851  01A584  0EFD               	movlw	-3
 15852  01A586  006F FF8C  F00A    	movff	plusw1,btemp+9
 15853  01A58C  500B               	movf	(btemp+10)^0,w,c
 15854  01A58E  2409               	addwf	(btemp+8)^0,w,c
 15855  01A590  6ED9               	movwf	fsr2l,c
 15856  01A592  500C               	movf	(btemp+11)^0,w,c
 15857  01A594  200A               	addwfc	(btemp+9)^0,w,c
 15858  01A596  6EDA               	movwf	fsr2h,c
 15859  01A598  0008               	tblrd		*
 15860  01A59A  006F FFD7 FFDF     	movff	tablat,indf2
 15861                           
 15862                           ;stkvar	_i @ sp[(-2)+0]
 15863  01A5A0  0EFE               	movlw	-2
 15864  01A5A2  50E3               	movf	plusw1,w,c
 15865  01A5A4  0F01               	addlw	1
 15866  01A5A6  6E01               	movwf	btemp^0,c
 15867  01A5A8  0EFE               	movlw	-2
 15868  01A5AA  0060  F007  FFE3   	movff	btemp,plusw1
 15869  01A5B0  6A01               	clrf	btemp^0,c
 15870  01A5B2  0EFF               	movlw	-1
 15871  01A5B4  50E3               	movf	plusw1,w,c
 15872  01A5B6  2001               	addwfc	btemp^0,w,c
 15873  01A5B8  6E01               	movwf	btemp^0,c
 15874  01A5BA  0EFF               	movlw	-1
 15875  01A5BC  0060  F007  FFE3   	movff	btemp,plusw1
 15876  01A5C2                     l15861:
 15877  01A5C2  0E9F               	movlw	159
 15878  01A5C4  6E0B               	movwf	(btemp+10)^0,c
 15879  01A5C6  0EFF               	movlw	255
 15880  01A5C8  6E0C               	movwf	(btemp+11)^0,c
 15881                           
 15882                           ;stkvar	_i @ sp[(-2)+0]
 15883  01A5CA  0EFE               	movlw	-2
 15884  01A5CC  006F FF8C  F009    	movff	plusw1,btemp+8
 15885  01A5D2  0EFF               	movlw	-1
 15886  01A5D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 15887                           
 15888                           ;stkvar	_p @ sp[(-2)+-4]
 15889  01A5DA  0EFA               	movlw	-6
 15890  01A5DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15891  01A5E2  0EFB               	movlw	-5
 15892  01A5E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15893  01A5EA  006F FF78  F007    	movff	postinc2,btemp+6
 15894  01A5F0  006F FF74  F008    	movff	postdec2,btemp+7
 15895  01A5F6  5009               	movf	(btemp+8)^0,w,c
 15896  01A5F8  2607               	addwf	(btemp+6)^0,f,c
 15897  01A5FA  500A               	movf	(btemp+9)^0,w,c
 15898  01A5FC  2208               	addwfc	(btemp+7)^0,f,c
 15899  01A5FE  0060  F01F  FFF6   	movff	btemp+6,tblptrl
 15900  01A604  0060  F023  FFF7   	movff	btemp+7,tblptrh
 15901  01A60A                     	if	0	;tblptru may be non-zero
 15902  01A60A                     	endif
 15903  01A60A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15904  01A60A  0E00               	movlw	low (__mediumconst shr (0+16))
 15905  01A60C  6EF8               	movwf	tblptru,c
 15906  01A60E                     	endif
 15907  01A60E  0008               	tblrd		*
 15908  01A610  50F5               	movf	tablat,w,c
 15909  01A612  6E09               	movwf	(btemp+8)^0,c
 15910  01A614  6A0A               	clrf	(btemp+9)^0,c
 15911  01A616  0E20               	movlw	32
 15912  01A618  1209               	iorwf	(btemp+8)^0,f,c
 15913  01A61A  0E00               	movlw	0
 15914  01A61C  120A               	iorwf	(btemp+9)^0,f,c
 15915  01A61E  500B               	movf	(btemp+10)^0,w,c
 15916  01A620  2609               	addwf	(btemp+8)^0,f,c
 15917  01A622  500C               	movf	(btemp+11)^0,w,c
 15918  01A624  220A               	addwfc	(btemp+9)^0,f,c
 15919  01A626  500A               	movf	(btemp+9)^0,w,c
 15920  01A628  E112               	bnz	l15865
 15921  01A62A  0E1A               	movlw	26
 15922  01A62C  5C09               	subwf	(btemp+8)^0,w,c
 15923  01A62E  B0D8               	btfsc	status,0,c
 15924  01A630  D00E               	goto	u15360
 15925                           
 15926                           ;stkvar	_i @ sp[(-2)+0]
 15927  01A632  0EFF               	movlw	-1
 15928  01A634  BEE3               	btfsc	plusw1,7,c
 15929  01A636  D778               	goto	l15857
 15930  01A638  0EFF               	movlw	-1
 15931  01A63A  50E3               	movf	plusw1,w,c
 15932  01A63C  E108               	bnz	u15360
 15933  01A63E  0EFE               	movlw	-2
 15934  01A640  006F FF8C  F001    	movff	plusw1,btemp
 15935  01A646  0E06               	movlw	6
 15936  01A648  5E01               	subwf	btemp^0,f,c
 15937  01A64A  A0D8               	btfss	status,0,c
 15938  01A64C  D76D               	goto	l15857
 15939  01A64E                     u15360:
 15940  01A64E                     l15865:
 15941                           
 15942                           ;stkvar	_i @ sp[(-2)+0]
 15943  01A64E  0EFE               	movlw	-2
 15944  01A650  006F FF8C  F00B    	movff	plusw1,btemp+10
 15945  01A656  0EFF               	movlw	-1
 15946  01A658  006F FF8C  F00C    	movff	plusw1,btemp+11
 15947                           
 15948                           ;stkvar	_p @ sp[(-2)+-4]
 15949  01A65E  0EFA               	movlw	-6
 15950  01A660  006F FF8F FFD9     	movff	plusw1,fsr2l
 15951  01A666  0EFB               	movlw	-5
 15952  01A668  006F FF8F FFDA     	movff	plusw1,fsr2h
 15953  01A66E  500B               	movf	(btemp+10)^0,w,c
 15954  01A670  26DE               	addwf	postinc2,f,c
 15955  01A672  500C               	movf	(btemp+11)^0,w,c
 15956  01A674  22DD               	addwfc	postdec2,f,c
 15957                           
 15958                           ;stkvar	_i @ sp[(-2)+0]
 15959  01A676  0EFE               	movlw	-2
 15960  01A678  006F FF8C  F00B    	movff	plusw1,btemp+10
 15961  01A67E  0EFF               	movlw	-1
 15962  01A680  006F FF8C  F00C    	movff	plusw1,btemp+11
 15963                           
 15964                           ;stkvar	_d @ sp[(-2)+-2]
 15965  01A686  0EFC               	movlw	-4
 15966  01A688  006F FF8C  F009    	movff	plusw1,btemp+8
 15967  01A68E  0EFD               	movlw	-3
 15968  01A690  006F FF8C  F00A    	movff	plusw1,btemp+9
 15969  01A696  500B               	movf	(btemp+10)^0,w,c
 15970  01A698  2409               	addwf	(btemp+8)^0,w,c
 15971  01A69A  6ED9               	movwf	fsr2l,c
 15972  01A69C  500C               	movf	(btemp+11)^0,w,c
 15973  01A69E  200A               	addwfc	(btemp+9)^0,w,c
 15974  01A6A0  6EDA               	movwf	fsr2h,c
 15975  01A6A2  0E00               	movlw	0
 15976  01A6A4  6EDF               	movwf	indf2,c
 15977                           
 15978                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15979  01A6A6  0EFA               	movlw	250
 15980  01A6A8  26E1               	addwf	fsr1l,f,c
 15981  01A6AA  0EFF               	movlw	255
 15982  01A6AC  22E2               	addwfc	fsr1h,f,c
 15983  01A6AE  0012               	return		;funcret
 15984  01A6B0                     __end_of_getname:
 15985                           	opt callstack 0
 15986                           
 15987 ;; *************** function ___secs_to_tm *****************
 15988 ;; Defined at:
 15989 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 15990 ;; Parameters:    Size  Location     Type
 15991 ;;  t               8  [STACK] long long 
 15992 ;;  tm              2  [STACK] PTR struct tm
 15993 ;;		 -> localtime@tm(24), 
 15994 ;; Auto vars:     Size  Location     Type
 15995 ;;  years           8  [STACK] long long 
 15996 ;;  days            8  [STACK] long long 
 15997 ;;  secs            8  [STACK] long long 
 15998 ;;  remdays         4  [STACK] long 
 15999 ;;  q_cycles        4  [STACK] long 
 16000 ;;  c_cycles        4  [STACK] long 
 16001 ;;  remyears        4  [STACK] long 
 16002 ;;  remsecs         4  [STACK] long 
 16003 ;;  qc_cycles       4  [STACK] long 
 16004 ;;  months          2  [STACK] int 
 16005 ;;  leap            2  [STACK] int 
 16006 ;;  yday            2  [STACK] int 
 16007 ;;  wday            2  [STACK] int 
 16008 ;; Return value:  Size  Location     Type
 16009 ;;                  4  [STACK] long 
 16010 ;; Registers used:
 16011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16012 ;; Tracked objects:
 16013 ;;		On entry : 0/1
 16014 ;;		On exit  : 0/0
 16015 ;;		Unchanged: 0/0
 16016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16021 ;;Total ram usage:        0 bytes
 16022 ;; Hardware stack levels used:    1
 16023 ;; Hardware stack levels required when called:   16
 16024 ;; This function calls:
 16025 ;;		___aldiv
 16026 ;;		___almod
 16027 ;;		___aodiv
 16028 ;;		___aomod
 16029 ;;		___lmul
 16030 ;;		___omul
 16031 ;; This function is called by:
 16032 ;;		___localtime_r
 16033 ;; This function uses a reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text46
 16037  0125C2                     __ptext46:
 16038                           	opt callstack 0
 16039  0125C2                     ___secs_to_tm:
 16040                           	opt callstack 0
 16041                           
 16042                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16043  0125C2  0E39               	movlw	57
 16044  0125C4  26E1               	addwf	fsr1l,f,c
 16045  0125C6  0E00               	movlw	0
 16046  0125C8  22E2               	addwfc	fsr1h,f,c
 16047                           
 16048                           ;stkvar	_t @ sp[(-57)+-8]
 16049                           
 16050                           ;incstack = 0
 16051  0125CA  0EC6               	movlw	-58
 16052  0125CC  AEE3               	btfss	plusw1,7,c
 16053  0125CE  D026               	goto	u15950
 16054  0125D0  0EC1               	movlw	-63
 16055  0125D2  006F FF8C  F001    	movff	plusw1,btemp
 16056  0125D8  0E80               	movlw	128
 16057  0125DA  5E01               	subwf	btemp^0,f,c
 16058  0125DC  0EC2               	movlw	-62
 16059  0125DE  006F FF8C  F001    	movff	plusw1,btemp
 16060  0125E4  0EBD               	movlw	189
 16061  0125E6  5A01               	subwfb	btemp^0,f,c
 16062  0125E8  0EC3               	movlw	-61
 16063  0125EA  006F FF8C  F001    	movff	plusw1,btemp
 16064  0125F0  0E0E               	movlw	14
 16065  0125F2  5A01               	subwfb	btemp^0,f,c
 16066  0125F4  0EC4               	movlw	-60
 16067  0125F6  006F FF8C  F001    	movff	plusw1,btemp
 16068  0125FC  0EFF               	movlw	255
 16069  0125FE  5A01               	subwfb	btemp^0,f,c
 16070  012600  0EC5               	movlw	-59
 16071  012602  006F FF8C  F001    	movff	plusw1,btemp
 16072  012608  0EFF               	movlw	255
 16073  01260A  5A01               	subwfb	btemp^0,f,c
 16074  01260C  0EC6               	movlw	-58
 16075  01260E  006F FF8C  F001    	movff	plusw1,btemp
 16076  012614  0EFF               	movlw	255
 16077  012616  5A01               	subwfb	btemp^0,f,c
 16078  012618  A0D8               	btfss	status,0,c
 16079  01261A  D028               	goto	u15960
 16080  01261C                     u15950:
 16081                           
 16082                           ;stkvar	_t @ sp[(-57)+-8]
 16083  01261C  0EC6               	movlw	-58
 16084  01261E  BEE3               	btfsc	plusw1,7,c
 16085  012620  D02F               	goto	l16295
 16086  012622  0EC6               	movlw	-58
 16087  012624  50E3               	movf	plusw1,w,c
 16088  012626  E122               	bnz	u15960
 16089  012628  0EC5               	movlw	-59
 16090  01262A  50E3               	movf	plusw1,w,c
 16091  01262C  E11F               	bnz	u15960
 16092  01262E  0EC4               	movlw	-60
 16093  012630  50E3               	movf	plusw1,w,c
 16094  012632  E11C               	bnz	u15960
 16095  012634  0EBF               	movlw	-65
 16096  012636  04E3               	decf	plusw1,w,c
 16097  012638  0EC0               	movlw	-64
 16098  01263A  006F FF8C  F001    	movff	plusw1,btemp
 16099  012640  0E7B               	movlw	123
 16100  012642  5A01               	subwfb	btemp^0,f,c
 16101  012644  0EC1               	movlw	-63
 16102  012646  006F FF8C  F001    	movff	plusw1,btemp
 16103  01264C  0E9D               	movlw	157
 16104  01264E  5A01               	subwfb	btemp^0,f,c
 16105  012650  0EC2               	movlw	-62
 16106  012652  006F FF8C  F001    	movff	plusw1,btemp
 16107  012658  0E40               	movlw	64
 16108  01265A  5A01               	subwfb	btemp^0,f,c
 16109  01265C  0EC3               	movlw	-61
 16110  01265E  006F FF8C  F001    	movff	plusw1,btemp
 16111  012664  0EF1               	movlw	241
 16112  012666  5A01               	subwfb	btemp^0,f,c
 16113  012668  A0D8               	btfss	status,0,c
 16114  01266A  D00A               	goto	l16295
 16115  01266C                     u15960:
 16116  01266C  0EFF               	movlw	255
 16117  01266E  6E01               	movwf	btemp^0,c
 16118  012670  0EFF               	movlw	255
 16119  012672  6E02               	movwf	(btemp+1)^0,c
 16120  012674  0EFF               	movlw	255
 16121  012676  6E03               	movwf	(btemp+2)^0,c
 16122  012678  0EFF               	movlw	255
 16123  01267A  6E04               	movwf	(btemp+3)^0,c
 16124  01267C  EF45  F09B         	goto	l3822
 16125  012680                     l16295:
 16126                           
 16127                           ;stkvar	_t @ sp[(-57)+-8]
 16128  012680  0EBF               	movlw	-65
 16129  012682  50E3               	movf	plusw1,w,c
 16130  012684  0F80               	addlw	128
 16131  012686  6E11               	movwf	(btemp+16)^0,c
 16132  012688  0EC0               	movlw	-64
 16133  01268A  006F FF8C  F012    	movff	plusw1,btemp+17
 16134  012690  0EA2               	movlw	162
 16135  012692  2212               	addwfc	(btemp+17)^0,f,c
 16136  012694  0EC1               	movlw	-63
 16137  012696  006F FF8C  F013    	movff	plusw1,btemp+18
 16138  01269C  0E43               	movlw	67
 16139  01269E  2213               	addwfc	(btemp+18)^0,f,c
 16140  0126A0  0EC2               	movlw	-62
 16141  0126A2  006F FF8C  F014    	movff	plusw1,btemp+19
 16142  0126A8  0EC7               	movlw	199
 16143  0126AA  2214               	addwfc	(btemp+19)^0,f,c
 16144  0126AC  0EC3               	movlw	-61
 16145  0126AE  006F FF8C  F015    	movff	plusw1,btemp+20
 16146  0126B4  0EFF               	movlw	255
 16147  0126B6  2215               	addwfc	(btemp+20)^0,f,c
 16148  0126B8  0EC4               	movlw	-60
 16149  0126BA  006F FF8C  F016    	movff	plusw1,btemp+21
 16150  0126C0  0EFF               	movlw	255
 16151  0126C2  2216               	addwfc	(btemp+21)^0,f,c
 16152  0126C4  0EC5               	movlw	-59
 16153  0126C6  006F FF8C  F017    	movff	plusw1,btemp+22
 16154  0126CC  0EFF               	movlw	255
 16155  0126CE  2217               	addwfc	(btemp+22)^0,f,c
 16156  0126D0  0EC6               	movlw	-58
 16157  0126D2  006F FF8C  F018    	movff	plusw1,btemp+23
 16158  0126D8  0EFF               	movlw	255
 16159  0126DA  2218               	addwfc	(btemp+23)^0,f,c
 16160                           
 16161                           ;stkvar	_secs @ sp[(-57)+17]
 16162  0126DC  0ED8               	movlw	-40
 16163  0126DE  0060  F047  FFE3   	movff	btemp+16,plusw1
 16164  0126E4  0ED9               	movlw	-39
 16165  0126E6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16166  0126EC  0EDA               	movlw	-38
 16167  0126EE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16168  0126F4  0EDB               	movlw	-37
 16169  0126F6  0060  F053  FFE3   	movff	btemp+19,plusw1
 16170  0126FC  0EDC               	movlw	-36
 16171  0126FE  0060  F057  FFE3   	movff	btemp+20,plusw1
 16172  012704  0EDD               	movlw	-35
 16173  012706  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16174  01270C  0EDE               	movlw	-34
 16175  01270E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16176  012714  0EDF               	movlw	-33
 16177  012716  0060  F063  FFE3   	movff	btemp+23,plusw1
 16178  01271C  0E80               	movlw	128
 16179  01271E  6EE6               	movwf	postinc1,c
 16180  012720  0E51               	movlw	81
 16181  012722  6EE6               	movwf	postinc1,c
 16182  012724  0E01               	movlw	1
 16183  012726  6EE6               	movwf	postinc1,c
 16184  012728  0E00               	movlw	0
 16185  01272A  6EE6               	movwf	postinc1,c
 16186  01272C  0E00               	movlw	0
 16187  01272E  6EE6               	movwf	postinc1,c
 16188  012730  0E00               	movlw	0
 16189  012732  6EE6               	movwf	postinc1,c
 16190  012734  0E00               	movlw	0
 16191  012736  6EE6               	movwf	postinc1,c
 16192  012738  0E00               	movlw	0
 16193  01273A  6EE6               	movwf	postinc1,c
 16194                           
 16195                           ;stkvar	_secs @ sp[(-65)+17]
 16196  01273C  50E1               	movf	fsr1l,w,c
 16197  01273E  0FD0               	addlw	-48
 16198  012740  6ED9               	movwf	fsr2l,c
 16199  012742  50E2               	movf	fsr1h,w,c
 16200  012744  6EDA               	movwf	fsr2h,c
 16201  012746  0EFF               	movlw	255
 16202  012748  22DA               	addwfc	fsr2h,f,c
 16203  01274A  006F FF7B FFE6     	movff	postinc2,postinc1
 16204  012750  006F FF7B FFE6     	movff	postinc2,postinc1
 16205  012756  006F FF7B FFE6     	movff	postinc2,postinc1
 16206  01275C  006F FF7B FFE6     	movff	postinc2,postinc1
 16207  012762  006F FF7B FFE6     	movff	postinc2,postinc1
 16208  012768  006F FF7B FFE6     	movff	postinc2,postinc1
 16209  01276E  006F FF7B FFE6     	movff	postinc2,postinc1
 16210  012774  006F FF7B FFE6     	movff	postinc2,postinc1
 16211  01277A  EC19  F0DA         	call	___aodiv	;wreg free
 16212  01277E  52E5               	movf	postdec1,f,c
 16213  012780  006F FF9C  F018    	movff	indf1,btemp+23
 16214  012786  52E5               	movf	postdec1,f,c
 16215  012788  006F FF9C  F017    	movff	indf1,btemp+22
 16216  01278E  52E5               	movf	postdec1,f,c
 16217  012790  006F FF9C  F016    	movff	indf1,btemp+21
 16218  012796  52E5               	movf	postdec1,f,c
 16219  012798  006F FF9C  F015    	movff	indf1,btemp+20
 16220  01279E  52E5               	movf	postdec1,f,c
 16221  0127A0  006F FF9C  F014    	movff	indf1,btemp+19
 16222  0127A6  52E5               	movf	postdec1,f,c
 16223  0127A8  006F FF9C  F013    	movff	indf1,btemp+18
 16224  0127AE  52E5               	movf	postdec1,f,c
 16225  0127B0  006F FF9C  F012    	movff	indf1,btemp+17
 16226  0127B6  52E5               	movf	postdec1,f,c
 16227  0127B8  006F FF9C  F011    	movff	indf1,btemp+16
 16228  0127BE  0EF8               	movlw	248
 16229  0127C0  26E1               	addwf	fsr1l,f,c
 16230  0127C2  0EFF               	movlw	255
 16231  0127C4  22E2               	addwfc	fsr1h,f,c
 16232                           
 16233                           ;stkvar	_days @ sp[(-57)+9]
 16234  0127C6  0ED0               	movlw	-48
 16235  0127C8  0060  F047  FFE3   	movff	btemp+16,plusw1
 16236  0127CE  0ED1               	movlw	-47
 16237  0127D0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16238  0127D6  0ED2               	movlw	-46
 16239  0127D8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16240  0127DE  0ED3               	movlw	-45
 16241  0127E0  0060  F053  FFE3   	movff	btemp+19,plusw1
 16242  0127E6  0ED4               	movlw	-44
 16243  0127E8  0060  F057  FFE3   	movff	btemp+20,plusw1
 16244  0127EE  0ED5               	movlw	-43
 16245  0127F0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16246  0127F6  0ED6               	movlw	-42
 16247  0127F8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16248  0127FE  0ED7               	movlw	-41
 16249  012800  0060  F063  FFE3   	movff	btemp+23,plusw1
 16250  012806  0E80               	movlw	128
 16251  012808  6EE6               	movwf	postinc1,c
 16252  01280A  0E51               	movlw	81
 16253  01280C  6EE6               	movwf	postinc1,c
 16254  01280E  0E01               	movlw	1
 16255  012810  6EE6               	movwf	postinc1,c
 16256  012812  0E00               	movlw	0
 16257  012814  6EE6               	movwf	postinc1,c
 16258  012816  0E00               	movlw	0
 16259  012818  6EE6               	movwf	postinc1,c
 16260  01281A  0E00               	movlw	0
 16261  01281C  6EE6               	movwf	postinc1,c
 16262  01281E  0E00               	movlw	0
 16263  012820  6EE6               	movwf	postinc1,c
 16264  012822  0E00               	movlw	0
 16265  012824  6EE6               	movwf	postinc1,c
 16266                           
 16267                           ;stkvar	_secs @ sp[(-65)+17]
 16268  012826  50E1               	movf	fsr1l,w,c
 16269  012828  0FD0               	addlw	-48
 16270  01282A  6ED9               	movwf	fsr2l,c
 16271  01282C  50E2               	movf	fsr1h,w,c
 16272  01282E  6EDA               	movwf	fsr2h,c
 16273  012830  0EFF               	movlw	255
 16274  012832  22DA               	addwfc	fsr2h,f,c
 16275  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 16276  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 16277  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 16278  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 16279  01284C  006F FF7B FFE6     	movff	postinc2,postinc1
 16280  012852  006F FF7B FFE6     	movff	postinc2,postinc1
 16281  012858  006F FF7B FFE6     	movff	postinc2,postinc1
 16282  01285E  006F FF7B FFE6     	movff	postinc2,postinc1
 16283  012864  ECE9  F0DE         	call	___aomod	;wreg free
 16284  012868  52E5               	movf	postdec1,f,c
 16285  01286A  006F FF9C  F018    	movff	indf1,btemp+23
 16286  012870  52E5               	movf	postdec1,f,c
 16287  012872  006F FF9C  F017    	movff	indf1,btemp+22
 16288  012878  52E5               	movf	postdec1,f,c
 16289  01287A  006F FF9C  F016    	movff	indf1,btemp+21
 16290  012880  52E5               	movf	postdec1,f,c
 16291  012882  006F FF9C  F015    	movff	indf1,btemp+20
 16292  012888  52E5               	movf	postdec1,f,c
 16293  01288A  006F FF9C  F014    	movff	indf1,btemp+19
 16294  012890  52E5               	movf	postdec1,f,c
 16295  012892  006F FF9C  F013    	movff	indf1,btemp+18
 16296  012898  52E5               	movf	postdec1,f,c
 16297  01289A  006F FF9C  F012    	movff	indf1,btemp+17
 16298  0128A0  52E5               	movf	postdec1,f,c
 16299  0128A2  006F FF9C  F011    	movff	indf1,btemp+16
 16300  0128A8  0EF8               	movlw	248
 16301  0128AA  26E1               	addwf	fsr1l,f,c
 16302  0128AC  0EFF               	movlw	255
 16303  0128AE  22E2               	addwfc	fsr1h,f,c
 16304  0128B0  0060  F044  F009   	movff	btemp+16,btemp+8
 16305  0128B6  0060  F048  F00A   	movff	btemp+17,btemp+9
 16306  0128BC  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16307  0128C2  0060  F050  F00C   	movff	btemp+19,btemp+11
 16308                           
 16309                           ;stkvar	_remsecs @ sp[(-57)+41]
 16310  0128C8  0EF0               	movlw	-16
 16311  0128CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16312  0128D0  0EF1               	movlw	-15
 16313  0128D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16314  0128D8  0EF2               	movlw	-14
 16315  0128DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16316  0128E0  0EF3               	movlw	-13
 16317  0128E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16318                           
 16319                           ;stkvar	_remsecs @ sp[(-57)+41]
 16320  0128E8  0EF3               	movlw	-13
 16321  0128EA  AEE3               	btfss	plusw1,7,c
 16322  0128EC  D01F               	goto	l16307
 16323                           
 16324                           ;stkvar	_remsecs @ sp[(-57)+41]
 16325  0128EE  50E1               	movf	fsr1l,w,c
 16326  0128F0  0FF0               	addlw	-16
 16327  0128F2  6ED9               	movwf	fsr2l,c
 16328  0128F4  50E2               	movf	fsr1h,w,c
 16329  0128F6  6EDA               	movwf	fsr2h,c
 16330  0128F8  0EFF               	movlw	255
 16331  0128FA  22DA               	addwfc	fsr2h,f,c
 16332  0128FC  0E80               	movlw	128
 16333  0128FE  26DE               	addwf	postinc2,f,c
 16334  012900  0E51               	movlw	81
 16335  012902  22DE               	addwfc	postinc2,f,c
 16336  012904  0E01               	movlw	1
 16337  012906  22DE               	addwfc	postinc2,f,c
 16338  012908  0E00               	movlw	0
 16339  01290A  22DE               	addwfc	postinc2,f,c
 16340                           
 16341                           ;stkvar	_days @ sp[(-57)+9]
 16342  01290C  50E1               	movf	fsr1l,w,c
 16343  01290E  0FD0               	addlw	-48
 16344  012910  6ED9               	movwf	fsr2l,c
 16345  012912  50E2               	movf	fsr1h,w,c
 16346  012914  6EDA               	movwf	fsr2h,c
 16347  012916  0EFF               	movlw	255
 16348  012918  22DA               	addwfc	fsr2h,f,c
 16349  01291A  06DE               	decf	postinc2,f,c
 16350  01291C  0E00               	movlw	0
 16351  01291E  5ADE               	subwfb	postinc2,f,c
 16352  012920  5ADE               	subwfb	postinc2,f,c
 16353  012922  5ADE               	subwfb	postinc2,f,c
 16354  012924  5ADE               	subwfb	postinc2,f,c
 16355  012926  5ADE               	subwfb	postinc2,f,c
 16356  012928  5ADE               	subwfb	postinc2,f,c
 16357  01292A  5ADE               	subwfb	postinc2,f,c
 16358  01292C                     l16307:
 16359  01292C  0E07               	movlw	7
 16360  01292E  6EE6               	movwf	postinc1,c
 16361  012930  0E00               	movlw	0
 16362  012932  6EE6               	movwf	postinc1,c
 16363  012934  0E00               	movlw	0
 16364  012936  6EE6               	movwf	postinc1,c
 16365  012938  0E00               	movlw	0
 16366  01293A  6EE6               	movwf	postinc1,c
 16367  01293C  0E00               	movlw	0
 16368  01293E  6EE6               	movwf	postinc1,c
 16369  012940  0E00               	movlw	0
 16370  012942  6EE6               	movwf	postinc1,c
 16371  012944  0E00               	movlw	0
 16372  012946  6EE6               	movwf	postinc1,c
 16373  012948  0E00               	movlw	0
 16374  01294A  6EE6               	movwf	postinc1,c
 16375                           
 16376                           ;stkvar	_days @ sp[(-65)+9]
 16377  01294C  0EC8               	movlw	-56
 16378  01294E  50E3               	movf	plusw1,w,c
 16379  012950  0F03               	addlw	3
 16380  012952  6E11               	movwf	(btemp+16)^0,c
 16381  012954  0EC9               	movlw	-55
 16382  012956  006F FF8C  F012    	movff	plusw1,btemp+17
 16383  01295C  0E00               	movlw	0
 16384  01295E  2212               	addwfc	(btemp+17)^0,f,c
 16385  012960  0ECA               	movlw	-54
 16386  012962  006F FF8C  F013    	movff	plusw1,btemp+18
 16387  012968  0E00               	movlw	0
 16388  01296A  2213               	addwfc	(btemp+18)^0,f,c
 16389  01296C  0ECB               	movlw	-53
 16390  01296E  006F FF8C  F014    	movff	plusw1,btemp+19
 16391  012974  0E00               	movlw	0
 16392  012976  2214               	addwfc	(btemp+19)^0,f,c
 16393  012978  0ECC               	movlw	-52
 16394  01297A  006F FF8C  F015    	movff	plusw1,btemp+20
 16395  012980  0E00               	movlw	0
 16396  012982  2215               	addwfc	(btemp+20)^0,f,c
 16397  012984  0ECD               	movlw	-51
 16398  012986  006F FF8C  F016    	movff	plusw1,btemp+21
 16399  01298C  0E00               	movlw	0
 16400  01298E  2216               	addwfc	(btemp+21)^0,f,c
 16401  012990  0ECE               	movlw	-50
 16402  012992  006F FF8C  F017    	movff	plusw1,btemp+22
 16403  012998  0E00               	movlw	0
 16404  01299A  2217               	addwfc	(btemp+22)^0,f,c
 16405  01299C  0ECF               	movlw	-49
 16406  01299E  006F FF8C  F018    	movff	plusw1,btemp+23
 16407  0129A4  0E00               	movlw	0
 16408  0129A6  2218               	addwfc	(btemp+23)^0,f,c
 16409  0129A8  0060  F047  FFE6   	movff	btemp+16,postinc1
 16410  0129AE  0060  F04B  FFE6   	movff	btemp+17,postinc1
 16411  0129B4  0060  F04F  FFE6   	movff	btemp+18,postinc1
 16412  0129BA  0060  F053  FFE6   	movff	btemp+19,postinc1
 16413  0129C0  0060  F057  FFE6   	movff	btemp+20,postinc1
 16414  0129C6  0060  F05B  FFE6   	movff	btemp+21,postinc1
 16415  0129CC  0060  F05F  FFE6   	movff	btemp+22,postinc1
 16416  0129D2  0060  F063  FFE6   	movff	btemp+23,postinc1
 16417  0129D8  ECE9  F0DE         	call	___aomod	;wreg free
 16418  0129DC  52E5               	movf	postdec1,f,c
 16419  0129DE  006F FF9C  F018    	movff	indf1,btemp+23
 16420  0129E4  52E5               	movf	postdec1,f,c
 16421  0129E6  006F FF9C  F017    	movff	indf1,btemp+22
 16422  0129EC  52E5               	movf	postdec1,f,c
 16423  0129EE  006F FF9C  F016    	movff	indf1,btemp+21
 16424  0129F4  52E5               	movf	postdec1,f,c
 16425  0129F6  006F FF9C  F015    	movff	indf1,btemp+20
 16426  0129FC  52E5               	movf	postdec1,f,c
 16427  0129FE  006F FF9C  F014    	movff	indf1,btemp+19
 16428  012A04  52E5               	movf	postdec1,f,c
 16429  012A06  006F FF9C  F013    	movff	indf1,btemp+18
 16430  012A0C  52E5               	movf	postdec1,f,c
 16431  012A0E  006F FF9C  F012    	movff	indf1,btemp+17
 16432  012A14  52E5               	movf	postdec1,f,c
 16433  012A16  006F FF9C  F011    	movff	indf1,btemp+16
 16434  012A1C  0EF8               	movlw	248
 16435  012A1E  26E1               	addwf	fsr1l,f,c
 16436  012A20  0EFF               	movlw	255
 16437  012A22  22E2               	addwfc	fsr1h,f,c
 16438  012A24  0060  F044  F00B   	movff	btemp+16,btemp+10
 16439  012A2A  0060  F048  F00C   	movff	btemp+17,btemp+11
 16440                           
 16441                           ;stkvar	_wday @ sp[(-57)+55]
 16442  012A30  0EFE               	movlw	-2
 16443  012A32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16444  012A38  0EFF               	movlw	-1
 16445  012A3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16446                           
 16447                           ;stkvar	_wday @ sp[(-57)+55]
 16448  012A40  0EFF               	movlw	-1
 16449  012A42  AEE3               	btfss	plusw1,7,c
 16450  012A44  D011               	goto	l16313
 16451                           
 16452                           ;stkvar	_wday @ sp[(-57)+55]
 16453  012A46  0EFE               	movlw	-2
 16454  012A48  50E3               	movf	plusw1,w,c
 16455  012A4A  0F07               	addlw	7
 16456  012A4C  6E01               	movwf	btemp^0,c
 16457  012A4E  0EFE               	movlw	-2
 16458  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 16459  012A56  6A01               	clrf	btemp^0,c
 16460  012A58  0EFF               	movlw	-1
 16461  012A5A  50E3               	movf	plusw1,w,c
 16462  012A5C  2001               	addwfc	btemp^0,w,c
 16463  012A5E  6E01               	movwf	btemp^0,c
 16464  012A60  0EFF               	movlw	-1
 16465  012A62  0060  F007  FFE3   	movff	btemp,plusw1
 16466  012A68                     l16313:
 16467  012A68  0EB1               	movlw	177
 16468  012A6A  6EE6               	movwf	postinc1,c
 16469  012A6C  0E3A               	movlw	58
 16470  012A6E  6EE6               	movwf	postinc1,c
 16471  012A70  0E02               	movlw	2
 16472  012A72  6EE6               	movwf	postinc1,c
 16473  012A74  0E00               	movlw	0
 16474  012A76  6EE6               	movwf	postinc1,c
 16475  012A78  0E00               	movlw	0
 16476  012A7A  6EE6               	movwf	postinc1,c
 16477  012A7C  0E00               	movlw	0
 16478  012A7E  6EE6               	movwf	postinc1,c
 16479  012A80  0E00               	movlw	0
 16480  012A82  6EE6               	movwf	postinc1,c
 16481  012A84  0E00               	movlw	0
 16482  012A86  6EE6               	movwf	postinc1,c
 16483                           
 16484                           ;stkvar	_days @ sp[(-65)+9]
 16485  012A88  50E1               	movf	fsr1l,w,c
 16486  012A8A  0FC8               	addlw	-56
 16487  012A8C  6ED9               	movwf	fsr2l,c
 16488  012A8E  50E2               	movf	fsr1h,w,c
 16489  012A90  6EDA               	movwf	fsr2h,c
 16490  012A92  0EFF               	movlw	255
 16491  012A94  22DA               	addwfc	fsr2h,f,c
 16492  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 16493  012A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 16494  012AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 16495  012AA8  006F FF7B FFE6     	movff	postinc2,postinc1
 16496  012AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 16497  012AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 16498  012ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 16499  012AC0  006F FF7B FFE6     	movff	postinc2,postinc1
 16500  012AC6  EC19  F0DA         	call	___aodiv	;wreg free
 16501  012ACA  52E5               	movf	postdec1,f,c
 16502  012ACC  006F FF9C  F018    	movff	indf1,btemp+23
 16503  012AD2  52E5               	movf	postdec1,f,c
 16504  012AD4  006F FF9C  F017    	movff	indf1,btemp+22
 16505  012ADA  52E5               	movf	postdec1,f,c
 16506  012ADC  006F FF9C  F016    	movff	indf1,btemp+21
 16507  012AE2  52E5               	movf	postdec1,f,c
 16508  012AE4  006F FF9C  F015    	movff	indf1,btemp+20
 16509  012AEA  52E5               	movf	postdec1,f,c
 16510  012AEC  006F FF9C  F014    	movff	indf1,btemp+19
 16511  012AF2  52E5               	movf	postdec1,f,c
 16512  012AF4  006F FF9C  F013    	movff	indf1,btemp+18
 16513  012AFA  52E5               	movf	postdec1,f,c
 16514  012AFC  006F FF9C  F012    	movff	indf1,btemp+17
 16515  012B02  52E5               	movf	postdec1,f,c
 16516  012B04  006F FF9C  F011    	movff	indf1,btemp+16
 16517  012B0A  0EF8               	movlw	248
 16518  012B0C  26E1               	addwf	fsr1l,f,c
 16519  012B0E  0EFF               	movlw	255
 16520  012B10  22E2               	addwfc	fsr1h,f,c
 16521  012B12  0060  F044  F009   	movff	btemp+16,btemp+8
 16522  012B18  0060  F048  F00A   	movff	btemp+17,btemp+9
 16523  012B1E  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16524  012B24  0060  F050  F00C   	movff	btemp+19,btemp+11
 16525                           
 16526                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16527  012B2A  0EF4               	movlw	-12
 16528  012B2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16529  012B32  0EF5               	movlw	-11
 16530  012B34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16531  012B3A  0EF6               	movlw	-10
 16532  012B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16533  012B42  0EF7               	movlw	-9
 16534  012B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 16535  012B4A  0EB1               	movlw	177
 16536  012B4C  6EE6               	movwf	postinc1,c
 16537  012B4E  0E3A               	movlw	58
 16538  012B50  6EE6               	movwf	postinc1,c
 16539  012B52  0E02               	movlw	2
 16540  012B54  6EE6               	movwf	postinc1,c
 16541  012B56  0E00               	movlw	0
 16542  012B58  6EE6               	movwf	postinc1,c
 16543  012B5A  0E00               	movlw	0
 16544  012B5C  6EE6               	movwf	postinc1,c
 16545  012B5E  0E00               	movlw	0
 16546  012B60  6EE6               	movwf	postinc1,c
 16547  012B62  0E00               	movlw	0
 16548  012B64  6EE6               	movwf	postinc1,c
 16549  012B66  0E00               	movlw	0
 16550  012B68  6EE6               	movwf	postinc1,c
 16551                           
 16552                           ;stkvar	_days @ sp[(-65)+9]
 16553  012B6A  50E1               	movf	fsr1l,w,c
 16554  012B6C  0FC8               	addlw	-56
 16555  012B6E  6ED9               	movwf	fsr2l,c
 16556  012B70  50E2               	movf	fsr1h,w,c
 16557  012B72  6EDA               	movwf	fsr2h,c
 16558  012B74  0EFF               	movlw	255
 16559  012B76  22DA               	addwfc	fsr2h,f,c
 16560  012B78  006F FF7B FFE6     	movff	postinc2,postinc1
 16561  012B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 16562  012B84  006F FF7B FFE6     	movff	postinc2,postinc1
 16563  012B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 16564  012B90  006F FF7B FFE6     	movff	postinc2,postinc1
 16565  012B96  006F FF7B FFE6     	movff	postinc2,postinc1
 16566  012B9C  006F FF7B FFE6     	movff	postinc2,postinc1
 16567  012BA2  006F FF7B FFE6     	movff	postinc2,postinc1
 16568  012BA8  ECE9  F0DE         	call	___aomod	;wreg free
 16569  012BAC  52E5               	movf	postdec1,f,c
 16570  012BAE  006F FF9C  F018    	movff	indf1,btemp+23
 16571  012BB4  52E5               	movf	postdec1,f,c
 16572  012BB6  006F FF9C  F017    	movff	indf1,btemp+22
 16573  012BBC  52E5               	movf	postdec1,f,c
 16574  012BBE  006F FF9C  F016    	movff	indf1,btemp+21
 16575  012BC4  52E5               	movf	postdec1,f,c
 16576  012BC6  006F FF9C  F015    	movff	indf1,btemp+20
 16577  012BCC  52E5               	movf	postdec1,f,c
 16578  012BCE  006F FF9C  F014    	movff	indf1,btemp+19
 16579  012BD4  52E5               	movf	postdec1,f,c
 16580  012BD6  006F FF9C  F013    	movff	indf1,btemp+18
 16581  012BDC  52E5               	movf	postdec1,f,c
 16582  012BDE  006F FF9C  F012    	movff	indf1,btemp+17
 16583  012BE4  52E5               	movf	postdec1,f,c
 16584  012BE6  006F FF9C  F011    	movff	indf1,btemp+16
 16585  012BEC  0EF8               	movlw	248
 16586  012BEE  26E1               	addwf	fsr1l,f,c
 16587  012BF0  0EFF               	movlw	255
 16588  012BF2  22E2               	addwfc	fsr1h,f,c
 16589  012BF4  0060  F044  F009   	movff	btemp+16,btemp+8
 16590  012BFA  0060  F048  F00A   	movff	btemp+17,btemp+9
 16591  012C00  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16592  012C06  0060  F050  F00C   	movff	btemp+19,btemp+11
 16593                           
 16594                           ;stkvar	_remdays @ sp[(-57)+25]
 16595  012C0C  0EE0               	movlw	-32
 16596  012C0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 16597  012C14  0EE1               	movlw	-31
 16598  012C16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16599  012C1C  0EE2               	movlw	-30
 16600  012C1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16601  012C24  0EE3               	movlw	-29
 16602  012C26  0060  F033  FFE3   	movff	btemp+11,plusw1
 16603                           
 16604                           ;stkvar	_remdays @ sp[(-57)+25]
 16605  012C2C  0EE3               	movlw	-29
 16606  012C2E  AEE3               	btfss	plusw1,7,c
 16607  012C30  D01B               	goto	l16321
 16608                           
 16609                           ;stkvar	_remdays @ sp[(-57)+25]
 16610  012C32  50E1               	movf	fsr1l,w,c
 16611  012C34  0FE0               	addlw	-32
 16612  012C36  6ED9               	movwf	fsr2l,c
 16613  012C38  50E2               	movf	fsr1h,w,c
 16614  012C3A  6EDA               	movwf	fsr2h,c
 16615  012C3C  0EFF               	movlw	255
 16616  012C3E  22DA               	addwfc	fsr2h,f,c
 16617  012C40  0EB1               	movlw	177
 16618  012C42  26DE               	addwf	postinc2,f,c
 16619  012C44  0E3A               	movlw	58
 16620  012C46  22DE               	addwfc	postinc2,f,c
 16621  012C48  0E02               	movlw	2
 16622  012C4A  22DE               	addwfc	postinc2,f,c
 16623  012C4C  0E00               	movlw	0
 16624  012C4E  22DE               	addwfc	postinc2,f,c
 16625                           
 16626                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16627  012C50  50E1               	movf	fsr1l,w,c
 16628  012C52  0FF4               	addlw	-12
 16629  012C54  6ED9               	movwf	fsr2l,c
 16630  012C56  50E2               	movf	fsr1h,w,c
 16631  012C58  6EDA               	movwf	fsr2h,c
 16632  012C5A  0EFF               	movlw	255
 16633  012C5C  22DA               	addwfc	fsr2h,f,c
 16634  012C5E  06DE               	decf	postinc2,f,c
 16635  012C60  0E00               	movlw	0
 16636  012C62  5ADE               	subwfb	postinc2,f,c
 16637  012C64  5ADE               	subwfb	postinc2,f,c
 16638  012C66  5ADE               	subwfb	postinc2,f,c
 16639  012C68                     l16321:
 16640  012C68  0EAC               	movlw	172
 16641  012C6A  6EE6               	movwf	postinc1,c
 16642  012C6C  0E8E               	movlw	142
 16643  012C6E  6EE6               	movwf	postinc1,c
 16644  012C70  0E00               	movlw	0
 16645  012C72  6EE6               	movwf	postinc1,c
 16646  012C74  0E00               	movlw	0
 16647  012C76  6EE6               	movwf	postinc1,c
 16648                           
 16649                           ;stkvar	_remdays @ sp[(-61)+25]
 16650  012C78  0EDC               	movlw	-36
 16651  012C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 16652  012C80  006F FF8F FFE6     	movff	plusw1,postinc1
 16653  012C86  006F FF8F FFE6     	movff	plusw1,postinc1
 16654  012C8C  006F FF8F FFE6     	movff	plusw1,postinc1
 16655  012C92  ECEB  F0E8         	call	___aldiv	;wreg free
 16656                           
 16657                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16658  012C96  0EE8               	movlw	-24
 16659  012C98  0060  F007  FFE3   	movff	btemp,plusw1
 16660  012C9E  0EE9               	movlw	-23
 16661  012CA0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16662  012CA6  0EEA               	movlw	-22
 16663  012CA8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16664  012CAE  0EEB               	movlw	-21
 16665  012CB0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16666                           
 16667                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16668  012CB6  0EE8               	movlw	-24
 16669  012CB8  006F FF8C  F001    	movff	plusw1,btemp
 16670  012CBE  0E04               	movlw	4
 16671  012CC0  1801               	xorwf	btemp^0,w,c
 16672  012CC2  E116               	bnz	l16327
 16673  012CC4  0EE9               	movlw	-23
 16674  012CC6  50E3               	movf	plusw1,w,c
 16675  012CC8  E113               	bnz	l16327
 16676  012CCA  0EEA               	movlw	-22
 16677  012CCC  50E3               	movf	plusw1,w,c
 16678  012CCE  E110               	bnz	l16327
 16679  012CD0  0EEB               	movlw	-21
 16680  012CD2  50E3               	movf	plusw1,w,c
 16681  012CD4  A4D8               	btfss	status,2,c
 16682  012CD6  D00C               	goto	l16327
 16683                           
 16684                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16685  012CD8  50E1               	movf	fsr1l,w,c
 16686  012CDA  0FE8               	addlw	-24
 16687  012CDC  6ED9               	movwf	fsr2l,c
 16688  012CDE  50E2               	movf	fsr1h,w,c
 16689  012CE0  6EDA               	movwf	fsr2h,c
 16690  012CE2  0EFF               	movlw	255
 16691  012CE4  22DA               	addwfc	fsr2h,f,c
 16692  012CE6  06DE               	decf	postinc2,f,c
 16693  012CE8  0E00               	movlw	0
 16694  012CEA  5ADE               	subwfb	postinc2,f,c
 16695  012CEC  5ADE               	subwfb	postinc2,f,c
 16696  012CEE  5ADE               	subwfb	postinc2,f,c
 16697  012CF0                     l16327:
 16698  012CF0  0EAC               	movlw	172
 16699  012CF2  6EE6               	movwf	postinc1,c
 16700  012CF4  0E8E               	movlw	142
 16701  012CF6  6EE6               	movwf	postinc1,c
 16702  012CF8  0E00               	movlw	0
 16703  012CFA  6EE6               	movwf	postinc1,c
 16704  012CFC  0E00               	movlw	0
 16705  012CFE  6EE6               	movwf	postinc1,c
 16706                           
 16707                           ;stkvar	_c_cycles @ sp[(-61)+33]
 16708  012D00  0EE4               	movlw	-28
 16709  012D02  006F FF8F FFE6     	movff	plusw1,postinc1
 16710  012D08  006F FF8F FFE6     	movff	plusw1,postinc1
 16711  012D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 16712  012D14  006F FF8F FFE6     	movff	plusw1,postinc1
 16713  012D1A  EC07  F0FB         	call	___lmul	;wreg free
 16714                           
 16715                           ;stkvar	_remdays @ sp[(-57)+25]
 16716  012D1E  50E1               	movf	fsr1l,w,c
 16717  012D20  0FE0               	addlw	-32
 16718  012D22  6ED9               	movwf	fsr2l,c
 16719  012D24  50E2               	movf	fsr1h,w,c
 16720  012D26  6EDA               	movwf	fsr2h,c
 16721  012D28  0EFF               	movlw	255
 16722  012D2A  22DA               	addwfc	fsr2h,f,c
 16723  012D2C  5001               	movf	btemp^0,w,c
 16724  012D2E  5EDE               	subwf	postinc2,f,c
 16725  012D30  5002               	movf	(btemp+1)^0,w,c
 16726  012D32  5ADE               	subwfb	postinc2,f,c
 16727  012D34  5003               	movf	(btemp+2)^0,w,c
 16728  012D36  5ADE               	subwfb	postinc2,f,c
 16729  012D38  5004               	movf	(btemp+3)^0,w,c
 16730  012D3A  5ADE               	subwfb	postinc2,f,c
 16731  012D3C  0EB5               	movlw	181
 16732  012D3E  6EE6               	movwf	postinc1,c
 16733  012D40  0E05               	movlw	5
 16734  012D42  6EE6               	movwf	postinc1,c
 16735  012D44  0E00               	movlw	0
 16736  012D46  6EE6               	movwf	postinc1,c
 16737  012D48  0E00               	movlw	0
 16738  012D4A  6EE6               	movwf	postinc1,c
 16739                           
 16740                           ;stkvar	_remdays @ sp[(-61)+25]
 16741  012D4C  0EDC               	movlw	-36
 16742  012D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 16743  012D54  006F FF8F FFE6     	movff	plusw1,postinc1
 16744  012D5A  006F FF8F FFE6     	movff	plusw1,postinc1
 16745  012D60  006F FF8F FFE6     	movff	plusw1,postinc1
 16746  012D66  ECEB  F0E8         	call	___aldiv	;wreg free
 16747                           
 16748                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16749  012D6A  0EE4               	movlw	-28
 16750  012D6C  0060  F007  FFE3   	movff	btemp,plusw1
 16751  012D72  0EE5               	movlw	-27
 16752  012D74  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16753  012D7A  0EE6               	movlw	-26
 16754  012D7C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16755  012D82  0EE7               	movlw	-25
 16756  012D84  0060  F013  FFE3   	movff	btemp+3,plusw1
 16757                           
 16758                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16759  012D8A  0EE4               	movlw	-28
 16760  012D8C  006F FF8C  F001    	movff	plusw1,btemp
 16761  012D92  0E19               	movlw	25
 16762  012D94  1801               	xorwf	btemp^0,w,c
 16763  012D96  E116               	bnz	l16335
 16764  012D98  0EE5               	movlw	-27
 16765  012D9A  50E3               	movf	plusw1,w,c
 16766  012D9C  E113               	bnz	l16335
 16767  012D9E  0EE6               	movlw	-26
 16768  012DA0  50E3               	movf	plusw1,w,c
 16769  012DA2  E110               	bnz	l16335
 16770  012DA4  0EE7               	movlw	-25
 16771  012DA6  50E3               	movf	plusw1,w,c
 16772  012DA8  A4D8               	btfss	status,2,c
 16773  012DAA  D00C               	goto	l16335
 16774                           
 16775                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16776  012DAC  50E1               	movf	fsr1l,w,c
 16777  012DAE  0FE4               	addlw	-28
 16778  012DB0  6ED9               	movwf	fsr2l,c
 16779  012DB2  50E2               	movf	fsr1h,w,c
 16780  012DB4  6EDA               	movwf	fsr2h,c
 16781  012DB6  0EFF               	movlw	255
 16782  012DB8  22DA               	addwfc	fsr2h,f,c
 16783  012DBA  06DE               	decf	postinc2,f,c
 16784  012DBC  0E00               	movlw	0
 16785  012DBE  5ADE               	subwfb	postinc2,f,c
 16786  012DC0  5ADE               	subwfb	postinc2,f,c
 16787  012DC2  5ADE               	subwfb	postinc2,f,c
 16788  012DC4                     l16335:
 16789  012DC4  0EB5               	movlw	181
 16790  012DC6  6EE6               	movwf	postinc1,c
 16791  012DC8  0E05               	movlw	5
 16792  012DCA  6EE6               	movwf	postinc1,c
 16793  012DCC  0E00               	movlw	0
 16794  012DCE  6EE6               	movwf	postinc1,c
 16795  012DD0  0E00               	movlw	0
 16796  012DD2  6EE6               	movwf	postinc1,c
 16797                           
 16798                           ;stkvar	_q_cycles @ sp[(-61)+29]
 16799  012DD4  0EE0               	movlw	-32
 16800  012DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 16801  012DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 16802  012DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16803  012DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16804  012DEE  EC07  F0FB         	call	___lmul	;wreg free
 16805                           
 16806                           ;stkvar	_remdays @ sp[(-57)+25]
 16807  012DF2  50E1               	movf	fsr1l,w,c
 16808  012DF4  0FE0               	addlw	-32
 16809  012DF6  6ED9               	movwf	fsr2l,c
 16810  012DF8  50E2               	movf	fsr1h,w,c
 16811  012DFA  6EDA               	movwf	fsr2h,c
 16812  012DFC  0EFF               	movlw	255
 16813  012DFE  22DA               	addwfc	fsr2h,f,c
 16814  012E00  5001               	movf	btemp^0,w,c
 16815  012E02  5EDE               	subwf	postinc2,f,c
 16816  012E04  5002               	movf	(btemp+1)^0,w,c
 16817  012E06  5ADE               	subwfb	postinc2,f,c
 16818  012E08  5003               	movf	(btemp+2)^0,w,c
 16819  012E0A  5ADE               	subwfb	postinc2,f,c
 16820  012E0C  5004               	movf	(btemp+3)^0,w,c
 16821  012E0E  5ADE               	subwfb	postinc2,f,c
 16822  012E10  0E6D               	movlw	109
 16823  012E12  6EE6               	movwf	postinc1,c
 16824  012E14  0E01               	movlw	1
 16825  012E16  6EE6               	movwf	postinc1,c
 16826  012E18  0E00               	movlw	0
 16827  012E1A  6EE6               	movwf	postinc1,c
 16828  012E1C  0E00               	movlw	0
 16829  012E1E  6EE6               	movwf	postinc1,c
 16830                           
 16831                           ;stkvar	_remdays @ sp[(-61)+25]
 16832  012E20  0EDC               	movlw	-36
 16833  012E22  006F FF8F FFE6     	movff	plusw1,postinc1
 16834  012E28  006F FF8F FFE6     	movff	plusw1,postinc1
 16835  012E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 16836  012E34  006F FF8F FFE6     	movff	plusw1,postinc1
 16837  012E3A  ECEB  F0E8         	call	___aldiv	;wreg free
 16838                           
 16839                           ;stkvar	_remyears @ sp[(-57)+37]
 16840  012E3E  0EEC               	movlw	-20
 16841  012E40  0060  F007  FFE3   	movff	btemp,plusw1
 16842  012E46  0EED               	movlw	-19
 16843  012E48  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16844  012E4E  0EEE               	movlw	-18
 16845  012E50  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16846  012E56  0EEF               	movlw	-17
 16847  012E58  0060  F013  FFE3   	movff	btemp+3,plusw1
 16848                           
 16849                           ;stkvar	_remyears @ sp[(-57)+37]
 16850  012E5E  0EEC               	movlw	-20
 16851  012E60  006F FF8C  F001    	movff	plusw1,btemp
 16852  012E66  0E04               	movlw	4
 16853  012E68  1801               	xorwf	btemp^0,w,c
 16854  012E6A  E116               	bnz	l16343
 16855  012E6C  0EED               	movlw	-19
 16856  012E6E  50E3               	movf	plusw1,w,c
 16857  012E70  E113               	bnz	l16343
 16858  012E72  0EEE               	movlw	-18
 16859  012E74  50E3               	movf	plusw1,w,c
 16860  012E76  E110               	bnz	l16343
 16861  012E78  0EEF               	movlw	-17
 16862  012E7A  50E3               	movf	plusw1,w,c
 16863  012E7C  A4D8               	btfss	status,2,c
 16864  012E7E  D00C               	goto	l16343
 16865                           
 16866                           ;stkvar	_remyears @ sp[(-57)+37]
 16867  012E80  50E1               	movf	fsr1l,w,c
 16868  012E82  0FEC               	addlw	-20
 16869  012E84  6ED9               	movwf	fsr2l,c
 16870  012E86  50E2               	movf	fsr1h,w,c
 16871  012E88  6EDA               	movwf	fsr2h,c
 16872  012E8A  0EFF               	movlw	255
 16873  012E8C  22DA               	addwfc	fsr2h,f,c
 16874  012E8E  06DE               	decf	postinc2,f,c
 16875  012E90  0E00               	movlw	0
 16876  012E92  5ADE               	subwfb	postinc2,f,c
 16877  012E94  5ADE               	subwfb	postinc2,f,c
 16878  012E96  5ADE               	subwfb	postinc2,f,c
 16879  012E98                     l16343:
 16880  012E98  0E6D               	movlw	109
 16881  012E9A  6EE6               	movwf	postinc1,c
 16882  012E9C  0E01               	movlw	1
 16883  012E9E  6EE6               	movwf	postinc1,c
 16884  012EA0  0E00               	movlw	0
 16885  012EA2  6EE6               	movwf	postinc1,c
 16886  012EA4  0E00               	movlw	0
 16887  012EA6  6EE6               	movwf	postinc1,c
 16888                           
 16889                           ;stkvar	_remyears @ sp[(-61)+37]
 16890  012EA8  0EE8               	movlw	-24
 16891  012EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16892  012EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16893  012EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16894  012EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16895  012EC2  EC07  F0FB         	call	___lmul	;wreg free
 16896                           
 16897                           ;stkvar	_remdays @ sp[(-57)+25]
 16898  012EC6  50E1               	movf	fsr1l,w,c
 16899  012EC8  0FE0               	addlw	-32
 16900  012ECA  6ED9               	movwf	fsr2l,c
 16901  012ECC  50E2               	movf	fsr1h,w,c
 16902  012ECE  6EDA               	movwf	fsr2h,c
 16903  012ED0  0EFF               	movlw	255
 16904  012ED2  22DA               	addwfc	fsr2h,f,c
 16905  012ED4  5001               	movf	btemp^0,w,c
 16906  012ED6  5EDE               	subwf	postinc2,f,c
 16907  012ED8  5002               	movf	(btemp+1)^0,w,c
 16908  012EDA  5ADE               	subwfb	postinc2,f,c
 16909  012EDC  5003               	movf	(btemp+2)^0,w,c
 16910  012EDE  5ADE               	subwfb	postinc2,f,c
 16911  012EE0  5004               	movf	(btemp+3)^0,w,c
 16912  012EE2  5ADE               	subwfb	postinc2,f,c
 16913                           
 16914                           ;stkvar	___secs_to_tm$7840 @ sp[(-57)+0]
 16915  012EE4  0EC7               	movlw	-57
 16916  012EE6  6AE3               	clrf	plusw1,c
 16917                           
 16918                           ;stkvar	_remyears @ sp[(-57)+37]
 16919  012EE8  0EEC               	movlw	-20
 16920  012EEA  50E3               	movf	plusw1,w,c
 16921  012EEC  E127               	bnz	l16355
 16922  012EEE  0EED               	movlw	-19
 16923  012EF0  50E3               	movf	plusw1,w,c
 16924  012EF2  E124               	bnz	l16355
 16925  012EF4  0EEE               	movlw	-18
 16926  012EF6  50E3               	movf	plusw1,w,c
 16927  012EF8  E121               	bnz	l16355
 16928  012EFA  0EEF               	movlw	-17
 16929  012EFC  50E3               	movf	plusw1,w,c
 16930  012EFE  A4D8               	btfss	status,2,c
 16931  012F00  D01D               	goto	l16355
 16932                           
 16933                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16934  012F02  0EE4               	movlw	-28
 16935  012F04  50E3               	movf	plusw1,w,c
 16936  012F06  E117               	bnz	l16353
 16937  012F08  0EE5               	movlw	-27
 16938  012F0A  50E3               	movf	plusw1,w,c
 16939  012F0C  E114               	bnz	l16353
 16940  012F0E  0EE6               	movlw	-26
 16941  012F10  50E3               	movf	plusw1,w,c
 16942  012F12  E111               	bnz	l16353
 16943  012F14  0EE7               	movlw	-25
 16944  012F16  50E3               	movf	plusw1,w,c
 16945  012F18  A4D8               	btfss	status,2,c
 16946  012F1A  D00D               	goto	u16050
 16947                           
 16948                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16949  012F1C  0EE8               	movlw	-24
 16950  012F1E  50E3               	movf	plusw1,w,c
 16951  012F20  E10D               	bnz	l16355
 16952  012F22  0EE9               	movlw	-23
 16953  012F24  50E3               	movf	plusw1,w,c
 16954  012F26  E10A               	bnz	l16355
 16955  012F28  0EEA               	movlw	-22
 16956  012F2A  50E3               	movf	plusw1,w,c
 16957  012F2C  E107               	bnz	l16355
 16958  012F2E  0EEB               	movlw	-21
 16959  012F30  50E3               	movf	plusw1,w,c
 16960  012F32  A4D8               	btfss	status,2,c
 16961  012F34  D003               	goto	l16355
 16962  012F36                     u16050:
 16963  012F36                     l16353:
 16964                           
 16965                           ;stkvar	___secs_to_tm$7840 @ sp[(-57)+0]
 16966  012F36  0EC7               	movlw	-57
 16967  012F38  6AE3               	clrf	plusw1,c
 16968  012F3A  2AE3               	incf	plusw1,f,c
 16969  012F3C                     l16355:
 16970                           
 16971                           ;stkvar	___secs_to_tm$7840 @ sp[(-57)+0]
 16972  012F3C  0EC7               	movlw	-57
 16973  012F3E  50E3               	movf	plusw1,w,c
 16974  012F40  6E0B               	movwf	(btemp+10)^0,c
 16975  012F42  6A0C               	clrf	(btemp+11)^0,c
 16976                           
 16977                           ;stkvar	_leap @ sp[(-57)+51]
 16978  012F44  0EFA               	movlw	-6
 16979  012F46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16980  012F4C  0EFB               	movlw	-5
 16981  012F4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16982                           
 16983                           ;stkvar	_remdays @ sp[(-57)+25]
 16984                           ;stkvar	_leap @ sp[(-57)+51]
 16985  012F54  0EFA               	movlw	-6
 16986  012F56  006F FF8C  F00B    	movff	plusw1,btemp+10
 16987  012F5C  0EFB               	movlw	-5
 16988  012F5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16989  012F64  0EE0               	movlw	-32
 16990  012F66  50E3               	movf	plusw1,w,c
 16991  012F68  260B               	addwf	(btemp+10)^0,f,c
 16992  012F6A  0EE1               	movlw	-31
 16993  012F6C  50E3               	movf	plusw1,w,c
 16994  012F6E  220C               	addwfc	(btemp+11)^0,f,c
 16995  012F70  0E3B               	movlw	59
 16996  012F72  260B               	addwf	(btemp+10)^0,f,c
 16997  012F74  0E00               	movlw	0
 16998  012F76  220C               	addwfc	(btemp+11)^0,f,c
 16999                           
 17000                           ;stkvar	_yday @ sp[(-57)+53]
 17001  012F78  0EFC               	movlw	-4
 17002  012F7A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17003  012F80  0EFD               	movlw	-3
 17004  012F82  0060  F033  FFE3   	movff	btemp+11,plusw1
 17005                           
 17006                           ;stkvar	_leap @ sp[(-57)+51]
 17007  012F88  0EFA               	movlw	-6
 17008  012F8A  50E3               	movf	plusw1,w,c
 17009  012F8C  0F6D               	addlw	109
 17010  012F8E  6E0B               	movwf	(btemp+10)^0,c
 17011  012F90  0EFB               	movlw	-5
 17012  012F92  006F FF8C  F00C    	movff	plusw1,btemp+11
 17013  012F98  0E01               	movlw	1
 17014  012F9A  220C               	addwfc	(btemp+11)^0,f,c
 17015                           
 17016                           ;stkvar	_yday @ sp[(-57)+53]
 17017  012F9C  0EFC               	movlw	-4
 17018  012F9E  006F FF8C  F001    	movff	plusw1,btemp
 17019  012FA4  500B               	movf	(btemp+10)^0,w,c
 17020  012FA6  5C01               	subwf	btemp^0,w,c
 17021  012FA8  0EFD               	movlw	-3
 17022  012FAA  50E3               	movf	plusw1,w,c
 17023  012FAC  0A80               	xorlw	128
 17024  012FAE  6E01               	movwf	btemp^0,c
 17025  012FB0  500C               	movf	(btemp+11)^0,w,c
 17026  012FB2  0A80               	xorlw	128
 17027  012FB4  5801               	subwfb	btemp^0,w,c
 17028  012FB6  A0D8               	btfss	status,0,c
 17029  012FB8  D01E               	goto	l16363
 17030                           
 17031                           ;stkvar	_leap @ sp[(-57)+51]
 17032  012FBA  0EFA               	movlw	-6
 17033  012FBC  50E3               	movf	plusw1,w,c
 17034  012FBE  0F6D               	addlw	109
 17035  012FC0  6E0B               	movwf	(btemp+10)^0,c
 17036  012FC2  0EFB               	movlw	-5
 17037  012FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17038  012FCA  0E01               	movlw	1
 17039  012FCC  220C               	addwfc	(btemp+11)^0,f,c
 17040                           
 17041                           ;stkvar	_yday @ sp[(-57)+53]
 17042  012FCE  0EFC               	movlw	-4
 17043  012FD0  006F FF8C  F001    	movff	plusw1,btemp
 17044  012FD6  500B               	movf	(btemp+10)^0,w,c
 17045  012FD8  5E01               	subwf	btemp^0,f,c
 17046  012FDA  0EFC               	movlw	-4
 17047  012FDC  0060  F007  FFE3   	movff	btemp,plusw1
 17048  012FE2  0EFD               	movlw	-3
 17049  012FE4  006F FF8C  F001    	movff	plusw1,btemp
 17050  012FEA  500C               	movf	(btemp+11)^0,w,c
 17051  012FEC  5A01               	subwfb	btemp^0,f,c
 17052  012FEE  0EFD               	movlw	-3
 17053  012FF0  0060  F007  FFE3   	movff	btemp,plusw1
 17054  012FF6                     l16363:
 17055                           
 17056                           ;stkvar	_remyears @ sp[(-57)+37]
 17057                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17058  012FF6  0EE4               	movlw	-28
 17059  012FF8  006F FF8C  F009    	movff	plusw1,btemp+8
 17060  012FFE  0EE5               	movlw	-27
 17061  013000  006F FF8C  F00A    	movff	plusw1,btemp+9
 17062  013006  0EE6               	movlw	-26
 17063  013008  006F FF8C  F00B    	movff	plusw1,btemp+10
 17064  01300E  0EE7               	movlw	-25
 17065  013010  006F FF8C  F00C    	movff	plusw1,btemp+11
 17066  013016  0E02               	movlw	2
 17067  013018                     u16075:
 17068  013018  90D8               	bcf	status,0,c
 17069  01301A  3609               	rlcf	(btemp+8)^0,f,c
 17070  01301C  360A               	rlcf	(btemp+9)^0,f,c
 17071  01301E  360B               	rlcf	(btemp+10)^0,f,c
 17072  013020  360C               	rlcf	(btemp+11)^0,f,c
 17073  013022  2EE8               	decfsz	wreg,f,c
 17074  013024  D7F9               	goto	u16075
 17075  013026  0E64               	movlw	100
 17076  013028  6EE6               	movwf	postinc1,c
 17077  01302A  0E00               	movlw	0
 17078  01302C  6EE6               	movwf	postinc1,c
 17079  01302E  0E00               	movlw	0
 17080  013030  6EE6               	movwf	postinc1,c
 17081  013032  0E00               	movlw	0
 17082  013034  6EE6               	movwf	postinc1,c
 17083                           
 17084                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17085  013036  0EE4               	movlw	-28
 17086  013038  006F FF8F FFE6     	movff	plusw1,postinc1
 17087  01303E  006F FF8F FFE6     	movff	plusw1,postinc1
 17088  013044  006F FF8F FFE6     	movff	plusw1,postinc1
 17089  01304A  006F FF8F FFE6     	movff	plusw1,postinc1
 17090  013050  EC07  F0FB         	call	___lmul	;wreg free
 17091  013054  5009               	movf	(btemp+8)^0,w,c
 17092  013056  2401               	addwf	btemp^0,w,c
 17093  013058  6E05               	movwf	(btemp+4)^0,c
 17094  01305A  500A               	movf	(btemp+9)^0,w,c
 17095  01305C  2002               	addwfc	(btemp+1)^0,w,c
 17096  01305E  6E06               	movwf	(btemp+5)^0,c
 17097  013060  500B               	movf	(btemp+10)^0,w,c
 17098  013062  2003               	addwfc	(btemp+2)^0,w,c
 17099  013064  6E07               	movwf	(btemp+6)^0,c
 17100  013066  500C               	movf	(btemp+11)^0,w,c
 17101  013068  2004               	addwfc	(btemp+3)^0,w,c
 17102  01306A  6E08               	movwf	(btemp+7)^0,c
 17103  01306C  0EEC               	movlw	-20
 17104  01306E  50E3               	movf	plusw1,w,c
 17105  013070  2605               	addwf	(btemp+4)^0,f,c
 17106  013072  0EED               	movlw	-19
 17107  013074  50E3               	movf	plusw1,w,c
 17108  013076  2206               	addwfc	(btemp+5)^0,f,c
 17109  013078  0EEE               	movlw	-18
 17110  01307A  50E3               	movf	plusw1,w,c
 17111  01307C  2207               	addwfc	(btemp+6)^0,f,c
 17112  01307E  0EEF               	movlw	-17
 17113  013080  50E3               	movf	plusw1,w,c
 17114  013082  2208               	addwfc	(btemp+7)^0,f,c
 17115  013084  0060  F014  F011   	movff	btemp+4,btemp+16
 17116  01308A  0060  F018  F012   	movff	btemp+5,btemp+17
 17117  013090  0060  F01C  F013   	movff	btemp+6,btemp+18
 17118  013096  0060  F020  F014   	movff	btemp+7,btemp+19
 17119  01309C  6A15               	clrf	(btemp+20)^0,c
 17120  01309E  BE14               	btfsc	(btemp+19)^0,7,c
 17121  0130A0  6815               	setf	(btemp+20)^0,c
 17122  0130A2  0060  F054  F016   	movff	btemp+20,btemp+21
 17123  0130A8  0060  F054  F017   	movff	btemp+20,btemp+22
 17124  0130AE  0060  F054  F018   	movff	btemp+20,btemp+23
 17125  0130B4  0E90               	movlw	144
 17126  0130B6  6EE6               	movwf	postinc1,c
 17127  0130B8  0E01               	movlw	1
 17128  0130BA  6EE6               	movwf	postinc1,c
 17129  0130BC  0E00               	movlw	0
 17130  0130BE  6EE6               	movwf	postinc1,c
 17131  0130C0  0E00               	movlw	0
 17132  0130C2  6EE6               	movwf	postinc1,c
 17133  0130C4  0E00               	movlw	0
 17134  0130C6  6EE6               	movwf	postinc1,c
 17135  0130C8  0E00               	movlw	0
 17136  0130CA  6EE6               	movwf	postinc1,c
 17137  0130CC  0E00               	movlw	0
 17138  0130CE  6EE6               	movwf	postinc1,c
 17139  0130D0  0E00               	movlw	0
 17140  0130D2  6EE6               	movwf	postinc1,c
 17141                           
 17142                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17143  0130D4  0EEC               	movlw	-20
 17144  0130D6  006F FF8C  F019    	movff	plusw1,btemp+24
 17145  0130DC  0EED               	movlw	-19
 17146  0130DE  006F FF8C  F01A    	movff	plusw1,btemp+25
 17147  0130E4  0EEE               	movlw	-18
 17148  0130E6  006F FF8C  F01B    	movff	plusw1,btemp+26
 17149  0130EC  0EEF               	movlw	-17
 17150  0130EE  006F FF8C  F01C    	movff	plusw1,btemp+27
 17151  0130F4  6A1D               	clrf	(btemp+28)^0,c
 17152  0130F6  BE1C               	btfsc	(btemp+27)^0,7,c
 17153  0130F8  681D               	setf	(btemp+28)^0,c
 17154  0130FA  0060  F074  F01E   	movff	btemp+28,btemp+29
 17155  013100  0060  F074  F01F   	movff	btemp+28,btemp+30
 17156  013106  0060  F074  F020   	movff	btemp+28,btemp+31
 17157  01310C  0060  F067  FFE6   	movff	btemp+24,postinc1
 17158  013112  0060  F06B  FFE6   	movff	btemp+25,postinc1
 17159  013118  0060  F06F  FFE6   	movff	btemp+26,postinc1
 17160  01311E  0060  F073  FFE6   	movff	btemp+27,postinc1
 17161  013124  0060  F077  FFE6   	movff	btemp+28,postinc1
 17162  01312A  0060  F07B  FFE6   	movff	btemp+29,postinc1
 17163  013130  0060  F07F  FFE6   	movff	btemp+30,postinc1
 17164  013136  0060  F083  FFE6   	movff	btemp+31,postinc1
 17165  01313C  EC85  F0EF         	call	___omul	;wreg free
 17166  013140  52E5               	movf	postdec1,f,c
 17167  013142  006F FF9C  F020    	movff	indf1,btemp+31
 17168  013148  52E5               	movf	postdec1,f,c
 17169  01314A  006F FF9C  F01F    	movff	indf1,btemp+30
 17170  013150  52E5               	movf	postdec1,f,c
 17171  013152  006F FF9C  F01E    	movff	indf1,btemp+29
 17172  013158  52E5               	movf	postdec1,f,c
 17173  01315A  006F FF9C  F01D    	movff	indf1,btemp+28
 17174  013160  52E5               	movf	postdec1,f,c
 17175  013162  006F FF9C  F01C    	movff	indf1,btemp+27
 17176  013168  52E5               	movf	postdec1,f,c
 17177  01316A  006F FF9C  F01B    	movff	indf1,btemp+26
 17178  013170  52E5               	movf	postdec1,f,c
 17179  013172  006F FF9C  F01A    	movff	indf1,btemp+25
 17180  013178  52E5               	movf	postdec1,f,c
 17181  01317A  006F FF9C  F019    	movff	indf1,btemp+24
 17182  013180  0EF8               	movlw	248
 17183  013182  26E1               	addwf	fsr1l,f,c
 17184  013184  0EFF               	movlw	255
 17185  013186  22E2               	addwfc	fsr1h,f,c
 17186  013188  5011               	movf	(btemp+16)^0,w,c
 17187  01318A  2419               	addwf	(btemp+24)^0,w,c
 17188  01318C  6E09               	movwf	(btemp+8)^0,c
 17189  01318E  5012               	movf	(btemp+17)^0,w,c
 17190  013190  201A               	addwfc	(btemp+25)^0,w,c
 17191  013192  6E0A               	movwf	(btemp+9)^0,c
 17192  013194  5013               	movf	(btemp+18)^0,w,c
 17193  013196  201B               	addwfc	(btemp+26)^0,w,c
 17194  013198  6E0B               	movwf	(btemp+10)^0,c
 17195  01319A  5014               	movf	(btemp+19)^0,w,c
 17196  01319C  201C               	addwfc	(btemp+27)^0,w,c
 17197  01319E  6E0C               	movwf	(btemp+11)^0,c
 17198  0131A0  5015               	movf	(btemp+20)^0,w,c
 17199  0131A2  201D               	addwfc	(btemp+28)^0,w,c
 17200  0131A4  6E0D               	movwf	(btemp+12)^0,c
 17201  0131A6  5016               	movf	(btemp+21)^0,w,c
 17202  0131A8  201E               	addwfc	(btemp+29)^0,w,c
 17203  0131AA  6E0E               	movwf	(btemp+13)^0,c
 17204  0131AC  5017               	movf	(btemp+22)^0,w,c
 17205  0131AE  201F               	addwfc	(btemp+30)^0,w,c
 17206  0131B0  6E0F               	movwf	(btemp+14)^0,c
 17207  0131B2  5018               	movf	(btemp+23)^0,w,c
 17208  0131B4  2020               	addwfc	(btemp+31)^0,w,c
 17209  0131B6  6E10               	movwf	(btemp+15)^0,c
 17210                           
 17211                           ;stkvar	_years @ sp[(-57)+1]
 17212  0131B8  0EC8               	movlw	-56
 17213  0131BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17214  0131C0  0EC9               	movlw	-55
 17215  0131C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17216  0131C8  0ECA               	movlw	-54
 17217  0131CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17218  0131D0  0ECB               	movlw	-53
 17219  0131D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17220  0131D8  0ECC               	movlw	-52
 17221  0131DA  0060  F037  FFE3   	movff	btemp+12,plusw1
 17222  0131E0  0ECD               	movlw	-51
 17223  0131E2  0060  F03B  FFE3   	movff	btemp+13,plusw1
 17224  0131E8  0ECE               	movlw	-50
 17225  0131EA  0060  F03F  FFE3   	movff	btemp+14,plusw1
 17226  0131F0  0ECF               	movlw	-49
 17227  0131F2  0060  F043  FFE3   	movff	btemp+15,plusw1
 17228                           
 17229                           ;stkvar	_months @ sp[(-57)+49]
 17230  0131F8  0EF8               	movlw	-8
 17231  0131FA  6AE3               	clrf	plusw1,c
 17232  0131FC  0EF9               	movlw	-7
 17233  0131FE  6AE3               	clrf	plusw1,c
 17234  013200  D030               	goto	l16371
 17235  013202                     l16367:
 17236                           
 17237                           ;stkvar	_remdays @ sp[(-57)+25]
 17238  013202  50E1               	movf	fsr1l,w,c
 17239  013204  0FE0               	addlw	-32
 17240  013206  6ED9               	movwf	fsr2l,c
 17241  013208  50E2               	movf	fsr1h,w,c
 17242  01320A  6EDA               	movwf	fsr2h,c
 17243  01320C  0EFF               	movlw	255
 17244  01320E  22DA               	addwfc	fsr2h,f,c
 17245                           
 17246                           ;stkvar	_months @ sp[(-57)+49]
 17247  013210  0EF8               	movlw	-8
 17248  013212  006F FF8C  F00B    	movff	plusw1,btemp+10
 17249  013218  0EF9               	movlw	-7
 17250  01321A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17251  013220  0E13               	movlw	low ___secs_to_tm@days_in_month
 17252  013222  240B               	addwf	(btemp+10)^0,w,c
 17253  013224  6EF6               	movwf	tblptrl,c
 17254  013226  0EF9               	movlw	high ___secs_to_tm@days_in_month
 17255  013228  200C               	addwfc	(btemp+11)^0,w,c
 17256  01322A  6EF7               	movwf	tblptrh,c
 17257  01322C                     	if	1	;There are 3 active tblptr bytes
 17258  01322C  6AF8               	clrf	tblptru,c
 17259  01322E  0E00               	movlw	low (__mediumconst shr (0+16))
 17260  013230  22F8               	addwfc	tblptru,f,c
 17261  013232                     	endif
 17262  013232  0008               	tblrd		*
 17263  013234  50F5               	movf	tablat,w,c
 17264  013236  5EDE               	subwf	postinc2,f,c
 17265  013238  0E00               	movlw	0
 17266  01323A  5ADE               	subwfb	postinc2,f,c
 17267  01323C  5ADE               	subwfb	postinc2,f,c
 17268  01323E  5ADE               	subwfb	postinc2,f,c
 17269                           
 17270                           ;stkvar	_months @ sp[(-57)+49]
 17271  013240  0EF8               	movlw	-8
 17272  013242  50E3               	movf	plusw1,w,c
 17273  013244  0F01               	addlw	1
 17274  013246  6E01               	movwf	btemp^0,c
 17275  013248  0EF8               	movlw	-8
 17276  01324A  0060  F007  FFE3   	movff	btemp,plusw1
 17277  013250  6A01               	clrf	btemp^0,c
 17278  013252  0EF9               	movlw	-7
 17279  013254  50E3               	movf	plusw1,w,c
 17280  013256  2001               	addwfc	btemp^0,w,c
 17281  013258  6E01               	movwf	btemp^0,c
 17282  01325A  0EF9               	movlw	-7
 17283  01325C  0060  F007  FFE3   	movff	btemp,plusw1
 17284  013262                     l16371:
 17285                           
 17286                           ;stkvar	_months @ sp[(-57)+49]
 17287  013262  0EF8               	movlw	-8
 17288  013264  006F FF8C  F00B    	movff	plusw1,btemp+10
 17289  01326A  0EF9               	movlw	-7
 17290  01326C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17291  013272  0E13               	movlw	low ___secs_to_tm@days_in_month
 17292  013274  240B               	addwf	(btemp+10)^0,w,c
 17293  013276  6EF6               	movwf	tblptrl,c
 17294  013278  0EF9               	movlw	high ___secs_to_tm@days_in_month
 17295  01327A  200C               	addwfc	(btemp+11)^0,w,c
 17296  01327C  6EF7               	movwf	tblptrh,c
 17297  01327E                     	if	1	;There are 3 active tblptr bytes
 17298  01327E  6AF8               	clrf	tblptru,c
 17299  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 17300  013282  22F8               	addwfc	tblptru,f,c
 17301  013284                     	endif
 17302  013284  0008               	tblrd		*
 17303  013286  006F FFD4  F00C    	movff	tablat,btemp+11
 17304  01328C  0060  F030  F005   	movff	btemp+11,btemp+4
 17305  013292  6A06               	clrf	(btemp+5)^0,c
 17306  013294  6A07               	clrf	(btemp+6)^0,c
 17307  013296  6A08               	clrf	(btemp+7)^0,c
 17308                           
 17309                           ;stkvar	_remdays @ sp[(-57)+25]
 17310  013298  0EE0               	movlw	-32
 17311  01329A  006F FF8C  F001    	movff	plusw1,btemp
 17312  0132A0  5005               	movf	(btemp+4)^0,w,c
 17313  0132A2  5C01               	subwf	btemp^0,w,c
 17314  0132A4  0EE1               	movlw	-31
 17315  0132A6  006F FF8C  F001    	movff	plusw1,btemp
 17316  0132AC  5006               	movf	(btemp+5)^0,w,c
 17317  0132AE  5801               	subwfb	btemp^0,w,c
 17318  0132B0  0EE2               	movlw	-30
 17319  0132B2  006F FF8C  F001    	movff	plusw1,btemp
 17320  0132B8  5007               	movf	(btemp+6)^0,w,c
 17321  0132BA  5801               	subwfb	btemp^0,w,c
 17322  0132BC  0EE3               	movlw	-29
 17323  0132BE  50E3               	movf	plusw1,w,c
 17324  0132C0  0A80               	xorlw	128
 17325  0132C2  6E01               	movwf	btemp^0,c
 17326  0132C4  5008               	movf	(btemp+7)^0,w,c
 17327  0132C6  0A80               	xorlw	128
 17328  0132C8  5801               	subwfb	btemp^0,w,c
 17329  0132CA  B0D8               	btfsc	status,0,c
 17330  0132CC  D79A               	goto	l16367
 17331                           
 17332                           ;stkvar	_months @ sp[(-57)+49]
 17333  0132CE  0EF9               	movlw	-7
 17334  0132D0  BEE3               	btfsc	plusw1,7,c
 17335  0132D2  D026               	goto	l16379
 17336  0132D4  0EF9               	movlw	-7
 17337  0132D6  50E3               	movf	plusw1,w,c
 17338  0132D8  E108               	bnz	u16090
 17339  0132DA  0EF8               	movlw	-8
 17340  0132DC  006F FF8C  F001    	movff	plusw1,btemp
 17341  0132E2  0E0A               	movlw	10
 17342  0132E4  5E01               	subwf	btemp^0,f,c
 17343  0132E6  A0D8               	btfss	status,0,c
 17344  0132E8  D01B               	goto	l16379
 17345  0132EA                     u16090:
 17346                           
 17347                           ;stkvar	_months @ sp[(-57)+49]
 17348  0132EA  50E1               	movf	fsr1l,w,c
 17349  0132EC  0FF8               	addlw	-8
 17350  0132EE  6ED9               	movwf	fsr2l,c
 17351  0132F0  50E2               	movf	fsr1h,w,c
 17352  0132F2  6EDA               	movwf	fsr2h,c
 17353  0132F4  0EFF               	movlw	255
 17354  0132F6  22DA               	addwfc	fsr2h,f,c
 17355  0132F8  0EF4               	movlw	244
 17356  0132FA  26DE               	addwf	postinc2,f,c
 17357  0132FC  0EFF               	movlw	255
 17358  0132FE  22DD               	addwfc	postdec2,f,c
 17359                           
 17360                           ;stkvar	_years @ sp[(-57)+1]
 17361  013300  50E1               	movf	fsr1l,w,c
 17362  013302  0FC8               	addlw	-56
 17363  013304  6ED9               	movwf	fsr2l,c
 17364  013306  50E2               	movf	fsr1h,w,c
 17365  013308  6EDA               	movwf	fsr2h,c
 17366  01330A  0EFF               	movlw	255
 17367  01330C  22DA               	addwfc	fsr2h,f,c
 17368  01330E  2ADE               	incf	postinc2,f,c
 17369  013310  0E00               	movlw	0
 17370  013312  22DE               	addwfc	postinc2,f,c
 17371  013314  22DE               	addwfc	postinc2,f,c
 17372  013316  22DE               	addwfc	postinc2,f,c
 17373  013318  22DE               	addwfc	postinc2,f,c
 17374  01331A  22DE               	addwfc	postinc2,f,c
 17375  01331C  22DE               	addwfc	postinc2,f,c
 17376  01331E  22DE               	addwfc	postinc2,f,c
 17377  013320                     l16379:
 17378                           
 17379                           ;stkvar	_years @ sp[(-57)+1]
 17380  013320  0EC8               	movlw	-56
 17381  013322  50E3               	movf	plusw1,w,c
 17382  013324  0F64               	addlw	100
 17383  013326  6E11               	movwf	(btemp+16)^0,c
 17384  013328  0EC9               	movlw	-55
 17385  01332A  006F FF8C  F012    	movff	plusw1,btemp+17
 17386  013330  0E00               	movlw	0
 17387  013332  2212               	addwfc	(btemp+17)^0,f,c
 17388  013334  0ECA               	movlw	-54
 17389  013336  006F FF8C  F013    	movff	plusw1,btemp+18
 17390  01333C  0E00               	movlw	0
 17391  01333E  2213               	addwfc	(btemp+18)^0,f,c
 17392  013340  0ECB               	movlw	-53
 17393  013342  006F FF8C  F014    	movff	plusw1,btemp+19
 17394  013348  0E00               	movlw	0
 17395  01334A  2214               	addwfc	(btemp+19)^0,f,c
 17396  01334C  0ECC               	movlw	-52
 17397  01334E  006F FF8C  F015    	movff	plusw1,btemp+20
 17398  013354  0E00               	movlw	0
 17399  013356  2215               	addwfc	(btemp+20)^0,f,c
 17400  013358  0ECD               	movlw	-51
 17401  01335A  006F FF8C  F016    	movff	plusw1,btemp+21
 17402  013360  0E00               	movlw	0
 17403  013362  2216               	addwfc	(btemp+21)^0,f,c
 17404  013364  0ECE               	movlw	-50
 17405  013366  006F FF8C  F017    	movff	plusw1,btemp+22
 17406  01336C  0E00               	movlw	0
 17407  01336E  2217               	addwfc	(btemp+22)^0,f,c
 17408  013370  0ECF               	movlw	-49
 17409  013372  006F FF8C  F018    	movff	plusw1,btemp+23
 17410  013378  0E00               	movlw	0
 17411  01337A  2218               	addwfc	(btemp+23)^0,f,c
 17412  01337C  BE18               	btfsc	(btemp+23)^0,7,c
 17413  01337E  D00C               	goto	u16100
 17414  013380  5018               	movf	(btemp+23)^0,w,c
 17415  013382  1017               	iorwf	(btemp+22)^0,w,c
 17416  013384  1016               	iorwf	(btemp+21)^0,w,c
 17417  013386  1015               	iorwf	(btemp+20)^0,w,c
 17418  013388  1014               	iorwf	(btemp+19)^0,w,c
 17419  01338A  1013               	iorwf	(btemp+18)^0,w,c
 17420  01338C  E103               	bnz	u16101
 17421  01338E  0E80               	movlw	128
 17422  013390  5C12               	subwf	(btemp+17)^0,w,c
 17423  013392  B0D8               	btfsc	status,0,c
 17424  013394                     u16101:
 17425  013394  EF36  F093         	goto	u15960
 17426  013398                     u16100:
 17427                           
 17428                           ;stkvar	_years @ sp[(-57)+1]
 17429  013398  0EC8               	movlw	-56
 17430  01339A  50E3               	movf	plusw1,w,c
 17431  01339C  0F64               	addlw	100
 17432  01339E  6E11               	movwf	(btemp+16)^0,c
 17433  0133A0  0EC9               	movlw	-55
 17434  0133A2  006F FF8C  F012    	movff	plusw1,btemp+17
 17435  0133A8  0E00               	movlw	0
 17436  0133AA  2212               	addwfc	(btemp+17)^0,f,c
 17437  0133AC  0ECA               	movlw	-54
 17438  0133AE  006F FF8C  F013    	movff	plusw1,btemp+18
 17439  0133B4  0E00               	movlw	0
 17440  0133B6  2213               	addwfc	(btemp+18)^0,f,c
 17441  0133B8  0ECB               	movlw	-53
 17442  0133BA  006F FF8C  F014    	movff	plusw1,btemp+19
 17443  0133C0  0E00               	movlw	0
 17444  0133C2  2214               	addwfc	(btemp+19)^0,f,c
 17445  0133C4  0ECC               	movlw	-52
 17446  0133C6  006F FF8C  F015    	movff	plusw1,btemp+20
 17447  0133CC  0E00               	movlw	0
 17448  0133CE  2215               	addwfc	(btemp+20)^0,f,c
 17449  0133D0  0ECD               	movlw	-51
 17450  0133D2  006F FF8C  F016    	movff	plusw1,btemp+21
 17451  0133D8  0E00               	movlw	0
 17452  0133DA  2216               	addwfc	(btemp+21)^0,f,c
 17453  0133DC  0ECE               	movlw	-50
 17454  0133DE  006F FF8C  F017    	movff	plusw1,btemp+22
 17455  0133E4  0E00               	movlw	0
 17456  0133E6  2217               	addwfc	(btemp+22)^0,f,c
 17457  0133E8  0ECF               	movlw	-49
 17458  0133EA  006F FF8C  F018    	movff	plusw1,btemp+23
 17459  0133F0  0E00               	movlw	0
 17460  0133F2  2218               	addwfc	(btemp+23)^0,f,c
 17461  0133F4  AE18               	btfss	(btemp+23)^0,7,c
 17462  0133F6  D011               	goto	l16387
 17463  0133F8  0E80               	movlw	128
 17464  0133FA  5C12               	subwf	(btemp+17)^0,w,c
 17465  0133FC  0EFF               	movlw	255
 17466  0133FE  5813               	subwfb	(btemp+18)^0,w,c
 17467  013400  0EFF               	movlw	255
 17468  013402  5814               	subwfb	(btemp+19)^0,w,c
 17469  013404  0EFF               	movlw	255
 17470  013406  5815               	subwfb	(btemp+20)^0,w,c
 17471  013408  0EFF               	movlw	255
 17472  01340A  5816               	subwfb	(btemp+21)^0,w,c
 17473  01340C  0EFF               	movlw	255
 17474  01340E  5817               	subwfb	(btemp+22)^0,w,c
 17475  013410  0EFF               	movlw	255
 17476  013412  5818               	subwfb	(btemp+23)^0,w,c
 17477  013414  A0D8               	btfss	status,0,c
 17478  013416  EF36  F093         	goto	u15960
 17479  01341A                     l16387:
 17480                           
 17481                           ;stkvar	_years @ sp[(-57)+1]
 17482  01341A  0EC8               	movlw	-56
 17483  01341C  50E3               	movf	plusw1,w,c
 17484  01341E  0F64               	addlw	100
 17485  013420  6E0B               	movwf	(btemp+10)^0,c
 17486  013422  0EC9               	movlw	-55
 17487  013424  006F FF8C  F00C    	movff	plusw1,btemp+11
 17488  01342A  0E00               	movlw	0
 17489  01342C  220C               	addwfc	(btemp+11)^0,f,c
 17490                           
 17491                           ;stkvar	_tm @ sp[(-57)+-10]
 17492  01342E  0EBD               	movlw	-67
 17493  013430  006F FF8C  F009    	movff	plusw1,btemp+8
 17494  013436  0EBE               	movlw	-66
 17495  013438  006F FF8C  F00A    	movff	plusw1,btemp+9
 17496  01343E  0E0A               	movlw	10
 17497  013440  2409               	addwf	(btemp+8)^0,w,c
 17498  013442  6ED9               	movwf	fsr2l,c
 17499  013444  0E00               	movlw	0
 17500  013446  200A               	addwfc	(btemp+9)^0,w,c
 17501  013448  6EDA               	movwf	fsr2h,c
 17502  01344A  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17503  013450  0060  F033  FFDD   	movff	btemp+11,postdec2
 17504                           
 17505                           ;stkvar	_months @ sp[(-57)+49]
 17506  013456  0EF8               	movlw	-8
 17507  013458  50E3               	movf	plusw1,w,c
 17508  01345A  0F02               	addlw	2
 17509  01345C  6E0B               	movwf	(btemp+10)^0,c
 17510  01345E  0EF9               	movlw	-7
 17511  013460  006F FF8C  F00C    	movff	plusw1,btemp+11
 17512  013466  0E00               	movlw	0
 17513  013468  220C               	addwfc	(btemp+11)^0,f,c
 17514                           
 17515                           ;stkvar	_tm @ sp[(-57)+-10]
 17516  01346A  0EBD               	movlw	-67
 17517  01346C  006F FF8C  F009    	movff	plusw1,btemp+8
 17518  013472  0EBE               	movlw	-66
 17519  013474  006F FF8C  F00A    	movff	plusw1,btemp+9
 17520  01347A  0E08               	movlw	8
 17521  01347C  2409               	addwf	(btemp+8)^0,w,c
 17522  01347E  6ED9               	movwf	fsr2l,c
 17523  013480  0E00               	movlw	0
 17524  013482  200A               	addwfc	(btemp+9)^0,w,c
 17525  013484  6EDA               	movwf	fsr2h,c
 17526  013486  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17527  01348C  0060  F033  FFDD   	movff	btemp+11,postdec2
 17528                           
 17529                           ;stkvar	_remdays @ sp[(-57)+25]
 17530  013492  0EE0               	movlw	-32
 17531  013494  50E3               	movf	plusw1,w,c
 17532  013496  0F01               	addlw	1
 17533  013498  6E0B               	movwf	(btemp+10)^0,c
 17534  01349A  0EE1               	movlw	-31
 17535  01349C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17536  0134A2  0E00               	movlw	0
 17537  0134A4  220C               	addwfc	(btemp+11)^0,f,c
 17538                           
 17539                           ;stkvar	_tm @ sp[(-57)+-10]
 17540  0134A6  0EBD               	movlw	-67
 17541  0134A8  006F FF8C  F009    	movff	plusw1,btemp+8
 17542  0134AE  0EBE               	movlw	-66
 17543  0134B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17544  0134B6  0E06               	movlw	6
 17545  0134B8  2409               	addwf	(btemp+8)^0,w,c
 17546  0134BA  6ED9               	movwf	fsr2l,c
 17547  0134BC  0E00               	movlw	0
 17548  0134BE  200A               	addwfc	(btemp+9)^0,w,c
 17549  0134C0  6EDA               	movwf	fsr2h,c
 17550  0134C2  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17551  0134C8  0060  F033  FFDD   	movff	btemp+11,postdec2
 17552                           
 17553                           ;stkvar	_wday @ sp[(-57)+55]
 17554  0134CE  50E1               	movf	fsr1l,w,c
 17555  0134D0  0FFE               	addlw	-2
 17556  0134D2  6ED9               	movwf	fsr2l,c
 17557  0134D4  50E2               	movf	fsr1h,w,c
 17558  0134D6  6EDA               	movwf	fsr2h,c
 17559  0134D8  0EFF               	movlw	255
 17560  0134DA  22DA               	addwfc	fsr2h,f,c
 17561                           
 17562                           ;stkvar	_tm @ sp[(-57)+-10]
 17563  0134DC  0EBD               	movlw	-67
 17564  0134DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17565  0134E4  0EBE               	movlw	-66
 17566  0134E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17567  0134EC  0E0C               	movlw	12
 17568  0134EE  240B               	addwf	(btemp+10)^0,w,c
 17569  0134F0  6EE9               	movwf	fsr0l,c
 17570  0134F2  0E00               	movlw	0
 17571  0134F4  200C               	addwfc	(btemp+11)^0,w,c
 17572  0134F6  6EEA               	movwf	fsr0h,c
 17573  0134F8  006F FF7B FFEE     	movff	postinc2,postinc0
 17574  0134FE  006F FF77 FFED     	movff	postdec2,postdec0
 17575                           
 17576                           ;stkvar	_yday @ sp[(-57)+53]
 17577  013504  50E1               	movf	fsr1l,w,c
 17578  013506  0FFC               	addlw	-4
 17579  013508  6ED9               	movwf	fsr2l,c
 17580  01350A  50E2               	movf	fsr1h,w,c
 17581  01350C  6EDA               	movwf	fsr2h,c
 17582  01350E  0EFF               	movlw	255
 17583  013510  22DA               	addwfc	fsr2h,f,c
 17584                           
 17585                           ;stkvar	_tm @ sp[(-57)+-10]
 17586  013512  0EBD               	movlw	-67
 17587  013514  006F FF8C  F00B    	movff	plusw1,btemp+10
 17588  01351A  0EBE               	movlw	-66
 17589  01351C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17590  013522  0E0E               	movlw	14
 17591  013524  240B               	addwf	(btemp+10)^0,w,c
 17592  013526  6EE9               	movwf	fsr0l,c
 17593  013528  0E00               	movlw	0
 17594  01352A  200C               	addwfc	(btemp+11)^0,w,c
 17595  01352C  6EEA               	movwf	fsr0h,c
 17596  01352E  006F FF7B FFEE     	movff	postinc2,postinc0
 17597  013534  006F FF77 FFED     	movff	postdec2,postdec0
 17598  01353A  0E10               	movlw	16
 17599  01353C  6EE6               	movwf	postinc1,c
 17600  01353E  0E0E               	movlw	14
 17601  013540  6EE6               	movwf	postinc1,c
 17602  013542  0E00               	movlw	0
 17603  013544  6EE6               	movwf	postinc1,c
 17604  013546  0E00               	movlw	0
 17605  013548  6EE6               	movwf	postinc1,c
 17606                           
 17607                           ;stkvar	_remsecs @ sp[(-61)+41]
 17608  01354A  0EEC               	movlw	-20
 17609  01354C  006F FF8F FFE6     	movff	plusw1,postinc1
 17610  013552  006F FF8F FFE6     	movff	plusw1,postinc1
 17611  013558  006F FF8F FFE6     	movff	plusw1,postinc1
 17612  01355E  006F FF8F FFE6     	movff	plusw1,postinc1
 17613  013564  ECEB  F0E8         	call	___aldiv	;wreg free
 17614  013568  0060  F004  F00B   	movff	btemp,btemp+10
 17615  01356E  0060  F008  F00C   	movff	btemp+1,btemp+11
 17616                           
 17617                           ;stkvar	_tm @ sp[(-57)+-10]
 17618  013574  0EBD               	movlw	-67
 17619  013576  006F FF8C  F009    	movff	plusw1,btemp+8
 17620  01357C  0EBE               	movlw	-66
 17621  01357E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17622  013584  0E04               	movlw	4
 17623  013586  2409               	addwf	(btemp+8)^0,w,c
 17624  013588  6ED9               	movwf	fsr2l,c
 17625  01358A  0E00               	movlw	0
 17626  01358C  200A               	addwfc	(btemp+9)^0,w,c
 17627  01358E  6EDA               	movwf	fsr2h,c
 17628  013590  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17629  013596  0060  F033  FFDD   	movff	btemp+11,postdec2
 17630  01359C  0E3C               	movlw	60
 17631  01359E  6EE6               	movwf	postinc1,c
 17632  0135A0  0E00               	movlw	0
 17633  0135A2  6EE6               	movwf	postinc1,c
 17634  0135A4  0E00               	movlw	0
 17635  0135A6  6EE6               	movwf	postinc1,c
 17636  0135A8  0E00               	movlw	0
 17637  0135AA  6EE6               	movwf	postinc1,c
 17638  0135AC  0E3C               	movlw	60
 17639  0135AE  6EE6               	movwf	postinc1,c
 17640  0135B0  0E00               	movlw	0
 17641  0135B2  6EE6               	movwf	postinc1,c
 17642  0135B4  0E00               	movlw	0
 17643  0135B6  6EE6               	movwf	postinc1,c
 17644  0135B8  0E00               	movlw	0
 17645  0135BA  6EE6               	movwf	postinc1,c
 17646                           
 17647                           ;stkvar	_remsecs @ sp[(-65)+41]
 17648  0135BC  0EE8               	movlw	-24
 17649  0135BE  006F FF8F FFE6     	movff	plusw1,postinc1
 17650  0135C4  006F FF8F FFE6     	movff	plusw1,postinc1
 17651  0135CA  006F FF8F FFE6     	movff	plusw1,postinc1
 17652  0135D0  006F FF8F FFE6     	movff	plusw1,postinc1
 17653  0135D6  ECEB  F0E8         	call	___aldiv	;wreg free
 17654  0135DA  0060  F007  FFE6   	movff	btemp,postinc1
 17655  0135E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17656  0135E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17657  0135EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 17658  0135F2  EC70  F0ED         	call	___almod	;wreg free
 17659  0135F6  0060  F004  F00B   	movff	btemp,btemp+10
 17660  0135FC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17661                           
 17662                           ;stkvar	_tm @ sp[(-57)+-10]
 17663  013602  0EBD               	movlw	-67
 17664  013604  006F FF8C  F009    	movff	plusw1,btemp+8
 17665  01360A  0EBE               	movlw	-66
 17666  01360C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17667  013612  0E02               	movlw	2
 17668  013614  2409               	addwf	(btemp+8)^0,w,c
 17669  013616  6ED9               	movwf	fsr2l,c
 17670  013618  0E00               	movlw	0
 17671  01361A  200A               	addwfc	(btemp+9)^0,w,c
 17672  01361C  6EDA               	movwf	fsr2h,c
 17673  01361E  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17674  013624  0060  F033  FFDD   	movff	btemp+11,postdec2
 17675  01362A  0E3C               	movlw	60
 17676  01362C  6EE6               	movwf	postinc1,c
 17677  01362E  0E00               	movlw	0
 17678  013630  6EE6               	movwf	postinc1,c
 17679  013632  0E00               	movlw	0
 17680  013634  6EE6               	movwf	postinc1,c
 17681  013636  0E00               	movlw	0
 17682  013638  6EE6               	movwf	postinc1,c
 17683                           
 17684                           ;stkvar	_remsecs @ sp[(-61)+41]
 17685  01363A  0EEC               	movlw	-20
 17686  01363C  006F FF8F FFE6     	movff	plusw1,postinc1
 17687  013642  006F FF8F FFE6     	movff	plusw1,postinc1
 17688  013648  006F FF8F FFE6     	movff	plusw1,postinc1
 17689  01364E  006F FF8F FFE6     	movff	plusw1,postinc1
 17690  013654  EC70  F0ED         	call	___almod	;wreg free
 17691  013658  0060  F004  F00B   	movff	btemp,btemp+10
 17692  01365E  0060  F008  F00C   	movff	btemp+1,btemp+11
 17693                           
 17694                           ;stkvar	_tm @ sp[(-57)+-10]
 17695  013664  0EBD               	movlw	-67
 17696  013666  006F FF8F FFD9     	movff	plusw1,fsr2l
 17697  01366C  0EBE               	movlw	-66
 17698  01366E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17699  013674  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17700  01367A  0060  F033  FFDD   	movff	btemp+11,postdec2
 17701  013680  0E00               	movlw	0
 17702  013682  6E01               	movwf	btemp^0,c
 17703  013684  6A02               	clrf	(btemp+1)^0,c
 17704  013686  6A03               	clrf	(btemp+2)^0,c
 17705  013688  6A04               	clrf	(btemp+3)^0,c
 17706  01368A                     l3822:
 17707                           
 17708                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 17709  01368A  0EBD               	movlw	189
 17710  01368C  26E1               	addwf	fsr1l,f,c
 17711  01368E  0EFF               	movlw	255
 17712  013690  22E2               	addwfc	fsr1h,f,c
 17713  013692  0012               	return		;funcret
 17714  013694                     __end_of___secs_to_tm:
 17715                           	opt callstack 0
 17716                           
 17717 ;; *************** function ___omul *****************
 17718 ;; Defined at:
 17719 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;  multiplier      8  [STACK] unsigned long long 
 17722 ;;  multiplicand    8  [STACK] unsigned long long 
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;  product         8  [STACK] unsigned long long 
 17725 ;; Return value:  Size  Location     Type
 17726 ;;                  8  [STACK] unsigned long long 
 17727 ;; Registers used:
 17728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17738 ;;Total ram usage:        0 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; Hardware stack levels required when called:   15
 17741 ;; This function calls:
 17742 ;;		Nothing
 17743 ;; This function is called by:
 17744 ;;		___secs_to_tm
 17745 ;;		___year_to_secs
 17746 ;; This function uses a reentrant model
 17747 ;;
 17748                           
 17749                           	psect	text47
 17750  01DF0A                     __ptext47:
 17751                           	opt callstack 0
 17752  01DF0A                     ___omul:
 17753                           	opt callstack 0
 17754                           
 17755                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17756  01DF0A  0E08               	movlw	8
 17757  01DF0C  26E1               	addwf	fsr1l,f,c
 17758  01DF0E  0E00               	movlw	0
 17759  01DF10  22E2               	addwfc	fsr1h,f,c
 17760                           
 17761                           ;stkvar	_product @ sp[(-8)+0]
 17762                           
 17763                           ;incstack = 0
 17764  01DF12  0E07               	movlw	7
 17765  01DF14  6E01               	movwf	btemp^0,c
 17766  01DF16  0EF8               	movlw	-8
 17767  01DF18                     u7991:
 17768  01DF18  6AE3               	clrf	plusw1,c
 17769  01DF1A  2AE8               	incf	wreg,f,c
 17770  01DF1C  0601               	decf	btemp^0,f,c
 17771  01DF1E  E2FC               	bc	u7991
 17772  01DF20                     l10105:
 17773                           
 17774                           ;stkvar	_multiplier @ sp[(-8)+-8]
 17775  01DF20  0EF0               	movlw	-16
 17776  01DF22  A0E3               	btfss	plusw1,0,c
 17777  01DF24  D050               	goto	l10109
 17778                           
 17779                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 17780                           ;stkvar	_product @ sp[(-8)+0]
 17781  01DF26  0EF8               	movlw	-8
 17782  01DF28  50E3               	movf	plusw1,w,c
 17783  01DF2A  6E01               	movwf	btemp^0,c
 17784  01DF2C  0EE8               	movlw	-24
 17785  01DF2E  50E3               	movf	plusw1,w,c
 17786  01DF30  2601               	addwf	btemp^0,f,c
 17787  01DF32  0EF8               	movlw	-8
 17788  01DF34  0060  F007  FFE3   	movff	btemp,plusw1
 17789  01DF3A  0EF9               	movlw	-7
 17790  01DF3C  50E3               	movf	plusw1,w,c
 17791  01DF3E  6E01               	movwf	btemp^0,c
 17792  01DF40  0EE9               	movlw	-23
 17793  01DF42  50E3               	movf	plusw1,w,c
 17794  01DF44  2201               	addwfc	btemp^0,f,c
 17795  01DF46  0EF9               	movlw	-7
 17796  01DF48  0060  F007  FFE3   	movff	btemp,plusw1
 17797  01DF4E  0EFA               	movlw	-6
 17798  01DF50  50E3               	movf	plusw1,w,c
 17799  01DF52  6E01               	movwf	btemp^0,c
 17800  01DF54  0EEA               	movlw	-22
 17801  01DF56  50E3               	movf	plusw1,w,c
 17802  01DF58  2201               	addwfc	btemp^0,f,c
 17803  01DF5A  0EFA               	movlw	-6
 17804  01DF5C  0060  F007  FFE3   	movff	btemp,plusw1
 17805  01DF62  0EFB               	movlw	-5
 17806  01DF64  50E3               	movf	plusw1,w,c
 17807  01DF66  6E01               	movwf	btemp^0,c
 17808  01DF68  0EEB               	movlw	-21
 17809  01DF6A  50E3               	movf	plusw1,w,c
 17810  01DF6C  2201               	addwfc	btemp^0,f,c
 17811  01DF6E  0EFB               	movlw	-5
 17812  01DF70  0060  F007  FFE3   	movff	btemp,plusw1
 17813  01DF76  0EFC               	movlw	-4
 17814  01DF78  50E3               	movf	plusw1,w,c
 17815  01DF7A  6E01               	movwf	btemp^0,c
 17816  01DF7C  0EEC               	movlw	-20
 17817  01DF7E  50E3               	movf	plusw1,w,c
 17818  01DF80  2201               	addwfc	btemp^0,f,c
 17819  01DF82  0EFC               	movlw	-4
 17820  01DF84  0060  F007  FFE3   	movff	btemp,plusw1
 17821  01DF8A  0EFD               	movlw	-3
 17822  01DF8C  50E3               	movf	plusw1,w,c
 17823  01DF8E  6E01               	movwf	btemp^0,c
 17824  01DF90  0EED               	movlw	-19
 17825  01DF92  50E3               	movf	plusw1,w,c
 17826  01DF94  2201               	addwfc	btemp^0,f,c
 17827  01DF96  0EFD               	movlw	-3
 17828  01DF98  0060  F007  FFE3   	movff	btemp,plusw1
 17829  01DF9E  0EFE               	movlw	-2
 17830  01DFA0  50E3               	movf	plusw1,w,c
 17831  01DFA2  6E01               	movwf	btemp^0,c
 17832  01DFA4  0EEE               	movlw	-18
 17833  01DFA6  50E3               	movf	plusw1,w,c
 17834  01DFA8  2201               	addwfc	btemp^0,f,c
 17835  01DFAA  0EFE               	movlw	-2
 17836  01DFAC  0060  F007  FFE3   	movff	btemp,plusw1
 17837  01DFB2  0EFF               	movlw	-1
 17838  01DFB4  50E3               	movf	plusw1,w,c
 17839  01DFB6  6E01               	movwf	btemp^0,c
 17840  01DFB8  0EEF               	movlw	-17
 17841  01DFBA  50E3               	movf	plusw1,w,c
 17842  01DFBC  2201               	addwfc	btemp^0,f,c
 17843  01DFBE  0EFF               	movlw	-1
 17844  01DFC0  0060  F007  FFE3   	movff	btemp,plusw1
 17845  01DFC6                     l10109:
 17846                           
 17847                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 17848  01DFC6  90D8               	bcf	status,0,c
 17849  01DFC8  0EE8               	movlw	-24
 17850  01DFCA  36E3               	rlcf	plusw1,f,c
 17851  01DFCC  0EE9               	movlw	-23
 17852  01DFCE  36E3               	rlcf	plusw1,f,c
 17853  01DFD0  0EEA               	movlw	-22
 17854  01DFD2  36E3               	rlcf	plusw1,f,c
 17855  01DFD4  0EEB               	movlw	-21
 17856  01DFD6  36E3               	rlcf	plusw1,f,c
 17857  01DFD8  0EEC               	movlw	-20
 17858  01DFDA  36E3               	rlcf	plusw1,f,c
 17859  01DFDC  0EED               	movlw	-19
 17860  01DFDE  36E3               	rlcf	plusw1,f,c
 17861  01DFE0  0EEE               	movlw	-18
 17862  01DFE2  36E3               	rlcf	plusw1,f,c
 17863  01DFE4  0EEF               	movlw	-17
 17864  01DFE6  36E3               	rlcf	plusw1,f,c
 17865                           
 17866                           ;stkvar	_multiplier @ sp[(-8)+-8]
 17867  01DFE8  90D8               	bcf	status,0,c
 17868  01DFEA  0EF7               	movlw	-9
 17869  01DFEC  32E3               	rrcf	plusw1,f,c
 17870  01DFEE  0EF6               	movlw	-10
 17871  01DFF0  32E3               	rrcf	plusw1,f,c
 17872  01DFF2  0EF5               	movlw	-11
 17873  01DFF4  32E3               	rrcf	plusw1,f,c
 17874  01DFF6  0EF4               	movlw	-12
 17875  01DFF8  32E3               	rrcf	plusw1,f,c
 17876  01DFFA  0EF3               	movlw	-13
 17877  01DFFC  32E3               	rrcf	plusw1,f,c
 17878  01DFFE  0EF2               	movlw	-14
 17879  01E000  32E3               	rrcf	plusw1,f,c
 17880  01E002  0EF1               	movlw	-15
 17881  01E004  32E3               	rrcf	plusw1,f,c
 17882  01E006  0EF0               	movlw	-16
 17883  01E008  32E3               	rrcf	plusw1,f,c
 17884                           
 17885                           ;stkvar	_multiplier @ sp[(-8)+-8]
 17886  01E00A  0EF0               	movlw	-16
 17887  01E00C  50E3               	movf	plusw1,w,c
 17888  01E00E  E188               	bnz	l10105
 17889  01E010  0EF1               	movlw	-15
 17890  01E012  50E3               	movf	plusw1,w,c
 17891  01E014  E185               	bnz	l10105
 17892  01E016  0EF2               	movlw	-14
 17893  01E018  50E3               	movf	plusw1,w,c
 17894  01E01A  E182               	bnz	l10105
 17895  01E01C  0EF3               	movlw	-13
 17896  01E01E  50E3               	movf	plusw1,w,c
 17897  01E020  E10C               	bnz	u8011
 17898  01E022  0EF4               	movlw	-12
 17899  01E024  50E3               	movf	plusw1,w,c
 17900  01E026  E109               	bnz	u8011
 17901  01E028  0EF5               	movlw	-11
 17902  01E02A  50E3               	movf	plusw1,w,c
 17903  01E02C  E106               	bnz	u8011
 17904  01E02E  0EF6               	movlw	-10
 17905  01E030  50E3               	movf	plusw1,w,c
 17906  01E032  E103               	bnz	u8011
 17907  01E034  0EF7               	movlw	-9
 17908  01E036  50E3               	movf	plusw1,w,c
 17909  01E038  A4D8               	btfss	status,2,c
 17910  01E03A                     u8011:
 17911  01E03A  D772               	goto	l10105
 17912                           
 17913                           ;stkvar	_product @ sp[(-8)+0]
 17914  01E03C  0EF8               	movlw	248
 17915  01E03E  24E1               	addwf	fsr1l,w,c
 17916  01E040  6ED9               	movwf	fsr2l,c
 17917  01E042  0EFF               	movlw	255
 17918  01E044  20E2               	addwfc	fsr1h,w,c
 17919  01E046  6EDA               	movwf	fsr2h,c
 17920                           
 17921                           ;stkvar	?___omul @ sp[(-8)+-8]
 17922  01E048  0E08               	movlw	8
 17923  01E04A  6E01               	movwf	btemp^0,c
 17924  01E04C  0EF0               	movlw	-16
 17925  01E04E                     us802999:
 17926  01E04E  006F FF7B FFE3     	movff	postinc2,plusw1
 17927  01E054  28E8               	incf	wreg,w,c
 17928  01E056  2E01               	decfsz	btemp^0,f,c
 17929  01E058  D7FA               	bra	us802999
 17930                           
 17931                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 17932  01E05A  0EF8               	movlw	248
 17933  01E05C  26E1               	addwf	fsr1l,f,c
 17934  01E05E  0EFF               	movlw	255
 17935  01E060  22E2               	addwfc	fsr1h,f,c
 17936  01E062  0012               	return		;funcret
 17937  01E064                     __end_of___omul:
 17938                           	opt callstack 0
 17939                           
 17940 ;; *************** function ___lmul *****************
 17941 ;; Defined at:
 17942 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 17943 ;; Parameters:    Size  Location     Type
 17944 ;;  multiplier      4  [STACK] unsigned long 
 17945 ;;  multiplicand    4  [STACK] unsigned long 
 17946 ;; Auto vars:     Size  Location     Type
 17947 ;;  product         4  [STACK] unsigned long 
 17948 ;; Return value:  Size  Location     Type
 17949 ;;                  4  [STACK] unsigned long 
 17950 ;; Registers used:
 17951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17952 ;; Tracked objects:
 17953 ;;		On entry : 0/0
 17954 ;;		On exit  : 0/0
 17955 ;;		Unchanged: 0/0
 17956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17961 ;;Total ram usage:        0 bytes
 17962 ;; Hardware stack levels used:    1
 17963 ;; Hardware stack levels required when called:   15
 17964 ;; This function calls:
 17965 ;;		Nothing
 17966 ;; This function is called by:
 17967 ;;		___secs_to_tm
 17968 ;;		_rule_to_secs
 17969 ;;		___year_to_secs
 17970 ;; This function uses a reentrant model
 17971 ;;
 17972                           
 17973                           	psect	text48
 17974  01F60E                     __ptext48:
 17975                           	opt callstack 0
 17976  01F60E                     ___lmul:
 17977                           	opt callstack 0
 17978                           
 17979                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17980  01F60E  52E6               	movf	postinc1,f,c
 17981  01F610  52E6               	movf	postinc1,f,c
 17982  01F612  52E6               	movf	postinc1,f,c
 17983  01F614  52E6               	movf	postinc1,f,c
 17984                           
 17985                           ;stkvar	_product @ sp[(-4)+0]
 17986                           
 17987                           ;incstack = 0
 17988  01F616  0EFC               	movlw	-4
 17989  01F618  6AE3               	clrf	plusw1,c
 17990  01F61A  0EFD               	movlw	-3
 17991  01F61C  6AE3               	clrf	plusw1,c
 17992  01F61E  0EFE               	movlw	-2
 17993  01F620  6AE3               	clrf	plusw1,c
 17994  01F622  0EFF               	movlw	-1
 17995  01F624  6AE3               	clrf	plusw1,c
 17996  01F626                     l2706:
 17997                           
 17998                           ;stkvar	_multiplier @ sp[(-4)+-4]
 17999  01F626  0EF8               	movlw	-8
 18000  01F628  A0E3               	btfss	plusw1,0,c
 18001  01F62A  D028               	goto	l10095
 18002                           
 18003                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18004                           ;stkvar	_product @ sp[(-4)+0]
 18005  01F62C  0EFC               	movlw	-4
 18006  01F62E  50E3               	movf	plusw1,w,c
 18007  01F630  6E01               	movwf	btemp^0,c
 18008  01F632  0EF4               	movlw	-12
 18009  01F634  50E3               	movf	plusw1,w,c
 18010  01F636  2601               	addwf	btemp^0,f,c
 18011  01F638  0EFC               	movlw	-4
 18012  01F63A  0060  F007  FFE3   	movff	btemp,plusw1
 18013  01F640  0EFD               	movlw	-3
 18014  01F642  50E3               	movf	plusw1,w,c
 18015  01F644  6E01               	movwf	btemp^0,c
 18016  01F646  0EF5               	movlw	-11
 18017  01F648  50E3               	movf	plusw1,w,c
 18018  01F64A  2201               	addwfc	btemp^0,f,c
 18019  01F64C  0EFD               	movlw	-3
 18020  01F64E  0060  F007  FFE3   	movff	btemp,plusw1
 18021  01F654  0EFE               	movlw	-2
 18022  01F656  50E3               	movf	plusw1,w,c
 18023  01F658  6E01               	movwf	btemp^0,c
 18024  01F65A  0EF6               	movlw	-10
 18025  01F65C  50E3               	movf	plusw1,w,c
 18026  01F65E  2201               	addwfc	btemp^0,f,c
 18027  01F660  0EFE               	movlw	-2
 18028  01F662  0060  F007  FFE3   	movff	btemp,plusw1
 18029  01F668  0EFF               	movlw	-1
 18030  01F66A  50E3               	movf	plusw1,w,c
 18031  01F66C  6E01               	movwf	btemp^0,c
 18032  01F66E  0EF7               	movlw	-9
 18033  01F670  50E3               	movf	plusw1,w,c
 18034  01F672  2201               	addwfc	btemp^0,f,c
 18035  01F674  0EFF               	movlw	-1
 18036  01F676  0060  F007  FFE3   	movff	btemp,plusw1
 18037  01F67C                     l10095:
 18038                           
 18039                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18040  01F67C  90D8               	bcf	status,0,c
 18041  01F67E  0EF4               	movlw	-12
 18042  01F680  36E3               	rlcf	plusw1,f,c
 18043  01F682  0EF5               	movlw	-11
 18044  01F684  36E3               	rlcf	plusw1,f,c
 18045  01F686  0EF6               	movlw	-10
 18046  01F688  36E3               	rlcf	plusw1,f,c
 18047  01F68A  0EF7               	movlw	-9
 18048  01F68C  36E3               	rlcf	plusw1,f,c
 18049                           
 18050                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18051  01F68E  90D8               	bcf	status,0,c
 18052  01F690  0EFB               	movlw	-5
 18053  01F692  32E3               	rrcf	plusw1,f,c
 18054  01F694  0EFA               	movlw	-6
 18055  01F696  32E3               	rrcf	plusw1,f,c
 18056  01F698  0EF9               	movlw	-7
 18057  01F69A  32E3               	rrcf	plusw1,f,c
 18058  01F69C  0EF8               	movlw	-8
 18059  01F69E  32E3               	rrcf	plusw1,f,c
 18060                           
 18061                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18062  01F6A0  0EF8               	movlw	-8
 18063  01F6A2  50E3               	movf	plusw1,w,c
 18064  01F6A4  E1C0               	bnz	l2706
 18065  01F6A6  0EF9               	movlw	-7
 18066  01F6A8  50E3               	movf	plusw1,w,c
 18067  01F6AA  E1BD               	bnz	l2706
 18068  01F6AC  0EFA               	movlw	-6
 18069  01F6AE  50E3               	movf	plusw1,w,c
 18070  01F6B0  E1BA               	bnz	l2706
 18071  01F6B2  0EFB               	movlw	-5
 18072  01F6B4  50E3               	movf	plusw1,w,c
 18073  01F6B6  A4D8               	btfss	status,2,c
 18074  01F6B8  D7B6               	goto	l2706
 18075                           
 18076                           ;stkvar	_product @ sp[(-4)+0]
 18077  01F6BA  0EFC               	movlw	-4
 18078  01F6BC  006F FF8C  F001    	movff	plusw1,btemp
 18079  01F6C2  0EFD               	movlw	-3
 18080  01F6C4  006F FF8C  F002    	movff	plusw1,btemp+1
 18081  01F6CA  0EFE               	movlw	-2
 18082  01F6CC  006F FF8C  F003    	movff	plusw1,btemp+2
 18083  01F6D2  0EFF               	movlw	-1
 18084  01F6D4  006F FF8C  F004    	movff	plusw1,btemp+3
 18085                           
 18086                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18087  01F6DA  0EF4               	movlw	244
 18088  01F6DC  26E1               	addwf	fsr1l,f,c
 18089  01F6DE  0EFF               	movlw	255
 18090  01F6E0  22E2               	addwfc	fsr1h,f,c
 18091  01F6E2  0012               	return		;funcret
 18092  01F6E4                     __end_of___lmul:
 18093                           	opt callstack 0
 18094                           
 18095 ;; *************** function ___almod *****************
 18096 ;; Defined at:
 18097 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18098 ;; Parameters:    Size  Location     Type
 18099 ;;  dividend        4  [STACK] long 
 18100 ;;  divisor         4  [STACK] long 
 18101 ;; Auto vars:     Size  Location     Type
 18102 ;;  sign            1  [STACK] unsigned char 
 18103 ;;  counter         1  [STACK] unsigned char 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  4  [STACK] long 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/1
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;Total ram usage:        0 bytes
 18118 ;; Hardware stack levels used:    1
 18119 ;; Hardware stack levels required when called:   15
 18120 ;; This function calls:
 18121 ;;		Nothing
 18122 ;; This function is called by:
 18123 ;;		___secs_to_tm
 18124 ;; This function uses a reentrant model
 18125 ;;
 18126                           
 18127                           	psect	text49
 18128  01DAE0                     __ptext49:
 18129                           	opt callstack 0
 18130  01DAE0                     ___almod:
 18131                           	opt callstack 0
 18132                           
 18133                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18134  01DAE0  52E6               	movf	postinc1,f,c
 18135  01DAE2  52E6               	movf	postinc1,f,c
 18136                           
 18137                           ;stkvar	_sign @ sp[(-2)+0]
 18138                           
 18139                           ;incstack = 0
 18140  01DAE4  0EFE               	movlw	-2
 18141  01DAE6  6AE3               	clrf	plusw1,c
 18142                           
 18143                           ;stkvar	_dividend @ sp[(-2)+-4]
 18144  01DAE8  0EFD               	movlw	-3
 18145  01DAEA  AEE3               	btfss	plusw1,7,c
 18146  01DAEC  D014               	goto	l11885
 18147                           
 18148                           ;stkvar	_dividend @ sp[(-2)+-4]
 18149                           ;stkvar	_dividend @ sp[(-2)+-4]
 18150  01DAEE  0EFA               	movlw	-6
 18151  01DAF0  6CE3               	negf	plusw1,c
 18152  01DAF2  0EFB               	movlw	-5
 18153  01DAF4  1EE3               	comf	plusw1,f,c
 18154  01DAF6  0EFC               	movlw	-4
 18155  01DAF8  1EE3               	comf	plusw1,f,c
 18156  01DAFA  0EFD               	movlw	-3
 18157  01DAFC  1EE3               	comf	plusw1,f,c
 18158  01DAFE  E308               	bnc	u11140
 18159  01DB00  0EFB               	movlw	-5
 18160  01DB02  2AE3               	incf	plusw1,f,c
 18161  01DB04  E305               	bnc	u11140
 18162  01DB06  0EFC               	movlw	-4
 18163  01DB08  2AE3               	incf	plusw1,f,c
 18164  01DB0A  E302               	bnc	u11140
 18165  01DB0C  0EFD               	movlw	-3
 18166  01DB0E  2AE3               	incf	plusw1,f,c
 18167  01DB10                     u11140:
 18168                           
 18169                           ;stkvar	_sign @ sp[(-2)+0]
 18170  01DB10  0EFE               	movlw	-2
 18171  01DB12  6AE3               	clrf	plusw1,c
 18172  01DB14  2AE3               	incf	plusw1,f,c
 18173  01DB16                     l11885:
 18174                           
 18175                           ;stkvar	_divisor @ sp[(-2)+-8]
 18176  01DB16  0EF9               	movlw	-7
 18177  01DB18  AEE3               	btfss	plusw1,7,c
 18178  01DB1A  D011               	goto	u11160
 18179                           
 18180                           ;stkvar	_divisor @ sp[(-2)+-8]
 18181                           ;stkvar	_divisor @ sp[(-2)+-8]
 18182  01DB1C  0EF6               	movlw	-10
 18183  01DB1E  6CE3               	negf	plusw1,c
 18184  01DB20  0EF7               	movlw	-9
 18185  01DB22  1EE3               	comf	plusw1,f,c
 18186  01DB24  0EF8               	movlw	-8
 18187  01DB26  1EE3               	comf	plusw1,f,c
 18188  01DB28  0EF9               	movlw	-7
 18189  01DB2A  1EE3               	comf	plusw1,f,c
 18190  01DB2C  E308               	bnc	u11160
 18191  01DB2E  0EF7               	movlw	-9
 18192  01DB30  2AE3               	incf	plusw1,f,c
 18193  01DB32  E305               	bnc	u11160
 18194  01DB34  0EF8               	movlw	-8
 18195  01DB36  2AE3               	incf	plusw1,f,c
 18196  01DB38  E302               	bnc	u11160
 18197  01DB3A  0EF9               	movlw	-7
 18198  01DB3C  2AE3               	incf	plusw1,f,c
 18199  01DB3E                     u11160:
 18200                           
 18201                           ;stkvar	_divisor @ sp[(-2)+-8]
 18202  01DB3E  0EF6               	movlw	-10
 18203  01DB40  50E3               	movf	plusw1,w,c
 18204  01DB42  E10A               	bnz	u11170
 18205  01DB44  0EF7               	movlw	-9
 18206  01DB46  50E3               	movf	plusw1,w,c
 18207  01DB48  E107               	bnz	u11170
 18208  01DB4A  0EF8               	movlw	-8
 18209  01DB4C  50E3               	movf	plusw1,w,c
 18210  01DB4E  E104               	bnz	u11170
 18211  01DB50  0EF9               	movlw	-7
 18212  01DB52  50E3               	movf	plusw1,w,c
 18213  01DB54  B4D8               	btfsc	status,2,c
 18214  01DB56  D04D               	goto	u11200
 18215  01DB58                     u11170:
 18216                           
 18217                           ;stkvar	_counter @ sp[(-2)+1]
 18218  01DB58  0EFF               	movlw	-1
 18219  01DB5A  6AE3               	clrf	plusw1,c
 18220  01DB5C  D00A               	goto	L16
 18221  01DB5E                     l11893:
 18222                           
 18223                           ;stkvar	_divisor @ sp[(-2)+-8]
 18224  01DB5E  90D8               	bcf	status,0,c
 18225  01DB60  0EF6               	movlw	-10
 18226  01DB62  36E3               	rlcf	plusw1,f,c
 18227  01DB64  0EF7               	movlw	-9
 18228  01DB66  36E3               	rlcf	plusw1,f,c
 18229  01DB68  0EF8               	movlw	-8
 18230  01DB6A  36E3               	rlcf	plusw1,f,c
 18231  01DB6C  0EF9               	movlw	-7
 18232  01DB6E  36E3               	rlcf	plusw1,f,c
 18233                           
 18234                           ;stkvar	_counter @ sp[(-2)+1]
 18235  01DB70  0EFF               	movlw	-1
 18236  01DB72                     L16:
 18237  01DB72  2AE3               	incf	plusw1,f,c
 18238                           
 18239                           ;stkvar	_divisor @ sp[(-2)+-8]
 18240  01DB74  0EF9               	movlw	-7
 18241  01DB76  AEE3               	btfss	plusw1,7,c
 18242  01DB78  D7F2               	goto	l11893
 18243  01DB7A                     u11180:
 18244                           
 18245                           ;stkvar	_divisor @ sp[(-2)+-8]
 18246                           ;stkvar	_dividend @ sp[(-2)+-4]
 18247  01DB7A  50E1               	movf	fsr1l,w,c
 18248  01DB7C  0FFA               	addlw	-6
 18249  01DB7E  6ED9               	movwf	fsr2l,c
 18250  01DB80  50E2               	movf	fsr1h,w,c
 18251  01DB82  6EDA               	movwf	fsr2h,c
 18252  01DB84  0EFF               	movlw	255
 18253  01DB86  22DA               	addwfc	fsr2h,f,c
 18254  01DB88  0EF6               	movlw	-10
 18255  01DB8A  50E3               	movf	plusw1,w,c
 18256  01DB8C  5CDE               	subwf	postinc2,w,c
 18257  01DB8E  0EF7               	movlw	-9
 18258  01DB90  50E3               	movf	plusw1,w,c
 18259  01DB92  58DE               	subwfb	postinc2,w,c
 18260  01DB94  0EF8               	movlw	-8
 18261  01DB96  50E3               	movf	plusw1,w,c
 18262  01DB98  58DE               	subwfb	postinc2,w,c
 18263  01DB9A  0EF9               	movlw	-7
 18264  01DB9C  50E3               	movf	plusw1,w,c
 18265  01DB9E  58DE               	subwfb	postinc2,w,c
 18266  01DBA0  A0D8               	btfss	status,0,c
 18267  01DBA2  D013               	goto	l11901
 18268                           
 18269                           ;stkvar	_divisor @ sp[(-2)+-8]
 18270                           ;stkvar	_dividend @ sp[(-2)+-4]
 18271  01DBA4  50E1               	movf	fsr1l,w,c
 18272  01DBA6  0FFA               	addlw	-6
 18273  01DBA8  6ED9               	movwf	fsr2l,c
 18274  01DBAA  50E2               	movf	fsr1h,w,c
 18275  01DBAC  6EDA               	movwf	fsr2h,c
 18276  01DBAE  0EFF               	movlw	255
 18277  01DBB0  22DA               	addwfc	fsr2h,f,c
 18278  01DBB2  0EF6               	movlw	-10
 18279  01DBB4  50E3               	movf	plusw1,w,c
 18280  01DBB6  5EDE               	subwf	postinc2,f,c
 18281  01DBB8  0EF7               	movlw	-9
 18282  01DBBA  50E3               	movf	plusw1,w,c
 18283  01DBBC  5ADE               	subwfb	postinc2,f,c
 18284  01DBBE  0EF8               	movlw	-8
 18285  01DBC0  50E3               	movf	plusw1,w,c
 18286  01DBC2  5ADE               	subwfb	postinc2,f,c
 18287  01DBC4  0EF9               	movlw	-7
 18288  01DBC6  50E3               	movf	plusw1,w,c
 18289  01DBC8  5ADE               	subwfb	postinc2,f,c
 18290  01DBCA                     l11901:
 18291                           
 18292                           ;stkvar	_divisor @ sp[(-2)+-8]
 18293  01DBCA  90D8               	bcf	status,0,c
 18294  01DBCC  0EF9               	movlw	-7
 18295  01DBCE  32E3               	rrcf	plusw1,f,c
 18296  01DBD0  0EF8               	movlw	-8
 18297  01DBD2  32E3               	rrcf	plusw1,f,c
 18298  01DBD4  0EF7               	movlw	-9
 18299  01DBD6  32E3               	rrcf	plusw1,f,c
 18300  01DBD8  0EF6               	movlw	-10
 18301  01DBDA  32E3               	rrcf	plusw1,f,c
 18302                           
 18303                           ;stkvar	_counter @ sp[(-2)+1]
 18304  01DBDC  0EFF               	movlw	-1
 18305  01DBDE  50E3               	movf	plusw1,w,c
 18306  01DBE0  6E01               	movwf	btemp^0,c
 18307  01DBE2  0E01               	movlw	1
 18308  01DBE4  5E01               	subwf	btemp^0,f,c
 18309  01DBE6  0EFF               	movlw	-1
 18310  01DBE8  0060  F007  FFE3   	movff	btemp,plusw1
 18311  01DBEE  A4D8               	btfss	status,2,c
 18312  01DBF0  D7C4               	goto	u11180
 18313  01DBF2                     u11200:
 18314                           
 18315                           ;stkvar	_sign @ sp[(-2)+0]
 18316  01DBF2  0EFE               	movlw	-2
 18317  01DBF4  50E3               	movf	plusw1,w,c
 18318  01DBF6  B4D8               	btfsc	status,2,c
 18319  01DBF8  D011               	goto	u11220
 18320                           
 18321                           ;stkvar	_dividend @ sp[(-2)+-4]
 18322                           ;stkvar	_dividend @ sp[(-2)+-4]
 18323  01DBFA  0EFA               	movlw	-6
 18324  01DBFC  6CE3               	negf	plusw1,c
 18325  01DBFE  0EFB               	movlw	-5
 18326  01DC00  1EE3               	comf	plusw1,f,c
 18327  01DC02  0EFC               	movlw	-4
 18328  01DC04  1EE3               	comf	plusw1,f,c
 18329  01DC06  0EFD               	movlw	-3
 18330  01DC08  1EE3               	comf	plusw1,f,c
 18331  01DC0A  E308               	bnc	u11220
 18332  01DC0C  0EFB               	movlw	-5
 18333  01DC0E  2AE3               	incf	plusw1,f,c
 18334  01DC10  E305               	bnc	u11220
 18335  01DC12  0EFC               	movlw	-4
 18336  01DC14  2AE3               	incf	plusw1,f,c
 18337  01DC16  E302               	bnc	u11220
 18338  01DC18  0EFD               	movlw	-3
 18339  01DC1A  2AE3               	incf	plusw1,f,c
 18340  01DC1C                     u11220:
 18341                           
 18342                           ;stkvar	_dividend @ sp[(-2)+-4]
 18343  01DC1C  0EFA               	movlw	-6
 18344  01DC1E  006F FF8C  F001    	movff	plusw1,btemp
 18345  01DC24  0EFB               	movlw	-5
 18346  01DC26  006F FF8C  F002    	movff	plusw1,btemp+1
 18347  01DC2C  0EFC               	movlw	-4
 18348  01DC2E  006F FF8C  F003    	movff	plusw1,btemp+2
 18349  01DC34  0EFD               	movlw	-3
 18350  01DC36  006F FF8C  F004    	movff	plusw1,btemp+3
 18351                           
 18352                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18353  01DC3C  0EF6               	movlw	246
 18354  01DC3E  26E1               	addwf	fsr1l,f,c
 18355  01DC40  0EFF               	movlw	255
 18356  01DC42  22E2               	addwfc	fsr1h,f,c
 18357  01DC44  0012               	return		;funcret
 18358  01DC46                     __end_of___almod:
 18359                           	opt callstack 0
 18360                           
 18361 ;; *************** function ___aldiv *****************
 18362 ;; Defined at:
 18363 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  dividend        4  [STACK] long 
 18366 ;;  divisor         4  [STACK] long 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;  quotient        4  [STACK] long 
 18369 ;;  sign            1  [STACK] unsigned char 
 18370 ;;  counter         1  [STACK] unsigned char 
 18371 ;; Return value:  Size  Location     Type
 18372 ;;                  4  [STACK] long 
 18373 ;; Registers used:
 18374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/0
 18377 ;;		On exit  : 0/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18384 ;;Total ram usage:        0 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; Hardware stack levels required when called:   15
 18387 ;; This function calls:
 18388 ;;		Nothing
 18389 ;; This function is called by:
 18390 ;;		___secs_to_tm
 18391 ;;		_rule_to_secs
 18392 ;; This function uses a reentrant model
 18393 ;;
 18394                           
 18395                           	psect	text50
 18396  01D1D6                     __ptext50:
 18397                           	opt callstack 0
 18398  01D1D6                     ___aldiv:
 18399                           	opt callstack 0
 18400                           
 18401                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18402  01D1D6  0E06               	movlw	6
 18403  01D1D8  26E1               	addwf	fsr1l,f,c
 18404  01D1DA  0E00               	movlw	0
 18405  01D1DC  22E2               	addwfc	fsr1h,f,c
 18406                           
 18407                           ;stkvar	_sign @ sp[(-6)+4]
 18408                           
 18409                           ;incstack = 0
 18410  01D1DE  0EFE               	movlw	-2
 18411  01D1E0  6AE3               	clrf	plusw1,c
 18412                           
 18413                           ;stkvar	_divisor @ sp[(-6)+-8]
 18414  01D1E2  0EF5               	movlw	-11
 18415  01D1E4  AEE3               	btfss	plusw1,7,c
 18416  01D1E6  D014               	goto	l11431
 18417                           
 18418                           ;stkvar	_divisor @ sp[(-6)+-8]
 18419                           ;stkvar	_divisor @ sp[(-6)+-8]
 18420  01D1E8  0EF2               	movlw	-14
 18421  01D1EA  6CE3               	negf	plusw1,c
 18422  01D1EC  0EF3               	movlw	-13
 18423  01D1EE  1EE3               	comf	plusw1,f,c
 18424  01D1F0  0EF4               	movlw	-12
 18425  01D1F2  1EE3               	comf	plusw1,f,c
 18426  01D1F4  0EF5               	movlw	-11
 18427  01D1F6  1EE3               	comf	plusw1,f,c
 18428  01D1F8  E308               	bnc	u10460
 18429  01D1FA  0EF3               	movlw	-13
 18430  01D1FC  2AE3               	incf	plusw1,f,c
 18431  01D1FE  E305               	bnc	u10460
 18432  01D200  0EF4               	movlw	-12
 18433  01D202  2AE3               	incf	plusw1,f,c
 18434  01D204  E302               	bnc	u10460
 18435  01D206  0EF5               	movlw	-11
 18436  01D208  2AE3               	incf	plusw1,f,c
 18437  01D20A                     u10460:
 18438                           
 18439                           ;stkvar	_sign @ sp[(-6)+4]
 18440  01D20A  0EFE               	movlw	-2
 18441  01D20C  6AE3               	clrf	plusw1,c
 18442  01D20E  2AE3               	incf	plusw1,f,c
 18443  01D210                     l11431:
 18444                           
 18445                           ;stkvar	_dividend @ sp[(-6)+-4]
 18446  01D210  0EF9               	movlw	-7
 18447  01D212  AEE3               	btfss	plusw1,7,c
 18448  01D214  D013               	goto	l11437
 18449                           
 18450                           ;stkvar	_dividend @ sp[(-6)+-4]
 18451                           ;stkvar	_dividend @ sp[(-6)+-4]
 18452  01D216  0EF6               	movlw	-10
 18453  01D218  6CE3               	negf	plusw1,c
 18454  01D21A  0EF7               	movlw	-9
 18455  01D21C  1EE3               	comf	plusw1,f,c
 18456  01D21E  0EF8               	movlw	-8
 18457  01D220  1EE3               	comf	plusw1,f,c
 18458  01D222  0EF9               	movlw	-7
 18459  01D224  1EE3               	comf	plusw1,f,c
 18460  01D226  E308               	bnc	u10480
 18461  01D228  0EF7               	movlw	-9
 18462  01D22A  2AE3               	incf	plusw1,f,c
 18463  01D22C  E305               	bnc	u10480
 18464  01D22E  0EF8               	movlw	-8
 18465  01D230  2AE3               	incf	plusw1,f,c
 18466  01D232  E302               	bnc	u10480
 18467  01D234  0EF9               	movlw	-7
 18468  01D236  2AE3               	incf	plusw1,f,c
 18469  01D238                     u10480:
 18470                           
 18471                           ;stkvar	_sign @ sp[(-6)+4]
 18472  01D238  0EFE               	movlw	-2
 18473  01D23A  70E3               	btg	plusw1,0,c
 18474  01D23C                     l11437:
 18475                           
 18476                           ;stkvar	_quotient @ sp[(-6)+0]
 18477  01D23C  0EFA               	movlw	-6
 18478  01D23E  6AE3               	clrf	plusw1,c
 18479  01D240  0EFB               	movlw	-5
 18480  01D242  6AE3               	clrf	plusw1,c
 18481  01D244  0EFC               	movlw	-4
 18482  01D246  6AE3               	clrf	plusw1,c
 18483  01D248  0EFD               	movlw	-3
 18484  01D24A  6AE3               	clrf	plusw1,c
 18485                           
 18486                           ;stkvar	_divisor @ sp[(-6)+-8]
 18487  01D24C  0EF2               	movlw	-14
 18488  01D24E  50E3               	movf	plusw1,w,c
 18489  01D250  E10A               	bnz	u10490
 18490  01D252  0EF3               	movlw	-13
 18491  01D254  50E3               	movf	plusw1,w,c
 18492  01D256  E107               	bnz	u10490
 18493  01D258  0EF4               	movlw	-12
 18494  01D25A  50E3               	movf	plusw1,w,c
 18495  01D25C  E104               	bnz	u10490
 18496  01D25E  0EF5               	movlw	-11
 18497  01D260  50E3               	movf	plusw1,w,c
 18498  01D262  B4D8               	btfsc	status,2,c
 18499  01D264  D058               	goto	u10520
 18500  01D266                     u10490:
 18501                           
 18502                           ;stkvar	_counter @ sp[(-6)+5]
 18503  01D266  0EFF               	movlw	-1
 18504  01D268  6AE3               	clrf	plusw1,c
 18505  01D26A  D00A               	goto	L17
 18506  01D26C                     l11443:
 18507                           
 18508                           ;stkvar	_divisor @ sp[(-6)+-8]
 18509  01D26C  90D8               	bcf	status,0,c
 18510  01D26E  0EF2               	movlw	-14
 18511  01D270  36E3               	rlcf	plusw1,f,c
 18512  01D272  0EF3               	movlw	-13
 18513  01D274  36E3               	rlcf	plusw1,f,c
 18514  01D276  0EF4               	movlw	-12
 18515  01D278  36E3               	rlcf	plusw1,f,c
 18516  01D27A  0EF5               	movlw	-11
 18517  01D27C  36E3               	rlcf	plusw1,f,c
 18518                           
 18519                           ;stkvar	_counter @ sp[(-6)+5]
 18520  01D27E  0EFF               	movlw	-1
 18521  01D280                     L17:
 18522  01D280  2AE3               	incf	plusw1,f,c
 18523                           
 18524                           ;stkvar	_divisor @ sp[(-6)+-8]
 18525  01D282  0EF5               	movlw	-11
 18526  01D284  AEE3               	btfss	plusw1,7,c
 18527  01D286  D7F2               	goto	l11443
 18528  01D288                     u10500:
 18529                           
 18530                           ;stkvar	_quotient @ sp[(-6)+0]
 18531  01D288  90D8               	bcf	status,0,c
 18532  01D28A  0EFA               	movlw	-6
 18533  01D28C  36E3               	rlcf	plusw1,f,c
 18534  01D28E  0EFB               	movlw	-5
 18535  01D290  36E3               	rlcf	plusw1,f,c
 18536  01D292  0EFC               	movlw	-4
 18537  01D294  36E3               	rlcf	plusw1,f,c
 18538  01D296  0EFD               	movlw	-3
 18539  01D298  36E3               	rlcf	plusw1,f,c
 18540                           
 18541                           ;stkvar	_divisor @ sp[(-6)+-8]
 18542                           ;stkvar	_dividend @ sp[(-6)+-4]
 18543  01D29A  50E1               	movf	fsr1l,w,c
 18544  01D29C  0FF6               	addlw	-10
 18545  01D29E  6ED9               	movwf	fsr2l,c
 18546  01D2A0  50E2               	movf	fsr1h,w,c
 18547  01D2A2  6EDA               	movwf	fsr2h,c
 18548  01D2A4  0EFF               	movlw	255
 18549  01D2A6  22DA               	addwfc	fsr2h,f,c
 18550  01D2A8  0EF2               	movlw	-14
 18551  01D2AA  50E3               	movf	plusw1,w,c
 18552  01D2AC  5CDE               	subwf	postinc2,w,c
 18553  01D2AE  0EF3               	movlw	-13
 18554  01D2B0  50E3               	movf	plusw1,w,c
 18555  01D2B2  58DE               	subwfb	postinc2,w,c
 18556  01D2B4  0EF4               	movlw	-12
 18557  01D2B6  50E3               	movf	plusw1,w,c
 18558  01D2B8  58DE               	subwfb	postinc2,w,c
 18559  01D2BA  0EF5               	movlw	-11
 18560  01D2BC  50E3               	movf	plusw1,w,c
 18561  01D2BE  58DE               	subwfb	postinc2,w,c
 18562  01D2C0  A0D8               	btfss	status,0,c
 18563  01D2C2  D015               	goto	l11455
 18564                           
 18565                           ;stkvar	_divisor @ sp[(-6)+-8]
 18566                           ;stkvar	_dividend @ sp[(-6)+-4]
 18567  01D2C4  50E1               	movf	fsr1l,w,c
 18568  01D2C6  0FF6               	addlw	-10
 18569  01D2C8  6ED9               	movwf	fsr2l,c
 18570  01D2CA  50E2               	movf	fsr1h,w,c
 18571  01D2CC  6EDA               	movwf	fsr2h,c
 18572  01D2CE  0EFF               	movlw	255
 18573  01D2D0  22DA               	addwfc	fsr2h,f,c
 18574  01D2D2  0EF2               	movlw	-14
 18575  01D2D4  50E3               	movf	plusw1,w,c
 18576  01D2D6  5EDE               	subwf	postinc2,f,c
 18577  01D2D8  0EF3               	movlw	-13
 18578  01D2DA  50E3               	movf	plusw1,w,c
 18579  01D2DC  5ADE               	subwfb	postinc2,f,c
 18580  01D2DE  0EF4               	movlw	-12
 18581  01D2E0  50E3               	movf	plusw1,w,c
 18582  01D2E2  5ADE               	subwfb	postinc2,f,c
 18583  01D2E4  0EF5               	movlw	-11
 18584  01D2E6  50E3               	movf	plusw1,w,c
 18585  01D2E8  5ADE               	subwfb	postinc2,f,c
 18586                           
 18587                           ;stkvar	_quotient @ sp[(-6)+0]
 18588  01D2EA  0EFA               	movlw	-6
 18589  01D2EC  80E3               	bsf	plusw1,0,c
 18590  01D2EE                     l11455:
 18591                           
 18592                           ;stkvar	_divisor @ sp[(-6)+-8]
 18593  01D2EE  90D8               	bcf	status,0,c
 18594  01D2F0  0EF5               	movlw	-11
 18595  01D2F2  32E3               	rrcf	plusw1,f,c
 18596  01D2F4  0EF4               	movlw	-12
 18597  01D2F6  32E3               	rrcf	plusw1,f,c
 18598  01D2F8  0EF3               	movlw	-13
 18599  01D2FA  32E3               	rrcf	plusw1,f,c
 18600  01D2FC  0EF2               	movlw	-14
 18601  01D2FE  32E3               	rrcf	plusw1,f,c
 18602                           
 18603                           ;stkvar	_counter @ sp[(-6)+5]
 18604  01D300  0EFF               	movlw	-1
 18605  01D302  50E3               	movf	plusw1,w,c
 18606  01D304  6E01               	movwf	btemp^0,c
 18607  01D306  0E01               	movlw	1
 18608  01D308  5E01               	subwf	btemp^0,f,c
 18609  01D30A  0EFF               	movlw	-1
 18610  01D30C  0060  F007  FFE3   	movff	btemp,plusw1
 18611  01D312  A4D8               	btfss	status,2,c
 18612  01D314  D7B9               	goto	u10500
 18613  01D316                     u10520:
 18614                           
 18615                           ;stkvar	_sign @ sp[(-6)+4]
 18616  01D316  0EFE               	movlw	-2
 18617  01D318  50E3               	movf	plusw1,w,c
 18618  01D31A  B4D8               	btfsc	status,2,c
 18619  01D31C  D011               	goto	u10540
 18620                           
 18621                           ;stkvar	_quotient @ sp[(-6)+0]
 18622                           ;stkvar	_quotient @ sp[(-6)+0]
 18623  01D31E  0EFA               	movlw	-6
 18624  01D320  6CE3               	negf	plusw1,c
 18625  01D322  0EFB               	movlw	-5
 18626  01D324  1EE3               	comf	plusw1,f,c
 18627  01D326  0EFC               	movlw	-4
 18628  01D328  1EE3               	comf	plusw1,f,c
 18629  01D32A  0EFD               	movlw	-3
 18630  01D32C  1EE3               	comf	plusw1,f,c
 18631  01D32E  E308               	bnc	u10540
 18632  01D330  0EFB               	movlw	-5
 18633  01D332  2AE3               	incf	plusw1,f,c
 18634  01D334  E305               	bnc	u10540
 18635  01D336  0EFC               	movlw	-4
 18636  01D338  2AE3               	incf	plusw1,f,c
 18637  01D33A  E302               	bnc	u10540
 18638  01D33C  0EFD               	movlw	-3
 18639  01D33E  2AE3               	incf	plusw1,f,c
 18640  01D340                     u10540:
 18641                           
 18642                           ;stkvar	_quotient @ sp[(-6)+0]
 18643  01D340  0EFA               	movlw	-6
 18644  01D342  006F FF8C  F001    	movff	plusw1,btemp
 18645  01D348  0EFB               	movlw	-5
 18646  01D34A  006F FF8C  F002    	movff	plusw1,btemp+1
 18647  01D350  0EFC               	movlw	-4
 18648  01D352  006F FF8C  F003    	movff	plusw1,btemp+2
 18649  01D358  0EFD               	movlw	-3
 18650  01D35A  006F FF8C  F004    	movff	plusw1,btemp+3
 18651                           
 18652                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18653  01D360  0EF2               	movlw	242
 18654  01D362  26E1               	addwf	fsr1l,f,c
 18655  01D364  0EFF               	movlw	255
 18656  01D366  22E2               	addwfc	fsr1h,f,c
 18657  01D368  0012               	return		;funcret
 18658  01D36A                     __end_of___aldiv:
 18659                           	opt callstack 0
 18660                           
 18661 ;; *************** function _asctime *****************
 18662 ;; Defined at:
 18663 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 18664 ;; Parameters:    Size  Location     Type
 18665 ;;  tim             2  [STACK] PTR const struct tm
 18666 ;;		 -> localtime@tm(24), NULL(0), 
 18667 ;; Auto vars:     Size  Location     Type
 18668 ;;  cp              2  [STACK] PTR unsigned char 
 18669 ;;		 -> asctime@buf(27), 
 18670 ;;  s               2  [STACK] PTR const unsigned char 
 18671 ;;		 -> STR_125(37), STR_124(22), 
 18672 ;; Return value:  Size  Location     Type
 18673 ;;                  2  [STACK] PTR unsigned char 
 18674 ;; Registers used:
 18675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18676 ;; Tracked objects:
 18677 ;;		On entry : 3F/0
 18678 ;;		On exit  : 0/0
 18679 ;;		Unchanged: 0/0
 18680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18685 ;;Total ram usage:        0 bytes
 18686 ;; Hardware stack levels used:    1
 18687 ;; Hardware stack levels required when called:   17
 18688 ;; This function calls:
 18689 ;;		___awdiv
 18690 ;;		___awmod
 18691 ;;		_put2d
 18692 ;; This function is called by:
 18693 ;;		_display_history
 18694 ;; This function uses a reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text51
 18698  017EDE                     __ptext51:
 18699                           	opt callstack 0
 18700  017EDE                     _asctime:
 18701                           	opt callstack 0
 18702                           
 18703                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18704  017EDE  52E6               	movf	postinc1,f,c
 18705  017EE0  52E6               	movf	postinc1,f,c
 18706  017EE2  52E6               	movf	postinc1,f,c
 18707  017EE4  52E6               	movf	postinc1,f,c
 18708                           
 18709                           ;stkvar	_tim @ sp[(-4)+-2]
 18710                           
 18711                           ;incstack = 0
 18712  017EE6  0EFA               	movlw	-6
 18713  017EE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18714  017EEE  0EFB               	movlw	-5
 18715  017EF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18716  017EF6  0E0C               	movlw	12
 18717  017EF8  240B               	addwf	(btemp+10)^0,w,c
 18718  017EFA  6ED9               	movwf	fsr2l,c
 18719  017EFC  0E00               	movlw	0
 18720  017EFE  200C               	addwfc	(btemp+11)^0,w,c
 18721  017F00  6EDA               	movwf	fsr2h,c
 18722  017F02  006F FF78  F00B    	movff	postinc2,btemp+10
 18723  017F08  006F FF74  F00C    	movff	postdec2,btemp+11
 18724  017F0E  0E03               	movlw	3
 18725  017F10  020B               	mulwf	(btemp+10)^0,c
 18726  017F12  006F FFCC  F009    	movff	prodl,btemp+8
 18727  017F18  006F FFD0  F00A    	movff	prodh,btemp+9
 18728  017F1E  020C               	mulwf	(btemp+11)^0,c
 18729  017F20  50F3               	movf	prodl,w,c
 18730  017F22  260A               	addwf	(btemp+9)^0,f,c
 18731  017F24  0ED9               	movlw	low STR_124
 18732  017F26  6E0B               	movwf	(btemp+10)^0,c
 18733  017F28  0EFB               	movlw	high STR_124
 18734  017F2A  6E0C               	movwf	(btemp+11)^0,c
 18735  017F2C  5009               	movf	(btemp+8)^0,w,c
 18736  017F2E  260B               	addwf	(btemp+10)^0,f,c
 18737  017F30  500A               	movf	(btemp+9)^0,w,c
 18738  017F32  220C               	addwfc	(btemp+11)^0,f,c
 18739                           
 18740                           ;stkvar	_s @ sp[(-4)+2]
 18741  017F34  0EFF               	movlw	-1
 18742  017F36  0060  F033  FFE3   	movff	btemp+11,plusw1
 18743  017F3C  0EFE               	movlw	-2
 18744  017F3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18745                           
 18746                           ;stkvar	_cp @ sp[(-4)+0]
 18747  017F44  0E03               	movlw	high asctime@buf
 18748  017F46  6E01               	movwf	btemp^0,c
 18749  017F48  0EFD               	movlw	-3
 18750  017F4A  0060  F007  FFE3   	movff	btemp,plusw1
 18751  017F50  0EC4               	movlw	low asctime@buf
 18752  017F52  6E01               	movwf	btemp^0,c
 18753  017F54  0EFC               	movlw	-4
 18754  017F56  0060  F007  FFE3   	movff	btemp,plusw1
 18755                           
 18756                           ;stkvar	_s @ sp[(-4)+2]
 18757  017F5C  50E1               	movf	fsr1l,w,c
 18758  017F5E  0FFE               	addlw	-2
 18759  017F60  6ED9               	movwf	fsr2l,c
 18760  017F62  50E2               	movf	fsr1h,w,c
 18761  017F64  6EDA               	movwf	fsr2h,c
 18762  017F66  0EFF               	movlw	255
 18763  017F68  22DA               	addwfc	fsr2h,f,c
 18764  017F6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18765  017F70  006F FF77 FFF7     	movff	postdec2,tblptrh
 18766  017F76                     	if	0	;tblptru may be non-zero
 18767  017F76                     	endif
 18768  017F76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18769  017F76  0E00               	movlw	low (__mediumconst shr (0+16))
 18770  017F78  6EF8               	movwf	tblptru,c
 18771  017F7A                     	endif
 18772                           
 18773                           ;stkvar	_cp @ sp[(-4)+0]
 18774  017F7A  0EFC               	movlw	-4
 18775  017F7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 18776  017F82  0EFD               	movlw	-3
 18777  017F84  006F FF8F FFDA     	movff	plusw1,fsr2h
 18778  017F8A  0008               	tblrd		*
 18779  017F8C  006F FFD7 FFDF     	movff	tablat,indf2
 18780                           
 18781                           ;stkvar	_s @ sp[(-4)+2]
 18782  017F92  0EFE               	movlw	-2
 18783  017F94  50E3               	movf	plusw1,w,c
 18784  017F96  0F01               	addlw	1
 18785  017F98  6E01               	movwf	btemp^0,c
 18786  017F9A  0EFE               	movlw	-2
 18787  017F9C  0060  F007  FFE3   	movff	btemp,plusw1
 18788  017FA2  6A01               	clrf	btemp^0,c
 18789  017FA4  0EFF               	movlw	-1
 18790  017FA6  50E3               	movf	plusw1,w,c
 18791  017FA8  2001               	addwfc	btemp^0,w,c
 18792  017FAA  6E01               	movwf	btemp^0,c
 18793  017FAC  0EFF               	movlw	-1
 18794  017FAE  0060  F007  FFE3   	movff	btemp,plusw1
 18795                           
 18796                           ;stkvar	_cp @ sp[(-4)+0]
 18797  017FB4  0EFC               	movlw	-4
 18798  017FB6  50E3               	movf	plusw1,w,c
 18799  017FB8  0F01               	addlw	1
 18800  017FBA  6E01               	movwf	btemp^0,c
 18801  017FBC  0EFC               	movlw	-4
 18802  017FBE  0060  F007  FFE3   	movff	btemp,plusw1
 18803  017FC4  6A01               	clrf	btemp^0,c
 18804  017FC6  0EFD               	movlw	-3
 18805  017FC8  50E3               	movf	plusw1,w,c
 18806  017FCA  2001               	addwfc	btemp^0,w,c
 18807  017FCC  6E01               	movwf	btemp^0,c
 18808  017FCE  0EFD               	movlw	-3
 18809  017FD0  0060  F007  FFE3   	movff	btemp,plusw1
 18810                           
 18811                           ;stkvar	_s @ sp[(-4)+2]
 18812  017FD6  50E1               	movf	fsr1l,w,c
 18813  017FD8  0FFE               	addlw	-2
 18814  017FDA  6ED9               	movwf	fsr2l,c
 18815  017FDC  50E2               	movf	fsr1h,w,c
 18816  017FDE  6EDA               	movwf	fsr2h,c
 18817  017FE0  0EFF               	movlw	255
 18818  017FE2  22DA               	addwfc	fsr2h,f,c
 18819  017FE4  006F FF7B FFF6     	movff	postinc2,tblptrl
 18820  017FEA  006F FF77 FFF7     	movff	postdec2,tblptrh
 18821  017FF0                     	if	0	;tblptru may be non-zero
 18822  017FF0                     	endif
 18823  017FF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18824  017FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 18825  017FF2  6EF8               	movwf	tblptru,c
 18826  017FF4                     	endif
 18827                           
 18828                           ;stkvar	_cp @ sp[(-4)+0]
 18829  017FF4  0EFC               	movlw	-4
 18830  017FF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 18831  017FFC  0EFD               	movlw	-3
 18832  017FFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 18833  018004  0008               	tblrd		*
 18834  018006  006F FFD7 FFDF     	movff	tablat,indf2
 18835                           
 18836                           ;stkvar	_s @ sp[(-4)+2]
 18837  01800C  0EFE               	movlw	-2
 18838  01800E  50E3               	movf	plusw1,w,c
 18839  018010  0F01               	addlw	1
 18840  018012  6E01               	movwf	btemp^0,c
 18841  018014  0EFE               	movlw	-2
 18842  018016  0060  F007  FFE3   	movff	btemp,plusw1
 18843  01801C  6A01               	clrf	btemp^0,c
 18844  01801E  0EFF               	movlw	-1
 18845  018020  50E3               	movf	plusw1,w,c
 18846  018022  2001               	addwfc	btemp^0,w,c
 18847  018024  6E01               	movwf	btemp^0,c
 18848  018026  0EFF               	movlw	-1
 18849  018028  0060  F007  FFE3   	movff	btemp,plusw1
 18850                           
 18851                           ;stkvar	_cp @ sp[(-4)+0]
 18852  01802E  0EFC               	movlw	-4
 18853  018030  50E3               	movf	plusw1,w,c
 18854  018032  0F01               	addlw	1
 18855  018034  6E01               	movwf	btemp^0,c
 18856  018036  0EFC               	movlw	-4
 18857  018038  0060  F007  FFE3   	movff	btemp,plusw1
 18858  01803E  6A01               	clrf	btemp^0,c
 18859  018040  0EFD               	movlw	-3
 18860  018042  50E3               	movf	plusw1,w,c
 18861  018044  2001               	addwfc	btemp^0,w,c
 18862  018046  6E01               	movwf	btemp^0,c
 18863  018048  0EFD               	movlw	-3
 18864  01804A  0060  F007  FFE3   	movff	btemp,plusw1
 18865                           
 18866                           ;stkvar	_s @ sp[(-4)+2]
 18867  018050  50E1               	movf	fsr1l,w,c
 18868  018052  0FFE               	addlw	-2
 18869  018054  6ED9               	movwf	fsr2l,c
 18870  018056  50E2               	movf	fsr1h,w,c
 18871  018058  6EDA               	movwf	fsr2h,c
 18872  01805A  0EFF               	movlw	255
 18873  01805C  22DA               	addwfc	fsr2h,f,c
 18874  01805E  006F FF7B FFF6     	movff	postinc2,tblptrl
 18875  018064  006F FF77 FFF7     	movff	postdec2,tblptrh
 18876  01806A                     	if	0	;tblptru may be non-zero
 18877  01806A                     	endif
 18878  01806A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18879  01806A  0E00               	movlw	low (__mediumconst shr (0+16))
 18880  01806C  6EF8               	movwf	tblptru,c
 18881  01806E                     	endif
 18882                           
 18883                           ;stkvar	_cp @ sp[(-4)+0]
 18884  01806E  0EFC               	movlw	-4
 18885  018070  006F FF8F FFD9     	movff	plusw1,fsr2l
 18886  018076  0EFD               	movlw	-3
 18887  018078  006F FF8F FFDA     	movff	plusw1,fsr2h
 18888  01807E  0008               	tblrd		*
 18889  018080  006F FFD7 FFDF     	movff	tablat,indf2
 18890                           
 18891                           ;stkvar	_cp @ sp[(-4)+0]
 18892  018086  0EFC               	movlw	-4
 18893  018088  50E3               	movf	plusw1,w,c
 18894  01808A  0F01               	addlw	1
 18895  01808C  6E01               	movwf	btemp^0,c
 18896  01808E  0EFC               	movlw	-4
 18897  018090  0060  F007  FFE3   	movff	btemp,plusw1
 18898  018096  6A01               	clrf	btemp^0,c
 18899  018098  0EFD               	movlw	-3
 18900  01809A  50E3               	movf	plusw1,w,c
 18901  01809C  2001               	addwfc	btemp^0,w,c
 18902  01809E  6E01               	movwf	btemp^0,c
 18903  0180A0  0EFD               	movlw	-3
 18904  0180A2  0060  F007  FFE3   	movff	btemp,plusw1
 18905                           
 18906                           ;stkvar	_cp @ sp[(-4)+0]
 18907  0180A8  0EFC               	movlw	-4
 18908  0180AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 18909  0180B0  0EFD               	movlw	-3
 18910  0180B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 18911  0180B8  0E20               	movlw	32
 18912  0180BA  6EDF               	movwf	indf2,c
 18913                           
 18914                           ;stkvar	_cp @ sp[(-4)+0]
 18915  0180BC  0EFC               	movlw	-4
 18916  0180BE  50E3               	movf	plusw1,w,c
 18917  0180C0  0F01               	addlw	1
 18918  0180C2  6E01               	movwf	btemp^0,c
 18919  0180C4  0EFC               	movlw	-4
 18920  0180C6  0060  F007  FFE3   	movff	btemp,plusw1
 18921  0180CC  6A01               	clrf	btemp^0,c
 18922  0180CE  0EFD               	movlw	-3
 18923  0180D0  50E3               	movf	plusw1,w,c
 18924  0180D2  2001               	addwfc	btemp^0,w,c
 18925  0180D4  6E01               	movwf	btemp^0,c
 18926  0180D6  0EFD               	movlw	-3
 18927  0180D8  0060  F007  FFE3   	movff	btemp,plusw1
 18928                           
 18929                           ;stkvar	_tim @ sp[(-4)+-2]
 18930  0180DE  0EFA               	movlw	-6
 18931  0180E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18932  0180E6  0EFB               	movlw	-5
 18933  0180E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18934  0180EE  0E08               	movlw	8
 18935  0180F0  240B               	addwf	(btemp+10)^0,w,c
 18936  0180F2  6ED9               	movwf	fsr2l,c
 18937  0180F4  0E00               	movlw	0
 18938  0180F6  200C               	addwfc	(btemp+11)^0,w,c
 18939  0180F8  6EDA               	movwf	fsr2h,c
 18940  0180FA  006F FF78  F00B    	movff	postinc2,btemp+10
 18941  018100  006F FF74  F00C    	movff	postdec2,btemp+11
 18942  018106  0E03               	movlw	3
 18943  018108  020B               	mulwf	(btemp+10)^0,c
 18944  01810A  006F FFCC  F009    	movff	prodl,btemp+8
 18945  018110  006F FFD0  F00A    	movff	prodh,btemp+9
 18946  018116  020C               	mulwf	(btemp+11)^0,c
 18947  018118  50F3               	movf	prodl,w,c
 18948  01811A  260A               	addwf	(btemp+9)^0,f,c
 18949  01811C  0EBE               	movlw	low STR_125
 18950  01811E  6E0B               	movwf	(btemp+10)^0,c
 18951  018120  0EFA               	movlw	high STR_125
 18952  018122  6E0C               	movwf	(btemp+11)^0,c
 18953  018124  5009               	movf	(btemp+8)^0,w,c
 18954  018126  260B               	addwf	(btemp+10)^0,f,c
 18955  018128  500A               	movf	(btemp+9)^0,w,c
 18956  01812A  220C               	addwfc	(btemp+11)^0,f,c
 18957                           
 18958                           ;stkvar	_s @ sp[(-4)+2]
 18959  01812C  0EFF               	movlw	-1
 18960  01812E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18961  018134  0EFE               	movlw	-2
 18962  018136  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18963                           
 18964                           ;stkvar	_s @ sp[(-4)+2]
 18965  01813C  50E1               	movf	fsr1l,w,c
 18966  01813E  0FFE               	addlw	-2
 18967  018140  6ED9               	movwf	fsr2l,c
 18968  018142  50E2               	movf	fsr1h,w,c
 18969  018144  6EDA               	movwf	fsr2h,c
 18970  018146  0EFF               	movlw	255
 18971  018148  22DA               	addwfc	fsr2h,f,c
 18972  01814A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18973  018150  006F FF77 FFF7     	movff	postdec2,tblptrh
 18974  018156                     	if	0	;tblptru may be non-zero
 18975  018156                     	endif
 18976  018156                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18977  018156  0E00               	movlw	low (__mediumconst shr (0+16))
 18978  018158  6EF8               	movwf	tblptru,c
 18979  01815A                     	endif
 18980                           
 18981                           ;stkvar	_cp @ sp[(-4)+0]
 18982  01815A  0EFC               	movlw	-4
 18983  01815C  006F FF8F FFD9     	movff	plusw1,fsr2l
 18984  018162  0EFD               	movlw	-3
 18985  018164  006F FF8F FFDA     	movff	plusw1,fsr2h
 18986  01816A  0008               	tblrd		*
 18987  01816C  006F FFD7 FFDF     	movff	tablat,indf2
 18988                           
 18989                           ;stkvar	_s @ sp[(-4)+2]
 18990  018172  0EFE               	movlw	-2
 18991  018174  50E3               	movf	plusw1,w,c
 18992  018176  0F01               	addlw	1
 18993  018178  6E01               	movwf	btemp^0,c
 18994  01817A  0EFE               	movlw	-2
 18995  01817C  0060  F007  FFE3   	movff	btemp,plusw1
 18996  018182  6A01               	clrf	btemp^0,c
 18997  018184  0EFF               	movlw	-1
 18998  018186  50E3               	movf	plusw1,w,c
 18999  018188  2001               	addwfc	btemp^0,w,c
 19000  01818A  6E01               	movwf	btemp^0,c
 19001  01818C  0EFF               	movlw	-1
 19002  01818E  0060  F007  FFE3   	movff	btemp,plusw1
 19003                           
 19004                           ;stkvar	_cp @ sp[(-4)+0]
 19005  018194  0EFC               	movlw	-4
 19006  018196  50E3               	movf	plusw1,w,c
 19007  018198  0F01               	addlw	1
 19008  01819A  6E01               	movwf	btemp^0,c
 19009  01819C  0EFC               	movlw	-4
 19010  01819E  0060  F007  FFE3   	movff	btemp,plusw1
 19011  0181A4  6A01               	clrf	btemp^0,c
 19012  0181A6  0EFD               	movlw	-3
 19013  0181A8  50E3               	movf	plusw1,w,c
 19014  0181AA  2001               	addwfc	btemp^0,w,c
 19015  0181AC  6E01               	movwf	btemp^0,c
 19016  0181AE  0EFD               	movlw	-3
 19017  0181B0  0060  F007  FFE3   	movff	btemp,plusw1
 19018                           
 19019                           ;stkvar	_s @ sp[(-4)+2]
 19020  0181B6  50E1               	movf	fsr1l,w,c
 19021  0181B8  0FFE               	addlw	-2
 19022  0181BA  6ED9               	movwf	fsr2l,c
 19023  0181BC  50E2               	movf	fsr1h,w,c
 19024  0181BE  6EDA               	movwf	fsr2h,c
 19025  0181C0  0EFF               	movlw	255
 19026  0181C2  22DA               	addwfc	fsr2h,f,c
 19027  0181C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19028  0181CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19029  0181D0                     	if	0	;tblptru may be non-zero
 19030  0181D0                     	endif
 19031  0181D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19032  0181D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19033  0181D2  6EF8               	movwf	tblptru,c
 19034  0181D4                     	endif
 19035                           
 19036                           ;stkvar	_cp @ sp[(-4)+0]
 19037  0181D4  0EFC               	movlw	-4
 19038  0181D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19039  0181DC  0EFD               	movlw	-3
 19040  0181DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19041  0181E4  0008               	tblrd		*
 19042  0181E6  006F FFD7 FFDF     	movff	tablat,indf2
 19043                           
 19044                           ;stkvar	_s @ sp[(-4)+2]
 19045  0181EC  0EFE               	movlw	-2
 19046  0181EE  50E3               	movf	plusw1,w,c
 19047  0181F0  0F01               	addlw	1
 19048  0181F2  6E01               	movwf	btemp^0,c
 19049  0181F4  0EFE               	movlw	-2
 19050  0181F6  0060  F007  FFE3   	movff	btemp,plusw1
 19051  0181FC  6A01               	clrf	btemp^0,c
 19052  0181FE  0EFF               	movlw	-1
 19053  018200  50E3               	movf	plusw1,w,c
 19054  018202  2001               	addwfc	btemp^0,w,c
 19055  018204  6E01               	movwf	btemp^0,c
 19056  018206  0EFF               	movlw	-1
 19057  018208  0060  F007  FFE3   	movff	btemp,plusw1
 19058                           
 19059                           ;stkvar	_cp @ sp[(-4)+0]
 19060  01820E  0EFC               	movlw	-4
 19061  018210  50E3               	movf	plusw1,w,c
 19062  018212  0F01               	addlw	1
 19063  018214  6E01               	movwf	btemp^0,c
 19064  018216  0EFC               	movlw	-4
 19065  018218  0060  F007  FFE3   	movff	btemp,plusw1
 19066  01821E  6A01               	clrf	btemp^0,c
 19067  018220  0EFD               	movlw	-3
 19068  018222  50E3               	movf	plusw1,w,c
 19069  018224  2001               	addwfc	btemp^0,w,c
 19070  018226  6E01               	movwf	btemp^0,c
 19071  018228  0EFD               	movlw	-3
 19072  01822A  0060  F007  FFE3   	movff	btemp,plusw1
 19073                           
 19074                           ;stkvar	_s @ sp[(-4)+2]
 19075  018230  50E1               	movf	fsr1l,w,c
 19076  018232  0FFE               	addlw	-2
 19077  018234  6ED9               	movwf	fsr2l,c
 19078  018236  50E2               	movf	fsr1h,w,c
 19079  018238  6EDA               	movwf	fsr2h,c
 19080  01823A  0EFF               	movlw	255
 19081  01823C  22DA               	addwfc	fsr2h,f,c
 19082  01823E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19083  018244  006F FF77 FFF7     	movff	postdec2,tblptrh
 19084  01824A                     	if	0	;tblptru may be non-zero
 19085  01824A                     	endif
 19086  01824A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19087  01824A  0E00               	movlw	low (__mediumconst shr (0+16))
 19088  01824C  6EF8               	movwf	tblptru,c
 19089  01824E                     	endif
 19090                           
 19091                           ;stkvar	_cp @ sp[(-4)+0]
 19092  01824E  0EFC               	movlw	-4
 19093  018250  006F FF8F FFD9     	movff	plusw1,fsr2l
 19094  018256  0EFD               	movlw	-3
 19095  018258  006F FF8F FFDA     	movff	plusw1,fsr2h
 19096  01825E  0008               	tblrd		*
 19097  018260  006F FFD7 FFDF     	movff	tablat,indf2
 19098  018266  0E20               	movlw	32
 19099  018268  0103               	movlb	3	; () banked
 19100  01826A  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19101                           
 19102                           ; BSR set to: 3
 19103  01826C  0E20               	movlw	32
 19104  01826E  6EE6               	movwf	postinc1,c
 19105  018270  0E20               	movlw	32
 19106  018272  6EE6               	movwf	postinc1,c
 19107                           
 19108                           ;stkvar	_tim @ sp[(-6)+-2]
 19109  018274  0EF8               	movlw	-8
 19110  018276  006F FF8C  F00B    	movff	plusw1,btemp+10
 19111  01827C  0EF9               	movlw	-7
 19112  01827E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19113  018284  0E06               	movlw	6
 19114  018286  240B               	addwf	(btemp+10)^0,w,c
 19115  018288  6ED9               	movwf	fsr2l,c
 19116  01828A  0E00               	movlw	0
 19117  01828C  200C               	addwfc	(btemp+11)^0,w,c
 19118  01828E  6EDA               	movwf	fsr2h,c
 19119  018290  50DF               	movf	indf2,w,c
 19120  018292  6EE6               	movwf	postinc1,c
 19121  018294  0ECE               	movlw	low (asctime@buf+10)
 19122  018296  6EE6               	movwf	postinc1,c
 19123  018298  0E03               	movlw	high (asctime@buf+10)
 19124  01829A  6EE6               	movwf	postinc1,c
 19125  01829C  EC8B  F0F4         	call	_put2d	;wreg free
 19126  0182A0  0E3A               	movlw	58
 19127  0182A2  6EE6               	movwf	postinc1,c
 19128  0182A4  0E30               	movlw	48
 19129  0182A6  6EE6               	movwf	postinc1,c
 19130                           
 19131                           ;stkvar	_tim @ sp[(-6)+-2]
 19132  0182A8  0EF8               	movlw	-8
 19133  0182AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19134  0182B0  0EF9               	movlw	-7
 19135  0182B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19136  0182B8  0E04               	movlw	4
 19137  0182BA  240B               	addwf	(btemp+10)^0,w,c
 19138  0182BC  6ED9               	movwf	fsr2l,c
 19139  0182BE  0E00               	movlw	0
 19140  0182C0  200C               	addwfc	(btemp+11)^0,w,c
 19141  0182C2  6EDA               	movwf	fsr2h,c
 19142  0182C4  50DF               	movf	indf2,w,c
 19143  0182C6  6EE6               	movwf	postinc1,c
 19144  0182C8  0ED1               	movlw	low (asctime@buf+13)
 19145  0182CA  6EE6               	movwf	postinc1,c
 19146  0182CC  0E03               	movlw	high (asctime@buf+13)
 19147  0182CE  6EE6               	movwf	postinc1,c
 19148  0182D0  EC8B  F0F4         	call	_put2d	;wreg free
 19149  0182D4  0E3A               	movlw	58
 19150  0182D6  6EE6               	movwf	postinc1,c
 19151  0182D8  0E30               	movlw	48
 19152  0182DA  6EE6               	movwf	postinc1,c
 19153                           
 19154                           ;stkvar	_tim @ sp[(-6)+-2]
 19155  0182DC  0EF8               	movlw	-8
 19156  0182DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 19157  0182E4  0EF9               	movlw	-7
 19158  0182E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19159  0182EC  0E02               	movlw	2
 19160  0182EE  240B               	addwf	(btemp+10)^0,w,c
 19161  0182F0  6ED9               	movwf	fsr2l,c
 19162  0182F2  0E00               	movlw	0
 19163  0182F4  200C               	addwfc	(btemp+11)^0,w,c
 19164  0182F6  6EDA               	movwf	fsr2h,c
 19165  0182F8  50DF               	movf	indf2,w,c
 19166  0182FA  6EE6               	movwf	postinc1,c
 19167  0182FC  0ED4               	movlw	low (asctime@buf+16)
 19168  0182FE  6EE6               	movwf	postinc1,c
 19169  018300  0E03               	movlw	high (asctime@buf+16)
 19170  018302  6EE6               	movwf	postinc1,c
 19171  018304  EC8B  F0F4         	call	_put2d	;wreg free
 19172  018308  0E20               	movlw	32
 19173  01830A  6EE6               	movwf	postinc1,c
 19174  01830C  0E30               	movlw	48
 19175  01830E  6EE6               	movwf	postinc1,c
 19176                           
 19177                           ;stkvar	_tim @ sp[(-6)+-2]
 19178  018310  0EF8               	movlw	-8
 19179  018312  006F FF8F FFD9     	movff	plusw1,fsr2l
 19180  018318  0EF9               	movlw	-7
 19181  01831A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19182  018320  50DF               	movf	indf2,w,c
 19183  018322  6EE6               	movwf	postinc1,c
 19184  018324  0ED7               	movlw	low (asctime@buf+19)
 19185  018326  6EE6               	movwf	postinc1,c
 19186  018328  0E03               	movlw	high (asctime@buf+19)
 19187  01832A  6EE6               	movwf	postinc1,c
 19188  01832C  EC8B  F0F4         	call	_put2d	;wreg free
 19189  018330  0E00               	movlw	0
 19190  018332  6EE6               	movwf	postinc1,c
 19191  018334  0E20               	movlw	32
 19192  018336  6EE6               	movwf	postinc1,c
 19193  018338  0E64               	movlw	100
 19194  01833A  6EE6               	movwf	postinc1,c
 19195  01833C  0E00               	movlw	0
 19196  01833E  6EE6               	movwf	postinc1,c
 19197                           
 19198                           ;stkvar	_tim @ sp[(-8)+-2]
 19199  018340  0EF6               	movlw	-10
 19200  018342  006F FF8C  F00B    	movff	plusw1,btemp+10
 19201  018348  0EF7               	movlw	-9
 19202  01834A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19203  018350  0E0A               	movlw	10
 19204  018352  240B               	addwf	(btemp+10)^0,w,c
 19205  018354  6ED9               	movwf	fsr2l,c
 19206  018356  0E00               	movlw	0
 19207  018358  200C               	addwfc	(btemp+11)^0,w,c
 19208  01835A  6EDA               	movwf	fsr2h,c
 19209  01835C  006F FF78  F00B    	movff	postinc2,btemp+10
 19210  018362  006F FF74  F00C    	movff	postdec2,btemp+11
 19211  018368  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19212  01836E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19213  018374  ECDE  F0F0         	call	___awdiv	;wreg free
 19214  018378  5001               	movf	btemp^0,w,c
 19215  01837A  0F13               	addlw	19
 19216  01837C  6EE6               	movwf	postinc1,c
 19217  01837E  0EDA               	movlw	low (asctime@buf+22)
 19218  018380  6EE6               	movwf	postinc1,c
 19219  018382  0E03               	movlw	high (asctime@buf+22)
 19220  018384  6EE6               	movwf	postinc1,c
 19221  018386  EC8B  F0F4         	call	_put2d	;wreg free
 19222  01838A  0E0A               	movlw	10
 19223  01838C  6EE6               	movwf	postinc1,c
 19224  01838E  0E30               	movlw	48
 19225  018390  6EE6               	movwf	postinc1,c
 19226  018392  0E64               	movlw	100
 19227  018394  6EE6               	movwf	postinc1,c
 19228  018396  0E00               	movlw	0
 19229  018398  6EE6               	movwf	postinc1,c
 19230                           
 19231                           ;stkvar	_tim @ sp[(-8)+-2]
 19232  01839A  0EF6               	movlw	-10
 19233  01839C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19234  0183A2  0EF7               	movlw	-9
 19235  0183A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19236  0183AA  0E0A               	movlw	10
 19237  0183AC  240B               	addwf	(btemp+10)^0,w,c
 19238  0183AE  6ED9               	movwf	fsr2l,c
 19239  0183B0  0E00               	movlw	0
 19240  0183B2  200C               	addwfc	(btemp+11)^0,w,c
 19241  0183B4  6EDA               	movwf	fsr2h,c
 19242  0183B6  006F FF78  F00B    	movff	postinc2,btemp+10
 19243  0183BC  006F FF74  F00C    	movff	postdec2,btemp+11
 19244  0183C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19245  0183C8  0060  F033  FFE6   	movff	btemp+11,postinc1
 19246  0183CE  ECA4  F0F5         	call	___awmod	;wreg free
 19247  0183D2  5001               	movf	btemp^0,w,c
 19248  0183D4  6EE6               	movwf	postinc1,c
 19249  0183D6  0EDC               	movlw	low (asctime@buf+24)
 19250  0183D8  6EE6               	movwf	postinc1,c
 19251  0183DA  0E03               	movlw	high (asctime@buf+24)
 19252  0183DC  6EE6               	movwf	postinc1,c
 19253  0183DE  EC8B  F0F4         	call	_put2d	;wreg free
 19254  0183E2  0EC4               	movlw	low asctime@buf
 19255  0183E4  6E01               	movwf	btemp^0,c
 19256  0183E6  0E03               	movlw	high asctime@buf
 19257  0183E8  6E02               	movwf	(btemp+1)^0,c
 19258                           
 19259                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19260  0183EA  0EFA               	movlw	250
 19261  0183EC  26E1               	addwf	fsr1l,f,c
 19262  0183EE  0EFF               	movlw	255
 19263  0183F0  22E2               	addwfc	fsr1h,f,c
 19264  0183F2  0012               	return		;funcret
 19265  0183F4                     __end_of_asctime:
 19266                           	opt callstack 0
 19267                           
 19268 ;; *************** function _put2d *****************
 19269 ;; Defined at:
 19270 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;  cp              2  [STACK] PTR unsigned char 
 19273 ;;		 -> asctime@buf(27), 
 19274 ;;  i               1  [STACK] unsigned char 
 19275 ;;  cl              1  [STACK] unsigned char 
 19276 ;;  ct              1  [STACK] unsigned char 
 19277 ;; Auto vars:     Size  Location     Type
 19278 ;;		None
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  1  [STACK] void 
 19281 ;; Registers used:
 19282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19283 ;; Tracked objects:
 19284 ;;		On entry : 0/3
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19292 ;;Total ram usage:        0 bytes
 19293 ;; Hardware stack levels used:    1
 19294 ;; Hardware stack levels required when called:   16
 19295 ;; This function calls:
 19296 ;;		___awdiv
 19297 ;;		___lbmod
 19298 ;; This function is called by:
 19299 ;;		_asctime
 19300 ;; This function uses a reentrant model
 19301 ;;
 19302                           
 19303                           	psect	text52
 19304  01E916                     __ptext52:
 19305                           	opt callstack 0
 19306  01E916                     _put2d:
 19307                           	opt callstack 12
 19308                           
 19309                           ;stkvar	_ct @ sp[(0)+-5]
 19310                           ;stkvar	_cp @ sp[(0)+-2]
 19311                           
 19312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19313                           ;incstack = 0
 19314  01E916  0EFE               	movlw	-2
 19315  01E918  006F FF8F FFD9     	movff	plusw1,fsr2l
 19316  01E91E  0EFF               	movlw	-1
 19317  01E920  006F FF8F FFDA     	movff	plusw1,fsr2h
 19318  01E926  0EFB               	movlw	-5
 19319  01E928  006F FF8F FFDF     	movff	plusw1,indf2
 19320  01E92E  0E0A               	movlw	10
 19321  01E930  6EE6               	movwf	postinc1,c
 19322                           
 19323                           ;stkvar	_i @ sp[(-1)+-3]
 19324  01E932  0EFC               	movlw	-4
 19325  01E934  50E3               	movf	plusw1,w,c
 19326  01E936  6EE6               	movwf	postinc1,c
 19327  01E938  ECFF  F000         	call	___lbmod	;wreg free
 19328  01E93C  0E30               	movlw	48
 19329  01E93E  2601               	addwf	btemp^0,f,c
 19330                           
 19331                           ;stkvar	_cp @ sp[(0)+-2]
 19332  01E940  0EFE               	movlw	-2
 19333  01E942  006F FF8C  F002    	movff	plusw1,btemp+1
 19334  01E948  0E01               	movlw	1
 19335  01E94A  5E02               	subwf	(btemp+1)^0,f,c
 19336  01E94C  0EFE               	movlw	-2
 19337  01E94E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19338  01E954  0EFF               	movlw	-1
 19339  01E956  006F FF8C  F002    	movff	plusw1,btemp+1
 19340  01E95C  0E00               	movlw	0
 19341  01E95E  5A02               	subwfb	(btemp+1)^0,f,c
 19342  01E960  0EFF               	movlw	-1
 19343  01E962  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19344  01E968  0EFE               	movlw	-2
 19345  01E96A  006F FF8F FFD9     	movff	plusw1,fsr2l
 19346  01E970  0EFF               	movlw	-1
 19347  01E972  006F FF8F FFDA     	movff	plusw1,fsr2h
 19348  01E978  0060  F007  FFDF   	movff	btemp,indf2
 19349  01E97E  0E0A               	movlw	10
 19350  01E980  6EE6               	movwf	postinc1,c
 19351  01E982  0E00               	movlw	0
 19352  01E984  6EE6               	movwf	postinc1,c
 19353                           
 19354                           ;stkvar	_i @ sp[(-2)+-3]
 19355  01E986  0EFB               	movlw	-5
 19356  01E988  50E3               	movf	plusw1,w,c
 19357  01E98A  6EE6               	movwf	postinc1,c
 19358  01E98C  0E00               	movlw	0
 19359  01E98E  6EE6               	movwf	postinc1,c
 19360  01E990  ECDE  F0F0         	call	___awdiv	;wreg free
 19361                           
 19362                           ;stkvar	_i @ sp[(0)+-3]
 19363  01E994  0EFD               	movlw	-3
 19364  01E996  0060  F007  FFE3   	movff	btemp,plusw1
 19365  01E99C  0EFD               	movlw	-3
 19366  01E99E  50E3               	movf	plusw1,w,c
 19367  01E9A0  B4D8               	btfsc	status,2,c
 19368  01E9A2  D021               	goto	l16455
 19369                           
 19370                           ;stkvar	_cp @ sp[(0)+-2]
 19371  01E9A4  0EFE               	movlw	-2
 19372  01E9A6  006F FF8C  F001    	movff	plusw1,btemp
 19373  01E9AC  0E01               	movlw	1
 19374  01E9AE  5E01               	subwf	btemp^0,f,c
 19375  01E9B0  0EFE               	movlw	-2
 19376  01E9B2  0060  F007  FFE3   	movff	btemp,plusw1
 19377  01E9B8  0EFF               	movlw	-1
 19378  01E9BA  006F FF8C  F001    	movff	plusw1,btemp
 19379  01E9C0  0E00               	movlw	0
 19380  01E9C2  5A01               	subwfb	btemp^0,f,c
 19381  01E9C4  0EFF               	movlw	-1
 19382  01E9C6  0060  F007  FFE3   	movff	btemp,plusw1
 19383  01E9CC  0EFE               	movlw	-2
 19384  01E9CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 19385  01E9D4  0EFF               	movlw	-1
 19386  01E9D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 19387                           
 19388                           ;stkvar	_i @ sp[(0)+-3]
 19389  01E9DC  0EFD               	movlw	-3
 19390  01E9DE  50E3               	movf	plusw1,w,c
 19391  01E9E0  0F30               	addlw	48
 19392  01E9E2  6EDF               	movwf	indf2,c
 19393  01E9E4  D020               	goto	l3391
 19394  01E9E6                     l16455:
 19395                           
 19396                           ;stkvar	_cl @ sp[(0)+-4]
 19397                           ;stkvar	_cp @ sp[(0)+-2]
 19398  01E9E6  0EFE               	movlw	-2
 19399  01E9E8  006F FF8C  F001    	movff	plusw1,btemp
 19400  01E9EE  0E01               	movlw	1
 19401  01E9F0  5E01               	subwf	btemp^0,f,c
 19402  01E9F2  0EFE               	movlw	-2
 19403  01E9F4  0060  F007  FFE3   	movff	btemp,plusw1
 19404  01E9FA  0EFF               	movlw	-1
 19405  01E9FC  006F FF8C  F001    	movff	plusw1,btemp
 19406  01EA02  0E00               	movlw	0
 19407  01EA04  5A01               	subwfb	btemp^0,f,c
 19408  01EA06  0EFF               	movlw	-1
 19409  01EA08  0060  F007  FFE3   	movff	btemp,plusw1
 19410  01EA0E  0EFE               	movlw	-2
 19411  01EA10  006F FF8F FFD9     	movff	plusw1,fsr2l
 19412  01EA16  0EFF               	movlw	-1
 19413  01EA18  006F FF8F FFDA     	movff	plusw1,fsr2h
 19414  01EA1E  0EFC               	movlw	-4
 19415  01EA20  006F FF8F FFDF     	movff	plusw1,indf2
 19416  01EA26                     l3391:
 19417                           
 19418                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 19419  01EA26  0EFB               	movlw	251
 19420  01EA28  26E1               	addwf	fsr1l,f,c
 19421  01EA2A  0EFF               	movlw	255
 19422  01EA2C  22E2               	addwfc	fsr1h,f,c
 19423  01EA2E  0012               	return		;funcret
 19424  01EA30                     __end_of_put2d:
 19425                           	opt callstack 0
 19426                           
 19427 ;; *************** function ___lbmod *****************
 19428 ;; Defined at:
 19429 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;  dividend        1  [STACK] unsigned char 
 19432 ;;  divisor         1  [STACK] unsigned char 
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;  rem             1  [STACK] unsigned char 
 19435 ;;  counter         1  [STACK] unsigned char 
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  1  [STACK] unsigned char 
 19438 ;; Registers used:
 19439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 19440 ;; Tracked objects:
 19441 ;;		On entry : 0/3
 19442 ;;		On exit  : 0/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19449 ;;Total ram usage:        0 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; Hardware stack levels required when called:   15
 19452 ;; This function calls:
 19453 ;;		Nothing
 19454 ;; This function is called by:
 19455 ;;		_put2d
 19456 ;; This function uses a reentrant model
 19457 ;;
 19458                           
 19459                           	psect	text53
 19460  0001FE                     __ptext53:
 19461                           	opt callstack 0
 19462  0001FE                     ___lbmod:
 19463                           	opt callstack 0
 19464                           
 19465                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19466  0001FE  52E6               	movf	postinc1,f,c
 19467  000200  52E6               	movf	postinc1,f,c
 19468                           
 19469                           ;stkvar	_counter @ sp[(-2)+1]
 19470                           
 19471                           ;incstack = 0
 19472  000202  0EFF               	movlw	-1
 19473  000204  6AE3               	clrf	plusw1,c
 19474  000206  86E3               	bsf	plusw1,3,c
 19475                           
 19476                           ;stkvar	_rem @ sp[(-2)+0]
 19477  000208  0EFE               	movlw	-2
 19478  00020A  6AE3               	clrf	plusw1,c
 19479  00020C                     l12303:
 19480                           
 19481                           ;stkvar	_dividend @ sp[(-2)+-1]
 19482  00020C  0EFD               	movlw	-3
 19483  00020E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19484                           
 19485                           ;stkvar	_rem @ sp[(-2)+0]
 19486  000214  0EFE               	movlw	-2
 19487  000216  006F FF8C  F00B    	movff	plusw1,btemp+10
 19488  00021C  90D8               	bcf	status,0,c
 19489  00021E  340C               	rlcf	(btemp+11)^0,w,c
 19490  000220  340B               	rlcf	(btemp+10)^0,w,c
 19491  000222  6E0C               	movwf	(btemp+11)^0,c
 19492                           
 19493                           ;stkvar	_rem @ sp[(-2)+0]
 19494  000224  0EFE               	movlw	-2
 19495  000226  0060  F033  FFE3   	movff	btemp+11,plusw1
 19496                           
 19497                           ;stkvar	_dividend @ sp[(-2)+-1]
 19498  00022C  50E1               	movf	fsr1l,w,c
 19499  00022E  0FFD               	addlw	-3
 19500  000230  6ED9               	movwf	fsr2l,c
 19501  000232  50E2               	movf	fsr1h,w,c
 19502  000234  6EDA               	movwf	fsr2h,c
 19503  000236  0EFF               	movlw	255
 19504  000238  22DA               	addwfc	fsr2h,f,c
 19505  00023A  90D8               	bcf	status,0,c
 19506  00023C  36DF               	rlcf	indf2,f,c
 19507                           
 19508                           ;stkvar	_divisor @ sp[(-2)+-2]
 19509                           ;stkvar	_rem @ sp[(-2)+0]
 19510  00023E  50E1               	movf	fsr1l,w,c
 19511  000240  0FFE               	addlw	-2
 19512  000242  6ED9               	movwf	fsr2l,c
 19513  000244  50E2               	movf	fsr1h,w,c
 19514  000246  6EDA               	movwf	fsr2h,c
 19515  000248  0EFF               	movlw	255
 19516  00024A  22DA               	addwfc	fsr2h,f,c
 19517  00024C  0EFC               	movlw	-4
 19518  00024E  50E3               	movf	plusw1,w,c
 19519  000250  5CDE               	subwf	postinc2,w,c
 19520  000252  A0D8               	btfss	status,0,c
 19521  000254  D00D               	goto	l12311
 19522                           
 19523                           ;stkvar	_divisor @ sp[(-2)+-2]
 19524  000256  0EFC               	movlw	-4
 19525  000258  006F FF8C  F00C    	movff	plusw1,btemp+11
 19526                           
 19527                           ;stkvar	_rem @ sp[(-2)+0]
 19528  00025E  50E1               	movf	fsr1l,w,c
 19529  000260  0FFE               	addlw	-2
 19530  000262  6ED9               	movwf	fsr2l,c
 19531  000264  50E2               	movf	fsr1h,w,c
 19532  000266  6EDA               	movwf	fsr2h,c
 19533  000268  0EFF               	movlw	255
 19534  00026A  22DA               	addwfc	fsr2h,f,c
 19535  00026C  500C               	movf	(btemp+11)^0,w,c
 19536  00026E  5EDF               	subwf	indf2,f,c
 19537  000270                     l12311:
 19538                           
 19539                           ;stkvar	_counter @ sp[(-2)+1]
 19540  000270  0EFF               	movlw	-1
 19541  000272  50E3               	movf	plusw1,w,c
 19542  000274  6E01               	movwf	btemp^0,c
 19543  000276  0E01               	movlw	1
 19544  000278  5E01               	subwf	btemp^0,f,c
 19545  00027A  0EFF               	movlw	-1
 19546  00027C  0060  F007  FFE3   	movff	btemp,plusw1
 19547  000282  A4D8               	btfss	status,2,c
 19548  000284  D7C3               	goto	l12303
 19549                           
 19550                           ;stkvar	_rem @ sp[(-2)+0]
 19551  000286  0EFE               	movlw	-2
 19552  000288  006F FF8C  F001    	movff	plusw1,btemp
 19553                           
 19554                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19555  00028E  52E5               	movf	postdec1,f,c
 19556  000290  52E5               	movf	postdec1,f,c
 19557  000292  52E5               	movf	postdec1,f,c
 19558  000294  52E5               	movf	postdec1,f,c
 19559  000296  0012               	return		;funcret
 19560  000298                     __end_of___lbmod:
 19561                           	opt callstack 0
 19562                           
 19563 ;; *************** function _current_sensor_cal *****************
 19564 ;; Defined at:
 19565 ;;		line 505 in file "main.c"
 19566 ;; Parameters:    Size  Location     Type
 19567 ;;		None
 19568 ;; Auto vars:     Size  Location     Type
 19569 ;;  cp              4  [STACK] unsigned long 
 19570 ;;  cb              4  [STACK] unsigned long 
 19571 ;;  x               1  [STACK] unsigned char 
 19572 ;; Return value:  Size  Location     Type
 19573 ;;                  1  [STACK] _Bool 
 19574 ;; Registers used:
 19575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/1
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19585 ;;Total ram usage:        0 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:   28
 19588 ;; This function calls:
 19589 ;;		_WaitMs
 19590 ;;		_cal_current_zero
 19591 ;;		_clear_adc_scan
 19592 ;;		_get_raw_result
 19593 ;;		_get_switch
 19594 ;;		_get_vterm_ptr
 19595 ;;		_spinners
 19596 ;;		_sprintf
 19597 ;;		_start_adc_scan
 19598 ;;		_update_lcd
 19599 ;;		_write_cal_data
 19600 ;; This function is called by:
 19601 ;;		_main
 19602 ;; This function uses a reentrant model
 19603 ;;
 19604                           
 19605                           	psect	text54
 19606  018D30                     __ptext54:
 19607                           	opt callstack 0
 19608  018D30                     _current_sensor_cal:
 19609                           	opt callstack 0
 19610                           
 19611                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19612  018D30  0E09               	movlw	9
 19613  018D32  26E1               	addwf	fsr1l,f,c
 19614  018D34  0E00               	movlw	0
 19615  018D36  22E2               	addwfc	fsr1h,f,c
 19616                           
 19617                           ;main.c: 507:  uint8_t x = 0;
 19618                           ;stkvar	_x @ sp[(-9)+8]
 19619                           
 19620                           ;incstack = 0
 19621  018D38  0EFF               	movlw	-1
 19622  018D3A  6AE3               	clrf	plusw1,c
 19623                           
 19624                           ;main.c: 508:  uint32_t cb = 0, cp = 0;
 19625                           ;stkvar	_cb @ sp[(-9)+4]
 19626  018D3C  0EFB               	movlw	-5
 19627  018D3E  6AE3               	clrf	plusw1,c
 19628  018D40  0EFC               	movlw	-4
 19629  018D42  6AE3               	clrf	plusw1,c
 19630  018D44  0EFD               	movlw	-3
 19631  018D46  6AE3               	clrf	plusw1,c
 19632  018D48  0EFE               	movlw	-2
 19633  018D4A  6AE3               	clrf	plusw1,c
 19634                           
 19635                           ;stkvar	_cp @ sp[(-9)+0]
 19636  018D4C  0EF7               	movlw	-9
 19637  018D4E  6AE3               	clrf	plusw1,c
 19638  018D50  0EF8               	movlw	-8
 19639  018D52  6AE3               	clrf	plusw1,c
 19640  018D54  0EF9               	movlw	-7
 19641  018D56  6AE3               	clrf	plusw1,c
 19642  018D58  0EFA               	movlw	-6
 19643  018D5A  6AE3               	clrf	plusw1,c
 19644                           
 19645                           ;main.c: 510:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 19646  018D5C  0E76               	movlw	low STR_49
 19647  018D5E  6EE6               	movwf	postinc1,c
 19648  018D60  0EFE               	movlw	high STR_49
 19649  018D62  6EE6               	movwf	postinc1,c
 19650  018D64  0E00               	movlw	0
 19651  018D66  6EE6               	movwf	postinc1,c
 19652  018D68  0E00               	movlw	0
 19653  018D6A  6EE6               	movwf	postinc1,c
 19654  018D6C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19655  018D70  0060  F007  FFE6   	movff	btemp,postinc1
 19656  018D76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19657  018D7C  0E04               	movlw	4
 19658  018D7E  6EE6               	movwf	postinc1,c
 19659  018D80  EC42  F0F7         	call	_sprintf	;wreg free
 19660                           
 19661                           ; BSR set to: 0
 19662                           ;main.c: 511:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 19663  018D84  0E22               	movlw	low STR_50
 19664  018D86  6EE6               	movwf	postinc1,c
 19665  018D88  0EFE               	movlw	high STR_50
 19666  018D8A  6EE6               	movwf	postinc1,c
 19667  018D8C  0E00               	movlw	0
 19668  018D8E  6EE6               	movwf	postinc1,c
 19669  018D90  0E01               	movlw	1
 19670  018D92  6EE6               	movwf	postinc1,c
 19671  018D94  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19672  018D98  0060  F007  FFE6   	movff	btemp,postinc1
 19673  018D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19674  018DA4  0E04               	movlw	4
 19675  018DA6  6EE6               	movwf	postinc1,c
 19676  018DA8  EC42  F0F7         	call	_sprintf	;wreg free
 19677                           
 19678                           ; BSR set to: 0
 19679                           ;main.c: 512:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 19680  018DAC  0E0D               	movlw	low STR_51
 19681  018DAE  6EE6               	movwf	postinc1,c
 19682  018DB0  0EFE               	movlw	high STR_51
 19683  018DB2  6EE6               	movwf	postinc1,c
 19684  018DB4  0E00               	movlw	0
 19685  018DB6  6EE6               	movwf	postinc1,c
 19686  018DB8  0E02               	movlw	2
 19687  018DBA  6EE6               	movwf	postinc1,c
 19688  018DBC  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19689  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 19690  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19691  018DCC  0E04               	movlw	4
 19692  018DCE  6EE6               	movwf	postinc1,c
 19693  018DD0  EC42  F0F7         	call	_sprintf	;wreg free
 19694                           
 19695                           ; BSR set to: 0
 19696                           ;main.c: 513:  update_lcd(0);
 19697  018DD4  0E00               	movlw	0
 19698  018DD6  6EE6               	movwf	postinc1,c
 19699  018DD8  ECBA  F0F6         	call	_update_lcd	;wreg free
 19700                           
 19701                           ;main.c: 514:  WaitMs(2000);
 19702  018DDC  0ED0               	movlw	208
 19703  018DDE  6EE6               	movwf	postinc1,c
 19704  018DE0  0E07               	movlw	7
 19705  018DE2  6EE6               	movwf	postinc1,c
 19706  018DE4  ECAC  F00A         	call	_WaitMs	;wreg free
 19707  018DE8                     l16767:
 19708                           
 19709                           ;main.c: 516:   if (++x > 64)
 19710                           ;stkvar	_x @ sp[(-9)+8]
 19711  018DE8  0EFF               	movlw	-1
 19712  018DEA  2AE3               	incf	plusw1,f,c
 19713  018DEC  0EFF               	movlw	-1
 19714  018DEE  006F FF8C  F001    	movff	plusw1,btemp
 19715  018DF4  0E40               	movlw	64
 19716  018DF6  6401               	cpfsgt	btemp^0,c
 19717  018DF8  D001               	goto	l16771
 19718  018DFA  D1CF               	goto	l1512
 19719  018DFC                     l16771:
 19720                           
 19721                           ;main.c: 518:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 19722  018DFC  0E00               	movlw	0
 19723  018DFE  6EE6               	movwf	postinc1,c
 19724  018E00  0E04               	movlw	4
 19725  018E02  6EE6               	movwf	postinc1,c
 19726  018E04  EC22  F0FA         	call	_spinners	;wreg free
 19727  018E08  5001               	movf	btemp^0,w,c
 19728  018E0A  6EE6               	movwf	postinc1,c
 19729  018E0C  0E00               	movlw	0
 19730  018E0E  6EE6               	movwf	postinc1,c
 19731  018E10  0E48               	movlw	low STR_52
 19732  018E12  6EE6               	movwf	postinc1,c
 19733  018E14  0EFF               	movlw	high STR_52
 19734  018E16  6EE6               	movwf	postinc1,c
 19735  018E18  0E00               	movlw	0
 19736  018E1A  6EE6               	movwf	postinc1,c
 19737  018E1C  0E02               	movlw	2
 19738  018E1E  6EE6               	movwf	postinc1,c
 19739  018E20  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19740  018E24  0060  F007  FFE6   	movff	btemp,postinc1
 19741  018E2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19742  018E30  0E06               	movlw	6
 19743  018E32  6EE6               	movwf	postinc1,c
 19744  018E34  EC42  F0F7         	call	_sprintf	;wreg free
 19745                           
 19746                           ;main.c: 519:   update_lcd(0);
 19747  018E38  0E00               	movlw	0
 19748  018E3A  6EE6               	movwf	postinc1,c
 19749  018E3C  ECBA  F0F6         	call	_update_lcd	;wreg free
 19750                           
 19751                           ;main.c: 520:   WaitMs(100);
 19752  018E40  0E64               	movlw	100
 19753  018E42  6EE6               	movwf	postinc1,c
 19754  018E44  0E00               	movlw	0
 19755  018E46  6EE6               	movwf	postinc1,c
 19756  018E48  ECAC  F00A         	call	_WaitMs	;wreg free
 19757                           
 19758                           ;main.c: 521:  } while (get_switch(SCALIB));
 19759  018E4C  0E04               	movlw	4
 19760  018E4E  6EE6               	movwf	postinc1,c
 19761  018E50  ECBF  F00B         	call	_get_switch	;wreg free
 19762  018E54  5001               	movf	btemp^0,w,c
 19763  018E56  A4D8               	btfss	status,2,c
 19764  018E58  D7C7               	goto	l16767
 19765                           
 19766                           ;main.c: 523:  x = 0;
 19767                           ;stkvar	_x @ sp[(-9)+8]
 19768  018E5A  0EFF               	movlw	-1
 19769  018E5C  6AE3               	clrf	plusw1,c
 19770  018E5E                     l16779:
 19771                           
 19772                           ;main.c: 525:   cb += get_raw_result(C_BATT);
 19773  018E5E  0E00               	movlw	0
 19774  018E60  6EE6               	movwf	postinc1,c
 19775  018E62  ECC1  F00D         	call	_get_raw_result	;wreg free
 19776                           
 19777                           ;stkvar	_cb @ sp[(-9)+4]
 19778  018E66  50E1               	movf	fsr1l,w,c
 19779  018E68  0FFB               	addlw	-5
 19780  018E6A  6ED9               	movwf	fsr2l,c
 19781  018E6C  50E2               	movf	fsr1h,w,c
 19782  018E6E  6EDA               	movwf	fsr2h,c
 19783  018E70  0EFF               	movlw	255
 19784  018E72  22DA               	addwfc	fsr2h,f,c
 19785  018E74  5001               	movf	btemp^0,w,c
 19786  018E76  26DE               	addwf	postinc2,f,c
 19787  018E78  5002               	movf	(btemp+1)^0,w,c
 19788  018E7A  22DE               	addwfc	postinc2,f,c
 19789  018E7C  0E00               	movlw	0
 19790  018E7E  22DE               	addwfc	postinc2,f,c
 19791  018E80  22DE               	addwfc	postinc2,f,c
 19792                           
 19793                           ;main.c: 526:   cp += get_raw_result(C_PV);
 19794  018E82  0E01               	movlw	1
 19795  018E84  6EE6               	movwf	postinc1,c
 19796  018E86  ECC1  F00D         	call	_get_raw_result	;wreg free
 19797                           
 19798                           ;stkvar	_cp @ sp[(-9)+0]
 19799  018E8A  50E1               	movf	fsr1l,w,c
 19800  018E8C  0FF7               	addlw	-9
 19801  018E8E  6ED9               	movwf	fsr2l,c
 19802  018E90  50E2               	movf	fsr1h,w,c
 19803  018E92  6EDA               	movwf	fsr2h,c
 19804  018E94  0EFF               	movlw	255
 19805  018E96  22DA               	addwfc	fsr2h,f,c
 19806  018E98  5001               	movf	btemp^0,w,c
 19807  018E9A  26DE               	addwf	postinc2,f,c
 19808  018E9C  5002               	movf	(btemp+1)^0,w,c
 19809  018E9E  22DE               	addwfc	postinc2,f,c
 19810  018EA0  0E00               	movlw	0
 19811  018EA2  22DE               	addwfc	postinc2,f,c
 19812  018EA4  22DE               	addwfc	postinc2,f,c
 19813                           
 19814                           ;main.c: 527:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 19815  018EA6  0EB5               	movlw	low STR_53
 19816  018EA8  6EE6               	movwf	postinc1,c
 19817  018EAA  0EFE               	movlw	high STR_53
 19818  018EAC  6EE6               	movwf	postinc1,c
 19819  018EAE  0E00               	movlw	0
 19820  018EB0  6EE6               	movwf	postinc1,c
 19821  018EB2  0E00               	movlw	0
 19822  018EB4  6EE6               	movwf	postinc1,c
 19823  018EB6  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19824  018EBA  0060  F007  FFE6   	movff	btemp,postinc1
 19825  018EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19826  018EC6  0E04               	movlw	4
 19827  018EC8  6EE6               	movwf	postinc1,c
 19828  018ECA  EC42  F0F7         	call	_sprintf	;wreg free
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;main.c: 528:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 19832  018ECE  0E01               	movlw	1
 19833  018ED0  6EE6               	movwf	postinc1,c
 19834  018ED2  ECC1  F00D         	call	_get_raw_result	;wreg free
 19835  018ED6  0060  F007  FFE6   	movff	btemp,postinc1
 19836  018EDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19837  018EE2  0E00               	movlw	0
 19838  018EE4  6EE6               	movwf	postinc1,c
 19839  018EE6  ECC1  F00D         	call	_get_raw_result	;wreg free
 19840  018EEA  0060  F007  FFE6   	movff	btemp,postinc1
 19841  018EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19842  018EF6  0E65               	movlw	low STR_54
 19843  018EF8  6EE6               	movwf	postinc1,c
 19844  018EFA  0EFD               	movlw	high STR_54
 19845  018EFC  6EE6               	movwf	postinc1,c
 19846  018EFE  0E00               	movlw	0
 19847  018F00  6EE6               	movwf	postinc1,c
 19848  018F02  0E01               	movlw	1
 19849  018F04  6EE6               	movwf	postinc1,c
 19850  018F06  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19851  018F0A  0060  F007  FFE6   	movff	btemp,postinc1
 19852  018F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19853  018F16  0E08               	movlw	8
 19854  018F18  6EE6               	movwf	postinc1,c
 19855  018F1A  EC42  F0F7         	call	_sprintf	;wreg free
 19856                           
 19857                           ; BSR set to: 0
 19858                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 19859                           ;stkvar	_x @ sp[(-9)+8]
 19860  018F1E  0EFF               	movlw	-1
 19861  018F20  50E3               	movf	plusw1,w,c
 19862  018F22  6EE6               	movwf	postinc1,c
 19863  018F24  0E00               	movlw	0
 19864  018F26  6EE6               	movwf	postinc1,c
 19865  018F28  0E09               	movlw	low STR_55
 19866  018F2A  6EE6               	movwf	postinc1,c
 19867  018F2C  0EFF               	movlw	high STR_55
 19868  018F2E  6EE6               	movwf	postinc1,c
 19869  018F30  0E00               	movlw	0
 19870  018F32  6EE6               	movwf	postinc1,c
 19871  018F34  0E02               	movlw	2
 19872  018F36  6EE6               	movwf	postinc1,c
 19873  018F38  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 19874  018F3C  0060  F007  FFE6   	movff	btemp,postinc1
 19875  018F42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19876  018F48  0E06               	movlw	6
 19877  018F4A  6EE6               	movwf	postinc1,c
 19878  018F4C  EC42  F0F7         	call	_sprintf	;wreg free
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;main.c: 530:   update_lcd(0);
 19882  018F50  0E00               	movlw	0
 19883  018F52  6EE6               	movwf	postinc1,c
 19884  018F54  ECBA  F0F6         	call	_update_lcd	;wreg free
 19885                           
 19886                           ;main.c: 531:   clear_adc_scan();
 19887  018F58  EC5C  F00F         	call	_clear_adc_scan	;wreg free
 19888                           
 19889                           ; BSR set to: 2
 19890                           ;main.c: 532:   start_adc_scan();
 19891  018F5C  EC26  F006         	call	_start_adc_scan	;wreg free
 19892                           
 19893                           ;main.c: 533:   WaitMs(100);
 19894  018F60  0E64               	movlw	100
 19895  018F62  6EE6               	movwf	postinc1,c
 19896  018F64  0E00               	movlw	0
 19897  018F66  6EE6               	movwf	postinc1,c
 19898  018F68  ECAC  F00A         	call	_WaitMs	;wreg free
 19899                           
 19900                           ;main.c: 534:  } while (++x < 64);
 19901                           ;stkvar	_x @ sp[(-9)+8]
 19902  018F6C  0EFF               	movlw	-1
 19903  018F6E  2AE3               	incf	plusw1,f,c
 19904  018F70  0EFF               	movlw	-1
 19905  018F72  006F FF8C  F001    	movff	plusw1,btemp
 19906  018F78  0E3F               	movlw	63
 19907  018F7A  6401               	cpfsgt	btemp^0,c
 19908  018F7C  D770               	goto	l16779
 19909                           
 19910                           ;main.c: 535:  cb = cb >> 6;
 19911  018F7E  0E06               	movlw	6
 19912  018F80  6E0C               	movwf	(btemp+11)^0,c
 19913                           
 19914                           ;stkvar	_cb @ sp[(-9)+4]
 19915  018F82  50E1               	movf	fsr1l,w,c
 19916  018F84  0FFB               	addlw	-5
 19917  018F86  6ED9               	movwf	fsr2l,c
 19918  018F88  50E2               	movf	fsr1h,w,c
 19919  018F8A  6EDA               	movwf	fsr2h,c
 19920  018F8C  0EFF               	movlw	255
 19921  018F8E  22DA               	addwfc	fsr2h,f,c
 19922  018F90  280C               	incf	(btemp+11)^0,w,c
 19923  018F92  52DE               	movf	postinc2,f,c
 19924  018F94  D007               	goto	u16460
 19925  018F96                     u16465:
 19926  018F96  52DE               	movf	postinc2,f,c
 19927  018F98  52DE               	movf	postinc2,f,c
 19928  018F9A  90D8               	bcf	status,0,c
 19929  018F9C  32DD               	rrcf	postdec2,f,c
 19930  018F9E  32DD               	rrcf	postdec2,f,c
 19931  018FA0  32DD               	rrcf	postdec2,f,c
 19932  018FA2  32DE               	rrcf	postinc2,f,c
 19933  018FA4                     u16460:
 19934  018FA4  2EE8               	decfsz	wreg,f,c
 19935  018FA6  D7F7               	goto	u16465
 19936                           
 19937                           ;main.c: 536:  cp = cp >> 6;
 19938  018FA8  0E06               	movlw	6
 19939  018FAA  6E0C               	movwf	(btemp+11)^0,c
 19940                           
 19941                           ;stkvar	_cp @ sp[(-9)+0]
 19942  018FAC  50E1               	movf	fsr1l,w,c
 19943  018FAE  0FF7               	addlw	-9
 19944  018FB0  6ED9               	movwf	fsr2l,c
 19945  018FB2  50E2               	movf	fsr1h,w,c
 19946  018FB4  6EDA               	movwf	fsr2h,c
 19947  018FB6  0EFF               	movlw	255
 19948  018FB8  22DA               	addwfc	fsr2h,f,c
 19949  018FBA  280C               	incf	(btemp+11)^0,w,c
 19950  018FBC  52DE               	movf	postinc2,f,c
 19951  018FBE  D007               	goto	u16470
 19952  018FC0                     u16475:
 19953  018FC0  52DE               	movf	postinc2,f,c
 19954  018FC2  52DE               	movf	postinc2,f,c
 19955  018FC4  90D8               	bcf	status,0,c
 19956  018FC6  32DD               	rrcf	postdec2,f,c
 19957  018FC8  32DD               	rrcf	postdec2,f,c
 19958  018FCA  32DD               	rrcf	postdec2,f,c
 19959  018FCC  32DE               	rrcf	postinc2,f,c
 19960  018FCE                     u16470:
 19961  018FCE  2EE8               	decfsz	wreg,f,c
 19962  018FD0  D7F7               	goto	u16475
 19963                           
 19964                           ;main.c: 538:  if (cal_current_zero(0, cb, cp)) {
 19965                           ;stkvar	_cp @ sp[(-9)+0]
 19966  018FD2  0EF7               	movlw	-9
 19967  018FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 19968  018FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 19969                           
 19970                           ;stkvar	_cb @ sp[(-11)+4]
 19971  018FE0  0EF9               	movlw	-7
 19972  018FE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19973  018FE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19974  018FEE  0E00               	movlw	0
 19975  018FF0  6EE6               	movwf	postinc1,c
 19976  018FF2  EC98  F001         	call	_cal_current_zero	;wreg free
 19977  018FF6  5001               	movf	btemp^0,w,c
 19978  018FF8  B4D8               	btfsc	status,2,c
 19979  018FFA  D075               	goto	l16817
 19980                           
 19981                           ;main.c: 539:   cal_current_zero(1, cb, cp);
 19982                           ;stkvar	_cp @ sp[(-9)+0]
 19983  018FFC  0EF7               	movlw	-9
 19984  018FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19985  019004  006F FF8F FFE6     	movff	plusw1,postinc1
 19986                           
 19987                           ;stkvar	_cb @ sp[(-11)+4]
 19988  01900A  0EF9               	movlw	-7
 19989  01900C  006F FF8F FFE6     	movff	plusw1,postinc1
 19990  019012  006F FF8F FFE6     	movff	plusw1,postinc1
 19991  019018  0E01               	movlw	1
 19992  01901A  6EE6               	movwf	postinc1,c
 19993  01901C  EC98  F001         	call	_cal_current_zero	;wreg free
 19994                           
 19995                           ;main.c: 540:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 19996  019020  0E76               	movlw	low STR_49
 19997  019022  6EE6               	movwf	postinc1,c
 19998  019024  0EFE               	movlw	high STR_49
 19999  019026  6EE6               	movwf	postinc1,c
 20000  019028  0E00               	movlw	0
 20001  01902A  6EE6               	movwf	postinc1,c
 20002  01902C  0E00               	movlw	0
 20003  01902E  6EE6               	movwf	postinc1,c
 20004  019030  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20005  019034  0060  F007  FFE6   	movff	btemp,postinc1
 20006  01903A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20007  019040  0E04               	movlw	4
 20008  019042  6EE6               	movwf	postinc1,c
 20009  019044  EC42  F0F7         	call	_sprintf	;wreg free
 20010                           
 20011                           ; BSR set to: 0
 20012                           ;main.c: 541:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 20013                           ;stkvar	_cp @ sp[(-9)+0]
 20014  019048  0EF7               	movlw	-9
 20015  01904A  006F FF8F FFE6     	movff	plusw1,postinc1
 20016  019050  006F FF8F FFE6     	movff	plusw1,postinc1
 20017  019056  006F FF8F FFE6     	movff	plusw1,postinc1
 20018  01905C  006F FF8F FFE6     	movff	plusw1,postinc1
 20019                           
 20020                           ;stkvar	_cb @ sp[(-13)+4]
 20021  019062  0EF7               	movlw	-9
 20022  019064  006F FF8F FFE6     	movff	plusw1,postinc1
 20023  01906A  006F FF8F FFE6     	movff	plusw1,postinc1
 20024  019070  006F FF8F FFE6     	movff	plusw1,postinc1
 20025  019076  006F FF8F FFE6     	movff	plusw1,postinc1
 20026  01907C  0E7A               	movlw	low STR_57
 20027  01907E  6EE6               	movwf	postinc1,c
 20028  019080  0EFD               	movlw	high STR_57
 20029  019082  6EE6               	movwf	postinc1,c
 20030  019084  0E00               	movlw	0
 20031  019086  6EE6               	movwf	postinc1,c
 20032  019088  0E01               	movlw	1
 20033  01908A  6EE6               	movwf	postinc1,c
 20034  01908C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20035  019090  0060  F007  FFE6   	movff	btemp,postinc1
 20036  019096  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20037  01909C  0E0C               	movlw	12
 20038  01909E  6EE6               	movwf	postinc1,c
 20039  0190A0  EC42  F0F7         	call	_sprintf	;wreg free
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;main.c: 542:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 20043  0190A4  0E4C               	movlw	low STR_58
 20044  0190A6  6EE6               	movwf	postinc1,c
 20045  0190A8  0EFE               	movlw	high STR_58
 20046  0190AA  6EE6               	movwf	postinc1,c
 20047  0190AC  0E00               	movlw	0
 20048  0190AE  6EE6               	movwf	postinc1,c
 20049  0190B0  0E02               	movlw	2
 20050  0190B2  6EE6               	movwf	postinc1,c
 20051  0190B4  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20052  0190B8  0060  F007  FFE6   	movff	btemp,postinc1
 20053  0190BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20054  0190C4  0E04               	movlw	4
 20055  0190C6  6EE6               	movwf	postinc1,c
 20056  0190C8  EC42  F0F7         	call	_sprintf	;wreg free
 20057                           
 20058                           ; BSR set to: 0
 20059                           ;main.c: 543:   update_lcd(0);
 20060  0190CC  0E00               	movlw	0
 20061  0190CE  6EE6               	movwf	postinc1,c
 20062  0190D0  ECBA  F0F6         	call	_update_lcd	;wreg free
 20063                           
 20064                           ;main.c: 544:   WaitMs(2000);
 20065  0190D4  0ED0               	movlw	208
 20066  0190D6  6EE6               	movwf	postinc1,c
 20067  0190D8  0E07               	movlw	7
 20068  0190DA  6EE6               	movwf	postinc1,c
 20069  0190DC  ECAC  F00A         	call	_WaitMs	;wreg free
 20070                           
 20071                           ;main.c: 545:   write_cal_data();
 20072  0190E0  EC32  F0F0         	call	_write_cal_data	;wreg free
 20073                           
 20074                           ;main.c: 546:  } else {
 20075  0190E4  D05A               	goto	l1512
 20076  0190E6                     l16817:
 20077                           
 20078                           ;main.c: 547:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20079  0190E6  0E76               	movlw	low STR_49
 20080  0190E8  6EE6               	movwf	postinc1,c
 20081  0190EA  0EFE               	movlw	high STR_49
 20082  0190EC  6EE6               	movwf	postinc1,c
 20083  0190EE  0E00               	movlw	0
 20084  0190F0  6EE6               	movwf	postinc1,c
 20085  0190F2  0E00               	movlw	0
 20086  0190F4  6EE6               	movwf	postinc1,c
 20087  0190F6  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20088  0190FA  0060  F007  FFE6   	movff	btemp,postinc1
 20089  019100  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20090  019106  0E04               	movlw	4
 20091  019108  6EE6               	movwf	postinc1,c
 20092  01910A  EC42  F0F7         	call	_sprintf	;wreg free
 20093                           
 20094                           ;main.c: 548:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20095  01910E  0E01               	movlw	1
 20096  019110  6EE6               	movwf	postinc1,c
 20097  019112  ECC1  F00D         	call	_get_raw_result	;wreg free
 20098  019116  0060  F007  FFE6   	movff	btemp,postinc1
 20099  01911C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20100  019122  0E00               	movlw	0
 20101  019124  6EE6               	movwf	postinc1,c
 20102  019126  ECC1  F00D         	call	_get_raw_result	;wreg free
 20103  01912A  0060  F007  FFE6   	movff	btemp,postinc1
 20104  019130  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20105  019136  0E7A               	movlw	low STR_57
 20106  019138  6EE6               	movwf	postinc1,c
 20107  01913A  0EFD               	movlw	high STR_57
 20108  01913C  6EE6               	movwf	postinc1,c
 20109  01913E  0E00               	movlw	0
 20110  019140  6EE6               	movwf	postinc1,c
 20111  019142  0E01               	movlw	1
 20112  019144  6EE6               	movwf	postinc1,c
 20113  019146  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20114  01914A  0060  F007  FFE6   	movff	btemp,postinc1
 20115  019150  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20116  019156  0E08               	movlw	8
 20117  019158  6EE6               	movwf	postinc1,c
 20118  01915A  EC42  F0F7         	call	_sprintf	;wreg free
 20119                           
 20120                           ;main.c: 549:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 20121  01915E  0EF4               	movlw	low STR_61
 20122  019160  6EE6               	movwf	postinc1,c
 20123  019162  0EFE               	movlw	high STR_61
 20124  019164  6EE6               	movwf	postinc1,c
 20125  019166  0E00               	movlw	0
 20126  019168  6EE6               	movwf	postinc1,c
 20127  01916A  0E02               	movlw	2
 20128  01916C  6EE6               	movwf	postinc1,c
 20129  01916E  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 20130  019172  0060  F007  FFE6   	movff	btemp,postinc1
 20131  019178  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20132  01917E  0E04               	movlw	4
 20133  019180  6EE6               	movwf	postinc1,c
 20134  019182  EC42  F0F7         	call	_sprintf	;wreg free
 20135                           
 20136                           ;main.c: 550:   update_lcd(0);
 20137  019186  0E00               	movlw	0
 20138  019188  6EE6               	movwf	postinc1,c
 20139  01918A  ECBA  F0F6         	call	_update_lcd	;wreg free
 20140                           
 20141                           ;main.c: 551:   WaitMs(2000);
 20142  01918E  0ED0               	movlw	208
 20143  019190  6EE6               	movwf	postinc1,c
 20144  019192  0E07               	movlw	7
 20145  019194  6EE6               	movwf	postinc1,c
 20146  019196  ECAC  F00A         	call	_WaitMs	;wreg free
 20147  01919A                     l1512:
 20148                           
 20149                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20150  01919A  0EF7               	movlw	247
 20151  01919C  26E1               	addwf	fsr1l,f,c
 20152  01919E  0EFF               	movlw	255
 20153  0191A0  22E2               	addwfc	fsr1h,f,c
 20154  0191A2  0012               	return		;funcret
 20155  0191A4                     __end_of_current_sensor_cal:
 20156                           	opt callstack 0
 20157                           
 20158 ;; *************** function _write_cal_data *****************
 20159 ;; Defined at:
 20160 ;;		line 406 in file "daq.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;		None
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;  x               2  [STACK] unsigned short 
 20165 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 20166 ;;		 -> R(171), 
 20167 ;;  y               2  [STACK] unsigned short 
 20168 ;;  crcVal          1  [STACK] unsigned char 
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  1  [STACK] void 
 20171 ;; Registers used:
 20172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/39
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20182 ;;Total ram usage:        0 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; Hardware stack levels required when called:   17
 20185 ;; This function calls:
 20186 ;;		_CRC_8BitDataWrite
 20187 ;;		_CRC_CalculatedResultGet
 20188 ;;		_CRC_Initialize
 20189 ;;		_CRC_IsBusy
 20190 ;;		_CRC_Start
 20191 ;;		_DATAEE_WriteByte
 20192 ;; This function is called by:
 20193 ;;		_main
 20194 ;;		_current_sensor_cal
 20195 ;; This function uses a reentrant model
 20196 ;;
 20197                           
 20198                           	psect	text55
 20199  01E064                     __ptext55:
 20200                           	opt callstack 0
 20201  01E064                     _write_cal_data:
 20202                           	opt callstack 0
 20203                           
 20204                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20205  01E064  0E07               	movlw	7
 20206  01E066  26E1               	addwf	fsr1l,f,c
 20207  01E068  0E00               	movlw	0
 20208  01E06A  22E2               	addwfc	fsr1h,f,c
 20209                           
 20210                           ;daq.c: 408:  uint16_t x = 0, y;
 20211                           ;stkvar	_x @ sp[(-7)+0]
 20212                           
 20213                           ;incstack = 0
 20214  01E06C  0EF9               	movlw	-7
 20215  01E06E  6AE3               	clrf	plusw1,c
 20216  01E070  0EFA               	movlw	-6
 20217  01E072  6AE3               	clrf	plusw1,c
 20218                           
 20219                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 20220  01E074  0EAB               	movlw	171
 20221  01E076  6E0B               	movwf	(btemp+10)^0,c
 20222  01E078  0E00               	movlw	0
 20223  01E07A  6E0C               	movwf	(btemp+11)^0,c
 20224                           
 20225                           ;stkvar	_y @ sp[(-7)+4]
 20226  01E07C  0EFD               	movlw	-3
 20227  01E07E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20228  01E084  0EFE               	movlw	-2
 20229  01E086  0060  F033  FFE3   	movff	btemp+11,plusw1
 20230                           
 20231                           ;daq.c: 412:  R.crc = 0x42;
 20232  01E08C  0E42               	movlw	66
 20233  01E08E  0102               	movlb	2	; () banked
 20234  01E090  6FB1               	movwf	(_R+170)& (0+255),b	;volatile
 20235                           
 20236                           ; BSR set to: 2
 20237                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 20238                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20239  01E092  0E02               	movlw	high _R
 20240  01E094  6E01               	movwf	btemp^0,c
 20241  01E096  0EFC               	movlw	-4
 20242  01E098  0060  F007  FFE3   	movff	btemp,plusw1
 20243  01E09E  0E07               	movlw	low _R
 20244  01E0A0  6E01               	movwf	btemp^0,c
 20245  01E0A2  0EFB               	movlw	-5
 20246  01E0A4  0060  F007  FFE3   	movff	btemp,plusw1
 20247                           
 20248                           ; BSR set to: 2
 20249                           ;daq.c: 414:  R.checkmark = 0x1957;
 20250  01E0AA  0E19               	movlw	25
 20251  01E0AC  6FB0               	movwf	(_R+169)& (0+255),b	;volatile
 20252  01E0AE  0E57               	movlw	87
 20253  01E0B0  6FAF               	movwf	(_R+168)& (0+255),b	;volatile
 20254                           
 20255                           ; BSR set to: 2
 20256                           ;daq.c: 416:  CRC_Initialize();
 20257  01E0B2  EC73  F002         	call	_CRC_Initialize	;wreg free
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;daq.c: 419:  CRC_Start();
 20261  01E0B6  EC59  F00F         	call	_CRC_Start	;wreg free
 20262  01E0BA                     l13325:
 20263                           
 20264                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 20265                           ;stkvar	_x @ sp[(-7)+0]
 20266  01E0BA  0EF9               	movlw	-7
 20267  01E0BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20268  01E0C2  0EFA               	movlw	-6
 20269  01E0C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20270                           
 20271                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20272  01E0CA  0EFB               	movlw	-5
 20273  01E0CC  006F FF8C  F009    	movff	plusw1,btemp+8
 20274  01E0D2  0EFC               	movlw	-4
 20275  01E0D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 20276  01E0DA  500B               	movf	(btemp+10)^0,w,c
 20277  01E0DC  2409               	addwf	(btemp+8)^0,w,c
 20278  01E0DE  6ED9               	movwf	fsr2l,c
 20279  01E0E0  500C               	movf	(btemp+11)^0,w,c
 20280  01E0E2  200A               	addwfc	(btemp+9)^0,w,c
 20281  01E0E4  6EDA               	movwf	fsr2h,c
 20282  01E0E6  50DF               	movf	indf2,w,c
 20283  01E0E8  6EE6               	movwf	postinc1,c
 20284                           
 20285                           ;stkvar	_x @ sp[(-8)+0]
 20286  01E0EA  0EF8               	movlw	-8
 20287  01E0EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20288  01E0F2  006F FF8F FFE6     	movff	plusw1,postinc1
 20289  01E0F8  EC8D  F005         	call	_DATAEE_WriteByte	;wreg free
 20290                           
 20291                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 20292                           ;stkvar	_x @ sp[(-7)+0]
 20293  01E0FC  0EF9               	movlw	-7
 20294  01E0FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20295  01E104  0EFA               	movlw	-6
 20296  01E106  006F FF8C  F00C    	movff	plusw1,btemp+11
 20297                           
 20298                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20299  01E10C  0EFB               	movlw	-5
 20300  01E10E  006F FF8C  F009    	movff	plusw1,btemp+8
 20301  01E114  0EFC               	movlw	-4
 20302  01E116  006F FF8C  F00A    	movff	plusw1,btemp+9
 20303  01E11C  500B               	movf	(btemp+10)^0,w,c
 20304  01E11E  2409               	addwf	(btemp+8)^0,w,c
 20305  01E120  6ED9               	movwf	fsr2l,c
 20306  01E122  500C               	movf	(btemp+11)^0,w,c
 20307  01E124  200A               	addwfc	(btemp+9)^0,w,c
 20308  01E126  6EDA               	movwf	fsr2h,c
 20309  01E128  50DF               	movf	indf2,w,c
 20310  01E12A  6EE6               	movwf	postinc1,c
 20311  01E12C  ECCA  F00E         	call	_CRC_8BitDataWrite	;wreg free
 20312  01E130                     l13329:
 20313  01E130  ECEC  F00E         	call	_CRC_IsBusy	;wreg free
 20314  01E134  5001               	movf	btemp^0,w,c
 20315  01E136  A4D8               	btfss	status,2,c
 20316  01E138  D7FB               	goto	l13329
 20317                           
 20318                           ;daq.c: 425:  } while (++x < y);
 20319                           ;stkvar	_y @ sp[(-7)+4]
 20320  01E13A  0EFD               	movlw	-3
 20321  01E13C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20322  01E142  0EFE               	movlw	-2
 20323  01E144  006F FF8C  F00C    	movff	plusw1,btemp+11
 20324                           
 20325                           ;stkvar	_x @ sp[(-7)+0]
 20326  01E14A  0EF9               	movlw	-7
 20327  01E14C  50E3               	movf	plusw1,w,c
 20328  01E14E  0F01               	addlw	1
 20329  01E150  6E01               	movwf	btemp^0,c
 20330  01E152  0EF9               	movlw	-7
 20331  01E154  0060  F007  FFE3   	movff	btemp,plusw1
 20332  01E15A  6A01               	clrf	btemp^0,c
 20333  01E15C  0EFA               	movlw	-6
 20334  01E15E  50E3               	movf	plusw1,w,c
 20335  01E160  2001               	addwfc	btemp^0,w,c
 20336  01E162  6E01               	movwf	btemp^0,c
 20337  01E164  0EFA               	movlw	-6
 20338  01E166  0060  F007  FFE3   	movff	btemp,plusw1
 20339  01E16C  0EF9               	movlw	-7
 20340  01E16E  006F FF8C  F009    	movff	plusw1,btemp+8
 20341  01E174  0EFA               	movlw	-6
 20342  01E176  006F FF8C  F00A    	movff	plusw1,btemp+9
 20343  01E17C  500B               	movf	(btemp+10)^0,w,c
 20344  01E17E  5C09               	subwf	(btemp+8)^0,w,c
 20345  01E180  500C               	movf	(btemp+11)^0,w,c
 20346  01E182  580A               	subwfb	(btemp+9)^0,w,c
 20347  01E184  A0D8               	btfss	status,0,c
 20348  01E186  D799               	goto	l13325
 20349                           
 20350                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 20351  01E188  0E00               	movlw	0
 20352  01E18A  6EE6               	movwf	postinc1,c
 20353  01E18C  0E00               	movlw	0
 20354  01E18E  6EE6               	movwf	postinc1,c
 20355  01E190  0E00               	movlw	0
 20356  01E192  6EE6               	movwf	postinc1,c
 20357  01E194  ECFE  F0EB         	call	_CRC_CalculatedResultGet	;wreg free
 20358                           
 20359                           ;stkvar	_crcVal @ sp[(-7)+6]
 20360  01E198  0EFF               	movlw	-1
 20361  01E19A  0060  F007  FFE3   	movff	btemp,plusw1
 20362                           
 20363                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 20364                           ;stkvar	_crcVal @ sp[(-7)+6]
 20365  01E1A0  0EFF               	movlw	-1
 20366  01E1A2  50E3               	movf	plusw1,w,c
 20367  01E1A4  6EE6               	movwf	postinc1,c
 20368  01E1A6  0EAA               	movlw	170
 20369  01E1A8  6EE6               	movwf	postinc1,c
 20370  01E1AA  0E00               	movlw	0
 20371  01E1AC  6EE6               	movwf	postinc1,c
 20372  01E1AE  EC8D  F005         	call	_DATAEE_WriteByte	;wreg free
 20373                           
 20374                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20375  01E1B2  0EF9               	movlw	249
 20376  01E1B4  26E1               	addwf	fsr1l,f,c
 20377  01E1B6  0EFF               	movlw	255
 20378  01E1B8  22E2               	addwfc	fsr1h,f,c
 20379  01E1BA  0012               	return		;funcret
 20380  01E1BC                     __end_of_write_cal_data:
 20381                           	opt callstack 0
 20382                           
 20383 ;; *************** function _DATAEE_WriteByte *****************
 20384 ;; Defined at:
 20385 ;;		line 172 in file "mcc_generated_files/memory.c"
 20386 ;; Parameters:    Size  Location     Type
 20387 ;;  bAdd            2  [STACK] unsigned short 
 20388 ;;  bData           1  [STACK] unsigned char 
 20389 ;; Auto vars:     Size  Location     Type
 20390 ;;  GIEBitValue     1  [STACK] unsigned char 
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  1  [STACK] void 
 20393 ;; Registers used:
 20394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20395 ;; Tracked objects:
 20396 ;;		On entry : 0/39
 20397 ;;		On exit  : 0/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20404 ;;Total ram usage:        0 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:   15
 20407 ;; This function calls:
 20408 ;;		Nothing
 20409 ;; This function is called by:
 20410 ;;		_write_cal_data
 20411 ;; This function uses a reentrant model
 20412 ;;
 20413                           
 20414                           	psect	text56
 20415  000B1A                     __ptext56:
 20416                           	opt callstack 0
 20417  000B1A                     _DATAEE_WriteByte:
 20418                           	opt callstack 0
 20419                           
 20420                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20421  000B1A  52E6               	movf	postinc1,f,c
 20422                           
 20423                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 20424                           
 20425                           ;incstack = 0
 20426  000B1C  AED2               	btfss	210,7,c	;volatile
 20427  000B1E  D003               	goto	u11980
 20428  000B20  6A0C               	clrf	(btemp+11)^0,c
 20429  000B22  2A0C               	incf	(btemp+11)^0,f,c
 20430  000B24  D001               	goto	u11988
 20431  000B26                     u11980:
 20432  000B26  6A0C               	clrf	(btemp+11)^0,c
 20433  000B28                     u11988:
 20434                           
 20435                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20436  000B28  0EFF               	movlw	-1
 20437  000B2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20438                           
 20439                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 20440                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20441  000B30  0EFE               	movlw	254
 20442  000B32  24E1               	addwf	fsr1l,w,c
 20443  000B34  6ED9               	movwf	fsr2l,c
 20444  000B36  0EFF               	movlw	255
 20445  000B38  20E2               	addwfc	fsr1h,w,c
 20446  000B3A  6EDA               	movwf	fsr2h,c
 20447  000B3C  50DF               	movf	indf2,w,c
 20448  000B3E  0B03               	andlw	3
 20449  000B40  0139               	movlb	57	; () banked
 20450  000B42  6FE1               	movwf	225,b	;volatile
 20451                           
 20452                           ; BSR set to: 57
 20453                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 20454                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20455  000B44  0EFD               	movlw	-3
 20456  000B46  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 20457                           
 20458                           ; BSR set to: 57
 20459                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 20460                           ;stkvar	_bData @ sp[(-1)+-3]
 20461  000B4C  0EFC               	movlw	-4
 20462  000B4E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 20463                           
 20464                           ; BSR set to: 57
 20465                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 20466  000B54  0E3F               	movlw	-193
 20467  000B56  17E5               	andwf	229,f,b	;volsfr
 20468                           
 20469                           ; BSR set to: 57
 20470                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 20471  000B58  85E5               	bsf	229,2,b	;volsfr
 20472                           
 20473                           ; BSR set to: 57
 20474                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 20475  000B5A  9ED2               	bcf	210,7,c	;volatile
 20476                           
 20477                           ; BSR set to: 57
 20478                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 20479  000B5C  0E55               	movlw	85
 20480  000B5E  6FE6               	movwf	230,b	;volsfr
 20481                           
 20482                           ; BSR set to: 57
 20483                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 20484  000B60  0EAA               	movlw	170
 20485  000B62  6FE6               	movwf	230,b	;volsfr
 20486                           
 20487                           ; BSR set to: 57
 20488                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 20489  000B64  83E5               	bsf	229,1,b	;volsfr
 20490  000B66                     l942:
 20491                           
 20492                           ; BSR set to: 57
 20493                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 20494  000B66  B3E5               	btfsc	229,1,b	;volsfr
 20495  000B68  D7FE               	goto	l942
 20496                           
 20497                           ; BSR set to: 57
 20498                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 20499  000B6A  95E5               	bcf	229,2,b	;volsfr
 20500                           
 20501                           ; BSR set to: 57
 20502                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 20503                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20504  000B6C  0EFF               	movlw	-1
 20505  000B6E  B0E3               	btfsc	plusw1,0,c
 20506  000B70  D002               	bra	u12005
 20507  000B72  9ED2               	bcf	210,7,c	;volatile
 20508  000B74  D001               	bra	u12006
 20509  000B76                     u12005:
 20510  000B76  8ED2               	bsf	210,7,c	;volatile
 20511  000B78                     u12006:
 20512                           
 20513                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20514  000B78  52E5               	movf	postdec1,f,c
 20515  000B7A  52E5               	movf	postdec1,f,c
 20516  000B7C  52E5               	movf	postdec1,f,c
 20517  000B7E  52E5               	movf	postdec1,f,c
 20518  000B80  0012               	return		;funcret
 20519  000B82                     __end_of_DATAEE_WriteByte:
 20520                           	opt callstack 0
 20521                           
 20522 ;; *************** function _CRC_Start *****************
 20523 ;; Defined at:
 20524 ;;		line 119 in file "mcc_generated_files/crc.c"
 20525 ;; Parameters:    Size  Location     Type
 20526 ;;		None
 20527 ;; Auto vars:     Size  Location     Type
 20528 ;;		None
 20529 ;; Return value:  Size  Location     Type
 20530 ;;                  1  [STACK] void 
 20531 ;; Registers used:
 20532 ;;		None
 20533 ;; Tracked objects:
 20534 ;;		On entry : 3F/0
 20535 ;;		On exit  : 3F/39
 20536 ;;		Unchanged: 0/0
 20537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20542 ;;Total ram usage:        0 bytes
 20543 ;; Hardware stack levels used:    1
 20544 ;; Hardware stack levels required when called:   15
 20545 ;; This function calls:
 20546 ;;		Nothing
 20547 ;; This function is called by:
 20548 ;;		_read_cal_data
 20549 ;;		_write_cal_data
 20550 ;; This function uses a reentrant model
 20551 ;;
 20552                           
 20553                           	psect	text57
 20554  001EB2                     __ptext57:
 20555                           	opt callstack 0
 20556  001EB2                     _CRC_Start:
 20557                           	opt callstack 14
 20558                           
 20559                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 20560                           
 20561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20562                           ;incstack = 0
 20563  001EB2  0139               	movlb	57	; () banked
 20564  001EB4  8D68               	bsf	104,6,b	;volatile
 20565                           
 20566                           ; BSR set to: 57
 20567                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20568  001EB6  0012               	return		;funcret
 20569  001EB8                     __end_of_CRC_Start:
 20570                           	opt callstack 0
 20571                           
 20572 ;; *************** function _CRC_IsBusy *****************
 20573 ;; Defined at:
 20574 ;;		line 201 in file "mcc_generated_files/crc.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;		None
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;		None
 20579 ;; Return value:  Size  Location     Type
 20580 ;;                  1  [STACK] _Bool 
 20581 ;; Registers used:
 20582 ;;		btemp
 20583 ;; Tracked objects:
 20584 ;;		On entry : 0/39
 20585 ;;		On exit  : 0/0
 20586 ;;		Unchanged: 0/0
 20587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20592 ;;Total ram usage:        0 bytes
 20593 ;; Hardware stack levels used:    1
 20594 ;; Hardware stack levels required when called:   15
 20595 ;; This function calls:
 20596 ;;		Nothing
 20597 ;; This function is called by:
 20598 ;;		_read_cal_data
 20599 ;;		_write_cal_data
 20600 ;; This function uses a reentrant model
 20601 ;;
 20602                           
 20603                           	psect	text58
 20604  001DD8                     __ptext58:
 20605                           	opt callstack 0
 20606  001DD8                     _CRC_IsBusy:
 20607                           	opt callstack 14
 20608                           
 20609                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 20610                           
 20611                           ; BSR set to: 57
 20612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20613                           ;incstack = 0
 20614  001DD8  0139               	movlb	57	; () banked
 20615  001DDA  AB68               	btfss	104,5,b	;volatile
 20616  001DDC  D003               	goto	u12210
 20617  001DDE  6A01               	clrf	btemp^0,c
 20618  001DE0  2A01               	incf	btemp^0,f,c
 20619  001DE2  0012               	return	
 20620  001DE4                     u12210:
 20621  001DE4  6A01               	clrf	btemp^0,c
 20622                           
 20623                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20624  001DE6  0012               	return		;funcret
 20625  001DE8                     __end_of_CRC_IsBusy:
 20626                           	opt callstack 0
 20627                           
 20628 ;; *************** function _CRC_CalculatedResultGet *****************
 20629 ;; Defined at:
 20630 ;;		line 159 in file "mcc_generated_files/crc.c"
 20631 ;; Parameters:    Size  Location     Type
 20632 ;;  reverse         1  [STACK] _Bool 
 20633 ;;  xorValue        2  [STACK] unsigned short 
 20634 ;; Auto vars:     Size  Location     Type
 20635 ;;  result          2  [STACK] unsigned short 
 20636 ;;  mask            2  [STACK] unsigned short 
 20637 ;; Return value:  Size  Location     Type
 20638 ;;                  2  [STACK] unsigned short 
 20639 ;; Registers used:
 20640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 20641 ;; Tracked objects:
 20642 ;;		On entry : 0/39
 20643 ;;		On exit  : 0/0
 20644 ;;		Unchanged: 0/0
 20645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20650 ;;Total ram usage:        0 bytes
 20651 ;; Hardware stack levels used:    1
 20652 ;; Hardware stack levels required when called:   16
 20653 ;; This function calls:
 20654 ;;		_CRC_ReverseValue
 20655 ;; This function is called by:
 20656 ;;		_read_cal_data
 20657 ;;		_write_cal_data
 20658 ;; This function uses a reentrant model
 20659 ;;
 20660                           
 20661                           	psect	text59
 20662  01D7FC                     __ptext59:
 20663                           	opt callstack 0
 20664  01D7FC                     _CRC_CalculatedResultGet:
 20665                           	opt callstack 0
 20666                           
 20667                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20668  01D7FC  52E6               	movf	postinc1,f,c
 20669  01D7FE  52E6               	movf	postinc1,f,c
 20670  01D800  52E6               	movf	postinc1,f,c
 20671  01D802  52E6               	movf	postinc1,f,c
 20672                           
 20673                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 20674                           
 20675                           ;incstack = 0
 20676  01D804  0139               	movlb	57	; () banked
 20677  01D806  9D68               	bcf	104,6,b	;volatile
 20678                           
 20679                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 20680  01D808  9DA0               	bcf	160,6,b	;volatile
 20681                           
 20682                           ; BSR set to: 57
 20683                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 20684  01D80A  5169               	movf	105,w,b	;volatile
 20685  01D80C  0B0F               	andlw	15
 20686  01D80E  6E0C               	movwf	(btemp+11)^0,c
 20687  01D810  3A0C               	swapf	(btemp+11)^0,f,c
 20688  01D812  5169               	movf	105,w,b	;volatile
 20689  01D814  180C               	xorwf	(btemp+11)^0,w,c
 20690  01D816  0B0F               	andlw	-241
 20691  01D818  180C               	xorwf	(btemp+11)^0,w,c
 20692  01D81A  6F69               	movwf	105,b	;volatile
 20693                           
 20694                           ; BSR set to: 57
 20695                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 20696  01D81C  0E08               	movlw	8
 20697  01D81E  0100               	movlb	0	; () banked
 20698  01D820  65E1               	cpfsgt	(_crcObj+1)& (0+255),b
 20699  01D822  D003               	goto	l1282
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 20703  01D824  0139               	movlb	57	; () banked
 20704  01D826  6B61               	clrf	97,b	;volatile
 20705  01D828  D001               	goto	L18
 20706  01D82A                     l1282:
 20707                           
 20708                           ; BSR set to: 0
 20709                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 20710  01D82A  0139               	movlb	57	; () banked
 20711  01D82C                     L18:
 20712  01D82C  6B60               	clrf	96,b	;volatile
 20713                           
 20714                           ; BSR set to: 57
 20715                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 20716                           
 20717                           ;mcc_generated_files/crc.c: 176:      }
 20718  01D82E  8D68               	bsf	104,6,b	;volatile
 20719  01D830                     l1284:
 20720                           
 20721                           ; BSR set to: 57
 20722  01D830  ADA0               	btfss	160,6,b	;volatile
 20723  01D832  D7FE               	goto	l1284
 20724                           
 20725                           ; BSR set to: 57
 20726                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 20727  01D834  9DA0               	bcf	160,6,b	;volatile
 20728                           
 20729                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 20730  01D836  9D68               	bcf	104,6,b	;volatile
 20731                           
 20732                           ; BSR set to: 57
 20733                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 20734  01D838  0060  F380  F00C   	movff	_crcObj,btemp+11
 20735  01D83E  0EFF               	movlw	255
 20736  01D840  260C               	addwf	(btemp+11)^0,f,c
 20737  01D842  3A0C               	swapf	(btemp+11)^0,f,c
 20738  01D844  5169               	movf	105,w,b	;volatile
 20739  01D846  180C               	xorwf	(btemp+11)^0,w,c
 20740  01D848  0B0F               	andlw	-241
 20741  01D84A  180C               	xorwf	(btemp+11)^0,w,c
 20742  01D84C  6F69               	movwf	105,b	;volatile
 20743                           
 20744                           ; BSR set to: 57
 20745                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 20746  01D84E  5162               	movf	98,w,b	;volatile
 20747  01D850  006E F58C  F001    	movff	14691,btemp	;volatile
 20748  01D856  6A02               	clrf	(btemp+1)^0,c
 20749  01D858  0060  F004  F002   	movff	btemp,btemp+1
 20750  01D85E  6A01               	clrf	btemp^0,c
 20751  01D860  1201               	iorwf	btemp^0,f,c
 20752  01D862  0E00               	movlw	0
 20753  01D864  1202               	iorwf	(btemp+1)^0,f,c
 20754                           
 20755                           ;stkvar	_result @ sp[(-4)+0]
 20756  01D866  0EFC               	movlw	-4
 20757  01D868  0060  F007  FFE3   	movff	btemp,plusw1
 20758  01D86E  0EFD               	movlw	-3
 20759  01D870  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20760                           
 20761                           ; BSR set to: 57
 20762                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 20763  01D876  0E10               	movlw	16
 20764  01D878  0100               	movlb	0	; () banked
 20765  01D87A  61E1               	cpfslt	(_crcObj+1)& (0+255),b
 20766  01D87C  D03A               	goto	l12677
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 20770  01D87E  0EFF               	movlw	255
 20771  01D880  6E0B               	movwf	(btemp+10)^0,c
 20772  01D882  0EFF               	movlw	255
 20773  01D884  6E0C               	movwf	(btemp+11)^0,c
 20774  01D886  0060  F384  F00A   	movff	_crcObj+1,btemp+9
 20775  01D88C  0E01               	movlw	1
 20776  01D88E  6E07               	movwf	(btemp+6)^0,c
 20777  01D890  0E00               	movlw	0
 20778  01D892  6E08               	movwf	(btemp+7)^0,c
 20779  01D894  2A0A               	incf	(btemp+9)^0,f,c
 20780  01D896  D003               	goto	u12194
 20781  01D898                     u12195:
 20782  01D898  90D8               	bcf	status,0,c
 20783  01D89A  3607               	rlcf	(btemp+6)^0,f,c
 20784  01D89C  3608               	rlcf	(btemp+7)^0,f,c
 20785  01D89E                     u12194:
 20786  01D89E  2E0A               	decfsz	(btemp+9)^0,f,c
 20787  01D8A0  D7FB               	goto	u12195
 20788  01D8A2  500B               	movf	(btemp+10)^0,w,c
 20789  01D8A4  2607               	addwf	(btemp+6)^0,f,c
 20790  01D8A6  500C               	movf	(btemp+11)^0,w,c
 20791  01D8A8  2208               	addwfc	(btemp+7)^0,f,c
 20792                           
 20793                           ;stkvar	_mask @ sp[(-4)+2]
 20794  01D8AA  0EFE               	movlw	-2
 20795  01D8AC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20796  01D8B2  0EFF               	movlw	-1
 20797  01D8B4  0060  F023  FFE3   	movff	btemp+7,plusw1
 20798                           
 20799                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 20800                           ;stkvar	_mask @ sp[(-4)+2]
 20801  01D8BA  0EFE               	movlw	-2
 20802  01D8BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20803  01D8C2  0EFF               	movlw	-1
 20804  01D8C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20805                           
 20806                           ;stkvar	_result @ sp[(-4)+0]
 20807  01D8CA  0EFC               	movlw	-4
 20808  01D8CC  006F FF8C  F001    	movff	plusw1,btemp
 20809  01D8D2  500B               	movf	(btemp+10)^0,w,c
 20810  01D8D4  1601               	andwf	btemp^0,f,c
 20811  01D8D6  0EFC               	movlw	-4
 20812  01D8D8  0060  F007  FFE3   	movff	btemp,plusw1
 20813  01D8DE  0EFD               	movlw	-3
 20814  01D8E0  006F FF8C  F001    	movff	plusw1,btemp
 20815  01D8E6  500C               	movf	(btemp+11)^0,w,c
 20816  01D8E8  1601               	andwf	btemp^0,f,c
 20817  01D8EA  0EFD               	movlw	-3
 20818  01D8EC  0060  F007  FFE3   	movff	btemp,plusw1
 20819  01D8F2                     l12677:
 20820                           
 20821                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 20822                           ;stkvar	_reverse @ sp[(-4)+-1]
 20823  01D8F2  0EFB               	movlw	-5
 20824  01D8F4  50E3               	movf	plusw1,w,c
 20825  01D8F6  B4D8               	btfsc	status,2,c
 20826  01D8F8  D011               	goto	l12681
 20827                           
 20828                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 20829                           ;stkvar	_result @ sp[(-4)+0]
 20830  01D8FA  0EFC               	movlw	-4
 20831  01D8FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20832  01D902  006F FF8F FFE6     	movff	plusw1,postinc1
 20833  01D908  ECDC  F0FB         	call	_CRC_ReverseValue	;wreg free
 20834                           
 20835                           ;stkvar	_result @ sp[(-4)+0]
 20836  01D90C  0EFC               	movlw	-4
 20837  01D90E  0060  F007  FFE3   	movff	btemp,plusw1
 20838  01D914  0EFD               	movlw	-3
 20839  01D916  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20840  01D91C                     l12681:
 20841                           
 20842                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 20843                           ;stkvar	_xorValue @ sp[(-4)+-3]
 20844  01D91C  0EF9               	movlw	-7
 20845  01D91E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20846  01D924  0EFA               	movlw	-6
 20847  01D926  006F FF8C  F00C    	movff	plusw1,btemp+11
 20848                           
 20849                           ;stkvar	_result @ sp[(-4)+0]
 20850  01D92C  0EFC               	movlw	-4
 20851  01D92E  006F FF8C  F001    	movff	plusw1,btemp
 20852  01D934  500B               	movf	(btemp+10)^0,w,c
 20853  01D936  1A01               	xorwf	btemp^0,f,c
 20854  01D938  0EFC               	movlw	-4
 20855  01D93A  0060  F007  FFE3   	movff	btemp,plusw1
 20856  01D940  0EFD               	movlw	-3
 20857  01D942  006F FF8C  F001    	movff	plusw1,btemp
 20858  01D948  500C               	movf	(btemp+11)^0,w,c
 20859  01D94A  1A01               	xorwf	btemp^0,f,c
 20860  01D94C  0EFD               	movlw	-3
 20861  01D94E  0060  F007  FFE3   	movff	btemp,plusw1
 20862                           
 20863                           ;mcc_generated_files/crc.c: 198:     return result;
 20864                           ;stkvar	_result @ sp[(-4)+0]
 20865  01D954  0EFC               	movlw	-4
 20866  01D956  006F FF8C  F001    	movff	plusw1,btemp
 20867  01D95C  0EFD               	movlw	-3
 20868  01D95E  006F FF8C  F002    	movff	plusw1,btemp+1
 20869                           
 20870                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 20871  01D964  0EF9               	movlw	249
 20872  01D966  26E1               	addwf	fsr1l,f,c
 20873  01D968  0EFF               	movlw	255
 20874  01D96A  22E2               	addwfc	fsr1h,f,c
 20875  01D96C  0012               	return		;funcret
 20876  01D96E                     __end_of_CRC_CalculatedResultGet:
 20877                           	opt callstack 0
 20878                           
 20879 ;; *************** function _CRC_ReverseValue *****************
 20880 ;; Defined at:
 20881 ;;		line 138 in file "mcc_generated_files/crc.c"
 20882 ;; Parameters:    Size  Location     Type
 20883 ;;  crc             2  [STACK] unsigned short 
 20884 ;; Auto vars:     Size  Location     Type
 20885 ;;  mask            2  [STACK] unsigned short 
 20886 ;;  reverse         2  [STACK] unsigned short 
 20887 ;; Return value:  Size  Location     Type
 20888 ;;                  2  [STACK] unsigned short 
 20889 ;; Registers used:
 20890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 20891 ;; Tracked objects:
 20892 ;;		On entry : 0/0
 20893 ;;		On exit  : 0/0
 20894 ;;		Unchanged: 0/0
 20895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;Total ram usage:        0 bytes
 20901 ;; Hardware stack levels used:    1
 20902 ;; Hardware stack levels required when called:   15
 20903 ;; This function calls:
 20904 ;;		Nothing
 20905 ;; This function is called by:
 20906 ;;		_CRC_CalculatedResultGet
 20907 ;; This function uses a reentrant model
 20908 ;;
 20909                           
 20910                           	psect	text60
 20911  01F7B8                     __ptext60:
 20912                           	opt callstack 0
 20913  01F7B8                     _CRC_ReverseValue:
 20914                           	opt callstack 0
 20915                           
 20916                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20917  01F7B8  52E6               	movf	postinc1,f,c
 20918  01F7BA  52E6               	movf	postinc1,f,c
 20919  01F7BC  52E6               	movf	postinc1,f,c
 20920  01F7BE  52E6               	movf	postinc1,f,c
 20921                           
 20922                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 20923                           
 20924                           ;incstack = 0
 20925  01F7C0  0E01               	movlw	1
 20926  01F7C2  6E0B               	movwf	(btemp+10)^0,c
 20927  01F7C4  0E00               	movlw	0
 20928  01F7C6  6E0C               	movwf	(btemp+11)^0,c
 20929                           
 20930                           ;stkvar	_mask @ sp[(-4)+0]
 20931  01F7C8  0EFC               	movlw	-4
 20932  01F7CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20933  01F7D0  0EFD               	movlw	-3
 20934  01F7D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20935                           
 20936                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 20937  01F7D8  0060  F384  F00C   	movff	_crcObj+1,btemp+11
 20938  01F7DE  0EFF               	movlw	255
 20939  01F7E0  260C               	addwf	(btemp+11)^0,f,c
 20940                           
 20941                           ;stkvar	_mask @ sp[(-4)+0]
 20942  01F7E2  50E1               	movf	fsr1l,w,c
 20943  01F7E4  0FFC               	addlw	-4
 20944  01F7E6  6ED9               	movwf	fsr2l,c
 20945  01F7E8  50E2               	movf	fsr1h,w,c
 20946  01F7EA  6EDA               	movwf	fsr2h,c
 20947  01F7EC  0EFF               	movlw	255
 20948  01F7EE  22DA               	addwfc	fsr2h,f,c
 20949  01F7F0  280C               	incf	(btemp+11)^0,w,c
 20950  01F7F2  D003               	goto	u11480
 20951  01F7F4                     u11485:
 20952  01F7F4  90D8               	bcf	status,0,c
 20953  01F7F6  36DE               	rlcf	postinc2,f,c
 20954  01F7F8  36DD               	rlcf	postdec2,f,c
 20955  01F7FA                     u11480:
 20956  01F7FA  2EE8               	decfsz	wreg,f,c
 20957  01F7FC  D7FB               	goto	u11485
 20958                           
 20959                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 20960                           ;stkvar	_reverse @ sp[(-4)+2]
 20961  01F7FE  0EFE               	movlw	-2
 20962  01F800  6AE3               	clrf	plusw1,c
 20963  01F802  0EFF               	movlw	-1
 20964  01F804  6AE3               	clrf	plusw1,c
 20965                           
 20966                           ;mcc_generated_files/crc.c: 147:     while(crc)
 20967  01F806  D029               	goto	l12175
 20968  01F808                     l12167:
 20969                           
 20970                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 20971                           ;stkvar	_crc @ sp[(-4)+-2]
 20972  01F808  0EFA               	movlw	-6
 20973  01F80A  A0E3               	btfss	plusw1,0,c
 20974  01F80C  D01C               	goto	l12171
 20975                           
 20976                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 20977                           ;stkvar	_mask @ sp[(-4)+0]
 20978  01F80E  0EFC               	movlw	-4
 20979  01F810  006F FF8C  F00B    	movff	plusw1,btemp+10
 20980  01F816  0EFD               	movlw	-3
 20981  01F818  006F FF8C  F00C    	movff	plusw1,btemp+11
 20982                           
 20983                           ;stkvar	_reverse @ sp[(-4)+2]
 20984  01F81E  0EFE               	movlw	-2
 20985  01F820  006F FF8C  F001    	movff	plusw1,btemp
 20986  01F826  500B               	movf	(btemp+10)^0,w,c
 20987  01F828  1201               	iorwf	btemp^0,f,c
 20988  01F82A  0EFE               	movlw	-2
 20989  01F82C  0060  F007  FFE3   	movff	btemp,plusw1
 20990  01F832  0EFF               	movlw	-1
 20991  01F834  006F FF8C  F001    	movff	plusw1,btemp
 20992  01F83A  500C               	movf	(btemp+11)^0,w,c
 20993  01F83C  1201               	iorwf	btemp^0,f,c
 20994  01F83E  0EFF               	movlw	-1
 20995  01F840  0060  F007  FFE3   	movff	btemp,plusw1
 20996  01F846                     l12171:
 20997                           
 20998                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 20999                           ;stkvar	_mask @ sp[(-4)+0]
 21000  01F846  90D8               	bcf	status,0,c
 21001  01F848  0EFD               	movlw	-3
 21002  01F84A  32E3               	rrcf	plusw1,f,c
 21003  01F84C  0EFC               	movlw	-4
 21004  01F84E  32E3               	rrcf	plusw1,f,c
 21005                           
 21006                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21007                           ;stkvar	_crc @ sp[(-4)+-2]
 21008  01F850  90D8               	bcf	status,0,c
 21009  01F852  0EFB               	movlw	-5
 21010  01F854  32E3               	rrcf	plusw1,f,c
 21011  01F856  0EFA               	movlw	-6
 21012  01F858  32E3               	rrcf	plusw1,f,c
 21013  01F85A                     l12175:
 21014                           
 21015                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21016                           ;stkvar	_crc @ sp[(-4)+-2]
 21017  01F85A  0EFA               	movlw	-6
 21018  01F85C  006F FF8C  F001    	movff	plusw1,btemp
 21019  01F862  0EFB               	movlw	-5
 21020  01F864  50E3               	movf	plusw1,w,c
 21021  01F866  1001               	iorwf	btemp^0,w,c
 21022  01F868  A4D8               	btfss	status,2,c
 21023  01F86A  D7CE               	goto	l12167
 21024                           
 21025                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21026                           ;stkvar	_reverse @ sp[(-4)+2]
 21027  01F86C  0EFE               	movlw	-2
 21028  01F86E  006F FF8C  F001    	movff	plusw1,btemp
 21029  01F874  0EFF               	movlw	-1
 21030  01F876  006F FF8C  F002    	movff	plusw1,btemp+1
 21031                           
 21032                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21033  01F87C  0EFA               	movlw	250
 21034  01F87E  26E1               	addwf	fsr1l,f,c
 21035  01F880  0EFF               	movlw	255
 21036  01F882  22E2               	addwfc	fsr1h,f,c
 21037  01F884  0012               	return		;funcret
 21038  01F886                     __end_of_CRC_ReverseValue:
 21039                           	opt callstack 0
 21040                           
 21041 ;; *************** function _CRC_8BitDataWrite *****************
 21042 ;; Defined at:
 21043 ;;		line 125 in file "mcc_generated_files/crc.c"
 21044 ;; Parameters:    Size  Location     Type
 21045 ;;  data            1  [STACK] unsigned char 
 21046 ;; Auto vars:     Size  Location     Type
 21047 ;;		None
 21048 ;; Return value:  Size  Location     Type
 21049 ;;                  1  [STACK] _Bool 
 21050 ;; Registers used:
 21051 ;;		fsr1l, fsr1h
 21052 ;; Tracked objects:
 21053 ;;		On entry : 0/5
 21054 ;;		On exit  : 3F/39
 21055 ;;		Unchanged: 0/0
 21056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21061 ;;Total ram usage:        0 bytes
 21062 ;; Hardware stack levels used:    1
 21063 ;; Hardware stack levels required when called:   15
 21064 ;; This function calls:
 21065 ;;		Nothing
 21066 ;; This function is called by:
 21067 ;;		_read_cal_data
 21068 ;;		_write_cal_data
 21069 ;; This function uses a reentrant model
 21070 ;;
 21071                           
 21072                           	psect	text61
 21073  001D94                     __ptext61:
 21074                           	opt callstack 0
 21075  001D94                     _CRC_8BitDataWrite:
 21076                           	opt callstack 14
 21077                           
 21078                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21079                           
 21080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21081                           ;incstack = 0
 21082  001D94  0139               	movlb	57	; () banked
 21083  001D96  B168               	btfsc	104,0,b	;volatile
 21084  001D98  D004               	goto	l1271
 21085                           
 21086                           ; BSR set to: 57
 21087                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21088                           ;stkvar	_data @ sp[(0)+-1]
 21089  001D9A  0EFF               	movlw	-1
 21090  001D9C  006F FF8F F960     	movff	plusw1,14688	;volatile
 21091  001DA2                     l1271:
 21092                           
 21093                           ; BSR set to: 57
 21094                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21095  001DA2  52E5               	movf	postdec1,f,c
 21096  001DA4  0012               	return		;funcret
 21097  001DA6                     __end_of_CRC_8BitDataWrite:
 21098                           	opt callstack 0
 21099                           
 21100 ;; *************** function _start_adc_scan *****************
 21101 ;; Defined at:
 21102 ;;		line 70 in file "daq.c"
 21103 ;; Parameters:    Size  Location     Type
 21104 ;;		None
 21105 ;; Auto vars:     Size  Location     Type
 21106 ;;		None
 21107 ;; Return value:  Size  Location     Type
 21108 ;;                  1  [STACK] _Bool 
 21109 ;; Registers used:
 21110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21111 ;; Tracked objects:
 21112 ;;		On entry : 0/0
 21113 ;;		On exit  : 3/2
 21114 ;;		Unchanged: 0/0
 21115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21120 ;;Total ram usage:        0 bytes
 21121 ;; Hardware stack levels used:    1
 21122 ;; Hardware stack levels required when called:   16
 21123 ;; This function calls:
 21124 ;;		_ADCC_DischargeSampleCapacitor
 21125 ;;		_ADCC_SetADIInterruptHandler
 21126 ;;		_ADCC_SetADTIInterruptHandler
 21127 ;;		_ADCC_StartConversion
 21128 ;; This function is called by:
 21129 ;;		_main
 21130 ;;		_current_sensor_cal
 21131 ;;		_update_adc_result
 21132 ;; This function uses a reentrant model
 21133 ;;
 21134                           
 21135                           	psect	text62
 21136  000C4C                     __ptext62:
 21137                           	opt callstack 0
 21138  000C4C                     _start_adc_scan:
 21139                           	opt callstack 14
 21140                           
 21141                           ;daq.c: 72:  if (R.done)
 21142                           
 21143                           ; BSR set to: 57
 21144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21145                           ;incstack = 0
 21146  000C4C  0102               	movlb	2	; () banked
 21147  000C4E  513C               	movf	(_R+53)& (0+255),w,b	;volatile
 21148  000C50  A4D8               	btfss	status,2,c
 21149  000C52  0012               	return	
 21150                           
 21151                           ; BSR set to: 2
 21152                           ;daq.c: 75:  R.scan_index = 0;
 21153  000C54  6B39               	clrf	(_R+50)& (0+255),b	;volatile
 21154                           
 21155                           ; BSR set to: 2
 21156                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 21157  000C56  013A               	movlb	58	; () banked
 21158  000C58  5140               	movf	64,w,b	;volatile
 21159  000C5A  006E F940  F001    	movff	14928,btemp	;volatile
 21160  000C60  6A02               	clrf	(btemp+1)^0,c
 21161  000C62  0060  F004  F002   	movff	btemp,btemp+1
 21162  000C68  6A01               	clrf	btemp^0,c
 21163  000C6A  2601               	addwf	btemp^0,f,c
 21164  000C6C  0E00               	movlw	0
 21165  000C6E  2202               	addwfc	(btemp+1)^0,f,c
 21166  000C70  0E77               	movlw	119
 21167  000C72  1401               	andwf	btemp^0,w,c
 21168  000C74  0102               	movlb	2	; () banked
 21169  000C76  6F3A               	movwf	(_R+51)& (0+255),b	;volatile
 21170  000C78  0E3C               	movlw	60
 21171  000C7A  1402               	andwf	(btemp+1)^0,w,c
 21172  000C7C  6F3B               	movwf	(_R+52)& (0+255),b	;volatile
 21173                           
 21174                           ; BSR set to: 2
 21175                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 21176  000C7E  0EDC               	movlw	low _adc_int_handler
 21177  000C80  6EE6               	movwf	postinc1,c
 21178  000C82  0E1E               	movlw	high _adc_int_handler
 21179  000C84  6EE6               	movwf	postinc1,c
 21180  000C86  0E00               	movlw	low (_adc_int_handler shr (0+16))
 21181  000C88  6EE6               	movwf	postinc1,c
 21182  000C8A  ECF3  F00C         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21183                           
 21184                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 21185  000C8E  0E08               	movlw	low _adc_int_t_handler
 21186  000C90  6EE6               	movwf	postinc1,c
 21187  000C92  0E07               	movlw	high _adc_int_t_handler
 21188  000C94  6EE6               	movwf	postinc1,c
 21189  000C96  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 21190  000C98  6EE6               	movwf	postinc1,c
 21191  000C9A  ECDF  F00C         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 21192                           
 21193                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 21194  000C9E  EC49  F00F         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 21195                           
 21196                           ; BSR set to: 62
 21197                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 21198  000CA2  0102               	movlb	2	; () banked
 21199  000CA4  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 21200  000CA6  0B0F               	andlw	15
 21201  000CA8  6EE6               	movwf	postinc1,c
 21202  000CAA  ECD3  F00E         	call	_ADCC_StartConversion	;wreg free
 21203                           
 21204                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21205  000CAE  0012               	return		;funcret
 21206  000CB0                     __end_of_start_adc_scan:
 21207                           	opt callstack 0
 21208                           
 21209 ;; *************** function _ADCC_StartConversion *****************
 21210 ;; Defined at:
 21211 ;;		line 128 in file "mcc_generated_files/adcc.c"
 21212 ;; Parameters:    Size  Location     Type
 21213 ;;  channel         1  [STACK] enum E16136
 21214 ;; Auto vars:     Size  Location     Type
 21215 ;;		None
 21216 ;; Return value:  Size  Location     Type
 21217 ;;                  1  [STACK] void 
 21218 ;; Registers used:
 21219 ;;		fsr1l, fsr1h
 21220 ;; Tracked objects:
 21221 ;;		On entry : 3F/2
 21222 ;;		On exit  : 3F/3E
 21223 ;;		Unchanged: 0/0
 21224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21229 ;;Total ram usage:        0 bytes
 21230 ;; Hardware stack levels used:    1
 21231 ;; Hardware stack levels required when called:   15
 21232 ;; This function calls:
 21233 ;;		Nothing
 21234 ;; This function is called by:
 21235 ;;		_start_adc_scan
 21236 ;;		_adc_int_t_handler
 21237 ;; This function uses a reentrant model
 21238 ;;
 21239                           
 21240                           	psect	text63
 21241  001DA6                     __ptext63:
 21242                           	opt callstack 0
 21243  001DA6                     _ADCC_StartConversion:
 21244                           	opt callstack 0
 21245                           
 21246                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 21247                           ;stkvar	_channel @ sp[(0)+-1]
 21248                           
 21249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21250                           ;incstack = 0
 21251 ;; hardware stack exceeded
 21252  001DA6  0EFF               	movlw	-1
 21253  001DA8  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 21254                           
 21255                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 21256  001DAE  013E               	movlb	62	; () banked
 21257  001DB0  8FF8               	bsf	248,7,b	;volatile
 21258                           
 21259                           ; BSR set to: 62
 21260                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 21261  001DB2  81F8               	bsf	248,0,b	;volatile
 21262                           
 21263                           ; BSR set to: 62
 21264                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 21265  001DB4  52E5               	movf	postdec1,f,c
 21266  001DB6  0012               	return		;funcret
 21267  001DB8                     __end_of_ADCC_StartConversion:
 21268                           	opt callstack 0
 21269                           
 21270 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 21271 ;; Defined at:
 21272 ;;		line 189 in file "mcc_generated_files/adcc.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;		None
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;		None
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  1  [STACK] void 
 21279 ;; Registers used:
 21280 ;;		wreg, status,2
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/2
 21283 ;;		On exit  : 3F/3E
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21290 ;;Total ram usage:        0 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:   15
 21293 ;; This function calls:
 21294 ;;		Nothing
 21295 ;; This function is called by:
 21296 ;;		_start_adc_scan
 21297 ;;		_adc_int_t_handler
 21298 ;; This function uses a reentrant model
 21299 ;;
 21300                           
 21301                           	psect	text64
 21302  001E92                     __ptext64:
 21303                           	opt callstack 0
 21304  001E92                     _ADCC_DischargeSampleCapacitor:
 21305                           	opt callstack 0
 21306                           
 21307                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 21308                           
 21309                           ; BSR set to: 62
 21310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21311                           ;incstack = 0
 21312 ;; hardware stack exceeded
 21313  001E92  0E3B               	movlw	59
 21314  001E94  013E               	movlb	62	; () banked
 21315  001E96  6FF1               	movwf	241,b	;volatile
 21316                           
 21317                           ; BSR set to: 62
 21318                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 21319  001E98  0012               	return		;funcret
 21320  001E9A                     __end_of_ADCC_DischargeSampleCapacitor:
 21321                           	opt callstack 0
 21322                           
 21323 ;; *************** function _spinners *****************
 21324 ;; Defined at:
 21325 ;;		line 147 in file "mbmc.c"
 21326 ;; Parameters:    Size  Location     Type
 21327 ;;  shape           1  [STACK] unsigned char 
 21328 ;;  reset           1  [STACK] const unsigned char 
 21329 ;; Auto vars:     Size  Location     Type
 21330 ;;  c               1  [STACK] unsigned char 
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  1  [STACK] unsigned char 
 21333 ;; Registers used:
 21334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21344 ;;Total ram usage:        0 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:   16
 21347 ;; This function calls:
 21348 ;;		_strlen
 21349 ;; This function is called by:
 21350 ;;		_main
 21351 ;;		_current_sensor_cal
 21352 ;; This function uses a reentrant model
 21353 ;;
 21354                           
 21355                           	psect	text65
 21356  01F444                     __ptext65:
 21357                           	opt callstack 0
 21358  01F444                     _spinners:
 21359                           	opt callstack 0
 21360                           
 21361                           ; BSR set to: 62
 21362                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21363  01F444  52E6               	movf	postinc1,f,c
 21364                           
 21365                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 21366                           ;stkvar	_shape @ sp[(-1)+-1]
 21367                           
 21368                           ;incstack = 0
 21369  01F446  0EFE               	movlw	-2
 21370  01F448  006F FF8C  F001    	movff	plusw1,btemp
 21371  01F44E  0E05               	movlw	5
 21372  01F450  6401               	cpfsgt	btemp^0,c
 21373  01F452  D002               	goto	l2168
 21374                           
 21375                           ;mbmc.c: 153:   shape = 0;
 21376                           ;stkvar	_shape @ sp[(-1)+-1]
 21377  01F454  0EFE               	movlw	-2
 21378  01F456  6AE3               	clrf	plusw1,c
 21379  01F458                     l2168:
 21380                           
 21381                           ;mbmc.c: 154:  if (reset)
 21382                           ;stkvar	_reset @ sp[(-1)+-2]
 21383  01F458  0EFD               	movlw	-3
 21384  01F45A  50E3               	movf	plusw1,w,c
 21385  01F45C  B4D8               	btfsc	status,2,c
 21386  01F45E  D00A               	goto	l13293
 21387                           
 21388                           ;mbmc.c: 155:   s[shape] = 0;
 21389                           ;stkvar	_shape @ sp[(-1)+-1]
 21390  01F460  0EFE               	movlw	-2
 21391  01F462  006F FF8C  F00C    	movff	plusw1,btemp+11
 21392  01F468  500C               	movf	(btemp+11)^0,w,c
 21393  01F46A  0F6C               	addlw	low spinners@s
 21394  01F46C  6ED9               	movwf	fsr2l,c
 21395  01F46E  6ADA               	clrf	fsr2h,c
 21396  01F470  0E00               	movlw	0
 21397  01F472  6EDF               	movwf	indf2,c
 21398  01F474                     l13293:
 21399                           
 21400                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 21401                           ;stkvar	_shape @ sp[(-1)+-1]
 21402  01F474  0EFE               	movlw	-2
 21403  01F476  50E3               	movf	plusw1,w,c
 21404  01F478  0D14               	mullw	20
 21405  01F47A  0EAF               	movlw	low _spin
 21406  01F47C  6E0B               	movwf	(btemp+10)^0,c
 21407  01F47E  0EF9               	movlw	high _spin
 21408  01F480  6E0C               	movwf	(btemp+11)^0,c
 21409  01F482  50F3               	movf	243,w,c
 21410  01F484  260B               	addwf	(btemp+10)^0,f,c
 21411  01F486  50F4               	movf	244,w,c
 21412  01F488  220C               	addwfc	(btemp+11)^0,f,c
 21413                           
 21414                           ;stkvar	_shape @ sp[(-1)+-1]
 21415  01F48A  0EFE               	movlw	-2
 21416  01F48C  006F FF8C  F00A    	movff	plusw1,btemp+9
 21417  01F492  500A               	movf	(btemp+9)^0,w,c
 21418  01F494  0F6C               	addlw	low spinners@s
 21419  01F496  6ED9               	movwf	fsr2l,c
 21420  01F498  6ADA               	clrf	fsr2h,c
 21421  01F49A  50DF               	movf	indf2,w,c
 21422  01F49C  260B               	addwf	(btemp+10)^0,f,c
 21423  01F49E  0E00               	movlw	0
 21424  01F4A0  220C               	addwfc	(btemp+11)^0,f,c
 21425  01F4A2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21426  01F4A8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21427  01F4AE                     	if	0	;tblptru may be non-zero
 21428  01F4AE                     	endif
 21429  01F4AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21430  01F4AE  0E00               	movlw	low (__mediumconst shr (0+16))
 21431  01F4B0  6EF8               	movwf	tblptru,c
 21432  01F4B2                     	endif
 21433                           
 21434                           ;stkvar	_c @ sp[(-1)+0]
 21435  01F4B2  0008               	tblrd		*
 21436  01F4B4  0EFF               	movlw	-1
 21437  01F4B6  006F FFD7 FFE3     	movff	tablat,plusw1
 21438                           
 21439                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 21440                           ;stkvar	_shape @ sp[(-1)+-1]
 21441  01F4BC  0EFE               	movlw	-2
 21442  01F4BE  50E3               	movf	plusw1,w,c
 21443  01F4C0  0D14               	mullw	20
 21444  01F4C2  0EAF               	movlw	low _spin
 21445  01F4C4  6E0B               	movwf	(btemp+10)^0,c
 21446  01F4C6  0EF9               	movlw	high _spin
 21447  01F4C8  6E0C               	movwf	(btemp+11)^0,c
 21448  01F4CA  50F3               	movf	243,w,c
 21449  01F4CC  260B               	addwf	(btemp+10)^0,f,c
 21450  01F4CE  50F4               	movf	244,w,c
 21451  01F4D0  220C               	addwfc	(btemp+11)^0,f,c
 21452  01F4D2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21453  01F4D8  0060  F033  FFE6   	movff	btemp+11,postinc1
 21454  01F4DE  ECAE  F000         	call	_strlen	;wreg free
 21455                           
 21456                           ;stkvar	_shape @ sp[(-1)+-1]
 21457  01F4E2  0EFE               	movlw	-2
 21458  01F4E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21459  01F4EA  500C               	movf	(btemp+11)^0,w,c
 21460  01F4EC  0F6C               	addlw	low spinners@s
 21461  01F4EE  6ED9               	movwf	fsr2l,c
 21462  01F4F0  6ADA               	clrf	fsr2h,c
 21463  01F4F2  2ADF               	incf	indf2,f,c
 21464  01F4F4  50DF               	movf	indf2,w,c
 21465  01F4F6  6E0B               	movwf	(btemp+10)^0,c
 21466  01F4F8  6A0C               	clrf	(btemp+11)^0,c
 21467  01F4FA  5001               	movf	btemp^0,w,c
 21468  01F4FC  5C0B               	subwf	(btemp+10)^0,w,c
 21469  01F4FE  5002               	movf	(btemp+1)^0,w,c
 21470  01F500  580C               	subwfb	(btemp+11)^0,w,c
 21471  01F502  A0D8               	btfss	status,0,c
 21472  01F504  D00A               	goto	l13299
 21473                           
 21474                           ;mbmc.c: 158:   s[shape] = 0;
 21475                           ;stkvar	_shape @ sp[(-1)+-1]
 21476  01F506  0EFE               	movlw	-2
 21477  01F508  006F FF8C  F00C    	movff	plusw1,btemp+11
 21478  01F50E  500C               	movf	(btemp+11)^0,w,c
 21479  01F510  0F6C               	addlw	low spinners@s
 21480  01F512  6ED9               	movwf	fsr2l,c
 21481  01F514  6ADA               	clrf	fsr2h,c
 21482  01F516  0E00               	movlw	0
 21483  01F518  6EDF               	movwf	indf2,c
 21484  01F51A                     l13299:
 21485                           
 21486                           ;mbmc.c: 159:  return c;
 21487                           ;stkvar	_c @ sp[(-1)+0]
 21488  01F51A  0EFF               	movlw	-1
 21489  01F51C  006F FF8C  F001    	movff	plusw1,btemp
 21490                           
 21491                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 21492  01F522  52E5               	movf	postdec1,f,c
 21493  01F524  52E5               	movf	postdec1,f,c
 21494  01F526  52E5               	movf	postdec1,f,c
 21495  01F528  0012               	return		;funcret
 21496  01F52A                     __end_of_spinners:
 21497                           	opt callstack 0
 21498                           
 21499 ;; *************** function _get_switch *****************
 21500 ;; Defined at:
 21501 ;;		line 18 in file "dio.c"
 21502 ;; Parameters:    Size  Location     Type
 21503 ;;  i               1  [STACK] const unsigned char 
 21504 ;; Auto vars:     Size  Location     Type
 21505 ;;		None
 21506 ;; Return value:  Size  Location     Type
 21507 ;;                  1  [STACK] enum E17187
 21508 ;; Registers used:
 21509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21510 ;; Tracked objects:
 21511 ;;		On entry : 0/0
 21512 ;;		On exit  : 0/0
 21513 ;;		Unchanged: 0/0
 21514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21519 ;;Total ram usage:        0 bytes
 21520 ;; Hardware stack levels used:    1
 21521 ;; Hardware stack levels required when called:   15
 21522 ;; This function calls:
 21523 ;;		Nothing
 21524 ;; This function is called by:
 21525 ;;		_main
 21526 ;;		_current_sensor_cal
 21527 ;;		_display_history
 21528 ;;		_hid_input
 21529 ;; This function uses a reentrant model
 21530 ;;
 21531                           
 21532                           	psect	text66
 21533  00177E                     __ptext66:
 21534                           	opt callstack 0
 21535  00177E                     _get_switch:
 21536                           	opt callstack 13
 21537                           
 21538                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 21539                           ;stkvar	_i @ sp[(0)+-1]
 21540                           
 21541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21542                           ;incstack = 0
 21543  00177E  0EFF               	movlw	-1
 21544  001780  006F FF8C  F001    	movff	plusw1,btemp
 21545  001786  0E05               	movlw	5
 21546  001788  6401               	cpfsgt	btemp^0,c
 21547  00178A  D002               	goto	l12747
 21548                           
 21549                           ;dio.c: 21:   return SW_OFF;
 21550  00178C  0E00               	movlw	0
 21551  00178E  D00A               	goto	L19
 21552  001790                     l12747:
 21553                           
 21554                           ;dio.c: 23:  return S.button[i].sw;
 21555                           ;stkvar	_i @ sp[(0)+-1]
 21556  001790  0EFF               	movlw	-1
 21557  001792  50E3               	movf	plusw1,w,c
 21558  001794  0D05               	mullw	5
 21559  001796  0EC9               	movlw	low _S
 21560  001798  24F3               	addwf	243,w,c
 21561  00179A  6ED9               	movwf	fsr2l,c
 21562  00179C  0E01               	movlw	high _S
 21563  00179E  20F4               	addwfc	prodh,w,c
 21564  0017A0  6EDA               	movwf	fsr2h,c
 21565  0017A2  50DF               	movf	indf2,w,c
 21566  0017A4                     L19:
 21567  0017A4  6E01               	movwf	btemp^0,c
 21568                           
 21569                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 21570  0017A6  52E5               	movf	postdec1,f,c
 21571  0017A8  0012               	return		;funcret
 21572  0017AA                     __end_of_get_switch:
 21573                           	opt callstack 0
 21574                           
 21575 ;; *************** function _clear_adc_scan *****************
 21576 ;; Defined at:
 21577 ;;		line 101 in file "daq.c"
 21578 ;; Parameters:    Size  Location     Type
 21579 ;;		None
 21580 ;; Auto vars:     Size  Location     Type
 21581 ;;		None
 21582 ;; Return value:  Size  Location     Type
 21583 ;;                  1  [STACK] void 
 21584 ;; Registers used:
 21585 ;;		None
 21586 ;; Tracked objects:
 21587 ;;		On entry : 0/0
 21588 ;;		On exit  : 3F/2
 21589 ;;		Unchanged: 0/0
 21590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;Total ram usage:        0 bytes
 21596 ;; Hardware stack levels used:    1
 21597 ;; Hardware stack levels required when called:   15
 21598 ;; This function calls:
 21599 ;;		Nothing
 21600 ;; This function is called by:
 21601 ;;		_main
 21602 ;;		_current_sensor_cal
 21603 ;;		_update_adc_result
 21604 ;; This function uses a reentrant model
 21605 ;;
 21606                           
 21607                           	psect	text67
 21608  001EB8                     __ptext67:
 21609                           	opt callstack 0
 21610  001EB8                     _clear_adc_scan:
 21611                           	opt callstack 13
 21612                           
 21613                           ;daq.c: 103:  R.done = 0;
 21614                           
 21615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21616                           ;incstack = 0
 21617  001EB8  0102               	movlb	2	; () banked
 21618  001EBA  6B3C               	clrf	(_R+53)& (0+255),b	;volatile
 21619                           
 21620                           ; BSR set to: 2
 21621                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21622  001EBC  0012               	return		;funcret
 21623  001EBE                     __end_of_clear_adc_scan:
 21624                           	opt callstack 0
 21625                           
 21626 ;; *************** function _cal_current_zero *****************
 21627 ;; Defined at:
 21628 ;;		line 327 in file "daq.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;  mode            1  [STACK] const _Bool 
 21631 ;;  cb              2  [STACK] const short 
 21632 ;;  cp              2  [STACK] const short 
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;		None
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  1  [STACK] _Bool 
 21637 ;; Registers used:
 21638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/2
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21648 ;;Total ram usage:        0 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:   16
 21651 ;; This function calls:
 21652 ;;		_check_range
 21653 ;; This function is called by:
 21654 ;;		_current_sensor_cal
 21655 ;; This function uses a reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text68
 21659  000330                     __ptext68:
 21660                           	opt callstack 0
 21661  000330                     _cal_current_zero:
 21662                           	opt callstack 13
 21663                           
 21664                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 21665                           
 21666                           ; BSR set to: 2
 21667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21668                           ;incstack = 0
 21669  000330  0EA0               	movlw	160
 21670  000332  6EE6               	movwf	postinc1,c
 21671  000334  0E0F               	movlw	15
 21672  000336  6EE6               	movwf	postinc1,c
 21673  000338  0E64               	movlw	100
 21674  00033A  6EE6               	movwf	postinc1,c
 21675  00033C  0E00               	movlw	0
 21676  00033E  6EE6               	movwf	postinc1,c
 21677                           
 21678                           ;stkvar	_cb @ sp[(-4)+-3]
 21679  000340  0EF9               	movlw	-7
 21680  000342  006F FF8F FFE6     	movff	plusw1,postinc1
 21681  000348  006F FF8F FFE6     	movff	plusw1,postinc1
 21682  00034E  ECC5  F003         	call	_check_range	;wreg free
 21683  000352  5001               	movf	btemp^0,w,c
 21684  000354  A4D8               	btfss	status,2,c
 21685  000356  D002               	goto	l13367
 21686  000358                     u12530:
 21687                           
 21688                           ;daq.c: 331:   return 0;
 21689  000358  0E00               	movlw	0
 21690  00035A  D019               	goto	L20
 21691  00035C                     l13367:
 21692                           
 21693                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 21694  00035C  0EA0               	movlw	160
 21695  00035E  6EE6               	movwf	postinc1,c
 21696  000360  0E0F               	movlw	15
 21697  000362  6EE6               	movwf	postinc1,c
 21698  000364  0E64               	movlw	100
 21699  000366  6EE6               	movwf	postinc1,c
 21700  000368  0E00               	movlw	0
 21701  00036A  6EE6               	movwf	postinc1,c
 21702                           
 21703                           ;stkvar	_cp @ sp[(-4)+-5]
 21704  00036C  0EF7               	movlw	-9
 21705  00036E  006F FF8F FFE6     	movff	plusw1,postinc1
 21706  000374  006F FF8F FFE6     	movff	plusw1,postinc1
 21707  00037A  ECC5  F003         	call	_check_range	;wreg free
 21708  00037E  5001               	movf	btemp^0,w,c
 21709  000380  B4D8               	btfsc	status,2,c
 21710  000382  D7EA               	goto	u12530
 21711                           
 21712                           ;daq.c: 336:  if (!mode)
 21713                           ;stkvar	_mode @ sp[(0)+-1]
 21714  000384  0EFF               	movlw	-1
 21715  000386  50E3               	movf	plusw1,w,c
 21716  000388  A4D8               	btfss	status,2,c
 21717  00038A  D003               	goto	l13379
 21718  00038C                     u12550:
 21719                           
 21720                           ;daq.c: 337:   return 1;
 21721  00038C  0E01               	movlw	1
 21722  00038E                     L20:
 21723  00038E  6E01               	movwf	btemp^0,c
 21724  000390  D013               	goto	l2050
 21725  000392                     l13379:
 21726                           
 21727                           ;daq.c: 339:  R.n_offset[0] = cb;
 21728                           ;stkvar	_cb @ sp[(0)+-3]
 21729  000392  0EFD               	movlw	-3
 21730  000394  006F FF8C  F22D    	movff	plusw1,_R+38	;volatile
 21731  00039A  0EFE               	movlw	-2
 21732  00039C  006F FF8C  F22E    	movff	plusw1,_R+39	;volatile
 21733                           
 21734                           ;daq.c: 340:  R.n_offset[1] = cp;
 21735                           ;stkvar	_cp @ sp[(0)+-5]
 21736  0003A2  0EFB               	movlw	-5
 21737  0003A4  006F FF8C  F22F    	movff	plusw1,_R+40	;volatile
 21738  0003AA  0EFC               	movlw	-4
 21739  0003AC  006F FF8C  F230    	movff	plusw1,_R+41	;volatile
 21740                           
 21741                           ;daq.c: 341:  R.c_zero_cal = 1;
 21742  0003B2  0102               	movlb	2	; () banked
 21743  0003B4  83AE               	bsf	(_R+167)& (0+255),1,b	;volatile
 21744  0003B6  D7EA               	goto	u12550
 21745  0003B8                     l2050:
 21746                           
 21747                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 21748  0003B8  0EFB               	movlw	251
 21749  0003BA  26E1               	addwf	fsr1l,f,c
 21750  0003BC  0EFF               	movlw	255
 21751  0003BE  22E2               	addwfc	fsr1h,f,c
 21752  0003C0  0012               	return		;funcret
 21753  0003C2                     __end_of_cal_current_zero:
 21754                           	opt callstack 0
 21755                           
 21756 ;; *************** function _check_range *****************
 21757 ;; Defined at:
 21758 ;;		line 315 in file "daq.c"
 21759 ;; Parameters:    Size  Location     Type
 21760 ;;  value           2  [STACK] const short 
 21761 ;;  window          2  [STACK] const short 
 21762 ;;  standard        2  [STACK] const short 
 21763 ;; Auto vars:     Size  Location     Type
 21764 ;;		None
 21765 ;; Return value:  Size  Location     Type
 21766 ;;                  1  [STACK] _Bool 
 21767 ;; Registers used:
 21768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21769 ;; Tracked objects:
 21770 ;;		On entry : 0/2
 21771 ;;		On exit  : 0/0
 21772 ;;		Unchanged: 0/0
 21773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21778 ;;Total ram usage:        0 bytes
 21779 ;; Hardware stack levels used:    1
 21780 ;; Hardware stack levels required when called:   15
 21781 ;; This function calls:
 21782 ;;		Nothing
 21783 ;; This function is called by:
 21784 ;;		_cal_current_zero
 21785 ;; This function uses a reentrant model
 21786 ;;
 21787                           
 21788                           	psect	text69
 21789  00078A                     __ptext69:
 21790                           	opt callstack 0
 21791  00078A                     _check_range:
 21792                           	opt callstack 13
 21793                           
 21794                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 21795                           ;stkvar	_value @ sp[(0)+-2]
 21796                           ;stkvar	_window @ sp[(0)+-4]
 21797                           ;stkvar	_standard @ sp[(0)+-6]
 21798                           
 21799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21800                           ;incstack = 0
 21801  00078A  0EFA               	movlw	-6
 21802  00078C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21803  000792  0EFB               	movlw	-5
 21804  000794  006F FF8C  F00C    	movff	plusw1,btemp+11
 21805  00079A  0EFC               	movlw	-4
 21806  00079C  50E3               	movf	plusw1,w,c
 21807  00079E  260B               	addwf	(btemp+10)^0,f,c
 21808  0007A0  0EFD               	movlw	-3
 21809  0007A2  50E3               	movf	plusw1,w,c
 21810  0007A4  220C               	addwfc	(btemp+11)^0,f,c
 21811  0007A6  0EFE               	movlw	-2
 21812  0007A8  50E3               	movf	plusw1,w,c
 21813  0007AA  5C0B               	subwf	(btemp+10)^0,w,c
 21814  0007AC  500C               	movf	(btemp+11)^0,w,c
 21815  0007AE  0A80               	xorlw	128
 21816  0007B0  6E01               	movwf	btemp^0,c
 21817  0007B2  0EFF               	movlw	-1
 21818  0007B4  50E3               	movf	plusw1,w,c
 21819  0007B6  0A80               	xorlw	128
 21820  0007B8  5801               	subwfb	btemp^0,w,c
 21821  0007BA  B0D8               	btfsc	status,0,c
 21822  0007BC  D002               	goto	l12805
 21823  0007BE                     u12260:
 21824                           
 21825                           ;daq.c: 318:   return 0;
 21826  0007BE  0E00               	movlw	0
 21827  0007C0  D01E               	goto	L21
 21828  0007C2                     l12805:
 21829                           
 21830                           ;daq.c: 319:  if (value < (standard - window))
 21831                           ;stkvar	_window @ sp[(0)+-4]
 21832                           ;stkvar	_standard @ sp[(0)+-6]
 21833  0007C2  0EFA               	movlw	-6
 21834  0007C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21835  0007CA  0EFB               	movlw	-5
 21836  0007CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21837  0007D2  0EFC               	movlw	-4
 21838  0007D4  50E3               	movf	plusw1,w,c
 21839  0007D6  5E0B               	subwf	(btemp+10)^0,f,c
 21840  0007D8  0EFD               	movlw	-3
 21841  0007DA  50E3               	movf	plusw1,w,c
 21842  0007DC  5A0C               	subwfb	(btemp+11)^0,f,c
 21843                           
 21844                           ;stkvar	_value @ sp[(0)+-2]
 21845  0007DE  0EFE               	movlw	-2
 21846  0007E0  006F FF8C  F001    	movff	plusw1,btemp
 21847  0007E6  500B               	movf	(btemp+10)^0,w,c
 21848  0007E8  5C01               	subwf	btemp^0,w,c
 21849  0007EA  0EFF               	movlw	-1
 21850  0007EC  50E3               	movf	plusw1,w,c
 21851  0007EE  0A80               	xorlw	128
 21852  0007F0  6E01               	movwf	btemp^0,c
 21853  0007F2  500C               	movf	(btemp+11)^0,w,c
 21854  0007F4  0A80               	xorlw	128
 21855  0007F6  5801               	subwfb	btemp^0,w,c
 21856  0007F8  A0D8               	btfss	status,0,c
 21857  0007FA  D7E1               	goto	u12260
 21858                           
 21859                           ;daq.c: 321:  return 1;
 21860  0007FC  0E01               	movlw	1
 21861  0007FE                     L21:
 21862  0007FE  6E01               	movwf	btemp^0,c
 21863                           
 21864                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 21865  000800  0EFA               	movlw	250
 21866  000802  26E1               	addwf	fsr1l,f,c
 21867  000804  0EFF               	movlw	255
 21868  000806  22E2               	addwfc	fsr1h,f,c
 21869  000808  0012               	return		;funcret
 21870  00080A                     __end_of_check_range:
 21871                           	opt callstack 0
 21872                           
 21873 ;; *************** function _convert_adc_data *****************
 21874 ;; Defined at:
 21875 ;;		line 51 in file "mbmc.c"
 21876 ;; Parameters:    Size  Location     Type
 21877 ;;		None
 21878 ;; Auto vars:     Size  Location     Type
 21879 ;;  i               1  [STACK] unsigned char 
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  1  [STACK] void 
 21882 ;; Registers used:
 21883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/1
 21886 ;;		On exit  : 0/0
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21893 ;;Total ram usage:        0 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:   18
 21896 ;; This function calls:
 21897 ;;		_conv_raw_result
 21898 ;;		_lp_filter
 21899 ;; This function is called by:
 21900 ;;		_main
 21901 ;; This function uses a reentrant model
 21902 ;;
 21903                           
 21904                           	psect	text70
 21905  01FACE                     __ptext70:
 21906                           	opt callstack 0
 21907  01FACE                     _convert_adc_data:
 21908                           	opt callstack 0
 21909                           
 21910                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21911  01FACE  52E6               	movf	postinc1,f,c
 21912                           
 21913                           ;mbmc.c: 53:  uint8_t i = 0;
 21914                           ;stkvar	_i @ sp[(-1)+0]
 21915                           
 21916                           ;incstack = 0
 21917  01FAD0  0EFF               	movlw	-1
 21918  01FAD2  6AE3               	clrf	plusw1,c
 21919  01FAD4                     l14231:
 21920                           
 21921                           ;mbmc.c: 56:   if (V.calib) {
 21922  01FAD4  0101               	movlb	1	; () banked
 21923  01FAD6  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 21924  01FAD8  B4D8               	btfsc	status,2,c
 21925  01FADA  D01B               	goto	l14235
 21926                           
 21927                           ; BSR set to: 1
 21928                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 21929  01FADC  0E01               	movlw	1
 21930  01FADE  6EE6               	movwf	postinc1,c
 21931                           
 21932                           ;stkvar	_i @ sp[(-2)+0]
 21933  01FAE0  0EFE               	movlw	-2
 21934  01FAE2  50E3               	movf	plusw1,w,c
 21935  01FAE4  6EE6               	movwf	postinc1,c
 21936  01FAE6  0E01               	movlw	1
 21937  01FAE8  6EE6               	movwf	postinc1,c
 21938                           
 21939                           ;stkvar	_i @ sp[(-4)+0]
 21940  01FAEA  0EFC               	movlw	-4
 21941  01FAEC  50E3               	movf	plusw1,w,c
 21942  01FAEE  6EE6               	movwf	postinc1,c
 21943  01FAF0  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 21944  01FAF4  0060  F007  FFE6   	movff	btemp,postinc1
 21945  01FAFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21946  01FB00  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21947  01FB06  0060  F013  FFE6   	movff	btemp+3,postinc1
 21948  01FB0C  EC42  F0E7         	call	_lp_filter	;wreg free
 21949  01FB10  D01A               	goto	L22
 21950  01FB12                     l14235:
 21951                           
 21952                           ; BSR set to: 1
 21953                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 21954  01FB12  0E00               	movlw	0
 21955  01FB14  6EE6               	movwf	postinc1,c
 21956                           
 21957                           ;stkvar	_i @ sp[(-2)+0]
 21958  01FB16  0EFE               	movlw	-2
 21959  01FB18  50E3               	movf	plusw1,w,c
 21960  01FB1A  6EE6               	movwf	postinc1,c
 21961  01FB1C  0E00               	movlw	0
 21962  01FB1E  6EE6               	movwf	postinc1,c
 21963                           
 21964                           ;stkvar	_i @ sp[(-4)+0]
 21965  01FB20  0EFC               	movlw	-4
 21966  01FB22  50E3               	movf	plusw1,w,c
 21967  01FB24  6EE6               	movwf	postinc1,c
 21968  01FB26  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 21969  01FB2A  0060  F007  FFE6   	movff	btemp,postinc1
 21970  01FB30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21971  01FB36  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21972  01FB3C  0060  F013  FFE6   	movff	btemp+3,postinc1
 21973  01FB42  EC42  F0E7         	call	_lp_filter	;wreg free
 21974  01FB46                     L22:
 21975                           
 21976                           ;stkvar	_i @ sp[(-1)+0]
 21977  01FB46  0EFF               	movlw	-1
 21978  01FB48  50E3               	movf	plusw1,w,c
 21979  01FB4A  0D04               	mullw	4
 21980  01FB4C  0EFF               	movlw	low _C
 21981  01FB4E  24F3               	addwf	243,w,c
 21982  01FB50  6ED9               	movwf	fsr2l,c
 21983  01FB52  0E08               	movlw	high _C
 21984  01FB54  20F4               	addwfc	prodh,w,c
 21985  01FB56  6EDA               	movwf	fsr2h,c
 21986  01FB58  0060  F007  FFDE   	movff	btemp,postinc2
 21987  01FB5E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 21988  01FB64  0060  F00F  FFDE   	movff	btemp+2,postinc2
 21989  01FB6A  0060  F013  FFDE   	movff	btemp+3,postinc2
 21990                           
 21991                           ;mbmc.c: 61:  } while (++i < 16);
 21992                           ;stkvar	_i @ sp[(-1)+0]
 21993  01FB70  0EFF               	movlw	-1
 21994  01FB72  2AE3               	incf	plusw1,f,c
 21995  01FB74  0EFF               	movlw	-1
 21996  01FB76  006F FF8C  F001    	movff	plusw1,btemp
 21997  01FB7C  0E0F               	movlw	15
 21998  01FB7E  6401               	cpfsgt	btemp^0,c
 21999  01FB80  D7A9               	goto	l14231
 22000                           
 22001                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22002  01FB82  52E5               	movf	postdec1,f,c
 22003  01FB84  0012               	return		;funcret
 22004  01FB86                     __end_of_convert_adc_data:
 22005                           	opt callstack 0
 22006                           
 22007 ;; *************** function _clear_hid_pflags *****************
 22008 ;; Defined at:
 22009 ;;		line 67 in file "hid.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;  h               2  [STACK] PTR struct H_data
 22012 ;;		 -> H(9), 
 22013 ;; Auto vars:     Size  Location     Type
 22014 ;;		None
 22015 ;; Return value:  Size  Location     Type
 22016 ;;                  1  [STACK] void 
 22017 ;; Registers used:
 22018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22019 ;; Tracked objects:
 22020 ;;		On entry : 3E/0
 22021 ;;		On exit  : 0/0
 22022 ;;		Unchanged: 0/0
 22023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22028 ;;Total ram usage:        0 bytes
 22029 ;; Hardware stack levels used:    1
 22030 ;; Hardware stack levels required when called:   15
 22031 ;; This function calls:
 22032 ;;		Nothing
 22033 ;; This function is called by:
 22034 ;;		_main
 22035 ;; This function uses a reentrant model
 22036 ;;
 22037                           
 22038                           	psect	text71
 22039  01FF9A                     __ptext71:
 22040                           	opt callstack 0
 22041  01FF9A                     _clear_hid_pflags:
 22042                           	opt callstack 15
 22043                           
 22044                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22045                           ;stkvar	_h @ sp[(0)+-2]
 22046                           
 22047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22048                           ;incstack = 0
 22049  01FF9A  0EFE               	movlw	-2
 22050  01FF9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22051  01FFA2  0EFF               	movlw	-1
 22052  01FFA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22053  01FFAA  0E03               	movlw	3
 22054  01FFAC  240B               	addwf	(btemp+10)^0,w,c
 22055  01FFAE  6ED9               	movwf	fsr2l,c
 22056  01FFB0  0E00               	movlw	0
 22057  01FFB2  200C               	addwfc	(btemp+11)^0,w,c
 22058  01FFB4  6EDA               	movwf	fsr2h,c
 22059  01FFB6  0E00               	movlw	0
 22060  01FFB8  6EDF               	movwf	indf2,c
 22061                           
 22062                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22063                           ;stkvar	_h @ sp[(0)+-2]
 22064  01FFBA  0EFE               	movlw	-2
 22065  01FFBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22066  01FFC2  0EFF               	movlw	-1
 22067  01FFC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22068  01FFCA  0E05               	movlw	5
 22069  01FFCC  240B               	addwf	(btemp+10)^0,w,c
 22070  01FFCE  6ED9               	movwf	fsr2l,c
 22071  01FFD0  0E00               	movlw	0
 22072  01FFD2  200C               	addwfc	(btemp+11)^0,w,c
 22073  01FFD4  6EDA               	movwf	fsr2h,c
 22074  01FFD6  0E00               	movlw	0
 22075  01FFD8  6EDF               	movwf	indf2,c
 22076                           
 22077                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22078                           ;stkvar	_h @ sp[(0)+-2]
 22079  01FFDA  0EFE               	movlw	-2
 22080  01FFDC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22081  01FFE2  0EFF               	movlw	-1
 22082  01FFE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22083  01FFEA  0E07               	movlw	7
 22084  01FFEC  240B               	addwf	(btemp+10)^0,w,c
 22085  01FFEE  6ED9               	movwf	fsr2l,c
 22086  01FFF0  0E00               	movlw	0
 22087  01FFF2  200C               	addwfc	(btemp+11)^0,w,c
 22088  01FFF4  6EDA               	movwf	fsr2h,c
 22089  01FFF6  0E00               	movlw	0
 22090  01FFF8  6EDF               	movwf	indf2,c
 22091                           
 22092                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22093  01FFFA  52E5               	movf	postdec1,f,c
 22094  01FFFC  52E5               	movf	postdec1,f,c
 22095  01FFFE  0012               	return		;funcret
 22096  020000                     __end_of_clear_hid_pflags:
 22097                           	opt callstack 0
 22098                           
 22099 ;; *************** function _check_help *****************
 22100 ;; Defined at:
 22101 ;;		line 40 in file "mconfig.c"
 22102 ;; Parameters:    Size  Location     Type
 22103 ;;  flipper         1  [STACK] const _Bool 
 22104 ;; Auto vars:     Size  Location     Type
 22105 ;;  estatus         1    0        _Bool 
 22106 ;; Return value:  Size  Location     Type
 22107 ;;                  1  [STACK] _Bool 
 22108 ;; Registers used:
 22109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22110 ;; Tracked objects:
 22111 ;;		On entry : 3F/1
 22112 ;;		On exit  : 0/0
 22113 ;;		Unchanged: 0/0
 22114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22119 ;;Total ram usage:        0 bytes
 22120 ;; Hardware stack levels used:    1
 22121 ;; Hardware stack levels required when called:   28
 22122 ;; This function calls:
 22123 ;;		_StartTimer
 22124 ;;		_TimerDone
 22125 ;;		_display_help
 22126 ;;		_display_info
 22127 ;;		_get_vterm_ptr
 22128 ;;		_help_button
 22129 ;;		_mode_lamp_bright
 22130 ;;		_mode_lamp_dim
 22131 ;;		_set_display_info
 22132 ;;		_set_temp_display_help
 22133 ;;		_set_vterm
 22134 ;;		_sprintf
 22135 ;;		_update_lcd
 22136 ;;		_vterm_dump
 22137 ;; This function is called by:
 22138 ;;		_main
 22139 ;; This function uses a reentrant model
 22140 ;;
 22141                           
 22142                           	psect	text72
 22143  01C8A4                     __ptext72:
 22144                           	opt callstack 0
 22145  01C8A4                     _check_help:
 22146                           	opt callstack 2
 22147                           
 22148                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 22149                           
 22150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22151                           ;incstack = 0
 22152  01C8A4  EC74  F00A         	call	_help_button	;wreg free
 22153  01C8A8  5001               	movf	btemp^0,w,c
 22154  01C8AA  B4D8               	btfsc	status,2,c
 22155  01C8AC  D0D0               	goto	l16939
 22156  01C8AE  EC4D  F00F         	call	_display_info	;wreg free
 22157  01C8B2  0401               	decf	btemp^0,w,c
 22158  01C8B4  B4D8               	btfsc	status,2,c
 22159  01C8B6  D0CB               	goto	l16939
 22160                           
 22161                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 22162  01C8B8  0EDC               	movlw	220
 22163  01C8BA  6EE6               	movwf	postinc1,c
 22164  01C8BC  0E05               	movlw	5
 22165  01C8BE  6EE6               	movwf	postinc1,c
 22166  01C8C0  0E0B               	movlw	11
 22167  01C8C2  6EE6               	movwf	postinc1,c
 22168  01C8C4  ECBA  F009         	call	_StartTimer	;wreg free
 22169                           
 22170                           ;mconfig.c: 48:   if (V.debug)
 22171  01C8C8  0101               	movlb	1	; () banked
 22172  01C8CA  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
 22173                           
 22174                           ; BSR set to: 1
 22175                           ;mconfig.c: 49:    vterm_dump();
 22176  01C8CC  EC62  F0F3         	call	_vterm_dump	;wreg free
 22177                           
 22178                           ;mconfig.c: 51:   set_vterm(1);
 22179  01C8D0  0E01               	movlw	1
 22180  01C8D2  6EE6               	movwf	postinc1,c
 22181  01C8D4  EC42  F00E         	call	_set_vterm	;wreg free
 22182                           
 22183                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 22184  01C8D8  EC4D  F00F         	call	_display_info	;wreg free
 22185  01C8DC  5001               	movf	btemp^0,w,c
 22186  01C8DE  6EE6               	movwf	postinc1,c
 22187  01C8E0  ECF4  F00E         	call	_set_temp_display_help	;wreg free
 22188                           
 22189                           ; BSR set to: 1
 22190                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 22191  01C8E4  0E01               	movlw	1
 22192  01C8E6  6EE6               	movwf	postinc1,c
 22193  01C8E8  EC51  F00E         	call	_set_display_info	;wreg free
 22194                           
 22195                           ;mconfig.c: 54:   if (flipper) {
 22196                           ;stkvar	_flipper @ sp[(0)+-1]
 22197  01C8EC  0EFF               	movlw	-1
 22198  01C8EE  50E3               	movf	plusw1,w,c
 22199  01C8F0  B4D8               	btfsc	status,2,c
 22200  01C8F2  D019               	goto	l16925
 22201                           
 22202                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 22203  01C8F4  0EB2               	movlw	low STR_68
 22204  01C8F6  6EE6               	movwf	postinc1,c
 22205  01C8F8  0EFF               	movlw	high STR_68
 22206  01C8FA  6EE6               	movwf	postinc1,c
 22207  01C8FC  0E5C               	movlw	low STR_70
 22208  01C8FE  6EE6               	movwf	postinc1,c
 22209  01C900  0EFF               	movlw	high STR_70
 22210  01C902  6EE6               	movwf	postinc1,c
 22211  01C904  0E01               	movlw	1
 22212  01C906  6EE6               	movwf	postinc1,c
 22213  01C908  0E00               	movlw	0
 22214  01C90A  6EE6               	movwf	postinc1,c
 22215  01C90C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22216  01C910  0060  F007  FFE6   	movff	btemp,postinc1
 22217  01C916  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22218  01C91C  0E06               	movlw	6
 22219  01C91E  6EE6               	movwf	postinc1,c
 22220  01C920  EC42  F0F7         	call	_sprintf	;wreg free
 22221                           
 22222                           ;mconfig.c: 56:   } else {
 22223  01C924  D018               	goto	l1821
 22224  01C926                     l16925:
 22225                           
 22226                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 22227  01C926  0EC8               	movlw	low STR_69
 22228  01C928  6EE6               	movwf	postinc1,c
 22229  01C92A  0EFF               	movlw	high STR_69
 22230  01C92C  6EE6               	movwf	postinc1,c
 22231  01C92E  0E5C               	movlw	low STR_70
 22232  01C930  6EE6               	movwf	postinc1,c
 22233  01C932  0EFF               	movlw	high STR_70
 22234  01C934  6EE6               	movwf	postinc1,c
 22235  01C936  0E01               	movlw	1
 22236  01C938  6EE6               	movwf	postinc1,c
 22237  01C93A  0E00               	movlw	0
 22238  01C93C  6EE6               	movwf	postinc1,c
 22239  01C93E  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22240  01C942  0060  F007  FFE6   	movff	btemp,postinc1
 22241  01C948  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22242  01C94E  0E06               	movlw	6
 22243  01C950  6EE6               	movwf	postinc1,c
 22244  01C952  EC42  F0F7         	call	_sprintf	;wreg free
 22245  01C956                     l1821:
 22246                           
 22247                           ; BSR set to: 0
 22248                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 22249  01C956  0101               	movlb	1	; () banked
 22250  01C958  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 22251  01C95A  32E8               	rrcf	wreg,f,c
 22252  01C95C  32E8               	rrcf	wreg,f,c
 22253  01C95E  0B03               	andlw	3
 22254  01C960  0D24               	mullw	36
 22255  01C962  0E12               	movlw	18
 22256  01C964  26F3               	addwf	243,f,c
 22257  01C966  0E00               	movlw	0
 22258  01C968  22F4               	addwfc	244,f,c
 22259  01C96A  0E1F               	movlw	low _T
 22260  01C96C  6E0B               	movwf	(btemp+10)^0,c
 22261  01C96E  0EF9               	movlw	high _T
 22262  01C970  6E0C               	movwf	(btemp+11)^0,c
 22263  01C972  50F3               	movf	243,w,c
 22264  01C974  260B               	addwf	(btemp+10)^0,f,c
 22265  01C976  50F4               	movf	244,w,c
 22266  01C978  220C               	addwfc	(btemp+11)^0,f,c
 22267  01C97A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22268  01C980  0060  F033  FFE6   	movff	btemp+11,postinc1
 22269  01C986  0EBE               	movlw	low STR_72
 22270  01C988  6EE6               	movwf	postinc1,c
 22271  01C98A  0EFF               	movlw	high STR_72
 22272  01C98C  6EE6               	movwf	postinc1,c
 22273  01C98E  0E01               	movlw	1
 22274  01C990  6EE6               	movwf	postinc1,c
 22275  01C992  0E01               	movlw	1
 22276  01C994  6EE6               	movwf	postinc1,c
 22277  01C996  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22278  01C99A  0060  F007  FFE6   	movff	btemp,postinc1
 22279  01C9A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22280  01C9A6  0E06               	movlw	6
 22281  01C9A8  6EE6               	movwf	postinc1,c
 22282  01C9AA  EC42  F0F7         	call	_sprintf	;wreg free
 22283                           
 22284                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 22285  01C9AE  0101               	movlb	1	; () banked
 22286  01C9B0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
 22287  01C9B2  32E8               	rrcf	wreg,f,c
 22288  01C9B4  32E8               	rrcf	wreg,f,c
 22289  01C9B6  0B03               	andlw	3
 22290  01C9B8  0D24               	mullw	36
 22291  01C9BA  0E1F               	movlw	low _T
 22292  01C9BC  6E0B               	movwf	(btemp+10)^0,c
 22293  01C9BE  0EF9               	movlw	high _T
 22294  01C9C0  6E0C               	movwf	(btemp+11)^0,c
 22295  01C9C2  50F3               	movf	243,w,c
 22296  01C9C4  260B               	addwf	(btemp+10)^0,f,c
 22297  01C9C6  50F4               	movf	244,w,c
 22298  01C9C8  220C               	addwfc	(btemp+11)^0,f,c
 22299  01C9CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22300  01C9D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 22301  01C9D6  0EBE               	movlw	low STR_72
 22302  01C9D8  6EE6               	movwf	postinc1,c
 22303  01C9DA  0EFF               	movlw	high STR_72
 22304  01C9DC  6EE6               	movwf	postinc1,c
 22305  01C9DE  0E01               	movlw	1
 22306  01C9E0  6EE6               	movwf	postinc1,c
 22307  01C9E2  0E02               	movlw	2
 22308  01C9E4  6EE6               	movwf	postinc1,c
 22309  01C9E6  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22310  01C9EA  0060  F007  FFE6   	movff	btemp,postinc1
 22311  01C9F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22312  01C9F6  0E06               	movlw	6
 22313  01C9F8  6EE6               	movwf	postinc1,c
 22314  01C9FA  EC42  F0F7         	call	_sprintf	;wreg free
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;mconfig.c: 61:   V.help_id++;
 22318  01C9FE  EE20  F19B         	lfsr	2,_V+155	;volatile
 22319  01CA02  38DF               	swapf	223,w,c
 22320  01CA04  6E0C               	movwf	(btemp+11)^0,c
 22321  01CA06  320C               	rrcf	(btemp+11)^0,f,c
 22322  01CA08  300C               	rrcf	(btemp+11)^0,w,c
 22323  01CA0A  0B03               	andlw	3
 22324  01CA0C  6E0C               	movwf	(btemp+11)^0,c
 22325  01CA0E  2A0C               	incf	(btemp+11)^0,f,c
 22326  01CA10  3A0C               	swapf	(btemp+11)^0,f,c
 22327  01CA12  360C               	rlcf	(btemp+11)^0,f,c
 22328  01CA14  360C               	rlcf	(btemp+11)^0,f,c
 22329  01CA16  50DF               	movf	223,w,c
 22330  01CA18  180C               	xorwf	(btemp+11)^0,w,c
 22331  01CA1A  0B3F               	andlw	-193
 22332  01CA1C  180C               	xorwf	(btemp+11)^0,w,c
 22333  01CA1E  6EDF               	movwf	223,c
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 22337  01CA20  0EB8               	movlw	184
 22338  01CA22  6EE6               	movwf	postinc1,c
 22339  01CA24  0E0B               	movlw	11
 22340  01CA26  6EE6               	movwf	postinc1,c
 22341  01CA28  0E09               	movlw	9
 22342  01CA2A  6EE6               	movwf	postinc1,c
 22343  01CA2C  ECBA  F009         	call	_StartTimer	;wreg free
 22344                           
 22345                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 22346  01CA30  0EB8               	movlw	184
 22347  01CA32  6EE6               	movwf	postinc1,c
 22348  01CA34  0E0B               	movlw	11
 22349  01CA36  6EE6               	movwf	postinc1,c
 22350  01CA38  0E07               	movlw	7
 22351  01CA3A  6EE6               	movwf	postinc1,c
 22352  01CA3C  ECBA  F009         	call	_StartTimer	;wreg free
 22353                           
 22354                           ;mconfig.c: 64:   mode_lamp_bright();
 22355  01CA40  EC0B  F00F         	call	_mode_lamp_bright	;wreg free
 22356                           
 22357                           ;mconfig.c: 65:   update_lcd(1);
 22358  01CA44  0E01               	movlw	1
 22359  01CA46  6EE6               	movwf	postinc1,c
 22360  01CA48  ECBA  F0F6         	call	_update_lcd	;wreg free
 22361                           
 22362                           ;mconfig.c: 67:  } else {
 22363  01CA4C  D032               	goto	l1822
 22364  01CA4E                     l16939:
 22365                           
 22366                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 22367  01CA4E  0E09               	movlw	9
 22368  01CA50  6EE6               	movwf	postinc1,c
 22369  01CA52  EC2B  F00C         	call	_TimerDone	;wreg free
 22370  01CA56  5001               	movf	btemp^0,w,c
 22371  01CA58  B4D8               	btfsc	status,2,c
 22372  01CA5A  D02B               	goto	l1822
 22373                           
 22374                           ;mconfig.c: 69:    set_vterm(0);
 22375  01CA5C  0E00               	movlw	0
 22376  01CA5E  6EE6               	movwf	postinc1,c
 22377  01CA60  EC42  F00E         	call	_set_vterm	;wreg free
 22378                           
 22379                           ;mconfig.c: 70:    V.help = 0;
 22380  01CA64  0101               	movlb	1	; () banked
 22381  01CA66  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
 22382                           
 22383                           ; BSR set to: 1
 22384                           ;mconfig.c: 71:    set_display_info(display_help());
 22385  01CA68  EC51  F00F         	call	_display_help	;wreg free
 22386  01CA6C  5001               	movf	btemp^0,w,c
 22387  01CA6E  6EE6               	movwf	postinc1,c
 22388  01CA70  EC51  F00E         	call	_set_display_info	;wreg free
 22389                           
 22390                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 22391  01CA74  0060  F657  FFE6   	movff	_V+149,postinc1
 22392  01CA7A  0060  F65B  FFE6   	movff	_V+150,postinc1
 22393  01CA80  EC87  F00E         	call	_mode_lamp_dim	;wreg free
 22394                           
 22395                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 22396  01CA84  0E0B               	movlw	11
 22397  01CA86  6EE6               	movwf	postinc1,c
 22398  01CA88  EC2B  F00C         	call	_TimerDone	;wreg free
 22399  01CA8C  5001               	movf	btemp^0,w,c
 22400  01CA8E  B4D8               	btfsc	status,2,c
 22401  01CA90  D010               	goto	l1822
 22402                           
 22403                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 22404  01CA92  0101               	movlb	1	; () banked
 22405  01CA94  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 22406  01CA96  A4D8               	btfss	status,2,c
 22407  01CA98  D002               	goto	u16620
 22408  01CA9A  0E01               	movlw	1
 22409  01CA9C  D001               	goto	u16630
 22410  01CA9E                     u16620:
 22411  01CA9E  0E00               	movlw	0
 22412  01CAA0                     u16630:
 22413  01CAA0  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
 22414                           
 22415                           ; BSR set to: 1
 22416                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 22417  01CAA2  0EDC               	movlw	220
 22418  01CAA4  6EE6               	movwf	postinc1,c
 22419  01CAA6  0E05               	movlw	5
 22420  01CAA8  6EE6               	movwf	postinc1,c
 22421  01CAAA  0E0B               	movlw	11
 22422  01CAAC  6EE6               	movwf	postinc1,c
 22423  01CAAE  ECBA  F009         	call	_StartTimer	;wreg free
 22424  01CAB2                     l1822:
 22425                           
 22426                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22427  01CAB2  52E5               	movf	postdec1,f,c
 22428  01CAB4  0012               	return		;funcret
 22429  01CAB6                     __end_of_check_help:
 22430                           	opt callstack 0
 22431                           
 22432 ;; *************** function _vterm_dump *****************
 22433 ;; Defined at:
 22434 ;;		line 121 in file "mconfig.c"
 22435 ;; Parameters:    Size  Location     Type
 22436 ;;		None
 22437 ;; Auto vars:     Size  Location     Type
 22438 ;;		None
 22439 ;; Return value:  Size  Location     Type
 22440 ;;                  1  [STACK] void 
 22441 ;; Registers used:
 22442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22443 ;; Tracked objects:
 22444 ;;		On entry : 3F/1
 22445 ;;		On exit  : 0/0
 22446 ;;		Unchanged: 0/0
 22447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22452 ;;Total ram usage:        0 bytes
 22453 ;; Hardware stack levels used:    1
 22454 ;; Hardware stack levels required when called:   27
 22455 ;; This function calls:
 22456 ;;		_WaitMs
 22457 ;;		_eaDogM_WriteStringAtPos
 22458 ;;		_get_vterm_ptr
 22459 ;;		_sprintf
 22460 ;;		_wait_lcd_done
 22461 ;; This function is called by:
 22462 ;;		_check_help
 22463 ;; This function uses a reentrant model
 22464 ;;
 22465                           
 22466                           	psect	text73
 22467  01E6C4                     __ptext73:
 22468                           	opt callstack 0
 22469  01E6C4                     _vterm_dump:
 22470                           	opt callstack 2
 22471                           
 22472                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 22473                           
 22474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22475                           ;incstack = 0
 22476  01E6C4  0E01               	movlw	1
 22477  01E6C6  6EE6               	movwf	postinc1,c
 22478  01E6C8  0E00               	movlw	0
 22479  01E6CA  6EE6               	movwf	postinc1,c
 22480  01E6CC  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22481  01E6D0  0060  F007  FFE6   	movff	btemp,postinc1
 22482  01E6D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22483  01E6DC  0E00               	movlw	0
 22484  01E6DE  6EE6               	movwf	postinc1,c
 22485  01E6E0  0E00               	movlw	0
 22486  01E6E2  6EE6               	movwf	postinc1,c
 22487  01E6E4  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22488  01E6E8  0060  F007  FFE6   	movff	btemp,postinc1
 22489  01E6EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22490  01E6F4  0EA3               	movlw	low STR_74
 22491  01E6F6  6EE6               	movwf	postinc1,c
 22492  01E6F8  0EFF               	movlw	high STR_74
 22493  01E6FA  6EE6               	movwf	postinc1,c
 22494  01E6FC  0E01               	movlw	low (_V+1)
 22495  01E6FE  6EE6               	movwf	postinc1,c
 22496  01E700  0E01               	movlw	high (_V+1)
 22497  01E702  6EE6               	movwf	postinc1,c
 22498  01E704  0E08               	movlw	8
 22499  01E706  6EE6               	movwf	postinc1,c
 22500  01E708  EC42  F0F7         	call	_sprintf	;wreg free
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;mconfig.c: 124:  wait_lcd_done();
 22504  01E70C  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 22508  01E710  0E01               	movlw	low (_V+1)
 22509  01E712  6EE6               	movwf	postinc1,c
 22510  01E714  0E01               	movlw	high (_V+1)
 22511  01E716  6EE6               	movwf	postinc1,c
 22512  01E718  0E00               	movlw	0
 22513  01E71A  6EE6               	movwf	postinc1,c
 22514  01E71C  0E00               	movlw	0
 22515  01E71E  6EE6               	movwf	postinc1,c
 22516  01E720  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 22517                           
 22518                           ; BSR set to: 59
 22519                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 22520  01E724  0E01               	movlw	1
 22521  01E726  6EE6               	movwf	postinc1,c
 22522  01E728  0E01               	movlw	1
 22523  01E72A  6EE6               	movwf	postinc1,c
 22524  01E72C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22525  01E730  0060  F007  FFE6   	movff	btemp,postinc1
 22526  01E736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22527  01E73C  0E00               	movlw	0
 22528  01E73E  6EE6               	movwf	postinc1,c
 22529  01E740  0E01               	movlw	1
 22530  01E742  6EE6               	movwf	postinc1,c
 22531  01E744  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22532  01E748  0060  F007  FFE6   	movff	btemp,postinc1
 22533  01E74E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22534  01E754  0EA3               	movlw	low STR_74
 22535  01E756  6EE6               	movwf	postinc1,c
 22536  01E758  0EFF               	movlw	high STR_74
 22537  01E75A  6EE6               	movwf	postinc1,c
 22538  01E75C  0E01               	movlw	low (_V+1)
 22539  01E75E  6EE6               	movwf	postinc1,c
 22540  01E760  0E01               	movlw	high (_V+1)
 22541  01E762  6EE6               	movwf	postinc1,c
 22542  01E764  0E08               	movlw	8
 22543  01E766  6EE6               	movwf	postinc1,c
 22544  01E768  EC42  F0F7         	call	_sprintf	;wreg free
 22545                           
 22546                           ; BSR set to: 0
 22547                           ;mconfig.c: 127:  wait_lcd_done();
 22548  01E76C  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 22549                           
 22550                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 22551  01E770  0E01               	movlw	low (_V+1)
 22552  01E772  6EE6               	movwf	postinc1,c
 22553  01E774  0E01               	movlw	high (_V+1)
 22554  01E776  6EE6               	movwf	postinc1,c
 22555  01E778  0E00               	movlw	0
 22556  01E77A  6EE6               	movwf	postinc1,c
 22557  01E77C  0E01               	movlw	1
 22558  01E77E  6EE6               	movwf	postinc1,c
 22559  01E780  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 22560                           
 22561                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 22562  01E784  0E01               	movlw	1
 22563  01E786  6EE6               	movwf	postinc1,c
 22564  01E788  0E02               	movlw	2
 22565  01E78A  6EE6               	movwf	postinc1,c
 22566  01E78C  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22567  01E790  0060  F007  FFE6   	movff	btemp,postinc1
 22568  01E796  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22569  01E79C  0E00               	movlw	0
 22570  01E79E  6EE6               	movwf	postinc1,c
 22571  01E7A0  0E02               	movlw	2
 22572  01E7A2  6EE6               	movwf	postinc1,c
 22573  01E7A4  ECA8  F00B         	call	_get_vterm_ptr	;wreg free
 22574  01E7A8  0060  F007  FFE6   	movff	btemp,postinc1
 22575  01E7AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22576  01E7B4  0EA3               	movlw	low STR_74
 22577  01E7B6  6EE6               	movwf	postinc1,c
 22578  01E7B8  0EFF               	movlw	high STR_74
 22579  01E7BA  6EE6               	movwf	postinc1,c
 22580  01E7BC  0E01               	movlw	low (_V+1)
 22581  01E7BE  6EE6               	movwf	postinc1,c
 22582  01E7C0  0E01               	movlw	high (_V+1)
 22583  01E7C2  6EE6               	movwf	postinc1,c
 22584  01E7C4  0E08               	movlw	8
 22585  01E7C6  6EE6               	movwf	postinc1,c
 22586  01E7C8  EC42  F0F7         	call	_sprintf	;wreg free
 22587                           
 22588                           ; BSR set to: 0
 22589                           ;mconfig.c: 130:  wait_lcd_done();
 22590  01E7CC  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 22594  01E7D0  0E01               	movlw	low (_V+1)
 22595  01E7D2  6EE6               	movwf	postinc1,c
 22596  01E7D4  0E01               	movlw	high (_V+1)
 22597  01E7D6  6EE6               	movwf	postinc1,c
 22598  01E7D8  0E00               	movlw	0
 22599  01E7DA  6EE6               	movwf	postinc1,c
 22600  01E7DC  0E02               	movlw	2
 22601  01E7DE  6EE6               	movwf	postinc1,c
 22602  01E7E0  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 22603                           
 22604                           ; BSR set to: 59
 22605                           ;mconfig.c: 132:  WaitMs(3000);
 22606  01E7E4  0EB8               	movlw	184
 22607  01E7E6  6EE6               	movwf	postinc1,c
 22608  01E7E8  0E0B               	movlw	11
 22609  01E7EA  6EE6               	movwf	postinc1,c
 22610  01E7EC  ECAC  F00A         	call	_WaitMs	;wreg free
 22611                           
 22612                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22613  01E7F0  0012               	return		;funcret
 22614  01E7F2                     __end_of_vterm_dump:
 22615                           	opt callstack 0
 22616                           
 22617 ;; *************** function _sprintf *****************
 22618 ;; Defined at:
 22619 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 22620 ;; Parameters:    Size  Location     Type
 22621 ;;  s               2  [STACK] PTR unsigned char 
 22622 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 22623 ;;  fmt             2  [STACK] PTR const unsigned char 
 22624 ;;		 -> STR_87(127), STR_85(3), STR_84(3), STR_83(19), 
 22625 ;;		 -> STR_82(19), STR_81(19), STR_80(19), STR_79(19), 
 22626 ;;		 -> STR_78(19), STR_77(24), STR_76(15), STR_75(15), 
 22627 ;;		 -> STR_74(15), STR_73(10), STR_72(10), STR_71(19), 
 22628 ;;		 -> STR_70(19), STR_65(14), STR_64(21), STR_63(21), 
 22629 ;;		 -> STR_62(21), STR_61(21), STR_60(21), STR_59(21), 
 22630 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 22631 ;;		 -> STR_54(21), STR_53(21), STR_52(20), STR_51(21), 
 22632 ;;		 -> STR_50(21), STR_49(21), STR_48(22), STR_47(22), 
 22633 ;;		 -> STR_46(22), STR_45(23), STR_44(23), STR_43(23), 
 22634 ;;		 -> STR_42(29), STR_41(23), STR_40(23), STR_39(22), 
 22635 ;;		 -> STR_38(22), STR_37(22), STR_36(22), STR_35(22), 
 22636 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 22637 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(17), 
 22638 ;;		 -> STR_26(16), STR_25(16), STR_24(21), STR_23(21), 
 22639 ;;		 -> STR_22(21), STR_21(26), STR_20(26), STR_19(22), 
 22640 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 22641 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 22642 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 22643 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 22644 ;;		 -> STR_1(21), 
 22645 ;; Auto vars:     Size  Location     Type
 22646 ;;  f               6  [STACK] struct _IO_FILE
 22647 ;;  ap              2  [STACK] PTR void [1]
 22648 ;;		 -> ?_printf(2), ?_sprintf(2), 
 22649 ;;  ret             2    0        int 
 22650 ;; Return value:  Size  Location     Type
 22651 ;;                  2  [STACK] int 
 22652 ;; Registers used:
 22653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22654 ;; Tracked objects:
 22655 ;;		On entry : 0/2
 22656 ;;		On exit  : 3F/0
 22657 ;;		Unchanged: 0/0
 22658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22663 ;;Total ram usage:        0 bytes
 22664 ;; Hardware stack levels used:    1
 22665 ;; Hardware stack levels required when called:   23
 22666 ;; This function calls:
 22667 ;;		_vfprintf
 22668 ;; This function is called by:
 22669 ;;		_main
 22670 ;;		_current_sensor_cal
 22671 ;;		_display_history
 22672 ;;		_check_help
 22673 ;;		_vterm_dump
 22674 ;;		_calc_bsoc
 22675 ;; This function uses a reentrant model
 22676 ;;
 22677                           
 22678                           	psect	text74
 22679  01EE84                     __ptext74:
 22680                           	opt callstack 0
 22681  01EE84                     _sprintf:
 22682                           	opt callstack 0
 22683                           
 22684                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22685  01EE84  0E08               	movlw	8
 22686  01EE86  26E1               	addwf	fsr1l,f,c
 22687  01EE88  0E00               	movlw	0
 22688  01EE8A  22E2               	addwfc	fsr1h,f,c
 22689                           
 22690                           ;incstack = 0
 22691 ;; hardware stack exceeded
 22692  01EE8C  0EFE               	movlw	254
 22693  01EE8E  6E0B               	movwf	(btemp+10)^0,c
 22694  01EE90  0EFF               	movlw	255
 22695  01EE92  6E0C               	movwf	(btemp+11)^0,c
 22696                           
 22697                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 22698  01EE94  0EF5               	movlw	245
 22699  01EE96  24E1               	addwf	fsr1l,w,c
 22700  01EE98  6E09               	movwf	(btemp+8)^0,c
 22701  01EE9A  0EFF               	movlw	255
 22702  01EE9C  20E2               	addwfc	fsr1h,w,c
 22703  01EE9E  6E0A               	movwf	(btemp+9)^0,c
 22704  01EEA0  500B               	movf	(btemp+10)^0,w,c
 22705  01EEA2  2609               	addwf	(btemp+8)^0,f,c
 22706  01EEA4  500C               	movf	(btemp+11)^0,w,c
 22707  01EEA6  220A               	addwfc	(btemp+9)^0,f,c
 22708                           
 22709                           ;stkvar	_ap @ sp[(-8)+6]
 22710  01EEA8  0EFF               	movlw	-1
 22711  01EEAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22712  01EEB0  0EFE               	movlw	-2
 22713  01EEB2  0060  F027  FFE3   	movff	btemp+8,plusw1
 22714                           
 22715                           ;stkvar	_s @ sp[(-8)+-3]
 22716  01EEB8  0EF5               	movlw	-11
 22717  01EEBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22718  01EEC0  0EF6               	movlw	-10
 22719  01EEC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22720                           
 22721                           ;stkvar	_f @ sp[(-8)+0]
 22722  01EEC8  0EF9               	movlw	-7
 22723  01EECA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22724  01EED0  0EF8               	movlw	-8
 22725  01EED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22726                           
 22727                           ;stkvar	_f @ sp[(-8)+0]
 22728  01EED8  0EFA               	movlw	250
 22729  01EEDA  24E1               	addwf	fsr1l,w,c
 22730  01EEDC  6ED9               	movwf	fsr2l,c
 22731  01EEDE  0EFF               	movlw	255
 22732  01EEE0  20E2               	addwfc	fsr1h,w,c
 22733  01EEE2  6EDA               	movwf	fsr2h,c
 22734  01EEE4  0E00               	movlw	0
 22735  01EEE6  6EDE               	movwf	postinc2,c
 22736  01EEE8  0E00               	movlw	0
 22737  01EEEA  6EDD               	movwf	postdec2,c
 22738                           
 22739                           ;stkvar	_f @ sp[(-8)+0]
 22740  01EEEC  0EFC               	movlw	252
 22741  01EEEE  24E1               	addwf	fsr1l,w,c
 22742  01EEF0  6ED9               	movwf	fsr2l,c
 22743  01EEF2  0EFF               	movlw	255
 22744  01EEF4  20E2               	addwfc	fsr1h,w,c
 22745  01EEF6  6EDA               	movwf	fsr2h,c
 22746  01EEF8  0E00               	movlw	0
 22747  01EEFA  6EDE               	movwf	postinc2,c
 22748  01EEFC  0E00               	movlw	0
 22749  01EEFE  6EDD               	movwf	postdec2,c
 22750                           
 22751                           ;stkvar	_ap @ sp[(-8)+6]
 22752  01EF00  0EFE               	movlw	254
 22753  01EF02  24E1               	addwf	fsr1l,w,c
 22754  01EF04  6E01               	movwf	btemp^0,c
 22755  01EF06  0EFF               	movlw	255
 22756  01EF08  20E2               	addwfc	fsr1h,w,c
 22757  01EF0A  6E02               	movwf	(btemp+1)^0,c
 22758  01EF0C  0060  F007  FFE6   	movff	btemp,postinc1
 22759  01EF12  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22760                           
 22761                           ;stkvar	_fmt @ sp[(-10)+-5]
 22762  01EF18  0EF1               	movlw	-15
 22763  01EF1A  006F FF8F FFE6     	movff	plusw1,postinc1
 22764  01EF20  006F FF8F FFE6     	movff	plusw1,postinc1
 22765                           
 22766                           ;stkvar	_f @ sp[(-12)+0]
 22767  01EF26  0EF4               	movlw	244
 22768  01EF28  24E1               	addwf	fsr1l,w,c
 22769  01EF2A  6E01               	movwf	btemp^0,c
 22770  01EF2C  0EFF               	movlw	255
 22771  01EF2E  20E2               	addwfc	fsr1h,w,c
 22772  01EF30  6E02               	movwf	(btemp+1)^0,c
 22773  01EF32  0060  F007  FFE6   	movff	btemp,postinc1
 22774  01EF38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22775  01EF3E  ECCE  F0FE         	call	_vfprintf	;wreg free
 22776                           
 22777                           ; BSR set to: 0
 22778                           ;stkvar	_f @ sp[(-8)+0]
 22779  01EF42  0EFA               	movlw	250
 22780  01EF44  24E1               	addwf	fsr1l,w,c
 22781  01EF46  6ED9               	movwf	fsr2l,c
 22782  01EF48  0EFF               	movlw	255
 22783  01EF4A  20E2               	addwfc	fsr1h,w,c
 22784  01EF4C  6EDA               	movwf	fsr2h,c
 22785  01EF4E  006F FF78  F00B    	movff	postinc2,btemp+10
 22786  01EF54  006F FF74  F00C    	movff	postdec2,btemp+11
 22787                           
 22788                           ;stkvar	_s @ sp[(-8)+-3]
 22789  01EF5A  0EF5               	movlw	-11
 22790  01EF5C  006F FF8C  F009    	movff	plusw1,btemp+8
 22791  01EF62  0EF6               	movlw	-10
 22792  01EF64  006F FF8C  F00A    	movff	plusw1,btemp+9
 22793  01EF6A  500B               	movf	(btemp+10)^0,w,c
 22794  01EF6C  2409               	addwf	(btemp+8)^0,w,c
 22795  01EF6E  6ED9               	movwf	fsr2l,c
 22796  01EF70  500C               	movf	(btemp+11)^0,w,c
 22797  01EF72  200A               	addwfc	(btemp+9)^0,w,c
 22798  01EF74  6EDA               	movwf	fsr2h,c
 22799  01EF76  0E00               	movlw	0
 22800  01EF78  6EDF               	movwf	indf2,c
 22801                           
 22802                           ; BSR set to: 0
 22803                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 22804  01EF7A  0EF8               	movlw	248
 22805  01EF7C  26E1               	addwf	fsr1l,f,c
 22806  01EF7E  0EFF               	movlw	255
 22807  01EF80  22E2               	addwfc	fsr1h,f,c
 22808  01EF82  52E5               	movf	postdec1,f,c
 22809  01EF84  50E7               	movf	indf1,w,c
 22810  01EF86  5EE1               	subwf	fsr1l,f,c
 22811  01EF88  0E00               	movlw	0
 22812  01EF8A  5AE2               	subwfb	fsr1h,f,c
 22813  01EF8C  0012               	return		;funcret
 22814  01EF8E                     __end_of_sprintf:
 22815                           	opt callstack 0
 22816                           
 22817 ;; *************** function _get_vterm_ptr *****************
 22818 ;; Defined at:
 22819 ;;		line 116 in file "mconfig.c"
 22820 ;; Parameters:    Size  Location     Type
 22821 ;;  line            1  [STACK] const unsigned char 
 22822 ;;  vterm           1  [STACK] const unsigned char 
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;		None
 22825 ;; Return value:  Size  Location     Type
 22826 ;;                  2  [STACK] PTR unsigned char 
 22827 ;; Registers used:
 22828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 22829 ;; Tracked objects:
 22830 ;;		On entry : 0/2
 22831 ;;		On exit  : 0/0
 22832 ;;		Unchanged: 0/0
 22833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22838 ;;Total ram usage:        0 bytes
 22839 ;; Hardware stack levels used:    1
 22840 ;; Hardware stack levels required when called:   15
 22841 ;; This function calls:
 22842 ;;		Nothing
 22843 ;; This function is called by:
 22844 ;;		_main
 22845 ;;		_current_sensor_cal
 22846 ;;		_display_history
 22847 ;;		_check_help
 22848 ;;		_vterm_dump
 22849 ;; This function uses a reentrant model
 22850 ;;
 22851                           
 22852                           	psect	text75
 22853  001750                     __ptext75:
 22854                           	opt callstack 0
 22855  001750                     _get_vterm_ptr:
 22856                           	opt callstack 15
 22857                           
 22858                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 22859                           ;stkvar	_vterm @ sp[(0)+-2]
 22860                           
 22861                           ; BSR set to: 0
 22862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22863                           ;incstack = 0
 22864  001750  0EFE               	movlw	-2
 22865  001752  50E3               	movf	plusw1,w,c
 22866  001754  0B03               	andlw	3
 22867  001756  0D78               	mullw	120
 22868  001758  0E4F               	movlw	low _D
 22869  00175A  6E01               	movwf	btemp^0,c
 22870  00175C  0E0A               	movlw	high _D
 22871  00175E  6E02               	movwf	(btemp+1)^0,c
 22872  001760  50F3               	movf	243,w,c
 22873  001762  2601               	addwf	btemp^0,f,c
 22874  001764  50F4               	movf	244,w,c
 22875  001766  2202               	addwfc	(btemp+1)^0,f,c
 22876                           
 22877                           ;stkvar	_line @ sp[(0)+-1]
 22878  001768  0EFF               	movlw	-1
 22879  00176A  50E3               	movf	plusw1,w,c
 22880  00176C  0B03               	andlw	3
 22881  00176E  0D28               	mullw	40
 22882  001770  50F3               	movf	243,w,c
 22883  001772  2601               	addwf	btemp^0,f,c
 22884  001774  50F4               	movf	244,w,c
 22885  001776  2202               	addwfc	(btemp+1)^0,f,c
 22886                           
 22887                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22888  001778  52E5               	movf	postdec1,f,c
 22889  00177A  52E5               	movf	postdec1,f,c
 22890  00177C  0012               	return		;funcret
 22891  00177E                     __end_of_get_vterm_ptr:
 22892                           	opt callstack 0
 22893                           
 22894 ;; *************** function _WaitMs *****************
 22895 ;; Defined at:
 22896 ;;		line 32 in file "timers.c"
 22897 ;; Parameters:    Size  Location     Type
 22898 ;;  numMilliseco    2  [STACK] const unsigned short 
 22899 ;; Auto vars:     Size  Location     Type
 22900 ;;		None
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1  [STACK] void 
 22903 ;; Registers used:
 22904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/1
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22914 ;;Total ram usage:        0 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:   16
 22917 ;; This function calls:
 22918 ;;		_StartTimer
 22919 ;;		_TimerDone
 22920 ;; This function is called by:
 22921 ;;		_main
 22922 ;;		_current_sensor_cal
 22923 ;;		_display_history
 22924 ;;		_vterm_dump
 22925 ;; This function uses a reentrant model
 22926 ;;
 22927                           
 22928                           	psect	text76
 22929  001558                     __ptext76:
 22930                           	opt callstack 0
 22931  001558                     _WaitMs:
 22932                           	opt callstack 13
 22933                           
 22934                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 22935                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 22936                           
 22937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22938                           ;incstack = 0
 22939  001558  0EFE               	movlw	-2
 22940  00155A  006F FF8F FFE6     	movff	plusw1,postinc1
 22941  001560  006F FF8F FFE6     	movff	plusw1,postinc1
 22942  001566  0E00               	movlw	0
 22943  001568  6EE6               	movwf	postinc1,c
 22944  00156A  ECBA  F009         	call	_StartTimer	;wreg free
 22945                           
 22946                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 22947  00156E  D005               	goto	l12693
 22948  001570                     l1753:
 22949                           
 22950                           ;timers.c: 36:   __nop();
 22951  001570  F000               	nop	
 22952                           
 22953                           ;timers.c: 37:   __nop();
 22954  001572  F000               	nop	
 22955                           
 22956                           ;timers.c: 38:   __nop();
 22957  001574  F000               	nop	
 22958                           
 22959                           ;timers.c: 39:   __nop();
 22960  001576  F000               	nop	
 22961  001578  0004               	clrwdt		;# 
 22962  00157A                     l12693:
 22963                           
 22964                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 22965  00157A  0E00               	movlw	0
 22966  00157C  6EE6               	movwf	postinc1,c
 22967  00157E  EC2B  F00C         	call	_TimerDone	;wreg free
 22968  001582  5001               	movf	btemp^0,w,c
 22969  001584  B4D8               	btfsc	status,2,c
 22970  001586  D7F4               	goto	l1753
 22971                           
 22972                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22973  001588  52E5               	movf	postdec1,f,c
 22974  00158A  52E5               	movf	postdec1,f,c
 22975  00158C  0012               	return		;funcret
 22976  00158E                     __end_of_WaitMs:
 22977                           	opt callstack 0
 22978                           
 22979 ;; *************** function _update_lcd *****************
 22980 ;; Defined at:
 22981 ;;		line 85 in file "mconfig.c"
 22982 ;; Parameters:    Size  Location     Type
 22983 ;;  vterm           1  [STACK] unsigned char 
 22984 ;; Auto vars:     Size  Location     Type
 22985 ;;		None
 22986 ;; Return value:  Size  Location     Type
 22987 ;;                  1  [STACK] unsigned char 
 22988 ;; Registers used:
 22989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22990 ;; Tracked objects:
 22991 ;;		On entry : 0/0
 22992 ;;		On exit  : 0/0
 22993 ;;		Unchanged: 0/0
 22994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;Total ram usage:        0 bytes
 23000 ;; Hardware stack levels used:    1
 23001 ;; Hardware stack levels required when called:   27
 23002 ;; This function calls:
 23003 ;;		_eaDogM_WriteStringAtPos
 23004 ;;		_wait_lcd_done
 23005 ;; This function is called by:
 23006 ;;		_main
 23007 ;;		_current_sensor_cal
 23008 ;;		_display_history
 23009 ;;		_check_help
 23010 ;; This function uses a reentrant model
 23011 ;;
 23012                           
 23013                           	psect	text77
 23014  01ED74                     __ptext77:
 23015                           	opt callstack 0
 23016  01ED74                     _update_lcd:
 23017                           	opt callstack 3
 23018                           
 23019                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23020                           ;stkvar	_vterm @ sp[(0)+-1]
 23021                           
 23022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23023                           ;incstack = 0
 23024  01ED74  0EFF               	movlw	-1
 23025  01ED76  006F FF8C  F001    	movff	plusw1,btemp
 23026  01ED7C  0E03               	movlw	3
 23027  01ED7E  1601               	andwf	btemp^0,f,c
 23028  01ED80  0EFF               	movlw	-1
 23029  01ED82  0060  F007  FFE3   	movff	btemp,plusw1
 23030                           
 23031                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23032  01ED88  EE23  F02F         	lfsr	2,_D+480
 23033  01ED8C  A0DF               	btfss	indf2,0,c
 23034  01ED8E  D004               	goto	l16485
 23035                           
 23036                           ;stkvar	_vterm @ sp[(0)+-1]
 23037  01ED90  0EFF               	movlw	-1
 23038  01ED92  50E3               	movf	plusw1,w,c
 23039  01ED94  B4D8               	btfsc	status,2,c
 23040  01ED96  D074               	goto	l1829
 23041  01ED98                     l16485:
 23042                           
 23043                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 23044                           ;stkvar	_vterm @ sp[(0)+-1]
 23045  01ED98  0EFF               	movlw	-1
 23046  01ED9A  50E3               	movf	plusw1,w,c
 23047  01ED9C  0D78               	mullw	120
 23048  01ED9E  0E63               	movlw	low (_D+20)
 23049  01EDA0  24F3               	addwf	243,w,c
 23050  01EDA2  6ED9               	movwf	fsr2l,c
 23051  01EDA4  0E0A               	movlw	high (_D+20)
 23052  01EDA6  20F4               	addwfc	prodh,w,c
 23053  01EDA8  6EDA               	movwf	fsr2h,c
 23054  01EDAA  0E00               	movlw	0
 23055  01EDAC  6EDF               	movwf	indf2,c
 23056                           
 23057                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 23058                           ;stkvar	_vterm @ sp[(0)+-1]
 23059  01EDAE  0EFF               	movlw	-1
 23060  01EDB0  50E3               	movf	plusw1,w,c
 23061  01EDB2  0D78               	mullw	120
 23062  01EDB4  0E8B               	movlw	low (_D+60)
 23063  01EDB6  24F3               	addwf	243,w,c
 23064  01EDB8  6ED9               	movwf	fsr2l,c
 23065  01EDBA  0E0A               	movlw	high (_D+60)
 23066  01EDBC  20F4               	addwfc	prodh,w,c
 23067  01EDBE  6EDA               	movwf	fsr2h,c
 23068  01EDC0  0E00               	movlw	0
 23069  01EDC2  6EDF               	movwf	indf2,c
 23070                           
 23071                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 23072                           ;stkvar	_vterm @ sp[(0)+-1]
 23073  01EDC4  0EFF               	movlw	-1
 23074  01EDC6  50E3               	movf	plusw1,w,c
 23075  01EDC8  0D78               	mullw	120
 23076  01EDCA  0EB3               	movlw	low (_D+100)
 23077  01EDCC  24F3               	addwf	243,w,c
 23078  01EDCE  6ED9               	movwf	fsr2l,c
 23079  01EDD0  0E0A               	movlw	high (_D+100)
 23080  01EDD2  20F4               	addwfc	prodh,w,c
 23081  01EDD4  6EDA               	movwf	fsr2h,c
 23082  01EDD6  0E00               	movlw	0
 23083  01EDD8  6EDF               	movwf	indf2,c
 23084                           
 23085                           ;mconfig.c: 95:  wait_lcd_done();
 23086  01EDDA  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 23090                           ;stkvar	_vterm @ sp[(0)+-1]
 23091  01EDDE  0EFF               	movlw	-1
 23092  01EDE0  50E3               	movf	plusw1,w,c
 23093  01EDE2  0D78               	mullw	120
 23094  01EDE4  0E4F               	movlw	low _D
 23095  01EDE6  6E0B               	movwf	(btemp+10)^0,c
 23096  01EDE8  0E0A               	movlw	high _D
 23097  01EDEA  6E0C               	movwf	(btemp+11)^0,c
 23098  01EDEC  50F3               	movf	243,w,c
 23099  01EDEE  260B               	addwf	(btemp+10)^0,f,c
 23100  01EDF0  50F4               	movf	244,w,c
 23101  01EDF2  220C               	addwfc	(btemp+11)^0,f,c
 23102  01EDF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23103  01EDFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 23104  01EE00  0E00               	movlw	0
 23105  01EE02  6EE6               	movwf	postinc1,c
 23106  01EE04  0E00               	movlw	0
 23107  01EE06  6EE6               	movwf	postinc1,c
 23108  01EE08  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 23109                           
 23110                           ; BSR set to: 59
 23111                           ;mconfig.c: 97:  wait_lcd_done();
 23112  01EE0C  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 23116                           ;stkvar	_vterm @ sp[(0)+-1]
 23117  01EE10  0EFF               	movlw	-1
 23118  01EE12  50E3               	movf	plusw1,w,c
 23119  01EE14  0D78               	mullw	120
 23120  01EE16  0E4F               	movlw	low _D
 23121  01EE18  6E0B               	movwf	(btemp+10)^0,c
 23122  01EE1A  0E0A               	movlw	high _D
 23123  01EE1C  6E0C               	movwf	(btemp+11)^0,c
 23124  01EE1E  0E28               	movlw	40
 23125  01EE20  260B               	addwf	(btemp+10)^0,f,c
 23126  01EE22  0E00               	movlw	0
 23127  01EE24  220C               	addwfc	(btemp+11)^0,f,c
 23128  01EE26  50F3               	movf	243,w,c
 23129  01EE28  260B               	addwf	(btemp+10)^0,f,c
 23130  01EE2A  50F4               	movf	244,w,c
 23131  01EE2C  220C               	addwfc	(btemp+11)^0,f,c
 23132  01EE2E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23133  01EE34  0060  F033  FFE6   	movff	btemp+11,postinc1
 23134  01EE3A  0E00               	movlw	0
 23135  01EE3C  6EE6               	movwf	postinc1,c
 23136  01EE3E  0E01               	movlw	1
 23137  01EE40  6EE6               	movwf	postinc1,c
 23138  01EE42  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 23139                           
 23140                           ; BSR set to: 59
 23141                           ;mconfig.c: 99:  wait_lcd_done();
 23142  01EE46  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 23146                           ;stkvar	_vterm @ sp[(0)+-1]
 23147  01EE4A  0EFF               	movlw	-1
 23148  01EE4C  50E3               	movf	plusw1,w,c
 23149  01EE4E  0D78               	mullw	120
 23150  01EE50  0E4F               	movlw	low _D
 23151  01EE52  6E0B               	movwf	(btemp+10)^0,c
 23152  01EE54  0E0A               	movlw	high _D
 23153  01EE56  6E0C               	movwf	(btemp+11)^0,c
 23154  01EE58  0E50               	movlw	80
 23155  01EE5A  260B               	addwf	(btemp+10)^0,f,c
 23156  01EE5C  0E00               	movlw	0
 23157  01EE5E  220C               	addwfc	(btemp+11)^0,f,c
 23158  01EE60  50F3               	movf	243,w,c
 23159  01EE62  260B               	addwf	(btemp+10)^0,f,c
 23160  01EE64  50F4               	movf	244,w,c
 23161  01EE66  220C               	addwfc	(btemp+11)^0,f,c
 23162  01EE68  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23163  01EE6E  0060  F033  FFE6   	movff	btemp+11,postinc1
 23164  01EE74  0E00               	movlw	0
 23165  01EE76  6EE6               	movwf	postinc1,c
 23166  01EE78  0E02               	movlw	2
 23167  01EE7A  6EE6               	movwf	postinc1,c
 23168  01EE7C  EC79  F0FF         	call	_eaDogM_WriteStringAtPos	;wreg free
 23169  01EE80                     l1829:
 23170                           
 23171                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23172  01EE80  52E5               	movf	postdec1,f,c
 23173  01EE82  0012               	return		;funcret
 23174  01EE84                     __end_of_update_lcd:
 23175                           	opt callstack 0
 23176                           
 23177 ;; *************** function _eaDogM_WriteStringAtPos *****************
 23178 ;; Defined at:
 23179 ;;		line 195 in file "eadog.c"
 23180 ;; Parameters:    Size  Location     Type
 23181 ;;  r               1  [STACK] const unsigned char 
 23182 ;;  c               1  [STACK] const unsigned char 
 23183 ;;  strPtr          2  [STACK] PTR unsigned char 
 23184 ;;		 -> D.lcd(480), D(482), V(192), 
 23185 ;; Auto vars:     Size  Location     Type
 23186 ;;  row             1  [STACK] unsigned char 
 23187 ;; Return value:  Size  Location     Type
 23188 ;;                  1  [STACK] void 
 23189 ;; Registers used:
 23190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23191 ;; Tracked objects:
 23192 ;;		On entry : 3F/0
 23193 ;;		On exit  : 3F/3B
 23194 ;;		Unchanged: 0/0
 23195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;Total ram usage:        0 bytes
 23201 ;; Hardware stack levels used:    1
 23202 ;; Hardware stack levels required when called:   26
 23203 ;; This function calls:
 23204 ;;		_eaDogM_WriteString
 23205 ;;		_send_lcd_cmd_dma
 23206 ;;		_send_lcd_data_dma
 23207 ;;		_wait_lcd_done
 23208 ;;		_wdtdelay
 23209 ;; This function is called by:
 23210 ;;		_update_lcd
 23211 ;;		_vterm_dump
 23212 ;; This function uses a reentrant model
 23213 ;;
 23214                           
 23215                           	psect	text78
 23216  01FEF2                     __ptext78:
 23217                           	opt callstack 0
 23218  01FEF2                     _eaDogM_WriteStringAtPos:
 23219                           	opt callstack 0
 23220                           
 23221                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23222  01FEF2  52E6               	movf	postinc1,f,c
 23223                           
 23224                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 23225                           
 23226                           ;incstack = 0
 23227  01FEF4  D014               	goto	l16431
 23228  01FEF6                     l16419:
 23229                           
 23230                           ;eadog.c: 201:   row = 0x40;
 23231                           ;stkvar	_row @ sp[(-1)+0]
 23232  01FEF6  0EFF               	movlw	-1
 23233  01FEF8  6AE3               	clrf	plusw1,c
 23234  01FEFA  8CE3               	bsf	plusw1,6,c
 23235                           
 23236                           ;eadog.c: 202:   break;
 23237  01FEFC  D026               	goto	l16433
 23238  01FEFE                     l16421:
 23239                           
 23240                           ;eadog.c: 204:   row = 0x14;
 23241                           ;stkvar	_row @ sp[(-1)+0]
 23242  01FEFE  0EFF               	movlw	-1
 23243  01FF00  6AE3               	clrf	plusw1,c
 23244  01FF02  84E3               	bsf	plusw1,2,c
 23245  01FF04  88E3               	bsf	plusw1,4,c	;indir
 23246                           
 23247                           ;eadog.c: 205:   break;
 23248  01FF06  D021               	goto	l16433
 23249  01FF08                     l16423:
 23250                           
 23251                           ;eadog.c: 207:   row = 0x54;
 23252  01FF08  0E54               	movlw	84
 23253  01FF0A  6E0C               	movwf	(btemp+11)^0,c
 23254                           
 23255                           ;stkvar	_row @ sp[(-1)+0]
 23256  01FF0C  0EFF               	movlw	-1
 23257  01FF0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23258                           
 23259                           ;eadog.c: 208:   break;
 23260  01FF14  D01A               	goto	l16433
 23261  01FF16                     l16425:
 23262                           
 23263                           ;eadog.c: 210:   row = 0x1;
 23264                           ;stkvar	_row @ sp[(-1)+0]
 23265  01FF16  0EFF               	movlw	-1
 23266  01FF18  6AE3               	clrf	plusw1,c
 23267  01FF1A  2AE3               	incf	plusw1,f,c
 23268                           
 23269                           ;eadog.c: 211:   break;
 23270  01FF1C  D016               	goto	l16433
 23271  01FF1E                     l16431:
 23272                           
 23273                           ;stkvar	_r @ sp[(-1)+-1]
 23274  01FF1E  0EFE               	movlw	-2
 23275  01FF20  50E3               	movf	plusw1,w,c
 23276  01FF22  6E0B               	movwf	(btemp+10)^0,c
 23277  01FF24  6A0C               	clrf	(btemp+11)^0,c
 23278                           
 23279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23280                           ; Switch size 1, requested type "simple"
 23281                           ; Number of cases is 1, Range of values is 0 to 0
 23282                           ; switch strategies available:
 23283                           ; Name         Instructions Cycles
 23284                           ; simple_byte            4     3 (average)
 23285                           ;	Chosen strategy is simple_byte
 23286  01FF26  500C               	movf	(btemp+11)^0,w,c
 23287  01FF28  0A00               	xorlw	0	; case 0
 23288  01FF2A  A4D8               	btfss	status,2,c
 23289  01FF2C  D7E4               	goto	l16419
 23290                           
 23291                           ; Switch size 1, requested type "simple"
 23292                           ; Number of cases is 4, Range of values is 0 to 3
 23293                           ; switch strategies available:
 23294                           ; Name         Instructions Cycles
 23295                           ; simple_byte           13     7 (average)
 23296                           ;	Chosen strategy is simple_byte
 23297  01FF2E  500B               	movf	(btemp+10)^0,w,c
 23298  01FF30  0A00               	xorlw	0	; case 0
 23299  01FF32  B4D8               	btfsc	status,2,c
 23300  01FF34  D7E0               	goto	l16419
 23301  01FF36  0A01               	xorlw	1	; case 1
 23302  01FF38  B4D8               	btfsc	status,2,c
 23303  01FF3A  D7E1               	goto	l16421
 23304  01FF3C  0A03               	xorlw	3	; case 2
 23305  01FF3E  B4D8               	btfsc	status,2,c
 23306  01FF40  D7E3               	goto	l16423
 23307  01FF42  0A01               	xorlw	1	; case 3
 23308  01FF44  B4D8               	btfsc	status,2,c
 23309  01FF46  D7E7               	goto	l16425
 23310  01FF48  D7D6               	goto	l16419
 23311  01FF4A                     l16433:
 23312                           
 23313                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 23314  01FF4A  0E45               	movlw	69
 23315  01FF4C  6EE6               	movwf	postinc1,c
 23316  01FF4E  EC33  F00E         	call	_send_lcd_cmd_dma	;wreg free
 23317                           
 23318                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 23319                           ;stkvar	_c @ sp[(-1)+-2]
 23320  01FF52  0EFD               	movlw	-3
 23321  01FF54  006F FF8C  F00C    	movff	plusw1,btemp+11
 23322                           
 23323                           ;stkvar	_row @ sp[(-1)+0]
 23324  01FF5A  0EFF               	movlw	-1
 23325  01FF5C  50E3               	movf	plusw1,w,c
 23326  01FF5E  240C               	addwf	(btemp+11)^0,w,c
 23327  01FF60  6EE6               	movwf	postinc1,c
 23328  01FF62  EC3C  F008         	call	_send_lcd_data_dma	;wreg free
 23329                           
 23330                           ; BSR set to: 59
 23331                           ;eadog.c: 218:  wait_lcd_done();
 23332  01FF66  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;eadog.c: 219:  wdtdelay(8);
 23336  01FF6A  0E08               	movlw	8
 23337  01FF6C  6EE6               	movwf	postinc1,c
 23338  01FF6E  0E00               	movlw	0
 23339  01FF70  6EE6               	movwf	postinc1,c
 23340  01FF72  0E00               	movlw	0
 23341  01FF74  6EE6               	movwf	postinc1,c
 23342  01FF76  0E00               	movlw	0
 23343  01FF78  6EE6               	movwf	postinc1,c
 23344  01FF7A  EC17  F007         	call	_wdtdelay	;wreg free
 23345                           
 23346                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 23347                           ;stkvar	_strPtr @ sp[(-1)+-4]
 23348  01FF7E  0EFB               	movlw	-5
 23349  01FF80  006F FF8F FFE6     	movff	plusw1,postinc1
 23350  01FF86  006F FF8F FFE6     	movff	plusw1,postinc1
 23351  01FF8C  EC5B  F000         	call	_eaDogM_WriteString	;wreg free
 23352                           
 23353                           ; BSR set to: 59
 23354                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 23355  01FF90  0EFB               	movlw	251
 23356  01FF92  26E1               	addwf	fsr1l,f,c
 23357  01FF94  0EFF               	movlw	255
 23358  01FF96  22E2               	addwfc	fsr1h,f,c
 23359  01FF98  0012               	return		;funcret
 23360  01FF9A                     __end_of_eaDogM_WriteStringAtPos:
 23361                           	opt callstack 0
 23362                           
 23363 ;; *************** function _send_lcd_cmd_dma *****************
 23364 ;; Defined at:
 23365 ;;		line 171 in file "eadog.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;  strPtr          1  [STACK] const unsigned char 
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;		None
 23370 ;; Return value:  Size  Location     Type
 23371 ;;                  1  [STACK] void 
 23372 ;; Registers used:
 23373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23374 ;; Tracked objects:
 23375 ;;		On entry : 0/3D
 23376 ;;		On exit  : 3F/0
 23377 ;;		Unchanged: 0/0
 23378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23383 ;;Total ram usage:        0 bytes
 23384 ;; Hardware stack levels used:    1
 23385 ;; Hardware stack levels required when called:   25
 23386 ;; This function calls:
 23387 ;;		_send_lcd_data_dma
 23388 ;;		_wait_lcd_done
 23389 ;; This function is called by:
 23390 ;;		_eaDogM_WriteStringAtPos
 23391 ;;		_eaDogM_WriteCommand
 23392 ;; This function uses a reentrant model
 23393 ;;
 23394                           
 23395                           	psect	text79
 23396  001C66                     __ptext79:
 23397                           	opt callstack 0
 23398  001C66                     _send_lcd_cmd_dma:
 23399                           	opt callstack 3
 23400                           
 23401                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 23402                           
 23403                           ; BSR set to: 59
 23404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23405                           ;incstack = 0
 23406  001C66  0EFE               	movlw	254
 23407  001C68  6EE6               	movwf	postinc1,c
 23408  001C6A  EC3C  F008         	call	_send_lcd_data_dma	;wreg free
 23409                           
 23410                           ; BSR set to: 59
 23411                           ;eadog.c: 174:  wait_lcd_done();
 23412  001C6E  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 23416                           ;stkvar	_strPtr @ sp[(0)+-1]
 23417  001C72  0EFF               	movlw	-1
 23418  001C74  50E3               	movf	plusw1,w,c
 23419  001C76  6EE6               	movwf	postinc1,c
 23420  001C78  EC3C  F008         	call	_send_lcd_data_dma	;wreg free
 23421                           
 23422                           ;eadog.c: 176:  wait_lcd_done();
 23423  001C7C  ECB0  F00D         	call	_wait_lcd_done	;wreg free
 23424                           
 23425                           ; BSR set to: 0
 23426                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23427  001C80  52E5               	movf	postdec1,f,c
 23428  001C82  0012               	return		;funcret
 23429  001C84                     __end_of_send_lcd_cmd_dma:
 23430                           	opt callstack 0
 23431                           
 23432 ;; *************** function _wait_lcd_done *****************
 23433 ;; Defined at:
 23434 ;;		line 444 in file "eadog.c"
 23435 ;; Parameters:    Size  Location     Type
 23436 ;;		None
 23437 ;; Auto vars:     Size  Location     Type
 23438 ;;		None
 23439 ;; Return value:  Size  Location     Type
 23440 ;;                  1  [STACK] void 
 23441 ;; Registers used:
 23442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23443 ;; Tracked objects:
 23444 ;;		On entry : 0/1
 23445 ;;		On exit  : 3F/0
 23446 ;;		Unchanged: 0/0
 23447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23452 ;;Total ram usage:        0 bytes
 23453 ;; Hardware stack levels used:    1
 23454 ;; Hardware stack levels required when called:   16
 23455 ;; This function calls:
 23456 ;;		_wdtdelay
 23457 ;; This function is called by:
 23458 ;;		_main
 23459 ;;		_send_lcd_cmd_dma
 23460 ;;		_eaDogM_WriteStringAtPos
 23461 ;;		_update_lcd
 23462 ;;		_vterm_dump
 23463 ;; This function uses a reentrant model
 23464 ;;
 23465                           
 23466                           	psect	text80
 23467  001B60                     __ptext80:
 23468                           	opt callstack 0
 23469  001B60                     _wait_lcd_done:
 23470                           	opt callstack 14
 23471                           
 23472                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 23473                           
 23474                           ; BSR set to: 0
 23475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23476                           ;incstack = 0
 23477  001B60  0100               	movlb	0	; () banked
 23478  001B62  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 23479  001B64  D7FD               	goto	_wait_lcd_done
 23480  001B66                     u10800:
 23481  001B66  013D               	movlb	61	; () banked
 23482  001B68  AB17               	btfss	23,5,b	;volatile
 23483  001B6A  D7FD               	goto	u10800
 23484                           
 23485                           ; BSR set to: 61
 23486                           ;eadog.c: 448:  wdtdelay(50);
 23487  001B6C  0E32               	movlw	50
 23488  001B6E  6EE6               	movwf	postinc1,c
 23489  001B70  0E00               	movlw	0
 23490  001B72  6EE6               	movwf	postinc1,c
 23491  001B74  0E00               	movlw	0
 23492  001B76  6EE6               	movwf	postinc1,c
 23493  001B78  0E00               	movlw	0
 23494  001B7A  6EE6               	movwf	postinc1,c
 23495  001B7C  EC17  F007         	call	_wdtdelay	;wreg free
 23496                           
 23497                           ; BSR set to: 0
 23498                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23499  001B80  0012               	return		;funcret
 23500  001B82                     __end_of_wait_lcd_done:
 23501                           	opt callstack 0
 23502                           
 23503 ;; *************** function _wdtdelay *****************
 23504 ;; Defined at:
 23505 ;;		line 23 in file "eadog.c"
 23506 ;; Parameters:    Size  Location     Type
 23507 ;;  delay           4  [STACK] const unsigned long 
 23508 ;; Auto vars:     Size  Location     Type
 23509 ;;		None
 23510 ;; Return value:  Size  Location     Type
 23511 ;;                  1  [STACK] void 
 23512 ;; Registers used:
 23513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23514 ;; Tracked objects:
 23515 ;;		On entry : 2/3D
 23516 ;;		On exit  : 3F/0
 23517 ;;		Unchanged: 0/0
 23518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23523 ;;Total ram usage:        0 bytes
 23524 ;; Hardware stack levels used:    1
 23525 ;; Hardware stack levels required when called:   15
 23526 ;; This function calls:
 23527 ;;		Nothing
 23528 ;; This function is called by:
 23529 ;;		_init_display
 23530 ;;		_send_lcd_data
 23531 ;;		_send_lcd_cmd
 23532 ;;		_send_lcd_cmd_long
 23533 ;;		_eaDogM_WriteStringAtPos
 23534 ;;		_wait_lcd_done
 23535 ;; This function uses a reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text81
 23539  000E2E                     __ptext81:
 23540                           	opt callstack 0
 23541  000E2E                     _wdtdelay:
 23542                           	opt callstack 14
 23543                           
 23544                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 23545                           
 23546                           ; BSR set to: 0
 23547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23548                           ;incstack = 0
 23549  000E2E  0100               	movlb	0	; () banked
 23550  000E30  6B9E               	clrf	wdtdelay@dcount& (0+255),b
 23551  000E32  6B9F               	clrf	(wdtdelay@dcount+1)& (0+255),b
 23552  000E34  6BA0               	clrf	(wdtdelay@dcount+2)& (0+255),b
 23553  000E36  6BA1               	clrf	(wdtdelay@dcount+3)& (0+255),b
 23554  000E38                     l1606:
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;eadog.c: 28:   __nop();
 23558  000E38  F000               	nop	
 23559  000E3A  0004               	clrwdt		;# 
 23560                           
 23561                           ;eadog.c: 30:  };
 23562  000E3C  0E01               	movlw	1
 23563  000E3E  0100               	movlb	0	; () banked
 23564  000E40  279E               	addwf	wdtdelay@dcount& (0+255),f,b
 23565  000E42  0E00               	movlw	0
 23566  000E44  239F               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 23567  000E46  23A0               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 23568  000E48  23A1               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 23569                           
 23570                           ; BSR set to: 0
 23571                           ;stkvar	_delay @ sp[(0)+-4]
 23572  000E4A  0EFC               	movlw	-4
 23573  000E4C  006F FF8C  F001    	movff	plusw1,btemp
 23574  000E52  519E               	movf	wdtdelay@dcount& (0+255),w,b
 23575  000E54  5C01               	subwf	btemp^0,w,c
 23576  000E56  0EFD               	movlw	-3
 23577  000E58  006F FF8C  F001    	movff	plusw1,btemp
 23578  000E5E  519F               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 23579  000E60  5801               	subwfb	btemp^0,w,c
 23580  000E62  0EFE               	movlw	-2
 23581  000E64  006F FF8C  F001    	movff	plusw1,btemp
 23582  000E6A  51A0               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 23583  000E6C  5801               	subwfb	btemp^0,w,c
 23584  000E6E  0EFF               	movlw	-1
 23585  000E70  006F FF8C  F001    	movff	plusw1,btemp
 23586  000E76  51A1               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 23587  000E78  5801               	subwfb	btemp^0,w,c
 23588  000E7A  B0D8               	btfsc	status,0,c
 23589  000E7C  D7DD               	goto	l1606
 23590                           
 23591                           ; BSR set to: 0
 23592                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 23593  000E7E  52E5               	movf	postdec1,f,c
 23594  000E80  52E5               	movf	postdec1,f,c
 23595  000E82  52E5               	movf	postdec1,f,c
 23596  000E84  52E5               	movf	postdec1,f,c
 23597  000E86  0012               	return		;funcret
 23598  000E88                     __end_of_wdtdelay:
 23599                           	opt callstack 0
 23600                           
 23601 ;; *************** function _send_lcd_data_dma *****************
 23602 ;; Defined at:
 23603 ;;		line 182 in file "eadog.c"
 23604 ;; Parameters:    Size  Location     Type
 23605 ;;  strPtr          1  [STACK] const unsigned char 
 23606 ;; Auto vars:     Size  Location     Type
 23607 ;;		None
 23608 ;; Return value:  Size  Location     Type
 23609 ;;                  1  [STACK] void 
 23610 ;; Registers used:
 23611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23612 ;; Tracked objects:
 23613 ;;		On entry : 0/0
 23614 ;;		On exit  : 3F/3B
 23615 ;;		Unchanged: 0/0
 23616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23621 ;;Total ram usage:        0 bytes
 23622 ;; Hardware stack levels used:    1
 23623 ;; Hardware stack levels required when called:   24
 23624 ;; This function calls:
 23625 ;;		_printf
 23626 ;;		_ringBufS_flush
 23627 ;;		_start_lcd
 23628 ;;		_wait_lcd_set
 23629 ;; This function is called by:
 23630 ;;		_send_lcd_cmd_dma
 23631 ;;		_eaDogM_WriteStringAtPos
 23632 ;; This function uses a reentrant model
 23633 ;;
 23634                           
 23635                           	psect	text82
 23636  001078                     __ptext82:
 23637                           	opt callstack 0
 23638  001078                     _send_lcd_data_dma:
 23639                           	opt callstack 4
 23640                           
 23641                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 23642                           
 23643                           ; BSR set to: 0
 23644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23645                           ;incstack = 0
 23646  001078  EC5F  F00F         	call	_wait_lcd_set	;wreg free
 23647                           
 23648                           ; BSR set to: 0
 23649                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 23650  00107C  0E00               	movlw	0
 23651  00107E  6EE6               	movwf	postinc1,c
 23652  001080  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 23653  001086  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 23654  00108C  ECE1  F001         	call	_ringBufS_flush	;wreg free
 23655  001090  94BC               	bcf	188,2,c	;volatile
 23656                           
 23657                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 23658  001092  013B               	movlb	59	; () banked
 23659  001094  9FFC               	bcf	252,7,b	;volatile
 23660                           
 23661                           ; BSR set to: 59
 23662                           ;eadog.c: 189:  DMA1SSZ = 1;
 23663  001096  0E00               	movlw	0
 23664  001098  6FF8               	movwf	248,b	;volatile
 23665  00109A  0E01               	movlw	1
 23666  00109C  6FF7               	movwf	247,b	;volatile
 23667                           
 23668                           ; BSR set to: 59
 23669                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 23670  00109E  8FFC               	bsf	252,7,b	;volatile
 23671                           
 23672                           ; BSR set to: 59
 23673                           ;eadog.c: 191:  printf("%c", strPtr);
 23674                           ;stkvar	_strPtr @ sp[(0)+-1]
 23675  0010A0  0EFF               	movlw	-1
 23676  0010A2  50E3               	movf	plusw1,w,c
 23677  0010A4  6EE6               	movwf	postinc1,c
 23678  0010A6  0E00               	movlw	0
 23679  0010A8  6EE6               	movwf	postinc1,c
 23680  0010AA  0EF8               	movlw	low STR_67
 23681  0010AC  6EE6               	movwf	postinc1,c
 23682  0010AE  0EFF               	movlw	high STR_67
 23683  0010B0  6EE6               	movwf	postinc1,c
 23684  0010B2  0E04               	movlw	4
 23685  0010B4  6EE6               	movwf	postinc1,c
 23686  0010B6  EC58  F006         	call	_printf	;wreg free
 23687                           
 23688                           ; BSR set to: 0
 23689                           ;eadog.c: 192:  start_lcd();
 23690  0010BA  EC62  F00F         	call	_start_lcd	;wreg free
 23691                           
 23692                           ; BSR set to: 59
 23693                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 23694  0010BE  52E5               	movf	postdec1,f,c
 23695  0010C0  0012               	return		;funcret
 23696  0010C2                     __end_of_send_lcd_data_dma:
 23697                           	opt callstack 0
 23698                           
 23699 ;; *************** function _eaDogM_WriteString *****************
 23700 ;; Defined at:
 23701 ;;		line 151 in file "eadog.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;  strPtr          2  [STACK] PTR unsigned char 
 23704 ;;		 -> D.lcd(480), D(482), V(192), 
 23705 ;; Auto vars:     Size  Location     Type
 23706 ;;		None
 23707 ;; Return value:  Size  Location     Type
 23708 ;;                  1  [STACK] void 
 23709 ;; Registers used:
 23710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23711 ;; Tracked objects:
 23712 ;;		On entry : 3F/0
 23713 ;;		On exit  : 3F/3B
 23714 ;;		Unchanged: 0/0
 23715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23720 ;;Total ram usage:        0 bytes
 23721 ;; Hardware stack levels used:    1
 23722 ;; Hardware stack levels required when called:   24
 23723 ;; This function calls:
 23724 ;;		_printf
 23725 ;;		_ringBufS_flush
 23726 ;;		_start_lcd
 23727 ;;		_strlen
 23728 ;;		_wait_lcd_set
 23729 ;; This function is called by:
 23730 ;;		_eaDogM_WriteStringAtPos
 23731 ;; This function uses a reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text83
 23735  0000B6                     __ptext83:
 23736                           	opt callstack 0
 23737  0000B6                     _eaDogM_WriteString:
 23738                           	opt callstack 4
 23739                           
 23740                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 23741                           
 23742                           ; BSR set to: 59
 23743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23744                           ;incstack = 0
 23745  0000B6  EC5F  F00F         	call	_wait_lcd_set	;wreg free
 23746                           
 23747                           ; BSR set to: 0
 23748                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 23749  0000BA  0E00               	movlw	0
 23750  0000BC  6EE6               	movwf	postinc1,c
 23751  0000BE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 23752  0000C4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 23753  0000CA  ECE1  F001         	call	_ringBufS_flush	;wreg free
 23754  0000CE  94BC               	bcf	188,2,c	;volatile
 23755                           
 23756                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 23757                           ;stkvar	_strPtr @ sp[(0)+-2]
 23758  0000D0  0EFE               	movlw	-2
 23759  0000D2  006F FF8F FFE6     	movff	plusw1,postinc1
 23760  0000D8  006F FF8F FFE6     	movff	plusw1,postinc1
 23761  0000DE  ECAE  F000         	call	_strlen	;wreg free
 23762  0000E2  5002               	movf	(btemp+1)^0,w,c
 23763  0000E4  E104               	bnz	u15820
 23764  0000E6  0E41               	movlw	65
 23765  0000E8  5C01               	subwf	btemp^0,w,c
 23766  0000EA  A0D8               	btfss	status,0,c
 23767  0000EC  D010               	goto	l16181
 23768  0000EE                     u15820:
 23769                           
 23770                           ;stkvar	_strPtr @ sp[(0)+-2]
 23771  0000EE  0EFE               	movlw	-2
 23772  0000F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23773  0000F6  0EFF               	movlw	-1
 23774  0000F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23775  0000FE  0E40               	movlw	64
 23776  000100  240B               	addwf	(btemp+10)^0,w,c
 23777  000102  6ED9               	movwf	fsr2l,c
 23778  000104  0E00               	movlw	0
 23779  000106  200C               	addwfc	(btemp+11)^0,w,c
 23780  000108  6EDA               	movwf	fsr2h,c
 23781  00010A  0E00               	movlw	0
 23782  00010C  6EDF               	movwf	indf2,c
 23783  00010E                     l16181:
 23784                           
 23785                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 23786  00010E  013B               	movlb	59	; () banked
 23787  000110  9FFC               	bcf	252,7,b	;volatile
 23788                           
 23789                           ; BSR set to: 59
 23790                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 23791                           ;stkvar	_strPtr @ sp[(0)+-2]
 23792  000112  0EFE               	movlw	-2
 23793  000114  006F FF8F FFE6     	movff	plusw1,postinc1
 23794  00011A  006F FF8F FFE6     	movff	plusw1,postinc1
 23795  000120  ECAE  F000         	call	_strlen	;wreg free
 23796  000124  0060  F007  FBF7   	movff	btemp,15351	;volatile
 23797  00012A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 23798                           
 23799                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 23800  000130  013B               	movlb	59	; () banked
 23801  000132  8FFC               	bsf	252,7,b	;volatile
 23802                           
 23803                           ; BSR set to: 59
 23804                           ;eadog.c: 161:  printf("%s", strPtr);
 23805                           ;stkvar	_strPtr @ sp[(0)+-2]
 23806  000134  0EFE               	movlw	-2
 23807  000136  006F FF8F FFE6     	movff	plusw1,postinc1
 23808  00013C  006F FF8F FFE6     	movff	plusw1,postinc1
 23809  000142  0EFB               	movlw	low STR_66
 23810  000144  6EE6               	movwf	postinc1,c
 23811  000146  0EFF               	movlw	high STR_66
 23812  000148  6EE6               	movwf	postinc1,c
 23813  00014A  0E04               	movlw	4
 23814  00014C  6EE6               	movwf	postinc1,c
 23815  00014E  EC58  F006         	call	_printf	;wreg free
 23816                           
 23817                           ; BSR set to: 0
 23818                           ;eadog.c: 162:  start_lcd();
 23819  000152  EC62  F00F         	call	_start_lcd	;wreg free
 23820                           
 23821                           ; BSR set to: 59
 23822                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23823  000156  52E5               	movf	postdec1,f,c
 23824  000158  52E5               	movf	postdec1,f,c
 23825  00015A  0012               	return		;funcret
 23826  00015C                     __end_of_eaDogM_WriteString:
 23827                           	opt callstack 0
 23828                           
 23829 ;; *************** function _wait_lcd_set *****************
 23830 ;; Defined at:
 23831 ;;		line 434 in file "eadog.c"
 23832 ;; Parameters:    Size  Location     Type
 23833 ;;		None
 23834 ;; Auto vars:     Size  Location     Type
 23835 ;;		None
 23836 ;; Return value:  Size  Location     Type
 23837 ;;                  1  [STACK] void 
 23838 ;; Registers used:
 23839 ;;		None
 23840 ;; Tracked objects:
 23841 ;;		On entry : 0/0
 23842 ;;		On exit  : 3F/0
 23843 ;;		Unchanged: 0/0
 23844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;Total ram usage:        0 bytes
 23850 ;; Hardware stack levels used:    1
 23851 ;; Hardware stack levels required when called:   15
 23852 ;; This function calls:
 23853 ;;		Nothing
 23854 ;; This function is called by:
 23855 ;;		_eaDogM_WriteString
 23856 ;;		_send_lcd_data_dma
 23857 ;; This function uses a reentrant model
 23858 ;;
 23859                           
 23860                           	psect	text84
 23861  001EBE                     __ptext84:
 23862                           	opt callstack 0
 23863  001EBE                     _wait_lcd_set:
 23864                           	opt callstack 12
 23865                           
 23866                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 23867                           
 23868                           ; BSR set to: 59
 23869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23870                           ;incstack = 0
 23871  001EBE  0100               	movlb	0	; () banked
 23872  001EC0  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 23873                           
 23874                           ; BSR set to: 0
 23875                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23876  001EC2  0012               	return		;funcret
 23877  001EC4                     __end_of_wait_lcd_set:
 23878                           	opt callstack 0
 23879                           
 23880 ;; *************** function _start_lcd *****************
 23881 ;; Defined at:
 23882 ;;		line 429 in file "eadog.c"
 23883 ;; Parameters:    Size  Location     Type
 23884 ;;		None
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1  [STACK] void 
 23889 ;; Registers used:
 23890 ;;		None
 23891 ;; Tracked objects:
 23892 ;;		On entry : 3F/0
 23893 ;;		On exit  : 3F/3B
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23900 ;;Total ram usage:        0 bytes
 23901 ;; Hardware stack levels used:    1
 23902 ;; Hardware stack levels required when called:   15
 23903 ;; This function calls:
 23904 ;;		Nothing
 23905 ;; This function is called by:
 23906 ;;		_eaDogM_WriteString
 23907 ;;		_send_lcd_data_dma
 23908 ;; This function uses a reentrant model
 23909 ;;
 23910                           
 23911                           	psect	text85
 23912  001EC4                     __ptext85:
 23913                           	opt callstack 0
 23914  001EC4                     _start_lcd:
 23915                           	opt callstack 12
 23916                           
 23917                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 23918                           
 23919                           ; BSR set to: 0
 23920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23921                           ;incstack = 0
 23922  001EC4  013B               	movlb	59	; () banked
 23923  001EC6  8DFC               	bsf	252,6,b	;volatile
 23924                           
 23925                           ; BSR set to: 59
 23926                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23927  001EC8  0012               	return		;funcret
 23928  001ECA                     __end_of_start_lcd:
 23929                           	opt callstack 0
 23930                           
 23931 ;; *************** function _ringBufS_flush *****************
 23932 ;; Defined at:
 23933 ;;		line 76 in file "ringbufs.c"
 23934 ;; Parameters:    Size  Location     Type
 23935 ;;  _this           2  [STACK] PTR struct ringBufS_t
 23936 ;;		 -> ring_buf1(67), 
 23937 ;;  clearBuffer     1  [STACK] const char 
 23938 ;; Auto vars:     Size  Location     Type
 23939 ;;		None
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  1  [STACK] void 
 23942 ;; Registers used:
 23943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 23944 ;; Tracked objects:
 23945 ;;		On entry : 3F/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23953 ;;Total ram usage:        0 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; Hardware stack levels required when called:   16
 23956 ;; This function calls:
 23957 ;;		_memset
 23958 ;; This function is called by:
 23959 ;;		_eaDogM_WriteString
 23960 ;;		_send_lcd_data_dma
 23961 ;; This function uses a reentrant model
 23962 ;;
 23963                           
 23964                           	psect	text86
 23965  0003C2                     __ptext86:
 23966                           	opt callstack 0
 23967  0003C2                     _ringBufS_flush:
 23968                           	opt callstack 11
 23969                           
 23970                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 23971                           ;stkvar	__this @ sp[(0)+-2]
 23972                           
 23973                           ; BSR set to: 59
 23974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23975                           ;incstack = 0
 23976  0003C2  0EFE               	movlw	-2
 23977  0003C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23978  0003CA  0EFF               	movlw	-1
 23979  0003CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23980  0003D2  0E42               	movlw	66
 23981  0003D4  240B               	addwf	(btemp+10)^0,w,c
 23982  0003D6  6ED9               	movwf	fsr2l,c
 23983  0003D8  0E00               	movlw	0
 23984  0003DA  200C               	addwfc	(btemp+11)^0,w,c
 23985  0003DC  6EDA               	movwf	fsr2h,c
 23986  0003DE  0E00               	movlw	0
 23987  0003E0  6EDF               	movwf	indf2,c
 23988                           
 23989                           ;ringbufs.c: 79:  _this->head = 0;
 23990                           ;stkvar	__this @ sp[(0)+-2]
 23991  0003E2  0EFE               	movlw	-2
 23992  0003E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23993  0003EA  0EFF               	movlw	-1
 23994  0003EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23995  0003F2  0E40               	movlw	64
 23996  0003F4  240B               	addwf	(btemp+10)^0,w,c
 23997  0003F6  6ED9               	movwf	fsr2l,c
 23998  0003F8  0E00               	movlw	0
 23999  0003FA  200C               	addwfc	(btemp+11)^0,w,c
 24000  0003FC  6EDA               	movwf	fsr2h,c
 24001  0003FE  0E00               	movlw	0
 24002  000400  6EDF               	movwf	indf2,c
 24003                           
 24004                           ;ringbufs.c: 80:  _this->tail = 0;
 24005                           ;stkvar	__this @ sp[(0)+-2]
 24006  000402  0EFE               	movlw	-2
 24007  000404  006F FF8C  F00B    	movff	plusw1,btemp+10
 24008  00040A  0EFF               	movlw	-1
 24009  00040C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24010  000412  0E41               	movlw	65
 24011  000414  240B               	addwf	(btemp+10)^0,w,c
 24012  000416  6ED9               	movwf	fsr2l,c
 24013  000418  0E00               	movlw	0
 24014  00041A  200C               	addwfc	(btemp+11)^0,w,c
 24015  00041C  6EDA               	movwf	fsr2h,c
 24016  00041E  0E00               	movlw	0
 24017  000420  6EDF               	movwf	indf2,c
 24018                           
 24019                           ;ringbufs.c: 81:  if (clearBuffer) {
 24020                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24021  000422  0EFD               	movlw	-3
 24022  000424  50E3               	movf	plusw1,w,c
 24023  000426  B4D8               	btfsc	status,2,c
 24024  000428  D011               	goto	l1738
 24025                           
 24026                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24027  00042A  0E40               	movlw	64
 24028  00042C  6EE6               	movwf	postinc1,c
 24029  00042E  0E00               	movlw	0
 24030  000430  6EE6               	movwf	postinc1,c
 24031  000432  0E00               	movlw	0
 24032  000434  6EE6               	movwf	postinc1,c
 24033  000436  0E00               	movlw	0
 24034  000438  6EE6               	movwf	postinc1,c
 24035                           
 24036                           ;stkvar	__this @ sp[(-4)+-2]
 24037  00043A  0EFA               	movlw	-6
 24038  00043C  006F FF8F FFE6     	movff	plusw1,postinc1
 24039  000442  006F FF8F FFE6     	movff	plusw1,postinc1
 24040  000448  EC58  F0D3         	call	_memset	;wreg free
 24041  00044C                     l1738:
 24042                           
 24043                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24044  00044C  52E5               	movf	postdec1,f,c
 24045  00044E  52E5               	movf	postdec1,f,c
 24046  000450  52E5               	movf	postdec1,f,c
 24047  000452  0012               	return		;funcret
 24048  000454                     __end_of_ringBufS_flush:
 24049                           	opt callstack 0
 24050                           
 24051 ;; *************** function _memset *****************
 24052 ;; Defined at:
 24053 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24054 ;; Parameters:    Size  Location     Type
 24055 ;;  dest            2  [STACK] PTR void 
 24056 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24057 ;;  c               2  [STACK] int 
 24058 ;;  n               2  [STACK] unsigned int 
 24059 ;; Auto vars:     Size  Location     Type
 24060 ;;  s               2  [STACK] PTR unsigned char 
 24061 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24062 ;;  k               2  [STACK] unsigned int 
 24063 ;; Return value:  Size  Location     Type
 24064 ;;                  2  [STACK] PTR void 
 24065 ;; Registers used:
 24066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24067 ;; Tracked objects:
 24068 ;;		On entry : 0/0
 24069 ;;		On exit  : 0/0
 24070 ;;		Unchanged: 0/0
 24071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24076 ;;Total ram usage:        0 bytes
 24077 ;; Hardware stack levels used:    1
 24078 ;; Hardware stack levels required when called:   15
 24079 ;; This function calls:
 24080 ;;		Nothing
 24081 ;; This function is called by:
 24082 ;;		_ringBufS_init
 24083 ;;		_ringBufS_flush
 24084 ;; This function uses a reentrant model
 24085 ;;
 24086                           
 24087                           	psect	text87
 24088  01A6B0                     __ptext87:
 24089                           	opt callstack 0
 24090  01A6B0                     _memset:
 24091                           	opt callstack 0
 24092                           
 24093                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24094  01A6B0  52E6               	movf	postinc1,f,c
 24095  01A6B2  52E6               	movf	postinc1,f,c
 24096  01A6B4  52E6               	movf	postinc1,f,c
 24097  01A6B6  52E6               	movf	postinc1,f,c
 24098                           
 24099                           ;stkvar	_dest @ sp[(-4)+-2]
 24100                           
 24101                           ;incstack = 0
 24102  01A6B8  0EFA               	movlw	-6
 24103  01A6BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 24104  01A6C0  0EFB               	movlw	-5
 24105  01A6C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24106                           
 24107                           ;stkvar	_s @ sp[(-4)+0]
 24108  01A6C8  0EFD               	movlw	-3
 24109  01A6CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24110  01A6D0  0EFC               	movlw	-4
 24111  01A6D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24112                           
 24113                           ;stkvar	_n @ sp[(-4)+-6]
 24114  01A6D8  0EF6               	movlw	-10
 24115  01A6DA  006F FF8C  F001    	movff	plusw1,btemp
 24116  01A6E0  0EF7               	movlw	-9
 24117  01A6E2  50E3               	movf	plusw1,w,c
 24118  01A6E4  1001               	iorwf	btemp^0,w,c
 24119  01A6E6  B4D8               	btfsc	status,2,c
 24120  01A6E8  D154               	goto	u14150
 24121                           
 24122                           ;stkvar	_c @ sp[(-4)+-4]
 24123                           ;stkvar	_s @ sp[(-4)+0]
 24124  01A6EA  0EFC               	movlw	-4
 24125  01A6EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 24126  01A6F2  0EFD               	movlw	-3
 24127  01A6F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 24128  01A6FA  0EF8               	movlw	-8
 24129  01A6FC  006F FF8F FFDF     	movff	plusw1,indf2
 24130                           
 24131                           ;stkvar	_c @ sp[(-4)+-4]
 24132                           ;stkvar	_n @ sp[(-4)+-6]
 24133                           ;stkvar	_s @ sp[(-4)+0]
 24134  01A702  0EFC               	movlw	-4
 24135  01A704  006F FF8C  F00B    	movff	plusw1,btemp+10
 24136  01A70A  0EFD               	movlw	-3
 24137  01A70C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24138  01A712  0EF6               	movlw	-10
 24139  01A714  50E3               	movf	plusw1,w,c
 24140  01A716  260B               	addwf	(btemp+10)^0,f,c
 24141  01A718  0EF7               	movlw	-9
 24142  01A71A  50E3               	movf	plusw1,w,c
 24143  01A71C  220C               	addwfc	(btemp+11)^0,f,c
 24144  01A71E  0EFF               	movlw	255
 24145  01A720  240B               	addwf	(btemp+10)^0,w,c
 24146  01A722  6ED9               	movwf	fsr2l,c
 24147  01A724  0EFF               	movlw	255
 24148  01A726  200C               	addwfc	(btemp+11)^0,w,c
 24149  01A728  6EDA               	movwf	fsr2h,c
 24150  01A72A  0EF8               	movlw	-8
 24151  01A72C  006F FF8F FFDF     	movff	plusw1,indf2
 24152                           
 24153                           ;stkvar	_n @ sp[(-4)+-6]
 24154  01A732  0EF7               	movlw	-9
 24155  01A734  50E3               	movf	plusw1,w,c
 24156  01A736  E108               	bnz	l15195
 24157  01A738  0EF6               	movlw	-10
 24158  01A73A  006F FF8C  F001    	movff	plusw1,btemp
 24159  01A740  0E03               	movlw	3
 24160  01A742  5E01               	subwf	btemp^0,f,c
 24161  01A744  A0D8               	btfss	status,0,c
 24162  01A746  D125               	goto	u14150
 24163  01A748                     l15195:
 24164                           
 24165                           ;stkvar	_c @ sp[(-4)+-4]
 24166                           ;stkvar	_s @ sp[(-4)+0]
 24167  01A748  0EFC               	movlw	-4
 24168  01A74A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24169  01A750  0EFD               	movlw	-3
 24170  01A752  006F FF8C  F00C    	movff	plusw1,btemp+11
 24171  01A758  0E01               	movlw	1
 24172  01A75A  240B               	addwf	(btemp+10)^0,w,c
 24173  01A75C  6ED9               	movwf	fsr2l,c
 24174  01A75E  0E00               	movlw	0
 24175  01A760  200C               	addwfc	(btemp+11)^0,w,c
 24176  01A762  6EDA               	movwf	fsr2h,c
 24177  01A764  0EF8               	movlw	-8
 24178  01A766  006F FF8F FFDF     	movff	plusw1,indf2
 24179                           
 24180                           ;stkvar	_c @ sp[(-4)+-4]
 24181                           ;stkvar	_s @ sp[(-4)+0]
 24182  01A76C  0EFC               	movlw	-4
 24183  01A76E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24184  01A774  0EFD               	movlw	-3
 24185  01A776  006F FF8C  F00C    	movff	plusw1,btemp+11
 24186  01A77C  0E02               	movlw	2
 24187  01A77E  240B               	addwf	(btemp+10)^0,w,c
 24188  01A780  6ED9               	movwf	fsr2l,c
 24189  01A782  0E00               	movlw	0
 24190  01A784  200C               	addwfc	(btemp+11)^0,w,c
 24191  01A786  6EDA               	movwf	fsr2h,c
 24192  01A788  0EF8               	movlw	-8
 24193  01A78A  006F FF8F FFDF     	movff	plusw1,indf2
 24194                           
 24195                           ;stkvar	_c @ sp[(-4)+-4]
 24196                           ;stkvar	_n @ sp[(-4)+-6]
 24197                           ;stkvar	_s @ sp[(-4)+0]
 24198  01A790  0EFC               	movlw	-4
 24199  01A792  006F FF8C  F00B    	movff	plusw1,btemp+10
 24200  01A798  0EFD               	movlw	-3
 24201  01A79A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24202  01A7A0  0EF6               	movlw	-10
 24203  01A7A2  50E3               	movf	plusw1,w,c
 24204  01A7A4  260B               	addwf	(btemp+10)^0,f,c
 24205  01A7A6  0EF7               	movlw	-9
 24206  01A7A8  50E3               	movf	plusw1,w,c
 24207  01A7AA  220C               	addwfc	(btemp+11)^0,f,c
 24208  01A7AC  0EFE               	movlw	254
 24209  01A7AE  240B               	addwf	(btemp+10)^0,w,c
 24210  01A7B0  6ED9               	movwf	fsr2l,c
 24211  01A7B2  0EFF               	movlw	255
 24212  01A7B4  200C               	addwfc	(btemp+11)^0,w,c
 24213  01A7B6  6EDA               	movwf	fsr2h,c
 24214  01A7B8  0EF8               	movlw	-8
 24215  01A7BA  006F FF8F FFDF     	movff	plusw1,indf2
 24216                           
 24217                           ;stkvar	_c @ sp[(-4)+-4]
 24218                           ;stkvar	_n @ sp[(-4)+-6]
 24219                           ;stkvar	_s @ sp[(-4)+0]
 24220  01A7C0  0EFC               	movlw	-4
 24221  01A7C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24222  01A7C8  0EFD               	movlw	-3
 24223  01A7CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24224  01A7D0  0EF6               	movlw	-10
 24225  01A7D2  50E3               	movf	plusw1,w,c
 24226  01A7D4  260B               	addwf	(btemp+10)^0,f,c
 24227  01A7D6  0EF7               	movlw	-9
 24228  01A7D8  50E3               	movf	plusw1,w,c
 24229  01A7DA  220C               	addwfc	(btemp+11)^0,f,c
 24230  01A7DC  0EFD               	movlw	253
 24231  01A7DE  240B               	addwf	(btemp+10)^0,w,c
 24232  01A7E0  6ED9               	movwf	fsr2l,c
 24233  01A7E2  0EFF               	movlw	255
 24234  01A7E4  200C               	addwfc	(btemp+11)^0,w,c
 24235  01A7E6  6EDA               	movwf	fsr2h,c
 24236  01A7E8  0EF8               	movlw	-8
 24237  01A7EA  006F FF8F FFDF     	movff	plusw1,indf2
 24238                           
 24239                           ;stkvar	_n @ sp[(-4)+-6]
 24240  01A7F0  0EF7               	movlw	-9
 24241  01A7F2  50E3               	movf	plusw1,w,c
 24242  01A7F4  E108               	bnz	l15201
 24243  01A7F6  0EF6               	movlw	-10
 24244  01A7F8  006F FF8C  F001    	movff	plusw1,btemp
 24245  01A7FE  0E07               	movlw	7
 24246  01A800  5E01               	subwf	btemp^0,f,c
 24247  01A802  A0D8               	btfss	status,0,c
 24248  01A804  D0C6               	goto	u14150
 24249  01A806                     l15201:
 24250                           
 24251                           ;stkvar	_c @ sp[(-4)+-4]
 24252                           ;stkvar	_s @ sp[(-4)+0]
 24253  01A806  0EFC               	movlw	-4
 24254  01A808  006F FF8C  F00B    	movff	plusw1,btemp+10
 24255  01A80E  0EFD               	movlw	-3
 24256  01A810  006F FF8C  F00C    	movff	plusw1,btemp+11
 24257  01A816  0E03               	movlw	3
 24258  01A818  240B               	addwf	(btemp+10)^0,w,c
 24259  01A81A  6ED9               	movwf	fsr2l,c
 24260  01A81C  0E00               	movlw	0
 24261  01A81E  200C               	addwfc	(btemp+11)^0,w,c
 24262  01A820  6EDA               	movwf	fsr2h,c
 24263  01A822  0EF8               	movlw	-8
 24264  01A824  006F FF8F FFDF     	movff	plusw1,indf2
 24265                           
 24266                           ;stkvar	_c @ sp[(-4)+-4]
 24267                           ;stkvar	_n @ sp[(-4)+-6]
 24268                           ;stkvar	_s @ sp[(-4)+0]
 24269  01A82A  0EFC               	movlw	-4
 24270  01A82C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24271  01A832  0EFD               	movlw	-3
 24272  01A834  006F FF8C  F00C    	movff	plusw1,btemp+11
 24273  01A83A  0EF6               	movlw	-10
 24274  01A83C  50E3               	movf	plusw1,w,c
 24275  01A83E  260B               	addwf	(btemp+10)^0,f,c
 24276  01A840  0EF7               	movlw	-9
 24277  01A842  50E3               	movf	plusw1,w,c
 24278  01A844  220C               	addwfc	(btemp+11)^0,f,c
 24279  01A846  0EFC               	movlw	252
 24280  01A848  240B               	addwf	(btemp+10)^0,w,c
 24281  01A84A  6ED9               	movwf	fsr2l,c
 24282  01A84C  0EFF               	movlw	255
 24283  01A84E  200C               	addwfc	(btemp+11)^0,w,c
 24284  01A850  6EDA               	movwf	fsr2h,c
 24285  01A852  0EF8               	movlw	-8
 24286  01A854  006F FF8F FFDF     	movff	plusw1,indf2
 24287                           
 24288                           ;stkvar	_n @ sp[(-4)+-6]
 24289  01A85A  0EF7               	movlw	-9
 24290  01A85C  50E3               	movf	plusw1,w,c
 24291  01A85E  E108               	bnz	l15207
 24292  01A860  0EF6               	movlw	-10
 24293  01A862  006F FF8C  F001    	movff	plusw1,btemp
 24294  01A868  0E09               	movlw	9
 24295  01A86A  5E01               	subwf	btemp^0,f,c
 24296  01A86C  A0D8               	btfss	status,0,c
 24297  01A86E  D091               	goto	u14150
 24298  01A870                     l15207:
 24299                           
 24300                           ;stkvar	_s @ sp[(-4)+0]
 24301  01A870  0EFC               	movlw	-4
 24302  01A872  006F FF8C  F00B    	movff	plusw1,btemp+10
 24303  01A878  1E0B               	comf	(btemp+10)^0,f,c
 24304  01A87A  0EFD               	movlw	-3
 24305  01A87C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24306  01A882  1E0C               	comf	(btemp+11)^0,f,c
 24307  01A884  2A0B               	incf	(btemp+10)^0,f,c
 24308  01A886  B4D8               	btfsc	status,2,c
 24309  01A888  2A0C               	incf	(btemp+11)^0,f,c
 24310  01A88A  0E03               	movlw	3
 24311  01A88C  160B               	andwf	(btemp+10)^0,f,c
 24312  01A88E  0E00               	movlw	0
 24313  01A890  160C               	andwf	(btemp+11)^0,f,c
 24314                           
 24315                           ;stkvar	_k @ sp[(-4)+2]
 24316  01A892  0EFE               	movlw	-2
 24317  01A894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24318  01A89A  0EFF               	movlw	-1
 24319  01A89C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24320                           
 24321                           ;stkvar	_k @ sp[(-4)+2]
 24322                           ;stkvar	_s @ sp[(-4)+0]
 24323  01A8A2  0EFC               	movlw	-4
 24324  01A8A4  50E3               	movf	plusw1,w,c
 24325  01A8A6  6E01               	movwf	btemp^0,c
 24326  01A8A8  0EFE               	movlw	-2
 24327  01A8AA  50E3               	movf	plusw1,w,c
 24328  01A8AC  2601               	addwf	btemp^0,f,c
 24329  01A8AE  0EFC               	movlw	-4
 24330  01A8B0  0060  F007  FFE3   	movff	btemp,plusw1
 24331  01A8B6  0EFD               	movlw	-3
 24332  01A8B8  50E3               	movf	plusw1,w,c
 24333  01A8BA  6E01               	movwf	btemp^0,c
 24334  01A8BC  0EFF               	movlw	-1
 24335  01A8BE  50E3               	movf	plusw1,w,c
 24336  01A8C0  2201               	addwfc	btemp^0,f,c
 24337  01A8C2  0EFD               	movlw	-3
 24338  01A8C4  0060  F007  FFE3   	movff	btemp,plusw1
 24339                           
 24340                           ;stkvar	_k @ sp[(-4)+2]
 24341                           ;stkvar	_n @ sp[(-4)+-6]
 24342  01A8CA  0EF6               	movlw	-10
 24343  01A8CC  50E3               	movf	plusw1,w,c
 24344  01A8CE  6E01               	movwf	btemp^0,c
 24345  01A8D0  0EFE               	movlw	-2
 24346  01A8D2  50E3               	movf	plusw1,w,c
 24347  01A8D4  5E01               	subwf	btemp^0,f,c
 24348  01A8D6  0EF6               	movlw	-10
 24349  01A8D8  0060  F007  FFE3   	movff	btemp,plusw1
 24350  01A8DE  0EF7               	movlw	-9
 24351  01A8E0  50E3               	movf	plusw1,w,c
 24352  01A8E2  6E01               	movwf	btemp^0,c
 24353  01A8E4  0EFF               	movlw	-1
 24354  01A8E6  50E3               	movf	plusw1,w,c
 24355  01A8E8  5A01               	subwfb	btemp^0,f,c
 24356  01A8EA  0EF7               	movlw	-9
 24357  01A8EC  0060  F007  FFE3   	movff	btemp,plusw1
 24358  01A8F2  0EFC               	movlw	252
 24359  01A8F4  6E0B               	movwf	(btemp+10)^0,c
 24360  01A8F6  0EFF               	movlw	255
 24361  01A8F8  6E0C               	movwf	(btemp+11)^0,c
 24362                           
 24363                           ;stkvar	_n @ sp[(-4)+-6]
 24364  01A8FA  0EF6               	movlw	-10
 24365  01A8FC  006F FF8C  F001    	movff	plusw1,btemp
 24366  01A902  500B               	movf	(btemp+10)^0,w,c
 24367  01A904  1601               	andwf	btemp^0,f,c
 24368  01A906  0EF6               	movlw	-10
 24369  01A908  0060  F007  FFE3   	movff	btemp,plusw1
 24370  01A90E  0EF7               	movlw	-9
 24371  01A910  006F FF8C  F001    	movff	plusw1,btemp
 24372  01A916  500C               	movf	(btemp+11)^0,w,c
 24373  01A918  1601               	andwf	btemp^0,f,c
 24374  01A91A  0EF7               	movlw	-9
 24375  01A91C  D02E               	goto	L23
 24376  01A91E                     l15215:
 24377                           
 24378                           ;stkvar	_c @ sp[(-4)+-4]
 24379                           ;stkvar	_s @ sp[(-4)+0]
 24380  01A91E  0EFC               	movlw	-4
 24381  01A920  006F FF8F FFD9     	movff	plusw1,fsr2l
 24382  01A926  0EFD               	movlw	-3
 24383  01A928  006F FF8F FFDA     	movff	plusw1,fsr2h
 24384  01A92E  0EF8               	movlw	-8
 24385  01A930  006F FF8F FFDF     	movff	plusw1,indf2
 24386                           
 24387                           ;stkvar	_n @ sp[(-4)+-6]
 24388  01A936  0EF6               	movlw	-10
 24389  01A938  006F FF8C  F001    	movff	plusw1,btemp
 24390  01A93E  0E01               	movlw	1
 24391  01A940  5E01               	subwf	btemp^0,f,c
 24392  01A942  0EF6               	movlw	-10
 24393  01A944  0060  F007  FFE3   	movff	btemp,plusw1
 24394  01A94A  0EF7               	movlw	-9
 24395  01A94C  006F FF8C  F001    	movff	plusw1,btemp
 24396  01A952  0E00               	movlw	0
 24397  01A954  5A01               	subwfb	btemp^0,f,c
 24398  01A956  0EF7               	movlw	-9
 24399  01A958  0060  F007  FFE3   	movff	btemp,plusw1
 24400                           
 24401                           ;stkvar	_s @ sp[(-4)+0]
 24402  01A95E  0EFC               	movlw	-4
 24403  01A960  50E3               	movf	plusw1,w,c
 24404  01A962  0F01               	addlw	1
 24405  01A964  6E01               	movwf	btemp^0,c
 24406  01A966  0EFC               	movlw	-4
 24407  01A968  0060  F007  FFE3   	movff	btemp,plusw1
 24408  01A96E  6A01               	clrf	btemp^0,c
 24409  01A970  0EFD               	movlw	-3
 24410  01A972  50E3               	movf	plusw1,w,c
 24411  01A974  2001               	addwfc	btemp^0,w,c
 24412  01A976  6E01               	movwf	btemp^0,c
 24413  01A978  0EFD               	movlw	-3
 24414  01A97A                     L23:
 24415  01A97A  0060  F007  FFE3   	movff	btemp,plusw1
 24416                           
 24417                           ;stkvar	_n @ sp[(-4)+-6]
 24418  01A980  0EF6               	movlw	-10
 24419  01A982  006F FF8C  F001    	movff	plusw1,btemp
 24420  01A988  0EF7               	movlw	-9
 24421  01A98A  50E3               	movf	plusw1,w,c
 24422  01A98C  1001               	iorwf	btemp^0,w,c
 24423  01A98E  A4D8               	btfss	status,2,c
 24424  01A990  D7C6               	goto	l15215
 24425  01A992                     u14150:
 24426                           
 24427                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 24428  01A992  0EF6               	movlw	246
 24429  01A994  26E1               	addwf	fsr1l,f,c
 24430  01A996  0EFF               	movlw	255
 24431  01A998  22E2               	addwfc	fsr1h,f,c
 24432  01A99A  0012               	return		;funcret
 24433  01A99C                     __end_of_memset:
 24434                           	opt callstack 0
 24435                           
 24436 ;; *************** function _printf *****************
 24437 ;; Defined at:
 24438 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 24439 ;; Parameters:    Size  Location     Type
 24440 ;;  fmt             2  [STACK] PTR const unsigned char 
 24441 ;;		 -> STR_67(3), STR_66(3), 
 24442 ;; Auto vars:     Size  Location     Type
 24443 ;;  ap              2  [STACK] PTR void [1]
 24444 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24445 ;;  ret             2    0        int 
 24446 ;; Return value:  Size  Location     Type
 24447 ;;                  2  [STACK] int 
 24448 ;; Registers used:
 24449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24450 ;; Tracked objects:
 24451 ;;		On entry : 3F/3B
 24452 ;;		On exit  : 3F/0
 24453 ;;		Unchanged: 0/0
 24454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24459 ;;Total ram usage:        0 bytes
 24460 ;; Hardware stack levels used:    1
 24461 ;; Hardware stack levels required when called:   23
 24462 ;; This function calls:
 24463 ;;		_vfprintf
 24464 ;; This function is called by:
 24465 ;;		_eaDogM_WriteString
 24466 ;;		_send_lcd_data_dma
 24467 ;; This function uses a reentrant model
 24468 ;;
 24469                           
 24470                           	psect	text88
 24471  000CB0                     __ptext88:
 24472                           	opt callstack 0
 24473  000CB0                     _printf:
 24474                           	opt callstack 0
 24475                           
 24476                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24477  000CB0  52E6               	movf	postinc1,f,c
 24478  000CB2  52E6               	movf	postinc1,f,c
 24479                           
 24480                           ;stkvar	?_printf @ sp[(-2)+-3]
 24481                           
 24482                           ;incstack = 0
 24483  000CB4  0EFB               	movlw	251
 24484  000CB6  24E1               	addwf	fsr1l,w,c
 24485  000CB8  6E0B               	movwf	(btemp+10)^0,c
 24486  000CBA  0EFF               	movlw	255
 24487  000CBC  20E2               	addwfc	fsr1h,w,c
 24488  000CBE  6E0C               	movwf	(btemp+11)^0,c
 24489                           
 24490                           ;stkvar	_ap @ sp[(-2)+0]
 24491  000CC0  0EFF               	movlw	-1
 24492  000CC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24493  000CC8  0EFE               	movlw	-2
 24494  000CCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24495                           
 24496                           ;stkvar	_ap @ sp[(-2)+0]
 24497  000CD0  0EFE               	movlw	254
 24498  000CD2  24E1               	addwf	fsr1l,w,c
 24499  000CD4  6E01               	movwf	btemp^0,c
 24500  000CD6  0EFF               	movlw	255
 24501  000CD8  20E2               	addwfc	fsr1h,w,c
 24502  000CDA  6E02               	movwf	(btemp+1)^0,c
 24503  000CDC  0060  F007  FFE6   	movff	btemp,postinc1
 24504  000CE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24505                           
 24506                           ;stkvar	_fmt @ sp[(-4)+-3]
 24507  000CE8  0EF9               	movlw	-7
 24508  000CEA  006F FF8F FFE6     	movff	plusw1,postinc1
 24509  000CF0  006F FF8F FFE6     	movff	plusw1,postinc1
 24510  000CF6  0E00               	movlw	0
 24511  000CF8  6EE6               	movwf	postinc1,c
 24512  000CFA  0E00               	movlw	0
 24513  000CFC  6EE6               	movwf	postinc1,c
 24514  000CFE  ECCE  F0FE         	call	_vfprintf	;wreg free
 24515                           
 24516                           ; BSR set to: 0
 24517                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 24518  000D02  52E5               	movf	postdec1,f,c
 24519  000D04  52E5               	movf	postdec1,f,c
 24520  000D06  52E5               	movf	postdec1,f,c
 24521  000D08  50E7               	movf	indf1,w,c
 24522  000D0A  5EE1               	subwf	fsr1l,f,c
 24523  000D0C  0E00               	movlw	0
 24524  000D0E  5AE2               	subwfb	fsr1h,f,c
 24525  000D10  0012               	return		;funcret
 24526  000D12                     __end_of_printf:
 24527                           	opt callstack 0
 24528                           
 24529 ;; *************** function _vfprintf *****************
 24530 ;; Defined at:
 24531 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24532 ;; Parameters:    Size  Location     Type
 24533 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24534 ;;		 -> f(6), NULL(0), 
 24535 ;;  fmt             2  [STACK] PTR const unsigned char 
 24536 ;;		 -> STR_87(127), STR_85(3), STR_84(3), STR_83(19), 
 24537 ;;		 -> STR_82(19), STR_81(19), STR_80(19), STR_79(19), 
 24538 ;;		 -> STR_78(19), STR_77(24), STR_76(15), STR_75(15), 
 24539 ;;		 -> STR_74(15), STR_73(10), STR_72(10), STR_71(19), 
 24540 ;;		 -> STR_70(19), STR_67(3), STR_66(3), STR_65(14), 
 24541 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 24542 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 24543 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 24544 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 24545 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 24546 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 24547 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 24548 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 24549 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 24550 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 24551 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 24552 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 24553 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 24554 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 24555 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 24556 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 24557 ;;  ap              2  [STACK] PTR PTR void 
 24558 ;;		 -> ap(2), ap(2), 
 24559 ;; Auto vars:     Size  Location     Type
 24560 ;;  cfmt            2  [STACK] PTR unsigned char 
 24561 ;;		 -> STR_87(127), STR_85(3), STR_84(3), STR_83(19), 
 24562 ;;		 -> STR_82(19), STR_81(19), STR_80(19), STR_79(19), 
 24563 ;;		 -> STR_78(19), STR_77(24), STR_76(15), STR_75(15), 
 24564 ;;		 -> STR_74(15), STR_73(10), STR_72(10), STR_71(19), 
 24565 ;;		 -> STR_70(19), STR_67(3), STR_66(3), STR_65(14), 
 24566 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 24567 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 24568 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 24569 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 24570 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 24571 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 24572 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 24573 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 24574 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 24575 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 24576 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 24577 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 24578 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 24579 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 24580 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 24581 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 24582 ;; Return value:  Size  Location     Type
 24583 ;;                  2  [STACK] int 
 24584 ;; Registers used:
 24585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24586 ;; Tracked objects:
 24587 ;;		On entry : 0/2
 24588 ;;		On exit  : 3F/0
 24589 ;;		Unchanged: 0/0
 24590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24595 ;;Total ram usage:        0 bytes
 24596 ;; Hardware stack levels used:    1
 24597 ;; Hardware stack levels required when called:   22
 24598 ;; This function calls:
 24599 ;;		_vfpfcnvrt
 24600 ;; This function is called by:
 24601 ;;		_sprintf
 24602 ;;		_printf
 24603 ;; This function uses a reentrant model
 24604 ;;
 24605                           
 24606                           	psect	text89
 24607  01FD9C                     __ptext89:
 24608                           	opt callstack 0
 24609  01FD9C                     _vfprintf:
 24610                           	opt callstack 0
 24611                           
 24612                           ; BSR set to: 0
 24613                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24614  01FD9C  52E6               	movf	postinc1,f,c
 24615  01FD9E  52E6               	movf	postinc1,f,c
 24616                           
 24617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 24618                           ;stkvar	_fmt @ sp[(-2)+-4]
 24619                           
 24620                           ;incstack = 0
 24621 ;; hardware stack exceeded
 24622  01FDA0  0EFA               	movlw	-6
 24623  01FDA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24624  01FDA8  0EFB               	movlw	-5
 24625  01FDAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24626                           
 24627                           ;stkvar	_cfmt @ sp[(-2)+0]
 24628  01FDB0  0EFF               	movlw	-1
 24629  01FDB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24630  01FDB8  0EFE               	movlw	-2
 24631  01FDBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24632                           
 24633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 24634  01FDC0  0100               	movlb	0	; () banked
 24635  01FDC2  6BC8               	clrf	_nout& (0+255),b
 24636  01FDC4  6BC9               	clrf	(_nout+1)& (0+255),b
 24637                           
 24638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24639  01FDC6  D021               	goto	l16203
 24640  01FDC8                     l16201:
 24641                           
 24642                           ; BSR set to: 0
 24643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 24644                           ;stkvar	_ap @ sp[(-2)+-6]
 24645  01FDC8  0EF8               	movlw	-8
 24646  01FDCA  006F FF8F FFE6     	movff	plusw1,postinc1
 24647  01FDD0  006F FF8F FFE6     	movff	plusw1,postinc1
 24648                           
 24649                           ;stkvar	_cfmt @ sp[(-4)+0]
 24650  01FDD6  0EFC               	movlw	252
 24651  01FDD8  24E1               	addwf	fsr1l,w,c
 24652  01FDDA  6E01               	movwf	btemp^0,c
 24653  01FDDC  0EFF               	movlw	255
 24654  01FDDE  20E2               	addwfc	fsr1h,w,c
 24655  01FDE0  6E02               	movwf	(btemp+1)^0,c
 24656  01FDE2  0060  F007  FFE6   	movff	btemp,postinc1
 24657  01FDE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24658                           
 24659                           ;stkvar	_fp @ sp[(-6)+-2]
 24660  01FDEE  0EF8               	movlw	-8
 24661  01FDF0  006F FF8F FFE6     	movff	plusw1,postinc1
 24662  01FDF6  006F FF8F FFE6     	movff	plusw1,postinc1
 24663  01FDFC  EC4A  F09B         	call	_vfpfcnvrt	;wreg free
 24664  01FE00  5001               	movf	btemp^0,w,c
 24665  01FE02  0100               	movlb	0	; () banked
 24666  01FE04  27C8               	addwf	_nout& (0+255),f,b
 24667  01FE06  5002               	movf	(btemp+1)^0,w,c
 24668  01FE08  23C9               	addwfc	(_nout+1)& (0+255),f,b
 24669  01FE0A                     l16203:
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24673                           ;stkvar	_cfmt @ sp[(-2)+0]
 24674  01FE0A  50E1               	movf	fsr1l,w,c
 24675  01FE0C  0FFE               	addlw	-2
 24676  01FE0E  6ED9               	movwf	fsr2l,c
 24677  01FE10  50E2               	movf	fsr1h,w,c
 24678  01FE12  6EDA               	movwf	fsr2h,c
 24679  01FE14  0EFF               	movlw	255
 24680  01FE16  22DA               	addwfc	fsr2h,f,c
 24681  01FE18  006F FF7B FFF6     	movff	postinc2,tblptrl
 24682  01FE1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 24683  01FE24                     	if	0	;tblptru may be non-zero
 24684  01FE24                     	endif
 24685  01FE24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24686  01FE24  0E00               	movlw	low (__mediumconst shr (0+16))
 24687  01FE26  6EF8               	movwf	tblptru,c
 24688  01FE28                     	endif
 24689  01FE28  0008               	tblrd		*
 24690  01FE2A  50F5               	movf	tablat,w,c
 24691  01FE2C  0900               	iorlw	0
 24692  01FE2E  A4D8               	btfss	status,2,c
 24693  01FE30  D7CB               	goto	l16201
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 24697  01FE32  0060  F320  F001   	movff	_nout,btemp
 24698  01FE38  0060  F324  F002   	movff	_nout+1,btemp+1
 24699                           
 24700                           ; BSR set to: 0
 24701                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 24702  01FE3E  0EF8               	movlw	248
 24703  01FE40  26E1               	addwf	fsr1l,f,c
 24704  01FE42  0EFF               	movlw	255
 24705  01FE44  22E2               	addwfc	fsr1h,f,c
 24706  01FE46  0012               	return		;funcret
 24707  01FE48                     __end_of_vfprintf:
 24708                           	opt callstack 0
 24709                           
 24710 ;; *************** function _vfpfcnvrt *****************
 24711 ;; Defined at:
 24712 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24713 ;; Parameters:    Size  Location     Type
 24714 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24715 ;;		 -> f(6), NULL(0), 
 24716 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 24717 ;;		 -> cfmt(2), 
 24718 ;;  ap              2  [STACK] PTR PTR void 
 24719 ;;		 -> ap(2), ap(2), 
 24720 ;; Auto vars:     Size  Location     Type
 24721 ;;  llu             8  [STACK] unsigned long long 
 24722 ;;  ll              8  [STACK] long long 
 24723 ;;  f               4  [STACK] long long 
 24724 ;;  ct              3  [STACK] unsigned char [3]
 24725 ;;  vp              3    0        PTR void 
 24726 ;;  cp              2  [STACK] PTR unsigned char 
 24727 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_69(9), 
 24728 ;;		 -> STR_68(12), D.lcd(480), D(482), T(144), 
 24729 ;;		 -> STR_3(5), V(192), 
 24730 ;;  i               2    0        int 
 24731 ;;  done            2    0        int 
 24732 ;;  c               1  [STACK] unsigned char 
 24733 ;; Return value:  Size  Location     Type
 24734 ;;                  2  [STACK] int 
 24735 ;; Registers used:
 24736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24737 ;; Tracked objects:
 24738 ;;		On entry : 0/0
 24739 ;;		On exit  : 0/0
 24740 ;;		Unchanged: 0/0
 24741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24746 ;;Total ram usage:        0 bytes
 24747 ;; Hardware stack levels used:    1
 24748 ;; Hardware stack levels required when called:   21
 24749 ;; This function calls:
 24750 ;;		_atoi
 24751 ;;		_ctoa
 24752 ;;		_dtoa
 24753 ;;		_efgtoa
 24754 ;;		_fputc
 24755 ;;		_isdigit
 24756 ;;		_isupper
 24757 ;;		_stoa
 24758 ;;		_strncmp
 24759 ;;		_tolower
 24760 ;;		_utoa
 24761 ;;		_xtoa
 24762 ;; This function is called by:
 24763 ;;		_vfprintf
 24764 ;; This function uses a reentrant model
 24765 ;;
 24766                           
 24767                           	psect	text90
 24768  013694                     __ptext90:
 24769                           	opt callstack 0
 24770  013694                     _vfpfcnvrt:
 24771                           	opt callstack 0
 24772                           
 24773                           ; BSR set to: 0
 24774                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24775  013694  0E20               	movlw	32
 24776  013696  26E1               	addwf	fsr1l,f,c
 24777  013698  0E00               	movlw	0
 24778  01369A  22E2               	addwfc	fsr1h,f,c
 24779                           
 24780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 24781                           ;stkvar	_fmt @ sp[(-32)+-4]
 24782                           
 24783                           ;incstack = 0
 24784 ;; hardware stack exceeded
 24785  01369C  0EDC               	movlw	-36
 24786  01369E  006F FF8F FFD9     	movff	plusw1,fsr2l
 24787  0136A4  0EDD               	movlw	-35
 24788  0136A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 24789  0136AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 24790  0136B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 24791  0136B8                     	if	0	;tblptru may be non-zero
 24792  0136B8                     	endif
 24793  0136B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24794  0136B8  0E00               	movlw	low (__mediumconst shr (0+16))
 24795  0136BA  6EF8               	movwf	tblptru,c
 24796  0136BC                     	endif
 24797  0136BC  0008               	tblrd		*
 24798  0136BE  50F5               	movf	tablat,w,c
 24799  0136C0  0A25               	xorlw	37
 24800  0136C2  A4D8               	btfss	status,2,c
 24801  0136C4  EFF1  F0A2         	goto	l16085
 24802                           
 24803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 24804                           ;stkvar	_fmt @ sp[(-32)+-4]
 24805  0136C8  0EDC               	movlw	-36
 24806  0136CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 24807  0136D0  0EDD               	movlw	-35
 24808  0136D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 24809  0136D8  2ADE               	incf	postinc2,f,c
 24810  0136DA  0E00               	movlw	0
 24811  0136DC  22DD               	addwfc	postdec2,f,c
 24812                           
 24813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 24814  0136DE  6A3A               	clrf	_width^0,c
 24815  0136E0  6A3B               	clrf	(_width+1)^0,c
 24816  0136E2  6A3E               	clrf	_flags^0,c
 24817  0136E4  6A3F               	clrf	(_flags+1)^0,c
 24818                           
 24819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 24820  0136E6  683C               	setf	_prec^0,c
 24821  0136E8  683D               	setf	(_prec+1)^0,c
 24822                           
 24823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 24824                           ;stkvar	_fmt @ sp[(-32)+-4]
 24825  0136EA  0EDC               	movlw	-36
 24826  0136EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 24827  0136F2  0EDD               	movlw	-35
 24828  0136F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 24829  0136FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 24830  013700  006F FF77 FFF7     	movff	postdec2,tblptrh
 24831  013706                     	if	0	;tblptru may be non-zero
 24832  013706                     	endif
 24833  013706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24834  013706  0E00               	movlw	low (__mediumconst shr (0+16))
 24835  013708  6EF8               	movwf	tblptru,c
 24836  01370A                     	endif
 24837  01370A  0008               	tblrd		*
 24838  01370C  50F5               	movf	tablat,w,c
 24839  01370E  0A2A               	xorlw	42
 24840  013710  A4D8               	btfss	status,2,c
 24841  013712  D031               	goto	l15903
 24842                           
 24843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 24844                           ;stkvar	_fmt @ sp[(-32)+-4]
 24845  013714  0EDC               	movlw	-36
 24846  013716  006F FF8F FFD9     	movff	plusw1,fsr2l
 24847  01371C  0EDD               	movlw	-35
 24848  01371E  006F FF8F FFDA     	movff	plusw1,fsr2h
 24849  013724  2ADE               	incf	postinc2,f,c
 24850  013726  0E00               	movlw	0
 24851  013728  22DD               	addwfc	postdec2,f,c
 24852                           
 24853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 24854                           ;stkvar	_ap @ sp[(-32)+-6]
 24855  01372A  0EDA               	movlw	-38
 24856  01372C  006F FF8F FFD9     	movff	plusw1,fsr2l
 24857  013732  0EDB               	movlw	-37
 24858  013734  006F FF8F FFDA     	movff	plusw1,fsr2h
 24859  01373A  0E02               	movlw	2
 24860  01373C  5EDE               	subwf	postinc2,f,c
 24861  01373E  0E00               	movlw	0
 24862  013740  5ADD               	subwfb	postdec2,f,c
 24863  013742  006F FF78  F00B    	movff	postinc2,btemp+10
 24864  013748  006F FF74  F00C    	movff	postdec2,btemp+11
 24865  01374E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 24866  013754  0060  F033  FFDA   	movff	btemp+11,fsr2h
 24867  01375A  006F FF78  F03A    	movff	postinc2,_width
 24868  013760  006F FF74  F03B    	movff	postdec2,_width+1
 24869                           
 24870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 24871  013766  AE3B               	btfss	(_width+1)^0,7,c
 24872  013768  D066               	goto	u15420
 24873                           
 24874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 24875  01376A  803E               	bsf	_flags^0,0,c
 24876                           
 24877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 24878  01376C  6C3A               	negf	_width^0,c
 24879  01376E  1E3B               	comf	(_width+1)^0,f,c
 24880  013770  B0D8               	btfsc	status,0,c
 24881  013772  2A3B               	incf	(_width+1)^0,f,c
 24882  013774  D060               	goto	u15420
 24883  013776                     l15903:
 24884                           
 24885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 24886                           ;stkvar	_fmt @ sp[(-32)+-4]
 24887  013776  0EDC               	movlw	-36
 24888  013778  006F FF8F FFD9     	movff	plusw1,fsr2l
 24889  01377E  0EDD               	movlw	-35
 24890  013780  006F FF8F FFDA     	movff	plusw1,fsr2h
 24891  013786  006F FF78  F00B    	movff	postinc2,btemp+10
 24892  01378C  006F FF74  F00C    	movff	postdec2,btemp+11
 24893  013792  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24894  013798  0060  F033  FFE6   	movff	btemp+11,postinc1
 24895  01379E  EC59  F0DB         	call	_atoi	;wreg free
 24896  0137A2  0060  F004  F03A   	movff	btemp,_width
 24897  0137A8  0060  F008  F03B   	movff	btemp+1,_width+1
 24898                           
 24899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 24900  0137AE  D00B               	goto	l15907
 24901  0137B0                     l15905:
 24902                           
 24903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 24904                           ;stkvar	_fmt @ sp[(-32)+-4]
 24905  0137B0  0EDC               	movlw	-36
 24906  0137B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 24907  0137B8  0EDD               	movlw	-35
 24908  0137BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 24909  0137C0  2ADE               	incf	postinc2,f,c
 24910  0137C2  0E00               	movlw	0
 24911  0137C4  22DD               	addwfc	postdec2,f,c
 24912  0137C6                     l15907:
 24913  0137C6  0ED0               	movlw	208
 24914  0137C8  6E0B               	movwf	(btemp+10)^0,c
 24915  0137CA  0EFF               	movlw	255
 24916  0137CC  6E0C               	movwf	(btemp+11)^0,c
 24917                           
 24918                           ;stkvar	_fmt @ sp[(-32)+-4]
 24919  0137CE  0EDC               	movlw	-36
 24920  0137D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 24921  0137D6  0EDD               	movlw	-35
 24922  0137D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 24923  0137DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 24924  0137E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 24925  0137EA                     	if	0	;tblptru may be non-zero
 24926  0137EA                     	endif
 24927  0137EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24928  0137EA  0E00               	movlw	low (__mediumconst shr (0+16))
 24929  0137EC  6EF8               	movwf	tblptru,c
 24930  0137EE                     	endif
 24931  0137EE  0008               	tblrd		*
 24932  0137F0  50F5               	movf	tablat,w,c
 24933  0137F2  6E09               	movwf	(btemp+8)^0,c
 24934  0137F4  6A0A               	clrf	(btemp+9)^0,c
 24935  0137F6  500B               	movf	(btemp+10)^0,w,c
 24936  0137F8  2609               	addwf	(btemp+8)^0,f,c
 24937  0137FA  500C               	movf	(btemp+11)^0,w,c
 24938  0137FC  220A               	addwfc	(btemp+9)^0,f,c
 24939  0137FE  500A               	movf	(btemp+9)^0,w,c
 24940  013800  E106               	bnz	u15400
 24941  013802  0E0A               	movlw	10
 24942  013804  5C09               	subwf	(btemp+8)^0,w,c
 24943  013806  B0D8               	btfsc	status,0,c
 24944  013808  D002               	goto	u15400
 24945  01380A  0E01               	movlw	1
 24946  01380C  D001               	goto	u15410
 24947  01380E                     u15400:
 24948  01380E  0E00               	movlw	0
 24949  013810                     u15410:
 24950  013810  6E0B               	movwf	(btemp+10)^0,c
 24951  013812  6A0C               	clrf	(btemp+11)^0,c
 24952                           
 24953                           ;stkvar	_vfpfcnvrt$6880 @ sp[(-32)+4]
 24954  013814  0EE4               	movlw	-28
 24955  013816  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24956  01381C  0EE5               	movlw	-27
 24957  01381E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24958                           
 24959                           ;stkvar	_vfpfcnvrt$6880 @ sp[(-32)+4]
 24960  013824  0EE4               	movlw	-28
 24961  013826  006F FF8C  F001    	movff	plusw1,btemp
 24962  01382C  0EE5               	movlw	-27
 24963  01382E  50E3               	movf	plusw1,w,c
 24964  013830  1001               	iorwf	btemp^0,w,c
 24965  013832  A4D8               	btfss	status,2,c
 24966  013834  D7BD               	goto	l15905
 24967  013836                     u15420:
 24968                           
 24969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 24970                           ;stkvar	_fmt @ sp[(-32)+-4]
 24971  013836  0EDC               	movlw	-36
 24972  013838  006F FF8F FFD9     	movff	plusw1,fsr2l
 24973  01383E  0EDD               	movlw	-35
 24974  013840  006F FF8F FFDA     	movff	plusw1,fsr2h
 24975  013846  006F FF7B FFF6     	movff	postinc2,tblptrl
 24976  01384C  006F FF77 FFF7     	movff	postdec2,tblptrh
 24977  013852                     	if	0	;tblptru may be non-zero
 24978  013852                     	endif
 24979  013852                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24980  013852  0E00               	movlw	low (__mediumconst shr (0+16))
 24981  013854  6EF8               	movwf	tblptru,c
 24982  013856                     	endif
 24983  013856  0008               	tblrd		*
 24984  013858  50F5               	movf	tablat,w,c
 24985  01385A  0A2E               	xorlw	46
 24986  01385C  A4D8               	btfss	status,2,c
 24987  01385E  D0AC               	goto	u15470
 24988                           
 24989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 24990  013860  6A3C               	clrf	_prec^0,c
 24991  013862  6A3D               	clrf	(_prec+1)^0,c
 24992                           
 24993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 24994                           ;stkvar	_fmt @ sp[(-32)+-4]
 24995  013864  0EDC               	movlw	-36
 24996  013866  006F FF8F FFD9     	movff	plusw1,fsr2l
 24997  01386C  0EDD               	movlw	-35
 24998  01386E  006F FF8F FFDA     	movff	plusw1,fsr2h
 24999  013874  2ADE               	incf	postinc2,f,c
 25000  013876  0E00               	movlw	0
 25001  013878  22DD               	addwfc	postdec2,f,c
 25002                           
 25003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25004                           ;stkvar	_fmt @ sp[(-32)+-4]
 25005  01387A  0EDC               	movlw	-36
 25006  01387C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25007  013882  0EDD               	movlw	-35
 25008  013884  006F FF8F FFDA     	movff	plusw1,fsr2h
 25009  01388A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25010  013890  006F FF77 FFF7     	movff	postdec2,tblptrh
 25011  013896                     	if	0	;tblptru may be non-zero
 25012  013896                     	endif
 25013  013896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25014  013896  0E00               	movlw	low (__mediumconst shr (0+16))
 25015  013898  6EF8               	movwf	tblptru,c
 25016  01389A                     	endif
 25017  01389A  0008               	tblrd		*
 25018  01389C  50F5               	movf	tablat,w,c
 25019  01389E  0A2A               	xorlw	42
 25020  0138A0  A4D8               	btfss	status,2,c
 25021  0138A2  D02A               	goto	l15925
 25022                           
 25023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25024                           ;stkvar	_fmt @ sp[(-32)+-4]
 25025  0138A4  0EDC               	movlw	-36
 25026  0138A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25027  0138AC  0EDD               	movlw	-35
 25028  0138AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25029  0138B4  2ADE               	incf	postinc2,f,c
 25030  0138B6  0E00               	movlw	0
 25031  0138B8  22DD               	addwfc	postdec2,f,c
 25032                           
 25033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25034                           ;stkvar	_ap @ sp[(-32)+-6]
 25035  0138BA  0EDA               	movlw	-38
 25036  0138BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25037  0138C2  0EDB               	movlw	-37
 25038  0138C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25039  0138CA  0E02               	movlw	2
 25040  0138CC  5EDE               	subwf	postinc2,f,c
 25041  0138CE  0E00               	movlw	0
 25042  0138D0  5ADD               	subwfb	postdec2,f,c
 25043  0138D2  006F FF78  F00B    	movff	postinc2,btemp+10
 25044  0138D8  006F FF74  F00C    	movff	postdec2,btemp+11
 25045  0138DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25046  0138E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25047  0138EA  006F FF78  F03C    	movff	postinc2,_prec
 25048  0138F0  006F FF74  F03D    	movff	postdec2,_prec+1
 25049                           
 25050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25051  0138F6  D060               	goto	u15470
 25052  0138F8                     l15925:
 25053                           
 25054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25055                           ;stkvar	_fmt @ sp[(-32)+-4]
 25056  0138F8  0EDC               	movlw	-36
 25057  0138FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25058  013900  0EDD               	movlw	-35
 25059  013902  006F FF8F FFDA     	movff	plusw1,fsr2h
 25060  013908  006F FF78  F00B    	movff	postinc2,btemp+10
 25061  01390E  006F FF74  F00C    	movff	postdec2,btemp+11
 25062  013914  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25063  01391A  0060  F033  FFE6   	movff	btemp+11,postinc1
 25064  013920  EC59  F0DB         	call	_atoi	;wreg free
 25065  013924  0060  F004  F03C   	movff	btemp,_prec
 25066  01392A  0060  F008  F03D   	movff	btemp+1,_prec+1
 25067                           
 25068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25069  013930  D00B               	goto	l15929
 25070  013932                     l15927:
 25071                           
 25072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25073                           ;stkvar	_fmt @ sp[(-32)+-4]
 25074  013932  0EDC               	movlw	-36
 25075  013934  006F FF8F FFD9     	movff	plusw1,fsr2l
 25076  01393A  0EDD               	movlw	-35
 25077  01393C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25078  013942  2ADE               	incf	postinc2,f,c
 25079  013944  0E00               	movlw	0
 25080  013946  22DD               	addwfc	postdec2,f,c
 25081  013948                     l15929:
 25082  013948  0ED0               	movlw	208
 25083  01394A  6E0B               	movwf	(btemp+10)^0,c
 25084  01394C  0EFF               	movlw	255
 25085  01394E  6E0C               	movwf	(btemp+11)^0,c
 25086                           
 25087                           ;stkvar	_fmt @ sp[(-32)+-4]
 25088  013950  0EDC               	movlw	-36
 25089  013952  006F FF8F FFD9     	movff	plusw1,fsr2l
 25090  013958  0EDD               	movlw	-35
 25091  01395A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25092  013960  006F FF7B FFF6     	movff	postinc2,tblptrl
 25093  013966  006F FF77 FFF7     	movff	postdec2,tblptrh
 25094  01396C                     	if	0	;tblptru may be non-zero
 25095  01396C                     	endif
 25096  01396C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25097  01396C  0E00               	movlw	low (__mediumconst shr (0+16))
 25098  01396E  6EF8               	movwf	tblptru,c
 25099  013970                     	endif
 25100  013970  0008               	tblrd		*
 25101  013972  50F5               	movf	tablat,w,c
 25102  013974  6E09               	movwf	(btemp+8)^0,c
 25103  013976  6A0A               	clrf	(btemp+9)^0,c
 25104  013978  500B               	movf	(btemp+10)^0,w,c
 25105  01397A  2609               	addwf	(btemp+8)^0,f,c
 25106  01397C  500C               	movf	(btemp+11)^0,w,c
 25107  01397E  220A               	addwfc	(btemp+9)^0,f,c
 25108  013980  500A               	movf	(btemp+9)^0,w,c
 25109  013982  E106               	bnz	u15450
 25110  013984  0E0A               	movlw	10
 25111  013986  5C09               	subwf	(btemp+8)^0,w,c
 25112  013988  B0D8               	btfsc	status,0,c
 25113  01398A  D002               	goto	u15450
 25114  01398C  0E01               	movlw	1
 25115  01398E  D001               	goto	u15460
 25116  013990                     u15450:
 25117  013990  0E00               	movlw	0
 25118  013992                     u15460:
 25119  013992  6E0B               	movwf	(btemp+10)^0,c
 25120  013994  6A0C               	clrf	(btemp+11)^0,c
 25121                           
 25122                           ;stkvar	_vfpfcnvrt$6881 @ sp[(-32)+0]
 25123  013996  0EE0               	movlw	-32
 25124  013998  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25125  01399E  0EE1               	movlw	-31
 25126  0139A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25127                           
 25128                           ;stkvar	_vfpfcnvrt$6881 @ sp[(-32)+0]
 25129  0139A6  0EE0               	movlw	-32
 25130  0139A8  006F FF8C  F001    	movff	plusw1,btemp
 25131  0139AE  0EE1               	movlw	-31
 25132  0139B0  50E3               	movf	plusw1,w,c
 25133  0139B2  1001               	iorwf	btemp^0,w,c
 25134  0139B4  A4D8               	btfss	status,2,c
 25135  0139B6  D7BD               	goto	l15927
 25136  0139B8                     u15470:
 25137                           
 25138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25139                           ;stkvar	_fmt @ sp[(-32)+-4]
 25140  0139B8  0EDC               	movlw	-36
 25141  0139BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25142  0139C0  0EDD               	movlw	-35
 25143  0139C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25144  0139C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 25145  0139CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 25146  0139D4                     	if	0	;tblptru may be non-zero
 25147  0139D4                     	endif
 25148  0139D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25149  0139D4  0E00               	movlw	low (__mediumconst shr (0+16))
 25150  0139D6  6EF8               	movwf	tblptru,c
 25151  0139D8                     	endif
 25152  0139D8  0008               	tblrd		*
 25153  0139DA  50F5               	movf	tablat,w,c
 25154  0139DC  6EE6               	movwf	postinc1,c
 25155  0139DE  0E00               	movlw	0
 25156  0139E0  6EE6               	movwf	postinc1,c
 25157  0139E2  EC42  F003         	call	_tolower	;wreg free
 25158                           
 25159                           ;stkvar	_ct @ sp[(-32)+26]
 25160  0139E6  0EFA               	movlw	-6
 25161  0139E8  0060  F007  FFE3   	movff	btemp,plusw1
 25162                           
 25163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25164                           ;stkvar	_ct @ sp[(-32)+26]
 25165  0139EE  0EFA               	movlw	-6
 25166  0139F0  50E3               	movf	plusw1,w,c
 25167  0139F2  B4D8               	btfsc	status,2,c
 25168  0139F4  D05B               	goto	l15945
 25169                           
 25170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25171                           ;stkvar	_ct @ sp[(-32)+26]
 25172  0139F6  0EFB               	movlw	251
 25173  0139F8  24E1               	addwf	fsr1l,w,c
 25174  0139FA  6ED9               	movwf	fsr2l,c
 25175  0139FC  0EFF               	movlw	255
 25176  0139FE  20E2               	addwfc	fsr1h,w,c
 25177  013A00  6EDA               	movwf	fsr2h,c
 25178                           
 25179                           ;stkvar	_fmt @ sp[(-32)+-4]
 25180  013A02  0EDC               	movlw	-36
 25181  013A04  006F FF8F FFE9     	movff	plusw1,fsr0l
 25182  013A0A  0EDD               	movlw	-35
 25183  013A0C  006F FF8F FFEA     	movff	plusw1,fsr0h
 25184  013A12  006F FFB8  F00B    	movff	postinc0,btemp+10
 25185  013A18  006F FFB4  F00C    	movff	postdec0,btemp+11
 25186  013A1E  0E01               	movlw	1
 25187  013A20  260B               	addwf	(btemp+10)^0,f,c
 25188  013A22  0E00               	movlw	0
 25189  013A24  220C               	addwfc	(btemp+11)^0,f,c
 25190  013A26  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25191  013A2C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25192  013A32                     	if	0	;tblptru may be non-zero
 25193  013A32                     	endif
 25194  013A32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25195  013A32  0E00               	movlw	low (__mediumconst shr (0+16))
 25196  013A34  6EF8               	movwf	tblptru,c
 25197  013A36                     	endif
 25198  013A36  0008               	tblrd		*
 25199  013A38  50F5               	movf	tablat,w,c
 25200  013A3A  6EE6               	movwf	postinc1,c
 25201  013A3C  0E00               	movlw	0
 25202  013A3E  6EE6               	movwf	postinc1,c
 25203  013A40  EC42  F003         	call	_tolower	;wreg free
 25204  013A44  5001               	movf	btemp^0,w,c
 25205  013A46  6EDF               	movwf	indf2,c
 25206                           
 25207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 25208                           ;stkvar	_ct @ sp[(-32)+26]
 25209  013A48  0EFB               	movlw	251
 25210  013A4A  24E1               	addwf	fsr1l,w,c
 25211  013A4C  6ED9               	movwf	fsr2l,c
 25212  013A4E  0EFF               	movlw	255
 25213  013A50  20E2               	addwfc	fsr1h,w,c
 25214  013A52  6EDA               	movwf	fsr2h,c
 25215  013A54  50DF               	movf	indf2,w,c
 25216  013A56  B4D8               	btfsc	status,2,c
 25217  013A58  D029               	goto	l15945
 25218                           
 25219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 25220                           ;stkvar	_ct @ sp[(-32)+26]
 25221  013A5A  0EFC               	movlw	252
 25222  013A5C  24E1               	addwf	fsr1l,w,c
 25223  013A5E  6ED9               	movwf	fsr2l,c
 25224  013A60  0EFF               	movlw	255
 25225  013A62  20E2               	addwfc	fsr1h,w,c
 25226  013A64  6EDA               	movwf	fsr2h,c
 25227                           
 25228                           ;stkvar	_fmt @ sp[(-32)+-4]
 25229  013A66  0EDC               	movlw	-36
 25230  013A68  006F FF8F FFE9     	movff	plusw1,fsr0l
 25231  013A6E  0EDD               	movlw	-35
 25232  013A70  006F FF8F FFEA     	movff	plusw1,fsr0h
 25233  013A76  006F FFB8  F00B    	movff	postinc0,btemp+10
 25234  013A7C  006F FFB4  F00C    	movff	postdec0,btemp+11
 25235  013A82  0E02               	movlw	2
 25236  013A84  260B               	addwf	(btemp+10)^0,f,c
 25237  013A86  0E00               	movlw	0
 25238  013A88  220C               	addwfc	(btemp+11)^0,f,c
 25239  013A8A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25240  013A90  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25241  013A96                     	if	0	;tblptru may be non-zero
 25242  013A96                     	endif
 25243  013A96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25244  013A96  0E00               	movlw	low (__mediumconst shr (0+16))
 25245  013A98  6EF8               	movwf	tblptru,c
 25246  013A9A                     	endif
 25247  013A9A  0008               	tblrd		*
 25248  013A9C  50F5               	movf	tablat,w,c
 25249  013A9E  6EE6               	movwf	postinc1,c
 25250  013AA0  0E00               	movlw	0
 25251  013AA2  6EE6               	movwf	postinc1,c
 25252  013AA4  EC42  F003         	call	_tolower	;wreg free
 25253  013AA8  5001               	movf	btemp^0,w,c
 25254  013AAA  6EDF               	movwf	indf2,c
 25255  013AAC                     l15945:
 25256                           
 25257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 25258                           ;stkvar	_fmt @ sp[(-32)+-4]
 25259  013AAC  0EDC               	movlw	-36
 25260  013AAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25261  013AB4  0EDD               	movlw	-35
 25262  013AB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25263  013ABC  006F FF7B FFF6     	movff	postinc2,tblptrl
 25264  013AC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 25265  013AC8                     	if	0	;tblptru may be non-zero
 25266  013AC8                     	endif
 25267  013AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25268  013AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 25269  013ACA  6EF8               	movwf	tblptru,c
 25270  013ACC                     	endif
 25271  013ACC  0008               	tblrd		*
 25272  013ACE  50F5               	movf	tablat,w,c
 25273  013AD0  0A63               	xorlw	99
 25274  013AD2  A4D8               	btfss	status,2,c
 25275  013AD4  D037               	goto	l15955
 25276                           
 25277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 25278                           ;stkvar	_fmt @ sp[(-32)+-4]
 25279  013AD6  0EDC               	movlw	-36
 25280  013AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25281  013ADE  0EDD               	movlw	-35
 25282  013AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25283  013AE6  2ADE               	incf	postinc2,f,c
 25284  013AE8  0E00               	movlw	0
 25285  013AEA  22DD               	addwfc	postdec2,f,c
 25286                           
 25287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 25288                           ;stkvar	_ap @ sp[(-32)+-6]
 25289  013AEC  0EDA               	movlw	-38
 25290  013AEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25291  013AF4  0EDB               	movlw	-37
 25292  013AF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25293  013AFC  0E02               	movlw	2
 25294  013AFE  5EDE               	subwf	postinc2,f,c
 25295  013B00  0E00               	movlw	0
 25296  013B02  5ADD               	subwfb	postdec2,f,c
 25297  013B04  006F FF78  F00B    	movff	postinc2,btemp+10
 25298  013B0A  006F FF74  F00C    	movff	postdec2,btemp+11
 25299  013B10  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25300  013B16  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25301  013B1C  50DF               	movf	indf2,w,c
 25302  013B1E  6E0C               	movwf	(btemp+11)^0,c
 25303                           
 25304                           ;stkvar	_c @ sp[(-32)+31]
 25305  013B20  0EFF               	movlw	-1
 25306  013B22  0060  F033  FFE3   	movff	btemp+11,plusw1
 25307                           
 25308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 25309                           ;stkvar	_c @ sp[(-32)+31]
 25310  013B28  0EFF               	movlw	-1
 25311  013B2A  50E3               	movf	plusw1,w,c
 25312  013B2C  6EE6               	movwf	postinc1,c
 25313                           
 25314                           ;stkvar	_fp @ sp[(-33)+-2]
 25315  013B2E  0EDD               	movlw	-35
 25316  013B30  006F FF8F FFE6     	movff	plusw1,postinc1
 25317  013B36  006F FF8F FFE6     	movff	plusw1,postinc1
 25318  013B3C  ECBC  F002         	call	_ctoa	;wreg free
 25319  013B40  EF1B  F0A3         	goto	l2664
 25320  013B44                     l15955:
 25321                           
 25322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 25323                           ;stkvar	_fmt @ sp[(-32)+-4]
 25324  013B44  0EDC               	movlw	-36
 25325  013B46  006F FF8F FFD9     	movff	plusw1,fsr2l
 25326  013B4C  0EDD               	movlw	-35
 25327  013B4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25328  013B54  006F FF7B FFF6     	movff	postinc2,tblptrl
 25329  013B5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25330  013B60                     	if	0	;tblptru may be non-zero
 25331  013B60                     	endif
 25332  013B60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25333  013B60  0E00               	movlw	low (__mediumconst shr (0+16))
 25334  013B62  6EF8               	movwf	tblptru,c
 25335  013B64                     	endif
 25336  013B64  0008               	tblrd		*
 25337  013B66  50F5               	movf	tablat,w,c
 25338  013B68  0A64               	xorlw	100
 25339  013B6A  B4D8               	btfsc	status,2,c
 25340  013B6C  D015               	goto	u15520
 25341                           
 25342                           ;stkvar	_fmt @ sp[(-32)+-4]
 25343  013B6E  0EDC               	movlw	-36
 25344  013B70  006F FF8F FFD9     	movff	plusw1,fsr2l
 25345  013B76  0EDD               	movlw	-35
 25346  013B78  006F FF8F FFDA     	movff	plusw1,fsr2h
 25347  013B7E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25348  013B84  006F FF77 FFF7     	movff	postdec2,tblptrh
 25349  013B8A                     	if	0	;tblptru may be non-zero
 25350  013B8A                     	endif
 25351  013B8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25352  013B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 25353  013B8C  6EF8               	movwf	tblptru,c
 25354  013B8E                     	endif
 25355  013B8E  0008               	tblrd		*
 25356  013B90  50F5               	movf	tablat,w,c
 25357  013B92  0A69               	xorlw	105
 25358  013B94  A4D8               	btfss	status,2,c
 25359  013B96  D076               	goto	l15967
 25360  013B98                     u15520:
 25361                           
 25362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 25363                           ;stkvar	_fmt @ sp[(-32)+-4]
 25364  013B98  0EDC               	movlw	-36
 25365  013B9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25366  013BA0  0EDD               	movlw	-35
 25367  013BA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25368  013BA8  2ADE               	incf	postinc2,f,c
 25369  013BAA  0E00               	movlw	0
 25370  013BAC  22DD               	addwfc	postdec2,f,c
 25371                           
 25372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 25373                           ;stkvar	_ap @ sp[(-32)+-6]
 25374  013BAE  0EDA               	movlw	-38
 25375  013BB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25376  013BB6  0EDB               	movlw	-37
 25377  013BB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25378  013BBE  0E02               	movlw	2
 25379  013BC0  5EDE               	subwf	postinc2,f,c
 25380  013BC2  0E00               	movlw	0
 25381  013BC4  5ADD               	subwfb	postdec2,f,c
 25382  013BC6  006F FF78  F00B    	movff	postinc2,btemp+10
 25383  013BCC  006F FF74  F00C    	movff	postdec2,btemp+11
 25384  013BD2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25385  013BD8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25386  013BDE  006F FF78  F00B    	movff	postinc2,btemp+10
 25387  013BE4  006F FF74  F00C    	movff	postdec2,btemp+11
 25388                           
 25389                           ;stkvar	_ll @ sp[(-32)+14]
 25390  013BEA  0EEE               	movlw	-18
 25391  013BEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25392  013BF2  0EEF               	movlw	-17
 25393  013BF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25394  013BFA  6A01               	clrf	btemp^0,c
 25395  013BFC  BEE3               	btfsc	plusw1,7,c
 25396  013BFE  6801               	setf	btemp^0,c
 25397  013C00  0EF0               	movlw	-16
 25398  013C02  0060  F007  FFE3   	movff	btemp,plusw1
 25399  013C08  0EF1               	movlw	-15
 25400  013C0A  0060  F007  FFE3   	movff	btemp,plusw1
 25401  013C10  0EF2               	movlw	-14
 25402  013C12  0060  F007  FFE3   	movff	btemp,plusw1
 25403  013C18  0EF3               	movlw	-13
 25404  013C1A  0060  F007  FFE3   	movff	btemp,plusw1
 25405  013C20  0EF4               	movlw	-12
 25406  013C22  0060  F007  FFE3   	movff	btemp,plusw1
 25407  013C28  0EF5               	movlw	-11
 25408  013C2A  0060  F007  FFE3   	movff	btemp,plusw1
 25409  013C30                     l15963:
 25410                           
 25411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 25412                           ;stkvar	_ll @ sp[(-32)+14]
 25413  013C30  50E1               	movf	fsr1l,w,c
 25414  013C32  0FEE               	addlw	-18
 25415  013C34  6ED9               	movwf	fsr2l,c
 25416  013C36  50E2               	movf	fsr1h,w,c
 25417  013C38  6EDA               	movwf	fsr2h,c
 25418  013C3A  0EFF               	movlw	255
 25419  013C3C  22DA               	addwfc	fsr2h,f,c
 25420  013C3E  006F FF7B FFE6     	movff	postinc2,postinc1
 25421  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 25422  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 25423  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 25424  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 25425  013C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 25426  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 25427  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 25428                           
 25429                           ;stkvar	_fp @ sp[(-40)+-2]
 25430  013C6E  0ED6               	movlw	-42
 25431  013C70  006F FF8F FFE6     	movff	plusw1,postinc1
 25432  013C76  006F FF8F FFE6     	movff	plusw1,postinc1
 25433  013C7C  EC58  F0C4         	call	_dtoa	;wreg free
 25434  013C80  EF1B  F0A3         	goto	l2664
 25435  013C84                     l15967:
 25436                           
 25437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 25438  013C84  0E02               	movlw	2
 25439  013C86  6EE6               	movwf	postinc1,c
 25440  013C88  0E00               	movlw	0
 25441  013C8A  6EE6               	movwf	postinc1,c
 25442  013C8C  0EE9               	movlw	low STR_96
 25443  013C8E  6EE6               	movwf	postinc1,c
 25444  013C90  0EFF               	movlw	high STR_96
 25445  013C92  6EE6               	movwf	postinc1,c
 25446                           
 25447                           ;stkvar	_fmt @ sp[(-36)+-4]
 25448  013C94  0ED8               	movlw	-40
 25449  013C96  006F FF8F FFD9     	movff	plusw1,fsr2l
 25450  013C9C  0ED9               	movlw	-39
 25451  013C9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25452  013CA4  006F FF78  F00B    	movff	postinc2,btemp+10
 25453  013CAA  006F FF74  F00C    	movff	postdec2,btemp+11
 25454  013CB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25455  013CB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 25456  013CBC  EC34  F0E2         	call	_strncmp	;wreg free
 25457  013CC0  5001               	movf	btemp^0,w,c
 25458  013CC2  1002               	iorwf	(btemp+1)^0,w,c
 25459  013CC4  B4D8               	btfsc	status,2,c
 25460  013CC6  D022               	goto	u15540
 25461  013CC8  0E02               	movlw	2
 25462  013CCA  6EE6               	movwf	postinc1,c
 25463  013CCC  0E00               	movlw	0
 25464  013CCE  6EE6               	movwf	postinc1,c
 25465  013CD0  0EEF               	movlw	low STR_100
 25466  013CD2  6EE6               	movwf	postinc1,c
 25467  013CD4  0EFF               	movlw	high STR_100
 25468  013CD6  6EE6               	movwf	postinc1,c
 25469                           
 25470                           ;stkvar	_fmt @ sp[(-36)+-4]
 25471  013CD8  0ED8               	movlw	-40
 25472  013CDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25473  013CE0  0ED9               	movlw	-39
 25474  013CE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25475  013CE8  006F FF78  F00B    	movff	postinc2,btemp+10
 25476  013CEE  006F FF74  F00C    	movff	postdec2,btemp+11
 25477  013CF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25478  013CFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 25479  013D00  EC34  F0E2         	call	_strncmp	;wreg free
 25480  013D04  5001               	movf	btemp^0,w,c
 25481  013D06  1002               	iorwf	(btemp+1)^0,w,c
 25482  013D08  A4D8               	btfss	status,2,c
 25483  013D0A  D069               	goto	l15979
 25484  013D0C                     u15540:
 25485                           
 25486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 25487                           ;stkvar	_fmt @ sp[(-32)+-4]
 25488  013D0C  0EDC               	movlw	-36
 25489  013D0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25490  013D14  0EDD               	movlw	-35
 25491  013D16  006F FF8F FFDA     	movff	plusw1,fsr2h
 25492  013D1C  0E02               	movlw	2
 25493  013D1E  26DE               	addwf	postinc2,f,c
 25494  013D20  0E00               	movlw	0
 25495  013D22  22DD               	addwfc	postdec2,f,c
 25496                           
 25497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 25498                           ;stkvar	_ap @ sp[(-32)+-6]
 25499  013D24  0EDA               	movlw	-38
 25500  013D26  006F FF8F FFD9     	movff	plusw1,fsr2l
 25501  013D2C  0EDB               	movlw	-37
 25502  013D2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25503  013D34  0E04               	movlw	4
 25504  013D36  5EDE               	subwf	postinc2,f,c
 25505  013D38  0E00               	movlw	0
 25506  013D3A  5ADD               	subwfb	postdec2,f,c
 25507  013D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 25508  013D42  006F FF74  F00C    	movff	postdec2,btemp+11
 25509  013D48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25510  013D4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25511  013D54  006F FF78  F009    	movff	postinc2,btemp+8
 25512  013D5A  006F FF78  F00A    	movff	postinc2,btemp+9
 25513  013D60  006F FF78  F00B    	movff	postinc2,btemp+10
 25514  013D66  006F FF78  F00C    	movff	postinc2,btemp+11
 25515  013D6C  0060  F024  F011   	movff	btemp+8,btemp+16
 25516  013D72  0060  F028  F012   	movff	btemp+9,btemp+17
 25517  013D78  0060  F02C  F013   	movff	btemp+10,btemp+18
 25518  013D7E  0060  F030  F014   	movff	btemp+11,btemp+19
 25519  013D84  6A15               	clrf	(btemp+20)^0,c
 25520  013D86  BE14               	btfsc	(btemp+19)^0,7,c
 25521  013D88  6815               	setf	(btemp+20)^0,c
 25522  013D8A  0060  F054  F016   	movff	btemp+20,btemp+21
 25523  013D90  0060  F054  F017   	movff	btemp+20,btemp+22
 25524  013D96  0060  F054  F018   	movff	btemp+20,btemp+23
 25525                           
 25526                           ;stkvar	_ll @ sp[(-32)+14]
 25527  013D9C  0EEE               	movlw	-18
 25528  013D9E  0060  F047  FFE3   	movff	btemp+16,plusw1
 25529  013DA4  0EEF               	movlw	-17
 25530  013DA6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25531  013DAC  0EF0               	movlw	-16
 25532  013DAE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25533  013DB4  0EF1               	movlw	-15
 25534  013DB6  0060  F053  FFE3   	movff	btemp+19,plusw1
 25535  013DBC  0EF2               	movlw	-14
 25536  013DBE  0060  F057  FFE3   	movff	btemp+20,plusw1
 25537  013DC4  0EF3               	movlw	-13
 25538  013DC6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25539  013DCC  0EF4               	movlw	-12
 25540  013DCE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25541  013DD4  0EF5               	movlw	-11
 25542  013DD6  0060  F063  FFE3   	movff	btemp+23,plusw1
 25543  013DDC  D729               	goto	l15963
 25544  013DDE                     l15979:
 25545                           
 25546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 25547                           ;stkvar	_ct @ sp[(-32)+26]
 25548  013DDE  0EFA               	movlw	-6
 25549  013DE0  006F FF8C  F001    	movff	plusw1,btemp
 25550  013DE6  0E66               	movlw	102
 25551  013DE8  1801               	xorwf	btemp^0,w,c
 25552  013DEA  A4D8               	btfss	status,2,c
 25553  013DEC  D06E               	goto	l15991
 25554                           
 25555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 25556                           ;stkvar	_fmt @ sp[(-32)+-4]
 25557  013DEE  0EDC               	movlw	-36
 25558  013DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25559  013DF6  0EDD               	movlw	-35
 25560  013DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25561  013DFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 25562  013E04  006F FF77 FFF7     	movff	postdec2,tblptrh
 25563  013E0A                     	if	0	;tblptru may be non-zero
 25564  013E0A                     	endif
 25565  013E0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25566  013E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 25567  013E0C  6EF8               	movwf	tblptru,c
 25568  013E0E                     	endif
 25569                           
 25570                           ;stkvar	_c @ sp[(-32)+31]
 25571  013E0E  0008               	tblrd		*
 25572  013E10  0EFF               	movlw	-1
 25573  013E12  006F FFD7 FFE3     	movff	tablat,plusw1
 25574                           
 25575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 25576                           ;stkvar	_fmt @ sp[(-32)+-4]
 25577  013E18  0EDC               	movlw	-36
 25578  013E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25579  013E20  0EDD               	movlw	-35
 25580  013E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 25581  013E28  2ADE               	incf	postinc2,f,c
 25582  013E2A  0E00               	movlw	0
 25583  013E2C  22DD               	addwfc	postdec2,f,c
 25584                           
 25585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 25586                           ;stkvar	_ap @ sp[(-32)+-6]
 25587  013E2E  0EDA               	movlw	-38
 25588  013E30  006F FF8F FFD9     	movff	plusw1,fsr2l
 25589  013E36  0EDB               	movlw	-37
 25590  013E38  006F FF8F FFDA     	movff	plusw1,fsr2h
 25591  013E3E  0E04               	movlw	4
 25592  013E40  5EDE               	subwf	postinc2,f,c
 25593  013E42  0E00               	movlw	0
 25594  013E44  5ADD               	subwfb	postdec2,f,c
 25595  013E46  006F FF78  F00B    	movff	postinc2,btemp+10
 25596  013E4C  006F FF74  F00C    	movff	postdec2,btemp+11
 25597  013E52  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25598  013E58  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25599  013E5E  006F FF78  F009    	movff	postinc2,btemp+8
 25600  013E64  006F FF78  F00A    	movff	postinc2,btemp+9
 25601  013E6A  006F FF78  F00B    	movff	postinc2,btemp+10
 25602  013E70  006F FF78  F00C    	movff	postinc2,btemp+11
 25603                           
 25604                           ;stkvar	_f @ sp[(-32)+22]
 25605  013E76  0EF6               	movlw	-10
 25606  013E78  0060  F027  FFE3   	movff	btemp+8,plusw1
 25607  013E7E  0EF7               	movlw	-9
 25608  013E80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25609  013E86  0EF8               	movlw	-8
 25610  013E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25611  013E8E  0EF9               	movlw	-7
 25612  013E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 25613  013E96                     l15987:
 25614                           
 25615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 25616                           ;stkvar	_c @ sp[(-32)+31]
 25617  013E96  0EFF               	movlw	-1
 25618  013E98  50E3               	movf	plusw1,w,c
 25619  013E9A  6EE6               	movwf	postinc1,c
 25620                           
 25621                           ;stkvar	_f @ sp[(-33)+22]
 25622  013E9C  0EF5               	movlw	-11
 25623  013E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25624  013EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 25625  013EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 25626  013EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 25627                           
 25628                           ;stkvar	_fp @ sp[(-37)+-2]
 25629  013EB6  0ED9               	movlw	-39
 25630  013EB8  006F FF8F FFE6     	movff	plusw1,postinc1
 25631  013EBE  006F FF8F FFE6     	movff	plusw1,postinc1
 25632  013EC4  ECBF  F089         	call	_efgtoa	;wreg free
 25633  013EC8  D3B6               	goto	l2664
 25634  013ECA                     l15991:
 25635                           
 25636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 25637  013ECA  0E02               	movlw	2
 25638  013ECC  6EE6               	movwf	postinc1,c
 25639  013ECE  0E00               	movlw	0
 25640  013ED0  6EE6               	movwf	postinc1,c
 25641  013ED2  0EEC               	movlw	low STR_105
 25642  013ED4  6EE6               	movwf	postinc1,c
 25643  013ED6  0EFF               	movlw	high STR_105
 25644  013ED8  6EE6               	movwf	postinc1,c
 25645                           
 25646                           ;stkvar	_ct @ sp[(-36)+26]
 25647  013EDA  0EF6               	movlw	246
 25648  013EDC  24E1               	addwf	fsr1l,w,c
 25649  013EDE  6E01               	movwf	btemp^0,c
 25650  013EE0  0EFF               	movlw	255
 25651  013EE2  20E2               	addwfc	fsr1h,w,c
 25652  013EE4  6E02               	movwf	(btemp+1)^0,c
 25653  013EE6  0060  F007  FFE6   	movff	btemp,postinc1
 25654  013EEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25655  013EF2  EC34  F0E2         	call	_strncmp	;wreg free
 25656  013EF6  5001               	movf	btemp^0,w,c
 25657  013EF8  1002               	iorwf	(btemp+1)^0,w,c
 25658  013EFA  A4D8               	btfss	status,2,c
 25659  013EFC  D096               	goto	l16011
 25660                           
 25661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 25662                           ;stkvar	_fmt @ sp[(-32)+-4]
 25663  013EFE  0EDC               	movlw	-36
 25664  013F00  006F FF8F FFD9     	movff	plusw1,fsr2l
 25665  013F06  0EDD               	movlw	-35
 25666  013F08  006F FF8F FFDA     	movff	plusw1,fsr2h
 25667  013F0E  006F FF78  F00B    	movff	postinc2,btemp+10
 25668  013F14  006F FF74  F00C    	movff	postdec2,btemp+11
 25669  013F1A  0E01               	movlw	1
 25670  013F1C  260B               	addwf	(btemp+10)^0,f,c
 25671  013F1E  0E00               	movlw	0
 25672  013F20  220C               	addwfc	(btemp+11)^0,f,c
 25673  013F22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25674  013F28  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25675  013F2E                     	if	0	;tblptru may be non-zero
 25676  013F2E                     	endif
 25677  013F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25678  013F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 25679  013F30  6EF8               	movwf	tblptru,c
 25680  013F32                     	endif
 25681                           
 25682                           ;stkvar	_c @ sp[(-32)+31]
 25683  013F32  0008               	tblrd		*
 25684  013F34  0EFF               	movlw	-1
 25685  013F36  006F FFD7 FFE3     	movff	tablat,plusw1
 25686  013F3C  0EBF               	movlw	191
 25687  013F3E  6E0B               	movwf	(btemp+10)^0,c
 25688  013F40  0EFF               	movlw	255
 25689  013F42  6E0C               	movwf	(btemp+11)^0,c
 25690                           
 25691                           ;stkvar	_fmt @ sp[(-32)+-4]
 25692  013F44  0EDC               	movlw	-36
 25693  013F46  006F FF8F FFD9     	movff	plusw1,fsr2l
 25694  013F4C  0EDD               	movlw	-35
 25695  013F4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25696  013F54  006F FF7B FFF6     	movff	postinc2,tblptrl
 25697  013F5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25698  013F60                     	if	0	;tblptru may be non-zero
 25699  013F60                     	endif
 25700  013F60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25701  013F60  0E00               	movlw	low (__mediumconst shr (0+16))
 25702  013F62  6EF8               	movwf	tblptru,c
 25703  013F64                     	endif
 25704  013F64  0008               	tblrd		*
 25705  013F66  50F5               	movf	tablat,w,c
 25706  013F68  6E09               	movwf	(btemp+8)^0,c
 25707  013F6A  6A0A               	clrf	(btemp+9)^0,c
 25708  013F6C  500B               	movf	(btemp+10)^0,w,c
 25709  013F6E  2609               	addwf	(btemp+8)^0,f,c
 25710  013F70  500C               	movf	(btemp+11)^0,w,c
 25711  013F72  220A               	addwfc	(btemp+9)^0,f,c
 25712  013F74  500A               	movf	(btemp+9)^0,w,c
 25713  013F76  E106               	bnz	u15570
 25714  013F78  0E1A               	movlw	26
 25715  013F7A  5C09               	subwf	(btemp+8)^0,w,c
 25716  013F7C  B0D8               	btfsc	status,0,c
 25717  013F7E  D002               	goto	u15570
 25718  013F80  0E01               	movlw	1
 25719  013F82  D001               	goto	u15580
 25720  013F84                     u15570:
 25721  013F84  0E00               	movlw	0
 25722  013F86                     u15580:
 25723  013F86  6E0B               	movwf	(btemp+10)^0,c
 25724  013F88  6A0C               	clrf	(btemp+11)^0,c
 25725                           
 25726                           ;stkvar	_vfpfcnvrt$6892 @ sp[(-32)+2]
 25727  013F8A  0EE2               	movlw	-30
 25728  013F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25729  013F92  0EE3               	movlw	-29
 25730  013F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 25731                           
 25732                           ;stkvar	_vfpfcnvrt$6892 @ sp[(-32)+2]
 25733  013F9A  0EE2               	movlw	-30
 25734  013F9C  006F FF8C  F001    	movff	plusw1,btemp
 25735  013FA2  0EE3               	movlw	-29
 25736  013FA4  50E3               	movf	plusw1,w,c
 25737  013FA6  1001               	iorwf	btemp^0,w,c
 25738                           
 25739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 25740                           ;stkvar	_ap @ sp[(-32)+-6]
 25741                           
 25742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 25743                           
 25744                           ;stkvar	_f @ sp[(-32)+22]
 25745                           
 25746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 25747                           ;stkvar	_ap @ sp[(-32)+-6]
 25748  013FA8  0EDA               	movlw	-38
 25749  013FAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25750  013FB0  0EDB               	movlw	-37
 25751  013FB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25752  013FB8  0E04               	movlw	4
 25753  013FBA  5EDE               	subwf	postinc2,f,c
 25754  013FBC  0E00               	movlw	0
 25755  013FBE  5ADD               	subwfb	postdec2,f,c
 25756  013FC0  006F FF78  F00B    	movff	postinc2,btemp+10
 25757  013FC6  006F FF74  F00C    	movff	postdec2,btemp+11
 25758  013FCC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25759  013FD2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25760  013FD8  006F FF78  F009    	movff	postinc2,btemp+8
 25761  013FDE  006F FF78  F00A    	movff	postinc2,btemp+9
 25762  013FE4  006F FF78  F00B    	movff	postinc2,btemp+10
 25763  013FEA  006F FF78  F00C    	movff	postinc2,btemp+11
 25764                           
 25765                           ;stkvar	_f @ sp[(-32)+22]
 25766  013FF0  0EF6               	movlw	-10
 25767  013FF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25768  013FF8  0EF7               	movlw	-9
 25769  013FFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25770  014000  0EF8               	movlw	-8
 25771  014002  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25772  014008  0EF9               	movlw	-7
 25773  01400A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25774                           
 25775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 25776                           ;stkvar	_fmt @ sp[(-32)+-4]
 25777  014010  0EDC               	movlw	-36
 25778  014012  006F FF8F FFD9     	movff	plusw1,fsr2l
 25779  014018  0EDD               	movlw	-35
 25780  01401A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25781  014020  0E02               	movlw	2
 25782  014022  26DE               	addwf	postinc2,f,c
 25783  014024  0E00               	movlw	0
 25784  014026  22DD               	addwfc	postdec2,f,c
 25785  014028  D736               	goto	l15987
 25786  01402A                     l16011:
 25787                           
 25788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 25789                           ;stkvar	_fmt @ sp[(-32)+-4]
 25790  01402A  0EDC               	movlw	-36
 25791  01402C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25792  014032  0EDD               	movlw	-35
 25793  014034  006F FF8F FFDA     	movff	plusw1,fsr2h
 25794  01403A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25795  014040  006F FF77 FFF7     	movff	postdec2,tblptrh
 25796  014046                     	if	0	;tblptru may be non-zero
 25797  014046                     	endif
 25798  014046                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25799  014046  0E00               	movlw	low (__mediumconst shr (0+16))
 25800  014048  6EF8               	movwf	tblptru,c
 25801  01404A                     	endif
 25802  01404A  0008               	tblrd		*
 25803  01404C  50F5               	movf	tablat,w,c
 25804  01404E  0A73               	xorlw	115
 25805  014050  A4D8               	btfss	status,2,c
 25806  014052  D042               	goto	l16021
 25807                           
 25808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 25809                           ;stkvar	_fmt @ sp[(-32)+-4]
 25810  014054  0EDC               	movlw	-36
 25811  014056  006F FF8F FFD9     	movff	plusw1,fsr2l
 25812  01405C  0EDD               	movlw	-35
 25813  01405E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25814  014064  2ADE               	incf	postinc2,f,c
 25815  014066  0E00               	movlw	0
 25816  014068  22DD               	addwfc	postdec2,f,c
 25817                           
 25818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 25819                           ;stkvar	_ap @ sp[(-32)+-6]
 25820  01406A  0EDA               	movlw	-38
 25821  01406C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25822  014072  0EDB               	movlw	-37
 25823  014074  006F FF8F FFDA     	movff	plusw1,fsr2h
 25824  01407A  0E02               	movlw	2
 25825  01407C  5EDE               	subwf	postinc2,f,c
 25826  01407E  0E00               	movlw	0
 25827  014080  5ADD               	subwfb	postdec2,f,c
 25828  014082  006F FF78  F00B    	movff	postinc2,btemp+10
 25829  014088  006F FF74  F00C    	movff	postdec2,btemp+11
 25830  01408E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25831  014094  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25832  01409A  006F FF78  F00B    	movff	postinc2,btemp+10
 25833  0140A0  006F FF74  F00C    	movff	postdec2,btemp+11
 25834                           
 25835                           ;stkvar	_cp @ sp[(-32)+29]
 25836  0140A6  0EFE               	movlw	-2
 25837  0140A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25838  0140AE  0EFD               	movlw	-3
 25839  0140B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25840                           
 25841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 25842                           ;stkvar	_cp @ sp[(-32)+29]
 25843  0140B6  0EFD               	movlw	-3
 25844  0140B8  006F FF8F FFE6     	movff	plusw1,postinc1
 25845  0140BE  006F FF8F FFE6     	movff	plusw1,postinc1
 25846                           
 25847                           ;stkvar	_fp @ sp[(-34)+-2]
 25848  0140C4  0EDC               	movlw	-36
 25849  0140C6  006F FF8F FFE6     	movff	plusw1,postinc1
 25850  0140CC  006F FF8F FFE6     	movff	plusw1,postinc1
 25851  0140D2  EC3A  F0D6         	call	_stoa	;wreg free
 25852  0140D6  D2AF               	goto	l2664
 25853  0140D8                     l16021:
 25854                           
 25855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 25856                           ;stkvar	_fmt @ sp[(-32)+-4]
 25857  0140D8  0EDC               	movlw	-36
 25858  0140DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25859  0140E0  0EDD               	movlw	-35
 25860  0140E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25861  0140E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 25862  0140EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 25863  0140F4                     	if	0	;tblptru may be non-zero
 25864  0140F4                     	endif
 25865  0140F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25866  0140F4  0E00               	movlw	low (__mediumconst shr (0+16))
 25867  0140F6  6EF8               	movwf	tblptru,c
 25868  0140F8                     	endif
 25869  0140F8  0008               	tblrd		*
 25870  0140FA  50F5               	movf	tablat,w,c
 25871  0140FC  0A75               	xorlw	117
 25872  0140FE  A4D8               	btfss	status,2,c
 25873  014100  D07C               	goto	l16031
 25874                           
 25875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 25876                           ;stkvar	_fmt @ sp[(-32)+-4]
 25877  014102  0EDC               	movlw	-36
 25878  014104  006F FF8F FFD9     	movff	plusw1,fsr2l
 25879  01410A  0EDD               	movlw	-35
 25880  01410C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25881  014112  2ADE               	incf	postinc2,f,c
 25882  014114  0E00               	movlw	0
 25883  014116  22DD               	addwfc	postdec2,f,c
 25884                           
 25885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 25886                           ;stkvar	_ap @ sp[(-32)+-6]
 25887  014118  0EDA               	movlw	-38
 25888  01411A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25889  014120  0EDB               	movlw	-37
 25890  014122  006F FF8F FFDA     	movff	plusw1,fsr2h
 25891  014128  0E02               	movlw	2
 25892  01412A  5EDE               	subwf	postinc2,f,c
 25893  01412C  0E00               	movlw	0
 25894  01412E  5ADD               	subwfb	postdec2,f,c
 25895  014130  006F FF78  F00B    	movff	postinc2,btemp+10
 25896  014136  006F FF74  F00C    	movff	postdec2,btemp+11
 25897  01413C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25898  014142  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25899  014148  006F FF78  F00B    	movff	postinc2,btemp+10
 25900  01414E  006F FF74  F00C    	movff	postdec2,btemp+11
 25901  014154  500B               	movf	(btemp+10)^0,w,c
 25902  014156  6E11               	movwf	(btemp+16)^0,c
 25903  014158  500C               	movf	(btemp+11)^0,w,c
 25904  01415A  6E12               	movwf	(btemp+17)^0,c
 25905  01415C  6A13               	clrf	(btemp+18)^0,c
 25906  01415E  6A14               	clrf	(btemp+19)^0,c
 25907  014160  6A15               	clrf	(btemp+20)^0,c
 25908  014162  6A16               	clrf	(btemp+21)^0,c
 25909  014164  6A17               	clrf	(btemp+22)^0,c
 25910  014166  6A18               	clrf	(btemp+23)^0,c
 25911                           
 25912                           ;stkvar	_llu @ sp[(-32)+6]
 25913  014168  0EE6               	movlw	-26
 25914  01416A  0060  F047  FFE3   	movff	btemp+16,plusw1
 25915  014170  0EE7               	movlw	-25
 25916  014172  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25917  014178  0EE8               	movlw	-24
 25918  01417A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25919  014180  0EE9               	movlw	-23
 25920  014182  0060  F053  FFE3   	movff	btemp+19,plusw1
 25921  014188  0EEA               	movlw	-22
 25922  01418A  0060  F057  FFE3   	movff	btemp+20,plusw1
 25923  014190  0EEB               	movlw	-21
 25924  014192  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25925  014198  0EEC               	movlw	-20
 25926  01419A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25927  0141A0  0EED               	movlw	-19
 25928  0141A2  0060  F063  FFE3   	movff	btemp+23,plusw1
 25929                           
 25930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 25931                           ;stkvar	_llu @ sp[(-32)+6]
 25932  0141A8  50E1               	movf	fsr1l,w,c
 25933  0141AA  0FE6               	addlw	-26
 25934  0141AC  6ED9               	movwf	fsr2l,c
 25935  0141AE  50E2               	movf	fsr1h,w,c
 25936  0141B0  6EDA               	movwf	fsr2h,c
 25937  0141B2  0EFF               	movlw	255
 25938  0141B4  22DA               	addwfc	fsr2h,f,c
 25939  0141B6  006F FF7B FFE6     	movff	postinc2,postinc1
 25940  0141BC  006F FF7B FFE6     	movff	postinc2,postinc1
 25941  0141C2  006F FF7B FFE6     	movff	postinc2,postinc1
 25942  0141C8  006F FF7B FFE6     	movff	postinc2,postinc1
 25943  0141CE  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  0141D4  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  0141DA  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  0141E0  006F FF7B FFE6     	movff	postinc2,postinc1
 25947                           
 25948                           ;stkvar	_fp @ sp[(-40)+-2]
 25949  0141E6  0ED6               	movlw	-42
 25950  0141E8  006F FF8F FFE6     	movff	plusw1,postinc1
 25951  0141EE  006F FF8F FFE6     	movff	plusw1,postinc1
 25952  0141F4  EC3A  F0D0         	call	_utoa	;wreg free
 25953  0141F8  D21E               	goto	l2664
 25954  0141FA                     l16031:
 25955                           
 25956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 25957  0141FA  0E02               	movlw	2
 25958  0141FC  6EE6               	movwf	postinc1,c
 25959  0141FE  0E00               	movlw	0
 25960  014200  6EE6               	movwf	postinc1,c
 25961  014202  0EF2               	movlw	low STR_110
 25962  014204  6EE6               	movwf	postinc1,c
 25963  014206  0EFF               	movlw	high STR_110
 25964  014208  6EE6               	movwf	postinc1,c
 25965                           
 25966                           ;stkvar	_fmt @ sp[(-36)+-4]
 25967  01420A  0ED8               	movlw	-40
 25968  01420C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25969  014212  0ED9               	movlw	-39
 25970  014214  006F FF8F FFDA     	movff	plusw1,fsr2h
 25971  01421A  006F FF78  F00B    	movff	postinc2,btemp+10
 25972  014220  006F FF74  F00C    	movff	postdec2,btemp+11
 25973  014226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25974  01422C  0060  F033  FFE6   	movff	btemp+11,postinc1
 25975  014232  EC34  F0E2         	call	_strncmp	;wreg free
 25976  014236  5001               	movf	btemp^0,w,c
 25977  014238  1002               	iorwf	(btemp+1)^0,w,c
 25978  01423A  A4D8               	btfss	status,2,c
 25979  01423C  D039               	goto	l16041
 25980                           
 25981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 25982                           ;stkvar	_fmt @ sp[(-32)+-4]
 25983  01423E  0EDC               	movlw	-36
 25984  014240  006F FF8F FFD9     	movff	plusw1,fsr2l
 25985  014246  0EDD               	movlw	-35
 25986  014248  006F FF8F FFDA     	movff	plusw1,fsr2h
 25987  01424E  0E02               	movlw	2
 25988  014250  26DE               	addwf	postinc2,f,c
 25989  014252  0E00               	movlw	0
 25990  014254  22DD               	addwfc	postdec2,f,c
 25991                           
 25992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 25993                           ;stkvar	_ap @ sp[(-32)+-6]
 25994  014256  0EDA               	movlw	-38
 25995  014258  006F FF8F FFD9     	movff	plusw1,fsr2l
 25996  01425E  0EDB               	movlw	-37
 25997  014260  006F FF8F FFDA     	movff	plusw1,fsr2h
 25998  014266  0E04               	movlw	4
 25999  014268  5EDE               	subwf	postinc2,f,c
 26000  01426A  0E00               	movlw	0
 26001  01426C  5ADD               	subwfb	postdec2,f,c
 26002  01426E  006F FF78  F00B    	movff	postinc2,btemp+10
 26003  014274  006F FF74  F00C    	movff	postdec2,btemp+11
 26004  01427A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26005  014280  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26006  014286  006F FF78  F009    	movff	postinc2,btemp+8
 26007  01428C  006F FF78  F00A    	movff	postinc2,btemp+9
 26008  014292  006F FF78  F00B    	movff	postinc2,btemp+10
 26009  014298  006F FF78  F00C    	movff	postinc2,btemp+11
 26010  01429E  5009               	movf	(btemp+8)^0,w,c
 26011  0142A0  6E11               	movwf	(btemp+16)^0,c
 26012  0142A2  500A               	movf	(btemp+9)^0,w,c
 26013  0142A4  6E12               	movwf	(btemp+17)^0,c
 26014  0142A6  500B               	movf	(btemp+10)^0,w,c
 26015  0142A8  6E13               	movwf	(btemp+18)^0,c
 26016  0142AA  500C               	movf	(btemp+11)^0,w,c
 26017  0142AC  6E14               	movwf	(btemp+19)^0,c
 26018  0142AE  D758               	goto	L24
 26019  0142B0                     l16041:
 26020                           
 26021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26022                           ;stkvar	_fmt @ sp[(-32)+-4]
 26023  0142B0  0EDC               	movlw	-36
 26024  0142B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26025  0142B8  0EDD               	movlw	-35
 26026  0142BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26027  0142C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26028  0142C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26029  0142CC                     	if	0	;tblptru may be non-zero
 26030  0142CC                     	endif
 26031  0142CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26032  0142CC  0E00               	movlw	low (__mediumconst shr (0+16))
 26033  0142CE  6EF8               	movwf	tblptru,c
 26034  0142D0                     	endif
 26035  0142D0  0008               	tblrd		*
 26036  0142D2  50F5               	movf	tablat,w,c
 26037  0142D4  0A78               	xorlw	120
 26038  0142D6  B4D8               	btfsc	status,2,c
 26039  0142D8  D015               	goto	u15640
 26040                           
 26041                           ;stkvar	_fmt @ sp[(-32)+-4]
 26042  0142DA  0EDC               	movlw	-36
 26043  0142DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26044  0142E2  0EDD               	movlw	-35
 26045  0142E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26046  0142EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 26047  0142F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26048  0142F6                     	if	0	;tblptru may be non-zero
 26049  0142F6                     	endif
 26050  0142F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26051  0142F6  0E00               	movlw	low (__mediumconst shr (0+16))
 26052  0142F8  6EF8               	movwf	tblptru,c
 26053  0142FA                     	endif
 26054  0142FA  0008               	tblrd		*
 26055  0142FC  50F5               	movf	tablat,w,c
 26056  0142FE  0A58               	xorlw	88
 26057  014300  A4D8               	btfss	status,2,c
 26058  014302  D094               	goto	l16055
 26059  014304                     u15640:
 26060                           
 26061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26062                           ;stkvar	_fmt @ sp[(-32)+-4]
 26063  014304  0EDC               	movlw	-36
 26064  014306  006F FF8F FFD9     	movff	plusw1,fsr2l
 26065  01430C  0EDD               	movlw	-35
 26066  01430E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26067  014314  006F FF7B FFF6     	movff	postinc2,tblptrl
 26068  01431A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26069  014320                     	if	0	;tblptru may be non-zero
 26070  014320                     	endif
 26071  014320                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26072  014320  0E00               	movlw	low (__mediumconst shr (0+16))
 26073  014322  6EF8               	movwf	tblptru,c
 26074  014324                     	endif
 26075                           
 26076                           ;stkvar	_c @ sp[(-32)+31]
 26077  014324  0008               	tblrd		*
 26078  014326  0EFF               	movlw	-1
 26079  014328  006F FFD7 FFE3     	movff	tablat,plusw1
 26080                           
 26081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26082                           ;stkvar	_fmt @ sp[(-32)+-4]
 26083  01432E  0EDC               	movlw	-36
 26084  014330  006F FF8F FFD9     	movff	plusw1,fsr2l
 26085  014336  0EDD               	movlw	-35
 26086  014338  006F FF8F FFDA     	movff	plusw1,fsr2h
 26087  01433E  2ADE               	incf	postinc2,f,c
 26088  014340  0E00               	movlw	0
 26089  014342  22DD               	addwfc	postdec2,f,c
 26090                           
 26091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26092                           ;stkvar	_ap @ sp[(-32)+-6]
 26093  014344  0EDA               	movlw	-38
 26094  014346  006F FF8F FFD9     	movff	plusw1,fsr2l
 26095  01434C  0EDB               	movlw	-37
 26096  01434E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26097  014354  0E02               	movlw	2
 26098  014356  5EDE               	subwf	postinc2,f,c
 26099  014358  0E00               	movlw	0
 26100  01435A  5ADD               	subwfb	postdec2,f,c
 26101  01435C  006F FF78  F00B    	movff	postinc2,btemp+10
 26102  014362  006F FF74  F00C    	movff	postdec2,btemp+11
 26103  014368  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26104  01436E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26105  014374  006F FF78  F00B    	movff	postinc2,btemp+10
 26106  01437A  006F FF74  F00C    	movff	postdec2,btemp+11
 26107  014380  500B               	movf	(btemp+10)^0,w,c
 26108  014382  6E11               	movwf	(btemp+16)^0,c
 26109  014384  500C               	movf	(btemp+11)^0,w,c
 26110  014386  6E12               	movwf	(btemp+17)^0,c
 26111  014388  6A13               	clrf	(btemp+18)^0,c
 26112  01438A  6A14               	clrf	(btemp+19)^0,c
 26113  01438C  6A15               	clrf	(btemp+20)^0,c
 26114  01438E  6A16               	clrf	(btemp+21)^0,c
 26115  014390  6A17               	clrf	(btemp+22)^0,c
 26116  014392  6A18               	clrf	(btemp+23)^0,c
 26117                           
 26118                           ;stkvar	_llu @ sp[(-32)+6]
 26119  014394  0EE6               	movlw	-26
 26120  014396  0060  F047  FFE3   	movff	btemp+16,plusw1
 26121  01439C  0EE7               	movlw	-25
 26122  01439E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 26123  0143A4  0EE8               	movlw	-24
 26124  0143A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 26125  0143AC  0EE9               	movlw	-23
 26126  0143AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 26127  0143B4  0EEA               	movlw	-22
 26128  0143B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 26129  0143BC  0EEB               	movlw	-21
 26130  0143BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 26131  0143C4  0EEC               	movlw	-20
 26132  0143C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 26133  0143CC  0EED               	movlw	-19
 26134  0143CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 26135                           
 26136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26137                           ;stkvar	_c @ sp[(-32)+31]
 26138  0143D4  0EFF               	movlw	-1
 26139  0143D6  50E3               	movf	plusw1,w,c
 26140  0143D8  6EE6               	movwf	postinc1,c
 26141                           
 26142                           ;stkvar	_llu @ sp[(-33)+6]
 26143  0143DA  50E1               	movf	fsr1l,w,c
 26144  0143DC  0FE5               	addlw	-27
 26145  0143DE  6ED9               	movwf	fsr2l,c
 26146  0143E0  50E2               	movf	fsr1h,w,c
 26147  0143E2  6EDA               	movwf	fsr2h,c
 26148  0143E4  0EFF               	movlw	255
 26149  0143E6  22DA               	addwfc	fsr2h,f,c
 26150  0143E8  006F FF7B FFE6     	movff	postinc2,postinc1
 26151  0143EE  006F FF7B FFE6     	movff	postinc2,postinc1
 26152  0143F4  006F FF7B FFE6     	movff	postinc2,postinc1
 26153  0143FA  006F FF7B FFE6     	movff	postinc2,postinc1
 26154  014400  006F FF7B FFE6     	movff	postinc2,postinc1
 26155  014406  006F FF7B FFE6     	movff	postinc2,postinc1
 26156  01440C  006F FF7B FFE6     	movff	postinc2,postinc1
 26157  014412  006F FF7B FFE6     	movff	postinc2,postinc1
 26158                           
 26159                           ;stkvar	_fp @ sp[(-41)+-2]
 26160  014418  0ED5               	movlw	-43
 26161  01441A  006F FF8F FFE6     	movff	plusw1,postinc1
 26162  014420  006F FF8F FFE6     	movff	plusw1,postinc1
 26163  014426  ECFF  F0CA         	call	_xtoa	;wreg free
 26164  01442A  D105               	goto	l2664
 26165  01442C                     l16055:
 26166                           
 26167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26168  01442C  0E02               	movlw	2
 26169  01442E  6EE6               	movwf	postinc1,c
 26170  014430  0E00               	movlw	0
 26171  014432  6EE6               	movwf	postinc1,c
 26172  014434  0EF5               	movlw	low STR_115
 26173  014436  6EE6               	movwf	postinc1,c
 26174  014438  0EFF               	movlw	high STR_115
 26175  01443A  6EE6               	movwf	postinc1,c
 26176                           
 26177                           ;stkvar	_fmt @ sp[(-36)+-4]
 26178  01443C  0ED8               	movlw	-40
 26179  01443E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26180  014444  0ED9               	movlw	-39
 26181  014446  006F FF8F FFDA     	movff	plusw1,fsr2h
 26182  01444C  006F FF78  F00B    	movff	postinc2,btemp+10
 26183  014452  006F FF74  F00C    	movff	postdec2,btemp+11
 26184  014458  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26185  01445E  0060  F033  FFE6   	movff	btemp+11,postinc1
 26186  014464  EC34  F0E2         	call	_strncmp	;wreg free
 26187  014468  5001               	movf	btemp^0,w,c
 26188  01446A  1002               	iorwf	(btemp+1)^0,w,c
 26189  01446C  B4D8               	btfsc	status,2,c
 26190  01446E  D022               	goto	u15660
 26191  014470  0E02               	movlw	2
 26192  014472  6EE6               	movwf	postinc1,c
 26193  014474  0E00               	movlw	0
 26194  014476  6EE6               	movwf	postinc1,c
 26195  014478  0EE6               	movlw	low STR_119
 26196  01447A  6EE6               	movwf	postinc1,c
 26197  01447C  0EFF               	movlw	high STR_119
 26198  01447E  6EE6               	movwf	postinc1,c
 26199                           
 26200                           ;stkvar	_fmt @ sp[(-36)+-4]
 26201  014480  0ED8               	movlw	-40
 26202  014482  006F FF8F FFD9     	movff	plusw1,fsr2l
 26203  014488  0ED9               	movlw	-39
 26204  01448A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26205  014490  006F FF78  F00B    	movff	postinc2,btemp+10
 26206  014496  006F FF74  F00C    	movff	postdec2,btemp+11
 26207  01449C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26208  0144A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 26209  0144A8  EC34  F0E2         	call	_strncmp	;wreg free
 26210  0144AC  5001               	movf	btemp^0,w,c
 26211  0144AE  1002               	iorwf	(btemp+1)^0,w,c
 26212  0144B0  A4D8               	btfss	status,2,c
 26213  0144B2  D058               	goto	l16069
 26214  0144B4                     u15660:
 26215                           
 26216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 26217                           ;stkvar	_fmt @ sp[(-32)+-4]
 26218  0144B4  0EDC               	movlw	-36
 26219  0144B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26220  0144BC  0EDD               	movlw	-35
 26221  0144BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26222  0144C4  006F FF78  F00B    	movff	postinc2,btemp+10
 26223  0144CA  006F FF74  F00C    	movff	postdec2,btemp+11
 26224  0144D0  0E01               	movlw	1
 26225  0144D2  260B               	addwf	(btemp+10)^0,f,c
 26226  0144D4  0E00               	movlw	0
 26227  0144D6  220C               	addwfc	(btemp+11)^0,f,c
 26228  0144D8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 26229  0144DE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 26230  0144E4                     	if	0	;tblptru may be non-zero
 26231  0144E4                     	endif
 26232  0144E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26233  0144E4  0E00               	movlw	low (__mediumconst shr (0+16))
 26234  0144E6  6EF8               	movwf	tblptru,c
 26235  0144E8                     	endif
 26236                           
 26237                           ;stkvar	_c @ sp[(-32)+31]
 26238  0144E8  0008               	tblrd		*
 26239  0144EA  0EFF               	movlw	-1
 26240  0144EC  006F FFD7 FFE3     	movff	tablat,plusw1
 26241                           
 26242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 26243                           ;stkvar	_fmt @ sp[(-32)+-4]
 26244  0144F2  0EDC               	movlw	-36
 26245  0144F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26246  0144FA  0EDD               	movlw	-35
 26247  0144FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26248  014502  0E02               	movlw	2
 26249  014504  26DE               	addwf	postinc2,f,c
 26250  014506  0E00               	movlw	0
 26251  014508  22DD               	addwfc	postdec2,f,c
 26252                           
 26253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26254                           ;stkvar	_ap @ sp[(-32)+-6]
 26255  01450A  0EDA               	movlw	-38
 26256  01450C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26257  014512  0EDB               	movlw	-37
 26258  014514  006F FF8F FFDA     	movff	plusw1,fsr2h
 26259  01451A  0E04               	movlw	4
 26260  01451C  5EDE               	subwf	postinc2,f,c
 26261  01451E  0E00               	movlw	0
 26262  014520  5ADD               	subwfb	postdec2,f,c
 26263  014522  006F FF78  F00B    	movff	postinc2,btemp+10
 26264  014528  006F FF74  F00C    	movff	postdec2,btemp+11
 26265  01452E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26266  014534  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26267  01453A  006F FF78  F009    	movff	postinc2,btemp+8
 26268  014540  006F FF78  F00A    	movff	postinc2,btemp+9
 26269  014546  006F FF78  F00B    	movff	postinc2,btemp+10
 26270  01454C  006F FF78  F00C    	movff	postinc2,btemp+11
 26271  014552  5009               	movf	(btemp+8)^0,w,c
 26272  014554  6E11               	movwf	(btemp+16)^0,c
 26273  014556  500A               	movf	(btemp+9)^0,w,c
 26274  014558  6E12               	movwf	(btemp+17)^0,c
 26275  01455A  500B               	movf	(btemp+10)^0,w,c
 26276  01455C  6E13               	movwf	(btemp+18)^0,c
 26277  01455E  500C               	movf	(btemp+11)^0,w,c
 26278  014560  6E14               	movwf	(btemp+19)^0,c
 26279  014562  D714               	goto	L25
 26280  014564                     l16069:
 26281                           
 26282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 26283                           ;stkvar	_fmt @ sp[(-32)+-4]
 26284  014564  0EDC               	movlw	-36
 26285  014566  006F FF8F FFD9     	movff	plusw1,fsr2l
 26286  01456C  0EDD               	movlw	-35
 26287  01456E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26288  014574  006F FF7B FFF6     	movff	postinc2,tblptrl
 26289  01457A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26290  014580                     	if	0	;tblptru may be non-zero
 26291  014580                     	endif
 26292  014580                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26293  014580  0E00               	movlw	low (__mediumconst shr (0+16))
 26294  014582  6EF8               	movwf	tblptru,c
 26295  014584                     	endif
 26296  014584  0008               	tblrd		*
 26297  014586  50F5               	movf	tablat,w,c
 26298  014588  0A25               	xorlw	37
 26299  01458A  A4D8               	btfss	status,2,c
 26300  01458C  D01A               	goto	l16079
 26301                           
 26302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 26303                           ;stkvar	_fmt @ sp[(-32)+-4]
 26304  01458E  0EDC               	movlw	-36
 26305  014590  006F FF8F FFD9     	movff	plusw1,fsr2l
 26306  014596  0EDD               	movlw	-35
 26307  014598  006F FF8F FFDA     	movff	plusw1,fsr2h
 26308  01459E  2ADE               	incf	postinc2,f,c
 26309  0145A0  0E00               	movlw	0
 26310  0145A2  22DD               	addwfc	postdec2,f,c
 26311                           
 26312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 26313                           ;stkvar	_fp @ sp[(-32)+-2]
 26314  0145A4  0EDE               	movlw	-34
 26315  0145A6  006F FF8F FFE6     	movff	plusw1,postinc1
 26316  0145AC  006F FF8F FFE6     	movff	plusw1,postinc1
 26317  0145B2  0E25               	movlw	37
 26318  0145B4  6EE6               	movwf	postinc1,c
 26319  0145B6  0E00               	movlw	0
 26320  0145B8  6EE6               	movwf	postinc1,c
 26321  0145BA  ECF9  F0F3         	call	_fputc	;wreg free
 26322  0145BE                     l16075:
 26323                           
 26324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 26325  0145BE  0E01               	movlw	1
 26326  0145C0  D00C               	goto	L26
 26327  0145C2                     l16079:
 26328                           
 26329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 26330                           ;stkvar	_fmt @ sp[(-32)+-4]
 26331  0145C2  0EDC               	movlw	-36
 26332  0145C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26333  0145CA  0EDD               	movlw	-35
 26334  0145CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26335  0145D2  2ADE               	incf	postinc2,f,c
 26336  0145D4  0E00               	movlw	0
 26337  0145D6  22DD               	addwfc	postdec2,f,c
 26338                           
 26339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 26340  0145D8  0E00               	movlw	0
 26341  0145DA                     L26:
 26342  0145DA  6E01               	movwf	btemp^0,c
 26343  0145DC  0E00               	movlw	0
 26344  0145DE  6E02               	movwf	(btemp+1)^0,c
 26345  0145E0  D02A               	goto	l2664
 26346  0145E2                     l16085:
 26347                           
 26348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 26349                           ;stkvar	_fp @ sp[(-32)+-2]
 26350  0145E2  0EDE               	movlw	-34
 26351  0145E4  006F FF8F FFE6     	movff	plusw1,postinc1
 26352  0145EA  006F FF8F FFE6     	movff	plusw1,postinc1
 26353                           
 26354                           ;stkvar	_fmt @ sp[(-34)+-4]
 26355  0145F0  0EDA               	movlw	-38
 26356  0145F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26357  0145F8  0EDB               	movlw	-37
 26358  0145FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26359  014600  006F FF7B FFF6     	movff	postinc2,tblptrl
 26360  014606  006F FF77 FFF7     	movff	postdec2,tblptrh
 26361  01460C                     	if	0	;tblptru may be non-zero
 26362  01460C                     	endif
 26363  01460C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26364  01460C  0E00               	movlw	low (__mediumconst shr (0+16))
 26365  01460E  6EF8               	movwf	tblptru,c
 26366  014610                     	endif
 26367  014610  0008               	tblrd		*
 26368  014612  50F5               	movf	tablat,w,c
 26369  014614  6EE6               	movwf	postinc1,c
 26370  014616  0E00               	movlw	0
 26371  014618  6EE6               	movwf	postinc1,c
 26372  01461A  ECF9  F0F3         	call	_fputc	;wreg free
 26373                           
 26374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 26375                           ;stkvar	_fmt @ sp[(-32)+-4]
 26376  01461E  0EDC               	movlw	-36
 26377  014620  006F FF8F FFD9     	movff	plusw1,fsr2l
 26378  014626  0EDD               	movlw	-35
 26379  014628  006F FF8F FFDA     	movff	plusw1,fsr2h
 26380  01462E  2ADE               	incf	postinc2,f,c
 26381  014630  0E00               	movlw	0
 26382  014632  22DD               	addwfc	postdec2,f,c
 26383  014634  D7C4               	goto	l16075
 26384  014636                     l2664:
 26385                           
 26386                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 26387  014636  0EDA               	movlw	218
 26388  014638  26E1               	addwf	fsr1l,f,c
 26389  01463A  0EFF               	movlw	255
 26390  01463C  22E2               	addwfc	fsr1h,f,c
 26391  01463E  0012               	return		;funcret
 26392  014640                     __end_of_vfpfcnvrt:
 26393                           	opt callstack 0
 26394                           
 26395 ;; *************** function _xtoa *****************
 26396 ;; Defined at:
 26397 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26398 ;; Parameters:    Size  Location     Type
 26399 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26400 ;;		 -> f(6), NULL(0), 
 26401 ;;  d               8  [STACK] unsigned long long 
 26402 ;;  x               1  [STACK] unsigned char 
 26403 ;; Auto vars:     Size  Location     Type
 26404 ;;  n               8  [STACK] unsigned long long 
 26405 ;;  c               2  [STACK] int 
 26406 ;;  i               2  [STACK] int 
 26407 ;;  w               2  [STACK] int 
 26408 ;;  p               2  [STACK] int 
 26409 ;; Return value:  Size  Location     Type
 26410 ;;                  2  [STACK] int 
 26411 ;; Registers used:
 26412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26413 ;; Tracked objects:
 26414 ;;		On entry : 0/0
 26415 ;;		On exit  : 0/0
 26416 ;;		Unchanged: 0/0
 26417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26422 ;;Total ram usage:        0 bytes
 26423 ;; Hardware stack levels used:    1
 26424 ;; Hardware stack levels required when called:   20
 26425 ;; This function calls:
 26426 ;;		_isalpha
 26427 ;;		_isupper
 26428 ;;		_pad
 26429 ;;		_toupper
 26430 ;; This function is called by:
 26431 ;;		_vfpfcnvrt
 26432 ;; This function uses a reentrant model
 26433 ;;
 26434                           
 26435                           	psect	text91
 26436  0195FE                     __ptext91:
 26437                           	opt callstack 0
 26438  0195FE                     _xtoa:
 26439                           	opt callstack 0
 26440                           
 26441                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 26442  0195FE  0E14               	movlw	20
 26443  019600  26E1               	addwf	fsr1l,f,c
 26444  019602  0E00               	movlw	0
 26445  019604  22E2               	addwfc	fsr1h,f,c
 26446                           
 26447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 26448                           
 26449                           ;incstack = 0
 26450 ;; hardware stack exceeded
 26451  019606  AE3D               	btfss	(_prec+1)^0,7,c
 26452                           
 26453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 26454  019608  923E               	bcf	_flags^0,1,c
 26455                           
 26456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 26457  01960A  BE3D               	btfsc	(_prec+1)^0,7,c
 26458  01960C  D005               	goto	u15120
 26459  01960E  503D               	movf	(_prec+1)^0,w,c
 26460  019610  E110               	bnz	l15745
 26461  019612  043C               	decf	_prec^0,w,c
 26462  019614  B0D8               	btfsc	status,0,c
 26463  019616  D00D               	goto	l15745
 26464  019618                     u15120:
 26465  019618  0E01               	movlw	1
 26466  01961A  6E0B               	movwf	(btemp+10)^0,c
 26467  01961C  0E00               	movlw	0
 26468  01961E  6E0C               	movwf	(btemp+11)^0,c
 26469                           
 26470                           ;stkvar	_p @ sp[(-20)+18]
 26471  019620  0EFE               	movlw	-2
 26472  019622  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26473  019628  0EFF               	movlw	-1
 26474  01962A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26475  019630  D008               	goto	l2614
 26476  019632                     l15745:
 26477                           
 26478                           ;stkvar	_p @ sp[(-20)+18]
 26479  019632  0EFE               	movlw	-2
 26480  019634  0060  F0F3  FFE3   	movff	_prec,plusw1
 26481  01963A  0EFF               	movlw	-1
 26482  01963C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 26483  019642                     l2614:
 26484                           
 26485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 26486                           ;stkvar	_w @ sp[(-20)+16]
 26487  019642  0EFC               	movlw	-4
 26488  019644  0060  F0EB  FFE3   	movff	_width,plusw1
 26489  01964A  0EFD               	movlw	-3
 26490  01964C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 26491                           
 26492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 26493  019652  A83E               	btfss	_flags^0,4,c
 26494  019654  D00B               	goto	l15751
 26495                           
 26496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 26497                           ;stkvar	_w @ sp[(-20)+16]
 26498  019656  50E1               	movf	fsr1l,w,c
 26499  019658  0FFC               	addlw	-4
 26500  01965A  6ED9               	movwf	fsr2l,c
 26501  01965C  50E2               	movf	fsr1h,w,c
 26502  01965E  6EDA               	movwf	fsr2h,c
 26503  019660  0EFF               	movlw	255
 26504  019662  22DA               	addwfc	fsr2h,f,c
 26505  019664  0EFE               	movlw	254
 26506  019666  26DE               	addwf	postinc2,f,c
 26507  019668  0EFF               	movlw	255
 26508  01966A  22DD               	addwfc	postdec2,f,c
 26509  01966C                     l15751:
 26510                           
 26511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 26512                           ;stkvar	_d @ sp[(-20)+-10]
 26513  01966C  0EE2               	movlw	226
 26514  01966E  24E1               	addwf	fsr1l,w,c
 26515  019670  6ED9               	movwf	fsr2l,c
 26516  019672  0EFF               	movlw	255
 26517  019674  20E2               	addwfc	fsr1h,w,c
 26518  019676  6EDA               	movwf	fsr2h,c
 26519                           
 26520                           ;stkvar	_n @ sp[(-20)+4]
 26521  019678  0E08               	movlw	8
 26522  01967A  6E01               	movwf	btemp^0,c
 26523  01967C  0EF0               	movlw	-16
 26524  01967E                     us1514999:
 26525  01967E  006F FF7B FFE3     	movff	postinc2,plusw1
 26526  019684  28E8               	incf	wreg,w,c
 26527  019686  2E01               	decfsz	btemp^0,f,c
 26528  019688  D7FA               	bra	us1514999
 26529                           
 26530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 26531  01968A  0E4F               	movlw	79
 26532  01968C  6E0B               	movwf	(btemp+10)^0,c
 26533  01968E  0E00               	movlw	0
 26534  019690  6E0C               	movwf	(btemp+11)^0,c
 26535                           
 26536                           ;stkvar	_i @ sp[(-20)+14]
 26537  019692  0EFA               	movlw	-6
 26538  019694  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26539  01969A  0EFB               	movlw	-5
 26540  01969C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26541                           
 26542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 26543  0196A2  0103               	movlb	3	; () banked
 26544  0196A4  6BA3               	clrf	(_dbuf+79)& (0+255),b
 26545                           
 26546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26547  0196A6  D0EE               	goto	l15789
 26548  0196A8                     l15757:
 26549                           
 26550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 26551                           ;stkvar	_i @ sp[(-20)+14]
 26552  0196A8  50E1               	movf	fsr1l,w,c
 26553  0196AA  0FFA               	addlw	-6
 26554  0196AC  6ED9               	movwf	fsr2l,c
 26555  0196AE  50E2               	movf	fsr1h,w,c
 26556  0196B0  6EDA               	movwf	fsr2h,c
 26557  0196B2  0EFF               	movlw	255
 26558  0196B4  22DA               	addwfc	fsr2h,f,c
 26559  0196B6  06DE               	decf	postinc2,f,c
 26560  0196B8  0E00               	movlw	0
 26561  0196BA  5ADD               	subwfb	postdec2,f,c
 26562                           
 26563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 26564                           ;stkvar	_n @ sp[(-20)+4]
 26565  0196BC  0EF0               	movlw	-16
 26566  0196BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26567  0196C4  0EF1               	movlw	-15
 26568  0196C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26569  0196CC  0E0F               	movlw	15
 26570  0196CE  160B               	andwf	(btemp+10)^0,f,c
 26571  0196D0  0E00               	movlw	0
 26572  0196D2  160C               	andwf	(btemp+11)^0,f,c
 26573                           
 26574                           ;stkvar	_c @ sp[(-20)+12]
 26575  0196D4  0EF8               	movlw	-8
 26576  0196D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26577  0196DC  0EF9               	movlw	-7
 26578  0196DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26579                           
 26580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 26581                           ;stkvar	_c @ sp[(-20)+12]
 26582  0196E4  0EF9               	movlw	-7
 26583  0196E6  BEE3               	btfsc	plusw1,7,c
 26584  0196E8  D00F               	goto	l15765
 26585  0196EA  0EF9               	movlw	-7
 26586  0196EC  50E3               	movf	plusw1,w,c
 26587  0196EE  E108               	bnz	u15150
 26588  0196F0  0EF8               	movlw	-8
 26589  0196F2  006F FF8C  F001    	movff	plusw1,btemp
 26590  0196F8  0E0A               	movlw	10
 26591  0196FA  5E01               	subwf	btemp^0,f,c
 26592  0196FC  A0D8               	btfss	status,0,c
 26593  0196FE  D004               	goto	l15765
 26594  019700                     u15150:
 26595                           
 26596                           ;stkvar	_c @ sp[(-20)+12]
 26597  019700  0EF8               	movlw	-8
 26598  019702  50E3               	movf	plusw1,w,c
 26599  019704  0F57               	addlw	87
 26600  019706  D003               	goto	L27
 26601  019708                     l15765:
 26602                           
 26603                           ;stkvar	_c @ sp[(-20)+12]
 26604  019708  0EF8               	movlw	-8
 26605  01970A  50E3               	movf	plusw1,w,c
 26606  01970C  0F30               	addlw	48
 26607  01970E                     L27:
 26608  01970E  6E0B               	movwf	(btemp+10)^0,c
 26609  019710  0EF9               	movlw	-7
 26610  019712  006F FF8C  F00C    	movff	plusw1,btemp+11
 26611  019718  0E00               	movlw	0
 26612  01971A  220C               	addwfc	(btemp+11)^0,f,c
 26613                           
 26614                           ;stkvar	_c @ sp[(-20)+12]
 26615  01971C  0EF8               	movlw	-8
 26616  01971E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26617  019724  0EF9               	movlw	-7
 26618  019726  0060  F033  FFE3   	movff	btemp+11,plusw1
 26619  01972C  0EBF               	movlw	191
 26620  01972E  6E0B               	movwf	(btemp+10)^0,c
 26621  019730  0EFF               	movlw	255
 26622  019732  6E0C               	movwf	(btemp+11)^0,c
 26623                           
 26624                           ;stkvar	_x @ sp[(-20)+-11]
 26625  019734  0EE1               	movlw	-31
 26626  019736  50E3               	movf	plusw1,w,c
 26627  019738  6E09               	movwf	(btemp+8)^0,c
 26628  01973A  6A0A               	clrf	(btemp+9)^0,c
 26629  01973C  500B               	movf	(btemp+10)^0,w,c
 26630  01973E  2609               	addwf	(btemp+8)^0,f,c
 26631  019740  500C               	movf	(btemp+11)^0,w,c
 26632  019742  220A               	addwfc	(btemp+9)^0,f,c
 26633  019744  500A               	movf	(btemp+9)^0,w,c
 26634  019746  E106               	bnz	u15160
 26635  019748  0E1A               	movlw	26
 26636  01974A  5C09               	subwf	(btemp+8)^0,w,c
 26637  01974C  B0D8               	btfsc	status,0,c
 26638  01974E  D002               	goto	u15160
 26639  019750  0E01               	movlw	1
 26640  019752  D001               	goto	u15170
 26641  019754                     u15160:
 26642  019754  0E00               	movlw	0
 26643  019756                     u15170:
 26644  019756  6E0B               	movwf	(btemp+10)^0,c
 26645  019758  6A0C               	clrf	(btemp+11)^0,c
 26646                           
 26647                           ;stkvar	_xtoa$6865 @ sp[(-20)+2]
 26648  01975A  0EEE               	movlw	-18
 26649  01975C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26650  019762  0EEF               	movlw	-17
 26651  019764  0060  F033  FFE3   	movff	btemp+11,plusw1
 26652                           
 26653                           ;stkvar	_xtoa$6865 @ sp[(-20)+2]
 26654  01976A  0EEE               	movlw	-18
 26655  01976C  006F FF8C  F001    	movff	plusw1,btemp
 26656  019772  0EEF               	movlw	-17
 26657  019774  50E3               	movf	plusw1,w,c
 26658  019776  1001               	iorwf	btemp^0,w,c
 26659  019778  B4D8               	btfsc	status,2,c
 26660  01977A  D041               	goto	l15781
 26661  01977C  0E9F               	movlw	159
 26662  01977E  6E0B               	movwf	(btemp+10)^0,c
 26663  019780  0EFF               	movlw	255
 26664  019782  6E0C               	movwf	(btemp+11)^0,c
 26665                           
 26666                           ;stkvar	_c @ sp[(-20)+12]
 26667  019784  0EF8               	movlw	-8
 26668  019786  006F FF8C  F009    	movff	plusw1,btemp+8
 26669  01978C  0EF9               	movlw	-7
 26670  01978E  006F FF8C  F00A    	movff	plusw1,btemp+9
 26671  019794  0E20               	movlw	32
 26672  019796  1209               	iorwf	(btemp+8)^0,f,c
 26673  019798  0E00               	movlw	0
 26674  01979A  120A               	iorwf	(btemp+9)^0,f,c
 26675  01979C  500B               	movf	(btemp+10)^0,w,c
 26676  01979E  2609               	addwf	(btemp+8)^0,f,c
 26677  0197A0  500C               	movf	(btemp+11)^0,w,c
 26678  0197A2  220A               	addwfc	(btemp+9)^0,f,c
 26679  0197A4  500A               	movf	(btemp+9)^0,w,c
 26680  0197A6  E106               	bnz	u15190
 26681  0197A8  0E1A               	movlw	26
 26682  0197AA  5C09               	subwf	(btemp+8)^0,w,c
 26683  0197AC  B0D8               	btfsc	status,0,c
 26684  0197AE  D002               	goto	u15190
 26685  0197B0  0E01               	movlw	1
 26686  0197B2  D001               	goto	u15200
 26687  0197B4                     u15190:
 26688  0197B4  0E00               	movlw	0
 26689  0197B6                     u15200:
 26690  0197B6  6E0B               	movwf	(btemp+10)^0,c
 26691  0197B8  6A0C               	clrf	(btemp+11)^0,c
 26692                           
 26693                           ;stkvar	_xtoa$6866 @ sp[(-20)+0]
 26694  0197BA  0EEC               	movlw	-20
 26695  0197BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26696  0197C2  0EED               	movlw	-19
 26697  0197C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26698                           
 26699                           ;stkvar	_xtoa$6866 @ sp[(-20)+0]
 26700  0197CA  0EEC               	movlw	-20
 26701  0197CC  006F FF8C  F001    	movff	plusw1,btemp
 26702  0197D2  0EED               	movlw	-19
 26703  0197D4  50E3               	movf	plusw1,w,c
 26704  0197D6  1001               	iorwf	btemp^0,w,c
 26705  0197D8  B4D8               	btfsc	status,2,c
 26706  0197DA  D011               	goto	l15781
 26707                           
 26708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 26709                           ;stkvar	_c @ sp[(-20)+12]
 26710  0197DC  0EF8               	movlw	-8
 26711  0197DE  006F FF8F FFE6     	movff	plusw1,postinc1
 26712  0197E4  006F FF8F FFE6     	movff	plusw1,postinc1
 26713  0197EA  EC00  F003         	call	_toupper	;wreg free
 26714                           
 26715                           ;stkvar	_c @ sp[(-20)+12]
 26716  0197EE  0EF8               	movlw	-8
 26717  0197F0  0060  F007  FFE3   	movff	btemp,plusw1
 26718  0197F6  0EF9               	movlw	-7
 26719  0197F8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 26720  0197FE                     l15781:
 26721                           
 26722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 26723                           ;stkvar	_c @ sp[(-20)+12]
 26724                           ;stkvar	_i @ sp[(-20)+14]
 26725  0197FE  0EFA               	movlw	-6
 26726  019800  006F FF8C  F00B    	movff	plusw1,btemp+10
 26727  019806  0EFB               	movlw	-5
 26728  019808  006F FF8C  F00C    	movff	plusw1,btemp+11
 26729  01980E  0E54               	movlw	low _dbuf
 26730  019810  240B               	addwf	(btemp+10)^0,w,c
 26731  019812  6ED9               	movwf	fsr2l,c
 26732  019814  0E03               	movlw	high _dbuf
 26733  019816  200C               	addwfc	(btemp+11)^0,w,c
 26734  019818  6EDA               	movwf	fsr2h,c
 26735  01981A  0EF8               	movlw	-8
 26736  01981C  006F FF8F FFDF     	movff	plusw1,indf2
 26737                           
 26738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 26739                           ;stkvar	_p @ sp[(-20)+18]
 26740  019822  50E1               	movf	fsr1l,w,c
 26741  019824  0FFE               	addlw	-2
 26742  019826  6ED9               	movwf	fsr2l,c
 26743  019828  50E2               	movf	fsr1h,w,c
 26744  01982A  6EDA               	movwf	fsr2h,c
 26745  01982C  0EFF               	movlw	255
 26746  01982E  22DA               	addwfc	fsr2h,f,c
 26747  019830  06DE               	decf	postinc2,f,c
 26748  019832  0E00               	movlw	0
 26749  019834  5ADD               	subwfb	postdec2,f,c
 26750                           
 26751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 26752                           ;stkvar	_w @ sp[(-20)+16]
 26753  019836  50E1               	movf	fsr1l,w,c
 26754  019838  0FFC               	addlw	-4
 26755  01983A  6ED9               	movwf	fsr2l,c
 26756  01983C  50E2               	movf	fsr1h,w,c
 26757  01983E  6EDA               	movwf	fsr2h,c
 26758  019840  0EFF               	movlw	255
 26759  019842  22DA               	addwfc	fsr2h,f,c
 26760  019844  06DE               	decf	postinc2,f,c
 26761  019846  0E00               	movlw	0
 26762  019848  5ADD               	subwfb	postdec2,f,c
 26763                           
 26764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 26765  01984A  0E04               	movlw	4
 26766  01984C  6E0C               	movwf	(btemp+11)^0,c
 26767                           
 26768                           ;stkvar	_n @ sp[(-20)+4]
 26769  01984E  50E1               	movf	fsr1l,w,c
 26770  019850  0FF0               	addlw	-16
 26771  019852  6ED9               	movwf	fsr2l,c
 26772  019854  50E2               	movf	fsr1h,w,c
 26773  019856  6EDA               	movwf	fsr2h,c
 26774  019858  0EFF               	movlw	255
 26775  01985A  22DA               	addwfc	fsr2h,f,c
 26776  01985C  280C               	incf	(btemp+11)^0,w,c
 26777  01985E  52DE               	movf	postinc2,f,c
 26778  019860  D00F               	goto	u15220
 26779  019862                     u15225:
 26780  019862  52DE               	movf	postinc2,f,c
 26781  019864  52DE               	movf	postinc2,f,c
 26782  019866  52DE               	movf	postinc2,f,c
 26783  019868  52DE               	movf	postinc2,f,c
 26784  01986A  52DE               	movf	postinc2,f,c
 26785  01986C  52DE               	movf	postinc2,f,c
 26786  01986E  90D8               	bcf	status,0,c
 26787  019870  32DD               	rrcf	postdec2,f,c
 26788  019872  32DD               	rrcf	postdec2,f,c
 26789  019874  32DD               	rrcf	postdec2,f,c
 26790  019876  32DD               	rrcf	postdec2,f,c
 26791  019878  32DD               	rrcf	postdec2,f,c
 26792  01987A  32DD               	rrcf	postdec2,f,c
 26793  01987C  32DD               	rrcf	postdec2,f,c
 26794  01987E  32DE               	rrcf	postinc2,f,c
 26795  019880                     u15220:
 26796  019880  2EE8               	decfsz	wreg,f,c
 26797  019882  D7EF               	goto	u15225
 26798  019884                     l15789:
 26799                           
 26800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26801                           ;stkvar	_i @ sp[(-20)+14]
 26802  019884  0EFB               	movlw	-5
 26803  019886  BEE3               	btfsc	plusw1,7,c
 26804  019888  D03A               	goto	u15270
 26805  01988A  0EFB               	movlw	-5
 26806  01988C  50E3               	movf	plusw1,w,c
 26807  01988E  E108               	bnz	u15230
 26808  019890  0EFA               	movlw	-6
 26809  019892  006F FF8C  F001    	movff	plusw1,btemp
 26810  019898  0E02               	movlw	2
 26811  01989A  5E01               	subwf	btemp^0,f,c
 26812  01989C  A0D8               	btfss	status,0,c
 26813  01989E  D02F               	goto	u15270
 26814  0198A0                     u15230:
 26815                           
 26816                           ;stkvar	_n @ sp[(-20)+4]
 26817  0198A0  0EF0               	movlw	-16
 26818  0198A2  50E3               	movf	plusw1,w,c
 26819  0198A4  E115               	bnz	u15241
 26820  0198A6  0EF1               	movlw	-15
 26821  0198A8  50E3               	movf	plusw1,w,c
 26822  0198AA  E112               	bnz	u15241
 26823  0198AC  0EF2               	movlw	-14
 26824  0198AE  50E3               	movf	plusw1,w,c
 26825  0198B0  E10F               	bnz	u15241
 26826  0198B2  0EF3               	movlw	-13
 26827  0198B4  50E3               	movf	plusw1,w,c
 26828  0198B6  E10C               	bnz	u15241
 26829  0198B8  0EF4               	movlw	-12
 26830  0198BA  50E3               	movf	plusw1,w,c
 26831  0198BC  E109               	bnz	u15241
 26832  0198BE  0EF5               	movlw	-11
 26833  0198C0  50E3               	movf	plusw1,w,c
 26834  0198C2  E106               	bnz	u15241
 26835  0198C4  0EF6               	movlw	-10
 26836  0198C6  50E3               	movf	plusw1,w,c
 26837  0198C8  E103               	bnz	u15241
 26838  0198CA  0EF7               	movlw	-9
 26839  0198CC  50E3               	movf	plusw1,w,c
 26840  0198CE  A4D8               	btfss	status,2,c
 26841  0198D0                     u15241:
 26842  0198D0  D6EB               	goto	l15757
 26843                           
 26844                           ;stkvar	_p @ sp[(-20)+18]
 26845  0198D2  0EFF               	movlw	-1
 26846  0198D4  BEE3               	btfsc	plusw1,7,c
 26847  0198D6  D007               	goto	u15250
 26848  0198D8  0EFF               	movlw	-1
 26849  0198DA  50E3               	movf	plusw1,w,c
 26850  0198DC  E103               	bnz	u15251
 26851  0198DE  0EFE               	movlw	-2
 26852  0198E0  04E3               	decf	plusw1,w,c
 26853  0198E2  B0D8               	btfsc	status,0,c
 26854  0198E4                     u15251:
 26855  0198E4  D6E1               	goto	l15757
 26856  0198E6                     u15250:
 26857                           
 26858                           ;stkvar	_w @ sp[(-20)+16]
 26859  0198E6  0EFD               	movlw	-3
 26860  0198E8  BEE3               	btfsc	plusw1,7,c
 26861  0198EA  D009               	goto	u15270
 26862  0198EC  0EFD               	movlw	-3
 26863  0198EE  50E3               	movf	plusw1,w,c
 26864  0198F0  E104               	bnz	u15260
 26865  0198F2  0EFC               	movlw	-4
 26866  0198F4  04E3               	decf	plusw1,w,c
 26867  0198F6  A0D8               	btfss	status,0,c
 26868  0198F8  D002               	goto	u15270
 26869  0198FA                     u15260:
 26870  0198FA  B23E               	btfsc	_flags^0,1,c
 26871  0198FC  D6D5               	goto	l15757
 26872  0198FE                     u15270:
 26873                           
 26874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 26875  0198FE  A83E               	btfss	_flags^0,4,c
 26876  019900  D036               	goto	l15805
 26877                           
 26878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 26879                           ;stkvar	_i @ sp[(-20)+14]
 26880  019902  50E1               	movf	fsr1l,w,c
 26881  019904  0FFA               	addlw	-6
 26882  019906  6ED9               	movwf	fsr2l,c
 26883  019908  50E2               	movf	fsr1h,w,c
 26884  01990A  6EDA               	movwf	fsr2h,c
 26885  01990C  0EFF               	movlw	255
 26886  01990E  22DA               	addwfc	fsr2h,f,c
 26887  019910  06DE               	decf	postinc2,f,c
 26888  019912  0E00               	movlw	0
 26889  019914  5ADD               	subwfb	postdec2,f,c
 26890                           
 26891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 26892                           ;stkvar	_x @ sp[(-20)+-11]
 26893                           ;stkvar	_i @ sp[(-20)+14]
 26894  019916  0EFA               	movlw	-6
 26895  019918  006F FF8C  F00B    	movff	plusw1,btemp+10
 26896  01991E  0EFB               	movlw	-5
 26897  019920  006F FF8C  F00C    	movff	plusw1,btemp+11
 26898  019926  0E54               	movlw	low _dbuf
 26899  019928  240B               	addwf	(btemp+10)^0,w,c
 26900  01992A  6ED9               	movwf	fsr2l,c
 26901  01992C  0E03               	movlw	high _dbuf
 26902  01992E  200C               	addwfc	(btemp+11)^0,w,c
 26903  019930  6EDA               	movwf	fsr2h,c
 26904  019932  0EE1               	movlw	-31
 26905  019934  006F FF8F FFDF     	movff	plusw1,indf2
 26906                           
 26907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 26908                           ;stkvar	_i @ sp[(-20)+14]
 26909  01993A  50E1               	movf	fsr1l,w,c
 26910  01993C  0FFA               	addlw	-6
 26911  01993E  6ED9               	movwf	fsr2l,c
 26912  019940  50E2               	movf	fsr1h,w,c
 26913  019942  6EDA               	movwf	fsr2h,c
 26914  019944  0EFF               	movlw	255
 26915  019946  22DA               	addwfc	fsr2h,f,c
 26916  019948  06DE               	decf	postinc2,f,c
 26917  01994A  0E00               	movlw	0
 26918  01994C  5ADD               	subwfb	postdec2,f,c
 26919                           
 26920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 26921                           ;stkvar	_i @ sp[(-20)+14]
 26922  01994E  0EFA               	movlw	-6
 26923  019950  006F FF8C  F00B    	movff	plusw1,btemp+10
 26924  019956  0EFB               	movlw	-5
 26925  019958  006F FF8C  F00C    	movff	plusw1,btemp+11
 26926  01995E  0E54               	movlw	low _dbuf
 26927  019960  240B               	addwf	(btemp+10)^0,w,c
 26928  019962  6ED9               	movwf	fsr2l,c
 26929  019964  0E03               	movlw	high _dbuf
 26930  019966  200C               	addwfc	(btemp+11)^0,w,c
 26931  019968  6EDA               	movwf	fsr2h,c
 26932  01996A  0E30               	movlw	48
 26933  01996C  6EDF               	movwf	indf2,c
 26934  01996E                     l15805:
 26935                           
 26936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 26937                           ;stkvar	_w @ sp[(-20)+16]
 26938  01996E  0EFC               	movlw	-4
 26939  019970  006F FF8F FFE6     	movff	plusw1,postinc1
 26940  019976  006F FF8F FFE6     	movff	plusw1,postinc1
 26941                           
 26942                           ;stkvar	_i @ sp[(-22)+14]
 26943  01997C  0E54               	movlw	low _dbuf
 26944  01997E  6E0B               	movwf	(btemp+10)^0,c
 26945  019980  0E03               	movlw	high _dbuf
 26946  019982  6E0C               	movwf	(btemp+11)^0,c
 26947  019984  0EF8               	movlw	-8
 26948  019986  50E3               	movf	plusw1,w,c
 26949  019988  260B               	addwf	(btemp+10)^0,f,c
 26950  01998A  0EF9               	movlw	-7
 26951  01998C  50E3               	movf	plusw1,w,c
 26952  01998E  220C               	addwfc	(btemp+11)^0,f,c
 26953  019990  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26954  019996  0060  F033  FFE6   	movff	btemp+11,postinc1
 26955                           
 26956                           ;stkvar	_fp @ sp[(-24)+-2]
 26957  01999C  0EE6               	movlw	-26
 26958  01999E  006F FF8F FFE6     	movff	plusw1,postinc1
 26959  0199A4  006F FF8F FFE6     	movff	plusw1,postinc1
 26960  0199AA  EC30  F0F6         	call	_pad	;wreg free
 26961                           
 26962                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 26963  0199AE  0EE1               	movlw	225
 26964  0199B0  26E1               	addwf	fsr1l,f,c
 26965  0199B2  0EFF               	movlw	255
 26966  0199B4  22E2               	addwfc	fsr1h,f,c
 26967  0199B6  0012               	return		;funcret
 26968  0199B8                     __end_of_xtoa:
 26969                           	opt callstack 0
 26970                           
 26971 ;; *************** function _toupper *****************
 26972 ;; Defined at:
 26973 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 26974 ;; Parameters:    Size  Location     Type
 26975 ;;  c               2  [STACK] int 
 26976 ;; Auto vars:     Size  Location     Type
 26977 ;;		None
 26978 ;; Return value:  Size  Location     Type
 26979 ;;                  2  [STACK] int 
 26980 ;; Registers used:
 26981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 26982 ;; Tracked objects:
 26983 ;;		On entry : 0/3
 26984 ;;		On exit  : 0/0
 26985 ;;		Unchanged: 0/0
 26986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26991 ;;Total ram usage:        0 bytes
 26992 ;; Hardware stack levels used:    1
 26993 ;; Hardware stack levels required when called:   16
 26994 ;; This function calls:
 26995 ;;		_islower
 26996 ;; This function is called by:
 26997 ;;		_xtoa
 26998 ;; This function uses a reentrant model
 26999 ;;
 27000                           
 27001                           	psect	text92
 27002  000600                     __ptext92:
 27003                           	opt callstack 0
 27004  000600                     _toupper:
 27005                           	opt callstack 0
 27006                           
 27007                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27008  000600  52E6               	movf	postinc1,f,c
 27009  000602  52E6               	movf	postinc1,f,c
 27010                           
 27011                           ;stkvar	_c @ sp[(-2)+-2]
 27012                           
 27013                           ;incstack = 0
 27014 ;; hardware stack exceeded
 27015  000604  0EFC               	movlw	-4
 27016  000606  50E3               	movf	plusw1,w,c
 27017  000608  0F9F               	addlw	159
 27018  00060A  6E0B               	movwf	(btemp+10)^0,c
 27019  00060C  0EFD               	movlw	-3
 27020  00060E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27021  000614  0EFF               	movlw	255
 27022  000616  220C               	addwfc	(btemp+11)^0,f,c
 27023  000618  500C               	movf	(btemp+11)^0,w,c
 27024  00061A  E106               	bnz	u7920
 27025  00061C  0E1A               	movlw	26
 27026  00061E  5C0B               	subwf	(btemp+10)^0,w,c
 27027  000620  B0D8               	btfsc	status,0,c
 27028  000622  D002               	goto	u7920
 27029  000624  0E01               	movlw	1
 27030  000626  D001               	goto	u7930
 27031  000628                     u7920:
 27032  000628  0E00               	movlw	0
 27033  00062A                     u7930:
 27034  00062A  6E0B               	movwf	(btemp+10)^0,c
 27035  00062C  6A0C               	clrf	(btemp+11)^0,c
 27036                           
 27037                           ;stkvar	_toupper$7807 @ sp[(-2)+0]
 27038  00062E  0EFE               	movlw	-2
 27039  000630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27040  000636  0EFF               	movlw	-1
 27041  000638  0060  F033  FFE3   	movff	btemp+11,plusw1
 27042                           
 27043                           ;stkvar	_toupper$7807 @ sp[(-2)+0]
 27044  00063E  0EFE               	movlw	-2
 27045  000640  006F FF8C  F001    	movff	plusw1,btemp
 27046  000646  0EFF               	movlw	-1
 27047  000648  50E3               	movf	plusw1,w,c
 27048  00064A  1001               	iorwf	btemp^0,w,c
 27049  00064C  B4D8               	btfsc	status,2,c
 27050  00064E  D00D               	goto	l10083
 27051                           
 27052                           ;stkvar	_c @ sp[(-2)+-2]
 27053  000650  0EFC               	movlw	-4
 27054  000652  006F FF8C  F001    	movff	plusw1,btemp
 27055  000658  0EFD               	movlw	-3
 27056  00065A  006F FF8C  F002    	movff	plusw1,btemp+1
 27057  000660  0E5F               	movlw	95
 27058  000662  1601               	andwf	btemp^0,f,c
 27059  000664  0E00               	movlw	0
 27060  000666  1602               	andwf	(btemp+1)^0,f,c
 27061  000668  D008               	goto	l3811
 27062  00066A                     l10083:
 27063                           
 27064                           ;stkvar	_c @ sp[(-2)+-2]
 27065  00066A  0EFC               	movlw	-4
 27066  00066C  006F FF8C  F001    	movff	plusw1,btemp
 27067  000672  0EFD               	movlw	-3
 27068  000674  006F FF8C  F002    	movff	plusw1,btemp+1
 27069  00067A                     l3811:
 27070                           
 27071                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27072  00067A  52E5               	movf	postdec1,f,c
 27073  00067C  52E5               	movf	postdec1,f,c
 27074  00067E  52E5               	movf	postdec1,f,c
 27075  000680  52E5               	movf	postdec1,f,c
 27076  000682  0012               	return		;funcret
 27077  000684                     __end_of_toupper:
 27078                           	opt callstack 0
 27079                           
 27080 ;; *************** function _islower *****************
 27081 ;; Defined at:
 27082 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27083 ;; Parameters:    Size  Location     Type
 27084 ;;  c               2  [STACK] int 
 27085 ;; Auto vars:     Size  Location     Type
 27086 ;;		None
 27087 ;; Return value:  Size  Location     Type
 27088 ;;                  2  [STACK] int 
 27089 ;; Registers used:
 27090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27091 ;; Tracked objects:
 27092 ;;		On entry : 0/0
 27093 ;;		On exit  : 0/0
 27094 ;;		Unchanged: 0/0
 27095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27100 ;;Total ram usage:        0 bytes
 27101 ;; Hardware stack levels used:    1
 27102 ;; Hardware stack levels required when called:   15
 27103 ;; This function calls:
 27104 ;;		Nothing
 27105 ;; This function is called by:
 27106 ;;		_toupper
 27107 ;; This function uses a reentrant model
 27108 ;;
 27109                           
 27110                           	psect	text93
 27111  0016C0                     __ptext93:
 27112                           	opt callstack 0
 27113  0016C0                     _islower:
 27114                           	opt callstack 0
 27115                           
 27116                           ;stkvar	_c @ sp[(0)+-2]
 27117                           
 27118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27119                           ;incstack = 0
 27120 ;; hardware stack exceeded
 27121  0016C0  0EFE               	movlw	-2
 27122  0016C2  50E3               	movf	plusw1,w,c
 27123  0016C4  0F9F               	addlw	159
 27124  0016C6  6E0B               	movwf	(btemp+10)^0,c
 27125  0016C8  0EFF               	movlw	-1
 27126  0016CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 27127  0016D0  0EFF               	movlw	255
 27128  0016D2  220C               	addwfc	(btemp+11)^0,f,c
 27129  0016D4  500C               	movf	(btemp+11)^0,w,c
 27130  0016D6  E106               	bnz	u7550
 27131  0016D8  0E1A               	movlw	26
 27132  0016DA  5C0B               	subwf	(btemp+10)^0,w,c
 27133  0016DC  B0D8               	btfsc	status,0,c
 27134  0016DE  D002               	goto	u7550
 27135  0016E0  0E01               	movlw	1
 27136  0016E2  D001               	goto	u7560
 27137  0016E4                     u7550:
 27138  0016E4  0E00               	movlw	0
 27139  0016E6                     u7560:
 27140  0016E6  6E01               	movwf	btemp^0,c
 27141  0016E8  6A02               	clrf	(btemp+1)^0,c
 27142                           
 27143                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27144  0016EA  52E5               	movf	postdec1,f,c
 27145  0016EC  52E5               	movf	postdec1,f,c
 27146  0016EE  0012               	return		;funcret
 27147  0016F0                     __end_of_islower:
 27148                           	opt callstack 0
 27149                           
 27150 ;; *************** function _isalpha *****************
 27151 ;; Defined at:
 27152 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27153 ;; Parameters:    Size  Location     Type
 27154 ;;  c               2  [STACK] int 
 27155 ;; Auto vars:     Size  Location     Type
 27156 ;;		None
 27157 ;; Return value:  Size  Location     Type
 27158 ;;                  2  [STACK] int 
 27159 ;; Registers used:
 27160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27161 ;; Tracked objects:
 27162 ;;		On entry : 0/0
 27163 ;;		On exit  : 0/0
 27164 ;;		Unchanged: 0/0
 27165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27170 ;;Total ram usage:        0 bytes
 27171 ;; Hardware stack levels used:    1
 27172 ;; Hardware stack levels required when called:   15
 27173 ;; This function calls:
 27174 ;;		Nothing
 27175 ;; This function is called by:
 27176 ;;		_xtoa
 27177 ;; This function uses a reentrant model
 27178 ;;
 27179                           
 27180                           	psect	text94
 27181  00126E                     __ptext94:
 27182                           	opt callstack 0
 27183  00126E                     _isalpha:
 27184                           	opt callstack 0
 27185                           
 27186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27187                           ;incstack = 0
 27188 ;; hardware stack exceeded
 27189  00126E  0E9F               	movlw	159
 27190  001270  6E0B               	movwf	(btemp+10)^0,c
 27191  001272  0EFF               	movlw	255
 27192  001274  6E0C               	movwf	(btemp+11)^0,c
 27193                           
 27194                           ;stkvar	_c @ sp[(0)+-2]
 27195  001276  0EFE               	movlw	-2
 27196  001278  006F FF8C  F009    	movff	plusw1,btemp+8
 27197  00127E  0EFF               	movlw	-1
 27198  001280  006F FF8C  F00A    	movff	plusw1,btemp+9
 27199  001286  0E20               	movlw	32
 27200  001288  1209               	iorwf	(btemp+8)^0,f,c
 27201  00128A  0E00               	movlw	0
 27202  00128C  120A               	iorwf	(btemp+9)^0,f,c
 27203  00128E  500B               	movf	(btemp+10)^0,w,c
 27204  001290  2609               	addwf	(btemp+8)^0,f,c
 27205  001292  500C               	movf	(btemp+11)^0,w,c
 27206  001294  220A               	addwfc	(btemp+9)^0,f,c
 27207  001296  500A               	movf	(btemp+9)^0,w,c
 27208  001298  E106               	bnz	u7900
 27209  00129A  0E1A               	movlw	26
 27210  00129C  5C09               	subwf	(btemp+8)^0,w,c
 27211  00129E  B0D8               	btfsc	status,0,c
 27212  0012A0  D002               	goto	u7900
 27213  0012A2  0E01               	movlw	1
 27214  0012A4  D001               	goto	u7910
 27215  0012A6                     u7900:
 27216  0012A6  0E00               	movlw	0
 27217  0012A8                     u7910:
 27218  0012A8  6E01               	movwf	btemp^0,c
 27219  0012AA  6A02               	clrf	(btemp+1)^0,c
 27220                           
 27221                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27222  0012AC  52E5               	movf	postdec1,f,c
 27223  0012AE  52E5               	movf	postdec1,f,c
 27224  0012B0  0012               	return		;funcret
 27225  0012B2                     __end_of_isalpha:
 27226                           	opt callstack 0
 27227                           
 27228 ;; *************** function _utoa *****************
 27229 ;; Defined at:
 27230 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27231 ;; Parameters:    Size  Location     Type
 27232 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27233 ;;		 -> f(6), NULL(0), 
 27234 ;;  d               8  [STACK] unsigned long long 
 27235 ;; Auto vars:     Size  Location     Type
 27236 ;;  n               8  [STACK] unsigned long long 
 27237 ;;  i               2  [STACK] int 
 27238 ;;  w               2  [STACK] int 
 27239 ;;  p               2  [STACK] int 
 27240 ;; Return value:  Size  Location     Type
 27241 ;;                  2  [STACK] int 
 27242 ;; Registers used:
 27243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 27244 ;; Tracked objects:
 27245 ;;		On entry : 0/0
 27246 ;;		On exit  : 0/0
 27247 ;;		Unchanged: 0/0
 27248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27253 ;;Total ram usage:        0 bytes
 27254 ;; Hardware stack levels used:    1
 27255 ;; Hardware stack levels required when called:   20
 27256 ;; This function calls:
 27257 ;;		___lodiv
 27258 ;;		___lomod
 27259 ;;		_pad
 27260 ;; This function is called by:
 27261 ;;		_vfpfcnvrt
 27262 ;; This function uses a reentrant model
 27263 ;;
 27264                           
 27265                           	psect	text95
 27266  01A074                     __ptext95:
 27267                           	opt callstack 0
 27268  01A074                     _utoa:
 27269                           	opt callstack 0
 27270                           
 27271                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27272  01A074  0E0E               	movlw	14
 27273  01A076  26E1               	addwf	fsr1l,f,c
 27274  01A078  0E00               	movlw	0
 27275  01A07A  22E2               	addwfc	fsr1h,f,c
 27276                           
 27277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 27278                           
 27279                           ;incstack = 0
 27280 ;; hardware stack exceeded
 27281  01A07C  AE3D               	btfss	(_prec+1)^0,7,c
 27282                           
 27283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 27284  01A07E  923E               	bcf	_flags^0,1,c
 27285                           
 27286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 27287  01A080  BE3D               	btfsc	(_prec+1)^0,7,c
 27288  01A082  D005               	goto	u15040
 27289  01A084  503D               	movf	(_prec+1)^0,w,c
 27290  01A086  E110               	bnz	l15705
 27291  01A088  043C               	decf	_prec^0,w,c
 27292  01A08A  B0D8               	btfsc	status,0,c
 27293  01A08C  D00D               	goto	l15705
 27294  01A08E                     u15040:
 27295  01A08E  0E01               	movlw	1
 27296  01A090  6E0B               	movwf	(btemp+10)^0,c
 27297  01A092  0E00               	movlw	0
 27298  01A094  6E0C               	movwf	(btemp+11)^0,c
 27299                           
 27300                           ;stkvar	_p @ sp[(-14)+12]
 27301  01A096  0EFE               	movlw	-2
 27302  01A098  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27303  01A09E  0EFF               	movlw	-1
 27304  01A0A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27305  01A0A6  D008               	goto	l2599
 27306  01A0A8                     l15705:
 27307                           
 27308                           ;stkvar	_p @ sp[(-14)+12]
 27309  01A0A8  0EFE               	movlw	-2
 27310  01A0AA  0060  F0F3  FFE3   	movff	_prec,plusw1
 27311  01A0B0  0EFF               	movlw	-1
 27312  01A0B2  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 27313  01A0B8                     l2599:
 27314                           
 27315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 27316                           ;stkvar	_w @ sp[(-14)+10]
 27317  01A0B8  0EFC               	movlw	-4
 27318  01A0BA  0060  F0EB  FFE3   	movff	_width,plusw1
 27319  01A0C0  0EFD               	movlw	-3
 27320  01A0C2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 27321                           
 27322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 27323                           ;stkvar	_d @ sp[(-14)+-10]
 27324  01A0C8  0EE8               	movlw	232
 27325  01A0CA  24E1               	addwf	fsr1l,w,c
 27326  01A0CC  6ED9               	movwf	fsr2l,c
 27327  01A0CE  0EFF               	movlw	255
 27328  01A0D0  20E2               	addwfc	fsr1h,w,c
 27329  01A0D2  6EDA               	movwf	fsr2h,c
 27330                           
 27331                           ;stkvar	_n @ sp[(-14)+0]
 27332  01A0D4  0E08               	movlw	8
 27333  01A0D6  6E01               	movwf	btemp^0,c
 27334  01A0D8  0EF2               	movlw	-14
 27335  01A0DA                     us1505999:
 27336  01A0DA  006F FF7B FFE3     	movff	postinc2,plusw1
 27337  01A0E0  28E8               	incf	wreg,w,c
 27338  01A0E2  2E01               	decfsz	btemp^0,f,c
 27339  01A0E4  D7FA               	bra	us1505999
 27340                           
 27341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 27342  01A0E6  0E4F               	movlw	79
 27343  01A0E8  6E0B               	movwf	(btemp+10)^0,c
 27344  01A0EA  0E00               	movlw	0
 27345  01A0EC  6E0C               	movwf	(btemp+11)^0,c
 27346                           
 27347                           ;stkvar	_i @ sp[(-14)+8]
 27348  01A0EE  0EFA               	movlw	-6
 27349  01A0F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27350  01A0F6  0EFB               	movlw	-5
 27351  01A0F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27352                           
 27353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 27354  01A0FE  0103               	movlb	3	; () banked
 27355  01A100  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27356                           
 27357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27358  01A102  D0FB               	goto	l15723
 27359  01A104                     l15713:
 27360                           
 27361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 27362                           ;stkvar	_i @ sp[(-14)+8]
 27363  01A104  50E1               	movf	fsr1l,w,c
 27364  01A106  0FFA               	addlw	-6
 27365  01A108  6ED9               	movwf	fsr2l,c
 27366  01A10A  50E2               	movf	fsr1h,w,c
 27367  01A10C  6EDA               	movwf	fsr2h,c
 27368  01A10E  0EFF               	movlw	255
 27369  01A110  22DA               	addwfc	fsr2h,f,c
 27370  01A112  06DE               	decf	postinc2,f,c
 27371  01A114  0E00               	movlw	0
 27372  01A116  5ADD               	subwfb	postdec2,f,c
 27373                           
 27374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 27375  01A118  0E0A               	movlw	10
 27376  01A11A  6EE6               	movwf	postinc1,c
 27377  01A11C  0E00               	movlw	0
 27378  01A11E  6EE6               	movwf	postinc1,c
 27379  01A120  0E00               	movlw	0
 27380  01A122  6EE6               	movwf	postinc1,c
 27381  01A124  0E00               	movlw	0
 27382  01A126  6EE6               	movwf	postinc1,c
 27383  01A128  0E00               	movlw	0
 27384  01A12A  6EE6               	movwf	postinc1,c
 27385  01A12C  0E00               	movlw	0
 27386  01A12E  6EE6               	movwf	postinc1,c
 27387  01A130  0E00               	movlw	0
 27388  01A132  6EE6               	movwf	postinc1,c
 27389  01A134  0E00               	movlw	0
 27390  01A136  6EE6               	movwf	postinc1,c
 27391                           
 27392                           ;stkvar	_n @ sp[(-22)+0]
 27393  01A138  50E1               	movf	fsr1l,w,c
 27394  01A13A  0FEA               	addlw	-22
 27395  01A13C  6ED9               	movwf	fsr2l,c
 27396  01A13E  50E2               	movf	fsr1h,w,c
 27397  01A140  6EDA               	movwf	fsr2h,c
 27398  01A142  0EFF               	movlw	255
 27399  01A144  22DA               	addwfc	fsr2h,f,c
 27400  01A146  006F FF7B FFE6     	movff	postinc2,postinc1
 27401  01A14C  006F FF7B FFE6     	movff	postinc2,postinc1
 27402  01A152  006F FF7B FFE6     	movff	postinc2,postinc1
 27403  01A158  006F FF7B FFE6     	movff	postinc2,postinc1
 27404  01A15E  006F FF7B FFE6     	movff	postinc2,postinc1
 27405  01A164  006F FF7B FFE6     	movff	postinc2,postinc1
 27406  01A16A  006F FF7B FFE6     	movff	postinc2,postinc1
 27407  01A170  006F FF7B FFE6     	movff	postinc2,postinc1
 27408  01A176  EC26  F0F2         	call	___lomod	;wreg free
 27409  01A17A  52E5               	movf	postdec1,f,c
 27410  01A17C  006F FF9C  F018    	movff	indf1,btemp+23
 27411  01A182  52E5               	movf	postdec1,f,c
 27412  01A184  006F FF9C  F017    	movff	indf1,btemp+22
 27413  01A18A  52E5               	movf	postdec1,f,c
 27414  01A18C  006F FF9C  F016    	movff	indf1,btemp+21
 27415  01A192  52E5               	movf	postdec1,f,c
 27416  01A194  006F FF9C  F015    	movff	indf1,btemp+20
 27417  01A19A  52E5               	movf	postdec1,f,c
 27418  01A19C  006F FF9C  F014    	movff	indf1,btemp+19
 27419  01A1A2  52E5               	movf	postdec1,f,c
 27420  01A1A4  006F FF9C  F013    	movff	indf1,btemp+18
 27421  01A1AA  52E5               	movf	postdec1,f,c
 27422  01A1AC  006F FF9C  F012    	movff	indf1,btemp+17
 27423  01A1B2  52E5               	movf	postdec1,f,c
 27424  01A1B4  006F FF9C  F011    	movff	indf1,btemp+16
 27425  01A1BA  0EF8               	movlw	248
 27426  01A1BC  26E1               	addwf	fsr1l,f,c
 27427  01A1BE  0EFF               	movlw	255
 27428  01A1C0  22E2               	addwfc	fsr1h,f,c
 27429  01A1C2  0E30               	movlw	48
 27430  01A1C4  2611               	addwf	(btemp+16)^0,f,c
 27431                           
 27432                           ;stkvar	_i @ sp[(-14)+8]
 27433  01A1C6  0EFA               	movlw	-6
 27434  01A1C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 27435  01A1CE  0EFB               	movlw	-5
 27436  01A1D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27437  01A1D6  0E54               	movlw	low _dbuf
 27438  01A1D8  240B               	addwf	(btemp+10)^0,w,c
 27439  01A1DA  6ED9               	movwf	fsr2l,c
 27440  01A1DC  0E03               	movlw	high _dbuf
 27441  01A1DE  200C               	addwfc	(btemp+11)^0,w,c
 27442  01A1E0  6EDA               	movwf	fsr2h,c
 27443  01A1E2  0060  F047  FFDF   	movff	btemp+16,indf2
 27444                           
 27445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 27446                           ;stkvar	_p @ sp[(-14)+12]
 27447  01A1E8  50E1               	movf	fsr1l,w,c
 27448  01A1EA  0FFE               	addlw	-2
 27449  01A1EC  6ED9               	movwf	fsr2l,c
 27450  01A1EE  50E2               	movf	fsr1h,w,c
 27451  01A1F0  6EDA               	movwf	fsr2h,c
 27452  01A1F2  0EFF               	movlw	255
 27453  01A1F4  22DA               	addwfc	fsr2h,f,c
 27454  01A1F6  06DE               	decf	postinc2,f,c
 27455  01A1F8  0E00               	movlw	0
 27456  01A1FA  5ADD               	subwfb	postdec2,f,c
 27457                           
 27458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 27459                           ;stkvar	_w @ sp[(-14)+10]
 27460  01A1FC  50E1               	movf	fsr1l,w,c
 27461  01A1FE  0FFC               	addlw	-4
 27462  01A200  6ED9               	movwf	fsr2l,c
 27463  01A202  50E2               	movf	fsr1h,w,c
 27464  01A204  6EDA               	movwf	fsr2h,c
 27465  01A206  0EFF               	movlw	255
 27466  01A208  22DA               	addwfc	fsr2h,f,c
 27467  01A20A  06DE               	decf	postinc2,f,c
 27468  01A20C  0E00               	movlw	0
 27469  01A20E  5ADD               	subwfb	postdec2,f,c
 27470                           
 27471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 27472  01A210  0E0A               	movlw	10
 27473  01A212  6EE6               	movwf	postinc1,c
 27474  01A214  0E00               	movlw	0
 27475  01A216  6EE6               	movwf	postinc1,c
 27476  01A218  0E00               	movlw	0
 27477  01A21A  6EE6               	movwf	postinc1,c
 27478  01A21C  0E00               	movlw	0
 27479  01A21E  6EE6               	movwf	postinc1,c
 27480  01A220  0E00               	movlw	0
 27481  01A222  6EE6               	movwf	postinc1,c
 27482  01A224  0E00               	movlw	0
 27483  01A226  6EE6               	movwf	postinc1,c
 27484  01A228  0E00               	movlw	0
 27485  01A22A  6EE6               	movwf	postinc1,c
 27486  01A22C  0E00               	movlw	0
 27487  01A22E  6EE6               	movwf	postinc1,c
 27488                           
 27489                           ;stkvar	_n @ sp[(-22)+0]
 27490  01A230  50E1               	movf	fsr1l,w,c
 27491  01A232  0FEA               	addlw	-22
 27492  01A234  6ED9               	movwf	fsr2l,c
 27493  01A236  50E2               	movf	fsr1h,w,c
 27494  01A238  6EDA               	movwf	fsr2h,c
 27495  01A23A  0EFF               	movlw	255
 27496  01A23C  22DA               	addwfc	fsr2h,f,c
 27497  01A23E  006F FF7B FFE6     	movff	postinc2,postinc1
 27498  01A244  006F FF7B FFE6     	movff	postinc2,postinc1
 27499  01A24A  006F FF7B FFE6     	movff	postinc2,postinc1
 27500  01A250  006F FF7B FFE6     	movff	postinc2,postinc1
 27501  01A256  006F FF7B FFE6     	movff	postinc2,postinc1
 27502  01A25C  006F FF7B FFE6     	movff	postinc2,postinc1
 27503  01A262  006F FF7B FFE6     	movff	postinc2,postinc1
 27504  01A268  006F FF7B FFE6     	movff	postinc2,postinc1
 27505  01A26E  EC3E  F0EB         	call	___lodiv	;wreg free
 27506  01A272  52E5               	movf	postdec1,f,c
 27507  01A274  006F FF9C  F018    	movff	indf1,btemp+23
 27508  01A27A  52E5               	movf	postdec1,f,c
 27509  01A27C  006F FF9C  F017    	movff	indf1,btemp+22
 27510  01A282  52E5               	movf	postdec1,f,c
 27511  01A284  006F FF9C  F016    	movff	indf1,btemp+21
 27512  01A28A  52E5               	movf	postdec1,f,c
 27513  01A28C  006F FF9C  F015    	movff	indf1,btemp+20
 27514  01A292  52E5               	movf	postdec1,f,c
 27515  01A294  006F FF9C  F014    	movff	indf1,btemp+19
 27516  01A29A  52E5               	movf	postdec1,f,c
 27517  01A29C  006F FF9C  F013    	movff	indf1,btemp+18
 27518  01A2A2  52E5               	movf	postdec1,f,c
 27519  01A2A4  006F FF9C  F012    	movff	indf1,btemp+17
 27520  01A2AA  52E5               	movf	postdec1,f,c
 27521  01A2AC  006F FF9C  F011    	movff	indf1,btemp+16
 27522  01A2B2  0EF8               	movlw	248
 27523  01A2B4  26E1               	addwf	fsr1l,f,c
 27524  01A2B6  0EFF               	movlw	255
 27525  01A2B8  22E2               	addwfc	fsr1h,f,c
 27526                           
 27527                           ;stkvar	_n @ sp[(-14)+0]
 27528  01A2BA  0EF2               	movlw	-14
 27529  01A2BC  0060  F047  FFE3   	movff	btemp+16,plusw1
 27530  01A2C2  0EF3               	movlw	-13
 27531  01A2C4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 27532  01A2CA  0EF4               	movlw	-12
 27533  01A2CC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 27534  01A2D2  0EF5               	movlw	-11
 27535  01A2D4  0060  F053  FFE3   	movff	btemp+19,plusw1
 27536  01A2DA  0EF6               	movlw	-10
 27537  01A2DC  0060  F057  FFE3   	movff	btemp+20,plusw1
 27538  01A2E2  0EF7               	movlw	-9
 27539  01A2E4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 27540  01A2EA  0EF8               	movlw	-8
 27541  01A2EC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 27542  01A2F2  0EF9               	movlw	-7
 27543  01A2F4  0060  F063  FFE3   	movff	btemp+23,plusw1
 27544  01A2FA                     l15723:
 27545                           
 27546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27547                           ;stkvar	_i @ sp[(-14)+8]
 27548  01A2FA  0EFA               	movlw	-6
 27549  01A2FC  006F FF8C  F001    	movff	plusw1,btemp
 27550  01A302  0EFB               	movlw	-5
 27551  01A304  50E3               	movf	plusw1,w,c
 27552  01A306  1001               	iorwf	btemp^0,w,c
 27553  01A308  B4D8               	btfsc	status,2,c
 27554  01A30A  D02F               	goto	u15100
 27555                           
 27556                           ;stkvar	_n @ sp[(-14)+0]
 27557  01A30C  0EF2               	movlw	-14
 27558  01A30E  50E3               	movf	plusw1,w,c
 27559  01A310  E115               	bnz	u15071
 27560  01A312  0EF3               	movlw	-13
 27561  01A314  50E3               	movf	plusw1,w,c
 27562  01A316  E112               	bnz	u15071
 27563  01A318  0EF4               	movlw	-12
 27564  01A31A  50E3               	movf	plusw1,w,c
 27565  01A31C  E10F               	bnz	u15071
 27566  01A31E  0EF5               	movlw	-11
 27567  01A320  50E3               	movf	plusw1,w,c
 27568  01A322  E10C               	bnz	u15071
 27569  01A324  0EF6               	movlw	-10
 27570  01A326  50E3               	movf	plusw1,w,c
 27571  01A328  E109               	bnz	u15071
 27572  01A32A  0EF7               	movlw	-9
 27573  01A32C  50E3               	movf	plusw1,w,c
 27574  01A32E  E106               	bnz	u15071
 27575  01A330  0EF8               	movlw	-8
 27576  01A332  50E3               	movf	plusw1,w,c
 27577  01A334  E103               	bnz	u15071
 27578  01A336  0EF9               	movlw	-7
 27579  01A338  50E3               	movf	plusw1,w,c
 27580  01A33A  A4D8               	btfss	status,2,c
 27581  01A33C                     u15071:
 27582  01A33C  D6E3               	goto	l15713
 27583                           
 27584                           ;stkvar	_p @ sp[(-14)+12]
 27585  01A33E  0EFF               	movlw	-1
 27586  01A340  BEE3               	btfsc	plusw1,7,c
 27587  01A342  D007               	goto	u15080
 27588  01A344  0EFF               	movlw	-1
 27589  01A346  50E3               	movf	plusw1,w,c
 27590  01A348  E103               	bnz	u15081
 27591  01A34A  0EFE               	movlw	-2
 27592  01A34C  04E3               	decf	plusw1,w,c
 27593  01A34E  B0D8               	btfsc	status,0,c
 27594  01A350                     u15081:
 27595  01A350  D6D9               	goto	l15713
 27596  01A352                     u15080:
 27597                           
 27598                           ;stkvar	_w @ sp[(-14)+10]
 27599  01A352  0EFD               	movlw	-3
 27600  01A354  BEE3               	btfsc	plusw1,7,c
 27601  01A356  D009               	goto	u15100
 27602  01A358  0EFD               	movlw	-3
 27603  01A35A  50E3               	movf	plusw1,w,c
 27604  01A35C  E104               	bnz	u15090
 27605  01A35E  0EFC               	movlw	-4
 27606  01A360  04E3               	decf	plusw1,w,c
 27607  01A362  A0D8               	btfss	status,0,c
 27608  01A364  D002               	goto	u15100
 27609  01A366                     u15090:
 27610  01A366  B23E               	btfsc	_flags^0,1,c
 27611  01A368  D6CD               	goto	l15713
 27612  01A36A                     u15100:
 27613                           
 27614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 27615                           ;stkvar	_w @ sp[(-14)+10]
 27616  01A36A  0EFC               	movlw	-4
 27617  01A36C  006F FF8F FFE6     	movff	plusw1,postinc1
 27618  01A372  006F FF8F FFE6     	movff	plusw1,postinc1
 27619                           
 27620                           ;stkvar	_i @ sp[(-16)+8]
 27621  01A378  0E54               	movlw	low _dbuf
 27622  01A37A  6E0B               	movwf	(btemp+10)^0,c
 27623  01A37C  0E03               	movlw	high _dbuf
 27624  01A37E  6E0C               	movwf	(btemp+11)^0,c
 27625  01A380  0EF8               	movlw	-8
 27626  01A382  50E3               	movf	plusw1,w,c
 27627  01A384  260B               	addwf	(btemp+10)^0,f,c
 27628  01A386  0EF9               	movlw	-7
 27629  01A388  50E3               	movf	plusw1,w,c
 27630  01A38A  220C               	addwfc	(btemp+11)^0,f,c
 27631  01A38C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27632  01A392  0060  F033  FFE6   	movff	btemp+11,postinc1
 27633                           
 27634                           ;stkvar	_fp @ sp[(-18)+-2]
 27635  01A398  0EEC               	movlw	-20
 27636  01A39A  006F FF8F FFE6     	movff	plusw1,postinc1
 27637  01A3A0  006F FF8F FFE6     	movff	plusw1,postinc1
 27638  01A3A6  EC30  F0F6         	call	_pad	;wreg free
 27639                           
 27640                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 27641  01A3AA  0EE8               	movlw	232
 27642  01A3AC  26E1               	addwf	fsr1l,f,c
 27643  01A3AE  0EFF               	movlw	255
 27644  01A3B0  22E2               	addwfc	fsr1h,f,c
 27645  01A3B2  0012               	return		;funcret
 27646  01A3B4                     __end_of_utoa:
 27647                           	opt callstack 0
 27648                           
 27649 ;; *************** function ___lomod *****************
 27650 ;; Defined at:
 27651 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 27652 ;; Parameters:    Size  Location     Type
 27653 ;;  dividend        8  [STACK] unsigned long long 
 27654 ;;  divisor         8  [STACK] unsigned long long 
 27655 ;; Auto vars:     Size  Location     Type
 27656 ;;  counter         1  [STACK] unsigned char 
 27657 ;; Return value:  Size  Location     Type
 27658 ;;                  8  [STACK] unsigned long long 
 27659 ;; Registers used:
 27660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27661 ;; Tracked objects:
 27662 ;;		On entry : 0/3
 27663 ;;		On exit  : 0/0
 27664 ;;		Unchanged: 0/0
 27665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27670 ;;Total ram usage:        0 bytes
 27671 ;; Hardware stack levels used:    1
 27672 ;; Hardware stack levels required when called:   15
 27673 ;; This function calls:
 27674 ;;		Nothing
 27675 ;; This function is called by:
 27676 ;;		_utoa
 27677 ;; This function uses a reentrant model
 27678 ;;
 27679                           
 27680                           	psect	text96
 27681  01E44C                     __ptext96:
 27682                           	opt callstack 0
 27683  01E44C                     ___lomod:
 27684                           	opt callstack 0
 27685                           
 27686                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 27687  01E44C  52E6               	movf	postinc1,f,c
 27688                           
 27689                           ;stkvar	_divisor @ sp[(-1)+-16]
 27690                           
 27691                           ;incstack = 0
 27692 ;; hardware stack exceeded
 27693  01E44E  0EEF               	movlw	-17
 27694  01E450  50E3               	movf	plusw1,w,c
 27695  01E452  E116               	bnz	u9110
 27696  01E454  0EF0               	movlw	-16
 27697  01E456  50E3               	movf	plusw1,w,c
 27698  01E458  E113               	bnz	u9110
 27699  01E45A  0EF1               	movlw	-15
 27700  01E45C  50E3               	movf	plusw1,w,c
 27701  01E45E  E110               	bnz	u9110
 27702  01E460  0EF2               	movlw	-14
 27703  01E462  50E3               	movf	plusw1,w,c
 27704  01E464  E10D               	bnz	u9110
 27705  01E466  0EF3               	movlw	-13
 27706  01E468  50E3               	movf	plusw1,w,c
 27707  01E46A  E10A               	bnz	u9110
 27708  01E46C  0EF4               	movlw	-12
 27709  01E46E  50E3               	movf	plusw1,w,c
 27710  01E470  E107               	bnz	u9110
 27711  01E472  0EF5               	movlw	-11
 27712  01E474  50E3               	movf	plusw1,w,c
 27713  01E476  E104               	bnz	u9110
 27714  01E478  0EF6               	movlw	-10
 27715  01E47A  50E3               	movf	plusw1,w,c
 27716  01E47C  B4D8               	btfsc	status,2,c
 27717  01E47E  D075               	goto	u9140
 27718  01E480                     u9110:
 27719                           
 27720                           ;stkvar	_counter @ sp[(-1)+0]
 27721  01E480  0EFF               	movlw	-1
 27722  01E482  6AE3               	clrf	plusw1,c
 27723  01E484  D012               	goto	L28
 27724  01E486                     l10719:
 27725                           
 27726                           ;stkvar	_divisor @ sp[(-1)+-16]
 27727  01E486  90D8               	bcf	status,0,c
 27728  01E488  0EEF               	movlw	-17
 27729  01E48A  36E3               	rlcf	plusw1,f,c
 27730  01E48C  0EF0               	movlw	-16
 27731  01E48E  36E3               	rlcf	plusw1,f,c
 27732  01E490  0EF1               	movlw	-15
 27733  01E492  36E3               	rlcf	plusw1,f,c
 27734  01E494  0EF2               	movlw	-14
 27735  01E496  36E3               	rlcf	plusw1,f,c
 27736  01E498  0EF3               	movlw	-13
 27737  01E49A  36E3               	rlcf	plusw1,f,c
 27738  01E49C  0EF4               	movlw	-12
 27739  01E49E  36E3               	rlcf	plusw1,f,c
 27740  01E4A0  0EF5               	movlw	-11
 27741  01E4A2  36E3               	rlcf	plusw1,f,c
 27742  01E4A4  0EF6               	movlw	-10
 27743  01E4A6  36E3               	rlcf	plusw1,f,c
 27744                           
 27745                           ;stkvar	_counter @ sp[(-1)+0]
 27746  01E4A8  0EFF               	movlw	-1
 27747  01E4AA                     L28:
 27748  01E4AA  2AE3               	incf	plusw1,f,c
 27749                           
 27750                           ;stkvar	_divisor @ sp[(-1)+-16]
 27751  01E4AC  0EF6               	movlw	-10
 27752  01E4AE  AEE3               	btfss	plusw1,7,c
 27753  01E4B0  D7EA               	goto	l10719
 27754  01E4B2                     u9120:
 27755                           
 27756                           ;stkvar	_divisor @ sp[(-1)+-16]
 27757                           ;stkvar	_dividend @ sp[(-1)+-8]
 27758  01E4B2  50E1               	movf	fsr1l,w,c
 27759  01E4B4  0FF7               	addlw	-9
 27760  01E4B6  6ED9               	movwf	fsr2l,c
 27761  01E4B8  50E2               	movf	fsr1h,w,c
 27762  01E4BA  6EDA               	movwf	fsr2h,c
 27763  01E4BC  0EFF               	movlw	255
 27764  01E4BE  22DA               	addwfc	fsr2h,f,c
 27765  01E4C0  0EEF               	movlw	-17
 27766  01E4C2  50E3               	movf	plusw1,w,c
 27767  01E4C4  5CDE               	subwf	postinc2,w,c
 27768  01E4C6  0EF0               	movlw	-16
 27769  01E4C8  50E3               	movf	plusw1,w,c
 27770  01E4CA  58DE               	subwfb	postinc2,w,c
 27771  01E4CC  0EF1               	movlw	-15
 27772  01E4CE  50E3               	movf	plusw1,w,c
 27773  01E4D0  58DE               	subwfb	postinc2,w,c
 27774  01E4D2  0EF2               	movlw	-14
 27775  01E4D4  50E3               	movf	plusw1,w,c
 27776  01E4D6  58DE               	subwfb	postinc2,w,c
 27777  01E4D8  0EF3               	movlw	-13
 27778  01E4DA  50E3               	movf	plusw1,w,c
 27779  01E4DC  58DE               	subwfb	postinc2,w,c
 27780  01E4DE  0EF4               	movlw	-12
 27781  01E4E0  50E3               	movf	plusw1,w,c
 27782  01E4E2  58DE               	subwfb	postinc2,w,c
 27783  01E4E4  0EF5               	movlw	-11
 27784  01E4E6  50E3               	movf	plusw1,w,c
 27785  01E4E8  58DE               	subwfb	postinc2,w,c
 27786  01E4EA  0EF6               	movlw	-10
 27787  01E4EC  50E3               	movf	plusw1,w,c
 27788  01E4EE  58DE               	subwfb	postinc2,w,c
 27789  01E4F0  A0D8               	btfss	status,0,c
 27790  01E4F2  D01F               	goto	l10727
 27791                           
 27792                           ;stkvar	_divisor @ sp[(-1)+-16]
 27793                           ;stkvar	_dividend @ sp[(-1)+-8]
 27794  01E4F4  50E1               	movf	fsr1l,w,c
 27795  01E4F6  0FF7               	addlw	-9
 27796  01E4F8  6ED9               	movwf	fsr2l,c
 27797  01E4FA  50E2               	movf	fsr1h,w,c
 27798  01E4FC  6EDA               	movwf	fsr2h,c
 27799  01E4FE  0EFF               	movlw	255
 27800  01E500  22DA               	addwfc	fsr2h,f,c
 27801  01E502  0EEF               	movlw	-17
 27802  01E504  50E3               	movf	plusw1,w,c
 27803  01E506  5EDE               	subwf	postinc2,f,c
 27804  01E508  0EF0               	movlw	-16
 27805  01E50A  50E3               	movf	plusw1,w,c
 27806  01E50C  5ADE               	subwfb	postinc2,f,c
 27807  01E50E  0EF1               	movlw	-15
 27808  01E510  50E3               	movf	plusw1,w,c
 27809  01E512  5ADE               	subwfb	postinc2,f,c
 27810  01E514  0EF2               	movlw	-14
 27811  01E516  50E3               	movf	plusw1,w,c
 27812  01E518  5ADE               	subwfb	postinc2,f,c
 27813  01E51A  0EF3               	movlw	-13
 27814  01E51C  50E3               	movf	plusw1,w,c
 27815  01E51E  5ADE               	subwfb	postinc2,f,c
 27816  01E520  0EF4               	movlw	-12
 27817  01E522  50E3               	movf	plusw1,w,c
 27818  01E524  5ADE               	subwfb	postinc2,f,c
 27819  01E526  0EF5               	movlw	-11
 27820  01E528  50E3               	movf	plusw1,w,c
 27821  01E52A  5ADE               	subwfb	postinc2,f,c
 27822  01E52C  0EF6               	movlw	-10
 27823  01E52E  50E3               	movf	plusw1,w,c
 27824  01E530  5ADE               	subwfb	postinc2,f,c
 27825  01E532                     l10727:
 27826                           
 27827                           ;stkvar	_divisor @ sp[(-1)+-16]
 27828  01E532  90D8               	bcf	status,0,c
 27829  01E534  0EF6               	movlw	-10
 27830  01E536  32E3               	rrcf	plusw1,f,c
 27831  01E538  0EF5               	movlw	-11
 27832  01E53A  32E3               	rrcf	plusw1,f,c
 27833  01E53C  0EF4               	movlw	-12
 27834  01E53E  32E3               	rrcf	plusw1,f,c
 27835  01E540  0EF3               	movlw	-13
 27836  01E542  32E3               	rrcf	plusw1,f,c
 27837  01E544  0EF2               	movlw	-14
 27838  01E546  32E3               	rrcf	plusw1,f,c
 27839  01E548  0EF1               	movlw	-15
 27840  01E54A  32E3               	rrcf	plusw1,f,c
 27841  01E54C  0EF0               	movlw	-16
 27842  01E54E  32E3               	rrcf	plusw1,f,c
 27843  01E550  0EEF               	movlw	-17
 27844  01E552  32E3               	rrcf	plusw1,f,c
 27845                           
 27846                           ;stkvar	_counter @ sp[(-1)+0]
 27847  01E554  0EFF               	movlw	-1
 27848  01E556  50E3               	movf	plusw1,w,c
 27849  01E558  6E01               	movwf	btemp^0,c
 27850  01E55A  0E01               	movlw	1
 27851  01E55C  5E01               	subwf	btemp^0,f,c
 27852  01E55E  0EFF               	movlw	-1
 27853  01E560  0060  F007  FFE3   	movff	btemp,plusw1
 27854  01E566  A4D8               	btfss	status,2,c
 27855  01E568  D7A4               	goto	u9120
 27856  01E56A                     u9140:
 27857                           
 27858                           ;stkvar	_dividend @ sp[(-1)+-8]
 27859  01E56A  0EF7               	movlw	247
 27860  01E56C  24E1               	addwf	fsr1l,w,c
 27861  01E56E  6ED9               	movwf	fsr2l,c
 27862  01E570  0EFF               	movlw	255
 27863  01E572  20E2               	addwfc	fsr1h,w,c
 27864  01E574  6EDA               	movwf	fsr2h,c
 27865                           
 27866                           ;stkvar	?___lomod @ sp[(-1)+-8]
 27867  01E576  0E08               	movlw	8
 27868  01E578  6E01               	movwf	btemp^0,c
 27869  01E57A  0EF7               	movlw	-9
 27870  01E57C                     us915999:
 27871  01E57C  006F FF7B FFE3     	movff	postinc2,plusw1
 27872  01E582  28E8               	incf	wreg,w,c
 27873  01E584  2E01               	decfsz	btemp^0,f,c
 27874  01E586  D7FA               	bra	us915999
 27875                           
 27876                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 27877  01E588  52E5               	movf	postdec1,f,c
 27878  01E58A  0012               	return		;funcret
 27879  01E58C                     __end_of___lomod:
 27880                           	opt callstack 0
 27881                           
 27882 ;; *************** function ___lodiv *****************
 27883 ;; Defined at:
 27884 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;  dividend        8  [STACK] unsigned long long 
 27887 ;;  divisor         8  [STACK] unsigned long long 
 27888 ;; Auto vars:     Size  Location     Type
 27889 ;;  quotient        8  [STACK] unsigned long long 
 27890 ;;  counter         1  [STACK] unsigned char 
 27891 ;; Return value:  Size  Location     Type
 27892 ;;                  8  [STACK] unsigned long long 
 27893 ;; Registers used:
 27894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27895 ;; Tracked objects:
 27896 ;;		On entry : 0/3
 27897 ;;		On exit  : 0/0
 27898 ;;		Unchanged: 0/0
 27899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27904 ;;Total ram usage:        0 bytes
 27905 ;; Hardware stack levels used:    1
 27906 ;; Hardware stack levels required when called:   15
 27907 ;; This function calls:
 27908 ;;		Nothing
 27909 ;; This function is called by:
 27910 ;;		_utoa
 27911 ;; This function uses a reentrant model
 27912 ;;
 27913                           
 27914                           	psect	text97
 27915  01D67C                     __ptext97:
 27916                           	opt callstack 0
 27917  01D67C                     ___lodiv:
 27918                           	opt callstack 0
 27919                           
 27920                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 27921  01D67C  0E09               	movlw	9
 27922  01D67E  26E1               	addwf	fsr1l,f,c
 27923  01D680  0E00               	movlw	0
 27924  01D682  22E2               	addwfc	fsr1h,f,c
 27925                           
 27926                           ;stkvar	_quotient @ sp[(-9)+0]
 27927                           
 27928                           ;incstack = 0
 27929 ;; hardware stack exceeded
 27930  01D684  0E07               	movlw	7
 27931  01D686  6E01               	movwf	btemp^0,c
 27932  01D688  0EF7               	movlw	-9
 27933  01D68A                     u9051:
 27934  01D68A  6AE3               	clrf	plusw1,c
 27935  01D68C  2AE8               	incf	wreg,f,c
 27936  01D68E  0601               	decf	btemp^0,f,c
 27937  01D690  E2FC               	bc	u9051
 27938                           
 27939                           ;stkvar	_divisor @ sp[(-9)+-16]
 27940  01D692  0EE7               	movlw	-25
 27941  01D694  50E3               	movf	plusw1,w,c
 27942  01D696  E116               	bnz	u9060
 27943  01D698  0EE8               	movlw	-24
 27944  01D69A  50E3               	movf	plusw1,w,c
 27945  01D69C  E113               	bnz	u9060
 27946  01D69E  0EE9               	movlw	-23
 27947  01D6A0  50E3               	movf	plusw1,w,c
 27948  01D6A2  E110               	bnz	u9060
 27949  01D6A4  0EEA               	movlw	-22
 27950  01D6A6  50E3               	movf	plusw1,w,c
 27951  01D6A8  E10D               	bnz	u9060
 27952  01D6AA  0EEB               	movlw	-21
 27953  01D6AC  50E3               	movf	plusw1,w,c
 27954  01D6AE  E10A               	bnz	u9060
 27955  01D6B0  0EEC               	movlw	-20
 27956  01D6B2  50E3               	movf	plusw1,w,c
 27957  01D6B4  E107               	bnz	u9060
 27958  01D6B6  0EED               	movlw	-19
 27959  01D6B8  50E3               	movf	plusw1,w,c
 27960  01D6BA  E104               	bnz	u9060
 27961  01D6BC  0EEE               	movlw	-18
 27962  01D6BE  50E3               	movf	plusw1,w,c
 27963  01D6C0  B4D8               	btfsc	status,2,c
 27964  01D6C2  D088               	goto	u9090
 27965  01D6C4                     u9060:
 27966                           
 27967                           ;stkvar	_counter @ sp[(-9)+8]
 27968  01D6C4  0EFF               	movlw	-1
 27969  01D6C6  6AE3               	clrf	plusw1,c
 27970  01D6C8  D012               	goto	L29
 27971  01D6CA                     l10695:
 27972                           
 27973                           ;stkvar	_divisor @ sp[(-9)+-16]
 27974  01D6CA  90D8               	bcf	status,0,c
 27975  01D6CC  0EE7               	movlw	-25
 27976  01D6CE  36E3               	rlcf	plusw1,f,c
 27977  01D6D0  0EE8               	movlw	-24
 27978  01D6D2  36E3               	rlcf	plusw1,f,c
 27979  01D6D4  0EE9               	movlw	-23
 27980  01D6D6  36E3               	rlcf	plusw1,f,c
 27981  01D6D8  0EEA               	movlw	-22
 27982  01D6DA  36E3               	rlcf	plusw1,f,c
 27983  01D6DC  0EEB               	movlw	-21
 27984  01D6DE  36E3               	rlcf	plusw1,f,c
 27985  01D6E0  0EEC               	movlw	-20
 27986  01D6E2  36E3               	rlcf	plusw1,f,c
 27987  01D6E4  0EED               	movlw	-19
 27988  01D6E6  36E3               	rlcf	plusw1,f,c
 27989  01D6E8  0EEE               	movlw	-18
 27990  01D6EA  36E3               	rlcf	plusw1,f,c
 27991                           
 27992                           ;stkvar	_counter @ sp[(-9)+8]
 27993  01D6EC  0EFF               	movlw	-1
 27994  01D6EE                     L29:
 27995  01D6EE  2AE3               	incf	plusw1,f,c
 27996                           
 27997                           ;stkvar	_divisor @ sp[(-9)+-16]
 27998  01D6F0  0EEE               	movlw	-18
 27999  01D6F2  AEE3               	btfss	plusw1,7,c
 28000  01D6F4  D7EA               	goto	l10695
 28001  01D6F6                     u9070:
 28002                           
 28003                           ;stkvar	_quotient @ sp[(-9)+0]
 28004  01D6F6  90D8               	bcf	status,0,c
 28005  01D6F8  0EF7               	movlw	-9
 28006  01D6FA  36E3               	rlcf	plusw1,f,c
 28007  01D6FC  0EF8               	movlw	-8
 28008  01D6FE  36E3               	rlcf	plusw1,f,c
 28009  01D700  0EF9               	movlw	-7
 28010  01D702  36E3               	rlcf	plusw1,f,c
 28011  01D704  0EFA               	movlw	-6
 28012  01D706  36E3               	rlcf	plusw1,f,c
 28013  01D708  0EFB               	movlw	-5
 28014  01D70A  36E3               	rlcf	plusw1,f,c
 28015  01D70C  0EFC               	movlw	-4
 28016  01D70E  36E3               	rlcf	plusw1,f,c
 28017  01D710  0EFD               	movlw	-3
 28018  01D712  36E3               	rlcf	plusw1,f,c
 28019  01D714  0EFE               	movlw	-2
 28020  01D716  36E3               	rlcf	plusw1,f,c
 28021                           
 28022                           ;stkvar	_divisor @ sp[(-9)+-16]
 28023                           ;stkvar	_dividend @ sp[(-9)+-8]
 28024  01D718  50E1               	movf	fsr1l,w,c
 28025  01D71A  0FEF               	addlw	-17
 28026  01D71C  6ED9               	movwf	fsr2l,c
 28027  01D71E  50E2               	movf	fsr1h,w,c
 28028  01D720  6EDA               	movwf	fsr2h,c
 28029  01D722  0EFF               	movlw	255
 28030  01D724  22DA               	addwfc	fsr2h,f,c
 28031  01D726  0EE7               	movlw	-25
 28032  01D728  50E3               	movf	plusw1,w,c
 28033  01D72A  5CDE               	subwf	postinc2,w,c
 28034  01D72C  0EE8               	movlw	-24
 28035  01D72E  50E3               	movf	plusw1,w,c
 28036  01D730  58DE               	subwfb	postinc2,w,c
 28037  01D732  0EE9               	movlw	-23
 28038  01D734  50E3               	movf	plusw1,w,c
 28039  01D736  58DE               	subwfb	postinc2,w,c
 28040  01D738  0EEA               	movlw	-22
 28041  01D73A  50E3               	movf	plusw1,w,c
 28042  01D73C  58DE               	subwfb	postinc2,w,c
 28043  01D73E  0EEB               	movlw	-21
 28044  01D740  50E3               	movf	plusw1,w,c
 28045  01D742  58DE               	subwfb	postinc2,w,c
 28046  01D744  0EEC               	movlw	-20
 28047  01D746  50E3               	movf	plusw1,w,c
 28048  01D748  58DE               	subwfb	postinc2,w,c
 28049  01D74A  0EED               	movlw	-19
 28050  01D74C  50E3               	movf	plusw1,w,c
 28051  01D74E  58DE               	subwfb	postinc2,w,c
 28052  01D750  0EEE               	movlw	-18
 28053  01D752  50E3               	movf	plusw1,w,c
 28054  01D754  58DE               	subwfb	postinc2,w,c
 28055  01D756  A0D8               	btfss	status,0,c
 28056  01D758  D021               	goto	l10707
 28057                           
 28058                           ;stkvar	_divisor @ sp[(-9)+-16]
 28059                           ;stkvar	_dividend @ sp[(-9)+-8]
 28060  01D75A  50E1               	movf	fsr1l,w,c
 28061  01D75C  0FEF               	addlw	-17
 28062  01D75E  6ED9               	movwf	fsr2l,c
 28063  01D760  50E2               	movf	fsr1h,w,c
 28064  01D762  6EDA               	movwf	fsr2h,c
 28065  01D764  0EFF               	movlw	255
 28066  01D766  22DA               	addwfc	fsr2h,f,c
 28067  01D768  0EE7               	movlw	-25
 28068  01D76A  50E3               	movf	plusw1,w,c
 28069  01D76C  5EDE               	subwf	postinc2,f,c
 28070  01D76E  0EE8               	movlw	-24
 28071  01D770  50E3               	movf	plusw1,w,c
 28072  01D772  5ADE               	subwfb	postinc2,f,c
 28073  01D774  0EE9               	movlw	-23
 28074  01D776  50E3               	movf	plusw1,w,c
 28075  01D778  5ADE               	subwfb	postinc2,f,c
 28076  01D77A  0EEA               	movlw	-22
 28077  01D77C  50E3               	movf	plusw1,w,c
 28078  01D77E  5ADE               	subwfb	postinc2,f,c
 28079  01D780  0EEB               	movlw	-21
 28080  01D782  50E3               	movf	plusw1,w,c
 28081  01D784  5ADE               	subwfb	postinc2,f,c
 28082  01D786  0EEC               	movlw	-20
 28083  01D788  50E3               	movf	plusw1,w,c
 28084  01D78A  5ADE               	subwfb	postinc2,f,c
 28085  01D78C  0EED               	movlw	-19
 28086  01D78E  50E3               	movf	plusw1,w,c
 28087  01D790  5ADE               	subwfb	postinc2,f,c
 28088  01D792  0EEE               	movlw	-18
 28089  01D794  50E3               	movf	plusw1,w,c
 28090  01D796  5ADE               	subwfb	postinc2,f,c
 28091                           
 28092                           ;stkvar	_quotient @ sp[(-9)+0]
 28093  01D798  0EF7               	movlw	-9
 28094  01D79A  80E3               	bsf	plusw1,0,c
 28095  01D79C                     l10707:
 28096                           
 28097                           ;stkvar	_divisor @ sp[(-9)+-16]
 28098  01D79C  90D8               	bcf	status,0,c
 28099  01D79E  0EEE               	movlw	-18
 28100  01D7A0  32E3               	rrcf	plusw1,f,c
 28101  01D7A2  0EED               	movlw	-19
 28102  01D7A4  32E3               	rrcf	plusw1,f,c
 28103  01D7A6  0EEC               	movlw	-20
 28104  01D7A8  32E3               	rrcf	plusw1,f,c
 28105  01D7AA  0EEB               	movlw	-21
 28106  01D7AC  32E3               	rrcf	plusw1,f,c
 28107  01D7AE  0EEA               	movlw	-22
 28108  01D7B0  32E3               	rrcf	plusw1,f,c
 28109  01D7B2  0EE9               	movlw	-23
 28110  01D7B4  32E3               	rrcf	plusw1,f,c
 28111  01D7B6  0EE8               	movlw	-24
 28112  01D7B8  32E3               	rrcf	plusw1,f,c
 28113  01D7BA  0EE7               	movlw	-25
 28114  01D7BC  32E3               	rrcf	plusw1,f,c
 28115                           
 28116                           ;stkvar	_counter @ sp[(-9)+8]
 28117  01D7BE  0EFF               	movlw	-1
 28118  01D7C0  50E3               	movf	plusw1,w,c
 28119  01D7C2  6E01               	movwf	btemp^0,c
 28120  01D7C4  0E01               	movlw	1
 28121  01D7C6  5E01               	subwf	btemp^0,f,c
 28122  01D7C8  0EFF               	movlw	-1
 28123  01D7CA  0060  F007  FFE3   	movff	btemp,plusw1
 28124  01D7D0  A4D8               	btfss	status,2,c
 28125  01D7D2  D791               	goto	u9070
 28126  01D7D4                     u9090:
 28127                           
 28128                           ;stkvar	_quotient @ sp[(-9)+0]
 28129  01D7D4  0EF7               	movlw	247
 28130  01D7D6  24E1               	addwf	fsr1l,w,c
 28131  01D7D8  6ED9               	movwf	fsr2l,c
 28132  01D7DA  0EFF               	movlw	255
 28133  01D7DC  20E2               	addwfc	fsr1h,w,c
 28134  01D7DE  6EDA               	movwf	fsr2h,c
 28135                           
 28136                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28137  01D7E0  0E08               	movlw	8
 28138  01D7E2  6E01               	movwf	btemp^0,c
 28139  01D7E4  0EEF               	movlw	-17
 28140  01D7E6                     us910999:
 28141  01D7E6  006F FF7B FFE3     	movff	postinc2,plusw1
 28142  01D7EC  28E8               	incf	wreg,w,c
 28143  01D7EE  2E01               	decfsz	btemp^0,f,c
 28144  01D7F0  D7FA               	bra	us910999
 28145                           
 28146                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28147  01D7F2  0EF7               	movlw	247
 28148  01D7F4  26E1               	addwf	fsr1l,f,c
 28149  01D7F6  0EFF               	movlw	255
 28150  01D7F8  22E2               	addwfc	fsr1h,f,c
 28151  01D7FA  0012               	return		;funcret
 28152  01D7FC                     __end_of___lodiv:
 28153                           	opt callstack 0
 28154                           
 28155 ;; *************** function _strncmp *****************
 28156 ;; Defined at:
 28157 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28158 ;; Parameters:    Size  Location     Type
 28159 ;;  _l              2  [STACK] PTR const unsigned char 
 28160 ;;		 -> ct(3), STR_87(127), STR_85(3), STR_84(3), 
 28161 ;;		 -> STR_83(19), STR_82(19), STR_81(19), STR_80(19), 
 28162 ;;		 -> STR_79(19), STR_78(19), STR_77(24), STR_76(15), 
 28163 ;;		 -> STR_75(15), STR_74(15), STR_73(10), STR_72(10), 
 28164 ;;		 -> STR_71(19), STR_70(19), STR_67(3), STR_66(3), 
 28165 ;;		 -> STR_65(14), STR_64(21), STR_63(21), STR_62(21), 
 28166 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 28167 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 28168 ;;		 -> STR_53(21), STR_52(20), STR_51(21), STR_50(21), 
 28169 ;;		 -> STR_49(21), STR_48(22), STR_47(22), STR_46(22), 
 28170 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(29), 
 28171 ;;		 -> STR_41(23), STR_40(23), STR_39(22), STR_38(22), 
 28172 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 28173 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 28174 ;;		 -> STR_29(22), STR_28(22), STR_27(17), STR_26(16), 
 28175 ;;		 -> STR_25(16), STR_24(21), STR_23(21), STR_22(21), 
 28176 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 28177 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 28178 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 28179 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 28180 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 28181 ;;  _r              2  [STACK] PTR const unsigned char 
 28182 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_107(3), 
 28183 ;;		 -> STR_102(3), STR_98(3), 
 28184 ;;  n               2  [STACK] unsigned int 
 28185 ;; Auto vars:     Size  Location     Type
 28186 ;;  r               2  [STACK] PTR const unsigned char 
 28187 ;;		 -> STR_121(3), STR_117(3), STR_112(3), STR_107(3), 
 28188 ;;		 -> STR_102(3), STR_98(3), 
 28189 ;;  l               2  [STACK] PTR const unsigned char 
 28190 ;;		 -> ct(3), STR_87(127), STR_85(3), STR_84(3), 
 28191 ;;		 -> STR_83(19), STR_82(19), STR_81(19), STR_80(19), 
 28192 ;;		 -> STR_79(19), STR_78(19), STR_77(24), STR_76(15), 
 28193 ;;		 -> STR_75(15), STR_74(15), STR_73(10), STR_72(10), 
 28194 ;;		 -> STR_71(19), STR_70(19), STR_67(3), STR_66(3), 
 28195 ;;		 -> STR_65(14), STR_64(21), STR_63(21), STR_62(21), 
 28196 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 28197 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 28198 ;;		 -> STR_53(21), STR_52(20), STR_51(21), STR_50(21), 
 28199 ;;		 -> STR_49(21), STR_48(22), STR_47(22), STR_46(22), 
 28200 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(29), 
 28201 ;;		 -> STR_41(23), STR_40(23), STR_39(22), STR_38(22), 
 28202 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 28203 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 28204 ;;		 -> STR_29(22), STR_28(22), STR_27(17), STR_26(16), 
 28205 ;;		 -> STR_25(16), STR_24(21), STR_23(21), STR_22(21), 
 28206 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 28207 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 28208 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 28209 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 28210 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 28211 ;; Return value:  Size  Location     Type
 28212 ;;                  2  [STACK] int 
 28213 ;; Registers used:
 28214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 28215 ;; Tracked objects:
 28216 ;;		On entry : 0/0
 28217 ;;		On exit  : 0/0
 28218 ;;		Unchanged: 0/0
 28219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28224 ;;Total ram usage:        0 bytes
 28225 ;; Hardware stack levels used:    1
 28226 ;; Hardware stack levels required when called:   15
 28227 ;; This function calls:
 28228 ;;		Nothing
 28229 ;; This function is called by:
 28230 ;;		_vfpfcnvrt
 28231 ;; This function uses a reentrant model
 28232 ;;
 28233                           
 28234                           	psect	text98
 28235  01C468                     __ptext98:
 28236                           	opt callstack 0
 28237  01C468                     _strncmp:
 28238                           	opt callstack 0
 28239                           
 28240                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28241  01C468  52E6               	movf	postinc1,f,c
 28242  01C46A  52E6               	movf	postinc1,f,c
 28243  01C46C  52E6               	movf	postinc1,f,c
 28244  01C46E  52E6               	movf	postinc1,f,c
 28245                           
 28246                           ;stkvar	__l @ sp[(-4)+-2]
 28247                           
 28248                           ;incstack = 0
 28249 ;; hardware stack exceeded
 28250  01C470  0EFA               	movlw	-6
 28251  01C472  006F FF8C  F00B    	movff	plusw1,btemp+10
 28252  01C478  0EFB               	movlw	-5
 28253  01C47A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28254                           
 28255                           ;stkvar	_l @ sp[(-4)+2]
 28256  01C480  0EFF               	movlw	-1
 28257  01C482  0060  F033  FFE3   	movff	btemp+11,plusw1
 28258  01C488  0EFE               	movlw	-2
 28259  01C48A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28260                           
 28261                           ;stkvar	__r @ sp[(-4)+-4]
 28262  01C490  0EF8               	movlw	-8
 28263  01C492  006F FF8C  F00B    	movff	plusw1,btemp+10
 28264  01C498  0EF9               	movlw	-7
 28265  01C49A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28266                           
 28267                           ;stkvar	_r @ sp[(-4)+0]
 28268  01C4A0  0EFD               	movlw	-3
 28269  01C4A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28270  01C4A8  0EFC               	movlw	-4
 28271  01C4AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28272                           
 28273                           ;stkvar	_n @ sp[(-4)+-6]
 28274  01C4B0  0EF6               	movlw	-10
 28275  01C4B2  006F FF8C  F001    	movff	plusw1,btemp
 28276  01C4B8  0E01               	movlw	1
 28277  01C4BA  5E01               	subwf	btemp^0,f,c
 28278  01C4BC  0EF6               	movlw	-10
 28279  01C4BE  0060  F007  FFE3   	movff	btemp,plusw1
 28280  01C4C4  0EF7               	movlw	-9
 28281  01C4C6  006F FF8C  F001    	movff	plusw1,btemp
 28282  01C4CC  0E00               	movlw	0
 28283  01C4CE  5A01               	subwfb	btemp^0,f,c
 28284  01C4D0  0EF7               	movlw	-9
 28285  01C4D2  0060  F007  FFE3   	movff	btemp,plusw1
 28286  01C4D8  0EF6               	movlw	-10
 28287  01C4DA  28E3               	incf	plusw1,w,c
 28288  01C4DC  E13F               	bnz	l11411
 28289  01C4DE  0EF7               	movlw	-9
 28290  01C4E0  28E3               	incf	plusw1,w,c
 28291  01C4E2  A4D8               	btfss	status,2,c
 28292  01C4E4  D03B               	goto	l11411
 28293  01C4E6  0E00               	movlw	0
 28294  01C4E8  6E01               	movwf	btemp^0,c
 28295  01C4EA  0E00               	movlw	0
 28296  01C4EC  6E02               	movwf	(btemp+1)^0,c
 28297  01C4EE  D0C7               	goto	l3783
 28298  01C4F0                     l11409:
 28299                           
 28300                           ;stkvar	_l @ sp[(-4)+2]
 28301  01C4F0  0EFE               	movlw	-2
 28302  01C4F2  50E3               	movf	plusw1,w,c
 28303  01C4F4  0F01               	addlw	1
 28304  01C4F6  6E01               	movwf	btemp^0,c
 28305  01C4F8  0EFE               	movlw	-2
 28306  01C4FA  0060  F007  FFE3   	movff	btemp,plusw1
 28307  01C500  6A01               	clrf	btemp^0,c
 28308  01C502  0EFF               	movlw	-1
 28309  01C504  50E3               	movf	plusw1,w,c
 28310  01C506  2001               	addwfc	btemp^0,w,c
 28311  01C508  6E01               	movwf	btemp^0,c
 28312  01C50A  0EFF               	movlw	-1
 28313  01C50C  0060  F007  FFE3   	movff	btemp,plusw1
 28314                           
 28315                           ;stkvar	_r @ sp[(-4)+0]
 28316  01C512  0EFC               	movlw	-4
 28317  01C514  50E3               	movf	plusw1,w,c
 28318  01C516  0F01               	addlw	1
 28319  01C518  6E01               	movwf	btemp^0,c
 28320  01C51A  0EFC               	movlw	-4
 28321  01C51C  0060  F007  FFE3   	movff	btemp,plusw1
 28322  01C522  6A01               	clrf	btemp^0,c
 28323  01C524  0EFD               	movlw	-3
 28324  01C526  50E3               	movf	plusw1,w,c
 28325  01C528  2001               	addwfc	btemp^0,w,c
 28326  01C52A  6E01               	movwf	btemp^0,c
 28327  01C52C  0EFD               	movlw	-3
 28328  01C52E  0060  F007  FFE3   	movff	btemp,plusw1
 28329                           
 28330                           ;stkvar	_n @ sp[(-4)+-6]
 28331  01C534  0EF6               	movlw	-10
 28332  01C536  006F FF8C  F001    	movff	plusw1,btemp
 28333  01C53C  0E01               	movlw	1
 28334  01C53E  5E01               	subwf	btemp^0,f,c
 28335  01C540  0EF6               	movlw	-10
 28336  01C542  0060  F007  FFE3   	movff	btemp,plusw1
 28337  01C548  0EF7               	movlw	-9
 28338  01C54A  006F FF8C  F001    	movff	plusw1,btemp
 28339  01C550  0E00               	movlw	0
 28340  01C552  5A01               	subwfb	btemp^0,f,c
 28341  01C554  0EF7               	movlw	-9
 28342  01C556  0060  F007  FFE3   	movff	btemp,plusw1
 28343  01C55C                     l11411:
 28344                           
 28345                           ;stkvar	_l @ sp[(-4)+2]
 28346  01C55C  0EFE               	movlw	-2
 28347  01C55E  006F FF8F FFF6     	movff	plusw1,tblptrl
 28348  01C564  0EFF               	movlw	-1
 28349  01C566  006F FF8F FFF7     	movff	plusw1,tblptrh
 28350  01C56C  0E00               	movlw	low (__mediumconst shr (0+16))
 28351  01C56E  6EF8               	movwf	tblptru,c
 28352  01C570  0E1F               	movlw	(high __ramtop+-1)
 28353  01C572  64F7               	cpfsgt	tblptrh,c
 28354  01C574  D003               	bra	u10397
 28355  01C576  0008               	tblrd		*
 28356  01C578  50F5               	movf	tablat,w,c
 28357  01C57A  D007               	bra	u10390
 28358  01C57C                     u10397:
 28359  01C57C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28360  01C582  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28361  01C588  50EF               	movf	indf0,w,c
 28362  01C58A                     u10390:
 28363  01C58A  0900               	iorlw	0
 28364  01C58C  B4D8               	btfsc	status,2,c
 28365  01C58E  D04A               	goto	u10430
 28366                           
 28367                           ;stkvar	_r @ sp[(-4)+0]
 28368  01C590  50E1               	movf	fsr1l,w,c
 28369  01C592  0FFC               	addlw	-4
 28370  01C594  6ED9               	movwf	fsr2l,c
 28371  01C596  50E2               	movf	fsr1h,w,c
 28372  01C598  6EDA               	movwf	fsr2h,c
 28373  01C59A  0EFF               	movlw	255
 28374  01C59C  22DA               	addwfc	fsr2h,f,c
 28375  01C59E  006F FF7B FFF6     	movff	postinc2,tblptrl
 28376  01C5A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 28377  01C5AA                     	if	0	;tblptru may be non-zero
 28378  01C5AA                     	endif
 28379  01C5AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28380  01C5AA  0E00               	movlw	low (__mediumconst shr (0+16))
 28381  01C5AC  6EF8               	movwf	tblptru,c
 28382  01C5AE                     	endif
 28383  01C5AE  0008               	tblrd		*
 28384  01C5B0  50F5               	movf	tablat,w,c
 28385  01C5B2  0900               	iorlw	0
 28386  01C5B4  B4D8               	btfsc	status,2,c
 28387  01C5B6  D036               	goto	u10430
 28388                           
 28389                           ;stkvar	_n @ sp[(-4)+-6]
 28390  01C5B8  0EF6               	movlw	-10
 28391  01C5BA  006F FF8C  F001    	movff	plusw1,btemp
 28392  01C5C0  0EF7               	movlw	-9
 28393  01C5C2  50E3               	movf	plusw1,w,c
 28394  01C5C4  1001               	iorwf	btemp^0,w,c
 28395  01C5C6  B4D8               	btfsc	status,2,c
 28396  01C5C8  D02D               	goto	u10430
 28397                           
 28398                           ;stkvar	_r @ sp[(-4)+0]
 28399  01C5CA  50E1               	movf	fsr1l,w,c
 28400  01C5CC  0FFC               	addlw	-4
 28401  01C5CE  6ED9               	movwf	fsr2l,c
 28402  01C5D0  50E2               	movf	fsr1h,w,c
 28403  01C5D2  6EDA               	movwf	fsr2h,c
 28404  01C5D4  0EFF               	movlw	255
 28405  01C5D6  22DA               	addwfc	fsr2h,f,c
 28406  01C5D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 28407  01C5DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 28408  01C5E4                     	if	0	;tblptru may be non-zero
 28409  01C5E4                     	endif
 28410  01C5E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28411  01C5E4  0E00               	movlw	low (__mediumconst shr (0+16))
 28412  01C5E6  6EF8               	movwf	tblptru,c
 28413  01C5E8                     	endif
 28414  01C5E8  0008               	tblrd		*
 28415  01C5EA  006F FFD4  F00C    	movff	tablat,btemp+11
 28416                           
 28417                           ;stkvar	_l @ sp[(-4)+2]
 28418  01C5F0  0EFE               	movlw	-2
 28419  01C5F2  006F FF8F FFF6     	movff	plusw1,tblptrl
 28420  01C5F8  0EFF               	movlw	-1
 28421  01C5FA  006F FF8F FFF7     	movff	plusw1,tblptrh
 28422  01C600  0E00               	movlw	low (__mediumconst shr (0+16))
 28423  01C602  6EF8               	movwf	tblptru,c
 28424  01C604  0E1F               	movlw	(high __ramtop+-1)
 28425  01C606  64F7               	cpfsgt	tblptrh,c
 28426  01C608  D003               	bra	u10437
 28427  01C60A  0008               	tblrd		*
 28428  01C60C  50F5               	movf	tablat,w,c
 28429  01C60E  D007               	bra	u10435
 28430  01C610                     u10437:
 28431  01C610  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28432  01C616  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28433  01C61C  50EF               	movf	indf0,w,c
 28434  01C61E                     u10435:
 28435  01C61E  180C               	xorwf	(btemp+11)^0,w,c
 28436  01C620  B4D8               	btfsc	status,2,c
 28437  01C622  D766               	goto	l11409
 28438  01C624                     u10430:
 28439                           
 28440                           ;stkvar	_l @ sp[(-4)+2]
 28441  01C624  0EFE               	movlw	-2
 28442  01C626  006F FF8F FFF6     	movff	plusw1,tblptrl
 28443  01C62C  0EFF               	movlw	-1
 28444  01C62E  006F FF8F FFF7     	movff	plusw1,tblptrh
 28445  01C634  0E00               	movlw	low (__mediumconst shr (0+16))
 28446  01C636  6EF8               	movwf	tblptru,c
 28447  01C638  0E1F               	movlw	(high __ramtop+-1)
 28448  01C63A  64F7               	cpfsgt	tblptrh,c
 28449  01C63C  D003               	bra	u10447
 28450  01C63E  0008               	tblrd		*
 28451  01C640  50F5               	movf	tablat,w,c
 28452  01C642  D007               	bra	u10440
 28453  01C644                     u10447:
 28454  01C644  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28455  01C64A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28456  01C650  50EF               	movf	indf0,w,c
 28457  01C652                     u10440:
 28458  01C652  6E01               	movwf	btemp^0,c
 28459  01C654  6A02               	clrf	(btemp+1)^0,c
 28460                           
 28461                           ;stkvar	_r @ sp[(-4)+0]
 28462  01C656  50E1               	movf	fsr1l,w,c
 28463  01C658  0FFC               	addlw	-4
 28464  01C65A  6ED9               	movwf	fsr2l,c
 28465  01C65C  50E2               	movf	fsr1h,w,c
 28466  01C65E  6EDA               	movwf	fsr2h,c
 28467  01C660  0EFF               	movlw	255
 28468  01C662  22DA               	addwfc	fsr2h,f,c
 28469  01C664  006F FF7B FFF6     	movff	postinc2,tblptrl
 28470  01C66A  006F FF77 FFF7     	movff	postdec2,tblptrh
 28471  01C670                     	if	0	;tblptru may be non-zero
 28472  01C670                     	endif
 28473  01C670                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28474  01C670  0E00               	movlw	low (__mediumconst shr (0+16))
 28475  01C672  6EF8               	movwf	tblptru,c
 28476  01C674                     	endif
 28477  01C674  0008               	tblrd		*
 28478  01C676  50F5               	movf	tablat,w,c
 28479  01C678  5E01               	subwf	btemp^0,f,c
 28480  01C67A  0E00               	movlw	0
 28481  01C67C  5A02               	subwfb	(btemp+1)^0,f,c
 28482  01C67E                     l3783:
 28483                           
 28484                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 28485  01C67E  0EF6               	movlw	246
 28486  01C680  26E1               	addwf	fsr1l,f,c
 28487  01C682  0EFF               	movlw	255
 28488  01C684  22E2               	addwfc	fsr1h,f,c
 28489  01C686  0012               	return		;funcret
 28490  01C688                     __end_of_strncmp:
 28491                           	opt callstack 0
 28492                           
 28493 ;; *************** function _stoa *****************
 28494 ;; Defined at:
 28495 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28496 ;; Parameters:    Size  Location     Type
 28497 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28498 ;;		 -> f(6), NULL(0), 
 28499 ;;  s               2  [STACK] PTR unsigned char 
 28500 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_69(9), 
 28501 ;;		 -> STR_68(12), D.lcd(480), D(482), T(144), 
 28502 ;;		 -> STR_3(5), V(192), 
 28503 ;; Auto vars:     Size  Location     Type
 28504 ;;  nuls            7  [STACK] unsigned char [7]
 28505 ;;  l               2  [STACK] int 
 28506 ;;  p               2  [STACK] int 
 28507 ;;  cp              2  [STACK] PTR unsigned char 
 28508 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 28509 ;;		 -> STR_69(9), STR_68(12), D.lcd(480), D(482), 
 28510 ;;		 -> T(144), STR_3(5), V(192), 
 28511 ;;  w               2  [STACK] int 
 28512 ;;  i               2  [STACK] int 
 28513 ;; Return value:  Size  Location     Type
 28514 ;;                  2  [STACK] int 
 28515 ;; Registers used:
 28516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28517 ;; Tracked objects:
 28518 ;;		On entry : 0/0
 28519 ;;		On exit  : 0/0
 28520 ;;		Unchanged: 0/0
 28521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28526 ;;Total ram usage:        0 bytes
 28527 ;; Hardware stack levels used:    1
 28528 ;; Hardware stack levels required when called:   18
 28529 ;; This function calls:
 28530 ;;		_fputc
 28531 ;;		_strlen
 28532 ;; This function is called by:
 28533 ;;		_vfpfcnvrt
 28534 ;; This function uses a reentrant model
 28535 ;;
 28536                           
 28537                           	psect	text99
 28538  01AC74                     __ptext99:
 28539                           	opt callstack 0
 28540  01AC74                     _stoa:
 28541                           	opt callstack 0
 28542                           
 28543                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28544  01AC74  0E11               	movlw	17
 28545  01AC76  26E1               	addwf	fsr1l,f,c
 28546  01AC78  0E00               	movlw	0
 28547  01AC7A  22E2               	addwfc	fsr1h,f,c
 28548                           
 28549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 28550                           
 28551                           ;incstack = 0
 28552 ;; hardware stack exceeded
 28553  01AC7C  EE20  F200         	lfsr	2,stoa@F1166
 28554                           
 28555                           ;stkvar	_nuls @ sp[(-17)+0]
 28556  01AC80  0E07               	movlw	7
 28557  01AC82  6E01               	movwf	btemp^0,c
 28558  01AC84  0EEF               	movlw	-17
 28559  01AC86                     us1493999:
 28560  01AC86  006F FF7B FFE3     	movff	postinc2,plusw1
 28561  01AC8C  28E8               	incf	wreg,w,c
 28562  01AC8E  2E01               	decfsz	btemp^0,f,c
 28563  01AC90  D7FA               	bra	us1493999
 28564                           
 28565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 28566                           ;stkvar	_s @ sp[(-17)+-4]
 28567  01AC92  0EEB               	movlw	-21
 28568  01AC94  006F FF8C  F00B    	movff	plusw1,btemp+10
 28569  01AC9A  0EEC               	movlw	-20
 28570  01AC9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28571                           
 28572                           ;stkvar	_cp @ sp[(-17)+11]
 28573  01ACA2  0EFB               	movlw	-5
 28574  01ACA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28575  01ACAA  0EFA               	movlw	-6
 28576  01ACAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28577                           
 28578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 28579                           ;stkvar	_cp @ sp[(-17)+11]
 28580  01ACB2  0EFA               	movlw	-6
 28581  01ACB4  006F FF8C  F001    	movff	plusw1,btemp
 28582  01ACBA  0EFB               	movlw	-5
 28583  01ACBC  50E3               	movf	plusw1,w,c
 28584  01ACBE  1001               	iorwf	btemp^0,w,c
 28585  01ACC0  A4D8               	btfss	status,2,c
 28586  01ACC2  D00E               	goto	l15653
 28587                           
 28588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 28589                           ;stkvar	_nuls @ sp[(-17)+0]
 28590  01ACC4  0EEF               	movlw	239
 28591  01ACC6  24E1               	addwf	fsr1l,w,c
 28592  01ACC8  6E0B               	movwf	(btemp+10)^0,c
 28593  01ACCA  0EFF               	movlw	255
 28594  01ACCC  20E2               	addwfc	fsr1h,w,c
 28595  01ACCE  6E0C               	movwf	(btemp+11)^0,c
 28596                           
 28597                           ;stkvar	_cp @ sp[(-17)+11]
 28598  01ACD0  0EFB               	movlw	-5
 28599  01ACD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28600  01ACD8  0EFA               	movlw	-6
 28601  01ACDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28602  01ACE0                     l15653:
 28603                           
 28604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 28605                           ;stkvar	_cp @ sp[(-17)+11]
 28606  01ACE0  0EFA               	movlw	-6
 28607  01ACE2  006F FF8F FFE6     	movff	plusw1,postinc1
 28608  01ACE8  006F FF8F FFE6     	movff	plusw1,postinc1
 28609  01ACEE  ECAE  F000         	call	_strlen	;wreg free
 28610                           
 28611                           ;stkvar	_l @ sp[(-17)+7]
 28612  01ACF2  0EF6               	movlw	-10
 28613  01ACF4  0060  F007  FFE3   	movff	btemp,plusw1
 28614  01ACFA  0EF7               	movlw	-9
 28615  01ACFC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 28616                           
 28617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 28618                           ;stkvar	_p @ sp[(-17)+9]
 28619  01AD02  0EF8               	movlw	-8
 28620  01AD04  0060  F0F3  FFE3   	movff	_prec,plusw1
 28621  01AD0A  0EF9               	movlw	-7
 28622  01AD0C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 28623                           
 28624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 28625                           ;stkvar	_p @ sp[(-17)+9]
 28626  01AD12  0EF9               	movlw	-7
 28627  01AD14  BEE3               	btfsc	plusw1,7,c
 28628  01AD16  D023               	goto	l2578
 28629                           
 28630                           ;stkvar	_l @ sp[(-17)+7]
 28631                           ;stkvar	_p @ sp[(-17)+9]
 28632  01AD18  50E1               	movf	fsr1l,w,c
 28633  01AD1A  0FF8               	addlw	-8
 28634  01AD1C  6ED9               	movwf	fsr2l,c
 28635  01AD1E  50E2               	movf	fsr1h,w,c
 28636  01AD20  6EDA               	movwf	fsr2h,c
 28637  01AD22  0EFF               	movlw	255
 28638  01AD24  22DA               	addwfc	fsr2h,f,c
 28639  01AD26  0EF6               	movlw	-10
 28640  01AD28  50E3               	movf	plusw1,w,c
 28641  01AD2A  5CDE               	subwf	postinc2,w,c
 28642  01AD2C  50DE               	movf	postinc2,w,c
 28643  01AD2E  0A80               	xorlw	128
 28644  01AD30  6E01               	movwf	btemp^0,c
 28645  01AD32  0EF7               	movlw	-9
 28646  01AD34  50E3               	movf	plusw1,w,c
 28647  01AD36  0A80               	xorlw	128
 28648  01AD38  5801               	subwfb	btemp^0,w,c
 28649  01AD3A  B0D8               	btfsc	status,0,c
 28650  01AD3C  D010               	goto	l2578
 28651                           
 28652                           ;stkvar	_p @ sp[(-17)+9]
 28653                           ;stkvar	_l @ sp[(-17)+7]
 28654  01AD3E  0EF8               	movlw	-8
 28655  01AD40  006F FF8C  F001    	movff	plusw1,btemp
 28656  01AD46  0EF6               	movlw	-10
 28657  01AD48  0060  F007  FFE3   	movff	btemp,plusw1
 28658  01AD4E  0EF9               	movlw	-7
 28659  01AD50  006F FF8C  F001    	movff	plusw1,btemp
 28660  01AD56  0EF7               	movlw	-9
 28661  01AD58  0060  F007  FFE3   	movff	btemp,plusw1
 28662  01AD5E                     l2578:
 28663                           
 28664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 28665                           ;stkvar	_l @ sp[(-17)+7]
 28666                           ;stkvar	_p @ sp[(-17)+9]
 28667  01AD5E  0EF6               	movlw	-10
 28668  01AD60  006F FF8C  F001    	movff	plusw1,btemp
 28669  01AD66  0EF8               	movlw	-8
 28670  01AD68  0060  F007  FFE3   	movff	btemp,plusw1
 28671  01AD6E  0EF7               	movlw	-9
 28672  01AD70  006F FF8C  F001    	movff	plusw1,btemp
 28673  01AD76  0EF9               	movlw	-7
 28674  01AD78  0060  F007  FFE3   	movff	btemp,plusw1
 28675                           
 28676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 28677                           ;stkvar	_w @ sp[(-17)+13]
 28678  01AD7E  0EFC               	movlw	-4
 28679  01AD80  0060  F0EB  FFE3   	movff	_width,plusw1
 28680  01AD86  0EFD               	movlw	-3
 28681  01AD88  0060  F0EF  FFE3   	movff	_width+1,plusw1
 28682                           
 28683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 28684  01AD8E  A03E               	btfss	_flags^0,0,c
 28685  01AD90  D01F               	goto	l15673
 28686  01AD92  D031               	goto	u14980
 28687  01AD94                     l15669:
 28688                           
 28689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 28690                           ;stkvar	_fp @ sp[(-17)+-2]
 28691  01AD94  0EED               	movlw	-19
 28692  01AD96  006F FF8F FFE6     	movff	plusw1,postinc1
 28693  01AD9C  006F FF8F FFE6     	movff	plusw1,postinc1
 28694  01ADA2  0E20               	movlw	32
 28695  01ADA4  6EE6               	movwf	postinc1,c
 28696  01ADA6  0E00               	movlw	0
 28697  01ADA8  6EE6               	movwf	postinc1,c
 28698  01ADAA  ECF9  F0F3         	call	_fputc	;wreg free
 28699                           
 28700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 28701                           ;stkvar	_l @ sp[(-17)+7]
 28702  01ADAE  0EF6               	movlw	-10
 28703  01ADB0  50E3               	movf	plusw1,w,c
 28704  01ADB2  0F01               	addlw	1
 28705  01ADB4  6E01               	movwf	btemp^0,c
 28706  01ADB6  0EF6               	movlw	-10
 28707  01ADB8  0060  F007  FFE3   	movff	btemp,plusw1
 28708  01ADBE  6A01               	clrf	btemp^0,c
 28709  01ADC0  0EF7               	movlw	-9
 28710  01ADC2  50E3               	movf	plusw1,w,c
 28711  01ADC4  2001               	addwfc	btemp^0,w,c
 28712  01ADC6  6E01               	movwf	btemp^0,c
 28713  01ADC8  0EF7               	movlw	-9
 28714  01ADCA  0060  F007  FFE3   	movff	btemp,plusw1
 28715  01ADD0                     l15673:
 28716                           
 28717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 28718                           ;stkvar	_w @ sp[(-17)+13]
 28719                           ;stkvar	_l @ sp[(-17)+7]
 28720  01ADD0  50E1               	movf	fsr1l,w,c
 28721  01ADD2  0FF6               	addlw	-10
 28722  01ADD4  6ED9               	movwf	fsr2l,c
 28723  01ADD6  50E2               	movf	fsr1h,w,c
 28724  01ADD8  6EDA               	movwf	fsr2h,c
 28725  01ADDA  0EFF               	movlw	255
 28726  01ADDC  22DA               	addwfc	fsr2h,f,c
 28727  01ADDE  0EFC               	movlw	-4
 28728  01ADE0  50E3               	movf	plusw1,w,c
 28729  01ADE2  5CDE               	subwf	postinc2,w,c
 28730  01ADE4  50DE               	movf	postinc2,w,c
 28731  01ADE6  0A80               	xorlw	128
 28732  01ADE8  6E01               	movwf	btemp^0,c
 28733  01ADEA  0EFD               	movlw	-3
 28734  01ADEC  50E3               	movf	plusw1,w,c
 28735  01ADEE  0A80               	xorlw	128
 28736  01ADF0  5801               	subwfb	btemp^0,w,c
 28737  01ADF2  A0D8               	btfss	status,0,c
 28738  01ADF4  D7CF               	goto	l15669
 28739  01ADF6                     u14980:
 28740                           
 28741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 28742                           ;stkvar	_i @ sp[(-17)+15]
 28743  01ADF6  0EFE               	movlw	-2
 28744  01ADF8  6AE3               	clrf	plusw1,c
 28745  01ADFA  0EFF               	movlw	-1
 28746  01ADFC  6AE3               	clrf	plusw1,c
 28747                           
 28748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 28749  01ADFE  D045               	goto	l15683
 28750  01AE00                     l15677:
 28751                           
 28752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 28753                           ;stkvar	_fp @ sp[(-17)+-2]
 28754  01AE00  0EED               	movlw	-19
 28755  01AE02  006F FF8F FFE6     	movff	plusw1,postinc1
 28756  01AE08  006F FF8F FFE6     	movff	plusw1,postinc1
 28757                           
 28758                           ;stkvar	_cp @ sp[(-19)+11]
 28759  01AE0E  0EF8               	movlw	-8
 28760  01AE10  006F FF8F FFF6     	movff	plusw1,tblptrl
 28761  01AE16  0EF9               	movlw	-7
 28762  01AE18  006F FF8F FFF7     	movff	plusw1,tblptrh
 28763  01AE1E  0E00               	movlw	low (__mediumconst shr (0+16))
 28764  01AE20  6EF8               	movwf	tblptru,c
 28765  01AE22  0E1F               	movlw	(high __ramtop+-1)
 28766  01AE24  64F7               	cpfsgt	tblptrh,c
 28767  01AE26  D003               	bra	u14997
 28768  01AE28  0008               	tblrd		*
 28769  01AE2A  50F5               	movf	tablat,w,c
 28770  01AE2C  D007               	bra	u14990
 28771  01AE2E                     u14997:
 28772  01AE2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28773  01AE34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28774  01AE3A  50EF               	movf	indf0,w,c
 28775  01AE3C                     u14990:
 28776  01AE3C  6EE6               	movwf	postinc1,c
 28777  01AE3E  0E00               	movlw	0
 28778  01AE40  6EE6               	movwf	postinc1,c
 28779  01AE42  ECF9  F0F3         	call	_fputc	;wreg free
 28780                           
 28781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 28782                           ;stkvar	_cp @ sp[(-17)+11]
 28783  01AE46  0EFA               	movlw	-6
 28784  01AE48  50E3               	movf	plusw1,w,c
 28785  01AE4A  0F01               	addlw	1
 28786  01AE4C  6E01               	movwf	btemp^0,c
 28787  01AE4E  0EFA               	movlw	-6
 28788  01AE50  0060  F007  FFE3   	movff	btemp,plusw1
 28789  01AE56  6A01               	clrf	btemp^0,c
 28790  01AE58  0EFB               	movlw	-5
 28791  01AE5A  50E3               	movf	plusw1,w,c
 28792  01AE5C  2001               	addwfc	btemp^0,w,c
 28793  01AE5E  6E01               	movwf	btemp^0,c
 28794  01AE60  0EFB               	movlw	-5
 28795  01AE62  0060  F007  FFE3   	movff	btemp,plusw1
 28796                           
 28797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 28798                           ;stkvar	_i @ sp[(-17)+15]
 28799  01AE68  0EFE               	movlw	-2
 28800  01AE6A  50E3               	movf	plusw1,w,c
 28801  01AE6C  0F01               	addlw	1
 28802  01AE6E  6E01               	movwf	btemp^0,c
 28803  01AE70  0EFE               	movlw	-2
 28804  01AE72  0060  F007  FFE3   	movff	btemp,plusw1
 28805  01AE78  6A01               	clrf	btemp^0,c
 28806  01AE7A  0EFF               	movlw	-1
 28807  01AE7C  50E3               	movf	plusw1,w,c
 28808  01AE7E  2001               	addwfc	btemp^0,w,c
 28809  01AE80  6E01               	movwf	btemp^0,c
 28810  01AE82  0EFF               	movlw	-1
 28811  01AE84  0060  F007  FFE3   	movff	btemp,plusw1
 28812  01AE8A                     l15683:
 28813                           
 28814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 28815                           ;stkvar	_p @ sp[(-17)+9]
 28816                           ;stkvar	_i @ sp[(-17)+15]
 28817  01AE8A  50E1               	movf	fsr1l,w,c
 28818  01AE8C  0FFE               	addlw	-2
 28819  01AE8E  6ED9               	movwf	fsr2l,c
 28820  01AE90  50E2               	movf	fsr1h,w,c
 28821  01AE92  6EDA               	movwf	fsr2h,c
 28822  01AE94  0EFF               	movlw	255
 28823  01AE96  22DA               	addwfc	fsr2h,f,c
 28824  01AE98  0EF8               	movlw	-8
 28825  01AE9A  50E3               	movf	plusw1,w,c
 28826  01AE9C  5CDE               	subwf	postinc2,w,c
 28827  01AE9E  50DE               	movf	postinc2,w,c
 28828  01AEA0  0A80               	xorlw	128
 28829  01AEA2  6E01               	movwf	btemp^0,c
 28830  01AEA4  0EF9               	movlw	-7
 28831  01AEA6  50E3               	movf	plusw1,w,c
 28832  01AEA8  0A80               	xorlw	128
 28833  01AEAA  5801               	subwfb	btemp^0,w,c
 28834  01AEAC  A0D8               	btfss	status,0,c
 28835  01AEAE  D7A8               	goto	l15677
 28836                           
 28837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 28838  01AEB0  B03E               	btfsc	_flags^0,0,c
 28839  01AEB2  D01F               	goto	l15691
 28840  01AEB4  D031               	goto	u15020
 28841  01AEB6                     l15687:
 28842                           
 28843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 28844                           ;stkvar	_fp @ sp[(-17)+-2]
 28845  01AEB6  0EED               	movlw	-19
 28846  01AEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 28847  01AEBE  006F FF8F FFE6     	movff	plusw1,postinc1
 28848  01AEC4  0E20               	movlw	32
 28849  01AEC6  6EE6               	movwf	postinc1,c
 28850  01AEC8  0E00               	movlw	0
 28851  01AECA  6EE6               	movwf	postinc1,c
 28852  01AECC  ECF9  F0F3         	call	_fputc	;wreg free
 28853                           
 28854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 28855                           ;stkvar	_l @ sp[(-17)+7]
 28856  01AED0  0EF6               	movlw	-10
 28857  01AED2  50E3               	movf	plusw1,w,c
 28858  01AED4  0F01               	addlw	1
 28859  01AED6  6E01               	movwf	btemp^0,c
 28860  01AED8  0EF6               	movlw	-10
 28861  01AEDA  0060  F007  FFE3   	movff	btemp,plusw1
 28862  01AEE0  6A01               	clrf	btemp^0,c
 28863  01AEE2  0EF7               	movlw	-9
 28864  01AEE4  50E3               	movf	plusw1,w,c
 28865  01AEE6  2001               	addwfc	btemp^0,w,c
 28866  01AEE8  6E01               	movwf	btemp^0,c
 28867  01AEEA  0EF7               	movlw	-9
 28868  01AEEC  0060  F007  FFE3   	movff	btemp,plusw1
 28869  01AEF2                     l15691:
 28870                           
 28871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 28872                           ;stkvar	_w @ sp[(-17)+13]
 28873                           ;stkvar	_l @ sp[(-17)+7]
 28874  01AEF2  50E1               	movf	fsr1l,w,c
 28875  01AEF4  0FF6               	addlw	-10
 28876  01AEF6  6ED9               	movwf	fsr2l,c
 28877  01AEF8  50E2               	movf	fsr1h,w,c
 28878  01AEFA  6EDA               	movwf	fsr2h,c
 28879  01AEFC  0EFF               	movlw	255
 28880  01AEFE  22DA               	addwfc	fsr2h,f,c
 28881  01AF00  0EFC               	movlw	-4
 28882  01AF02  50E3               	movf	plusw1,w,c
 28883  01AF04  5CDE               	subwf	postinc2,w,c
 28884  01AF06  50DE               	movf	postinc2,w,c
 28885  01AF08  0A80               	xorlw	128
 28886  01AF0A  6E01               	movwf	btemp^0,c
 28887  01AF0C  0EFD               	movlw	-3
 28888  01AF0E  50E3               	movf	plusw1,w,c
 28889  01AF10  0A80               	xorlw	128
 28890  01AF12  5801               	subwfb	btemp^0,w,c
 28891  01AF14  A0D8               	btfss	status,0,c
 28892  01AF16  D7CF               	goto	l15687
 28893  01AF18                     u15020:
 28894                           
 28895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 28896                           ;stkvar	_l @ sp[(-17)+7]
 28897  01AF18  0EF6               	movlw	-10
 28898  01AF1A  006F FF8C  F001    	movff	plusw1,btemp
 28899  01AF20  0EF7               	movlw	-9
 28900  01AF22  006F FF8C  F002    	movff	plusw1,btemp+1
 28901                           
 28902                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 28903  01AF28  0EEB               	movlw	235
 28904  01AF2A  26E1               	addwf	fsr1l,f,c
 28905  01AF2C  0EFF               	movlw	255
 28906  01AF2E  22E2               	addwfc	fsr1h,f,c
 28907  01AF30  0012               	return		;funcret
 28908  01AF32                     __end_of_stoa:
 28909                           	opt callstack 0
 28910                           
 28911 ;; *************** function _efgtoa *****************
 28912 ;; Defined at:
 28913 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28914 ;; Parameters:    Size  Location     Type
 28915 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28916 ;;		 -> f(6), NULL(0), 
 28917 ;;  f               4  [STACK] PTR struct _IO_FILE
 28918 ;;  c               1  [STACK] unsigned char 
 28919 ;; Auto vars:     Size  Location     Type
 28920 ;;  u               4  [STACK] unsigned char 
 28921 ;;  g               4  [STACK] unsigned char 
 28922 ;;  l               4  [STACK] unsigned char 
 28923 ;;  h               4  [STACK] unsigned char 
 28924 ;;  ou              4  [STACK] unsigned char 
 28925 ;;  n               2  [STACK] int 
 28926 ;;  e               2  [STACK] int 
 28927 ;;  i               2  [STACK] int 
 28928 ;;  w               2  [STACK] int 
 28929 ;;  p               2  [STACK] int 
 28930 ;;  sign            2  [STACK] int 
 28931 ;;  d               2  [STACK] int 
 28932 ;;  ne              2  [STACK] int 
 28933 ;;  m               2  [STACK] int 
 28934 ;;  pp              2  [STACK] int 
 28935 ;;  t               2  [STACK] int 
 28936 ;;  mode            1  [STACK] unsigned char 
 28937 ;;  nmode           1  [STACK] unsigned char 
 28938 ;; Return value:  Size  Location     Type
 28939 ;;                  2  [STACK] int 
 28940 ;; Registers used:
 28941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 28942 ;; Tracked objects:
 28943 ;;		On entry : 0/0
 28944 ;;		On exit  : 0/0
 28945 ;;		Unchanged: 0/0
 28946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28951 ;;Total ram usage:        0 bytes
 28952 ;; Hardware stack levels used:    1
 28953 ;; Hardware stack levels required when called:   20
 28954 ;; This function calls:
 28955 ;;		___awdiv
 28956 ;;		___awmod
 28957 ;;		___fladd
 28958 ;;		___fldiv
 28959 ;;		___fleq
 28960 ;;		___flge
 28961 ;;		___flmul
 28962 ;;		___flneg
 28963 ;;		___flsub
 28964 ;;		___fltol
 28965 ;;		___fpclassifyf
 28966 ;;		_floorf
 28967 ;;		_isupper
 28968 ;;		_pad
 28969 ;;		_strcpy
 28970 ;;		_tolower
 28971 ;; This function is called by:
 28972 ;;		_vfpfcnvrt
 28973 ;; This function uses a reentrant model
 28974 ;;
 28975                           
 28976                           	psect	text100
 28977  01137E                     __ptext100:
 28978                           	opt callstack 0
 28979  01137E                     _efgtoa:
 28980                           	opt callstack 0
 28981                           
 28982                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28983  01137E  0E38               	movlw	56
 28984  011380  26E1               	addwf	fsr1l,f,c
 28985  011382  0E00               	movlw	0
 28986  011384  22E2               	addwfc	fsr1h,f,c
 28987                           
 28988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 28989                           ;stkvar	_sign @ sp[(-56)+42]
 28990                           
 28991                           ;incstack = 0
 28992 ;; hardware stack exceeded
 28993  011386  0EF2               	movlw	-14
 28994  011388  6AE3               	clrf	plusw1,c
 28995  01138A  0EF3               	movlw	-13
 28996  01138C  6AE3               	clrf	plusw1,c
 28997                           
 28998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 28999                           ;stkvar	_f @ sp[(-56)+-6]
 29000  01138E  0EC2               	movlw	-62
 29001  011390  006F FF8C  F009    	movff	plusw1,btemp+8
 29002  011396  0EC3               	movlw	-61
 29003  011398  006F FF8C  F00A    	movff	plusw1,btemp+9
 29004  01139E  0EC4               	movlw	-60
 29005  0113A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 29006  0113A6  0EC5               	movlw	-59
 29007  0113A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29008                           
 29009                           ;stkvar	_g @ sp[(-56)+16]
 29010  0113AE  0ED8               	movlw	-40
 29011  0113B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 29012  0113B6  0ED9               	movlw	-39
 29013  0113B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29014  0113BE  0EDA               	movlw	-38
 29015  0113C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29016  0113C6  0EDB               	movlw	-37
 29017  0113C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29018                           
 29019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29020                           ;stkvar	_g @ sp[(-56)+16]
 29021  0113CE  0EDB               	movlw	-37
 29022  0113D0  AEE3               	btfss	plusw1,7,c
 29023  0113D2  D02B               	goto	l15351
 29024                           
 29025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29026  0113D4  0E01               	movlw	1
 29027  0113D6  6E0B               	movwf	(btemp+10)^0,c
 29028  0113D8  0E00               	movlw	0
 29029  0113DA  6E0C               	movwf	(btemp+11)^0,c
 29030                           
 29031                           ;stkvar	_sign @ sp[(-56)+42]
 29032  0113DC  0EF2               	movlw	-14
 29033  0113DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29034  0113E4  0EF3               	movlw	-13
 29035  0113E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 29036                           
 29037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29038                           ;stkvar	_g @ sp[(-56)+16]
 29039  0113EC  0ED8               	movlw	-40
 29040  0113EE  006F FF8F FFE6     	movff	plusw1,postinc1
 29041  0113F4  006F FF8F FFE6     	movff	plusw1,postinc1
 29042  0113FA  006F FF8F FFE6     	movff	plusw1,postinc1
 29043  011400  006F FF8F FFE6     	movff	plusw1,postinc1
 29044  011406  EC61  F008         	call	___flneg	;wreg free
 29045                           
 29046                           ;stkvar	_g @ sp[(-56)+16]
 29047  01140A  0ED8               	movlw	-40
 29048  01140C  0060  F007  FFE3   	movff	btemp,plusw1
 29049  011412  0ED9               	movlw	-39
 29050  011414  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29051  01141A  0EDA               	movlw	-38
 29052  01141C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29053  011422  0EDB               	movlw	-37
 29054  011424  0060  F013  FFE3   	movff	btemp+3,plusw1
 29055  01142A                     l15351:
 29056                           
 29057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29058                           ;stkvar	_n @ sp[(-56)+32]
 29059  01142A  0EE8               	movlw	-24
 29060  01142C  6AE3               	clrf	plusw1,c
 29061  01142E  0EE9               	movlw	-23
 29062  011430  6AE3               	clrf	plusw1,c
 29063                           
 29064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29065                           ;stkvar	_w @ sp[(-56)+38]
 29066  011432  0EEE               	movlw	-18
 29067  011434  0060  F0EB  FFE3   	movff	_width,plusw1
 29068  01143A  0EEF               	movlw	-17
 29069  01143C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 29070                           
 29071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29072                           ;stkvar	_sign @ sp[(-56)+42]
 29073  011442  0EF2               	movlw	-14
 29074  011444  006F FF8C  F001    	movff	plusw1,btemp
 29075  01144A  0EF3               	movlw	-13
 29076  01144C  50E3               	movf	plusw1,w,c
 29077  01144E  1001               	iorwf	btemp^0,w,c
 29078  011450  A4D8               	btfss	status,2,c
 29079  011452  D002               	goto	u14430
 29080  011454  A43E               	btfss	_flags^0,2,c
 29081  011456  D036               	goto	l15371
 29082  011458                     u14430:
 29083                           
 29084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29085                           ;stkvar	_sign @ sp[(-56)+42]
 29086  011458  0EF2               	movlw	-14
 29087  01145A  006F FF8C  F001    	movff	plusw1,btemp
 29088  011460  0EF3               	movlw	-13
 29089  011462  50E3               	movf	plusw1,w,c
 29090  011464  1001               	iorwf	btemp^0,w,c
 29091  011466  A4D8               	btfss	status,2,c
 29092  011468  D002               	goto	l15363
 29093  01146A  0E2B               	movlw	43
 29094  01146C  D001               	goto	L30
 29095  01146E                     l15363:
 29096  01146E  0E2D               	movlw	45
 29097  011470                     L30:
 29098  011470  6E0B               	movwf	(btemp+10)^0,c
 29099  011472  0E00               	movlw	0
 29100  011474  6E0C               	movwf	(btemp+11)^0,c
 29101                           
 29102                           ;stkvar	_efgtoa$6827 @ sp[(-56)+10]
 29103  011476  0ED2               	movlw	-46
 29104  011478  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29105  01147E  0ED3               	movlw	-45
 29106  011480  0060  F033  FFE3   	movff	btemp+11,plusw1
 29107                           
 29108                           ;stkvar	_efgtoa$6827 @ sp[(-56)+10]
 29109  011486  0ED2               	movlw	-46
 29110  011488  006F FF8C  F354    	movff	plusw1,_dbuf
 29111                           
 29112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29113                           ;stkvar	_n @ sp[(-56)+32]
 29114  01148E  0EE8               	movlw	-24
 29115  011490  50E3               	movf	plusw1,w,c
 29116  011492  0F01               	addlw	1
 29117  011494  6E01               	movwf	btemp^0,c
 29118  011496  0EE8               	movlw	-24
 29119  011498  0060  F007  FFE3   	movff	btemp,plusw1
 29120  01149E  6A01               	clrf	btemp^0,c
 29121  0114A0  0EE9               	movlw	-23
 29122  0114A2  50E3               	movf	plusw1,w,c
 29123  0114A4  2001               	addwfc	btemp^0,w,c
 29124  0114A6  6E01               	movwf	btemp^0,c
 29125  0114A8  0EE9               	movlw	-23
 29126  0114AA  0060  F007  FFE3   	movff	btemp,plusw1
 29127                           
 29128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29129                           ;stkvar	_w @ sp[(-56)+38]
 29130  0114B0  50E1               	movf	fsr1l,w,c
 29131  0114B2  0FEE               	addlw	-18
 29132  0114B4  6ED9               	movwf	fsr2l,c
 29133  0114B6  50E2               	movf	fsr1h,w,c
 29134  0114B8  6EDA               	movwf	fsr2h,c
 29135  0114BA  0EFF               	movlw	255
 29136  0114BC  22DA               	addwfc	fsr2h,f,c
 29137  0114BE  06DE               	decf	postinc2,f,c
 29138  0114C0  0E00               	movlw	0
 29139  0114C2  5ADD               	subwfb	postdec2,f,c
 29140  0114C4                     l15371:
 29141                           
 29142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29143                           ;stkvar	_g @ sp[(-56)+16]
 29144  0114C4  0ED8               	movlw	-40
 29145  0114C6  006F FF8F FFE6     	movff	plusw1,postinc1
 29146  0114CC  006F FF8F FFE6     	movff	plusw1,postinc1
 29147  0114D2  006F FF8F FFE6     	movff	plusw1,postinc1
 29148  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 29149  0114DE  EC20  F0E8         	call	___fpclassifyf	;wreg free
 29150  0114E2  0401               	decf	btemp^0,w,c
 29151  0114E4  1002               	iorwf	(btemp+1)^0,w,c
 29152  0114E6  A4D8               	btfss	status,2,c
 29153  0114E8  D076               	goto	l15389
 29154  0114EA  0EBF               	movlw	191
 29155  0114EC  6E0B               	movwf	(btemp+10)^0,c
 29156  0114EE  0EFF               	movlw	255
 29157  0114F0  6E0C               	movwf	(btemp+11)^0,c
 29158                           
 29159                           ;stkvar	_c @ sp[(-56)+-7]
 29160  0114F2  0EC1               	movlw	-63
 29161  0114F4  50E3               	movf	plusw1,w,c
 29162  0114F6  6E09               	movwf	(btemp+8)^0,c
 29163  0114F8  6A0A               	clrf	(btemp+9)^0,c
 29164  0114FA  500B               	movf	(btemp+10)^0,w,c
 29165  0114FC  2609               	addwf	(btemp+8)^0,f,c
 29166  0114FE  500C               	movf	(btemp+11)^0,w,c
 29167  011500  220A               	addwfc	(btemp+9)^0,f,c
 29168  011502  500A               	movf	(btemp+9)^0,w,c
 29169  011504  E106               	bnz	u14460
 29170  011506  0E1A               	movlw	26
 29171  011508  5C09               	subwf	(btemp+8)^0,w,c
 29172  01150A  B0D8               	btfsc	status,0,c
 29173  01150C  D002               	goto	u14460
 29174  01150E  0E01               	movlw	1
 29175  011510  D001               	goto	u14470
 29176  011512                     u14460:
 29177  011512  0E00               	movlw	0
 29178  011514                     u14470:
 29179  011514  6E0B               	movwf	(btemp+10)^0,c
 29180  011516  6A0C               	clrf	(btemp+11)^0,c
 29181                           
 29182                           ;stkvar	_efgtoa$6828 @ sp[(-56)+8]
 29183  011518  0ED0               	movlw	-48
 29184  01151A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29185  011520  0ED1               	movlw	-47
 29186  011522  0060  F033  FFE3   	movff	btemp+11,plusw1
 29187                           
 29188                           ;stkvar	_efgtoa$6828 @ sp[(-56)+8]
 29189  011528  0ED0               	movlw	-48
 29190  01152A  006F FF8C  F001    	movff	plusw1,btemp
 29191  011530  0ED1               	movlw	-47
 29192  011532  50E3               	movf	plusw1,w,c
 29193  011534  1001               	iorwf	btemp^0,w,c
 29194  011536  B4D8               	btfsc	status,2,c
 29195  011538  D017               	goto	l15381
 29196                           
 29197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 29198  01153A  0ED6               	movlw	low STR_88
 29199  01153C  6EE6               	movwf	postinc1,c
 29200  01153E  0EFF               	movlw	high STR_88
 29201  011540  6EE6               	movwf	postinc1,c
 29202                           
 29203                           ;stkvar	_n @ sp[(-58)+32]
 29204  011542  0E54               	movlw	low _dbuf
 29205  011544  6E0B               	movwf	(btemp+10)^0,c
 29206  011546  0E03               	movlw	high _dbuf
 29207  011548  6E0C               	movwf	(btemp+11)^0,c
 29208  01154A  0EE6               	movlw	-26
 29209  01154C  50E3               	movf	plusw1,w,c
 29210  01154E  260B               	addwf	(btemp+10)^0,f,c
 29211  011550  0EE7               	movlw	-25
 29212  011552  50E3               	movf	plusw1,w,c
 29213  011554  220C               	addwfc	(btemp+11)^0,f,c
 29214  011556  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29215  01155C  0060  F033  FFE6   	movff	btemp+11,postinc1
 29216  011562  EC72  F0FB         	call	_strcpy	;wreg free
 29217                           
 29218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 29219  011566  D016               	goto	l15383
 29220  011568                     l15381:
 29221                           
 29222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 29223  011568  0EDE               	movlw	low STR_89
 29224  01156A  6EE6               	movwf	postinc1,c
 29225  01156C  0EFF               	movlw	high STR_89
 29226  01156E  6EE6               	movwf	postinc1,c
 29227                           
 29228                           ;stkvar	_n @ sp[(-58)+32]
 29229  011570  0E54               	movlw	low _dbuf
 29230  011572  6E0B               	movwf	(btemp+10)^0,c
 29231  011574  0E03               	movlw	high _dbuf
 29232  011576  6E0C               	movwf	(btemp+11)^0,c
 29233  011578  0EE6               	movlw	-26
 29234  01157A  50E3               	movf	plusw1,w,c
 29235  01157C  260B               	addwf	(btemp+10)^0,f,c
 29236  01157E  0EE7               	movlw	-25
 29237  011580  50E3               	movf	plusw1,w,c
 29238  011582  220C               	addwfc	(btemp+11)^0,f,c
 29239  011584  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29240  01158A  0060  F033  FFE6   	movff	btemp+11,postinc1
 29241  011590  EC72  F0FB         	call	_strcpy	;wreg free
 29242  011594                     l15383:
 29243                           
 29244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 29245                           ;stkvar	_w @ sp[(-56)+38]
 29246  011594  50E1               	movf	fsr1l,w,c
 29247  011596  0FEE               	addlw	-18
 29248  011598  6ED9               	movwf	fsr2l,c
 29249  01159A  50E2               	movf	fsr1h,w,c
 29250  01159C  6EDA               	movwf	fsr2h,c
 29251  01159E  0EFF               	movlw	255
 29252  0115A0  22DA               	addwfc	fsr2h,f,c
 29253  0115A2  0EFD               	movlw	253
 29254  0115A4  26DE               	addwf	postinc2,f,c
 29255  0115A6  0EFF               	movlw	255
 29256  0115A8  22DD               	addwfc	postdec2,f,c
 29257  0115AA                     l15385:
 29258                           
 29259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 29260                           ;stkvar	_w @ sp[(-56)+38]
 29261  0115AA  0EEE               	movlw	-18
 29262  0115AC  006F FF8F FFE6     	movff	plusw1,postinc1
 29263  0115B2  006F FF8F FFE6     	movff	plusw1,postinc1
 29264  0115B8  0E54               	movlw	low _dbuf
 29265  0115BA  6EE6               	movwf	postinc1,c
 29266  0115BC  0E03               	movlw	high _dbuf
 29267  0115BE  6EE6               	movwf	postinc1,c
 29268                           
 29269                           ;stkvar	_fp @ sp[(-60)+-2]
 29270  0115C0  0EC2               	movlw	-62
 29271  0115C2  006F FF8F FFE6     	movff	plusw1,postinc1
 29272  0115C8  006F FF8F FFE6     	movff	plusw1,postinc1
 29273  0115CE  EC30  F0F6         	call	_pad	;wreg free
 29274  0115D2  EFDC  F092         	goto	l2496
 29275  0115D6                     l15389:
 29276                           
 29277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29278                           ;stkvar	_g @ sp[(-56)+16]
 29279  0115D6  0ED8               	movlw	-40
 29280  0115D8  006F FF8F FFE6     	movff	plusw1,postinc1
 29281  0115DE  006F FF8F FFE6     	movff	plusw1,postinc1
 29282  0115E4  006F FF8F FFE6     	movff	plusw1,postinc1
 29283  0115EA  006F FF8F FFE6     	movff	plusw1,postinc1
 29284  0115F0  EC20  F0E8         	call	___fpclassifyf	;wreg free
 29285  0115F4  5001               	movf	btemp^0,w,c
 29286  0115F6  1002               	iorwf	(btemp+1)^0,w,c
 29287  0115F8  A4D8               	btfss	status,2,c
 29288  0115FA  D056               	goto	l15407
 29289  0115FC  0EBF               	movlw	191
 29290  0115FE  6E0B               	movwf	(btemp+10)^0,c
 29291  011600  0EFF               	movlw	255
 29292  011602  6E0C               	movwf	(btemp+11)^0,c
 29293                           
 29294                           ;stkvar	_c @ sp[(-56)+-7]
 29295  011604  0EC1               	movlw	-63
 29296  011606  50E3               	movf	plusw1,w,c
 29297  011608  6E09               	movwf	(btemp+8)^0,c
 29298  01160A  6A0A               	clrf	(btemp+9)^0,c
 29299  01160C  500B               	movf	(btemp+10)^0,w,c
 29300  01160E  2609               	addwf	(btemp+8)^0,f,c
 29301  011610  500C               	movf	(btemp+11)^0,w,c
 29302  011612  220A               	addwfc	(btemp+9)^0,f,c
 29303  011614  500A               	movf	(btemp+9)^0,w,c
 29304  011616  E106               	bnz	u14500
 29305  011618  0E1A               	movlw	26
 29306  01161A  5C09               	subwf	(btemp+8)^0,w,c
 29307  01161C  B0D8               	btfsc	status,0,c
 29308  01161E  D002               	goto	u14500
 29309  011620  0E01               	movlw	1
 29310  011622  D001               	goto	u14510
 29311  011624                     u14500:
 29312  011624  0E00               	movlw	0
 29313  011626                     u14510:
 29314  011626  6E0B               	movwf	(btemp+10)^0,c
 29315  011628  6A0C               	clrf	(btemp+11)^0,c
 29316                           
 29317                           ;stkvar	_efgtoa$6832 @ sp[(-56)+6]
 29318  01162A  0ECE               	movlw	-50
 29319  01162C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29320  011632  0ECF               	movlw	-49
 29321  011634  0060  F033  FFE3   	movff	btemp+11,plusw1
 29322                           
 29323                           ;stkvar	_efgtoa$6832 @ sp[(-56)+6]
 29324  01163A  0ECE               	movlw	-50
 29325  01163C  006F FF8C  F001    	movff	plusw1,btemp
 29326  011642  0ECF               	movlw	-49
 29327  011644  50E3               	movf	plusw1,w,c
 29328  011646  1001               	iorwf	btemp^0,w,c
 29329  011648  B4D8               	btfsc	status,2,c
 29330  01164A  D017               	goto	l15399
 29331                           
 29332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 29333  01164C  0EDA               	movlw	low STR_92
 29334  01164E  6EE6               	movwf	postinc1,c
 29335  011650  0EFF               	movlw	high STR_92
 29336  011652  6EE6               	movwf	postinc1,c
 29337                           
 29338                           ;stkvar	_n @ sp[(-58)+32]
 29339  011654  0E54               	movlw	low _dbuf
 29340  011656  6E0B               	movwf	(btemp+10)^0,c
 29341  011658  0E03               	movlw	high _dbuf
 29342  01165A  6E0C               	movwf	(btemp+11)^0,c
 29343  01165C  0EE6               	movlw	-26
 29344  01165E  50E3               	movf	plusw1,w,c
 29345  011660  260B               	addwf	(btemp+10)^0,f,c
 29346  011662  0EE7               	movlw	-25
 29347  011664  50E3               	movf	plusw1,w,c
 29348  011666  220C               	addwfc	(btemp+11)^0,f,c
 29349  011668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29350  01166E  0060  F033  FFE6   	movff	btemp+11,postinc1
 29351  011674  EC72  F0FB         	call	_strcpy	;wreg free
 29352                           
 29353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 29354  011678  D78D               	goto	l15383
 29355  01167A                     l15399:
 29356                           
 29357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 29358  01167A  0EE2               	movlw	low STR_93
 29359  01167C  6EE6               	movwf	postinc1,c
 29360  01167E  0EFF               	movlw	high STR_93
 29361  011680  6EE6               	movwf	postinc1,c
 29362                           
 29363                           ;stkvar	_n @ sp[(-58)+32]
 29364  011682  0E54               	movlw	low _dbuf
 29365  011684  6E0B               	movwf	(btemp+10)^0,c
 29366  011686  0E03               	movlw	high _dbuf
 29367  011688  6E0C               	movwf	(btemp+11)^0,c
 29368  01168A  0EE6               	movlw	-26
 29369  01168C  50E3               	movf	plusw1,w,c
 29370  01168E  260B               	addwf	(btemp+10)^0,f,c
 29371  011690  0EE7               	movlw	-25
 29372  011692  50E3               	movf	plusw1,w,c
 29373  011694  220C               	addwfc	(btemp+11)^0,f,c
 29374  011696  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29375  01169C  0060  F033  FFE6   	movff	btemp+11,postinc1
 29376  0116A2  EC72  F0FB         	call	_strcpy	;wreg free
 29377  0116A6  D776               	goto	l15383
 29378  0116A8                     l15407:
 29379                           
 29380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 29381  0116A8  0E00               	movlw	0
 29382  0116AA  6E09               	movwf	(btemp+8)^0,c
 29383  0116AC  0E00               	movlw	0
 29384  0116AE  6E0A               	movwf	(btemp+9)^0,c
 29385  0116B0  0E80               	movlw	128
 29386  0116B2  6E0B               	movwf	(btemp+10)^0,c
 29387  0116B4  0E3F               	movlw	63
 29388  0116B6  6E0C               	movwf	(btemp+11)^0,c
 29389                           
 29390                           ;stkvar	_u @ sp[(-56)+12]
 29391  0116B8  0ED4               	movlw	-44
 29392  0116BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 29393  0116C0  0ED5               	movlw	-43
 29394  0116C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29395  0116C8  0ED6               	movlw	-42
 29396  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29397  0116D0  0ED7               	movlw	-41
 29398  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29399                           
 29400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 29401                           ;stkvar	_e @ sp[(-56)+34]
 29402  0116D8  0EEA               	movlw	-22
 29403  0116DA  6AE3               	clrf	plusw1,c
 29404  0116DC  0EEB               	movlw	-21
 29405  0116DE  6AE3               	clrf	plusw1,c
 29406                           
 29407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 29408  0116E0  0E00               	movlw	0
 29409  0116E2  6EE6               	movwf	postinc1,c
 29410  0116E4  0E00               	movlw	0
 29411  0116E6  6EE6               	movwf	postinc1,c
 29412  0116E8  0E00               	movlw	0
 29413  0116EA  6EE6               	movwf	postinc1,c
 29414  0116EC  0E00               	movlw	0
 29415  0116EE  6EE6               	movwf	postinc1,c
 29416                           
 29417                           ;stkvar	_g @ sp[(-60)+16]
 29418  0116F0  0ED4               	movlw	-44
 29419  0116F2  006F FF8F FFE6     	movff	plusw1,postinc1
 29420  0116F8  006F FF8F FFE6     	movff	plusw1,postinc1
 29421  0116FE  006F FF8F FFE6     	movff	plusw1,postinc1
 29422  011704  006F FF8F FFE6     	movff	plusw1,postinc1
 29423  01170A  ECA8  F0FC         	call	___fleq	;wreg free
 29424  01170E  A001               	btfss	btemp& (0+255),0,c
 29425  011710  D039               	goto	l15419
 29426  011712  D0BC               	goto	u14550
 29427  011714                     l15415:
 29428                           
 29429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 29430  011714  0E00               	movlw	0
 29431  011716  6EE6               	movwf	postinc1,c
 29432  011718  0E00               	movlw	0
 29433  01171A  6EE6               	movwf	postinc1,c
 29434  01171C  0E20               	movlw	32
 29435  01171E  6EE6               	movwf	postinc1,c
 29436  011720  0E41               	movlw	65
 29437  011722  6EE6               	movwf	postinc1,c
 29438                           
 29439                           ;stkvar	_u @ sp[(-60)+12]
 29440  011724  0ED0               	movlw	-48
 29441  011726  006F FF8F FFE6     	movff	plusw1,postinc1
 29442  01172C  006F FF8F FFE6     	movff	plusw1,postinc1
 29443  011732  006F FF8F FFE6     	movff	plusw1,postinc1
 29444  011738  006F FF8F FFE6     	movff	plusw1,postinc1
 29445  01173E  EC61  F0B1         	call	___flmul	;wreg free
 29446                           
 29447                           ;stkvar	_u @ sp[(-56)+12]
 29448  011742  0ED4               	movlw	-44
 29449  011744  0060  F007  FFE3   	movff	btemp,plusw1
 29450  01174A  0ED5               	movlw	-43
 29451  01174C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29452  011752  0ED6               	movlw	-42
 29453  011754  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29454  01175A  0ED7               	movlw	-41
 29455  01175C  0060  F013  FFE3   	movff	btemp+3,plusw1
 29456                           
 29457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 29458                           ;stkvar	_e @ sp[(-56)+34]
 29459  011762  0EEA               	movlw	-22
 29460  011764  50E3               	movf	plusw1,w,c
 29461  011766  0F01               	addlw	1
 29462  011768  6E01               	movwf	btemp^0,c
 29463  01176A  0EEA               	movlw	-22
 29464  01176C  0060  F007  FFE3   	movff	btemp,plusw1
 29465  011772  6A01               	clrf	btemp^0,c
 29466  011774  0EEB               	movlw	-21
 29467  011776  50E3               	movf	plusw1,w,c
 29468  011778  2001               	addwfc	btemp^0,w,c
 29469  01177A  6E01               	movwf	btemp^0,c
 29470  01177C  0EEB               	movlw	-21
 29471  01177E  0060  F007  FFE3   	movff	btemp,plusw1
 29472  011784                     l15419:
 29473                           
 29474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 29475  011784  0E00               	movlw	0
 29476  011786  6EE6               	movwf	postinc1,c
 29477  011788  0E00               	movlw	0
 29478  01178A  6EE6               	movwf	postinc1,c
 29479  01178C  0E20               	movlw	32
 29480  01178E  6EE6               	movwf	postinc1,c
 29481  011790  0E41               	movlw	65
 29482  011792  6EE6               	movwf	postinc1,c
 29483                           
 29484                           ;stkvar	_u @ sp[(-60)+12]
 29485  011794  0ED0               	movlw	-48
 29486  011796  006F FF8F FFE6     	movff	plusw1,postinc1
 29487  01179C  006F FF8F FFE6     	movff	plusw1,postinc1
 29488  0117A2  006F FF8F FFE6     	movff	plusw1,postinc1
 29489  0117A8  006F FF8F FFE6     	movff	plusw1,postinc1
 29490  0117AE  EC61  F0B1         	call	___flmul	;wreg free
 29491  0117B2  0060  F007  FFE6   	movff	btemp,postinc1
 29492  0117B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29493  0117BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29494  0117C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 29495                           
 29496                           ;stkvar	_g @ sp[(-60)+16]
 29497  0117CA  0ED4               	movlw	-44
 29498  0117CC  006F FF8F FFE6     	movff	plusw1,postinc1
 29499  0117D2  006F FF8F FFE6     	movff	plusw1,postinc1
 29500  0117D8  006F FF8F FFE6     	movff	plusw1,postinc1
 29501  0117DE  006F FF8F FFE6     	movff	plusw1,postinc1
 29502  0117E4  EC23  F0EE         	call	___flge	;wreg free
 29503  0117E8  A001               	btfss	btemp& (0+255),0,c
 29504  0117EA  D032               	goto	l15425
 29505  0117EC  D793               	goto	l15415
 29506  0117EE                     l15421:
 29507                           
 29508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 29509  0117EE  0E00               	movlw	0
 29510  0117F0  6EE6               	movwf	postinc1,c
 29511  0117F2  0E00               	movlw	0
 29512  0117F4  6EE6               	movwf	postinc1,c
 29513  0117F6  0E20               	movlw	32
 29514  0117F8  6EE6               	movwf	postinc1,c
 29515  0117FA  0E41               	movlw	65
 29516  0117FC  6EE6               	movwf	postinc1,c
 29517                           
 29518                           ;stkvar	_u @ sp[(-60)+12]
 29519  0117FE  0ED0               	movlw	-48
 29520  011800  006F FF8F FFE6     	movff	plusw1,postinc1
 29521  011806  006F FF8F FFE6     	movff	plusw1,postinc1
 29522  01180C  006F FF8F FFE6     	movff	plusw1,postinc1
 29523  011812  006F FF8F FFE6     	movff	plusw1,postinc1
 29524  011818  ECB2  F0BC         	call	___fldiv	;wreg free
 29525                           
 29526                           ;stkvar	_u @ sp[(-56)+12]
 29527  01181C  0ED4               	movlw	-44
 29528  01181E  0060  F007  FFE3   	movff	btemp,plusw1
 29529  011824  0ED5               	movlw	-43
 29530  011826  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29531  01182C  0ED6               	movlw	-42
 29532  01182E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29533  011834  0ED7               	movlw	-41
 29534  011836  0060  F013  FFE3   	movff	btemp+3,plusw1
 29535                           
 29536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 29537                           ;stkvar	_e @ sp[(-56)+34]
 29538  01183C  50E1               	movf	fsr1l,w,c
 29539  01183E  0FEA               	addlw	-22
 29540  011840  6ED9               	movwf	fsr2l,c
 29541  011842  50E2               	movf	fsr1h,w,c
 29542  011844  6EDA               	movwf	fsr2h,c
 29543  011846  0EFF               	movlw	255
 29544  011848  22DA               	addwfc	fsr2h,f,c
 29545  01184A  06DE               	decf	postinc2,f,c
 29546  01184C  0E00               	movlw	0
 29547  01184E  5ADD               	subwfb	postdec2,f,c
 29548  011850                     l15425:
 29549                           
 29550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 29551                           ;stkvar	_u @ sp[(-56)+12]
 29552  011850  0ED4               	movlw	-44
 29553  011852  006F FF8F FFE6     	movff	plusw1,postinc1
 29554  011858  006F FF8F FFE6     	movff	plusw1,postinc1
 29555  01185E  006F FF8F FFE6     	movff	plusw1,postinc1
 29556  011864  006F FF8F FFE6     	movff	plusw1,postinc1
 29557                           
 29558                           ;stkvar	_g @ sp[(-60)+16]
 29559  01186A  0ED4               	movlw	-44
 29560  01186C  006F FF8F FFE6     	movff	plusw1,postinc1
 29561  011872  006F FF8F FFE6     	movff	plusw1,postinc1
 29562  011878  006F FF8F FFE6     	movff	plusw1,postinc1
 29563  01187E  006F FF8F FFE6     	movff	plusw1,postinc1
 29564  011884  EC23  F0EE         	call	___flge	;wreg free
 29565  011888  A001               	btfss	btemp& (0+255),0,c
 29566  01188A  D7B1               	goto	l15421
 29567  01188C                     u14550:
 29568                           
 29569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 29570                           ;stkvar	_c @ sp[(-56)+-7]
 29571  01188C  0EC1               	movlw	-63
 29572  01188E  50E3               	movf	plusw1,w,c
 29573  011890  6EE6               	movwf	postinc1,c
 29574  011892  0E00               	movlw	0
 29575  011894  6EE6               	movwf	postinc1,c
 29576  011896  EC42  F003         	call	_tolower	;wreg free
 29577                           
 29578                           ;stkvar	_mode @ sp[(-56)+54]
 29579  01189A  0EFE               	movlw	-2
 29580  01189C  0060  F007  FFE3   	movff	btemp,plusw1
 29581                           
 29582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 29583                           ;stkvar	_mode @ sp[(-56)+54]
 29584                           ;stkvar	_nmode @ sp[(-56)+55]
 29585  0118A2  0EFE               	movlw	-2
 29586  0118A4  006F FF8C  F001    	movff	plusw1,btemp
 29587  0118AA  0EFF               	movlw	-1
 29588  0118AC  0060  F007  FFE3   	movff	btemp,plusw1
 29589                           
 29590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 29591                           ;stkvar	_mode @ sp[(-56)+54]
 29592  0118B2  0EFE               	movlw	-2
 29593  0118B4  006F FF8C  F001    	movff	plusw1,btemp
 29594  0118BA  0E67               	movlw	103
 29595  0118BC  1801               	xorwf	btemp^0,w,c
 29596  0118BE  A4D8               	btfss	status,2,c
 29597  0118C0  D025               	goto	l15443
 29598                           
 29599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 29600  0118C2  503C               	movf	_prec^0,w,c
 29601  0118C4  103D               	iorwf	(_prec+1)^0,w,c
 29602  0118C6  A4D8               	btfss	status,2,c
 29603  0118C8  D004               	goto	l15437
 29604                           
 29605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 29606  0118CA  0E00               	movlw	0
 29607  0118CC  6E3D               	movwf	(_prec+1)^0,c
 29608  0118CE  0E01               	movlw	1
 29609  0118D0  6E3C               	movwf	_prec^0,c
 29610  0118D2                     l15437:
 29611                           
 29612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 29613  0118D2  BE3D               	btfsc	(_prec+1)^0,7,c
 29614  0118D4  D005               	goto	u14580
 29615  0118D6  503D               	movf	(_prec+1)^0,w,c
 29616  0118D8  E110               	bnz	l15441
 29617  0118DA  043C               	decf	_prec^0,w,c
 29618  0118DC  B0D8               	btfsc	status,0,c
 29619  0118DE  D00D               	goto	l15441
 29620  0118E0                     u14580:
 29621  0118E0  0E06               	movlw	6
 29622  0118E2  6E0B               	movwf	(btemp+10)^0,c
 29623  0118E4  0E00               	movlw	0
 29624  0118E6  6E0C               	movwf	(btemp+11)^0,c
 29625                           
 29626                           ;stkvar	_p @ sp[(-56)+40]
 29627  0118E8  0EF0               	movlw	-16
 29628  0118EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29629  0118F0  0EF1               	movlw	-15
 29630  0118F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29631  0118F8  D00C               	goto	l15449
 29632  0118FA                     l15441:
 29633                           
 29634                           ;stkvar	_p @ sp[(-56)+40]
 29635  0118FA  0EF0               	movlw	-16
 29636  0118FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 29637  011902  0EF1               	movlw	-15
 29638  011904  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 29639  01190A  D003               	goto	l15449
 29640  01190C                     l15443:
 29641                           
 29642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 29643  01190C  AE3D               	btfss	(_prec+1)^0,7,c
 29644  01190E  D7F5               	goto	l15441
 29645  011910  D7E7               	goto	u14580
 29646  011912                     l15449:
 29647                           
 29648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 29649                           ;stkvar	_mode @ sp[(-56)+54]
 29650  011912  0EFE               	movlw	-2
 29651  011914  006F FF8C  F001    	movff	plusw1,btemp
 29652  01191A  0E67               	movlw	103
 29653  01191C  1801               	xorwf	btemp^0,w,c
 29654  01191E  A4D8               	btfss	status,2,c
 29655  011920  D02F               	goto	l15459
 29656                           
 29657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 29658                           ;stkvar	_e @ sp[(-56)+34]
 29659  011922  0EEB               	movlw	-21
 29660  011924  AEE3               	btfss	plusw1,7,c
 29661  011926  D00E               	goto	u14610
 29662  011928  0EEA               	movlw	-22
 29663  01192A  006F FF8C  F001    	movff	plusw1,btemp
 29664  011930  0EFC               	movlw	252
 29665  011932  5E01               	subwf	btemp^0,f,c
 29666  011934  0EEB               	movlw	-21
 29667  011936  006F FF8C  F001    	movff	plusw1,btemp
 29668  01193C  0EFF               	movlw	255
 29669  01193E  5A01               	subwfb	btemp^0,f,c
 29670  011940  A0D8               	btfss	status,0,c
 29671  011942  D018               	goto	l15457
 29672  011944                     u14610:
 29673                           
 29674                           ;stkvar	_e @ sp[(-56)+34]
 29675                           ;stkvar	_p @ sp[(-56)+40]
 29676  011944  0EF0               	movlw	-16
 29677  011946  50E3               	movf	plusw1,w,c
 29678  011948  0FFF               	addlw	255
 29679  01194A  6E0B               	movwf	(btemp+10)^0,c
 29680  01194C  0EF1               	movlw	-15
 29681  01194E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29682  011954  0EFF               	movlw	255
 29683  011956  220C               	addwfc	(btemp+11)^0,f,c
 29684  011958  0EEA               	movlw	-22
 29685  01195A  50E3               	movf	plusw1,w,c
 29686  01195C  5C0B               	subwf	(btemp+10)^0,w,c
 29687  01195E  500C               	movf	(btemp+11)^0,w,c
 29688  011960  0A80               	xorlw	128
 29689  011962  6E01               	movwf	btemp^0,c
 29690  011964  0EEB               	movlw	-21
 29691  011966  50E3               	movf	plusw1,w,c
 29692  011968  0A80               	xorlw	128
 29693  01196A  5801               	subwfb	btemp^0,w,c
 29694  01196C  A0D8               	btfss	status,0,c
 29695  01196E  D002               	goto	l15457
 29696                           
 29697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 29698  011970  0E66               	movlw	102
 29699  011972  D001               	goto	L31
 29700  011974                     l15457:
 29701                           
 29702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 29703  011974  0E65               	movlw	101
 29704  011976                     L31:
 29705  011976  6E0C               	movwf	(btemp+11)^0,c
 29706                           
 29707                           ;stkvar	_nmode @ sp[(-56)+55]
 29708  011978  0EFF               	movlw	-1
 29709  01197A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29710  011980                     l15459:
 29711                           
 29712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 29713                           ;stkvar	_p @ sp[(-56)+40]
 29714                           ;stkvar	_m @ sp[(-56)+48]
 29715  011980  0EF0               	movlw	-16
 29716  011982  006F FF8C  F001    	movff	plusw1,btemp
 29717  011988  0EF8               	movlw	-8
 29718  01198A  0060  F007  FFE3   	movff	btemp,plusw1
 29719  011990  0EF1               	movlw	-15
 29720  011992  006F FF8C  F001    	movff	plusw1,btemp
 29721  011998  0EF9               	movlw	-7
 29722  01199A  0060  F007  FFE3   	movff	btemp,plusw1
 29723                           
 29724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 29725                           ;stkvar	_mode @ sp[(-56)+54]
 29726  0119A0  0EFE               	movlw	-2
 29727  0119A2  006F FF8C  F001    	movff	plusw1,btemp
 29728  0119A8  0E67               	movlw	103
 29729  0119AA  1801               	xorwf	btemp^0,w,c
 29730  0119AC  A4D8               	btfss	status,2,c
 29731  0119AE  D00B               	goto	u14650
 29732                           
 29733                           ;stkvar	_nmode @ sp[(-56)+55]
 29734  0119B0  0EFF               	movlw	-1
 29735  0119B2  006F FF8C  F001    	movff	plusw1,btemp
 29736  0119B8  0E66               	movlw	102
 29737  0119BA  1801               	xorwf	btemp^0,w,c
 29738  0119BC  A4D8               	btfss	status,2,c
 29739  0119BE  D014               	goto	l2525
 29740                           
 29741                           ;stkvar	_e @ sp[(-56)+34]
 29742  0119C0  0EEB               	movlw	-21
 29743  0119C2  AEE3               	btfss	plusw1,7,c
 29744  0119C4  D011               	goto	l2525
 29745  0119C6                     u14650:
 29746                           
 29747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 29748                           ;stkvar	_m @ sp[(-56)+48]
 29749  0119C6  0EF8               	movlw	-8
 29750  0119C8  50E3               	movf	plusw1,w,c
 29751  0119CA  0F01               	addlw	1
 29752  0119CC  6E01               	movwf	btemp^0,c
 29753  0119CE  0EF8               	movlw	-8
 29754  0119D0  0060  F007  FFE3   	movff	btemp,plusw1
 29755  0119D6  6A01               	clrf	btemp^0,c
 29756  0119D8  0EF9               	movlw	-7
 29757  0119DA  50E3               	movf	plusw1,w,c
 29758  0119DC  2001               	addwfc	btemp^0,w,c
 29759  0119DE  6E01               	movwf	btemp^0,c
 29760  0119E0  0EF9               	movlw	-7
 29761  0119E2  0060  F007  FFE3   	movff	btemp,plusw1
 29762  0119E8                     l2525:
 29763                           
 29764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 29765                           ;stkvar	_nmode @ sp[(-56)+55]
 29766  0119E8  0EFF               	movlw	-1
 29767  0119EA  006F FF8C  F001    	movff	plusw1,btemp
 29768  0119F0  0E66               	movlw	102
 29769  0119F2  1801               	xorwf	btemp^0,w,c
 29770  0119F4  A4D8               	btfss	status,2,c
 29771  0119F6  D03B               	goto	l15479
 29772                           
 29773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 29774                           ;stkvar	_e @ sp[(-56)+34]
 29775  0119F8  0EEB               	movlw	-21
 29776  0119FA  AEE3               	btfss	plusw1,7,c
 29777  0119FC  D01C               	goto	l15475
 29778                           
 29779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 29780  0119FE  0E00               	movlw	0
 29781  011A00  6E09               	movwf	(btemp+8)^0,c
 29782  011A02  0E00               	movlw	0
 29783  011A04  6E0A               	movwf	(btemp+9)^0,c
 29784  011A06  0E80               	movlw	128
 29785  011A08  6E0B               	movwf	(btemp+10)^0,c
 29786  011A0A  0E3F               	movlw	63
 29787  011A0C  6E0C               	movwf	(btemp+11)^0,c
 29788                           
 29789                           ;stkvar	_u @ sp[(-56)+12]
 29790  011A0E  0ED4               	movlw	-44
 29791  011A10  0060  F027  FFE3   	movff	btemp+8,plusw1
 29792  011A16  0ED5               	movlw	-43
 29793  011A18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29794  011A1E  0ED6               	movlw	-42
 29795  011A20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29796  011A26  0ED7               	movlw	-41
 29797  011A28  0060  F033  FFE3   	movff	btemp+11,plusw1
 29798                           
 29799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 29800                           ;stkvar	_e @ sp[(-56)+34]
 29801  011A2E  0EEA               	movlw	-22
 29802  011A30  6AE3               	clrf	plusw1,c
 29803  011A32  0EEB               	movlw	-21
 29804  011A34  6AE3               	clrf	plusw1,c
 29805  011A36                     l15475:
 29806                           
 29807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 29808                           ;stkvar	_mode @ sp[(-56)+54]
 29809  011A36  0EFE               	movlw	-2
 29810  011A38  006F FF8C  F001    	movff	plusw1,btemp
 29811  011A3E  0E67               	movlw	103
 29812  011A40  1801               	xorwf	btemp^0,w,c
 29813  011A42  B4D8               	btfsc	status,2,c
 29814  011A44  D014               	goto	l15479
 29815                           
 29816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 29817                           ;stkvar	_e @ sp[(-56)+34]
 29818                           ;stkvar	_m @ sp[(-56)+48]
 29819  011A46  0EF8               	movlw	-8
 29820  011A48  50E3               	movf	plusw1,w,c
 29821  011A4A  6E01               	movwf	btemp^0,c
 29822  011A4C  0EEA               	movlw	-22
 29823  011A4E  50E3               	movf	plusw1,w,c
 29824  011A50  2601               	addwf	btemp^0,f,c
 29825  011A52  0EF8               	movlw	-8
 29826  011A54  0060  F007  FFE3   	movff	btemp,plusw1
 29827  011A5A  0EF9               	movlw	-7
 29828  011A5C  50E3               	movf	plusw1,w,c
 29829  011A5E  6E01               	movwf	btemp^0,c
 29830  011A60  0EEB               	movlw	-21
 29831  011A62  50E3               	movf	plusw1,w,c
 29832  011A64  2201               	addwfc	btemp^0,f,c
 29833  011A66  0EF9               	movlw	-7
 29834  011A68  0060  F007  FFE3   	movff	btemp,plusw1
 29835  011A6E                     l15479:
 29836                           
 29837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 29838                           ;stkvar	_i @ sp[(-56)+36]
 29839  011A6E  0EEC               	movlw	-20
 29840  011A70  6AE3               	clrf	plusw1,c
 29841  011A72  0EED               	movlw	-19
 29842  011A74  6AE3               	clrf	plusw1,c
 29843                           
 29844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 29845                           ;stkvar	_g @ sp[(-56)+16]
 29846  011A76  0ED8               	movlw	-40
 29847  011A78  006F FF8C  F009    	movff	plusw1,btemp+8
 29848  011A7E  0ED9               	movlw	-39
 29849  011A80  006F FF8C  F00A    	movff	plusw1,btemp+9
 29850  011A86  0EDA               	movlw	-38
 29851  011A88  006F FF8C  F00B    	movff	plusw1,btemp+10
 29852  011A8E  0EDB               	movlw	-37
 29853  011A90  006F FF8C  F00C    	movff	plusw1,btemp+11
 29854                           
 29855                           ;stkvar	_h @ sp[(-56)+24]
 29856  011A96  0EE0               	movlw	-32
 29857  011A98  0060  F027  FFE3   	movff	btemp+8,plusw1
 29858  011A9E  0EE1               	movlw	-31
 29859  011AA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29860  011AA6  0EE2               	movlw	-30
 29861  011AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29862  011AAE  0EE3               	movlw	-29
 29863  011AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29864                           
 29865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 29866                           ;stkvar	_u @ sp[(-56)+12]
 29867  011AB6  0ED4               	movlw	-44
 29868  011AB8  006F FF8C  F009    	movff	plusw1,btemp+8
 29869  011ABE  0ED5               	movlw	-43
 29870  011AC0  006F FF8C  F00A    	movff	plusw1,btemp+9
 29871  011AC6  0ED6               	movlw	-42
 29872  011AC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 29873  011ACE  0ED7               	movlw	-41
 29874  011AD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29875                           
 29876                           ;stkvar	_ou @ sp[(-56)+28]
 29877  011AD6  0EE4               	movlw	-28
 29878  011AD8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29879  011ADE  0EE5               	movlw	-27
 29880  011AE0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29881  011AE6  0EE6               	movlw	-26
 29882  011AE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29883  011AEE  0EE7               	movlw	-25
 29884  011AF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29885                           
 29886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 29887  011AF6  D0D6               	goto	l15495
 29888  011AF8                     l15485:
 29889                           
 29890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 29891                           ;stkvar	_u @ sp[(-56)+12]
 29892  011AF8  0ED4               	movlw	-44
 29893  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 29894  011B00  006F FF8F FFE6     	movff	plusw1,postinc1
 29895  011B06  006F FF8F FFE6     	movff	plusw1,postinc1
 29896  011B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 29897                           
 29898                           ;stkvar	_h @ sp[(-60)+24]
 29899  011B12  0EDC               	movlw	-36
 29900  011B14  006F FF8F FFE6     	movff	plusw1,postinc1
 29901  011B1A  006F FF8F FFE6     	movff	plusw1,postinc1
 29902  011B20  006F FF8F FFE6     	movff	plusw1,postinc1
 29903  011B26  006F FF8F FFE6     	movff	plusw1,postinc1
 29904  011B2C  ECB2  F0BC         	call	___fldiv	;wreg free
 29905  011B30  0060  F007  FFE6   	movff	btemp,postinc1
 29906  011B36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29907  011B3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29908  011B42  0060  F013  FFE6   	movff	btemp+3,postinc1
 29909  011B48  ECDC  F0CC         	call	_floorf	;wreg free
 29910                           
 29911                           ;stkvar	_l @ sp[(-56)+20]
 29912  011B4C  0EDC               	movlw	-36
 29913  011B4E  0060  F007  FFE3   	movff	btemp,plusw1
 29914  011B54  0EDD               	movlw	-35
 29915  011B56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29916  011B5C  0EDE               	movlw	-34
 29917  011B5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29918  011B64  0EDF               	movlw	-33
 29919  011B66  0060  F013  FFE3   	movff	btemp+3,plusw1
 29920                           
 29921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 29922                           ;stkvar	_l @ sp[(-56)+20]
 29923  011B6C  0EDC               	movlw	-36
 29924  011B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 29925  011B74  006F FF8F FFE6     	movff	plusw1,postinc1
 29926  011B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 29927  011B80  006F FF8F FFE6     	movff	plusw1,postinc1
 29928  011B86  ECB7  F0EC         	call	___fltol	;wreg free
 29929  011B8A  0060  F004  F00B   	movff	btemp,btemp+10
 29930  011B90  0060  F008  F00C   	movff	btemp+1,btemp+11
 29931                           
 29932                           ;stkvar	_d @ sp[(-56)+44]
 29933  011B96  0EF4               	movlw	-12
 29934  011B98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29935  011B9E  0EF5               	movlw	-11
 29936  011BA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29937                           
 29938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 29939                           ;stkvar	_u @ sp[(-56)+12]
 29940  011BA6  0ED4               	movlw	-44
 29941  011BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 29942  011BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 29943  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 29944  011BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 29945                           
 29946                           ;stkvar	_l @ sp[(-60)+20]
 29947  011BC0  0ED8               	movlw	-40
 29948  011BC2  006F FF8F FFE6     	movff	plusw1,postinc1
 29949  011BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 29950  011BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 29951  011BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 29952  011BDA  EC61  F0B1         	call	___flmul	;wreg free
 29953  011BDE  0060  F007  FFE6   	movff	btemp,postinc1
 29954  011BE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29955  011BEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29956  011BF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 29957                           
 29958                           ;stkvar	_h @ sp[(-60)+24]
 29959  011BF6  0EDC               	movlw	-36
 29960  011BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 29961  011BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 29962  011C04  006F FF8F FFE6     	movff	plusw1,postinc1
 29963  011C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 29964  011C10  EC14  F009         	call	___flsub	;wreg free
 29965                           
 29966                           ;stkvar	_h @ sp[(-56)+24]
 29967  011C14  0EE0               	movlw	-32
 29968  011C16  0060  F007  FFE3   	movff	btemp,plusw1
 29969  011C1C  0EE1               	movlw	-31
 29970  011C1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29971  011C24  0EE2               	movlw	-30
 29972  011C26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29973  011C2C  0EE3               	movlw	-29
 29974  011C2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 29975                           
 29976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 29977  011C34  0E00               	movlw	0
 29978  011C36  6EE6               	movwf	postinc1,c
 29979  011C38  0E00               	movlw	0
 29980  011C3A  6EE6               	movwf	postinc1,c
 29981  011C3C  0E20               	movlw	32
 29982  011C3E  6EE6               	movwf	postinc1,c
 29983  011C40  0E41               	movlw	65
 29984  011C42  6EE6               	movwf	postinc1,c
 29985                           
 29986                           ;stkvar	_u @ sp[(-60)+12]
 29987  011C44  0ED0               	movlw	-48
 29988  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 29989  011C4C  006F FF8F FFE6     	movff	plusw1,postinc1
 29990  011C52  006F FF8F FFE6     	movff	plusw1,postinc1
 29991  011C58  006F FF8F FFE6     	movff	plusw1,postinc1
 29992  011C5E  ECB2  F0BC         	call	___fldiv	;wreg free
 29993                           
 29994                           ;stkvar	_u @ sp[(-56)+12]
 29995  011C62  0ED4               	movlw	-44
 29996  011C64  0060  F007  FFE3   	movff	btemp,plusw1
 29997  011C6A  0ED5               	movlw	-43
 29998  011C6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29999  011C72  0ED6               	movlw	-42
 30000  011C74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30001  011C7A  0ED7               	movlw	-41
 30002  011C7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 30003                           
 30004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30005                           ;stkvar	_i @ sp[(-56)+36]
 30006  011C82  0EEC               	movlw	-20
 30007  011C84  50E3               	movf	plusw1,w,c
 30008  011C86  0F01               	addlw	1
 30009  011C88  6E01               	movwf	btemp^0,c
 30010  011C8A  0EEC               	movlw	-20
 30011  011C8C  0060  F007  FFE3   	movff	btemp,plusw1
 30012  011C92  6A01               	clrf	btemp^0,c
 30013  011C94  0EED               	movlw	-19
 30014  011C96  50E3               	movf	plusw1,w,c
 30015  011C98  2001               	addwfc	btemp^0,w,c
 30016  011C9A  6E01               	movwf	btemp^0,c
 30017  011C9C  0EED               	movlw	-19
 30018  011C9E  0060  F007  FFE3   	movff	btemp,plusw1
 30019  011CA4                     l15495:
 30020                           
 30021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30022                           ;stkvar	_m @ sp[(-56)+48]
 30023                           ;stkvar	_i @ sp[(-56)+36]
 30024  011CA4  50E1               	movf	fsr1l,w,c
 30025  011CA6  0FEC               	addlw	-20
 30026  011CA8  6ED9               	movwf	fsr2l,c
 30027  011CAA  50E2               	movf	fsr1h,w,c
 30028  011CAC  6EDA               	movwf	fsr2h,c
 30029  011CAE  0EFF               	movlw	255
 30030  011CB0  22DA               	addwfc	fsr2h,f,c
 30031  011CB2  0EF8               	movlw	-8
 30032  011CB4  50E3               	movf	plusw1,w,c
 30033  011CB6  5CDE               	subwf	postinc2,w,c
 30034  011CB8  50DE               	movf	postinc2,w,c
 30035  011CBA  0A80               	xorlw	128
 30036  011CBC  6E01               	movwf	btemp^0,c
 30037  011CBE  0EF9               	movlw	-7
 30038  011CC0  50E3               	movf	plusw1,w,c
 30039  011CC2  0A80               	xorlw	128
 30040  011CC4  5801               	subwfb	btemp^0,w,c
 30041  011CC6  A0D8               	btfss	status,0,c
 30042  011CC8  D717               	goto	l15485
 30043                           
 30044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30045  011CCA  0E00               	movlw	0
 30046  011CCC  6EE6               	movwf	postinc1,c
 30047  011CCE  0E00               	movlw	0
 30048  011CD0  6EE6               	movwf	postinc1,c
 30049  011CD2  0EA0               	movlw	160
 30050  011CD4  6EE6               	movwf	postinc1,c
 30051  011CD6  0E40               	movlw	64
 30052  011CD8  6EE6               	movwf	postinc1,c
 30053                           
 30054                           ;stkvar	_u @ sp[(-60)+12]
 30055  011CDA  0ED0               	movlw	-48
 30056  011CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 30057  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30058  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 30059  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 30060  011CF4  EC61  F0B1         	call	___flmul	;wreg free
 30061                           
 30062                           ;stkvar	_l @ sp[(-56)+20]
 30063  011CF8  0EDC               	movlw	-36
 30064  011CFA  0060  F007  FFE3   	movff	btemp,plusw1
 30065  011D00  0EDD               	movlw	-35
 30066  011D02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30067  011D08  0EDE               	movlw	-34
 30068  011D0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30069  011D10  0EDF               	movlw	-33
 30070  011D12  0060  F013  FFE3   	movff	btemp+3,plusw1
 30071                           
 30072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30073                           ;stkvar	_l @ sp[(-56)+20]
 30074  011D18  0EDC               	movlw	-36
 30075  011D1A  006F FF8F FFE6     	movff	plusw1,postinc1
 30076  011D20  006F FF8F FFE6     	movff	plusw1,postinc1
 30077  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 30078  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 30079                           
 30080                           ;stkvar	_h @ sp[(-60)+24]
 30081  011D32  0EDC               	movlw	-36
 30082  011D34  006F FF8F FFE6     	movff	plusw1,postinc1
 30083  011D3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30084  011D40  006F FF8F FFE6     	movff	plusw1,postinc1
 30085  011D46  006F FF8F FFE6     	movff	plusw1,postinc1
 30086  011D4C  EC23  F0EE         	call	___flge	;wreg free
 30087  011D50  A001               	btfss	btemp& (0+255),0,c
 30088  011D52  D021               	goto	u14720
 30089                           
 30090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30091                           ;stkvar	_l @ sp[(-56)+20]
 30092                           
 30093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30094                           
 30095                           ;stkvar	_l @ sp[(-56)+20]
 30096                           
 30097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30098  011D54  0EDC               	movlw	-36
 30099  011D56  006F FF8F FFE6     	movff	plusw1,postinc1
 30100  011D5C  006F FF8F FFE6     	movff	plusw1,postinc1
 30101  011D62  006F FF8F FFE6     	movff	plusw1,postinc1
 30102  011D68  006F FF8F FFE6     	movff	plusw1,postinc1
 30103                           
 30104                           ;stkvar	_h @ sp[(-60)+24]
 30105  011D6E  0EDC               	movlw	-36
 30106  011D70  006F FF8F FFE6     	movff	plusw1,postinc1
 30107  011D76  006F FF8F FFE6     	movff	plusw1,postinc1
 30108  011D7C  006F FF8F FFE6     	movff	plusw1,postinc1
 30109  011D82  006F FF8F FFE6     	movff	plusw1,postinc1
 30110  011D88  ECA8  F0FC         	call	___fleq	;wreg free
 30111  011D8C  A001               	btfss	btemp& (0+255),0,c
 30112  011D8E  D01B               	goto	l15509
 30113                           
 30114                           ;stkvar	_d @ sp[(-56)+44]
 30115  011D90  0EF4               	movlw	-12
 30116  011D92  B0E3               	btfsc	plusw1,0,c
 30117  011D94  D018               	goto	l15509
 30118  011D96                     u14720:
 30119                           
 30120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30121  011D96  0E00               	movlw	0
 30122  011D98  6E09               	movwf	(btemp+8)^0,c
 30123  011D9A  0E00               	movlw	0
 30124  011D9C  6E0A               	movwf	(btemp+9)^0,c
 30125  011D9E  0E00               	movlw	0
 30126  011DA0  6E0B               	movwf	(btemp+10)^0,c
 30127  011DA2  0E00               	movlw	0
 30128  011DA4  6E0C               	movwf	(btemp+11)^0,c
 30129                           
 30130                           ;stkvar	_l @ sp[(-56)+20]
 30131  011DA6  0EDC               	movlw	-36
 30132  011DA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30133  011DAE  0EDD               	movlw	-35
 30134  011DB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30135  011DB6  0EDE               	movlw	-34
 30136  011DB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30137  011DBE  0EDF               	movlw	-33
 30138  011DC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30139  011DC6                     l15509:
 30140                           
 30141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30142                           ;stkvar	_l @ sp[(-56)+20]
 30143  011DC6  0EDC               	movlw	-36
 30144  011DC8  006F FF8F FFE6     	movff	plusw1,postinc1
 30145  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 30146  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 30147  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 30148                           
 30149                           ;stkvar	_g @ sp[(-60)+16]
 30150  011DE0  0ED4               	movlw	-44
 30151  011DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 30152  011DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 30153  011DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 30154  011DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 30155  011DFA  EC76  F0B5         	call	___fladd	;wreg free
 30156                           
 30157                           ;stkvar	_h @ sp[(-56)+24]
 30158  011DFE  0EE0               	movlw	-32
 30159  011E00  0060  F007  FFE3   	movff	btemp,plusw1
 30160  011E06  0EE1               	movlw	-31
 30161  011E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30162  011E0E  0EE2               	movlw	-30
 30163  011E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30164  011E16  0EE3               	movlw	-29
 30165  011E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 30166                           
 30167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30168                           ;stkvar	_ou @ sp[(-56)+28]
 30169  011E1E  0EE4               	movlw	-28
 30170  011E20  006F FF8C  F009    	movff	plusw1,btemp+8
 30171  011E26  0EE5               	movlw	-27
 30172  011E28  006F FF8C  F00A    	movff	plusw1,btemp+9
 30173  011E2E  0EE6               	movlw	-26
 30174  011E30  006F FF8C  F00B    	movff	plusw1,btemp+10
 30175  011E36  0EE7               	movlw	-25
 30176  011E38  006F FF8C  F00C    	movff	plusw1,btemp+11
 30177                           
 30178                           ;stkvar	_u @ sp[(-56)+12]
 30179  011E3E  0ED4               	movlw	-44
 30180  011E40  0060  F027  FFE3   	movff	btemp+8,plusw1
 30181  011E46  0ED5               	movlw	-43
 30182  011E48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30183  011E4E  0ED6               	movlw	-42
 30184  011E50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30185  011E56  0ED7               	movlw	-41
 30186  011E58  0060  F033  FFE3   	movff	btemp+11,plusw1
 30187                           
 30188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 30189                           ;stkvar	_nmode @ sp[(-56)+55]
 30190  011E5E  0EFF               	movlw	-1
 30191  011E60  006F FF8C  F001    	movff	plusw1,btemp
 30192  011E66  0E65               	movlw	101
 30193  011E68  1801               	xorwf	btemp^0,w,c
 30194  011E6A  B4D8               	btfsc	status,2,c
 30195  011E6C  D011               	goto	l15517
 30196                           
 30197                           ;stkvar	_e @ sp[(-56)+34]
 30198                           ;stkvar	_ne @ sp[(-56)+46]
 30199  011E6E  0EEA               	movlw	-22
 30200  011E70  006F FF8C  F001    	movff	plusw1,btemp
 30201  011E76  0EF6               	movlw	-10
 30202  011E78  0060  F007  FFE3   	movff	btemp,plusw1
 30203  011E7E  0EEB               	movlw	-21
 30204  011E80  006F FF8C  F001    	movff	plusw1,btemp
 30205  011E86  0EF7               	movlw	-9
 30206  011E88  0060  F007  FFE3   	movff	btemp,plusw1
 30207  011E8E  D004               	goto	l2540
 30208  011E90                     l15517:
 30209                           
 30210                           ;stkvar	_ne @ sp[(-56)+46]
 30211  011E90  0EF6               	movlw	-10
 30212  011E92  6AE3               	clrf	plusw1,c
 30213  011E94  0EF7               	movlw	-9
 30214  011E96  6AE3               	clrf	plusw1,c
 30215  011E98                     l2540:
 30216                           
 30217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 30218                           ;stkvar	_pp @ sp[(-56)+50]
 30219  011E98  0EFA               	movlw	-6
 30220  011E9A  6AE3               	clrf	plusw1,c
 30221  011E9C  0EFB               	movlw	-5
 30222  011E9E  6AE3               	clrf	plusw1,c
 30223                           
 30224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 30225                           ;stkvar	_t @ sp[(-56)+52]
 30226  011EA0  0EFC               	movlw	-4
 30227  011EA2  6AE3               	clrf	plusw1,c
 30228  011EA4  0EFD               	movlw	-3
 30229  011EA6  6AE3               	clrf	plusw1,c
 30230                           
 30231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 30232                           ;stkvar	_i @ sp[(-56)+36]
 30233  011EA8  0EEC               	movlw	-20
 30234  011EAA  6AE3               	clrf	plusw1,c
 30235  011EAC  0EED               	movlw	-19
 30236  011EAE  6AE3               	clrf	plusw1,c
 30237                           
 30238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30239  011EB0  D1B7               	goto	l15569
 30240  011EB2                     l15519:
 30241                           
 30242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 30243                           ;stkvar	_u @ sp[(-56)+12]
 30244  011EB2  0ED4               	movlw	-44
 30245  011EB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30246  011EBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30247  011EC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30248  011EC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30249                           
 30250                           ;stkvar	_h @ sp[(-60)+24]
 30251  011ECC  0EDC               	movlw	-36
 30252  011ECE  006F FF8F FFE6     	movff	plusw1,postinc1
 30253  011ED4  006F FF8F FFE6     	movff	plusw1,postinc1
 30254  011EDA  006F FF8F FFE6     	movff	plusw1,postinc1
 30255  011EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 30256  011EE6  ECB2  F0BC         	call	___fldiv	;wreg free
 30257  011EEA  0060  F007  FFE6   	movff	btemp,postinc1
 30258  011EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30259  011EF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30260  011EFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 30261  011F02  ECDC  F0CC         	call	_floorf	;wreg free
 30262                           
 30263                           ;stkvar	_l @ sp[(-56)+20]
 30264  011F06  0EDC               	movlw	-36
 30265  011F08  0060  F007  FFE3   	movff	btemp,plusw1
 30266  011F0E  0EDD               	movlw	-35
 30267  011F10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30268  011F16  0EDE               	movlw	-34
 30269  011F18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30270  011F1E  0EDF               	movlw	-33
 30271  011F20  0060  F013  FFE3   	movff	btemp+3,plusw1
 30272                           
 30273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 30274                           ;stkvar	_l @ sp[(-56)+20]
 30275  011F26  0EDC               	movlw	-36
 30276  011F28  006F FF8F FFE6     	movff	plusw1,postinc1
 30277  011F2E  006F FF8F FFE6     	movff	plusw1,postinc1
 30278  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 30279  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30280  011F40  ECB7  F0EC         	call	___fltol	;wreg free
 30281  011F44  0060  F004  F00B   	movff	btemp,btemp+10
 30282  011F4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 30283                           
 30284                           ;stkvar	_d @ sp[(-56)+44]
 30285  011F50  0EF4               	movlw	-12
 30286  011F52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30287  011F58  0EF5               	movlw	-11
 30288  011F5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 30289                           
 30290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 30291  011F60  B83E               	btfsc	_flags^0,4,c
 30292  011F62  D026               	goto	l15533
 30293                           
 30294                           ;stkvar	_d @ sp[(-56)+44]
 30295  011F64  0EF4               	movlw	-12
 30296  011F66  006F FF8C  F001    	movff	plusw1,btemp
 30297  011F6C  0EF5               	movlw	-11
 30298  011F6E  50E3               	movf	plusw1,w,c
 30299  011F70  1001               	iorwf	btemp^0,w,c
 30300  011F72  A4D8               	btfss	status,2,c
 30301  011F74  D01D               	goto	l15533
 30302                           
 30303                           ;stkvar	_mode @ sp[(-56)+54]
 30304  011F76  0EFE               	movlw	-2
 30305  011F78  006F FF8C  F001    	movff	plusw1,btemp
 30306  011F7E  0E67               	movlw	103
 30307  011F80  1801               	xorwf	btemp^0,w,c
 30308  011F82  A4D8               	btfss	status,2,c
 30309  011F84  D015               	goto	l15533
 30310                           
 30311                           ;stkvar	_ne @ sp[(-56)+46]
 30312  011F86  0EF7               	movlw	-9
 30313  011F88  AEE3               	btfss	plusw1,7,c
 30314  011F8A  D012               	goto	l15533
 30315                           
 30316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 30317                           ;stkvar	_t @ sp[(-56)+52]
 30318  011F8C  0EFC               	movlw	-4
 30319  011F8E  50E3               	movf	plusw1,w,c
 30320  011F90  0F01               	addlw	1
 30321  011F92  6E01               	movwf	btemp^0,c
 30322  011F94  0EFC               	movlw	-4
 30323  011F96  0060  F007  FFE3   	movff	btemp,plusw1
 30324  011F9C  6A01               	clrf	btemp^0,c
 30325  011F9E  0EFD               	movlw	-3
 30326  011FA0  50E3               	movf	plusw1,w,c
 30327  011FA2  2001               	addwfc	btemp^0,w,c
 30328  011FA4  6E01               	movwf	btemp^0,c
 30329  011FA6  0EFD               	movlw	-3
 30330  011FA8  0060  F007  FFE3   	movff	btemp,plusw1
 30331                           
 30332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 30333  011FAE  D0AF               	goto	l15561
 30334  011FB0                     l15533:
 30335                           
 30336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 30337                           ;stkvar	_pp @ sp[(-56)+50]
 30338  011FB0  0EFA               	movlw	-6
 30339  011FB2  006F FF8C  F001    	movff	plusw1,btemp
 30340  011FB8  0EFB               	movlw	-5
 30341  011FBA  50E3               	movf	plusw1,w,c
 30342  011FBC  1001               	iorwf	btemp^0,w,c
 30343  011FBE  A4D8               	btfss	status,2,c
 30344  011FC0  D070               	goto	l15553
 30345                           
 30346                           ;stkvar	_ne @ sp[(-56)+46]
 30347  011FC2  0EF7               	movlw	-9
 30348  011FC4  AEE3               	btfss	plusw1,7,c
 30349  011FC6  D06D               	goto	l15553
 30350                           
 30351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 30352                           ;stkvar	_n @ sp[(-56)+32]
 30353  011FC8  0EE8               	movlw	-24
 30354  011FCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 30355  011FD0  0EE9               	movlw	-23
 30356  011FD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 30357  011FD8  0E54               	movlw	low _dbuf
 30358  011FDA  240B               	addwf	(btemp+10)^0,w,c
 30359  011FDC  6ED9               	movwf	fsr2l,c
 30360  011FDE  0E03               	movlw	high _dbuf
 30361  011FE0  200C               	addwfc	(btemp+11)^0,w,c
 30362  011FE2  6EDA               	movwf	fsr2h,c
 30363  011FE4  0E2E               	movlw	46
 30364  011FE6  6EDF               	movwf	indf2,c
 30365                           
 30366                           ;stkvar	_n @ sp[(-56)+32]
 30367  011FE8  0EE8               	movlw	-24
 30368  011FEA  50E3               	movf	plusw1,w,c
 30369  011FEC  0F01               	addlw	1
 30370  011FEE  6E01               	movwf	btemp^0,c
 30371  011FF0  0EE8               	movlw	-24
 30372  011FF2  0060  F007  FFE3   	movff	btemp,plusw1
 30373  011FF8  6A01               	clrf	btemp^0,c
 30374  011FFA  0EE9               	movlw	-23
 30375  011FFC  50E3               	movf	plusw1,w,c
 30376  011FFE  2001               	addwfc	btemp^0,w,c
 30377  012000  6E01               	movwf	btemp^0,c
 30378  012002  0EE9               	movlw	-23
 30379  012004  0060  F007  FFE3   	movff	btemp,plusw1
 30380                           
 30381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 30382                           ;stkvar	_w @ sp[(-56)+38]
 30383  01200A  50E1               	movf	fsr1l,w,c
 30384  01200C  0FEE               	addlw	-18
 30385  01200E  6ED9               	movwf	fsr2l,c
 30386  012010  50E2               	movf	fsr1h,w,c
 30387  012012  6EDA               	movwf	fsr2h,c
 30388  012014  0EFF               	movlw	255
 30389  012016  22DA               	addwfc	fsr2h,f,c
 30390  012018  06DE               	decf	postinc2,f,c
 30391  01201A  0E00               	movlw	0
 30392  01201C  5ADD               	subwfb	postdec2,f,c
 30393                           
 30394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 30395  01201E  0E01               	movlw	1
 30396  012020  6E0B               	movwf	(btemp+10)^0,c
 30397  012022  0E00               	movlw	0
 30398  012024  6E0C               	movwf	(btemp+11)^0,c
 30399                           
 30400                           ;stkvar	_pp @ sp[(-56)+50]
 30401  012026  0EFA               	movlw	-6
 30402  012028  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30403  01202E  0EFB               	movlw	-5
 30404  012030  0060  F033  FFE3   	movff	btemp+11,plusw1
 30405  012036  D035               	goto	l15553
 30406  012038                     l15545:
 30407                           
 30408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 30409                           ;stkvar	_n @ sp[(-56)+32]
 30410  012038  0EE8               	movlw	-24
 30411  01203A  006F FF8C  F00B    	movff	plusw1,btemp+10
 30412  012040  0EE9               	movlw	-23
 30413  012042  006F FF8C  F00C    	movff	plusw1,btemp+11
 30414  012048  0E54               	movlw	low _dbuf
 30415  01204A  240B               	addwf	(btemp+10)^0,w,c
 30416  01204C  6ED9               	movwf	fsr2l,c
 30417  01204E  0E03               	movlw	high _dbuf
 30418  012050  200C               	addwfc	(btemp+11)^0,w,c
 30419  012052  6EDA               	movwf	fsr2h,c
 30420  012054  0E30               	movlw	48
 30421  012056  6EDF               	movwf	indf2,c
 30422                           
 30423                           ;stkvar	_n @ sp[(-56)+32]
 30424  012058  0EE8               	movlw	-24
 30425  01205A  50E3               	movf	plusw1,w,c
 30426  01205C  0F01               	addlw	1
 30427  01205E  6E01               	movwf	btemp^0,c
 30428  012060  0EE8               	movlw	-24
 30429  012062  0060  F007  FFE3   	movff	btemp,plusw1
 30430  012068  6A01               	clrf	btemp^0,c
 30431  01206A  0EE9               	movlw	-23
 30432  01206C  50E3               	movf	plusw1,w,c
 30433  01206E  2001               	addwfc	btemp^0,w,c
 30434  012070  6E01               	movwf	btemp^0,c
 30435  012072  0EE9               	movlw	-23
 30436  012074  0060  F007  FFE3   	movff	btemp,plusw1
 30437                           
 30438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 30439                           ;stkvar	_w @ sp[(-56)+38]
 30440  01207A  50E1               	movf	fsr1l,w,c
 30441  01207C  0FEE               	addlw	-18
 30442  01207E  6ED9               	movwf	fsr2l,c
 30443  012080  50E2               	movf	fsr1h,w,c
 30444  012082  6EDA               	movwf	fsr2h,c
 30445  012084  0EFF               	movlw	255
 30446  012086  22DA               	addwfc	fsr2h,f,c
 30447  012088  06DE               	decf	postinc2,f,c
 30448  01208A  0E00               	movlw	0
 30449  01208C  5ADD               	subwfb	postdec2,f,c
 30450                           
 30451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 30452                           ;stkvar	_t @ sp[(-56)+52]
 30453  01208E  50E1               	movf	fsr1l,w,c
 30454  012090  0FFC               	addlw	-4
 30455  012092  6ED9               	movwf	fsr2l,c
 30456  012094  50E2               	movf	fsr1h,w,c
 30457  012096  6EDA               	movwf	fsr2h,c
 30458  012098  0EFF               	movlw	255
 30459  01209A  22DA               	addwfc	fsr2h,f,c
 30460  01209C  06DE               	decf	postinc2,f,c
 30461  01209E  0E00               	movlw	0
 30462  0120A0  5ADD               	subwfb	postdec2,f,c
 30463  0120A2                     l15553:
 30464                           
 30465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 30466                           ;stkvar	_t @ sp[(-56)+52]
 30467  0120A2  0EFC               	movlw	-4
 30468  0120A4  006F FF8C  F001    	movff	plusw1,btemp
 30469  0120AA  0EFD               	movlw	-3
 30470  0120AC  50E3               	movf	plusw1,w,c
 30471  0120AE  1001               	iorwf	btemp^0,w,c
 30472  0120B0  A4D8               	btfss	status,2,c
 30473  0120B2  D7C2               	goto	l15545
 30474                           
 30475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 30476                           ;stkvar	_n @ sp[(-56)+32]
 30477  0120B4  0EE8               	movlw	-24
 30478  0120B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 30479  0120BC  0EE9               	movlw	-23
 30480  0120BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 30481  0120C4  0E54               	movlw	low _dbuf
 30482  0120C6  240B               	addwf	(btemp+10)^0,w,c
 30483  0120C8  6ED9               	movwf	fsr2l,c
 30484  0120CA  0E03               	movlw	high _dbuf
 30485  0120CC  200C               	addwfc	(btemp+11)^0,w,c
 30486  0120CE  6EDA               	movwf	fsr2h,c
 30487                           
 30488                           ;stkvar	_d @ sp[(-56)+44]
 30489  0120D0  0EF4               	movlw	-12
 30490  0120D2  50E3               	movf	plusw1,w,c
 30491  0120D4  0F30               	addlw	48
 30492  0120D6  6EDF               	movwf	indf2,c
 30493                           
 30494                           ;stkvar	_n @ sp[(-56)+32]
 30495  0120D8  0EE8               	movlw	-24
 30496  0120DA  50E3               	movf	plusw1,w,c
 30497  0120DC  0F01               	addlw	1
 30498  0120DE  6E01               	movwf	btemp^0,c
 30499  0120E0  0EE8               	movlw	-24
 30500  0120E2  0060  F007  FFE3   	movff	btemp,plusw1
 30501  0120E8  6A01               	clrf	btemp^0,c
 30502  0120EA  0EE9               	movlw	-23
 30503  0120EC  50E3               	movf	plusw1,w,c
 30504  0120EE  2001               	addwfc	btemp^0,w,c
 30505  0120F0  6E01               	movwf	btemp^0,c
 30506  0120F2  0EE9               	movlw	-23
 30507  0120F4  0060  F007  FFE3   	movff	btemp,plusw1
 30508                           
 30509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 30510                           ;stkvar	_w @ sp[(-56)+38]
 30511  0120FA  50E1               	movf	fsr1l,w,c
 30512  0120FC  0FEE               	addlw	-18
 30513  0120FE  6ED9               	movwf	fsr2l,c
 30514  012100  50E2               	movf	fsr1h,w,c
 30515  012102  6EDA               	movwf	fsr2h,c
 30516  012104  0EFF               	movlw	255
 30517  012106  22DA               	addwfc	fsr2h,f,c
 30518  012108  06DE               	decf	postinc2,f,c
 30519  01210A  0E00               	movlw	0
 30520  01210C  5ADD               	subwfb	postdec2,f,c
 30521  01210E                     l15561:
 30522                           
 30523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 30524                           ;stkvar	_u @ sp[(-56)+12]
 30525  01210E  0ED4               	movlw	-44
 30526  012110  006F FF8F FFE6     	movff	plusw1,postinc1
 30527  012116  006F FF8F FFE6     	movff	plusw1,postinc1
 30528  01211C  006F FF8F FFE6     	movff	plusw1,postinc1
 30529  012122  006F FF8F FFE6     	movff	plusw1,postinc1
 30530                           
 30531                           ;stkvar	_l @ sp[(-60)+20]
 30532  012128  0ED8               	movlw	-40
 30533  01212A  006F FF8F FFE6     	movff	plusw1,postinc1
 30534  012130  006F FF8F FFE6     	movff	plusw1,postinc1
 30535  012136  006F FF8F FFE6     	movff	plusw1,postinc1
 30536  01213C  006F FF8F FFE6     	movff	plusw1,postinc1
 30537  012142  EC61  F0B1         	call	___flmul	;wreg free
 30538  012146  0060  F007  FFE6   	movff	btemp,postinc1
 30539  01214C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30540  012152  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30541  012158  0060  F013  FFE6   	movff	btemp+3,postinc1
 30542                           
 30543                           ;stkvar	_h @ sp[(-60)+24]
 30544  01215E  0EDC               	movlw	-36
 30545  012160  006F FF8F FFE6     	movff	plusw1,postinc1
 30546  012166  006F FF8F FFE6     	movff	plusw1,postinc1
 30547  01216C  006F FF8F FFE6     	movff	plusw1,postinc1
 30548  012172  006F FF8F FFE6     	movff	plusw1,postinc1
 30549  012178  EC14  F009         	call	___flsub	;wreg free
 30550                           
 30551                           ;stkvar	_h @ sp[(-56)+24]
 30552  01217C  0EE0               	movlw	-32
 30553  01217E  0060  F007  FFE3   	movff	btemp,plusw1
 30554  012184  0EE1               	movlw	-31
 30555  012186  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30556  01218C  0EE2               	movlw	-30
 30557  01218E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30558  012194  0EE3               	movlw	-29
 30559  012196  0060  F013  FFE3   	movff	btemp+3,plusw1
 30560                           
 30561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 30562  01219C  0E00               	movlw	0
 30563  01219E  6EE6               	movwf	postinc1,c
 30564  0121A0  0E00               	movlw	0
 30565  0121A2  6EE6               	movwf	postinc1,c
 30566  0121A4  0E20               	movlw	32
 30567  0121A6  6EE6               	movwf	postinc1,c
 30568  0121A8  0E41               	movlw	65
 30569  0121AA  6EE6               	movwf	postinc1,c
 30570                           
 30571                           ;stkvar	_u @ sp[(-60)+12]
 30572  0121AC  0ED0               	movlw	-48
 30573  0121AE  006F FF8F FFE6     	movff	plusw1,postinc1
 30574  0121B4  006F FF8F FFE6     	movff	plusw1,postinc1
 30575  0121BA  006F FF8F FFE6     	movff	plusw1,postinc1
 30576  0121C0  006F FF8F FFE6     	movff	plusw1,postinc1
 30577  0121C6  ECB2  F0BC         	call	___fldiv	;wreg free
 30578                           
 30579                           ;stkvar	_u @ sp[(-56)+12]
 30580  0121CA  0ED4               	movlw	-44
 30581  0121CC  0060  F007  FFE3   	movff	btemp,plusw1
 30582  0121D2  0ED5               	movlw	-43
 30583  0121D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30584  0121DA  0ED6               	movlw	-42
 30585  0121DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30586  0121E2  0ED7               	movlw	-41
 30587  0121E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 30588                           
 30589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 30590                           ;stkvar	_ne @ sp[(-56)+46]
 30591  0121EA  50E1               	movf	fsr1l,w,c
 30592  0121EC  0FF6               	addlw	-10
 30593  0121EE  6ED9               	movwf	fsr2l,c
 30594  0121F0  50E2               	movf	fsr1h,w,c
 30595  0121F2  6EDA               	movwf	fsr2h,c
 30596  0121F4  0EFF               	movlw	255
 30597  0121F6  22DA               	addwfc	fsr2h,f,c
 30598  0121F8  06DE               	decf	postinc2,f,c
 30599  0121FA  0E00               	movlw	0
 30600  0121FC  5ADD               	subwfb	postdec2,f,c
 30601                           
 30602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 30603                           ;stkvar	_i @ sp[(-56)+36]
 30604  0121FE  0EEC               	movlw	-20
 30605  012200  50E3               	movf	plusw1,w,c
 30606  012202  0F01               	addlw	1
 30607  012204  6E01               	movwf	btemp^0,c
 30608  012206  0EEC               	movlw	-20
 30609  012208  0060  F007  FFE3   	movff	btemp,plusw1
 30610  01220E  6A01               	clrf	btemp^0,c
 30611  012210  0EED               	movlw	-19
 30612  012212  50E3               	movf	plusw1,w,c
 30613  012214  2001               	addwfc	btemp^0,w,c
 30614  012216  6E01               	movwf	btemp^0,c
 30615  012218  0EED               	movlw	-19
 30616  01221A  0060  F007  FFE3   	movff	btemp,plusw1
 30617  012220                     l15569:
 30618                           
 30619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30620                           ;stkvar	_m @ sp[(-56)+48]
 30621                           ;stkvar	_i @ sp[(-56)+36]
 30622  012220  50E1               	movf	fsr1l,w,c
 30623  012222  0FEC               	addlw	-20
 30624  012224  6ED9               	movwf	fsr2l,c
 30625  012226  50E2               	movf	fsr1h,w,c
 30626  012228  6EDA               	movwf	fsr2h,c
 30627  01222A  0EFF               	movlw	255
 30628  01222C  22DA               	addwfc	fsr2h,f,c
 30629  01222E  0EF8               	movlw	-8
 30630  012230  50E3               	movf	plusw1,w,c
 30631  012232  5CDE               	subwf	postinc2,w,c
 30632  012234  50DE               	movf	postinc2,w,c
 30633  012236  0A80               	xorlw	128
 30634  012238  6E01               	movwf	btemp^0,c
 30635  01223A  0EF9               	movlw	-7
 30636  01223C  50E3               	movf	plusw1,w,c
 30637  01223E  0A80               	xorlw	128
 30638  012240  5801               	subwfb	btemp^0,w,c
 30639  012242  B0D8               	btfsc	status,0,c
 30640  012244  D00E               	goto	u14820
 30641                           
 30642                           ;stkvar	_n @ sp[(-56)+32]
 30643  012246  0EE9               	movlw	-23
 30644  012248  BEE3               	btfsc	plusw1,7,c
 30645  01224A  D633               	goto	l15519
 30646  01224C  0EE9               	movlw	-23
 30647  01224E  50E3               	movf	plusw1,w,c
 30648  012250  E108               	bnz	u14820
 30649  012252  0EE8               	movlw	-24
 30650  012254  006F FF8C  F001    	movff	plusw1,btemp
 30651  01225A  0E4B               	movlw	75
 30652  01225C  5E01               	subwf	btemp^0,f,c
 30653  01225E  A0D8               	btfss	status,0,c
 30654  012260  D628               	goto	l15519
 30655  012262                     u14820:
 30656                           
 30657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 30658                           ;stkvar	_pp @ sp[(-56)+50]
 30659  012262  0EFA               	movlw	-6
 30660  012264  006F FF8C  F001    	movff	plusw1,btemp
 30661  01226A  0EFB               	movlw	-5
 30662  01226C  50E3               	movf	plusw1,w,c
 30663  01226E  1001               	iorwf	btemp^0,w,c
 30664  012270  B4D8               	btfsc	status,2,c
 30665  012272  A83E               	btfss	_flags^0,4,c
 30666  012274  D021               	goto	l15581
 30667                           
 30668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 30669                           ;stkvar	_n @ sp[(-56)+32]
 30670  012276  0EE8               	movlw	-24
 30671  012278  006F FF8C  F00B    	movff	plusw1,btemp+10
 30672  01227E  0EE9               	movlw	-23
 30673  012280  006F FF8C  F00C    	movff	plusw1,btemp+11
 30674  012286  0E54               	movlw	low _dbuf
 30675  012288  240B               	addwf	(btemp+10)^0,w,c
 30676  01228A  6ED9               	movwf	fsr2l,c
 30677  01228C  0E03               	movlw	high _dbuf
 30678  01228E  200C               	addwfc	(btemp+11)^0,w,c
 30679  012290  6EDA               	movwf	fsr2h,c
 30680  012292  0E2E               	movlw	46
 30681  012294  6EDF               	movwf	indf2,c
 30682                           
 30683                           ;stkvar	_n @ sp[(-56)+32]
 30684  012296  0EE8               	movlw	-24
 30685  012298  50E3               	movf	plusw1,w,c
 30686  01229A  0F01               	addlw	1
 30687  01229C  6E01               	movwf	btemp^0,c
 30688  01229E  0EE8               	movlw	-24
 30689  0122A0  0060  F007  FFE3   	movff	btemp,plusw1
 30690  0122A6  6A01               	clrf	btemp^0,c
 30691  0122A8  0EE9               	movlw	-23
 30692  0122AA  50E3               	movf	plusw1,w,c
 30693  0122AC  2001               	addwfc	btemp^0,w,c
 30694  0122AE  6E01               	movwf	btemp^0,c
 30695  0122B0  0EE9               	movlw	-23
 30696  0122B2  0060  F007  FFE3   	movff	btemp,plusw1
 30697  0122B8                     l15581:
 30698                           
 30699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 30700                           ;stkvar	_n @ sp[(-56)+32]
 30701  0122B8  0EE8               	movlw	-24
 30702  0122BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 30703  0122C0  0EE9               	movlw	-23
 30704  0122C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 30705  0122C8  0E54               	movlw	low _dbuf
 30706  0122CA  240B               	addwf	(btemp+10)^0,w,c
 30707  0122CC  6ED9               	movwf	fsr2l,c
 30708  0122CE  0E03               	movlw	high _dbuf
 30709  0122D0  200C               	addwfc	(btemp+11)^0,w,c
 30710  0122D2  6EDA               	movwf	fsr2h,c
 30711  0122D4  0E00               	movlw	0
 30712  0122D6  6EDF               	movwf	indf2,c
 30713                           
 30714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 30715                           ;stkvar	_nmode @ sp[(-56)+55]
 30716  0122D8  0EFF               	movlw	-1
 30717  0122DA  006F FF8C  F001    	movff	plusw1,btemp
 30718  0122E0  0E65               	movlw	101
 30719  0122E2  1801               	xorwf	btemp^0,w,c
 30720  0122E4  A4D8               	btfss	status,2,c
 30721  0122E6  EFD5  F08A         	goto	l15385
 30722                           
 30723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 30724  0122EA  0E4F               	movlw	79
 30725  0122EC  6E0B               	movwf	(btemp+10)^0,c
 30726  0122EE  0E00               	movlw	0
 30727  0122F0  6E0C               	movwf	(btemp+11)^0,c
 30728                           
 30729                           ;stkvar	_i @ sp[(-56)+36]
 30730  0122F2  0EEC               	movlw	-20
 30731  0122F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30732  0122FA  0EED               	movlw	-19
 30733  0122FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30734                           
 30735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 30736                           ;stkvar	_i @ sp[(-56)+36]
 30737  012302  0EEC               	movlw	-20
 30738  012304  006F FF8C  F00B    	movff	plusw1,btemp+10
 30739  01230A  0EED               	movlw	-19
 30740  01230C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30741  012312  0E54               	movlw	low _dbuf
 30742  012314  240B               	addwf	(btemp+10)^0,w,c
 30743  012316  6ED9               	movwf	fsr2l,c
 30744  012318  0E03               	movlw	high _dbuf
 30745  01231A  200C               	addwfc	(btemp+11)^0,w,c
 30746  01231C  6EDA               	movwf	fsr2h,c
 30747  01231E  0E00               	movlw	0
 30748  012320  6EDF               	movwf	indf2,c
 30749                           
 30750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 30751                           ;stkvar	_sign @ sp[(-56)+42]
 30752  012322  0EF2               	movlw	-14
 30753  012324  6AE3               	clrf	plusw1,c
 30754  012326  0EF3               	movlw	-13
 30755  012328  6AE3               	clrf	plusw1,c
 30756                           
 30757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 30758                           ;stkvar	_e @ sp[(-56)+34]
 30759  01232A  0EEB               	movlw	-21
 30760  01232C  AEE3               	btfss	plusw1,7,c
 30761  01232E  D012               	goto	l15595
 30762                           
 30763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 30764  012330  0E01               	movlw	1
 30765  012332  6E0B               	movwf	(btemp+10)^0,c
 30766  012334  0E00               	movlw	0
 30767  012336  6E0C               	movwf	(btemp+11)^0,c
 30768                           
 30769                           ;stkvar	_sign @ sp[(-56)+42]
 30770  012338  0EF2               	movlw	-14
 30771  01233A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30772  012340  0EF3               	movlw	-13
 30773  012342  0060  F033  FFE3   	movff	btemp+11,plusw1
 30774                           
 30775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 30776                           ;stkvar	_e @ sp[(-56)+34]
 30777                           ;stkvar	_e @ sp[(-56)+34]
 30778  012348  0EEA               	movlw	-22
 30779  01234A  6CE3               	negf	plusw1,c
 30780  01234C  0EEB               	movlw	-21
 30781  01234E  1EE3               	comf	plusw1,f,c
 30782  012350  B0D8               	btfsc	status,0,c
 30783  012352  2AE3               	incf	plusw1,f,c
 30784  012354                     l15595:
 30785                           
 30786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 30787  012354  0E02               	movlw	2
 30788  012356  6E0B               	movwf	(btemp+10)^0,c
 30789  012358  0E00               	movlw	0
 30790  01235A  6E0C               	movwf	(btemp+11)^0,c
 30791                           
 30792                           ;stkvar	_p @ sp[(-56)+40]
 30793  01235C  0EF0               	movlw	-16
 30794  01235E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30795  012364  0EF1               	movlw	-15
 30796  012366  0060  F033  FFE3   	movff	btemp+11,plusw1
 30797                           
 30798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 30799  01236C  D051               	goto	l15607
 30800  01236E                     l15597:
 30801                           
 30802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 30803                           ;stkvar	_i @ sp[(-56)+36]
 30804  01236E  50E1               	movf	fsr1l,w,c
 30805  012370  0FEC               	addlw	-20
 30806  012372  6ED9               	movwf	fsr2l,c
 30807  012374  50E2               	movf	fsr1h,w,c
 30808  012376  6EDA               	movwf	fsr2h,c
 30809  012378  0EFF               	movlw	255
 30810  01237A  22DA               	addwfc	fsr2h,f,c
 30811  01237C  06DE               	decf	postinc2,f,c
 30812  01237E  0E00               	movlw	0
 30813  012380  5ADD               	subwfb	postdec2,f,c
 30814                           
 30815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 30816                           ;stkvar	_i @ sp[(-56)+36]
 30817  012382  0EEC               	movlw	-20
 30818  012384  006F FF8C  F00B    	movff	plusw1,btemp+10
 30819  01238A  0EED               	movlw	-19
 30820  01238C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30821  012392  0E54               	movlw	low _dbuf
 30822  012394  240B               	addwf	(btemp+10)^0,w,c
 30823  012396  6ED9               	movwf	fsr2l,c
 30824  012398  0E03               	movlw	high _dbuf
 30825  01239A  200C               	addwfc	(btemp+11)^0,w,c
 30826  01239C  6EDA               	movwf	fsr2h,c
 30827  01239E  0E0A               	movlw	10
 30828  0123A0  6EE6               	movwf	postinc1,c
 30829  0123A2  0E00               	movlw	0
 30830  0123A4  6EE6               	movwf	postinc1,c
 30831                           
 30832                           ;stkvar	_e @ sp[(-58)+34]
 30833  0123A6  0EE8               	movlw	-24
 30834  0123A8  006F FF8F FFE6     	movff	plusw1,postinc1
 30835  0123AE  006F FF8F FFE6     	movff	plusw1,postinc1
 30836  0123B4  ECA4  F0F5         	call	___awmod	;wreg free
 30837  0123B8  5001               	movf	btemp^0,w,c
 30838  0123BA  0F30               	addlw	48
 30839  0123BC  6EDF               	movwf	indf2,c
 30840                           
 30841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 30842  0123BE  0E0A               	movlw	10
 30843  0123C0  6EE6               	movwf	postinc1,c
 30844  0123C2  0E00               	movlw	0
 30845  0123C4  6EE6               	movwf	postinc1,c
 30846                           
 30847                           ;stkvar	_e @ sp[(-58)+34]
 30848  0123C6  0EE8               	movlw	-24
 30849  0123C8  006F FF8F FFE6     	movff	plusw1,postinc1
 30850  0123CE  006F FF8F FFE6     	movff	plusw1,postinc1
 30851  0123D4  ECDE  F0F0         	call	___awdiv	;wreg free
 30852                           
 30853                           ;stkvar	_e @ sp[(-56)+34]
 30854  0123D8  0EEA               	movlw	-22
 30855  0123DA  0060  F007  FFE3   	movff	btemp,plusw1
 30856  0123E0  0EEB               	movlw	-21
 30857  0123E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30858                           
 30859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 30860                           ;stkvar	_p @ sp[(-56)+40]
 30861  0123E8  50E1               	movf	fsr1l,w,c
 30862  0123EA  0FF0               	addlw	-16
 30863  0123EC  6ED9               	movwf	fsr2l,c
 30864  0123EE  50E2               	movf	fsr1h,w,c
 30865  0123F0  6EDA               	movwf	fsr2h,c
 30866  0123F2  0EFF               	movlw	255
 30867  0123F4  22DA               	addwfc	fsr2h,f,c
 30868  0123F6  06DE               	decf	postinc2,f,c
 30869  0123F8  0E00               	movlw	0
 30870  0123FA  5ADD               	subwfb	postdec2,f,c
 30871                           
 30872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 30873                           ;stkvar	_w @ sp[(-56)+38]
 30874  0123FC  50E1               	movf	fsr1l,w,c
 30875  0123FE  0FEE               	addlw	-18
 30876  012400  6ED9               	movwf	fsr2l,c
 30877  012402  50E2               	movf	fsr1h,w,c
 30878  012404  6EDA               	movwf	fsr2h,c
 30879  012406  0EFF               	movlw	255
 30880  012408  22DA               	addwfc	fsr2h,f,c
 30881  01240A  06DE               	decf	postinc2,f,c
 30882  01240C  0E00               	movlw	0
 30883  01240E  5ADD               	subwfb	postdec2,f,c
 30884  012410                     l15607:
 30885                           
 30886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 30887                           ;stkvar	_e @ sp[(-56)+34]
 30888  012410  0EEA               	movlw	-22
 30889  012412  006F FF8C  F001    	movff	plusw1,btemp
 30890  012418  0EEB               	movlw	-21
 30891  01241A  50E3               	movf	plusw1,w,c
 30892  01241C  1001               	iorwf	btemp^0,w,c
 30893  01241E  A4D8               	btfss	status,2,c
 30894  012420  D7A6               	goto	l15597
 30895                           
 30896                           ;stkvar	_p @ sp[(-56)+40]
 30897  012422  0EF1               	movlw	-15
 30898  012424  BEE3               	btfsc	plusw1,7,c
 30899  012426  D007               	goto	u14880
 30900  012428  0EF1               	movlw	-15
 30901  01242A  50E3               	movf	plusw1,w,c
 30902  01242C  E1A0               	bnz	l15597
 30903  01242E  0EF0               	movlw	-16
 30904  012430  04E3               	decf	plusw1,w,c
 30905  012432  B0D8               	btfsc	status,0,c
 30906  012434  D79C               	goto	l15597
 30907  012436                     u14880:
 30908                           
 30909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 30910                           ;stkvar	_i @ sp[(-56)+36]
 30911  012436  50E1               	movf	fsr1l,w,c
 30912  012438  0FEC               	addlw	-20
 30913  01243A  6ED9               	movwf	fsr2l,c
 30914  01243C  50E2               	movf	fsr1h,w,c
 30915  01243E  6EDA               	movwf	fsr2h,c
 30916  012440  0EFF               	movlw	255
 30917  012442  22DA               	addwfc	fsr2h,f,c
 30918  012444  06DE               	decf	postinc2,f,c
 30919  012446  0E00               	movlw	0
 30920  012448  5ADD               	subwfb	postdec2,f,c
 30921                           
 30922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 30923                           ;stkvar	_sign @ sp[(-56)+42]
 30924  01244A  0EF2               	movlw	-14
 30925  01244C  006F FF8C  F001    	movff	plusw1,btemp
 30926  012452  0EF3               	movlw	-13
 30927  012454  50E3               	movf	plusw1,w,c
 30928  012456  1001               	iorwf	btemp^0,w,c
 30929  012458  A4D8               	btfss	status,2,c
 30930  01245A  D002               	goto	l15617
 30931  01245C  0E2B               	movlw	43
 30932  01245E  D001               	goto	L32
 30933  012460                     l15617:
 30934  012460  0E2D               	movlw	45
 30935  012462                     L32:
 30936  012462  6E0B               	movwf	(btemp+10)^0,c
 30937  012464  0E00               	movlw	0
 30938  012466  6E0C               	movwf	(btemp+11)^0,c
 30939                           
 30940                           ;stkvar	_efgtoa$6836 @ sp[(-56)+4]
 30941  012468  0ECC               	movlw	-52
 30942  01246A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30943  012470  0ECD               	movlw	-51
 30944  012472  0060  F033  FFE3   	movff	btemp+11,plusw1
 30945                           
 30946                           ;stkvar	_efgtoa$6836 @ sp[(-56)+4]
 30947                           ;stkvar	_i @ sp[(-56)+36]
 30948  012478  0EEC               	movlw	-20
 30949  01247A  006F FF8C  F00B    	movff	plusw1,btemp+10
 30950  012480  0EED               	movlw	-19
 30951  012482  006F FF8C  F00C    	movff	plusw1,btemp+11
 30952  012488  0E54               	movlw	low _dbuf
 30953  01248A  240B               	addwf	(btemp+10)^0,w,c
 30954  01248C  6ED9               	movwf	fsr2l,c
 30955  01248E  0E03               	movlw	high _dbuf
 30956  012490  200C               	addwfc	(btemp+11)^0,w,c
 30957  012492  6EDA               	movwf	fsr2h,c
 30958  012494  0ECC               	movlw	-52
 30959  012496  006F FF8F FFDF     	movff	plusw1,indf2
 30960                           
 30961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 30962                           ;stkvar	_w @ sp[(-56)+38]
 30963  01249C  50E1               	movf	fsr1l,w,c
 30964  01249E  0FEE               	addlw	-18
 30965  0124A0  6ED9               	movwf	fsr2l,c
 30966  0124A2  50E2               	movf	fsr1h,w,c
 30967  0124A4  6EDA               	movwf	fsr2h,c
 30968  0124A6  0EFF               	movlw	255
 30969  0124A8  22DA               	addwfc	fsr2h,f,c
 30970  0124AA  06DE               	decf	postinc2,f,c
 30971  0124AC  0E00               	movlw	0
 30972  0124AE  5ADD               	subwfb	postdec2,f,c
 30973                           
 30974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 30975                           ;stkvar	_i @ sp[(-56)+36]
 30976  0124B0  50E1               	movf	fsr1l,w,c
 30977  0124B2  0FEC               	addlw	-20
 30978  0124B4  6ED9               	movwf	fsr2l,c
 30979  0124B6  50E2               	movf	fsr1h,w,c
 30980  0124B8  6EDA               	movwf	fsr2h,c
 30981  0124BA  0EFF               	movlw	255
 30982  0124BC  22DA               	addwfc	fsr2h,f,c
 30983  0124BE  06DE               	decf	postinc2,f,c
 30984  0124C0  0E00               	movlw	0
 30985  0124C2  5ADD               	subwfb	postdec2,f,c
 30986  0124C4  0EBF               	movlw	191
 30987  0124C6  6E0B               	movwf	(btemp+10)^0,c
 30988  0124C8  0EFF               	movlw	255
 30989  0124CA  6E0C               	movwf	(btemp+11)^0,c
 30990                           
 30991                           ;stkvar	_c @ sp[(-56)+-7]
 30992  0124CC  0EC1               	movlw	-63
 30993  0124CE  50E3               	movf	plusw1,w,c
 30994  0124D0  6E09               	movwf	(btemp+8)^0,c
 30995  0124D2  6A0A               	clrf	(btemp+9)^0,c
 30996  0124D4  500B               	movf	(btemp+10)^0,w,c
 30997  0124D6  2609               	addwf	(btemp+8)^0,f,c
 30998  0124D8  500C               	movf	(btemp+11)^0,w,c
 30999  0124DA  220A               	addwfc	(btemp+9)^0,f,c
 31000  0124DC  500A               	movf	(btemp+9)^0,w,c
 31001  0124DE  E106               	bnz	u14900
 31002  0124E0  0E1A               	movlw	26
 31003  0124E2  5C09               	subwf	(btemp+8)^0,w,c
 31004  0124E4  B0D8               	btfsc	status,0,c
 31005  0124E6  D002               	goto	u14900
 31006  0124E8  0E01               	movlw	1
 31007  0124EA  D001               	goto	u14910
 31008  0124EC                     u14900:
 31009  0124EC  0E00               	movlw	0
 31010  0124EE                     u14910:
 31011  0124EE  6E0B               	movwf	(btemp+10)^0,c
 31012  0124F0  6A0C               	clrf	(btemp+11)^0,c
 31013                           
 31014                           ;stkvar	_efgtoa$6838 @ sp[(-56)+0]
 31015  0124F2  0EC8               	movlw	-56
 31016  0124F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31017  0124FA  0EC9               	movlw	-55
 31018  0124FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31019                           
 31020                           ;stkvar	_efgtoa$6838 @ sp[(-56)+0]
 31021  012502  0EC8               	movlw	-56
 31022  012504  006F FF8C  F001    	movff	plusw1,btemp
 31023  01250A  0EC9               	movlw	-55
 31024  01250C  50E3               	movf	plusw1,w,c
 31025  01250E  1001               	iorwf	btemp^0,w,c
 31026  012510  A4D8               	btfss	status,2,c
 31027  012512  D002               	goto	l15633
 31028  012514  0E65               	movlw	101
 31029  012516  D001               	goto	L33
 31030  012518                     l15633:
 31031  012518  0E45               	movlw	69
 31032  01251A                     L33:
 31033  01251A  6E0B               	movwf	(btemp+10)^0,c
 31034  01251C  0E00               	movlw	0
 31035  01251E  6E0C               	movwf	(btemp+11)^0,c
 31036                           
 31037                           ;stkvar	_efgtoa$6837 @ sp[(-56)+2]
 31038  012520  0ECA               	movlw	-54
 31039  012522  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31040  012528  0ECB               	movlw	-53
 31041  01252A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31042                           
 31043                           ;stkvar	_efgtoa$6837 @ sp[(-56)+2]
 31044                           ;stkvar	_i @ sp[(-56)+36]
 31045  012530  0EEC               	movlw	-20
 31046  012532  006F FF8C  F00B    	movff	plusw1,btemp+10
 31047  012538  0EED               	movlw	-19
 31048  01253A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31049  012540  0E54               	movlw	low _dbuf
 31050  012542  240B               	addwf	(btemp+10)^0,w,c
 31051  012544  6ED9               	movwf	fsr2l,c
 31052  012546  0E03               	movlw	high _dbuf
 31053  012548  200C               	addwfc	(btemp+11)^0,w,c
 31054  01254A  6EDA               	movwf	fsr2h,c
 31055  01254C  0ECA               	movlw	-54
 31056  01254E  006F FF8F FFDF     	movff	plusw1,indf2
 31057                           
 31058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31059                           ;stkvar	_w @ sp[(-56)+38]
 31060  012554  50E1               	movf	fsr1l,w,c
 31061  012556  0FEE               	addlw	-18
 31062  012558  6ED9               	movwf	fsr2l,c
 31063  01255A  50E2               	movf	fsr1h,w,c
 31064  01255C  6EDA               	movwf	fsr2h,c
 31065  01255E  0EFF               	movlw	255
 31066  012560  22DA               	addwfc	fsr2h,f,c
 31067  012562  06DE               	decf	postinc2,f,c
 31068  012564  0E00               	movlw	0
 31069  012566  5ADD               	subwfb	postdec2,f,c
 31070                           
 31071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31072                           ;stkvar	_i @ sp[(-56)+36]
 31073  012568  0EEC               	movlw	-20
 31074  01256A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31075  012570  0EED               	movlw	-19
 31076  012572  006F FF8C  F00C    	movff	plusw1,btemp+11
 31077  012578  0E54               	movlw	low _dbuf
 31078  01257A  240B               	addwf	(btemp+10)^0,w,c
 31079  01257C  6E09               	movwf	(btemp+8)^0,c
 31080  01257E  0E03               	movlw	high _dbuf
 31081  012580  200C               	addwfc	(btemp+11)^0,w,c
 31082  012582  6E0A               	movwf	(btemp+9)^0,c
 31083  012584  0060  F027  FFE6   	movff	btemp+8,postinc1
 31084  01258A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 31085                           
 31086                           ;stkvar	_n @ sp[(-58)+32]
 31087  012590  0E54               	movlw	low _dbuf
 31088  012592  6E0B               	movwf	(btemp+10)^0,c
 31089  012594  0E03               	movlw	high _dbuf
 31090  012596  6E0C               	movwf	(btemp+11)^0,c
 31091  012598  0EE6               	movlw	-26
 31092  01259A  50E3               	movf	plusw1,w,c
 31093  01259C  260B               	addwf	(btemp+10)^0,f,c
 31094  01259E  0EE7               	movlw	-25
 31095  0125A0  50E3               	movf	plusw1,w,c
 31096  0125A2  220C               	addwfc	(btemp+11)^0,f,c
 31097  0125A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 31098  0125AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 31099  0125B0  EC72  F0FB         	call	_strcpy	;wreg free
 31100  0125B4  EFD5  F08A         	goto	l15385
 31101  0125B8                     l2496:
 31102                           
 31103                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31104  0125B8  0EC1               	movlw	193
 31105  0125BA  26E1               	addwf	fsr1l,f,c
 31106  0125BC  0EFF               	movlw	255
 31107  0125BE  22E2               	addwfc	fsr1h,f,c
 31108  0125C0  0012               	return		;funcret
 31109  0125C2                     __end_of_efgtoa:
 31110                           	opt callstack 0
 31111                           
 31112 ;; *************** function _tolower *****************
 31113 ;; Defined at:
 31114 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31115 ;; Parameters:    Size  Location     Type
 31116 ;;  c               2  [STACK] int 
 31117 ;; Auto vars:     Size  Location     Type
 31118 ;;		None
 31119 ;; Return value:  Size  Location     Type
 31120 ;;                  2  [STACK] int 
 31121 ;; Registers used:
 31122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31123 ;; Tracked objects:
 31124 ;;		On entry : 0/0
 31125 ;;		On exit  : 0/0
 31126 ;;		Unchanged: 0/0
 31127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;Total ram usage:        0 bytes
 31133 ;; Hardware stack levels used:    1
 31134 ;; Hardware stack levels required when called:   16
 31135 ;; This function calls:
 31136 ;;		_isupper
 31137 ;; This function is called by:
 31138 ;;		_efgtoa
 31139 ;;		_vfpfcnvrt
 31140 ;; This function uses a reentrant model
 31141 ;;
 31142                           
 31143                           	psect	text101
 31144  000684                     __ptext101:
 31145                           	opt callstack 0
 31146  000684                     _tolower:
 31147                           	opt callstack 0
 31148                           
 31149                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31150  000684  52E6               	movf	postinc1,f,c
 31151  000686  52E6               	movf	postinc1,f,c
 31152                           
 31153                           ;stkvar	_c @ sp[(-2)+-2]
 31154                           
 31155                           ;incstack = 0
 31156 ;; hardware stack exceeded
 31157  000688  0EFC               	movlw	-4
 31158  00068A  50E3               	movf	plusw1,w,c
 31159  00068C  0FBF               	addlw	191
 31160  00068E  6E0B               	movwf	(btemp+10)^0,c
 31161  000690  0EFD               	movlw	-3
 31162  000692  006F FF8C  F00C    	movff	plusw1,btemp+11
 31163  000698  0EFF               	movlw	255
 31164  00069A  220C               	addwfc	(btemp+11)^0,f,c
 31165  00069C  500C               	movf	(btemp+11)^0,w,c
 31166  00069E  E106               	bnz	u7770
 31167  0006A0  0E1A               	movlw	26
 31168  0006A2  5C0B               	subwf	(btemp+10)^0,w,c
 31169  0006A4  B0D8               	btfsc	status,0,c
 31170  0006A6  D002               	goto	u7770
 31171  0006A8  0E01               	movlw	1
 31172  0006AA  D001               	goto	u7780
 31173  0006AC                     u7770:
 31174  0006AC  0E00               	movlw	0
 31175  0006AE                     u7780:
 31176  0006AE  6E0B               	movwf	(btemp+10)^0,c
 31177  0006B0  6A0C               	clrf	(btemp+11)^0,c
 31178                           
 31179                           ;stkvar	_tolower$7792 @ sp[(-2)+0]
 31180  0006B2  0EFE               	movlw	-2
 31181  0006B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31182  0006BA  0EFF               	movlw	-1
 31183  0006BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31184                           
 31185                           ;stkvar	_tolower$7792 @ sp[(-2)+0]
 31186  0006C2  0EFE               	movlw	-2
 31187  0006C4  006F FF8C  F001    	movff	plusw1,btemp
 31188  0006CA  0EFF               	movlw	-1
 31189  0006CC  50E3               	movf	plusw1,w,c
 31190  0006CE  1001               	iorwf	btemp^0,w,c
 31191  0006D0  B4D8               	btfsc	status,2,c
 31192  0006D2  D00D               	goto	l10027
 31193                           
 31194                           ;stkvar	_c @ sp[(-2)+-2]
 31195  0006D4  0EFC               	movlw	-4
 31196  0006D6  006F FF8C  F001    	movff	plusw1,btemp
 31197  0006DC  0EFD               	movlw	-3
 31198  0006DE  006F FF8C  F002    	movff	plusw1,btemp+1
 31199  0006E4  0E20               	movlw	32
 31200  0006E6  1201               	iorwf	btemp^0,f,c
 31201  0006E8  0E00               	movlw	0
 31202  0006EA  1202               	iorwf	(btemp+1)^0,f,c
 31203  0006EC  D008               	goto	l3798
 31204  0006EE                     l10027:
 31205                           
 31206                           ;stkvar	_c @ sp[(-2)+-2]
 31207  0006EE  0EFC               	movlw	-4
 31208  0006F0  006F FF8C  F001    	movff	plusw1,btemp
 31209  0006F6  0EFD               	movlw	-3
 31210  0006F8  006F FF8C  F002    	movff	plusw1,btemp+1
 31211  0006FE                     l3798:
 31212                           
 31213                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31214  0006FE  52E5               	movf	postdec1,f,c
 31215  000700  52E5               	movf	postdec1,f,c
 31216  000702  52E5               	movf	postdec1,f,c
 31217  000704  52E5               	movf	postdec1,f,c
 31218  000706  0012               	return		;funcret
 31219  000708                     __end_of_tolower:
 31220                           	opt callstack 0
 31221                           
 31222 ;; *************** function _isupper *****************
 31223 ;; Defined at:
 31224 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 31225 ;; Parameters:    Size  Location     Type
 31226 ;;  c               2  [STACK] int 
 31227 ;; Auto vars:     Size  Location     Type
 31228 ;;		None
 31229 ;; Return value:  Size  Location     Type
 31230 ;;                  2  [STACK] int 
 31231 ;; Registers used:
 31232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 31233 ;; Tracked objects:
 31234 ;;		On entry : 0/0
 31235 ;;		On exit  : 0/0
 31236 ;;		Unchanged: 0/0
 31237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31242 ;;Total ram usage:        0 bytes
 31243 ;; Hardware stack levels used:    1
 31244 ;; Hardware stack levels required when called:   15
 31245 ;; This function calls:
 31246 ;;		Nothing
 31247 ;; This function is called by:
 31248 ;;		_efgtoa
 31249 ;;		_xtoa
 31250 ;;		_vfpfcnvrt
 31251 ;;		_tolower
 31252 ;; This function uses a reentrant model
 31253 ;;
 31254                           
 31255                           	psect	text102
 31256  0016F0                     __ptext102:
 31257                           	opt callstack 0
 31258  0016F0                     _isupper:
 31259                           	opt callstack 0
 31260                           
 31261                           ;stkvar	_c @ sp[(0)+-2]
 31262                           
 31263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31264                           ;incstack = 0
 31265 ;; hardware stack exceeded
 31266  0016F0  0EFE               	movlw	-2
 31267  0016F2  50E3               	movf	plusw1,w,c
 31268  0016F4  0FBF               	addlw	191
 31269  0016F6  6E0B               	movwf	(btemp+10)^0,c
 31270  0016F8  0EFF               	movlw	-1
 31271  0016FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 31272  001700  0EFF               	movlw	255
 31273  001702  220C               	addwfc	(btemp+11)^0,f,c
 31274  001704  500C               	movf	(btemp+11)^0,w,c
 31275  001706  E106               	bnz	u7110
 31276  001708  0E1A               	movlw	26
 31277  00170A  5C0B               	subwf	(btemp+10)^0,w,c
 31278  00170C  B0D8               	btfsc	status,0,c
 31279  00170E  D002               	goto	u7110
 31280  001710  0E01               	movlw	1
 31281  001712  D001               	goto	u7120
 31282  001714                     u7110:
 31283  001714  0E00               	movlw	0
 31284  001716                     u7120:
 31285  001716  6E01               	movwf	btemp^0,c
 31286  001718  6A02               	clrf	(btemp+1)^0,c
 31287                           
 31288                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31289  00171A  52E5               	movf	postdec1,f,c
 31290  00171C  52E5               	movf	postdec1,f,c
 31291  00171E  0012               	return		;funcret
 31292  001720                     __end_of_isupper:
 31293                           	opt callstack 0
 31294                           
 31295 ;; *************** function _strcpy *****************
 31296 ;; Defined at:
 31297 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;  dest            2  [STACK] PTR unsigned char 
 31300 ;;		 -> dbuf(80), 
 31301 ;;  src             2  [STACK] PTR const unsigned char 
 31302 ;;		 -> STR_93(4), STR_92(4), STR_89(4), STR_88(4), 
 31303 ;;		 -> dbuf(80), 
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;  d               2  [STACK] PTR unsigned char 
 31306 ;;		 -> dbuf(80), 
 31307 ;;  s               2  [STACK] PTR const unsigned char 
 31308 ;;		 -> STR_93(4), STR_92(4), STR_89(4), STR_88(4), 
 31309 ;;		 -> dbuf(80), 
 31310 ;; Return value:  Size  Location     Type
 31311 ;;                  2  [STACK] PTR unsigned char 
 31312 ;; Registers used:
 31313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 31314 ;; Tracked objects:
 31315 ;;		On entry : 0/0
 31316 ;;		On exit  : 0/0
 31317 ;;		Unchanged: 0/0
 31318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;Total ram usage:        0 bytes
 31324 ;; Hardware stack levels used:    1
 31325 ;; Hardware stack levels required when called:   15
 31326 ;; This function calls:
 31327 ;;		Nothing
 31328 ;; This function is called by:
 31329 ;;		_efgtoa
 31330 ;; This function uses a reentrant model
 31331 ;;
 31332                           
 31333                           	psect	text103
 31334  01F6E4                     __ptext103:
 31335                           	opt callstack 0
 31336  01F6E4                     _strcpy:
 31337                           	opt callstack 0
 31338                           
 31339                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31340  01F6E4  52E6               	movf	postinc1,f,c
 31341  01F6E6  52E6               	movf	postinc1,f,c
 31342  01F6E8  52E6               	movf	postinc1,f,c
 31343  01F6EA  52E6               	movf	postinc1,f,c
 31344                           
 31345                           ;stkvar	_src @ sp[(-4)+-4]
 31346                           
 31347                           ;incstack = 0
 31348 ;; hardware stack exceeded
 31349  01F6EC  0EF8               	movlw	-8
 31350  01F6EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 31351  01F6F4  0EF9               	movlw	-7
 31352  01F6F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 31353                           
 31354                           ;stkvar	_s @ sp[(-4)+2]
 31355  01F6FC  0EFF               	movlw	-1
 31356  01F6FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 31357  01F704  0EFE               	movlw	-2
 31358  01F706  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31359                           
 31360                           ;stkvar	_dest @ sp[(-4)+-2]
 31361  01F70C  0EFA               	movlw	-6
 31362  01F70E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31363  01F714  0EFB               	movlw	-5
 31364  01F716  006F FF8C  F00C    	movff	plusw1,btemp+11
 31365                           
 31366                           ;stkvar	_d @ sp[(-4)+0]
 31367  01F71C  0EFD               	movlw	-3
 31368  01F71E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31369  01F724  0EFC               	movlw	-4
 31370  01F726  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31371  01F72C                     l15247:
 31372                           
 31373                           ;stkvar	_s @ sp[(-4)+2]
 31374  01F72C  50E1               	movf	fsr1l,w,c
 31375  01F72E  0FFE               	addlw	-2
 31376  01F730  6ED9               	movwf	fsr2l,c
 31377  01F732  50E2               	movf	fsr1h,w,c
 31378  01F734  6EDA               	movwf	fsr2h,c
 31379  01F736  0EFF               	movlw	255
 31380  01F738  22DA               	addwfc	fsr2h,f,c
 31381  01F73A  006F FF7C  F00B    	movff	indf2,btemp+10
 31382  01F740  0E01               	movlw	1
 31383  01F742  26DE               	addwf	postinc2,f,c
 31384  01F744  006F FF7C  F00C    	movff	indf2,btemp+11
 31385  01F74A  0E00               	movlw	0
 31386  01F74C  22DD               	addwfc	postdec2,f,c
 31387  01F74E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 31388  01F754  0060  F033  FFF7   	movff	btemp+11,tblptrh
 31389  01F75A  0E00               	movlw	low (__mediumconst shr (0+16))
 31390  01F75C  6EF8               	movwf	tblptru,c
 31391                           
 31392                           ;stkvar	_d @ sp[(-4)+0]
 31393  01F75E  50E1               	movf	fsr1l,w,c
 31394  01F760  0FFC               	addlw	-4
 31395  01F762  6ED9               	movwf	fsr2l,c
 31396  01F764  50E2               	movf	fsr1h,w,c
 31397  01F766  6EDA               	movwf	fsr2h,c
 31398  01F768  0EFF               	movlw	255
 31399  01F76A  22DA               	addwfc	fsr2h,f,c
 31400  01F76C  006F FF7C  F00B    	movff	indf2,btemp+10
 31401  01F772  0E01               	movlw	1
 31402  01F774  26DE               	addwf	postinc2,f,c
 31403  01F776  006F FF7C  F00C    	movff	indf2,btemp+11
 31404  01F77C  0E00               	movlw	0
 31405  01F77E  22DD               	addwfc	postdec2,f,c
 31406  01F780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 31407  01F786  0060  F033  FFDA   	movff	btemp+11,fsr2h
 31408  01F78C  0E1F               	movlw	(high __ramtop+-1)
 31409  01F78E  64F7               	cpfsgt	tblptrh,c
 31410  01F790  D003               	bra	u14207
 31411  01F792  0008               	tblrd		*
 31412  01F794  50F5               	movf	tablat,w,c
 31413  01F796  D007               	bra	u14200
 31414  01F798                     u14207:
 31415  01F798  006F FFDB FFE9     	movff	tblptrl,fsr0l
 31416  01F79E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 31417  01F7A4  50EF               	movf	indf0,w,c
 31418  01F7A6                     u14200:
 31419  01F7A6  6EDF               	movwf	indf2,c
 31420  01F7A8  50DF               	movf	indf2,w,c
 31421  01F7AA  A4D8               	btfss	status,2,c
 31422  01F7AC  D7BF               	goto	l15247
 31423                           
 31424                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 31425  01F7AE  0EF8               	movlw	248
 31426  01F7B0  26E1               	addwf	fsr1l,f,c
 31427  01F7B2  0EFF               	movlw	255
 31428  01F7B4  22E2               	addwfc	fsr1h,f,c
 31429  01F7B6  0012               	return		;funcret
 31430  01F7B8                     __end_of_strcpy:
 31431                           	opt callstack 0
 31432                           
 31433 ;; *************** function _floorf *****************
 31434 ;; Defined at:
 31435 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 31436 ;; Parameters:    Size  Location     Type
 31437 ;;  x               4  [STACK] float 
 31438 ;; Auto vars:     Size  Location     Type
 31439 ;;  u               4  [STACK] struct .
 31440 ;;  m               4  [STACK] unsigned long 
 31441 ;;  e               2  [STACK] int 
 31442 ;; Return value:  Size  Location     Type
 31443 ;;                  4  [STACK] float 
 31444 ;; Registers used:
 31445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31446 ;; Tracked objects:
 31447 ;;		On entry : 0/0
 31448 ;;		On exit  : 0/0
 31449 ;;		Unchanged: 0/0
 31450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31455 ;;Total ram usage:        0 bytes
 31456 ;; Hardware stack levels used:    1
 31457 ;; Hardware stack levels required when called:   15
 31458 ;; This function calls:
 31459 ;;		Nothing
 31460 ;; This function is called by:
 31461 ;;		_efgtoa
 31462 ;; This function uses a reentrant model
 31463 ;;
 31464                           
 31465                           	psect	text104
 31466  0199B8                     __ptext104:
 31467                           	opt callstack 0
 31468  0199B8                     _floorf:
 31469                           	opt callstack 0
 31470                           
 31471                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31472  0199B8  0E0A               	movlw	10
 31473  0199BA  26E1               	addwf	fsr1l,f,c
 31474  0199BC  0E00               	movlw	0
 31475  0199BE  22E2               	addwfc	fsr1h,f,c
 31476                           
 31477                           ;incstack = 0
 31478 ;; hardware stack exceeded
 31479  0199C0  0060  F1F8  F009   	movff	floorf@F524,btemp+8
 31480  0199C6  0060  F1FC  F00A   	movff	floorf@F524+1,btemp+9
 31481  0199CC  0060  F200  F00B   	movff	floorf@F524+2,btemp+10
 31482  0199D2  0060  F204  F00C   	movff	floorf@F524+3,btemp+11
 31483                           
 31484                           ;stkvar	_u @ sp[(-10)+0]
 31485  0199D8  0EF6               	movlw	-10
 31486  0199DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 31487  0199E0  0EF7               	movlw	-9
 31488  0199E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31489  0199E8  0EF8               	movlw	-8
 31490  0199EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31491  0199F0  0EF9               	movlw	-7
 31492  0199F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31493                           
 31494                           ;stkvar	_x @ sp[(-10)+-4]
 31495  0199F8  0EF2               	movlw	-14
 31496  0199FA  006F FF8C  F009    	movff	plusw1,btemp+8
 31497  019A00  0EF3               	movlw	-13
 31498  019A02  006F FF8C  F00A    	movff	plusw1,btemp+9
 31499  019A08  0EF4               	movlw	-12
 31500  019A0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31501  019A10  0EF5               	movlw	-11
 31502  019A12  006F FF8C  F00C    	movff	plusw1,btemp+11
 31503                           
 31504                           ;stkvar	_u @ sp[(-10)+0]
 31505  019A18  0EF6               	movlw	-10
 31506  019A1A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31507  019A20  0EF7               	movlw	-9
 31508  019A22  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31509  019A28  0EF8               	movlw	-8
 31510  019A2A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31511  019A30  0EF9               	movlw	-7
 31512  019A32  0060  F033  FFE3   	movff	btemp+11,plusw1
 31513  019A38  0E81               	movlw	129
 31514  019A3A  6E0B               	movwf	(btemp+10)^0,c
 31515  019A3C  0EFF               	movlw	255
 31516  019A3E  6E0C               	movwf	(btemp+11)^0,c
 31517                           
 31518                           ;stkvar	_u @ sp[(-10)+0]
 31519  019A40  0EF6               	movlw	-10
 31520  019A42  006F FF8C  F005    	movff	plusw1,btemp+4
 31521  019A48  0EF7               	movlw	-9
 31522  019A4A  006F FF8C  F006    	movff	plusw1,btemp+5
 31523  019A50  0EF8               	movlw	-8
 31524  019A52  006F FF8C  F007    	movff	plusw1,btemp+6
 31525  019A58  0EF9               	movlw	-7
 31526  019A5A  006F FF8C  F008    	movff	plusw1,btemp+7
 31527  019A60  0E18               	movlw	24
 31528  019A62  D005               	goto	u7800
 31529  019A64                     u7805:
 31530  019A64  90D8               	bcf	status,0,c
 31531  019A66  3208               	rrcf	(btemp+7)^0,f,c
 31532  019A68  3207               	rrcf	(btemp+6)^0,f,c
 31533  019A6A  3206               	rrcf	(btemp+5)^0,f,c
 31534  019A6C  3205               	rrcf	(btemp+4)^0,f,c
 31535  019A6E                     u7800:
 31536  019A6E  2EE8               	decfsz	wreg,f,c
 31537  019A70  D7F9               	goto	u7805
 31538  019A72  0060  F014  F009   	movff	btemp+4,btemp+8
 31539  019A78  0060  F018  F00A   	movff	btemp+5,btemp+9
 31540  019A7E  0EFF               	movlw	255
 31541  019A80  1609               	andwf	(btemp+8)^0,f,c
 31542  019A82  0E00               	movlw	0
 31543  019A84  160A               	andwf	(btemp+9)^0,f,c
 31544  019A86  500B               	movf	(btemp+10)^0,w,c
 31545  019A88  2609               	addwf	(btemp+8)^0,f,c
 31546  019A8A  500C               	movf	(btemp+11)^0,w,c
 31547  019A8C  220A               	addwfc	(btemp+9)^0,f,c
 31548                           
 31549                           ;stkvar	_e @ sp[(-10)+8]
 31550  019A8E  0EFE               	movlw	-2
 31551  019A90  0060  F027  FFE3   	movff	btemp+8,plusw1
 31552  019A96  0EFF               	movlw	-1
 31553  019A98  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31554                           
 31555                           ;stkvar	_e @ sp[(-10)+8]
 31556  019A9E  0EFF               	movlw	-1
 31557  019AA0  BEE3               	btfsc	plusw1,7,c
 31558  019AA2  D019               	goto	l10041
 31559  019AA4  0EFF               	movlw	-1
 31560  019AA6  50E3               	movf	plusw1,w,c
 31561  019AA8  E108               	bnz	u7810
 31562  019AAA  0EFE               	movlw	-2
 31563  019AAC  006F FF8C  F001    	movff	plusw1,btemp
 31564  019AB2  0E17               	movlw	23
 31565  019AB4  5E01               	subwf	btemp^0,f,c
 31566  019AB6  A0D8               	btfss	status,0,c
 31567  019AB8  D00E               	goto	l10041
 31568  019ABA                     u7810:
 31569                           
 31570                           ;stkvar	_x @ sp[(-10)+-4]
 31571  019ABA  0EF2               	movlw	-14
 31572  019ABC  006F FF8C  F001    	movff	plusw1,btemp
 31573  019AC2  0EF3               	movlw	-13
 31574  019AC4  006F FF8C  F002    	movff	plusw1,btemp+1
 31575  019ACA  0EF4               	movlw	-12
 31576  019ACC  006F FF8C  F003    	movff	plusw1,btemp+2
 31577  019AD2  0EF5               	movlw	-11
 31578  019AD4  D11F               	goto	L34
 31579  019AD6                     l10041:
 31580                           
 31581                           ;stkvar	_e @ sp[(-10)+8]
 31582  019AD6  0EFF               	movlw	-1
 31583  019AD8  BEE3               	btfsc	plusw1,7,c
 31584  019ADA  D0B4               	goto	l10057
 31585                           
 31586                           ;stkvar	_e @ sp[(-10)+8]
 31587  019ADC  0EFE               	movlw	-2
 31588  019ADE  006F FF8C  F00C    	movff	plusw1,btemp+11
 31589  019AE4  0EFF               	movlw	255
 31590  019AE6  6E05               	movwf	(btemp+4)^0,c
 31591  019AE8  0EFF               	movlw	255
 31592  019AEA  6E06               	movwf	(btemp+5)^0,c
 31593  019AEC  0E7F               	movlw	127
 31594  019AEE  6E07               	movwf	(btemp+6)^0,c
 31595  019AF0  0E00               	movlw	0
 31596  019AF2  6E08               	movwf	(btemp+7)^0,c
 31597  019AF4                     u7835:
 31598  019AF4  660C               	tstfsz	(btemp+11)^0,c
 31599  019AF6  D001               	goto	u7836
 31600  019AF8  D007               	goto	u7837
 31601  019AFA                     u7836:
 31602  019AFA  3408               	rlcf	(btemp+7)^0,w,c
 31603  019AFC  3208               	rrcf	(btemp+7)^0,f,c
 31604  019AFE  3207               	rrcf	(btemp+6)^0,f,c
 31605  019B00  3206               	rrcf	(btemp+5)^0,f,c
 31606  019B02  3205               	rrcf	(btemp+4)^0,f,c
 31607  019B04  2E0C               	decfsz	(btemp+11)^0,f,c
 31608  019B06  D7F6               	goto	u7835
 31609  019B08                     u7837:
 31610                           
 31611                           ;stkvar	_m @ sp[(-10)+4]
 31612  019B08  0EFA               	movlw	-6
 31613  019B0A  0060  F017  FFE3   	movff	btemp+4,plusw1
 31614  019B10  0EFB               	movlw	-5
 31615  019B12  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31616  019B18  0EFC               	movlw	-4
 31617  019B1A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31618  019B20  0EFD               	movlw	-3
 31619  019B22  0060  F023  FFE3   	movff	btemp+7,plusw1
 31620                           
 31621                           ;stkvar	_m @ sp[(-10)+4]
 31622                           ;stkvar	_u @ sp[(-10)+0]
 31623  019B28  0EF6               	movlw	-10
 31624  019B2A  006F FF8C  F009    	movff	plusw1,btemp+8
 31625  019B30  0EF7               	movlw	-9
 31626  019B32  006F FF8C  F00A    	movff	plusw1,btemp+9
 31627  019B38  0EF8               	movlw	-8
 31628  019B3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31629  019B40  0EF9               	movlw	-7
 31630  019B42  006F FF8C  F00C    	movff	plusw1,btemp+11
 31631  019B48  0EFA               	movlw	-6
 31632  019B4A  50E3               	movf	plusw1,w,c
 31633  019B4C  1609               	andwf	(btemp+8)^0,f,c
 31634  019B4E  0EFB               	movlw	-5
 31635  019B50  50E3               	movf	plusw1,w,c
 31636  019B52  160A               	andwf	(btemp+9)^0,f,c
 31637  019B54  0EFC               	movlw	-4
 31638  019B56  50E3               	movf	plusw1,w,c
 31639  019B58  160B               	andwf	(btemp+10)^0,f,c
 31640  019B5A  0EFD               	movlw	-3
 31641  019B5C  50E3               	movf	plusw1,w,c
 31642  019B5E  160C               	andwf	(btemp+11)^0,f,c
 31643  019B60  5009               	movf	(btemp+8)^0,w,c
 31644  019B62  100A               	iorwf	(btemp+9)^0,w,c
 31645  019B64  100B               	iorwf	(btemp+10)^0,w,c
 31646  019B66  100C               	iorwf	(btemp+11)^0,w,c
 31647  019B68  B4D8               	btfsc	status,2,c
 31648  019B6A  D7A7               	goto	u7810
 31649                           
 31650                           ;stkvar	_u @ sp[(-10)+0]
 31651  019B6C  0EF6               	movlw	-10
 31652  019B6E  006F FF8C  F009    	movff	plusw1,btemp+8
 31653  019B74  0EF7               	movlw	-9
 31654  019B76  006F FF8C  F00A    	movff	plusw1,btemp+9
 31655  019B7C  0EF8               	movlw	-8
 31656  019B7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31657  019B84  0EF9               	movlw	-7
 31658  019B86  006F FF8C  F00C    	movff	plusw1,btemp+11
 31659  019B8C  0E20               	movlw	32
 31660  019B8E  D005               	goto	u7850
 31661  019B90                     u7855:
 31662  019B90  90D8               	bcf	status,0,c
 31663  019B92  320C               	rrcf	(btemp+11)^0,f,c
 31664  019B94  320B               	rrcf	(btemp+10)^0,f,c
 31665  019B96  320A               	rrcf	(btemp+9)^0,f,c
 31666  019B98  3209               	rrcf	(btemp+8)^0,f,c
 31667  019B9A                     u7850:
 31668  019B9A  2EE8               	decfsz	wreg,f,c
 31669  019B9C  D7F9               	goto	u7855
 31670  019B9E  5009               	movf	(btemp+8)^0,w,c
 31671  019BA0  B4D8               	btfsc	status,2,c
 31672  019BA2  D028               	goto	l10055
 31673                           
 31674                           ;stkvar	_m @ sp[(-10)+4]
 31675                           ;stkvar	_u @ sp[(-10)+0]
 31676  019BA4  0EF6               	movlw	-10
 31677  019BA6  50E3               	movf	plusw1,w,c
 31678  019BA8  6E01               	movwf	btemp^0,c
 31679  019BAA  0EFA               	movlw	-6
 31680  019BAC  50E3               	movf	plusw1,w,c
 31681  019BAE  2601               	addwf	btemp^0,f,c
 31682  019BB0  0EF6               	movlw	-10
 31683  019BB2  0060  F007  FFE3   	movff	btemp,plusw1
 31684  019BB8  0EF7               	movlw	-9
 31685  019BBA  50E3               	movf	plusw1,w,c
 31686  019BBC  6E01               	movwf	btemp^0,c
 31687  019BBE  0EFB               	movlw	-5
 31688  019BC0  50E3               	movf	plusw1,w,c
 31689  019BC2  2201               	addwfc	btemp^0,f,c
 31690  019BC4  0EF7               	movlw	-9
 31691  019BC6  0060  F007  FFE3   	movff	btemp,plusw1
 31692  019BCC  0EF8               	movlw	-8
 31693  019BCE  50E3               	movf	plusw1,w,c
 31694  019BD0  6E01               	movwf	btemp^0,c
 31695  019BD2  0EFC               	movlw	-4
 31696  019BD4  50E3               	movf	plusw1,w,c
 31697  019BD6  2201               	addwfc	btemp^0,f,c
 31698  019BD8  0EF8               	movlw	-8
 31699  019BDA  0060  F007  FFE3   	movff	btemp,plusw1
 31700  019BE0  0EF9               	movlw	-7
 31701  019BE2  50E3               	movf	plusw1,w,c
 31702  019BE4  6E01               	movwf	btemp^0,c
 31703  019BE6  0EFD               	movlw	-3
 31704  019BE8  50E3               	movf	plusw1,w,c
 31705  019BEA  2201               	addwfc	btemp^0,f,c
 31706  019BEC  0EF9               	movlw	-7
 31707  019BEE  0060  F007  FFE3   	movff	btemp,plusw1
 31708  019BF4                     l10055:
 31709                           
 31710                           ;stkvar	_m @ sp[(-10)+4]
 31711  019BF4  0EFA               	movlw	-6
 31712  019BF6  006F FF8C  F009    	movff	plusw1,btemp+8
 31713  019BFC  0EFB               	movlw	-5
 31714  019BFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 31715  019C04  0EFC               	movlw	-4
 31716  019C06  006F FF8C  F00B    	movff	plusw1,btemp+10
 31717  019C0C  0EFD               	movlw	-3
 31718  019C0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31719  019C14  1C09               	comf	(btemp+8)^0,w,c
 31720  019C16  6E05               	movwf	(btemp+4)^0,c
 31721  019C18  1C0A               	comf	(btemp+9)^0,w,c
 31722  019C1A  6E06               	movwf	(btemp+5)^0,c
 31723  019C1C  1C0B               	comf	(btemp+10)^0,w,c
 31724  019C1E  6E07               	movwf	(btemp+6)^0,c
 31725  019C20  1C0C               	comf	(btemp+11)^0,w,c
 31726  019C22  6E08               	movwf	(btemp+7)^0,c
 31727                           
 31728                           ;stkvar	_u @ sp[(-10)+0]
 31729  019C24  50E1               	movf	fsr1l,w,c
 31730  019C26  0FF6               	addlw	-10
 31731  019C28  6ED9               	movwf	fsr2l,c
 31732  019C2A  50E2               	movf	fsr1h,w,c
 31733  019C2C  6EDA               	movwf	fsr2h,c
 31734  019C2E  0EFF               	movlw	255
 31735  019C30  22DA               	addwfc	fsr2h,f,c
 31736  019C32  5005               	movf	(btemp+4)^0,w,c
 31737  019C34  16DE               	andwf	postinc2,f,c
 31738  019C36  5006               	movf	(btemp+5)^0,w,c
 31739  019C38  16DE               	andwf	postinc2,f,c
 31740  019C3A  5007               	movf	(btemp+6)^0,w,c
 31741  019C3C  16DE               	andwf	postinc2,f,c
 31742  019C3E  5008               	movf	(btemp+7)^0,w,c
 31743  019C40  16DE               	andwf	postinc2,f,c
 31744  019C42  D05B               	goto	l10065
 31745  019C44                     l10057:
 31746                           
 31747                           ;stkvar	_u @ sp[(-10)+0]
 31748  019C44  0EF6               	movlw	-10
 31749  019C46  006F FF8C  F009    	movff	plusw1,btemp+8
 31750  019C4C  0EF7               	movlw	-9
 31751  019C4E  006F FF8C  F00A    	movff	plusw1,btemp+9
 31752  019C54  0EF8               	movlw	-8
 31753  019C56  006F FF8C  F00B    	movff	plusw1,btemp+10
 31754  019C5C  0EF9               	movlw	-7
 31755  019C5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31756  019C64  0E20               	movlw	32
 31757  019C66  D005               	goto	u7870
 31758  019C68                     u7875:
 31759  019C68  90D8               	bcf	status,0,c
 31760  019C6A  320C               	rrcf	(btemp+11)^0,f,c
 31761  019C6C  320B               	rrcf	(btemp+10)^0,f,c
 31762  019C6E  320A               	rrcf	(btemp+9)^0,f,c
 31763  019C70  3209               	rrcf	(btemp+8)^0,f,c
 31764  019C72                     u7870:
 31765  019C72  2EE8               	decfsz	wreg,f,c
 31766  019C74  D7F9               	goto	u7875
 31767  019C76  6609               	tstfsz	(btemp+8)^0,c
 31768  019C78  D009               	goto	l10061
 31769                           
 31770                           ;stkvar	_u @ sp[(-10)+0]
 31771  019C7A  0EF6               	movlw	-10
 31772  019C7C  6AE3               	clrf	plusw1,c
 31773  019C7E  0EF7               	movlw	-9
 31774  019C80  6AE3               	clrf	plusw1,c
 31775  019C82  0EF8               	movlw	-8
 31776  019C84  6AE3               	clrf	plusw1,c
 31777  019C86  0EF9               	movlw	-7
 31778  019C88  6AE3               	clrf	plusw1,c
 31779  019C8A  D037               	goto	l10065
 31780  019C8C                     l10061:
 31781                           
 31782                           ;stkvar	_u @ sp[(-10)+0]
 31783  019C8C  0EF6               	movlw	-10
 31784  019C8E  006F FF8C  F009    	movff	plusw1,btemp+8
 31785  019C94  0EF7               	movlw	-9
 31786  019C96  006F FF8C  F00A    	movff	plusw1,btemp+9
 31787  019C9C  0EF8               	movlw	-8
 31788  019C9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31789  019CA4  0EF9               	movlw	-7
 31790  019CA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 31791  019CAC  90D8               	bcf	status,0,c
 31792  019CAE  3409               	rlcf	(btemp+8)^0,w,c
 31793  019CB0  6E05               	movwf	(btemp+4)^0,c
 31794  019CB2  340A               	rlcf	(btemp+9)^0,w,c
 31795  019CB4  6E06               	movwf	(btemp+5)^0,c
 31796  019CB6  340B               	rlcf	(btemp+10)^0,w,c
 31797  019CB8  6E07               	movwf	(btemp+6)^0,c
 31798  019CBA  340C               	rlcf	(btemp+11)^0,w,c
 31799  019CBC  6E08               	movwf	(btemp+7)^0,c
 31800  019CBE  5005               	movf	(btemp+4)^0,w,c
 31801  019CC0  1006               	iorwf	(btemp+5)^0,w,c
 31802  019CC2  1007               	iorwf	(btemp+6)^0,w,c
 31803  019CC4  1008               	iorwf	(btemp+7)^0,w,c
 31804  019CC6  B4D8               	btfsc	status,2,c
 31805  019CC8  D018               	goto	l10065
 31806  019CCA  0E00               	movlw	0
 31807  019CCC  6E09               	movwf	(btemp+8)^0,c
 31808  019CCE  0E00               	movlw	0
 31809  019CD0  6E0A               	movwf	(btemp+9)^0,c
 31810  019CD2  0E80               	movlw	128
 31811  019CD4  6E0B               	movwf	(btemp+10)^0,c
 31812  019CD6  0EBF               	movlw	191
 31813  019CD8  6E0C               	movwf	(btemp+11)^0,c
 31814                           
 31815                           ;stkvar	_u @ sp[(-10)+0]
 31816  019CDA  0EF6               	movlw	-10
 31817  019CDC  0060  F027  FFE3   	movff	btemp+8,plusw1
 31818  019CE2  0EF7               	movlw	-9
 31819  019CE4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31820  019CEA  0EF8               	movlw	-8
 31821  019CEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31822  019CF2  0EF9               	movlw	-7
 31823  019CF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31824  019CFA                     l10065:
 31825                           
 31826                           ;stkvar	_u @ sp[(-10)+0]
 31827  019CFA  0EF6               	movlw	-10
 31828  019CFC  006F FF8C  F001    	movff	plusw1,btemp
 31829  019D02  0EF7               	movlw	-9
 31830  019D04  006F FF8C  F002    	movff	plusw1,btemp+1
 31831  019D0A  0EF8               	movlw	-8
 31832  019D0C  006F FF8C  F003    	movff	plusw1,btemp+2
 31833  019D12  0EF9               	movlw	-7
 31834  019D14                     L34:
 31835  019D14  006F FF8C  F004    	movff	plusw1,btemp+3
 31836                           
 31837                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 31838  019D1A  0EF2               	movlw	242
 31839  019D1C  26E1               	addwf	fsr1l,f,c
 31840  019D1E  0EFF               	movlw	255
 31841  019D20  22E2               	addwfc	fsr1h,f,c
 31842  019D22  0012               	return		;funcret
 31843  019D24                     __end_of_floorf:
 31844                           	opt callstack 0
 31845                           
 31846 ;; *************** function ___fpclassifyf *****************
 31847 ;; Defined at:
 31848 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;  x               4  [STACK] float 
 31851 ;; Auto vars:     Size  Location     Type
 31852 ;;  u               4  [STACK] struct .
 31853 ;;  e               2  [STACK] int 
 31854 ;; Return value:  Size  Location     Type
 31855 ;;                  2  [STACK] int 
 31856 ;; Registers used:
 31857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 31858 ;; Tracked objects:
 31859 ;;		On entry : 0/0
 31860 ;;		On exit  : 0/0
 31861 ;;		Unchanged: 0/0
 31862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;Total ram usage:        0 bytes
 31868 ;; Hardware stack levels used:    1
 31869 ;; Hardware stack levels required when called:   15
 31870 ;; This function calls:
 31871 ;;		Nothing
 31872 ;; This function is called by:
 31873 ;;		_efgtoa
 31874 ;; This function uses a reentrant model
 31875 ;;
 31876                           
 31877                           	psect	text105
 31878  01D040                     __ptext105:
 31879                           	opt callstack 0
 31880  01D040                     ___fpclassifyf:
 31881                           	opt callstack 0
 31882                           
 31883                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31884  01D040  0E06               	movlw	6
 31885  01D042  26E1               	addwf	fsr1l,f,c
 31886  01D044  0E00               	movlw	0
 31887  01D046  22E2               	addwfc	fsr1h,f,c
 31888                           
 31889                           ;incstack = 0
 31890 ;; hardware stack exceeded
 31891  01D048  0060  F218  F009   	movff	___fpclassifyf@F463,btemp+8
 31892  01D04E  0060  F21C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 31893  01D054  0060  F220  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 31894  01D05A  0060  F224  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 31895                           
 31896                           ;stkvar	_u @ sp[(-6)+0]
 31897  01D060  0EFA               	movlw	-6
 31898  01D062  0060  F027  FFE3   	movff	btemp+8,plusw1
 31899  01D068  0EFB               	movlw	-5
 31900  01D06A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31901  01D070  0EFC               	movlw	-4
 31902  01D072  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31903  01D078  0EFD               	movlw	-3
 31904  01D07A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31905                           
 31906                           ;stkvar	_x @ sp[(-6)+-4]
 31907  01D080  0EF6               	movlw	-10
 31908  01D082  006F FF8C  F009    	movff	plusw1,btemp+8
 31909  01D088  0EF7               	movlw	-9
 31910  01D08A  006F FF8C  F00A    	movff	plusw1,btemp+9
 31911  01D090  0EF8               	movlw	-8
 31912  01D092  006F FF8C  F00B    	movff	plusw1,btemp+10
 31913  01D098  0EF9               	movlw	-7
 31914  01D09A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31915                           
 31916                           ;stkvar	_u @ sp[(-6)+0]
 31917  01D0A0  0EFA               	movlw	-6
 31918  01D0A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 31919  01D0A8  0EFB               	movlw	-5
 31920  01D0AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31921  01D0B0  0EFC               	movlw	-4
 31922  01D0B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31923  01D0B8  0EFD               	movlw	-3
 31924  01D0BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31925                           
 31926                           ;stkvar	_u @ sp[(-6)+0]
 31927  01D0C0  0EFA               	movlw	-6
 31928  01D0C2  006F FF8C  F009    	movff	plusw1,btemp+8
 31929  01D0C8  0EFB               	movlw	-5
 31930  01D0CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 31931  01D0D0  0EFC               	movlw	-4
 31932  01D0D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 31933  01D0D8  0EFD               	movlw	-3
 31934  01D0DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 31935  01D0E0  0E18               	movlw	24
 31936  01D0E2  D005               	goto	u7680
 31937  01D0E4                     u7685:
 31938  01D0E4  90D8               	bcf	status,0,c
 31939  01D0E6  320C               	rrcf	(btemp+11)^0,f,c
 31940  01D0E8  320B               	rrcf	(btemp+10)^0,f,c
 31941  01D0EA  320A               	rrcf	(btemp+9)^0,f,c
 31942  01D0EC  3209               	rrcf	(btemp+8)^0,f,c
 31943  01D0EE                     u7680:
 31944  01D0EE  2EE8               	decfsz	wreg,f,c
 31945  01D0F0  D7F9               	goto	u7685
 31946  01D0F2  0060  F024  F007   	movff	btemp+8,btemp+6
 31947  01D0F8  0060  F028  F008   	movff	btemp+9,btemp+7
 31948  01D0FE  0EFF               	movlw	255
 31949  01D100  1607               	andwf	(btemp+6)^0,f,c
 31950  01D102  0E00               	movlw	0
 31951  01D104  1608               	andwf	(btemp+7)^0,f,c
 31952                           
 31953                           ;stkvar	_e @ sp[(-6)+4]
 31954  01D106  0EFE               	movlw	-2
 31955  01D108  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31956  01D10E  0EFF               	movlw	-1
 31957  01D110  0060  F023  FFE3   	movff	btemp+7,plusw1
 31958                           
 31959                           ;stkvar	_e @ sp[(-6)+4]
 31960  01D116  0EFE               	movlw	-2
 31961  01D118  006F FF8C  F001    	movff	plusw1,btemp
 31962  01D11E  0EFF               	movlw	-1
 31963  01D120  50E3               	movf	plusw1,w,c
 31964  01D122  1001               	iorwf	btemp^0,w,c
 31965  01D124  A4D8               	btfss	status,2,c
 31966  01D126  D023               	goto	l10003
 31967                           
 31968                           ;stkvar	_u @ sp[(-6)+0]
 31969  01D128  0EFA               	movlw	-6
 31970  01D12A  006F FF8C  F009    	movff	plusw1,btemp+8
 31971  01D130  0EFB               	movlw	-5
 31972  01D132  006F FF8C  F00A    	movff	plusw1,btemp+9
 31973  01D138  0EFC               	movlw	-4
 31974  01D13A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31975  01D140  0EFD               	movlw	-3
 31976  01D142  006F FF8C  F00C    	movff	plusw1,btemp+11
 31977  01D148  90D8               	bcf	status,0,c
 31978  01D14A  3409               	rlcf	(btemp+8)^0,w,c
 31979  01D14C  6E05               	movwf	(btemp+4)^0,c
 31980  01D14E  340A               	rlcf	(btemp+9)^0,w,c
 31981  01D150  6E06               	movwf	(btemp+5)^0,c
 31982  01D152  340B               	rlcf	(btemp+10)^0,w,c
 31983  01D154  6E07               	movwf	(btemp+6)^0,c
 31984  01D156  340C               	rlcf	(btemp+11)^0,w,c
 31985  01D158  6E08               	movwf	(btemp+7)^0,c
 31986  01D15A  5005               	movf	(btemp+4)^0,w,c
 31987  01D15C  1006               	iorwf	(btemp+5)^0,w,c
 31988  01D15E  1007               	iorwf	(btemp+6)^0,w,c
 31989  01D160  1008               	iorwf	(btemp+7)^0,w,c
 31990  01D162  A4D8               	btfss	status,2,c
 31991  01D164  D002               	goto	l9999
 31992  01D166  0E02               	movlw	2
 31993  01D168  D02E               	goto	L35
 31994  01D16A                     l9999:
 31995  01D16A  0E03               	movlw	3
 31996  01D16C  D02C               	goto	L35
 31997  01D16E                     l10003:
 31998                           
 31999                           ;stkvar	_e @ sp[(-6)+4]
 32000  01D16E  0EFE               	movlw	-2
 32001  01D170  28E3               	incf	plusw1,w,c
 32002  01D172  E128               	bnz	l10009
 32003  01D174  0EFF               	movlw	-1
 32004  01D176  50E3               	movf	plusw1,w,c
 32005  01D178  A4D8               	btfss	status,2,c
 32006  01D17A  D024               	goto	l10009
 32007                           
 32008                           ;stkvar	_u @ sp[(-6)+0]
 32009  01D17C  0EFA               	movlw	-6
 32010  01D17E  006F FF8C  F009    	movff	plusw1,btemp+8
 32011  01D184  0EFB               	movlw	-5
 32012  01D186  006F FF8C  F00A    	movff	plusw1,btemp+9
 32013  01D18C  0EFC               	movlw	-4
 32014  01D18E  006F FF8C  F00B    	movff	plusw1,btemp+10
 32015  01D194  0EFD               	movlw	-3
 32016  01D196  006F FF8C  F00C    	movff	plusw1,btemp+11
 32017  01D19C  0E09               	movlw	9
 32018  01D19E                     u7725:
 32019  01D19E  90D8               	bcf	status,0,c
 32020  01D1A0  3609               	rlcf	(btemp+8)^0,f,c
 32021  01D1A2  360A               	rlcf	(btemp+9)^0,f,c
 32022  01D1A4  360B               	rlcf	(btemp+10)^0,f,c
 32023  01D1A6  360C               	rlcf	(btemp+11)^0,f,c
 32024  01D1A8  2EE8               	decfsz	wreg,f,c
 32025  01D1AA  D7F9               	goto	u7725
 32026  01D1AC  5009               	movf	(btemp+8)^0,w,c
 32027  01D1AE  100A               	iorwf	(btemp+9)^0,w,c
 32028  01D1B0  100B               	iorwf	(btemp+10)^0,w,c
 32029  01D1B2  100C               	iorwf	(btemp+11)^0,w,c
 32030  01D1B4  A4D8               	btfss	status,2,c
 32031  01D1B6  D002               	goto	u7730
 32032  01D1B8  0E01               	movlw	1
 32033  01D1BA  D001               	goto	u7740
 32034  01D1BC                     u7730:
 32035  01D1BC  0E00               	movlw	0
 32036  01D1BE                     u7740:
 32037  01D1BE  6E01               	movwf	btemp^0,c
 32038  01D1C0  6A02               	clrf	(btemp+1)^0,c
 32039  01D1C2  D004               	goto	l3378
 32040  01D1C4                     l10009:
 32041  01D1C4  0E04               	movlw	4
 32042  01D1C6                     L35:
 32043  01D1C6  6E01               	movwf	btemp^0,c
 32044  01D1C8  0E00               	movlw	0
 32045  01D1CA  6E02               	movwf	(btemp+1)^0,c
 32046  01D1CC                     l3378:
 32047                           
 32048                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32049  01D1CC  0EF6               	movlw	246
 32050  01D1CE  26E1               	addwf	fsr1l,f,c
 32051  01D1D0  0EFF               	movlw	255
 32052  01D1D2  22E2               	addwfc	fsr1h,f,c
 32053  01D1D4  0012               	return		;funcret
 32054  01D1D6                     __end_of___fpclassifyf:
 32055                           	opt callstack 0
 32056                           
 32057 ;; *************** function ___fltol *****************
 32058 ;; Defined at:
 32059 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32060 ;; Parameters:    Size  Location     Type
 32061 ;;  f1              4  [STACK] int 
 32062 ;; Auto vars:     Size  Location     Type
 32063 ;;  exp1            1  [STACK] unsigned char 
 32064 ;;  sign1           1  [STACK] unsigned char 
 32065 ;; Return value:  Size  Location     Type
 32066 ;;                  4  [STACK] long 
 32067 ;; Registers used:
 32068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32069 ;; Tracked objects:
 32070 ;;		On entry : 0/0
 32071 ;;		On exit  : 0/0
 32072 ;;		Unchanged: 0/0
 32073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32078 ;;Total ram usage:        0 bytes
 32079 ;; Hardware stack levels used:    1
 32080 ;; Hardware stack levels required when called:   15
 32081 ;; This function calls:
 32082 ;;		Nothing
 32083 ;; This function is called by:
 32084 ;;		_main
 32085 ;;		_convert_dac_raw
 32086 ;;		_calc_bsoc
 32087 ;;		_init_bsoc
 32088 ;;		_efgtoa
 32089 ;; This function uses a reentrant model
 32090 ;;
 32091                           
 32092                           	psect	text106
 32093  01D96E                     __ptext106:
 32094                           	opt callstack 0
 32095  01D96E                     ___fltol:
 32096                           	opt callstack 0
 32097                           
 32098                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32099  01D96E  52E6               	movf	postinc1,f,c
 32100  01D970  52E6               	movf	postinc1,f,c
 32101                           
 32102                           ;stkvar	_f1 @ sp[(-2)+-4]
 32103                           
 32104                           ;incstack = 0
 32105 ;; hardware stack exceeded
 32106  01D972  0EFA               	movlw	-6
 32107  01D974  006F FF8C  F009    	movff	plusw1,btemp+8
 32108  01D97A  0EFB               	movlw	-5
 32109  01D97C  006F FF8C  F00A    	movff	plusw1,btemp+9
 32110  01D982  0EFC               	movlw	-4
 32111  01D984  006F FF8C  F00B    	movff	plusw1,btemp+10
 32112  01D98A  0EFD               	movlw	-3
 32113  01D98C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32114  01D992  0E18               	movlw	24
 32115  01D994  D005               	goto	u8950
 32116  01D996                     u8955:
 32117  01D996  90D8               	bcf	status,0,c
 32118  01D998  320C               	rrcf	(btemp+11)^0,f,c
 32119  01D99A  320B               	rrcf	(btemp+10)^0,f,c
 32120  01D99C  320A               	rrcf	(btemp+9)^0,f,c
 32121  01D99E  3209               	rrcf	(btemp+8)^0,f,c
 32122  01D9A0                     u8950:
 32123  01D9A0  2EE8               	decfsz	wreg,f,c
 32124  01D9A2  D7F9               	goto	u8955
 32125                           
 32126                           ;stkvar	_exp1 @ sp[(-2)+0]
 32127  01D9A4  0EFE               	movlw	-2
 32128  01D9A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 32129  01D9AC  0EFE               	movlw	-2
 32130  01D9AE  50E3               	movf	plusw1,w,c
 32131  01D9B0  A4D8               	btfss	status,2,c
 32132  01D9B2  D006               	goto	l10655
 32133  01D9B4                     u8960:
 32134  01D9B4  0E00               	movlw	0
 32135  01D9B6  6E01               	movwf	btemp^0,c
 32136  01D9B8  6A02               	clrf	(btemp+1)^0,c
 32137  01D9BA  6A03               	clrf	(btemp+2)^0,c
 32138  01D9BC  6A04               	clrf	(btemp+3)^0,c
 32139  01D9BE  D08B               	goto	l2994
 32140  01D9C0                     l10655:
 32141                           
 32142                           ;stkvar	_f1 @ sp[(-2)+-4]
 32143  01D9C0  0EFA               	movlw	-6
 32144  01D9C2  006F FF8C  F009    	movff	plusw1,btemp+8
 32145  01D9C8  0EFB               	movlw	-5
 32146  01D9CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 32147  01D9D0  0EFC               	movlw	-4
 32148  01D9D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 32149  01D9D8  0EFD               	movlw	-3
 32150  01D9DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 32151  01D9E0  0E20               	movlw	32
 32152  01D9E2  D005               	goto	u8970
 32153  01D9E4                     u8975:
 32154  01D9E4  90D8               	bcf	status,0,c
 32155  01D9E6  320C               	rrcf	(btemp+11)^0,f,c
 32156  01D9E8  320B               	rrcf	(btemp+10)^0,f,c
 32157  01D9EA  320A               	rrcf	(btemp+9)^0,f,c
 32158  01D9EC  3209               	rrcf	(btemp+8)^0,f,c
 32159  01D9EE                     u8970:
 32160  01D9EE  2EE8               	decfsz	wreg,f,c
 32161  01D9F0  D7F9               	goto	u8975
 32162                           
 32163                           ;stkvar	_sign1 @ sp[(-2)+1]
 32164  01D9F2  0EFF               	movlw	-1
 32165  01D9F4  0060  F027  FFE3   	movff	btemp+8,plusw1
 32166                           
 32167                           ;stkvar	_f1 @ sp[(-2)+-4]
 32168  01D9FA  0EFC               	movlw	-4
 32169  01D9FC  8EE3               	bsf	plusw1,7,c
 32170                           
 32171                           ;stkvar	_f1 @ sp[(-2)+-4]
 32172  01D9FE  50E1               	movf	fsr1l,w,c
 32173  01DA00  0FFA               	addlw	-6
 32174  01DA02  6ED9               	movwf	fsr2l,c
 32175  01DA04  50E2               	movf	fsr1h,w,c
 32176  01DA06  6EDA               	movwf	fsr2h,c
 32177  01DA08  0EFF               	movlw	255
 32178  01DA0A  22DA               	addwfc	fsr2h,f,c
 32179  01DA0C  0EFF               	movlw	255
 32180  01DA0E  16DE               	andwf	postinc2,f,c
 32181  01DA10  0EFF               	movlw	255
 32182  01DA12  16DE               	andwf	postinc2,f,c
 32183  01DA14  0EFF               	movlw	255
 32184  01DA16  16DE               	andwf	postinc2,f,c
 32185  01DA18  0E00               	movlw	0
 32186  01DA1A  16DE               	andwf	postinc2,f,c
 32187                           
 32188                           ;stkvar	_exp1 @ sp[(-2)+0]
 32189  01DA1C  0EFE               	movlw	-2
 32190  01DA1E  006F FF8C  F001    	movff	plusw1,btemp
 32191  01DA24  0E96               	movlw	150
 32192  01DA26  5E01               	subwf	btemp^0,f,c
 32193  01DA28  0EFE               	movlw	-2
 32194  01DA2A  0060  F007  FFE3   	movff	btemp,plusw1
 32195                           
 32196                           ;stkvar	_exp1 @ sp[(-2)+0]
 32197  01DA30  0EFE               	movlw	-2
 32198  01DA32  AEE3               	btfss	plusw1,7,c
 32199  01DA34  D014               	goto	l10673
 32200                           
 32201                           ;stkvar	_exp1 @ sp[(-2)+0]
 32202  01DA36  0EFE               	movlw	-2
 32203  01DA38  50E3               	movf	plusw1,w,c
 32204  01DA3A  0A80               	xorlw	128
 32205  01DA3C  0F97               	addlw	151
 32206  01DA3E  A0D8               	btfss	status,0,c
 32207  01DA40  D7B9               	goto	u8960
 32208  01DA42                     l10671:
 32209                           
 32210                           ;stkvar	_f1 @ sp[(-2)+-4]
 32211  01DA42  90D8               	bcf	status,0,c
 32212  01DA44  0EFD               	movlw	-3
 32213  01DA46  32E3               	rrcf	plusw1,f,c
 32214  01DA48  0EFC               	movlw	-4
 32215  01DA4A  32E3               	rrcf	plusw1,f,c
 32216  01DA4C  0EFB               	movlw	-5
 32217  01DA4E  32E3               	rrcf	plusw1,f,c
 32218  01DA50  0EFA               	movlw	-6
 32219  01DA52  32E3               	rrcf	plusw1,f,c
 32220                           
 32221                           ;stkvar	_exp1 @ sp[(-2)+0]
 32222  01DA54  0EFE               	movlw	-2
 32223  01DA56  2AE3               	incf	plusw1,f,c
 32224  01DA58  B4D8               	btfsc	status,2,c
 32225  01DA5A  D018               	goto	u9020
 32226  01DA5C  D7F2               	goto	l10671
 32227  01DA5E                     l10673:
 32228                           
 32229                           ;stkvar	_exp1 @ sp[(-2)+0]
 32230  01DA5E  0EFE               	movlw	-2
 32231  01DA60  006F FF8C  F001    	movff	plusw1,btemp
 32232  01DA66  0E1F               	movlw	31
 32233  01DA68  6401               	cpfsgt	btemp^0,c
 32234  01DA6A  D00C               	goto	l10681
 32235  01DA6C  D7A3               	goto	u8960
 32236  01DA6E                     l10679:
 32237                           
 32238                           ;stkvar	_f1 @ sp[(-2)+-4]
 32239  01DA6E  90D8               	bcf	status,0,c
 32240  01DA70  0EFA               	movlw	-6
 32241  01DA72  36E3               	rlcf	plusw1,f,c
 32242  01DA74  0EFB               	movlw	-5
 32243  01DA76  36E3               	rlcf	plusw1,f,c
 32244  01DA78  0EFC               	movlw	-4
 32245  01DA7A  36E3               	rlcf	plusw1,f,c
 32246  01DA7C  0EFD               	movlw	-3
 32247  01DA7E  36E3               	rlcf	plusw1,f,c
 32248                           
 32249                           ;stkvar	_exp1 @ sp[(-2)+0]
 32250  01DA80  0EFE               	movlw	-2
 32251  01DA82  06E3               	decf	plusw1,f,c
 32252  01DA84                     l10681:
 32253                           
 32254                           ;stkvar	_exp1 @ sp[(-2)+0]
 32255  01DA84  0EFE               	movlw	-2
 32256  01DA86  50E3               	movf	plusw1,w,c
 32257  01DA88  A4D8               	btfss	status,2,c
 32258  01DA8A  D7F1               	goto	l10679
 32259  01DA8C                     u9020:
 32260                           
 32261                           ;stkvar	_sign1 @ sp[(-2)+1]
 32262  01DA8C  0EFF               	movlw	-1
 32263  01DA8E  50E3               	movf	plusw1,w,c
 32264  01DA90  B4D8               	btfsc	status,2,c
 32265  01DA92  D011               	goto	u9040
 32266                           
 32267                           ;stkvar	_f1 @ sp[(-2)+-4]
 32268                           ;stkvar	_f1 @ sp[(-2)+-4]
 32269  01DA94  0EFA               	movlw	-6
 32270  01DA96  6CE3               	negf	plusw1,c
 32271  01DA98  0EFB               	movlw	-5
 32272  01DA9A  1EE3               	comf	plusw1,f,c
 32273  01DA9C  0EFC               	movlw	-4
 32274  01DA9E  1EE3               	comf	plusw1,f,c
 32275  01DAA0  0EFD               	movlw	-3
 32276  01DAA2  1EE3               	comf	plusw1,f,c
 32277  01DAA4  E308               	bnc	u9040
 32278  01DAA6  0EFB               	movlw	-5
 32279  01DAA8  2AE3               	incf	plusw1,f,c
 32280  01DAAA  E305               	bnc	u9040
 32281  01DAAC  0EFC               	movlw	-4
 32282  01DAAE  2AE3               	incf	plusw1,f,c
 32283  01DAB0  E302               	bnc	u9040
 32284  01DAB2  0EFD               	movlw	-3
 32285  01DAB4  2AE3               	incf	plusw1,f,c
 32286  01DAB6                     u9040:
 32287                           
 32288                           ;stkvar	_f1 @ sp[(-2)+-4]
 32289  01DAB6  0EFA               	movlw	-6
 32290  01DAB8  006F FF8C  F001    	movff	plusw1,btemp
 32291  01DABE  0EFB               	movlw	-5
 32292  01DAC0  006F FF8C  F002    	movff	plusw1,btemp+1
 32293  01DAC6  0EFC               	movlw	-4
 32294  01DAC8  006F FF8C  F003    	movff	plusw1,btemp+2
 32295  01DACE  0EFD               	movlw	-3
 32296  01DAD0  006F FF8C  F004    	movff	plusw1,btemp+3
 32297  01DAD6                     l2994:
 32298                           
 32299                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32300  01DAD6  0EFA               	movlw	250
 32301  01DAD8  26E1               	addwf	fsr1l,f,c
 32302  01DADA  0EFF               	movlw	255
 32303  01DADC  22E2               	addwfc	fsr1h,f,c
 32304  01DADE  0012               	return		;funcret
 32305  01DAE0                     __end_of___fltol:
 32306                           	opt callstack 0
 32307                           
 32308 ;; *************** function ___flneg *****************
 32309 ;; Defined at:
 32310 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 32311 ;; Parameters:    Size  Location     Type
 32312 ;;  f1              4  [STACK] long 
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;		None
 32315 ;; Return value:  Size  Location     Type
 32316 ;;                  4  [STACK] long 
 32317 ;; Registers used:
 32318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;Total ram usage:        0 bytes
 32329 ;; Hardware stack levels used:    1
 32330 ;; Hardware stack levels required when called:   15
 32331 ;; This function calls:
 32332 ;;		Nothing
 32333 ;; This function is called by:
 32334 ;;		_calc_bsoc
 32335 ;;		_efgtoa
 32336 ;; This function uses a reentrant model
 32337 ;;
 32338                           
 32339                           	psect	text107
 32340  0010C2                     __ptext107:
 32341                           	opt callstack 0
 32342  0010C2                     ___flneg:
 32343                           	opt callstack 0
 32344                           
 32345                           ;stkvar	_f1 @ sp[(0)+-4]
 32346                           
 32347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32348                           ;incstack = 0
 32349 ;; hardware stack exceeded
 32350  0010C2  0EFC               	movlw	-4
 32351  0010C4  50E3               	movf	plusw1,w,c
 32352  0010C6  E10A               	bnz	u8940
 32353  0010C8  0EFD               	movlw	-3
 32354  0010CA  50E3               	movf	plusw1,w,c
 32355  0010CC  E107               	bnz	u8940
 32356  0010CE  0EFE               	movlw	-2
 32357  0010D0  50E3               	movf	plusw1,w,c
 32358  0010D2  E104               	bnz	u8940
 32359  0010D4  0EFF               	movlw	-1
 32360  0010D6  50E3               	movf	plusw1,w,c
 32361  0010D8  B4D8               	btfsc	status,2,c
 32362  0010DA  D002               	goto	l10645
 32363  0010DC                     u8940:
 32364                           
 32365                           ;stkvar	_f1 @ sp[(0)+-4]
 32366  0010DC  0EFF               	movlw	-1
 32367  0010DE  7EE3               	btg	plusw1,7,c
 32368  0010E0                     l10645:
 32369                           
 32370                           ;stkvar	_f1 @ sp[(0)+-4]
 32371  0010E0  0EFC               	movlw	-4
 32372  0010E2  006F FF8C  F001    	movff	plusw1,btemp
 32373  0010E8  0EFD               	movlw	-3
 32374  0010EA  006F FF8C  F002    	movff	plusw1,btemp+1
 32375  0010F0  0EFE               	movlw	-2
 32376  0010F2  006F FF8C  F003    	movff	plusw1,btemp+2
 32377  0010F8  0EFF               	movlw	-1
 32378  0010FA  006F FF8C  F004    	movff	plusw1,btemp+3
 32379                           
 32380                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32381  001100  52E5               	movf	postdec1,f,c
 32382  001102  52E5               	movf	postdec1,f,c
 32383  001104  52E5               	movf	postdec1,f,c
 32384  001106  52E5               	movf	postdec1,f,c
 32385  001108  0012               	return		;funcret
 32386  00110A                     __end_of___flneg:
 32387                           	opt callstack 0
 32388                           
 32389 ;; *************** function ___fleq *****************
 32390 ;; Defined at:
 32391 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 32392 ;; Parameters:    Size  Location     Type
 32393 ;;  ff1             4  [STACK] long 
 32394 ;;  ff2             4  [STACK] long 
 32395 ;; Auto vars:     Size  Location     Type
 32396 ;;		None
 32397 ;; Return value:  Size  Location     Type
 32398 ;;		None               void
 32399 ;; Registers used:
 32400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 32401 ;; Tracked objects:
 32402 ;;		On entry : 0/0
 32403 ;;		On exit  : 0/0
 32404 ;;		Unchanged: 0/0
 32405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;Total ram usage:        0 bytes
 32411 ;; Hardware stack levels used:    1
 32412 ;; Hardware stack levels required when called:   15
 32413 ;; This function calls:
 32414 ;;		Nothing
 32415 ;; This function is called by:
 32416 ;;		_efgtoa
 32417 ;; This function uses a reentrant model
 32418 ;;
 32419                           
 32420                           	psect	text108
 32421  01F950                     __ptext108:
 32422                           	opt callstack 0
 32423  01F950                     ___fleq:
 32424                           	opt callstack 0
 32425                           
 32426                           ;stkvar	_ff1 @ sp[(0)+-4]
 32427                           
 32428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32429                           ;incstack = 0
 32430 ;; hardware stack exceeded
 32431  01F950  50E1               	movf	fsr1l,w,c
 32432  01F952  0FFC               	addlw	-4
 32433  01F954  6ED9               	movwf	fsr2l,c
 32434  01F956  50E2               	movf	fsr1h,w,c
 32435  01F958  6EDA               	movwf	fsr2h,c
 32436  01F95A  0EFF               	movlw	255
 32437  01F95C  22DA               	addwfc	fsr2h,f,c
 32438  01F95E  0E00               	movlw	0
 32439  01F960  14DE               	andwf	postinc2,w,c
 32440  01F962  6E09               	movwf	(btemp+8)^0,c
 32441  01F964  0E00               	movlw	0
 32442  01F966  14DE               	andwf	postinc2,w,c
 32443  01F968  6E0A               	movwf	(btemp+9)^0,c
 32444  01F96A  0E80               	movlw	128
 32445  01F96C  14DE               	andwf	postinc2,w,c
 32446  01F96E  6E0B               	movwf	(btemp+10)^0,c
 32447  01F970  0E7F               	movlw	127
 32448  01F972  14DE               	andwf	postinc2,w,c
 32449  01F974  6E0C               	movwf	(btemp+11)^0,c
 32450  01F976  5009               	movf	(btemp+8)^0,w,c
 32451  01F978  100A               	iorwf	(btemp+9)^0,w,c
 32452  01F97A  100B               	iorwf	(btemp+10)^0,w,c
 32453  01F97C  100C               	iorwf	(btemp+11)^0,w,c
 32454  01F97E  A4D8               	btfss	status,2,c
 32455  01F980  D008               	goto	l10603
 32456                           
 32457                           ;stkvar	_ff1 @ sp[(0)+-4]
 32458  01F982  0EFC               	movlw	-4
 32459  01F984  6AE3               	clrf	plusw1,c
 32460  01F986  0EFD               	movlw	-3
 32461  01F988  6AE3               	clrf	plusw1,c
 32462  01F98A  0EFE               	movlw	-2
 32463  01F98C  6AE3               	clrf	plusw1,c
 32464  01F98E  0EFF               	movlw	-1
 32465  01F990  6AE3               	clrf	plusw1,c
 32466  01F992                     l10603:
 32467                           
 32468                           ;stkvar	_ff2 @ sp[(0)+-8]
 32469  01F992  50E1               	movf	fsr1l,w,c
 32470  01F994  0FF8               	addlw	-8
 32471  01F996  6ED9               	movwf	fsr2l,c
 32472  01F998  50E2               	movf	fsr1h,w,c
 32473  01F99A  6EDA               	movwf	fsr2h,c
 32474  01F99C  0EFF               	movlw	255
 32475  01F99E  22DA               	addwfc	fsr2h,f,c
 32476  01F9A0  0E00               	movlw	0
 32477  01F9A2  14DE               	andwf	postinc2,w,c
 32478  01F9A4  6E09               	movwf	(btemp+8)^0,c
 32479  01F9A6  0E00               	movlw	0
 32480  01F9A8  14DE               	andwf	postinc2,w,c
 32481  01F9AA  6E0A               	movwf	(btemp+9)^0,c
 32482  01F9AC  0E80               	movlw	128
 32483  01F9AE  14DE               	andwf	postinc2,w,c
 32484  01F9B0  6E0B               	movwf	(btemp+10)^0,c
 32485  01F9B2  0E7F               	movlw	127
 32486  01F9B4  14DE               	andwf	postinc2,w,c
 32487  01F9B6  6E0C               	movwf	(btemp+11)^0,c
 32488  01F9B8  5009               	movf	(btemp+8)^0,w,c
 32489  01F9BA  100A               	iorwf	(btemp+9)^0,w,c
 32490  01F9BC  100B               	iorwf	(btemp+10)^0,w,c
 32491  01F9BE  100C               	iorwf	(btemp+11)^0,w,c
 32492  01F9C0  A4D8               	btfss	status,2,c
 32493  01F9C2  D008               	goto	l10607
 32494                           
 32495                           ;stkvar	_ff2 @ sp[(0)+-8]
 32496  01F9C4  0EF8               	movlw	-8
 32497  01F9C6  6AE3               	clrf	plusw1,c
 32498  01F9C8  0EF9               	movlw	-7
 32499  01F9CA  6AE3               	clrf	plusw1,c
 32500  01F9CC  0EFA               	movlw	-6
 32501  01F9CE  6AE3               	clrf	plusw1,c
 32502  01F9D0  0EFB               	movlw	-5
 32503  01F9D2  6AE3               	clrf	plusw1,c
 32504  01F9D4                     l10607:
 32505                           
 32506                           ;stkvar	_ff2 @ sp[(0)+-8]
 32507                           ;stkvar	_ff1 @ sp[(0)+-4]
 32508  01F9D4  50E1               	movf	fsr1l,w,c
 32509  01F9D6  0FFC               	addlw	-4
 32510  01F9D8  6ED9               	movwf	fsr2l,c
 32511  01F9DA  50E2               	movf	fsr1h,w,c
 32512  01F9DC  6EDA               	movwf	fsr2h,c
 32513  01F9DE  0EFF               	movlw	255
 32514  01F9E0  22DA               	addwfc	fsr2h,f,c
 32515  01F9E2  0EF8               	movlw	-8
 32516  01F9E4  50E3               	movf	plusw1,w,c
 32517  01F9E6  18DE               	xorwf	postinc2,w,c
 32518  01F9E8  E10D               	bnz	u8880
 32519  01F9EA  0EF9               	movlw	-7
 32520  01F9EC  50E3               	movf	plusw1,w,c
 32521  01F9EE  18DE               	xorwf	postinc2,w,c
 32522  01F9F0  E109               	bnz	u8880
 32523  01F9F2  0EFA               	movlw	-6
 32524  01F9F4  50E3               	movf	plusw1,w,c
 32525  01F9F6  18DE               	xorwf	postinc2,w,c
 32526  01F9F8  E105               	bnz	u8880
 32527  01F9FA  0EFB               	movlw	-5
 32528  01F9FC  50E3               	movf	plusw1,w,c
 32529  01F9FE  18DE               	xorwf	postinc2,w,c
 32530  01FA00  B4D8               	btfsc	status,2,c
 32531  01FA02  D002               	goto	l10611
 32532  01FA04                     u8880:
 32533  01FA04  9001               	bcf	btemp& (0+255),0,c
 32534  01FA06  D001               	goto	l2956
 32535  01FA08                     l10611:
 32536  01FA08  8001               	bsf	btemp& (0+255),0,c
 32537  01FA0A                     l2956:
 32538                           
 32539                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 32540  01FA0A  0EF8               	movlw	248
 32541  01FA0C  26E1               	addwf	fsr1l,f,c
 32542  01FA0E  0EFF               	movlw	255
 32543  01FA10  22E2               	addwfc	fsr1h,f,c
 32544  01FA12  0012               	return		;funcret
 32545  01FA14                     __end_of___fleq:
 32546                           	opt callstack 0
 32547                           
 32548 ;; *************** function ___awmod *****************
 32549 ;; Defined at:
 32550 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 32551 ;; Parameters:    Size  Location     Type
 32552 ;;  dividend        2  [STACK] int 
 32553 ;;  divisor         2  [STACK] int 
 32554 ;; Auto vars:     Size  Location     Type
 32555 ;;  sign            1  [STACK] unsigned char 
 32556 ;;  counter         1  [STACK] unsigned char 
 32557 ;; Return value:  Size  Location     Type
 32558 ;;                  2  [STACK] int 
 32559 ;; Registers used:
 32560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 32561 ;; Tracked objects:
 32562 ;;		On entry : 0/3
 32563 ;;		On exit  : 0/0
 32564 ;;		Unchanged: 0/0
 32565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32570 ;;Total ram usage:        0 bytes
 32571 ;; Hardware stack levels used:    1
 32572 ;; Hardware stack levels required when called:   15
 32573 ;; This function calls:
 32574 ;;		Nothing
 32575 ;; This function is called by:
 32576 ;;		_efgtoa
 32577 ;;		_asctime
 32578 ;; This function uses a reentrant model
 32579 ;;
 32580                           
 32581                           	psect	text109
 32582  01EB48                     __ptext109:
 32583                           	opt callstack 0
 32584  01EB48                     ___awmod:
 32585                           	opt callstack 0
 32586                           
 32587                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32588  01EB48  52E6               	movf	postinc1,f,c
 32589  01EB4A  52E6               	movf	postinc1,f,c
 32590                           
 32591                           ;stkvar	_sign @ sp[(-2)+0]
 32592                           
 32593                           ;incstack = 0
 32594 ;; hardware stack exceeded
 32595  01EB4C  0EFE               	movlw	-2
 32596  01EB4E  6AE3               	clrf	plusw1,c
 32597                           
 32598                           ;stkvar	_dividend @ sp[(-2)+-2]
 32599  01EB50  0EFD               	movlw	-3
 32600  01EB52  AEE3               	btfss	plusw1,7,c
 32601  01EB54  D009               	goto	l10569
 32602                           
 32603                           ;stkvar	_dividend @ sp[(-2)+-2]
 32604                           ;stkvar	_dividend @ sp[(-2)+-2]
 32605  01EB56  0EFC               	movlw	-4
 32606  01EB58  6CE3               	negf	plusw1,c
 32607  01EB5A  0EFD               	movlw	-3
 32608  01EB5C  1EE3               	comf	plusw1,f,c
 32609  01EB5E  B0D8               	btfsc	status,0,c
 32610  01EB60  2AE3               	incf	plusw1,f,c
 32611                           
 32612                           ;stkvar	_sign @ sp[(-2)+0]
 32613  01EB62  0EFE               	movlw	-2
 32614  01EB64  6AE3               	clrf	plusw1,c
 32615  01EB66  2AE3               	incf	plusw1,f,c
 32616  01EB68                     l10569:
 32617                           
 32618                           ;stkvar	_divisor @ sp[(-2)+-4]
 32619  01EB68  0EFB               	movlw	-5
 32620  01EB6A  AEE3               	btfss	plusw1,7,c
 32621  01EB6C  D006               	goto	l10573
 32622                           
 32623                           ;stkvar	_divisor @ sp[(-2)+-4]
 32624                           ;stkvar	_divisor @ sp[(-2)+-4]
 32625  01EB6E  0EFA               	movlw	-6
 32626  01EB70  6CE3               	negf	plusw1,c
 32627  01EB72  0EFB               	movlw	-5
 32628  01EB74  1EE3               	comf	plusw1,f,c
 32629  01EB76  B0D8               	btfsc	status,0,c
 32630  01EB78  2AE3               	incf	plusw1,f,c
 32631  01EB7A                     l10573:
 32632                           
 32633                           ;stkvar	_divisor @ sp[(-2)+-4]
 32634  01EB7A  0EFA               	movlw	-6
 32635  01EB7C  006F FF8C  F001    	movff	plusw1,btemp
 32636  01EB82  0EFB               	movlw	-5
 32637  01EB84  50E3               	movf	plusw1,w,c
 32638  01EB86  1001               	iorwf	btemp^0,w,c
 32639  01EB88  B4D8               	btfsc	status,2,c
 32640  01EB8A  D053               	goto	u8840
 32641                           
 32642                           ;stkvar	_counter @ sp[(-2)+1]
 32643  01EB8C  0EFF               	movlw	-1
 32644  01EB8E  6AE3               	clrf	plusw1,c
 32645  01EB90  D012               	goto	L36
 32646  01EB92                     l10577:
 32647                           
 32648                           ;stkvar	_divisor @ sp[(-2)+-4]
 32649  01EB92  0EFA               	movlw	-6
 32650  01EB94  50E3               	movf	plusw1,w,c
 32651  01EB96  90D8               	bcf	status,0,c
 32652  01EB98  34E8               	rlcf	wreg,w,c
 32653  01EB9A  6E01               	movwf	btemp^0,c
 32654  01EB9C  0EFA               	movlw	-6
 32655  01EB9E  0060  F007  FFE3   	movff	btemp,plusw1
 32656  01EBA4  0EFB               	movlw	-5
 32657  01EBA6  50E3               	movf	plusw1,w,c
 32658  01EBA8  34E8               	rlcf	wreg,w,c
 32659  01EBAA  6E01               	movwf	btemp^0,c
 32660  01EBAC  0EFB               	movlw	-5
 32661  01EBAE  0060  F007  FFE3   	movff	btemp,plusw1
 32662                           
 32663                           ;stkvar	_counter @ sp[(-2)+1]
 32664  01EBB4  0EFF               	movlw	-1
 32665  01EBB6                     L36:
 32666  01EBB6  2AE3               	incf	plusw1,f,c
 32667                           
 32668                           ;stkvar	_divisor @ sp[(-2)+-4]
 32669  01EBB8  0EFB               	movlw	-5
 32670  01EBBA  AEE3               	btfss	plusw1,7,c
 32671  01EBBC  D7EA               	goto	l10577
 32672  01EBBE                     u8820:
 32673                           
 32674                           ;stkvar	_divisor @ sp[(-2)+-4]
 32675  01EBBE  0EFA               	movlw	-6
 32676  01EBC0  006F FF8C  F00B    	movff	plusw1,btemp+10
 32677  01EBC6  0EFB               	movlw	-5
 32678  01EBC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32679                           
 32680                           ;stkvar	_dividend @ sp[(-2)+-2]
 32681  01EBCE  0EFC               	movlw	-4
 32682  01EBD0  006F FF8C  F009    	movff	plusw1,btemp+8
 32683  01EBD6  0EFD               	movlw	-3
 32684  01EBD8  006F FF8C  F00A    	movff	plusw1,btemp+9
 32685  01EBDE  500B               	movf	(btemp+10)^0,w,c
 32686  01EBE0  5C09               	subwf	(btemp+8)^0,w,c
 32687  01EBE2  500C               	movf	(btemp+11)^0,w,c
 32688  01EBE4  580A               	subwfb	(btemp+9)^0,w,c
 32689  01EBE6  A0D8               	btfss	status,0,c
 32690  01EBE8  D014               	goto	l10587
 32691                           
 32692                           ;stkvar	_divisor @ sp[(-2)+-4]
 32693                           ;stkvar	_dividend @ sp[(-2)+-2]
 32694  01EBEA  0EFC               	movlw	-4
 32695  01EBEC  50E3               	movf	plusw1,w,c
 32696  01EBEE  6E01               	movwf	btemp^0,c
 32697  01EBF0  0EFA               	movlw	-6
 32698  01EBF2  50E3               	movf	plusw1,w,c
 32699  01EBF4  5E01               	subwf	btemp^0,f,c
 32700  01EBF6  0EFC               	movlw	-4
 32701  01EBF8  0060  F007  FFE3   	movff	btemp,plusw1
 32702  01EBFE  0EFD               	movlw	-3
 32703  01EC00  50E3               	movf	plusw1,w,c
 32704  01EC02  6E01               	movwf	btemp^0,c
 32705  01EC04  0EFB               	movlw	-5
 32706  01EC06  50E3               	movf	plusw1,w,c
 32707  01EC08  5A01               	subwfb	btemp^0,f,c
 32708  01EC0A  0EFD               	movlw	-3
 32709  01EC0C  0060  F007  FFE3   	movff	btemp,plusw1
 32710  01EC12                     l10587:
 32711                           
 32712                           ;stkvar	_divisor @ sp[(-2)+-4]
 32713  01EC12  90D8               	bcf	status,0,c
 32714  01EC14  0EFB               	movlw	-5
 32715  01EC16  32E3               	rrcf	plusw1,f,c
 32716  01EC18  0EFA               	movlw	-6
 32717  01EC1A  32E3               	rrcf	plusw1,f,c
 32718                           
 32719                           ;stkvar	_counter @ sp[(-2)+1]
 32720  01EC1C  0EFF               	movlw	-1
 32721  01EC1E  50E3               	movf	plusw1,w,c
 32722  01EC20  6E01               	movwf	btemp^0,c
 32723  01EC22  0E01               	movlw	1
 32724  01EC24  5E01               	subwf	btemp^0,f,c
 32725  01EC26  0EFF               	movlw	-1
 32726  01EC28  0060  F007  FFE3   	movff	btemp,plusw1
 32727  01EC2E  A4D8               	btfss	status,2,c
 32728  01EC30  D7C6               	goto	u8820
 32729  01EC32                     u8840:
 32730                           
 32731                           ;stkvar	_sign @ sp[(-2)+0]
 32732  01EC32  0EFE               	movlw	-2
 32733  01EC34  50E3               	movf	plusw1,w,c
 32734  01EC36  B4D8               	btfsc	status,2,c
 32735  01EC38  D006               	goto	l10595
 32736                           
 32737                           ;stkvar	_dividend @ sp[(-2)+-2]
 32738                           ;stkvar	_dividend @ sp[(-2)+-2]
 32739  01EC3A  0EFC               	movlw	-4
 32740  01EC3C  6CE3               	negf	plusw1,c
 32741  01EC3E  0EFD               	movlw	-3
 32742  01EC40  1EE3               	comf	plusw1,f,c
 32743  01EC42  B0D8               	btfsc	status,0,c
 32744  01EC44  2AE3               	incf	plusw1,f,c
 32745  01EC46                     l10595:
 32746                           
 32747                           ;stkvar	_dividend @ sp[(-2)+-2]
 32748  01EC46  0EFC               	movlw	-4
 32749  01EC48  006F FF8C  F001    	movff	plusw1,btemp
 32750  01EC4E  0EFD               	movlw	-3
 32751  01EC50  006F FF8C  F002    	movff	plusw1,btemp+1
 32752                           
 32753                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32754  01EC56  0EFA               	movlw	250
 32755  01EC58  26E1               	addwf	fsr1l,f,c
 32756  01EC5A  0EFF               	movlw	255
 32757  01EC5C  22E2               	addwfc	fsr1h,f,c
 32758  01EC5E  0012               	return		;funcret
 32759  01EC60                     __end_of___awmod:
 32760                           	opt callstack 0
 32761                           
 32762 ;; *************** function ___awdiv *****************
 32763 ;; Defined at:
 32764 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 32765 ;; Parameters:    Size  Location     Type
 32766 ;;  dividend        2  [STACK] int 
 32767 ;;  divisor         2  [STACK] int 
 32768 ;; Auto vars:     Size  Location     Type
 32769 ;;  quotient        2  [STACK] int 
 32770 ;;  sign            1  [STACK] unsigned char 
 32771 ;;  counter         1  [STACK] unsigned char 
 32772 ;; Return value:  Size  Location     Type
 32773 ;;                  2  [STACK] int 
 32774 ;; Registers used:
 32775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 32776 ;; Tracked objects:
 32777 ;;		On entry : 0/3
 32778 ;;		On exit  : 0/0
 32779 ;;		Unchanged: 0/0
 32780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32785 ;;Total ram usage:        0 bytes
 32786 ;; Hardware stack levels used:    1
 32787 ;; Hardware stack levels required when called:   15
 32788 ;; This function calls:
 32789 ;;		Nothing
 32790 ;; This function is called by:
 32791 ;;		_efgtoa
 32792 ;;		_put2d
 32793 ;;		_asctime
 32794 ;;		_scan_trans
 32795 ;; This function uses a reentrant model
 32796 ;;
 32797                           
 32798                           	psect	text110
 32799  01E1BC                     __ptext110:
 32800                           	opt callstack 0
 32801  01E1BC                     ___awdiv:
 32802                           	opt callstack 0
 32803                           
 32804                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32805  01E1BC  52E6               	movf	postinc1,f,c
 32806  01E1BE  52E6               	movf	postinc1,f,c
 32807  01E1C0  52E6               	movf	postinc1,f,c
 32808  01E1C2  52E6               	movf	postinc1,f,c
 32809                           
 32810                           ;stkvar	_sign @ sp[(-4)+2]
 32811                           
 32812                           ;incstack = 0
 32813 ;; hardware stack exceeded
 32814  01E1C4  0EFE               	movlw	-2
 32815  01E1C6  6AE3               	clrf	plusw1,c
 32816                           
 32817                           ;stkvar	_divisor @ sp[(-4)+-4]
 32818  01E1C8  0EF9               	movlw	-7
 32819  01E1CA  AEE3               	btfss	plusw1,7,c
 32820  01E1CC  D009               	goto	l10523
 32821                           
 32822                           ;stkvar	_divisor @ sp[(-4)+-4]
 32823                           ;stkvar	_divisor @ sp[(-4)+-4]
 32824  01E1CE  0EF8               	movlw	-8
 32825  01E1D0  6CE3               	negf	plusw1,c
 32826  01E1D2  0EF9               	movlw	-7
 32827  01E1D4  1EE3               	comf	plusw1,f,c
 32828  01E1D6  B0D8               	btfsc	status,0,c
 32829  01E1D8  2AE3               	incf	plusw1,f,c
 32830                           
 32831                           ;stkvar	_sign @ sp[(-4)+2]
 32832  01E1DA  0EFE               	movlw	-2
 32833  01E1DC  6AE3               	clrf	plusw1,c
 32834  01E1DE  2AE3               	incf	plusw1,f,c
 32835  01E1E0                     l10523:
 32836                           
 32837                           ;stkvar	_dividend @ sp[(-4)+-2]
 32838  01E1E0  0EFB               	movlw	-5
 32839  01E1E2  AEE3               	btfss	plusw1,7,c
 32840  01E1E4  D008               	goto	l10529
 32841                           
 32842                           ;stkvar	_dividend @ sp[(-4)+-2]
 32843                           ;stkvar	_dividend @ sp[(-4)+-2]
 32844  01E1E6  0EFA               	movlw	-6
 32845  01E1E8  6CE3               	negf	plusw1,c
 32846  01E1EA  0EFB               	movlw	-5
 32847  01E1EC  1EE3               	comf	plusw1,f,c
 32848  01E1EE  B0D8               	btfsc	status,0,c
 32849  01E1F0  2AE3               	incf	plusw1,f,c
 32850                           
 32851                           ;stkvar	_sign @ sp[(-4)+2]
 32852  01E1F2  0EFE               	movlw	-2
 32853  01E1F4  70E3               	btg	plusw1,0,c
 32854  01E1F6                     l10529:
 32855                           
 32856                           ;stkvar	_quotient @ sp[(-4)+0]
 32857  01E1F6  0EFC               	movlw	-4
 32858  01E1F8  6AE3               	clrf	plusw1,c
 32859  01E1FA  0EFD               	movlw	-3
 32860  01E1FC  6AE3               	clrf	plusw1,c
 32861                           
 32862                           ;stkvar	_divisor @ sp[(-4)+-4]
 32863  01E1FE  0EF8               	movlw	-8
 32864  01E200  006F FF8C  F001    	movff	plusw1,btemp
 32865  01E206  0EF9               	movlw	-7
 32866  01E208  50E3               	movf	plusw1,w,c
 32867  01E20A  1001               	iorwf	btemp^0,w,c
 32868  01E20C  B4D8               	btfsc	status,2,c
 32869  01E20E  D066               	goto	u8770
 32870                           
 32871                           ;stkvar	_counter @ sp[(-4)+3]
 32872  01E210  0EFF               	movlw	-1
 32873  01E212  6AE3               	clrf	plusw1,c
 32874  01E214  D012               	goto	L37
 32875  01E216                     l10535:
 32876                           
 32877                           ;stkvar	_divisor @ sp[(-4)+-4]
 32878  01E216  0EF8               	movlw	-8
 32879  01E218  50E3               	movf	plusw1,w,c
 32880  01E21A  90D8               	bcf	status,0,c
 32881  01E21C  34E8               	rlcf	wreg,w,c
 32882  01E21E  6E01               	movwf	btemp^0,c
 32883  01E220  0EF8               	movlw	-8
 32884  01E222  0060  F007  FFE3   	movff	btemp,plusw1
 32885  01E228  0EF9               	movlw	-7
 32886  01E22A  50E3               	movf	plusw1,w,c
 32887  01E22C  34E8               	rlcf	wreg,w,c
 32888  01E22E  6E01               	movwf	btemp^0,c
 32889  01E230  0EF9               	movlw	-7
 32890  01E232  0060  F007  FFE3   	movff	btemp,plusw1
 32891                           
 32892                           ;stkvar	_counter @ sp[(-4)+3]
 32893  01E238  0EFF               	movlw	-1
 32894  01E23A                     L37:
 32895  01E23A  2AE3               	incf	plusw1,f,c
 32896                           
 32897                           ;stkvar	_divisor @ sp[(-4)+-4]
 32898  01E23C  0EF9               	movlw	-7
 32899  01E23E  AEE3               	btfss	plusw1,7,c
 32900  01E240  D7EA               	goto	l10535
 32901  01E242                     u8750:
 32902                           
 32903                           ;stkvar	_quotient @ sp[(-4)+0]
 32904  01E242  0EFC               	movlw	-4
 32905  01E244  50E3               	movf	plusw1,w,c
 32906  01E246  90D8               	bcf	status,0,c
 32907  01E248  34E8               	rlcf	wreg,w,c
 32908  01E24A  6E01               	movwf	btemp^0,c
 32909  01E24C  0EFC               	movlw	-4
 32910  01E24E  0060  F007  FFE3   	movff	btemp,plusw1
 32911  01E254  0EFD               	movlw	-3
 32912  01E256  50E3               	movf	plusw1,w,c
 32913  01E258  34E8               	rlcf	wreg,w,c
 32914  01E25A  6E01               	movwf	btemp^0,c
 32915  01E25C  0EFD               	movlw	-3
 32916  01E25E  0060  F007  FFE3   	movff	btemp,plusw1
 32917                           
 32918                           ;stkvar	_divisor @ sp[(-4)+-4]
 32919  01E264  0EF8               	movlw	-8
 32920  01E266  006F FF8C  F00B    	movff	plusw1,btemp+10
 32921  01E26C  0EF9               	movlw	-7
 32922  01E26E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32923                           
 32924                           ;stkvar	_dividend @ sp[(-4)+-2]
 32925  01E274  0EFA               	movlw	-6
 32926  01E276  006F FF8C  F009    	movff	plusw1,btemp+8
 32927  01E27C  0EFB               	movlw	-5
 32928  01E27E  006F FF8C  F00A    	movff	plusw1,btemp+9
 32929  01E284  500B               	movf	(btemp+10)^0,w,c
 32930  01E286  5C09               	subwf	(btemp+8)^0,w,c
 32931  01E288  500C               	movf	(btemp+11)^0,w,c
 32932  01E28A  580A               	subwfb	(btemp+9)^0,w,c
 32933  01E28C  A0D8               	btfss	status,0,c
 32934  01E28E  D016               	goto	l10549
 32935                           
 32936                           ;stkvar	_divisor @ sp[(-4)+-4]
 32937                           ;stkvar	_dividend @ sp[(-4)+-2]
 32938  01E290  0EFA               	movlw	-6
 32939  01E292  50E3               	movf	plusw1,w,c
 32940  01E294  6E01               	movwf	btemp^0,c
 32941  01E296  0EF8               	movlw	-8
 32942  01E298  50E3               	movf	plusw1,w,c
 32943  01E29A  5E01               	subwf	btemp^0,f,c
 32944  01E29C  0EFA               	movlw	-6
 32945  01E29E  0060  F007  FFE3   	movff	btemp,plusw1
 32946  01E2A4  0EFB               	movlw	-5
 32947  01E2A6  50E3               	movf	plusw1,w,c
 32948  01E2A8  6E01               	movwf	btemp^0,c
 32949  01E2AA  0EF9               	movlw	-7
 32950  01E2AC  50E3               	movf	plusw1,w,c
 32951  01E2AE  5A01               	subwfb	btemp^0,f,c
 32952  01E2B0  0EFB               	movlw	-5
 32953  01E2B2  0060  F007  FFE3   	movff	btemp,plusw1
 32954                           
 32955                           ;stkvar	_quotient @ sp[(-4)+0]
 32956  01E2B8  0EFC               	movlw	-4
 32957  01E2BA  80E3               	bsf	plusw1,0,c
 32958  01E2BC                     l10549:
 32959                           
 32960                           ;stkvar	_divisor @ sp[(-4)+-4]
 32961  01E2BC  90D8               	bcf	status,0,c
 32962  01E2BE  0EF9               	movlw	-7
 32963  01E2C0  32E3               	rrcf	plusw1,f,c
 32964  01E2C2  0EF8               	movlw	-8
 32965  01E2C4  32E3               	rrcf	plusw1,f,c
 32966                           
 32967                           ;stkvar	_counter @ sp[(-4)+3]
 32968  01E2C6  0EFF               	movlw	-1
 32969  01E2C8  50E3               	movf	plusw1,w,c
 32970  01E2CA  6E01               	movwf	btemp^0,c
 32971  01E2CC  0E01               	movlw	1
 32972  01E2CE  5E01               	subwf	btemp^0,f,c
 32973  01E2D0  0EFF               	movlw	-1
 32974  01E2D2  0060  F007  FFE3   	movff	btemp,plusw1
 32975  01E2D8  A4D8               	btfss	status,2,c
 32976  01E2DA  D7B3               	goto	u8750
 32977  01E2DC                     u8770:
 32978                           
 32979                           ;stkvar	_sign @ sp[(-4)+2]
 32980  01E2DC  0EFE               	movlw	-2
 32981  01E2DE  50E3               	movf	plusw1,w,c
 32982  01E2E0  B4D8               	btfsc	status,2,c
 32983  01E2E2  D006               	goto	l10557
 32984                           
 32985                           ;stkvar	_quotient @ sp[(-4)+0]
 32986                           ;stkvar	_quotient @ sp[(-4)+0]
 32987  01E2E4  0EFC               	movlw	-4
 32988  01E2E6  6CE3               	negf	plusw1,c
 32989  01E2E8  0EFD               	movlw	-3
 32990  01E2EA  1EE3               	comf	plusw1,f,c
 32991  01E2EC  B0D8               	btfsc	status,0,c
 32992  01E2EE  2AE3               	incf	plusw1,f,c
 32993  01E2F0                     l10557:
 32994                           
 32995                           ;stkvar	_quotient @ sp[(-4)+0]
 32996  01E2F0  0EFC               	movlw	-4
 32997  01E2F2  006F FF8C  F001    	movff	plusw1,btemp
 32998  01E2F8  0EFD               	movlw	-3
 32999  01E2FA  006F FF8C  F002    	movff	plusw1,btemp+1
 33000                           
 33001                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33002  01E300  0EF8               	movlw	248
 33003  01E302  26E1               	addwf	fsr1l,f,c
 33004  01E304  0EFF               	movlw	255
 33005  01E306  22E2               	addwfc	fsr1h,f,c
 33006  01E308  0012               	return		;funcret
 33007  01E30A                     __end_of___awdiv:
 33008                           	opt callstack 0
 33009                           
 33010 ;; *************** function _dtoa *****************
 33011 ;; Defined at:
 33012 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33013 ;; Parameters:    Size  Location     Type
 33014 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33015 ;;		 -> f(6), NULL(0), 
 33016 ;;  d               8  [STACK] long long 
 33017 ;; Auto vars:     Size  Location     Type
 33018 ;;  n               8  [STACK] long long 
 33019 ;;  i               2  [STACK] int 
 33020 ;;  s               2  [STACK] int 
 33021 ;;  w               2  [STACK] int 
 33022 ;;  p               2  [STACK] int 
 33023 ;; Return value:  Size  Location     Type
 33024 ;;                  2  [STACK] int 
 33025 ;; Registers used:
 33026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33027 ;; Tracked objects:
 33028 ;;		On entry : 0/0
 33029 ;;		On exit  : 0/0
 33030 ;;		Unchanged: 0/0
 33031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;Total ram usage:        0 bytes
 33037 ;; Hardware stack levels used:    1
 33038 ;; Hardware stack levels required when called:   20
 33039 ;; This function calls:
 33040 ;;		___aodiv
 33041 ;;		___aomod
 33042 ;;		_abs
 33043 ;;		_pad
 33044 ;; This function is called by:
 33045 ;;		_vfpfcnvrt
 33046 ;; This function uses a reentrant model
 33047 ;;
 33048                           
 33049                           	psect	text111
 33050  0188B0                     __ptext111:
 33051                           	opt callstack 0
 33052  0188B0                     _dtoa:
 33053                           	opt callstack 0
 33054                           
 33055                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33056  0188B0  0E12               	movlw	18
 33057  0188B2  26E1               	addwf	fsr1l,f,c
 33058  0188B4  0E00               	movlw	0
 33059  0188B6  22E2               	addwfc	fsr1h,f,c
 33060                           
 33061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33062                           ;stkvar	_d @ sp[(-18)+-10]
 33063                           
 33064                           ;incstack = 0
 33065 ;; hardware stack exceeded
 33066  0188B8  0EE4               	movlw	228
 33067  0188BA  24E1               	addwf	fsr1l,w,c
 33068  0188BC  6ED9               	movwf	fsr2l,c
 33069  0188BE  0EFF               	movlw	255
 33070  0188C0  20E2               	addwfc	fsr1h,w,c
 33071  0188C2  6EDA               	movwf	fsr2h,c
 33072                           
 33073                           ;stkvar	_n @ sp[(-18)+2]
 33074  0188C4  0E08               	movlw	8
 33075  0188C6  6E01               	movwf	btemp^0,c
 33076  0188C8  0EF0               	movlw	-16
 33077  0188CA                     us1424999:
 33078  0188CA  006F FF7B FFE3     	movff	postinc2,plusw1
 33079  0188D0  28E8               	incf	wreg,w,c
 33080  0188D2  2E01               	decfsz	btemp^0,f,c
 33081  0188D4  D7FA               	bra	us1424999
 33082                           
 33083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33084                           ;stkvar	_n @ sp[(-18)+2]
 33085  0188D6  0EF7               	movlw	-9
 33086  0188D8  AEE3               	btfss	plusw1,7,c
 33087  0188DA  D002               	goto	u14250
 33088  0188DC  0E01               	movlw	1
 33089  0188DE  D001               	goto	u14260
 33090  0188E0                     u14250:
 33091  0188E0  0E00               	movlw	0
 33092  0188E2                     u14260:
 33093  0188E2  6E0B               	movwf	(btemp+10)^0,c
 33094  0188E4  6A0C               	clrf	(btemp+11)^0,c
 33095                           
 33096                           ;stkvar	_s @ sp[(-18)+12]
 33097  0188E6  0EFA               	movlw	-6
 33098  0188E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33099  0188EE  0EFB               	movlw	-5
 33100  0188F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 33101                           
 33102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33103                           ;stkvar	_s @ sp[(-18)+12]
 33104  0188F6  0EFA               	movlw	-6
 33105  0188F8  006F FF8C  F001    	movff	plusw1,btemp
 33106  0188FE  0EFB               	movlw	-5
 33107  018900  50E3               	movf	plusw1,w,c
 33108  018902  1001               	iorwf	btemp^0,w,c
 33109  018904  B4D8               	btfsc	status,2,c
 33110  018906  D025               	goto	u14280
 33111                           
 33112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33113                           ;stkvar	_n @ sp[(-18)+2]
 33114                           ;stkvar	_n @ sp[(-18)+2]
 33115  018908  0EF0               	movlw	-16
 33116  01890A  6CE3               	negf	plusw1,c
 33117  01890C  0EF1               	movlw	-15
 33118  01890E  1EE3               	comf	plusw1,f,c
 33119  018910  0EF2               	movlw	-14
 33120  018912  1EE3               	comf	plusw1,f,c
 33121  018914  0EF3               	movlw	-13
 33122  018916  1EE3               	comf	plusw1,f,c
 33123  018918  0EF4               	movlw	-12
 33124  01891A  1EE3               	comf	plusw1,f,c
 33125  01891C  0EF5               	movlw	-11
 33126  01891E  1EE3               	comf	plusw1,f,c
 33127  018920  0EF6               	movlw	-10
 33128  018922  1EE3               	comf	plusw1,f,c
 33129  018924  0EF7               	movlw	-9
 33130  018926  1EE3               	comf	plusw1,f,c
 33131  018928  E314               	bnc	u14280
 33132  01892A  0EF1               	movlw	-15
 33133  01892C  2AE3               	incf	plusw1,f,c
 33134  01892E  E311               	bnc	u14280
 33135  018930  0EF2               	movlw	-14
 33136  018932  2AE3               	incf	plusw1,f,c
 33137  018934  E30E               	bnc	u14280
 33138  018936  0EF3               	movlw	-13
 33139  018938  2AE3               	incf	plusw1,f,c
 33140  01893A  E30B               	bnc	u14280
 33141  01893C  0EF4               	movlw	-12
 33142  01893E  2AE3               	incf	plusw1,f,c
 33143  018940  E308               	bnc	u14280
 33144  018942  0EF5               	movlw	-11
 33145  018944  2AE3               	incf	plusw1,f,c
 33146  018946  E305               	bnc	u14280
 33147  018948  0EF6               	movlw	-10
 33148  01894A  2AE3               	incf	plusw1,f,c
 33149  01894C  E302               	bnc	u14280
 33150  01894E  0EF7               	movlw	-9
 33151  018950  2AE3               	incf	plusw1,f,c
 33152  018952                     u14280:
 33153                           
 33154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33155  018952  AE3D               	btfss	(_prec+1)^0,7,c
 33156                           
 33157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33158  018954  923E               	bcf	_flags^0,1,c
 33159                           
 33160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33161  018956  BE3D               	btfsc	(_prec+1)^0,7,c
 33162  018958  D005               	goto	u14300
 33163  01895A  503D               	movf	(_prec+1)^0,w,c
 33164  01895C  E110               	bnz	l15291
 33165  01895E  043C               	decf	_prec^0,w,c
 33166  018960  B0D8               	btfsc	status,0,c
 33167  018962  D00D               	goto	l15291
 33168  018964                     u14300:
 33169  018964  0E01               	movlw	1
 33170  018966  6E0B               	movwf	(btemp+10)^0,c
 33171  018968  0E00               	movlw	0
 33172  01896A  6E0C               	movwf	(btemp+11)^0,c
 33173                           
 33174                           ;stkvar	_p @ sp[(-18)+16]
 33175  01896C  0EFE               	movlw	-2
 33176  01896E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33177  018974  0EFF               	movlw	-1
 33178  018976  0060  F033  FFE3   	movff	btemp+11,plusw1
 33179  01897C  D008               	goto	l2460
 33180  01897E                     l15291:
 33181                           
 33182                           ;stkvar	_p @ sp[(-18)+16]
 33183  01897E  0EFE               	movlw	-2
 33184  018980  0060  F0F3  FFE3   	movff	_prec,plusw1
 33185  018986  0EFF               	movlw	-1
 33186  018988  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 33187  01898E                     l2460:
 33188                           
 33189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 33190                           ;stkvar	_w @ sp[(-18)+14]
 33191  01898E  0EFC               	movlw	-4
 33192  018990  0060  F0EB  FFE3   	movff	_width,plusw1
 33193  018996  0EFD               	movlw	-3
 33194  018998  0060  F0EF  FFE3   	movff	_width+1,plusw1
 33195                           
 33196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 33197                           ;stkvar	_s @ sp[(-18)+12]
 33198  01899E  0EFA               	movlw	-6
 33199  0189A0  006F FF8C  F001    	movff	plusw1,btemp
 33200  0189A6  0EFB               	movlw	-5
 33201  0189A8  50E3               	movf	plusw1,w,c
 33202  0189AA  1001               	iorwf	btemp^0,w,c
 33203  0189AC  A4D8               	btfss	status,2,c
 33204  0189AE  D002               	goto	u14320
 33205  0189B0  A43E               	btfss	_flags^0,2,c
 33206  0189B2  D00A               	goto	l15299
 33207  0189B4                     u14320:
 33208                           
 33209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 33210                           ;stkvar	_w @ sp[(-18)+14]
 33211  0189B4  50E1               	movf	fsr1l,w,c
 33212  0189B6  0FFC               	addlw	-4
 33213  0189B8  6ED9               	movwf	fsr2l,c
 33214  0189BA  50E2               	movf	fsr1h,w,c
 33215  0189BC  6EDA               	movwf	fsr2h,c
 33216  0189BE  0EFF               	movlw	255
 33217  0189C0  22DA               	addwfc	fsr2h,f,c
 33218  0189C2  06DE               	decf	postinc2,f,c
 33219  0189C4  0E00               	movlw	0
 33220  0189C6  5ADD               	subwfb	postdec2,f,c
 33221  0189C8                     l15299:
 33222                           
 33223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 33224  0189C8  0E4F               	movlw	79
 33225  0189CA  6E0B               	movwf	(btemp+10)^0,c
 33226  0189CC  0E00               	movlw	0
 33227  0189CE  6E0C               	movwf	(btemp+11)^0,c
 33228                           
 33229                           ;stkvar	_i @ sp[(-18)+10]
 33230  0189D0  0EF8               	movlw	-8
 33231  0189D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33232  0189D8  0EF9               	movlw	-7
 33233  0189DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 33234                           
 33235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 33236  0189E0  0103               	movlb	3	; () banked
 33237  0189E2  6BA3               	clrf	(_dbuf+79)& (0+255),b
 33238                           
 33239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33240  0189E4  D109               	goto	l15313
 33241  0189E6                     l15303:
 33242                           
 33243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 33244                           ;stkvar	_i @ sp[(-18)+10]
 33245  0189E6  50E1               	movf	fsr1l,w,c
 33246  0189E8  0FF8               	addlw	-8
 33247  0189EA  6ED9               	movwf	fsr2l,c
 33248  0189EC  50E2               	movf	fsr1h,w,c
 33249  0189EE  6EDA               	movwf	fsr2h,c
 33250  0189F0  0EFF               	movlw	255
 33251  0189F2  22DA               	addwfc	fsr2h,f,c
 33252  0189F4  06DE               	decf	postinc2,f,c
 33253  0189F6  0E00               	movlw	0
 33254  0189F8  5ADD               	subwfb	postdec2,f,c
 33255                           
 33256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 33257  0189FA  0E0A               	movlw	10
 33258  0189FC  6EE6               	movwf	postinc1,c
 33259  0189FE  0E00               	movlw	0
 33260  018A00  6EE6               	movwf	postinc1,c
 33261  018A02  0E00               	movlw	0
 33262  018A04  6EE6               	movwf	postinc1,c
 33263  018A06  0E00               	movlw	0
 33264  018A08  6EE6               	movwf	postinc1,c
 33265  018A0A  0E00               	movlw	0
 33266  018A0C  6EE6               	movwf	postinc1,c
 33267  018A0E  0E00               	movlw	0
 33268  018A10  6EE6               	movwf	postinc1,c
 33269  018A12  0E00               	movlw	0
 33270  018A14  6EE6               	movwf	postinc1,c
 33271  018A16  0E00               	movlw	0
 33272  018A18  6EE6               	movwf	postinc1,c
 33273                           
 33274                           ;stkvar	_n @ sp[(-26)+2]
 33275  018A1A  50E1               	movf	fsr1l,w,c
 33276  018A1C  0FE8               	addlw	-24
 33277  018A1E  6ED9               	movwf	fsr2l,c
 33278  018A20  50E2               	movf	fsr1h,w,c
 33279  018A22  6EDA               	movwf	fsr2h,c
 33280  018A24  0EFF               	movlw	255
 33281  018A26  22DA               	addwfc	fsr2h,f,c
 33282  018A28  006F FF7B FFE6     	movff	postinc2,postinc1
 33283  018A2E  006F FF7B FFE6     	movff	postinc2,postinc1
 33284  018A34  006F FF7B FFE6     	movff	postinc2,postinc1
 33285  018A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 33286  018A40  006F FF7B FFE6     	movff	postinc2,postinc1
 33287  018A46  006F FF7B FFE6     	movff	postinc2,postinc1
 33288  018A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 33289  018A52  006F FF7B FFE6     	movff	postinc2,postinc1
 33290  018A58  ECE9  F0DE         	call	___aomod	;wreg free
 33291  018A5C  52E5               	movf	postdec1,f,c
 33292  018A5E  006F FF9C  F018    	movff	indf1,btemp+23
 33293  018A64  52E5               	movf	postdec1,f,c
 33294  018A66  006F FF9C  F017    	movff	indf1,btemp+22
 33295  018A6C  52E5               	movf	postdec1,f,c
 33296  018A6E  006F FF9C  F016    	movff	indf1,btemp+21
 33297  018A74  52E5               	movf	postdec1,f,c
 33298  018A76  006F FF9C  F015    	movff	indf1,btemp+20
 33299  018A7C  52E5               	movf	postdec1,f,c
 33300  018A7E  006F FF9C  F014    	movff	indf1,btemp+19
 33301  018A84  52E5               	movf	postdec1,f,c
 33302  018A86  006F FF9C  F013    	movff	indf1,btemp+18
 33303  018A8C  52E5               	movf	postdec1,f,c
 33304  018A8E  006F FF9C  F012    	movff	indf1,btemp+17
 33305  018A94  52E5               	movf	postdec1,f,c
 33306  018A96  006F FF9C  F011    	movff	indf1,btemp+16
 33307  018A9C  0EF8               	movlw	248
 33308  018A9E  26E1               	addwf	fsr1l,f,c
 33309  018AA0  0EFF               	movlw	255
 33310  018AA2  22E2               	addwfc	fsr1h,f,c
 33311  018AA4  0060  F044  F00B   	movff	btemp+16,btemp+10
 33312  018AAA  0060  F048  F00C   	movff	btemp+17,btemp+11
 33313  018AB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33314  018AB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 33315  018ABC  ECF1  F008         	call	_abs	;wreg free
 33316  018AC0  0E30               	movlw	48
 33317  018AC2  2601               	addwf	btemp^0,f,c
 33318                           
 33319                           ;stkvar	_i @ sp[(-18)+10]
 33320  018AC4  0EF8               	movlw	-8
 33321  018AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 33322  018ACC  0EF9               	movlw	-7
 33323  018ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 33324  018AD4  0E54               	movlw	low _dbuf
 33325  018AD6  240B               	addwf	(btemp+10)^0,w,c
 33326  018AD8  6ED9               	movwf	fsr2l,c
 33327  018ADA  0E03               	movlw	high _dbuf
 33328  018ADC  200C               	addwfc	(btemp+11)^0,w,c
 33329  018ADE  6EDA               	movwf	fsr2h,c
 33330  018AE0  0060  F007  FFDF   	movff	btemp,indf2
 33331                           
 33332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 33333                           ;stkvar	_p @ sp[(-18)+16]
 33334  018AE6  50E1               	movf	fsr1l,w,c
 33335  018AE8  0FFE               	addlw	-2
 33336  018AEA  6ED9               	movwf	fsr2l,c
 33337  018AEC  50E2               	movf	fsr1h,w,c
 33338  018AEE  6EDA               	movwf	fsr2h,c
 33339  018AF0  0EFF               	movlw	255
 33340  018AF2  22DA               	addwfc	fsr2h,f,c
 33341  018AF4  06DE               	decf	postinc2,f,c
 33342  018AF6  0E00               	movlw	0
 33343  018AF8  5ADD               	subwfb	postdec2,f,c
 33344                           
 33345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 33346                           ;stkvar	_w @ sp[(-18)+14]
 33347  018AFA  50E1               	movf	fsr1l,w,c
 33348  018AFC  0FFC               	addlw	-4
 33349  018AFE  6ED9               	movwf	fsr2l,c
 33350  018B00  50E2               	movf	fsr1h,w,c
 33351  018B02  6EDA               	movwf	fsr2h,c
 33352  018B04  0EFF               	movlw	255
 33353  018B06  22DA               	addwfc	fsr2h,f,c
 33354  018B08  06DE               	decf	postinc2,f,c
 33355  018B0A  0E00               	movlw	0
 33356  018B0C  5ADD               	subwfb	postdec2,f,c
 33357                           
 33358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 33359  018B0E  0E0A               	movlw	10
 33360  018B10  6EE6               	movwf	postinc1,c
 33361  018B12  0E00               	movlw	0
 33362  018B14  6EE6               	movwf	postinc1,c
 33363  018B16  0E00               	movlw	0
 33364  018B18  6EE6               	movwf	postinc1,c
 33365  018B1A  0E00               	movlw	0
 33366  018B1C  6EE6               	movwf	postinc1,c
 33367  018B1E  0E00               	movlw	0
 33368  018B20  6EE6               	movwf	postinc1,c
 33369  018B22  0E00               	movlw	0
 33370  018B24  6EE6               	movwf	postinc1,c
 33371  018B26  0E00               	movlw	0
 33372  018B28  6EE6               	movwf	postinc1,c
 33373  018B2A  0E00               	movlw	0
 33374  018B2C  6EE6               	movwf	postinc1,c
 33375                           
 33376                           ;stkvar	_n @ sp[(-26)+2]
 33377  018B2E  50E1               	movf	fsr1l,w,c
 33378  018B30  0FE8               	addlw	-24
 33379  018B32  6ED9               	movwf	fsr2l,c
 33380  018B34  50E2               	movf	fsr1h,w,c
 33381  018B36  6EDA               	movwf	fsr2h,c
 33382  018B38  0EFF               	movlw	255
 33383  018B3A  22DA               	addwfc	fsr2h,f,c
 33384  018B3C  006F FF7B FFE6     	movff	postinc2,postinc1
 33385  018B42  006F FF7B FFE6     	movff	postinc2,postinc1
 33386  018B48  006F FF7B FFE6     	movff	postinc2,postinc1
 33387  018B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 33388  018B54  006F FF7B FFE6     	movff	postinc2,postinc1
 33389  018B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 33390  018B60  006F FF7B FFE6     	movff	postinc2,postinc1
 33391  018B66  006F FF7B FFE6     	movff	postinc2,postinc1
 33392  018B6C  EC19  F0DA         	call	___aodiv	;wreg free
 33393  018B70  52E5               	movf	postdec1,f,c
 33394  018B72  006F FF9C  F018    	movff	indf1,btemp+23
 33395  018B78  52E5               	movf	postdec1,f,c
 33396  018B7A  006F FF9C  F017    	movff	indf1,btemp+22
 33397  018B80  52E5               	movf	postdec1,f,c
 33398  018B82  006F FF9C  F016    	movff	indf1,btemp+21
 33399  018B88  52E5               	movf	postdec1,f,c
 33400  018B8A  006F FF9C  F015    	movff	indf1,btemp+20
 33401  018B90  52E5               	movf	postdec1,f,c
 33402  018B92  006F FF9C  F014    	movff	indf1,btemp+19
 33403  018B98  52E5               	movf	postdec1,f,c
 33404  018B9A  006F FF9C  F013    	movff	indf1,btemp+18
 33405  018BA0  52E5               	movf	postdec1,f,c
 33406  018BA2  006F FF9C  F012    	movff	indf1,btemp+17
 33407  018BA8  52E5               	movf	postdec1,f,c
 33408  018BAA  006F FF9C  F011    	movff	indf1,btemp+16
 33409  018BB0  0EF8               	movlw	248
 33410  018BB2  26E1               	addwf	fsr1l,f,c
 33411  018BB4  0EFF               	movlw	255
 33412  018BB6  22E2               	addwfc	fsr1h,f,c
 33413                           
 33414                           ;stkvar	_n @ sp[(-18)+2]
 33415  018BB8  0EF0               	movlw	-16
 33416  018BBA  0060  F047  FFE3   	movff	btemp+16,plusw1
 33417  018BC0  0EF1               	movlw	-15
 33418  018BC2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 33419  018BC8  0EF2               	movlw	-14
 33420  018BCA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 33421  018BD0  0EF3               	movlw	-13
 33422  018BD2  0060  F053  FFE3   	movff	btemp+19,plusw1
 33423  018BD8  0EF4               	movlw	-12
 33424  018BDA  0060  F057  FFE3   	movff	btemp+20,plusw1
 33425  018BE0  0EF5               	movlw	-11
 33426  018BE2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 33427  018BE8  0EF6               	movlw	-10
 33428  018BEA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 33429  018BF0  0EF7               	movlw	-9
 33430  018BF2  0060  F063  FFE3   	movff	btemp+23,plusw1
 33431  018BF8                     l15313:
 33432                           
 33433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33434                           ;stkvar	_i @ sp[(-18)+10]
 33435  018BF8  0EF9               	movlw	-7
 33436  018BFA  BEE3               	btfsc	plusw1,7,c
 33437  018BFC  D036               	goto	u14370
 33438  018BFE  0EF9               	movlw	-7
 33439  018C00  50E3               	movf	plusw1,w,c
 33440  018C02  E104               	bnz	u14330
 33441  018C04  0EF8               	movlw	-8
 33442  018C06  04E3               	decf	plusw1,w,c
 33443  018C08  A0D8               	btfss	status,0,c
 33444  018C0A  D02F               	goto	u14370
 33445  018C0C                     u14330:
 33446                           
 33447                           ;stkvar	_n @ sp[(-18)+2]
 33448  018C0C  0EF0               	movlw	-16
 33449  018C0E  50E3               	movf	plusw1,w,c
 33450  018C10  E115               	bnz	u14341
 33451  018C12  0EF1               	movlw	-15
 33452  018C14  50E3               	movf	plusw1,w,c
 33453  018C16  E112               	bnz	u14341
 33454  018C18  0EF2               	movlw	-14
 33455  018C1A  50E3               	movf	plusw1,w,c
 33456  018C1C  E10F               	bnz	u14341
 33457  018C1E  0EF3               	movlw	-13
 33458  018C20  50E3               	movf	plusw1,w,c
 33459  018C22  E10C               	bnz	u14341
 33460  018C24  0EF4               	movlw	-12
 33461  018C26  50E3               	movf	plusw1,w,c
 33462  018C28  E109               	bnz	u14341
 33463  018C2A  0EF5               	movlw	-11
 33464  018C2C  50E3               	movf	plusw1,w,c
 33465  018C2E  E106               	bnz	u14341
 33466  018C30  0EF6               	movlw	-10
 33467  018C32  50E3               	movf	plusw1,w,c
 33468  018C34  E103               	bnz	u14341
 33469  018C36  0EF7               	movlw	-9
 33470  018C38  50E3               	movf	plusw1,w,c
 33471  018C3A  A4D8               	btfss	status,2,c
 33472  018C3C                     u14341:
 33473  018C3C  D6D4               	goto	l15303
 33474                           
 33475                           ;stkvar	_p @ sp[(-18)+16]
 33476  018C3E  0EFF               	movlw	-1
 33477  018C40  BEE3               	btfsc	plusw1,7,c
 33478  018C42  D007               	goto	u14350
 33479  018C44  0EFF               	movlw	-1
 33480  018C46  50E3               	movf	plusw1,w,c
 33481  018C48  E103               	bnz	u14351
 33482  018C4A  0EFE               	movlw	-2
 33483  018C4C  04E3               	decf	plusw1,w,c
 33484  018C4E  B0D8               	btfsc	status,0,c
 33485  018C50                     u14351:
 33486  018C50  D6CA               	goto	l15303
 33487  018C52                     u14350:
 33488                           
 33489                           ;stkvar	_w @ sp[(-18)+14]
 33490  018C52  0EFD               	movlw	-3
 33491  018C54  BEE3               	btfsc	plusw1,7,c
 33492  018C56  D009               	goto	u14370
 33493  018C58  0EFD               	movlw	-3
 33494  018C5A  50E3               	movf	plusw1,w,c
 33495  018C5C  E104               	bnz	u14360
 33496  018C5E  0EFC               	movlw	-4
 33497  018C60  04E3               	decf	plusw1,w,c
 33498  018C62  A0D8               	btfss	status,0,c
 33499  018C64  D002               	goto	u14370
 33500  018C66                     u14360:
 33501  018C66  B23E               	btfsc	_flags^0,1,c
 33502  018C68  D6BE               	goto	l15303
 33503  018C6A                     u14370:
 33504                           
 33505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 33506                           ;stkvar	_s @ sp[(-18)+12]
 33507  018C6A  0EFA               	movlw	-6
 33508  018C6C  006F FF8C  F001    	movff	plusw1,btemp
 33509  018C72  0EFB               	movlw	-5
 33510  018C74  50E3               	movf	plusw1,w,c
 33511  018C76  1001               	iorwf	btemp^0,w,c
 33512  018C78  A4D8               	btfss	status,2,c
 33513  018C7A  D002               	goto	u14390
 33514  018C7C  A43E               	btfss	_flags^0,2,c
 33515  018C7E  D033               	goto	l15337
 33516  018C80                     u14390:
 33517                           
 33518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 33519                           ;stkvar	_i @ sp[(-18)+10]
 33520  018C80  50E1               	movf	fsr1l,w,c
 33521  018C82  0FF8               	addlw	-8
 33522  018C84  6ED9               	movwf	fsr2l,c
 33523  018C86  50E2               	movf	fsr1h,w,c
 33524  018C88  6EDA               	movwf	fsr2h,c
 33525  018C8A  0EFF               	movlw	255
 33526  018C8C  22DA               	addwfc	fsr2h,f,c
 33527  018C8E  06DE               	decf	postinc2,f,c
 33528  018C90  0E00               	movlw	0
 33529  018C92  5ADD               	subwfb	postdec2,f,c
 33530                           
 33531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 33532                           ;stkvar	_s @ sp[(-18)+12]
 33533  018C94  0EFA               	movlw	-6
 33534  018C96  006F FF8C  F001    	movff	plusw1,btemp
 33535  018C9C  0EFB               	movlw	-5
 33536  018C9E  50E3               	movf	plusw1,w,c
 33537  018CA0  1001               	iorwf	btemp^0,w,c
 33538  018CA2  A4D8               	btfss	status,2,c
 33539  018CA4  D002               	goto	l15333
 33540  018CA6  0E2B               	movlw	43
 33541  018CA8  D001               	goto	L38
 33542  018CAA                     l15333:
 33543  018CAA  0E2D               	movlw	45
 33544  018CAC                     L38:
 33545  018CAC  6E0B               	movwf	(btemp+10)^0,c
 33546  018CAE  0E00               	movlw	0
 33547  018CB0  6E0C               	movwf	(btemp+11)^0,c
 33548                           
 33549                           ;stkvar	_dtoa$6804 @ sp[(-18)+0]
 33550  018CB2  0EEE               	movlw	-18
 33551  018CB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33552  018CBA  0EEF               	movlw	-17
 33553  018CBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 33554                           
 33555                           ;stkvar	_dtoa$6804 @ sp[(-18)+0]
 33556                           ;stkvar	_i @ sp[(-18)+10]
 33557  018CC2  0EF8               	movlw	-8
 33558  018CC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 33559  018CCA  0EF9               	movlw	-7
 33560  018CCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 33561  018CD2  0E54               	movlw	low _dbuf
 33562  018CD4  240B               	addwf	(btemp+10)^0,w,c
 33563  018CD6  6ED9               	movwf	fsr2l,c
 33564  018CD8  0E03               	movlw	high _dbuf
 33565  018CDA  200C               	addwfc	(btemp+11)^0,w,c
 33566  018CDC  6EDA               	movwf	fsr2h,c
 33567  018CDE  0EEE               	movlw	-18
 33568  018CE0  006F FF8F FFDF     	movff	plusw1,indf2
 33569  018CE6                     l15337:
 33570                           
 33571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 33572                           ;stkvar	_w @ sp[(-18)+14]
 33573  018CE6  0EFC               	movlw	-4
 33574  018CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 33575  018CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 33576                           
 33577                           ;stkvar	_i @ sp[(-20)+10]
 33578  018CF4  0E54               	movlw	low _dbuf
 33579  018CF6  6E0B               	movwf	(btemp+10)^0,c
 33580  018CF8  0E03               	movlw	high _dbuf
 33581  018CFA  6E0C               	movwf	(btemp+11)^0,c
 33582  018CFC  0EF6               	movlw	-10
 33583  018CFE  50E3               	movf	plusw1,w,c
 33584  018D00  260B               	addwf	(btemp+10)^0,f,c
 33585  018D02  0EF7               	movlw	-9
 33586  018D04  50E3               	movf	plusw1,w,c
 33587  018D06  220C               	addwfc	(btemp+11)^0,f,c
 33588  018D08  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33589  018D0E  0060  F033  FFE6   	movff	btemp+11,postinc1
 33590                           
 33591                           ;stkvar	_fp @ sp[(-22)+-2]
 33592  018D14  0EE8               	movlw	-24
 33593  018D16  006F FF8F FFE6     	movff	plusw1,postinc1
 33594  018D1C  006F FF8F FFE6     	movff	plusw1,postinc1
 33595  018D22  EC30  F0F6         	call	_pad	;wreg free
 33596                           
 33597                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 33598  018D26  0EE4               	movlw	228
 33599  018D28  26E1               	addwf	fsr1l,f,c
 33600  018D2A  0EFF               	movlw	255
 33601  018D2C  22E2               	addwfc	fsr1h,f,c
 33602  018D2E  0012               	return		;funcret
 33603  018D30                     __end_of_dtoa:
 33604                           	opt callstack 0
 33605                           
 33606 ;; *************** function _abs *****************
 33607 ;; Defined at:
 33608 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 33609 ;; Parameters:    Size  Location     Type
 33610 ;;  a               2  [STACK] int 
 33611 ;; Auto vars:     Size  Location     Type
 33612 ;;		None
 33613 ;; Return value:  Size  Location     Type
 33614 ;;                  2  [STACK] int 
 33615 ;; Registers used:
 33616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 33617 ;; Tracked objects:
 33618 ;;		On entry : 0/3
 33619 ;;		On exit  : 0/0
 33620 ;;		Unchanged: 0/0
 33621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33626 ;;Total ram usage:        0 bytes
 33627 ;; Hardware stack levels used:    1
 33628 ;; Hardware stack levels required when called:   15
 33629 ;; This function calls:
 33630 ;;		Nothing
 33631 ;; This function is called by:
 33632 ;;		_dtoa
 33633 ;; This function uses a reentrant model
 33634 ;;
 33635                           
 33636                           	psect	text112
 33637  0011E2                     __ptext112:
 33638                           	opt callstack 0
 33639  0011E2                     _abs:
 33640                           	opt callstack 0
 33641                           
 33642                           ;stkvar	_a @ sp[(0)+-2]
 33643                           
 33644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33645                           ;incstack = 0
 33646 ;; hardware stack exceeded
 33647  0011E2  0EFF               	movlw	-1
 33648  0011E4  BEE3               	btfsc	plusw1,7,c
 33649  0011E6  D007               	goto	u7670
 33650  0011E8  0EFF               	movlw	-1
 33651  0011EA  50E3               	movf	plusw1,w,c
 33652  0011EC  E112               	bnz	l9985
 33653  0011EE  0EFE               	movlw	-2
 33654  0011F0  04E3               	decf	plusw1,w,c
 33655  0011F2  B0D8               	btfsc	status,0,c
 33656  0011F4  D00E               	goto	l9985
 33657  0011F6                     u7670:
 33658                           
 33659                           ;stkvar	_a @ sp[(0)+-2]
 33660  0011F6  0EFE               	movlw	-2
 33661  0011F8  006F FF8C  F001    	movff	plusw1,btemp
 33662  0011FE  1E01               	comf	btemp^0,f,c
 33663  001200  0EFF               	movlw	-1
 33664  001202  006F FF8C  F002    	movff	plusw1,btemp+1
 33665  001208  1E02               	comf	(btemp+1)^0,f,c
 33666  00120A  2A01               	incf	btemp^0,f,c
 33667  00120C  B4D8               	btfsc	status,2,c
 33668  00120E  2A02               	incf	(btemp+1)^0,f,c
 33669  001210  D008               	goto	l3386
 33670  001212                     l9985:
 33671                           
 33672                           ;stkvar	_a @ sp[(0)+-2]
 33673  001212  0EFE               	movlw	-2
 33674  001214  006F FF8C  F001    	movff	plusw1,btemp
 33675  00121A  0EFF               	movlw	-1
 33676  00121C  006F FF8C  F002    	movff	plusw1,btemp+1
 33677  001222                     l3386:
 33678                           
 33679                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 33680  001222  52E5               	movf	postdec1,f,c
 33681  001224  52E5               	movf	postdec1,f,c
 33682  001226  0012               	return		;funcret
 33683  001228                     __end_of_abs:
 33684                           	opt callstack 0
 33685                           
 33686 ;; *************** function ___aomod *****************
 33687 ;; Defined at:
 33688 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 33689 ;; Parameters:    Size  Location     Type
 33690 ;;  dividend        8  [STACK] long long 
 33691 ;;  divisor         8  [STACK] long long 
 33692 ;; Auto vars:     Size  Location     Type
 33693 ;;  sign            1  [STACK] unsigned char 
 33694 ;;  counter         1  [STACK] unsigned char 
 33695 ;; Return value:  Size  Location     Type
 33696 ;;                  8  [STACK] long long 
 33697 ;; Registers used:
 33698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 33699 ;; Tracked objects:
 33700 ;;		On entry : 0/0
 33701 ;;		On exit  : 0/0
 33702 ;;		Unchanged: 0/0
 33703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33708 ;;Total ram usage:        0 bytes
 33709 ;; Hardware stack levels used:    1
 33710 ;; Hardware stack levels required when called:   15
 33711 ;; This function calls:
 33712 ;;		Nothing
 33713 ;; This function is called by:
 33714 ;;		_dtoa
 33715 ;;		___secs_to_tm
 33716 ;;		_rule_to_secs
 33717 ;;		___year_to_secs
 33718 ;; This function uses a reentrant model
 33719 ;;
 33720                           
 33721                           	psect	text113
 33722  01BDD2                     __ptext113:
 33723                           	opt callstack 0
 33724  01BDD2                     ___aomod:
 33725                           	opt callstack 0
 33726                           
 33727                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 33728  01BDD2  52E6               	movf	postinc1,f,c
 33729  01BDD4  52E6               	movf	postinc1,f,c
 33730                           
 33731                           ;stkvar	_sign @ sp[(-2)+0]
 33732                           
 33733                           ;incstack = 0
 33734 ;; hardware stack exceeded
 33735  01BDD6  0EFE               	movlw	-2
 33736  01BDD8  6AE3               	clrf	plusw1,c
 33737                           
 33738                           ;stkvar	_dividend @ sp[(-2)+-8]
 33739  01BDDA  0EFD               	movlw	-3
 33740  01BDDC  AEE3               	btfss	plusw1,7,c
 33741  01BDDE  D028               	goto	l10169
 33742                           
 33743                           ;stkvar	_dividend @ sp[(-2)+-8]
 33744                           ;stkvar	_dividend @ sp[(-2)+-8]
 33745  01BDE0  0EF6               	movlw	-10
 33746  01BDE2  6CE3               	negf	plusw1,c
 33747  01BDE4  0EF7               	movlw	-9
 33748  01BDE6  1EE3               	comf	plusw1,f,c
 33749  01BDE8  0EF8               	movlw	-8
 33750  01BDEA  1EE3               	comf	plusw1,f,c
 33751  01BDEC  0EF9               	movlw	-7
 33752  01BDEE  1EE3               	comf	plusw1,f,c
 33753  01BDF0  0EFA               	movlw	-6
 33754  01BDF2  1EE3               	comf	plusw1,f,c
 33755  01BDF4  0EFB               	movlw	-5
 33756  01BDF6  1EE3               	comf	plusw1,f,c
 33757  01BDF8  0EFC               	movlw	-4
 33758  01BDFA  1EE3               	comf	plusw1,f,c
 33759  01BDFC  0EFD               	movlw	-3
 33760  01BDFE  1EE3               	comf	plusw1,f,c
 33761  01BE00  E314               	bnc	u8160
 33762  01BE02  0EF7               	movlw	-9
 33763  01BE04  2AE3               	incf	plusw1,f,c
 33764  01BE06  E311               	bnc	u8160
 33765  01BE08  0EF8               	movlw	-8
 33766  01BE0A  2AE3               	incf	plusw1,f,c
 33767  01BE0C  E30E               	bnc	u8160
 33768  01BE0E  0EF9               	movlw	-7
 33769  01BE10  2AE3               	incf	plusw1,f,c
 33770  01BE12  E30B               	bnc	u8160
 33771  01BE14  0EFA               	movlw	-6
 33772  01BE16  2AE3               	incf	plusw1,f,c
 33773  01BE18  E308               	bnc	u8160
 33774  01BE1A  0EFB               	movlw	-5
 33775  01BE1C  2AE3               	incf	plusw1,f,c
 33776  01BE1E  E305               	bnc	u8160
 33777  01BE20  0EFC               	movlw	-4
 33778  01BE22  2AE3               	incf	plusw1,f,c
 33779  01BE24  E302               	bnc	u8160
 33780  01BE26  0EFD               	movlw	-3
 33781  01BE28  2AE3               	incf	plusw1,f,c
 33782  01BE2A                     u8160:
 33783                           
 33784                           ;stkvar	_sign @ sp[(-2)+0]
 33785  01BE2A  0EFE               	movlw	-2
 33786  01BE2C  6AE3               	clrf	plusw1,c
 33787  01BE2E  2AE3               	incf	plusw1,f,c
 33788  01BE30                     l10169:
 33789                           
 33790                           ;stkvar	_divisor @ sp[(-2)+-16]
 33791  01BE30  0EF5               	movlw	-11
 33792  01BE32  AEE3               	btfss	plusw1,7,c
 33793  01BE34  D025               	goto	u8180
 33794                           
 33795                           ;stkvar	_divisor @ sp[(-2)+-16]
 33796                           ;stkvar	_divisor @ sp[(-2)+-16]
 33797  01BE36  0EEE               	movlw	-18
 33798  01BE38  6CE3               	negf	plusw1,c
 33799  01BE3A  0EEF               	movlw	-17
 33800  01BE3C  1EE3               	comf	plusw1,f,c
 33801  01BE3E  0EF0               	movlw	-16
 33802  01BE40  1EE3               	comf	plusw1,f,c
 33803  01BE42  0EF1               	movlw	-15
 33804  01BE44  1EE3               	comf	plusw1,f,c
 33805  01BE46  0EF2               	movlw	-14
 33806  01BE48  1EE3               	comf	plusw1,f,c
 33807  01BE4A  0EF3               	movlw	-13
 33808  01BE4C  1EE3               	comf	plusw1,f,c
 33809  01BE4E  0EF4               	movlw	-12
 33810  01BE50  1EE3               	comf	plusw1,f,c
 33811  01BE52  0EF5               	movlw	-11
 33812  01BE54  1EE3               	comf	plusw1,f,c
 33813  01BE56  E314               	bnc	u8180
 33814  01BE58  0EEF               	movlw	-17
 33815  01BE5A  2AE3               	incf	plusw1,f,c
 33816  01BE5C  E311               	bnc	u8180
 33817  01BE5E  0EF0               	movlw	-16
 33818  01BE60  2AE3               	incf	plusw1,f,c
 33819  01BE62  E30E               	bnc	u8180
 33820  01BE64  0EF1               	movlw	-15
 33821  01BE66  2AE3               	incf	plusw1,f,c
 33822  01BE68  E30B               	bnc	u8180
 33823  01BE6A  0EF2               	movlw	-14
 33824  01BE6C  2AE3               	incf	plusw1,f,c
 33825  01BE6E  E308               	bnc	u8180
 33826  01BE70  0EF3               	movlw	-13
 33827  01BE72  2AE3               	incf	plusw1,f,c
 33828  01BE74  E305               	bnc	u8180
 33829  01BE76  0EF4               	movlw	-12
 33830  01BE78  2AE3               	incf	plusw1,f,c
 33831  01BE7A  E302               	bnc	u8180
 33832  01BE7C  0EF5               	movlw	-11
 33833  01BE7E  2AE3               	incf	plusw1,f,c
 33834  01BE80                     u8180:
 33835                           
 33836                           ;stkvar	_divisor @ sp[(-2)+-16]
 33837  01BE80  0EEE               	movlw	-18
 33838  01BE82  50E3               	movf	plusw1,w,c
 33839  01BE84  E116               	bnz	u8190
 33840  01BE86  0EEF               	movlw	-17
 33841  01BE88  50E3               	movf	plusw1,w,c
 33842  01BE8A  E113               	bnz	u8190
 33843  01BE8C  0EF0               	movlw	-16
 33844  01BE8E  50E3               	movf	plusw1,w,c
 33845  01BE90  E110               	bnz	u8190
 33846  01BE92  0EF1               	movlw	-15
 33847  01BE94  50E3               	movf	plusw1,w,c
 33848  01BE96  E10D               	bnz	u8190
 33849  01BE98  0EF2               	movlw	-14
 33850  01BE9A  50E3               	movf	plusw1,w,c
 33851  01BE9C  E10A               	bnz	u8190
 33852  01BE9E  0EF3               	movlw	-13
 33853  01BEA0  50E3               	movf	plusw1,w,c
 33854  01BEA2  E107               	bnz	u8190
 33855  01BEA4  0EF4               	movlw	-12
 33856  01BEA6  50E3               	movf	plusw1,w,c
 33857  01BEA8  E104               	bnz	u8190
 33858  01BEAA  0EF5               	movlw	-11
 33859  01BEAC  50E3               	movf	plusw1,w,c
 33860  01BEAE  B4D8               	btfsc	status,2,c
 33861  01BEB0  D075               	goto	u8220
 33862  01BEB2                     u8190:
 33863                           
 33864                           ;stkvar	_counter @ sp[(-2)+1]
 33865  01BEB2  0EFF               	movlw	-1
 33866  01BEB4  6AE3               	clrf	plusw1,c
 33867  01BEB6  D012               	goto	L39
 33868  01BEB8                     l10177:
 33869                           
 33870                           ;stkvar	_divisor @ sp[(-2)+-16]
 33871  01BEB8  90D8               	bcf	status,0,c
 33872  01BEBA  0EEE               	movlw	-18
 33873  01BEBC  36E3               	rlcf	plusw1,f,c
 33874  01BEBE  0EEF               	movlw	-17
 33875  01BEC0  36E3               	rlcf	plusw1,f,c
 33876  01BEC2  0EF0               	movlw	-16
 33877  01BEC4  36E3               	rlcf	plusw1,f,c
 33878  01BEC6  0EF1               	movlw	-15
 33879  01BEC8  36E3               	rlcf	plusw1,f,c
 33880  01BECA  0EF2               	movlw	-14
 33881  01BECC  36E3               	rlcf	plusw1,f,c
 33882  01BECE  0EF3               	movlw	-13
 33883  01BED0  36E3               	rlcf	plusw1,f,c
 33884  01BED2  0EF4               	movlw	-12
 33885  01BED4  36E3               	rlcf	plusw1,f,c
 33886  01BED6  0EF5               	movlw	-11
 33887  01BED8  36E3               	rlcf	plusw1,f,c
 33888                           
 33889                           ;stkvar	_counter @ sp[(-2)+1]
 33890  01BEDA  0EFF               	movlw	-1
 33891  01BEDC                     L39:
 33892  01BEDC  2AE3               	incf	plusw1,f,c
 33893                           
 33894                           ;stkvar	_divisor @ sp[(-2)+-16]
 33895  01BEDE  0EF5               	movlw	-11
 33896  01BEE0  AEE3               	btfss	plusw1,7,c
 33897  01BEE2  D7EA               	goto	l10177
 33898  01BEE4                     u8200:
 33899                           
 33900                           ;stkvar	_divisor @ sp[(-2)+-16]
 33901                           ;stkvar	_dividend @ sp[(-2)+-8]
 33902  01BEE4  50E1               	movf	fsr1l,w,c
 33903  01BEE6  0FF6               	addlw	-10
 33904  01BEE8  6ED9               	movwf	fsr2l,c
 33905  01BEEA  50E2               	movf	fsr1h,w,c
 33906  01BEEC  6EDA               	movwf	fsr2h,c
 33907  01BEEE  0EFF               	movlw	255
 33908  01BEF0  22DA               	addwfc	fsr2h,f,c
 33909  01BEF2  0EEE               	movlw	-18
 33910  01BEF4  50E3               	movf	plusw1,w,c
 33911  01BEF6  5CDE               	subwf	postinc2,w,c
 33912  01BEF8  0EEF               	movlw	-17
 33913  01BEFA  50E3               	movf	plusw1,w,c
 33914  01BEFC  58DE               	subwfb	postinc2,w,c
 33915  01BEFE  0EF0               	movlw	-16
 33916  01BF00  50E3               	movf	plusw1,w,c
 33917  01BF02  58DE               	subwfb	postinc2,w,c
 33918  01BF04  0EF1               	movlw	-15
 33919  01BF06  50E3               	movf	plusw1,w,c
 33920  01BF08  58DE               	subwfb	postinc2,w,c
 33921  01BF0A  0EF2               	movlw	-14
 33922  01BF0C  50E3               	movf	plusw1,w,c
 33923  01BF0E  58DE               	subwfb	postinc2,w,c
 33924  01BF10  0EF3               	movlw	-13
 33925  01BF12  50E3               	movf	plusw1,w,c
 33926  01BF14  58DE               	subwfb	postinc2,w,c
 33927  01BF16  0EF4               	movlw	-12
 33928  01BF18  50E3               	movf	plusw1,w,c
 33929  01BF1A  58DE               	subwfb	postinc2,w,c
 33930  01BF1C  0EF5               	movlw	-11
 33931  01BF1E  50E3               	movf	plusw1,w,c
 33932  01BF20  58DE               	subwfb	postinc2,w,c
 33933  01BF22  A0D8               	btfss	status,0,c
 33934  01BF24  D01F               	goto	l10185
 33935                           
 33936                           ;stkvar	_divisor @ sp[(-2)+-16]
 33937                           ;stkvar	_dividend @ sp[(-2)+-8]
 33938  01BF26  50E1               	movf	fsr1l,w,c
 33939  01BF28  0FF6               	addlw	-10
 33940  01BF2A  6ED9               	movwf	fsr2l,c
 33941  01BF2C  50E2               	movf	fsr1h,w,c
 33942  01BF2E  6EDA               	movwf	fsr2h,c
 33943  01BF30  0EFF               	movlw	255
 33944  01BF32  22DA               	addwfc	fsr2h,f,c
 33945  01BF34  0EEE               	movlw	-18
 33946  01BF36  50E3               	movf	plusw1,w,c
 33947  01BF38  5EDE               	subwf	postinc2,f,c
 33948  01BF3A  0EEF               	movlw	-17
 33949  01BF3C  50E3               	movf	plusw1,w,c
 33950  01BF3E  5ADE               	subwfb	postinc2,f,c
 33951  01BF40  0EF0               	movlw	-16
 33952  01BF42  50E3               	movf	plusw1,w,c
 33953  01BF44  5ADE               	subwfb	postinc2,f,c
 33954  01BF46  0EF1               	movlw	-15
 33955  01BF48  50E3               	movf	plusw1,w,c
 33956  01BF4A  5ADE               	subwfb	postinc2,f,c
 33957  01BF4C  0EF2               	movlw	-14
 33958  01BF4E  50E3               	movf	plusw1,w,c
 33959  01BF50  5ADE               	subwfb	postinc2,f,c
 33960  01BF52  0EF3               	movlw	-13
 33961  01BF54  50E3               	movf	plusw1,w,c
 33962  01BF56  5ADE               	subwfb	postinc2,f,c
 33963  01BF58  0EF4               	movlw	-12
 33964  01BF5A  50E3               	movf	plusw1,w,c
 33965  01BF5C  5ADE               	subwfb	postinc2,f,c
 33966  01BF5E  0EF5               	movlw	-11
 33967  01BF60  50E3               	movf	plusw1,w,c
 33968  01BF62  5ADE               	subwfb	postinc2,f,c
 33969  01BF64                     l10185:
 33970                           
 33971                           ;stkvar	_divisor @ sp[(-2)+-16]
 33972  01BF64  90D8               	bcf	status,0,c
 33973  01BF66  0EF5               	movlw	-11
 33974  01BF68  32E3               	rrcf	plusw1,f,c
 33975  01BF6A  0EF4               	movlw	-12
 33976  01BF6C  32E3               	rrcf	plusw1,f,c
 33977  01BF6E  0EF3               	movlw	-13
 33978  01BF70  32E3               	rrcf	plusw1,f,c
 33979  01BF72  0EF2               	movlw	-14
 33980  01BF74  32E3               	rrcf	plusw1,f,c
 33981  01BF76  0EF1               	movlw	-15
 33982  01BF78  32E3               	rrcf	plusw1,f,c
 33983  01BF7A  0EF0               	movlw	-16
 33984  01BF7C  32E3               	rrcf	plusw1,f,c
 33985  01BF7E  0EEF               	movlw	-17
 33986  01BF80  32E3               	rrcf	plusw1,f,c
 33987  01BF82  0EEE               	movlw	-18
 33988  01BF84  32E3               	rrcf	plusw1,f,c
 33989                           
 33990                           ;stkvar	_counter @ sp[(-2)+1]
 33991  01BF86  0EFF               	movlw	-1
 33992  01BF88  50E3               	movf	plusw1,w,c
 33993  01BF8A  6E01               	movwf	btemp^0,c
 33994  01BF8C  0E01               	movlw	1
 33995  01BF8E  5E01               	subwf	btemp^0,f,c
 33996  01BF90  0EFF               	movlw	-1
 33997  01BF92  0060  F007  FFE3   	movff	btemp,plusw1
 33998  01BF98  A4D8               	btfss	status,2,c
 33999  01BF9A  D7A4               	goto	u8200
 34000  01BF9C                     u8220:
 34001                           
 34002                           ;stkvar	_sign @ sp[(-2)+0]
 34003  01BF9C  0EFE               	movlw	-2
 34004  01BF9E  50E3               	movf	plusw1,w,c
 34005  01BFA0  B4D8               	btfsc	status,2,c
 34006  01BFA2  D025               	goto	u8240
 34007                           
 34008                           ;stkvar	_dividend @ sp[(-2)+-8]
 34009                           ;stkvar	_dividend @ sp[(-2)+-8]
 34010  01BFA4  0EF6               	movlw	-10
 34011  01BFA6  6CE3               	negf	plusw1,c
 34012  01BFA8  0EF7               	movlw	-9
 34013  01BFAA  1EE3               	comf	plusw1,f,c
 34014  01BFAC  0EF8               	movlw	-8
 34015  01BFAE  1EE3               	comf	plusw1,f,c
 34016  01BFB0  0EF9               	movlw	-7
 34017  01BFB2  1EE3               	comf	plusw1,f,c
 34018  01BFB4  0EFA               	movlw	-6
 34019  01BFB6  1EE3               	comf	plusw1,f,c
 34020  01BFB8  0EFB               	movlw	-5
 34021  01BFBA  1EE3               	comf	plusw1,f,c
 34022  01BFBC  0EFC               	movlw	-4
 34023  01BFBE  1EE3               	comf	plusw1,f,c
 34024  01BFC0  0EFD               	movlw	-3
 34025  01BFC2  1EE3               	comf	plusw1,f,c
 34026  01BFC4  E314               	bnc	u8240
 34027  01BFC6  0EF7               	movlw	-9
 34028  01BFC8  2AE3               	incf	plusw1,f,c
 34029  01BFCA  E311               	bnc	u8240
 34030  01BFCC  0EF8               	movlw	-8
 34031  01BFCE  2AE3               	incf	plusw1,f,c
 34032  01BFD0  E30E               	bnc	u8240
 34033  01BFD2  0EF9               	movlw	-7
 34034  01BFD4  2AE3               	incf	plusw1,f,c
 34035  01BFD6  E30B               	bnc	u8240
 34036  01BFD8  0EFA               	movlw	-6
 34037  01BFDA  2AE3               	incf	plusw1,f,c
 34038  01BFDC  E308               	bnc	u8240
 34039  01BFDE  0EFB               	movlw	-5
 34040  01BFE0  2AE3               	incf	plusw1,f,c
 34041  01BFE2  E305               	bnc	u8240
 34042  01BFE4  0EFC               	movlw	-4
 34043  01BFE6  2AE3               	incf	plusw1,f,c
 34044  01BFE8  E302               	bnc	u8240
 34045  01BFEA  0EFD               	movlw	-3
 34046  01BFEC  2AE3               	incf	plusw1,f,c
 34047  01BFEE                     u8240:
 34048                           
 34049                           ;stkvar	_dividend @ sp[(-2)+-8]
 34050  01BFEE  0EF6               	movlw	246
 34051  01BFF0  24E1               	addwf	fsr1l,w,c
 34052  01BFF2  6ED9               	movwf	fsr2l,c
 34053  01BFF4  0EFF               	movlw	255
 34054  01BFF6  20E2               	addwfc	fsr1h,w,c
 34055  01BFF8  6EDA               	movwf	fsr2h,c
 34056                           
 34057                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34058  01BFFA  0E08               	movlw	8
 34059  01BFFC  6E01               	movwf	btemp^0,c
 34060  01BFFE  0EF6               	movlw	-10
 34061  01C000                     us825999:
 34062  01C000  006F FF7B FFE3     	movff	postinc2,plusw1
 34063  01C006  28E8               	incf	wreg,w,c
 34064  01C008  2E01               	decfsz	btemp^0,f,c
 34065  01C00A  D7FA               	bra	us825999
 34066                           
 34067                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34068  01C00C  52E5               	movf	postdec1,f,c
 34069  01C00E  52E5               	movf	postdec1,f,c
 34070  01C010  0012               	return		;funcret
 34071  01C012                     __end_of___aomod:
 34072                           	opt callstack 0
 34073                           
 34074 ;; *************** function ___aodiv *****************
 34075 ;; Defined at:
 34076 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34077 ;; Parameters:    Size  Location     Type
 34078 ;;  dividend        8  [STACK] long long 
 34079 ;;  divisor         8  [STACK] long long 
 34080 ;; Auto vars:     Size  Location     Type
 34081 ;;  quotient        8  [STACK] long long 
 34082 ;;  sign            1  [STACK] unsigned char 
 34083 ;;  counter         1  [STACK] unsigned char 
 34084 ;; Return value:  Size  Location     Type
 34085 ;;                  8  [STACK] long long 
 34086 ;; Registers used:
 34087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34088 ;; Tracked objects:
 34089 ;;		On entry : 0/0
 34090 ;;		On exit  : 0/0
 34091 ;;		Unchanged: 0/0
 34092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34097 ;;Total ram usage:        0 bytes
 34098 ;; Hardware stack levels used:    1
 34099 ;; Hardware stack levels required when called:   15
 34100 ;; This function calls:
 34101 ;;		Nothing
 34102 ;; This function is called by:
 34103 ;;		_dtoa
 34104 ;;		___secs_to_tm
 34105 ;;		___secs_to_zone
 34106 ;;		___year_to_secs
 34107 ;; This function uses a reentrant model
 34108 ;;
 34109                           
 34110                           	psect	text114
 34111  01B432                     __ptext114:
 34112                           	opt callstack 0
 34113  01B432                     ___aodiv:
 34114                           	opt callstack 0
 34115                           
 34116                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34117  01B432  0E0A               	movlw	10
 34118  01B434  26E1               	addwf	fsr1l,f,c
 34119  01B436  0E00               	movlw	0
 34120  01B438  22E2               	addwfc	fsr1h,f,c
 34121                           
 34122                           ;stkvar	_sign @ sp[(-10)+8]
 34123                           
 34124                           ;incstack = 0
 34125 ;; hardware stack exceeded
 34126  01B43A  0EFE               	movlw	-2
 34127  01B43C  6AE3               	clrf	plusw1,c
 34128                           
 34129                           ;stkvar	_divisor @ sp[(-10)+-16]
 34130  01B43E  0EED               	movlw	-19
 34131  01B440  AEE3               	btfss	plusw1,7,c
 34132  01B442  D028               	goto	l10125
 34133                           
 34134                           ;stkvar	_divisor @ sp[(-10)+-16]
 34135                           ;stkvar	_divisor @ sp[(-10)+-16]
 34136  01B444  0EE6               	movlw	-26
 34137  01B446  6CE3               	negf	plusw1,c
 34138  01B448  0EE7               	movlw	-25
 34139  01B44A  1EE3               	comf	plusw1,f,c
 34140  01B44C  0EE8               	movlw	-24
 34141  01B44E  1EE3               	comf	plusw1,f,c
 34142  01B450  0EE9               	movlw	-23
 34143  01B452  1EE3               	comf	plusw1,f,c
 34144  01B454  0EEA               	movlw	-22
 34145  01B456  1EE3               	comf	plusw1,f,c
 34146  01B458  0EEB               	movlw	-21
 34147  01B45A  1EE3               	comf	plusw1,f,c
 34148  01B45C  0EEC               	movlw	-20
 34149  01B45E  1EE3               	comf	plusw1,f,c
 34150  01B460  0EED               	movlw	-19
 34151  01B462  1EE3               	comf	plusw1,f,c
 34152  01B464  E314               	bnc	u8040
 34153  01B466  0EE7               	movlw	-25
 34154  01B468  2AE3               	incf	plusw1,f,c
 34155  01B46A  E311               	bnc	u8040
 34156  01B46C  0EE8               	movlw	-24
 34157  01B46E  2AE3               	incf	plusw1,f,c
 34158  01B470  E30E               	bnc	u8040
 34159  01B472  0EE9               	movlw	-23
 34160  01B474  2AE3               	incf	plusw1,f,c
 34161  01B476  E30B               	bnc	u8040
 34162  01B478  0EEA               	movlw	-22
 34163  01B47A  2AE3               	incf	plusw1,f,c
 34164  01B47C  E308               	bnc	u8040
 34165  01B47E  0EEB               	movlw	-21
 34166  01B480  2AE3               	incf	plusw1,f,c
 34167  01B482  E305               	bnc	u8040
 34168  01B484  0EEC               	movlw	-20
 34169  01B486  2AE3               	incf	plusw1,f,c
 34170  01B488  E302               	bnc	u8040
 34171  01B48A  0EED               	movlw	-19
 34172  01B48C  2AE3               	incf	plusw1,f,c
 34173  01B48E                     u8040:
 34174                           
 34175                           ;stkvar	_sign @ sp[(-10)+8]
 34176  01B48E  0EFE               	movlw	-2
 34177  01B490  6AE3               	clrf	plusw1,c
 34178  01B492  2AE3               	incf	plusw1,f,c
 34179  01B494                     l10125:
 34180                           
 34181                           ;stkvar	_dividend @ sp[(-10)+-8]
 34182  01B494  0EF5               	movlw	-11
 34183  01B496  AEE3               	btfss	plusw1,7,c
 34184  01B498  D027               	goto	l10131
 34185                           
 34186                           ;stkvar	_dividend @ sp[(-10)+-8]
 34187                           ;stkvar	_dividend @ sp[(-10)+-8]
 34188  01B49A  0EEE               	movlw	-18
 34189  01B49C  6CE3               	negf	plusw1,c
 34190  01B49E  0EEF               	movlw	-17
 34191  01B4A0  1EE3               	comf	plusw1,f,c
 34192  01B4A2  0EF0               	movlw	-16
 34193  01B4A4  1EE3               	comf	plusw1,f,c
 34194  01B4A6  0EF1               	movlw	-15
 34195  01B4A8  1EE3               	comf	plusw1,f,c
 34196  01B4AA  0EF2               	movlw	-14
 34197  01B4AC  1EE3               	comf	plusw1,f,c
 34198  01B4AE  0EF3               	movlw	-13
 34199  01B4B0  1EE3               	comf	plusw1,f,c
 34200  01B4B2  0EF4               	movlw	-12
 34201  01B4B4  1EE3               	comf	plusw1,f,c
 34202  01B4B6  0EF5               	movlw	-11
 34203  01B4B8  1EE3               	comf	plusw1,f,c
 34204  01B4BA  E314               	bnc	u8060
 34205  01B4BC  0EEF               	movlw	-17
 34206  01B4BE  2AE3               	incf	plusw1,f,c
 34207  01B4C0  E311               	bnc	u8060
 34208  01B4C2  0EF0               	movlw	-16
 34209  01B4C4  2AE3               	incf	plusw1,f,c
 34210  01B4C6  E30E               	bnc	u8060
 34211  01B4C8  0EF1               	movlw	-15
 34212  01B4CA  2AE3               	incf	plusw1,f,c
 34213  01B4CC  E30B               	bnc	u8060
 34214  01B4CE  0EF2               	movlw	-14
 34215  01B4D0  2AE3               	incf	plusw1,f,c
 34216  01B4D2  E308               	bnc	u8060
 34217  01B4D4  0EF3               	movlw	-13
 34218  01B4D6  2AE3               	incf	plusw1,f,c
 34219  01B4D8  E305               	bnc	u8060
 34220  01B4DA  0EF4               	movlw	-12
 34221  01B4DC  2AE3               	incf	plusw1,f,c
 34222  01B4DE  E302               	bnc	u8060
 34223  01B4E0  0EF5               	movlw	-11
 34224  01B4E2  2AE3               	incf	plusw1,f,c
 34225  01B4E4                     u8060:
 34226                           
 34227                           ;stkvar	_sign @ sp[(-10)+8]
 34228  01B4E4  0EFE               	movlw	-2
 34229  01B4E6  70E3               	btg	plusw1,0,c
 34230  01B4E8                     l10131:
 34231                           
 34232                           ;stkvar	_quotient @ sp[(-10)+0]
 34233  01B4E8  0E07               	movlw	7
 34234  01B4EA  6E01               	movwf	btemp^0,c
 34235  01B4EC  0EF6               	movlw	-10
 34236  01B4EE                     u8071:
 34237  01B4EE  6AE3               	clrf	plusw1,c
 34238  01B4F0  2AE8               	incf	wreg,f,c
 34239  01B4F2  0601               	decf	btemp^0,f,c
 34240  01B4F4  E2FC               	bc	u8071
 34241                           
 34242                           ;stkvar	_divisor @ sp[(-10)+-16]
 34243  01B4F6  0EE6               	movlw	-26
 34244  01B4F8  50E3               	movf	plusw1,w,c
 34245  01B4FA  E116               	bnz	u8080
 34246  01B4FC  0EE7               	movlw	-25
 34247  01B4FE  50E3               	movf	plusw1,w,c
 34248  01B500  E113               	bnz	u8080
 34249  01B502  0EE8               	movlw	-24
 34250  01B504  50E3               	movf	plusw1,w,c
 34251  01B506  E110               	bnz	u8080
 34252  01B508  0EE9               	movlw	-23
 34253  01B50A  50E3               	movf	plusw1,w,c
 34254  01B50C  E10D               	bnz	u8080
 34255  01B50E  0EEA               	movlw	-22
 34256  01B510  50E3               	movf	plusw1,w,c
 34257  01B512  E10A               	bnz	u8080
 34258  01B514  0EEB               	movlw	-21
 34259  01B516  50E3               	movf	plusw1,w,c
 34260  01B518  E107               	bnz	u8080
 34261  01B51A  0EEC               	movlw	-20
 34262  01B51C  50E3               	movf	plusw1,w,c
 34263  01B51E  E104               	bnz	u8080
 34264  01B520  0EED               	movlw	-19
 34265  01B522  50E3               	movf	plusw1,w,c
 34266  01B524  B4D8               	btfsc	status,2,c
 34267  01B526  D088               	goto	u8110
 34268  01B528                     u8080:
 34269                           
 34270                           ;stkvar	_counter @ sp[(-10)+9]
 34271  01B528  0EFF               	movlw	-1
 34272  01B52A  6AE3               	clrf	plusw1,c
 34273  01B52C  D012               	goto	L40
 34274  01B52E                     l10137:
 34275                           
 34276                           ;stkvar	_divisor @ sp[(-10)+-16]
 34277  01B52E  90D8               	bcf	status,0,c
 34278  01B530  0EE6               	movlw	-26
 34279  01B532  36E3               	rlcf	plusw1,f,c
 34280  01B534  0EE7               	movlw	-25
 34281  01B536  36E3               	rlcf	plusw1,f,c
 34282  01B538  0EE8               	movlw	-24
 34283  01B53A  36E3               	rlcf	plusw1,f,c
 34284  01B53C  0EE9               	movlw	-23
 34285  01B53E  36E3               	rlcf	plusw1,f,c
 34286  01B540  0EEA               	movlw	-22
 34287  01B542  36E3               	rlcf	plusw1,f,c
 34288  01B544  0EEB               	movlw	-21
 34289  01B546  36E3               	rlcf	plusw1,f,c
 34290  01B548  0EEC               	movlw	-20
 34291  01B54A  36E3               	rlcf	plusw1,f,c
 34292  01B54C  0EED               	movlw	-19
 34293  01B54E  36E3               	rlcf	plusw1,f,c
 34294                           
 34295                           ;stkvar	_counter @ sp[(-10)+9]
 34296  01B550  0EFF               	movlw	-1
 34297  01B552                     L40:
 34298  01B552  2AE3               	incf	plusw1,f,c
 34299                           
 34300                           ;stkvar	_divisor @ sp[(-10)+-16]
 34301  01B554  0EED               	movlw	-19
 34302  01B556  AEE3               	btfss	plusw1,7,c
 34303  01B558  D7EA               	goto	l10137
 34304  01B55A                     u8090:
 34305                           
 34306                           ;stkvar	_quotient @ sp[(-10)+0]
 34307  01B55A  90D8               	bcf	status,0,c
 34308  01B55C  0EF6               	movlw	-10
 34309  01B55E  36E3               	rlcf	plusw1,f,c
 34310  01B560  0EF7               	movlw	-9
 34311  01B562  36E3               	rlcf	plusw1,f,c
 34312  01B564  0EF8               	movlw	-8
 34313  01B566  36E3               	rlcf	plusw1,f,c
 34314  01B568  0EF9               	movlw	-7
 34315  01B56A  36E3               	rlcf	plusw1,f,c
 34316  01B56C  0EFA               	movlw	-6
 34317  01B56E  36E3               	rlcf	plusw1,f,c
 34318  01B570  0EFB               	movlw	-5
 34319  01B572  36E3               	rlcf	plusw1,f,c
 34320  01B574  0EFC               	movlw	-4
 34321  01B576  36E3               	rlcf	plusw1,f,c
 34322  01B578  0EFD               	movlw	-3
 34323  01B57A  36E3               	rlcf	plusw1,f,c
 34324                           
 34325                           ;stkvar	_divisor @ sp[(-10)+-16]
 34326                           ;stkvar	_dividend @ sp[(-10)+-8]
 34327  01B57C  50E1               	movf	fsr1l,w,c
 34328  01B57E  0FEE               	addlw	-18
 34329  01B580  6ED9               	movwf	fsr2l,c
 34330  01B582  50E2               	movf	fsr1h,w,c
 34331  01B584  6EDA               	movwf	fsr2h,c
 34332  01B586  0EFF               	movlw	255
 34333  01B588  22DA               	addwfc	fsr2h,f,c
 34334  01B58A  0EE6               	movlw	-26
 34335  01B58C  50E3               	movf	plusw1,w,c
 34336  01B58E  5CDE               	subwf	postinc2,w,c
 34337  01B590  0EE7               	movlw	-25
 34338  01B592  50E3               	movf	plusw1,w,c
 34339  01B594  58DE               	subwfb	postinc2,w,c
 34340  01B596  0EE8               	movlw	-24
 34341  01B598  50E3               	movf	plusw1,w,c
 34342  01B59A  58DE               	subwfb	postinc2,w,c
 34343  01B59C  0EE9               	movlw	-23
 34344  01B59E  50E3               	movf	plusw1,w,c
 34345  01B5A0  58DE               	subwfb	postinc2,w,c
 34346  01B5A2  0EEA               	movlw	-22
 34347  01B5A4  50E3               	movf	plusw1,w,c
 34348  01B5A6  58DE               	subwfb	postinc2,w,c
 34349  01B5A8  0EEB               	movlw	-21
 34350  01B5AA  50E3               	movf	plusw1,w,c
 34351  01B5AC  58DE               	subwfb	postinc2,w,c
 34352  01B5AE  0EEC               	movlw	-20
 34353  01B5B0  50E3               	movf	plusw1,w,c
 34354  01B5B2  58DE               	subwfb	postinc2,w,c
 34355  01B5B4  0EED               	movlw	-19
 34356  01B5B6  50E3               	movf	plusw1,w,c
 34357  01B5B8  58DE               	subwfb	postinc2,w,c
 34358  01B5BA  A0D8               	btfss	status,0,c
 34359  01B5BC  D021               	goto	l10149
 34360                           
 34361                           ;stkvar	_divisor @ sp[(-10)+-16]
 34362                           ;stkvar	_dividend @ sp[(-10)+-8]
 34363  01B5BE  50E1               	movf	fsr1l,w,c
 34364  01B5C0  0FEE               	addlw	-18
 34365  01B5C2  6ED9               	movwf	fsr2l,c
 34366  01B5C4  50E2               	movf	fsr1h,w,c
 34367  01B5C6  6EDA               	movwf	fsr2h,c
 34368  01B5C8  0EFF               	movlw	255
 34369  01B5CA  22DA               	addwfc	fsr2h,f,c
 34370  01B5CC  0EE6               	movlw	-26
 34371  01B5CE  50E3               	movf	plusw1,w,c
 34372  01B5D0  5EDE               	subwf	postinc2,f,c
 34373  01B5D2  0EE7               	movlw	-25
 34374  01B5D4  50E3               	movf	plusw1,w,c
 34375  01B5D6  5ADE               	subwfb	postinc2,f,c
 34376  01B5D8  0EE8               	movlw	-24
 34377  01B5DA  50E3               	movf	plusw1,w,c
 34378  01B5DC  5ADE               	subwfb	postinc2,f,c
 34379  01B5DE  0EE9               	movlw	-23
 34380  01B5E0  50E3               	movf	plusw1,w,c
 34381  01B5E2  5ADE               	subwfb	postinc2,f,c
 34382  01B5E4  0EEA               	movlw	-22
 34383  01B5E6  50E3               	movf	plusw1,w,c
 34384  01B5E8  5ADE               	subwfb	postinc2,f,c
 34385  01B5EA  0EEB               	movlw	-21
 34386  01B5EC  50E3               	movf	plusw1,w,c
 34387  01B5EE  5ADE               	subwfb	postinc2,f,c
 34388  01B5F0  0EEC               	movlw	-20
 34389  01B5F2  50E3               	movf	plusw1,w,c
 34390  01B5F4  5ADE               	subwfb	postinc2,f,c
 34391  01B5F6  0EED               	movlw	-19
 34392  01B5F8  50E3               	movf	plusw1,w,c
 34393  01B5FA  5ADE               	subwfb	postinc2,f,c
 34394                           
 34395                           ;stkvar	_quotient @ sp[(-10)+0]
 34396  01B5FC  0EF6               	movlw	-10
 34397  01B5FE  80E3               	bsf	plusw1,0,c
 34398  01B600                     l10149:
 34399                           
 34400                           ;stkvar	_divisor @ sp[(-10)+-16]
 34401  01B600  90D8               	bcf	status,0,c
 34402  01B602  0EED               	movlw	-19
 34403  01B604  32E3               	rrcf	plusw1,f,c
 34404  01B606  0EEC               	movlw	-20
 34405  01B608  32E3               	rrcf	plusw1,f,c
 34406  01B60A  0EEB               	movlw	-21
 34407  01B60C  32E3               	rrcf	plusw1,f,c
 34408  01B60E  0EEA               	movlw	-22
 34409  01B610  32E3               	rrcf	plusw1,f,c
 34410  01B612  0EE9               	movlw	-23
 34411  01B614  32E3               	rrcf	plusw1,f,c
 34412  01B616  0EE8               	movlw	-24
 34413  01B618  32E3               	rrcf	plusw1,f,c
 34414  01B61A  0EE7               	movlw	-25
 34415  01B61C  32E3               	rrcf	plusw1,f,c
 34416  01B61E  0EE6               	movlw	-26
 34417  01B620  32E3               	rrcf	plusw1,f,c
 34418                           
 34419                           ;stkvar	_counter @ sp[(-10)+9]
 34420  01B622  0EFF               	movlw	-1
 34421  01B624  50E3               	movf	plusw1,w,c
 34422  01B626  6E01               	movwf	btemp^0,c
 34423  01B628  0E01               	movlw	1
 34424  01B62A  5E01               	subwf	btemp^0,f,c
 34425  01B62C  0EFF               	movlw	-1
 34426  01B62E  0060  F007  FFE3   	movff	btemp,plusw1
 34427  01B634  A4D8               	btfss	status,2,c
 34428  01B636  D791               	goto	u8090
 34429  01B638                     u8110:
 34430                           
 34431                           ;stkvar	_sign @ sp[(-10)+8]
 34432  01B638  0EFE               	movlw	-2
 34433  01B63A  50E3               	movf	plusw1,w,c
 34434  01B63C  B4D8               	btfsc	status,2,c
 34435  01B63E  D025               	goto	u8130
 34436                           
 34437                           ;stkvar	_quotient @ sp[(-10)+0]
 34438                           ;stkvar	_quotient @ sp[(-10)+0]
 34439  01B640  0EF6               	movlw	-10
 34440  01B642  6CE3               	negf	plusw1,c
 34441  01B644  0EF7               	movlw	-9
 34442  01B646  1EE3               	comf	plusw1,f,c
 34443  01B648  0EF8               	movlw	-8
 34444  01B64A  1EE3               	comf	plusw1,f,c
 34445  01B64C  0EF9               	movlw	-7
 34446  01B64E  1EE3               	comf	plusw1,f,c
 34447  01B650  0EFA               	movlw	-6
 34448  01B652  1EE3               	comf	plusw1,f,c
 34449  01B654  0EFB               	movlw	-5
 34450  01B656  1EE3               	comf	plusw1,f,c
 34451  01B658  0EFC               	movlw	-4
 34452  01B65A  1EE3               	comf	plusw1,f,c
 34453  01B65C  0EFD               	movlw	-3
 34454  01B65E  1EE3               	comf	plusw1,f,c
 34455  01B660  E314               	bnc	u8130
 34456  01B662  0EF7               	movlw	-9
 34457  01B664  2AE3               	incf	plusw1,f,c
 34458  01B666  E311               	bnc	u8130
 34459  01B668  0EF8               	movlw	-8
 34460  01B66A  2AE3               	incf	plusw1,f,c
 34461  01B66C  E30E               	bnc	u8130
 34462  01B66E  0EF9               	movlw	-7
 34463  01B670  2AE3               	incf	plusw1,f,c
 34464  01B672  E30B               	bnc	u8130
 34465  01B674  0EFA               	movlw	-6
 34466  01B676  2AE3               	incf	plusw1,f,c
 34467  01B678  E308               	bnc	u8130
 34468  01B67A  0EFB               	movlw	-5
 34469  01B67C  2AE3               	incf	plusw1,f,c
 34470  01B67E  E305               	bnc	u8130
 34471  01B680  0EFC               	movlw	-4
 34472  01B682  2AE3               	incf	plusw1,f,c
 34473  01B684  E302               	bnc	u8130
 34474  01B686  0EFD               	movlw	-3
 34475  01B688  2AE3               	incf	plusw1,f,c
 34476  01B68A                     u8130:
 34477                           
 34478                           ;stkvar	_quotient @ sp[(-10)+0]
 34479  01B68A  0EF6               	movlw	246
 34480  01B68C  24E1               	addwf	fsr1l,w,c
 34481  01B68E  6ED9               	movwf	fsr2l,c
 34482  01B690  0EFF               	movlw	255
 34483  01B692  20E2               	addwfc	fsr1h,w,c
 34484  01B694  6EDA               	movwf	fsr2h,c
 34485                           
 34486                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 34487  01B696  0E08               	movlw	8
 34488  01B698  6E01               	movwf	btemp^0,c
 34489  01B69A  0EEE               	movlw	-18
 34490  01B69C                     us814999:
 34491  01B69C  006F FF7B FFE3     	movff	postinc2,plusw1
 34492  01B6A2  28E8               	incf	wreg,w,c
 34493  01B6A4  2E01               	decfsz	btemp^0,f,c
 34494  01B6A6  D7FA               	bra	us814999
 34495                           
 34496                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 34497  01B6A8  0EF6               	movlw	246
 34498  01B6AA  26E1               	addwf	fsr1l,f,c
 34499  01B6AC  0EFF               	movlw	255
 34500  01B6AE  22E2               	addwfc	fsr1h,f,c
 34501  01B6B0  0012               	return		;funcret
 34502  01B6B2                     __end_of___aodiv:
 34503                           	opt callstack 0
 34504                           
 34505 ;; *************** function _ctoa *****************
 34506 ;; Defined at:
 34507 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34508 ;; Parameters:    Size  Location     Type
 34509 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34510 ;;		 -> f(6), NULL(0), 
 34511 ;;  c               1  [STACK] unsigned char 
 34512 ;; Auto vars:     Size  Location     Type
 34513 ;;  w               2  [STACK] int 
 34514 ;;  l               2    0        int 
 34515 ;; Return value:  Size  Location     Type
 34516 ;;                  2  [STACK] int 
 34517 ;; Registers used:
 34518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34519 ;; Tracked objects:
 34520 ;;		On entry : 0/0
 34521 ;;		On exit  : 0/0
 34522 ;;		Unchanged: 0/0
 34523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;Total ram usage:        0 bytes
 34529 ;; Hardware stack levels used:    1
 34530 ;; Hardware stack levels required when called:   20
 34531 ;; This function calls:
 34532 ;;		_pad
 34533 ;; This function is called by:
 34534 ;;		_vfpfcnvrt
 34535 ;; This function uses a reentrant model
 34536 ;;
 34537                           
 34538                           	psect	text115
 34539  000578                     __ptext115:
 34540                           	opt callstack 0
 34541  000578                     _ctoa:
 34542                           	opt callstack 0
 34543                           
 34544                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34545  000578  52E6               	movf	postinc1,f,c
 34546  00057A  52E6               	movf	postinc1,f,c
 34547                           
 34548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 34549                           
 34550                           ;incstack = 0
 34551 ;; hardware stack exceeded
 34552  00057C  503A               	movf	_width^0,w,c
 34553  00057E  103B               	iorwf	(_width+1)^0,w,c
 34554  000580  A4D8               	btfss	status,2,c
 34555  000582  D009               	goto	l15265
 34556                           
 34557                           ;stkvar	_w @ sp[(-2)+0]
 34558  000584  0EFE               	movlw	-2
 34559  000586  0060  F0EB  FFE3   	movff	_width,plusw1
 34560  00058C  0EFF               	movlw	-1
 34561  00058E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 34562  000594  D016               	goto	l15267
 34563  000596                     l15265:
 34564  000596  0EFF               	movlw	255
 34565  000598  6E0B               	movwf	(btemp+10)^0,c
 34566  00059A  0EFF               	movlw	255
 34567  00059C  6E0C               	movwf	(btemp+11)^0,c
 34568  00059E  0060  F0E8  F009   	movff	_width,btemp+8
 34569  0005A4  0060  F0EC  F00A   	movff	_width+1,btemp+9
 34570  0005AA  500B               	movf	(btemp+10)^0,w,c
 34571  0005AC  2609               	addwf	(btemp+8)^0,f,c
 34572  0005AE  500C               	movf	(btemp+11)^0,w,c
 34573  0005B0  220A               	addwfc	(btemp+9)^0,f,c
 34574                           
 34575                           ;stkvar	_w @ sp[(-2)+0]
 34576  0005B2  0EFE               	movlw	-2
 34577  0005B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 34578  0005BA  0EFF               	movlw	-1
 34579  0005BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34580  0005C2                     l15267:
 34581                           
 34582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 34583                           ;stkvar	_c @ sp[(-2)+-3]
 34584  0005C2  0EFB               	movlw	-5
 34585  0005C4  006F FF8C  F354    	movff	plusw1,_dbuf
 34586                           
 34587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 34588  0005CA  0103               	movlb	3	; () banked
 34589  0005CC  6B55               	clrf	(_dbuf+1)& (0+255),b
 34590                           
 34591                           ; BSR set to: 3
 34592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 34593                           ;stkvar	_w @ sp[(-2)+0]
 34594  0005CE  0EFE               	movlw	-2
 34595  0005D0  006F FF8F FFE6     	movff	plusw1,postinc1
 34596  0005D6  006F FF8F FFE6     	movff	plusw1,postinc1
 34597  0005DC  0E54               	movlw	low _dbuf
 34598  0005DE  6EE6               	movwf	postinc1,c
 34599  0005E0  0E03               	movlw	high _dbuf
 34600  0005E2  6EE6               	movwf	postinc1,c
 34601                           
 34602                           ;stkvar	_fp @ sp[(-6)+-2]
 34603  0005E4  0EF8               	movlw	-8
 34604  0005E6  006F FF8F FFE6     	movff	plusw1,postinc1
 34605  0005EC  006F FF8F FFE6     	movff	plusw1,postinc1
 34606  0005F2  EC30  F0F6         	call	_pad	;wreg free
 34607                           
 34608                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 34609  0005F6  0EFB               	movlw	251
 34610  0005F8  26E1               	addwf	fsr1l,f,c
 34611  0005FA  0EFF               	movlw	255
 34612  0005FC  22E2               	addwfc	fsr1h,f,c
 34613  0005FE  0012               	return		;funcret
 34614  000600                     __end_of_ctoa:
 34615                           	opt callstack 0
 34616                           
 34617 ;; *************** function _pad *****************
 34618 ;; Defined at:
 34619 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34620 ;; Parameters:    Size  Location     Type
 34621 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34622 ;;		 -> f(6), NULL(0), 
 34623 ;;  buf             2  [STACK] PTR unsigned char 
 34624 ;;		 -> dbuf(80), 
 34625 ;;  p               2  [STACK] int 
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;  w               2  [STACK] int 
 34628 ;;  i               2  [STACK] int 
 34629 ;; Return value:  Size  Location     Type
 34630 ;;                  2  [STACK] int 
 34631 ;; Registers used:
 34632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34633 ;; Tracked objects:
 34634 ;;		On entry : 0/3
 34635 ;;		On exit  : 0/0
 34636 ;;		Unchanged: 0/0
 34637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34642 ;;Total ram usage:        0 bytes
 34643 ;; Hardware stack levels used:    1
 34644 ;; Hardware stack levels required when called:   19
 34645 ;; This function calls:
 34646 ;;		_fputc
 34647 ;;		_fputs
 34648 ;;		_strlen
 34649 ;; This function is called by:
 34650 ;;		_ctoa
 34651 ;;		_dtoa
 34652 ;;		_efgtoa
 34653 ;;		_utoa
 34654 ;;		_xtoa
 34655 ;; This function uses a reentrant model
 34656 ;;
 34657                           
 34658                           	psect	text116
 34659  01EC60                     __ptext116:
 34660                           	opt callstack 0
 34661  01EC60                     _pad:
 34662                           	opt callstack 0
 34663                           
 34664                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34665  01EC60  52E6               	movf	postinc1,f,c
 34666  01EC62  52E6               	movf	postinc1,f,c
 34667  01EC64  52E6               	movf	postinc1,f,c
 34668  01EC66  52E6               	movf	postinc1,f,c
 34669                           
 34670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 34671                           
 34672                           ;incstack = 0
 34673 ;; hardware stack exceeded
 34674  01EC68  A03E               	btfss	_flags^0,0,c
 34675  01EC6A  D010               	goto	l15227
 34676                           
 34677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 34678                           ;stkvar	_fp @ sp[(-4)+-2]
 34679  01EC6C  0EFA               	movlw	-6
 34680  01EC6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34681  01EC74  006F FF8F FFE6     	movff	plusw1,postinc1
 34682                           
 34683                           ;stkvar	_buf @ sp[(-6)+-4]
 34684  01EC7A  0EF6               	movlw	-10
 34685  01EC7C  006F FF8F FFE6     	movff	plusw1,postinc1
 34686  01EC82  006F FF8F FFE6     	movff	plusw1,postinc1
 34687  01EC88  EC4C  F001         	call	_fputs	;wreg free
 34688  01EC8C                     l15227:
 34689                           
 34690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 34691                           ;stkvar	_p @ sp[(-4)+-6]
 34692  01EC8C  0EF7               	movlw	-9
 34693  01EC8E  BEE3               	btfsc	plusw1,7,c
 34694  01EC90  D011               	goto	l15231
 34695                           
 34696                           ;stkvar	_p @ sp[(-4)+-6]
 34697                           ;stkvar	_w @ sp[(-4)+0]
 34698  01EC92  0EF6               	movlw	-10
 34699  01EC94  006F FF8C  F001    	movff	plusw1,btemp
 34700  01EC9A  0EFC               	movlw	-4
 34701  01EC9C  0060  F007  FFE3   	movff	btemp,plusw1
 34702  01ECA2  0EF7               	movlw	-9
 34703  01ECA4  006F FF8C  F001    	movff	plusw1,btemp
 34704  01ECAA  0EFD               	movlw	-3
 34705  01ECAC  0060  F007  FFE3   	movff	btemp,plusw1
 34706  01ECB2  D004               	goto	l2440
 34707  01ECB4                     l15231:
 34708                           
 34709                           ;stkvar	_w @ sp[(-4)+0]
 34710  01ECB4  0EFC               	movlw	-4
 34711  01ECB6  6AE3               	clrf	plusw1,c
 34712  01ECB8  0EFD               	movlw	-3
 34713  01ECBA  6AE3               	clrf	plusw1,c
 34714  01ECBC                     l2440:
 34715                           
 34716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 34717                           ;stkvar	_i @ sp[(-4)+2]
 34718  01ECBC  0EFE               	movlw	-2
 34719  01ECBE  6AE3               	clrf	plusw1,c
 34720  01ECC0  0EFF               	movlw	-1
 34721  01ECC2  6AE3               	clrf	plusw1,c
 34722                           
 34723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 34724  01ECC4  D01E               	goto	l15237
 34725  01ECC6                     l15233:
 34726                           
 34727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 34728                           ;stkvar	_fp @ sp[(-4)+-2]
 34729  01ECC6  0EFA               	movlw	-6
 34730  01ECC8  006F FF8F FFE6     	movff	plusw1,postinc1
 34731  01ECCE  006F FF8F FFE6     	movff	plusw1,postinc1
 34732  01ECD4  0E20               	movlw	32
 34733  01ECD6  6EE6               	movwf	postinc1,c
 34734  01ECD8  0E00               	movlw	0
 34735  01ECDA  6EE6               	movwf	postinc1,c
 34736  01ECDC  ECF9  F0F3         	call	_fputc	;wreg free
 34737                           
 34738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 34739                           ;stkvar	_i @ sp[(-4)+2]
 34740  01ECE0  0EFE               	movlw	-2
 34741  01ECE2  50E3               	movf	plusw1,w,c
 34742  01ECE4  0F01               	addlw	1
 34743  01ECE6  6E01               	movwf	btemp^0,c
 34744  01ECE8  0EFE               	movlw	-2
 34745  01ECEA  0060  F007  FFE3   	movff	btemp,plusw1
 34746  01ECF0  6A01               	clrf	btemp^0,c
 34747  01ECF2  0EFF               	movlw	-1
 34748  01ECF4  50E3               	movf	plusw1,w,c
 34749  01ECF6  2001               	addwfc	btemp^0,w,c
 34750  01ECF8  6E01               	movwf	btemp^0,c
 34751  01ECFA  0EFF               	movlw	-1
 34752  01ECFC  0060  F007  FFE3   	movff	btemp,plusw1
 34753  01ED02                     l15237:
 34754                           
 34755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 34756                           ;stkvar	_w @ sp[(-4)+0]
 34757                           ;stkvar	_i @ sp[(-4)+2]
 34758  01ED02  50E1               	movf	fsr1l,w,c
 34759  01ED04  0FFE               	addlw	-2
 34760  01ED06  6ED9               	movwf	fsr2l,c
 34761  01ED08  50E2               	movf	fsr1h,w,c
 34762  01ED0A  6EDA               	movwf	fsr2h,c
 34763  01ED0C  0EFF               	movlw	255
 34764  01ED0E  22DA               	addwfc	fsr2h,f,c
 34765  01ED10  0EFC               	movlw	-4
 34766  01ED12  50E3               	movf	plusw1,w,c
 34767  01ED14  5CDE               	subwf	postinc2,w,c
 34768  01ED16  50DE               	movf	postinc2,w,c
 34769  01ED18  0A80               	xorlw	128
 34770  01ED1A  6E01               	movwf	btemp^0,c
 34771  01ED1C  0EFD               	movlw	-3
 34772  01ED1E  50E3               	movf	plusw1,w,c
 34773  01ED20  0A80               	xorlw	128
 34774  01ED22  5801               	subwfb	btemp^0,w,c
 34775  01ED24  A0D8               	btfss	status,0,c
 34776  01ED26  D7CF               	goto	l15233
 34777                           
 34778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 34779  01ED28  B03E               	btfsc	_flags^0,0,c
 34780  01ED2A  D010               	goto	l15241
 34781                           
 34782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 34783                           ;stkvar	_fp @ sp[(-4)+-2]
 34784  01ED2C  0EFA               	movlw	-6
 34785  01ED2E  006F FF8F FFE6     	movff	plusw1,postinc1
 34786  01ED34  006F FF8F FFE6     	movff	plusw1,postinc1
 34787                           
 34788                           ;stkvar	_buf @ sp[(-6)+-4]
 34789  01ED3A  0EF6               	movlw	-10
 34790  01ED3C  006F FF8F FFE6     	movff	plusw1,postinc1
 34791  01ED42  006F FF8F FFE6     	movff	plusw1,postinc1
 34792  01ED48  EC4C  F001         	call	_fputs	;wreg free
 34793  01ED4C                     l15241:
 34794                           
 34795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 34796                           ;stkvar	_w @ sp[(-4)+0]
 34797                           ;stkvar	_buf @ sp[(-4)+-4]
 34798  01ED4C  0EF8               	movlw	-8
 34799  01ED4E  006F FF8F FFE6     	movff	plusw1,postinc1
 34800  01ED54  006F FF8F FFE6     	movff	plusw1,postinc1
 34801  01ED5A  ECAE  F000         	call	_strlen	;wreg free
 34802  01ED5E  0EFC               	movlw	-4
 34803  01ED60  50E3               	movf	plusw1,w,c
 34804  01ED62  2601               	addwf	btemp^0,f,c
 34805  01ED64  0EFD               	movlw	-3
 34806  01ED66  50E3               	movf	plusw1,w,c
 34807  01ED68  2202               	addwfc	(btemp+1)^0,f,c
 34808                           
 34809                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 34810  01ED6A  0EF6               	movlw	246
 34811  01ED6C  26E1               	addwf	fsr1l,f,c
 34812  01ED6E  0EFF               	movlw	255
 34813  01ED70  22E2               	addwfc	fsr1h,f,c
 34814  01ED72  0012               	return		;funcret
 34815  01ED74                     __end_of_pad:
 34816                           	opt callstack 0
 34817                           
 34818 ;; *************** function _strlen *****************
 34819 ;; Defined at:
 34820 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 34821 ;; Parameters:    Size  Location     Type
 34822 ;;  s               2  [STACK] PTR const unsigned char 
 34823 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 34824 ;;		 -> dbuf(80), spin(120), STR_69(9), STR_68(12), 
 34825 ;;		 -> D.lcd(480), D(482), T(144), port_data(512), 
 34826 ;;		 -> STR_3(5), V(192), 
 34827 ;; Auto vars:     Size  Location     Type
 34828 ;;  a               2  [STACK] PTR const unsigned char 
 34829 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 34830 ;;		 -> dbuf(80), spin(120), STR_69(9), STR_68(12), 
 34831 ;;		 -> D.lcd(480), D(482), T(144), port_data(512), 
 34832 ;;		 -> STR_3(5), V(192), 
 34833 ;; Return value:  Size  Location     Type
 34834 ;;                  2  [STACK] unsigned int 
 34835 ;; Registers used:
 34836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 34837 ;; Tracked objects:
 34838 ;;		On entry : 0/0
 34839 ;;		On exit  : 0/0
 34840 ;;		Unchanged: 0/0
 34841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34846 ;;Total ram usage:        0 bytes
 34847 ;; Hardware stack levels used:    1
 34848 ;; Hardware stack levels required when called:   15
 34849 ;; This function calls:
 34850 ;;		Nothing
 34851 ;; This function is called by:
 34852 ;;		_eaDogM_WriteString
 34853 ;;		_spinners
 34854 ;;		_calc_bsoc
 34855 ;;		_pad
 34856 ;;		_stoa
 34857 ;; This function uses a reentrant model
 34858 ;;
 34859                           
 34860                           	psect	text117
 34861  00015C                     __ptext117:
 34862                           	opt callstack 0
 34863  00015C                     _strlen:
 34864                           	opt callstack 0
 34865                           
 34866                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34867  00015C  52E6               	movf	postinc1,f,c
 34868  00015E  52E6               	movf	postinc1,f,c
 34869                           
 34870                           ;stkvar	_s @ sp[(-2)+-2]
 34871                           
 34872                           ;incstack = 0
 34873 ;; hardware stack exceeded
 34874  000160  0EFC               	movlw	-4
 34875  000162  006F FF8C  F00B    	movff	plusw1,btemp+10
 34876  000168  0EFD               	movlw	-3
 34877  00016A  006F FF8C  F00C    	movff	plusw1,btemp+11
 34878                           
 34879                           ;stkvar	_a @ sp[(-2)+0]
 34880  000170  0EFF               	movlw	-1
 34881  000172  0060  F033  FFE3   	movff	btemp+11,plusw1
 34882  000178  0EFE               	movlw	-2
 34883  00017A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34884  000180  D011               	goto	l9663
 34885  000182                     l9661:
 34886                           
 34887                           ;stkvar	_s @ sp[(-2)+-2]
 34888  000182  0EFC               	movlw	-4
 34889  000184  50E3               	movf	plusw1,w,c
 34890  000186  0F01               	addlw	1
 34891  000188  6E01               	movwf	btemp^0,c
 34892  00018A  0EFC               	movlw	-4
 34893  00018C  0060  F007  FFE3   	movff	btemp,plusw1
 34894  000192  6A01               	clrf	btemp^0,c
 34895  000194  0EFD               	movlw	-3
 34896  000196  50E3               	movf	plusw1,w,c
 34897  000198  2001               	addwfc	btemp^0,w,c
 34898  00019A  6E01               	movwf	btemp^0,c
 34899  00019C  0EFD               	movlw	-3
 34900  00019E  0060  F007  FFE3   	movff	btemp,plusw1
 34901  0001A4                     l9663:
 34902                           
 34903                           ;stkvar	_s @ sp[(-2)+-2]
 34904  0001A4  0EFC               	movlw	-4
 34905  0001A6  006F FF8F FFF6     	movff	plusw1,tblptrl
 34906  0001AC  0EFD               	movlw	-3
 34907  0001AE  006F FF8F FFF7     	movff	plusw1,tblptrh
 34908  0001B4  0E00               	movlw	low (__mediumconst shr (0+16))
 34909  0001B6  6EF8               	movwf	tblptru,c
 34910  0001B8  0E1F               	movlw	(high __ramtop+-1)
 34911  0001BA  64F7               	cpfsgt	tblptrh,c
 34912  0001BC  D003               	bra	u7087
 34913  0001BE  0008               	tblrd		*
 34914  0001C0  50F5               	movf	tablat,w,c
 34915  0001C2  D007               	bra	u7080
 34916  0001C4                     u7087:
 34917  0001C4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 34918  0001CA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 34919  0001D0  50EF               	movf	indf0,w,c
 34920  0001D2                     u7080:
 34921  0001D2  0900               	iorlw	0
 34922  0001D4  A4D8               	btfss	status,2,c
 34923  0001D6  D7D5               	goto	l9661
 34924                           
 34925                           ;stkvar	_a @ sp[(-2)+0]
 34926                           ;stkvar	_s @ sp[(-2)+-2]
 34927  0001D8  0EFC               	movlw	-4
 34928  0001DA  006F FF8C  F001    	movff	plusw1,btemp
 34929  0001E0  0EFD               	movlw	-3
 34930  0001E2  006F FF8C  F002    	movff	plusw1,btemp+1
 34931  0001E8  0EFE               	movlw	-2
 34932  0001EA  50E3               	movf	plusw1,w,c
 34933  0001EC  5E01               	subwf	btemp^0,f,c
 34934  0001EE  0EFF               	movlw	-1
 34935  0001F0  50E3               	movf	plusw1,w,c
 34936  0001F2  5A02               	subwfb	(btemp+1)^0,f,c
 34937                           
 34938                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 34939  0001F4  52E5               	movf	postdec1,f,c
 34940  0001F6  52E5               	movf	postdec1,f,c
 34941  0001F8  52E5               	movf	postdec1,f,c
 34942  0001FA  52E5               	movf	postdec1,f,c
 34943  0001FC  0012               	return		;funcret
 34944  0001FE                     __end_of_strlen:
 34945                           	opt callstack 0
 34946                           
 34947 ;; *************** function _fputs *****************
 34948 ;; Defined at:
 34949 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 34950 ;; Parameters:    Size  Location     Type
 34951 ;;  s               2  [STACK] PTR const unsigned char 
 34952 ;;		 -> dbuf(80), 
 34953 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34954 ;;		 -> f(6), NULL(0), 
 34955 ;; Auto vars:     Size  Location     Type
 34956 ;;  i               2  [STACK] int 
 34957 ;;  c               1  [STACK] unsigned char 
 34958 ;; Return value:  Size  Location     Type
 34959 ;;                  2  [STACK] int 
 34960 ;; Registers used:
 34961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 34962 ;; Tracked objects:
 34963 ;;		On entry : 0/3
 34964 ;;		On exit  : 0/0
 34965 ;;		Unchanged: 0/0
 34966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34971 ;;Total ram usage:        0 bytes
 34972 ;; Hardware stack levels used:    1
 34973 ;; Hardware stack levels required when called:   18
 34974 ;; This function calls:
 34975 ;;		_fputc
 34976 ;; This function is called by:
 34977 ;;		_pad
 34978 ;; This function uses a reentrant model
 34979 ;;
 34980                           
 34981                           	psect	text118
 34982  000298                     __ptext118:
 34983                           	opt callstack 0
 34984  000298                     _fputs:
 34985                           	opt callstack 0
 34986                           
 34987                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34988  000298  52E6               	movf	postinc1,f,c
 34989  00029A  52E6               	movf	postinc1,f,c
 34990  00029C  52E6               	movf	postinc1,f,c
 34991                           
 34992                           ;stkvar	_i @ sp[(-3)+0]
 34993                           
 34994                           ;incstack = 0
 34995 ;; hardware stack exceeded
 34996  00029E  0EFD               	movlw	-3
 34997  0002A0  6AE3               	clrf	plusw1,c
 34998  0002A2  0EFE               	movlw	-2
 34999  0002A4  6AE3               	clrf	plusw1,c
 35000  0002A6  D01F               	goto	l15179
 35001  0002A8                     l15175:
 35002                           
 35003                           ;stkvar	_fp @ sp[(-3)+-4]
 35004  0002A8  0EF9               	movlw	-7
 35005  0002AA  006F FF8F FFE6     	movff	plusw1,postinc1
 35006  0002B0  006F FF8F FFE6     	movff	plusw1,postinc1
 35007                           
 35008                           ;stkvar	_c @ sp[(-5)+2]
 35009  0002B6  0EFD               	movlw	-3
 35010  0002B8  50E3               	movf	plusw1,w,c
 35011  0002BA  6EE6               	movwf	postinc1,c
 35012  0002BC  0E00               	movlw	0
 35013  0002BE  6EE6               	movwf	postinc1,c
 35014  0002C0  ECF9  F0F3         	call	_fputc	;wreg free
 35015                           
 35016                           ;stkvar	_i @ sp[(-3)+0]
 35017  0002C4  0EFD               	movlw	-3
 35018  0002C6  50E3               	movf	plusw1,w,c
 35019  0002C8  0F01               	addlw	1
 35020  0002CA  6E01               	movwf	btemp^0,c
 35021  0002CC  0EFD               	movlw	-3
 35022  0002CE  0060  F007  FFE3   	movff	btemp,plusw1
 35023  0002D4  6A01               	clrf	btemp^0,c
 35024  0002D6  0EFE               	movlw	-2
 35025  0002D8  50E3               	movf	plusw1,w,c
 35026  0002DA  2001               	addwfc	btemp^0,w,c
 35027  0002DC  6E01               	movwf	btemp^0,c
 35028  0002DE  0EFE               	movlw	-2
 35029  0002E0  0060  F007  FFE3   	movff	btemp,plusw1
 35030  0002E6                     l15179:
 35031                           
 35032                           ;stkvar	_i @ sp[(-3)+0]
 35033  0002E6  0EFD               	movlw	-3
 35034  0002E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 35035  0002EE  0EFE               	movlw	-2
 35036  0002F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 35037                           
 35038                           ;stkvar	_s @ sp[(-3)+-2]
 35039  0002F6  0EFB               	movlw	-5
 35040  0002F8  006F FF8C  F009    	movff	plusw1,btemp+8
 35041  0002FE  0EFC               	movlw	-4
 35042  000300  006F FF8C  F00A    	movff	plusw1,btemp+9
 35043  000306  500B               	movf	(btemp+10)^0,w,c
 35044  000308  2409               	addwf	(btemp+8)^0,w,c
 35045  00030A  6ED9               	movwf	fsr2l,c
 35046  00030C  500C               	movf	(btemp+11)^0,w,c
 35047  00030E  200A               	addwfc	(btemp+9)^0,w,c
 35048  000310  6EDA               	movwf	fsr2h,c
 35049  000312  50DF               	movf	indf2,w,c
 35050  000314  6E0C               	movwf	(btemp+11)^0,c
 35051                           
 35052                           ;stkvar	_c @ sp[(-3)+2]
 35053  000316  0EFF               	movlw	-1
 35054  000318  0060  F033  FFE3   	movff	btemp+11,plusw1
 35055  00031E  0EFF               	movlw	-1
 35056  000320  50E3               	movf	plusw1,w,c
 35057  000322  A4D8               	btfss	status,2,c
 35058  000324  D7C1               	goto	l15175
 35059                           
 35060                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35061  000326  0EF9               	movlw	249
 35062  000328  26E1               	addwf	fsr1l,f,c
 35063  00032A  0EFF               	movlw	255
 35064  00032C  22E2               	addwfc	fsr1h,f,c
 35065  00032E  0012               	return		;funcret
 35066  000330                     __end_of_fputs:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function _fputc *****************
 35070 ;; Defined at:
 35071 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;  c               2  [STACK] int 
 35074 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35075 ;;		 -> f(6), NULL(0), 
 35076 ;; Auto vars:     Size  Location     Type
 35077 ;;		None
 35078 ;; Return value:  Size  Location     Type
 35079 ;;                  2  [STACK] int 
 35080 ;; Registers used:
 35081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35082 ;; Tracked objects:
 35083 ;;		On entry : 0/0
 35084 ;;		On exit  : 0/0
 35085 ;;		Unchanged: 0/0
 35086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35091 ;;Total ram usage:        0 bytes
 35092 ;; Hardware stack levels used:    1
 35093 ;; Hardware stack levels required when called:   17
 35094 ;; This function calls:
 35095 ;;		_putch
 35096 ;; This function is called by:
 35097 ;;		_pad
 35098 ;;		_stoa
 35099 ;;		_vfpfcnvrt
 35100 ;;		_fputs
 35101 ;; This function uses a reentrant model
 35102 ;;
 35103                           
 35104                           	psect	text119
 35105  01E7F2                     __ptext119:
 35106                           	opt callstack 0
 35107  01E7F2                     _fputc:
 35108                           	opt callstack 0
 35109                           
 35110                           ;stkvar	_fp @ sp[(0)+-4]
 35111                           
 35112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35113                           ;incstack = 0
 35114 ;; hardware stack exceeded
 35115  01E7F2  0EFC               	movlw	-4
 35116  01E7F4  006F FF8C  F001    	movff	plusw1,btemp
 35117  01E7FA  0EFD               	movlw	-3
 35118  01E7FC  50E3               	movf	plusw1,w,c
 35119  01E7FE  1001               	iorwf	btemp^0,w,c
 35120  01E800  B4D8               	btfsc	status,2,c
 35121  01E802  D009               	goto	u14070
 35122                           
 35123                           ;stkvar	_fp @ sp[(0)+-4]
 35124  01E804  0EFC               	movlw	-4
 35125  01E806  006F FF8C  F001    	movff	plusw1,btemp
 35126  01E80C  0EFD               	movlw	-3
 35127  01E80E  50E3               	movf	plusw1,w,c
 35128  01E810  1001               	iorwf	btemp^0,w,c
 35129  01E812  A4D8               	btfss	status,2,c
 35130  01E814  D006               	goto	l15163
 35131  01E816                     u14070:
 35132                           
 35133                           ;stkvar	_c @ sp[(0)+-2]
 35134  01E816  0EFE               	movlw	-2
 35135  01E818  50E3               	movf	plusw1,w,c
 35136  01E81A  6EE6               	movwf	postinc1,c
 35137  01E81C  EC60  F00E         	call	_putch	;wreg free
 35138  01E820  D075               	goto	l3516
 35139  01E822                     l15163:
 35140                           
 35141                           ;stkvar	_fp @ sp[(0)+-4]
 35142  01E822  0EFC               	movlw	-4
 35143  01E824  006F FF8C  F00B    	movff	plusw1,btemp+10
 35144  01E82A  0EFD               	movlw	-3
 35145  01E82C  006F FF8C  F00C    	movff	plusw1,btemp+11
 35146  01E832  0E04               	movlw	4
 35147  01E834  240B               	addwf	(btemp+10)^0,w,c
 35148  01E836  6ED9               	movwf	fsr2l,c
 35149  01E838  0E00               	movlw	0
 35150  01E83A  200C               	addwfc	(btemp+11)^0,w,c
 35151  01E83C  6EDA               	movwf	fsr2h,c
 35152  01E83E  50DE               	movf	postinc2,w,c
 35153  01E840  10DE               	iorwf	postinc2,w,c
 35154  01E842  B4D8               	btfsc	status,2,c
 35155  01E844  D026               	goto	u14090
 35156                           
 35157                           ;stkvar	_fp @ sp[(0)+-4]
 35158  01E846  0EFC               	movlw	-4
 35159  01E848  006F FF8C  F00B    	movff	plusw1,btemp+10
 35160  01E84E  0EFD               	movlw	-3
 35161  01E850  006F FF8C  F00C    	movff	plusw1,btemp+11
 35162  01E856  0E04               	movlw	4
 35163  01E858  240B               	addwf	(btemp+10)^0,w,c
 35164  01E85A  6ED9               	movwf	fsr2l,c
 35165  01E85C  0E00               	movlw	0
 35166  01E85E  200C               	addwfc	(btemp+11)^0,w,c
 35167  01E860  6EDA               	movwf	fsr2h,c
 35168                           
 35169                           ;stkvar	_fp @ sp[(0)+-4]
 35170  01E862  0EFC               	movlw	-4
 35171  01E864  006F FF8C  F00B    	movff	plusw1,btemp+10
 35172  01E86A  0EFD               	movlw	-3
 35173  01E86C  006F FF8C  F00C    	movff	plusw1,btemp+11
 35174  01E872  0E02               	movlw	2
 35175  01E874  240B               	addwf	(btemp+10)^0,w,c
 35176  01E876  6EE9               	movwf	fsr0l,c
 35177  01E878  0E00               	movlw	0
 35178  01E87A  200C               	addwfc	(btemp+11)^0,w,c
 35179  01E87C  6EEA               	movwf	fsr0h,c
 35180  01E87E  50DE               	movf	postinc2,w,c
 35181  01E880  5CEE               	subwf	postinc0,w,c
 35182  01E882  50EE               	movf	postinc0,w,c
 35183  01E884  0A80               	xorlw	128
 35184  01E886  6E01               	movwf	btemp^0,c
 35185  01E888  50DE               	movf	postinc2,w,c
 35186  01E88A  0A80               	xorlw	128
 35187  01E88C  5801               	subwfb	btemp^0,w,c
 35188  01E88E  B0D8               	btfsc	status,0,c
 35189  01E890  D03D               	goto	l3516
 35190  01E892                     u14090:
 35191                           
 35192                           ;stkvar	_c @ sp[(0)+-2]
 35193                           ;stkvar	_fp @ sp[(0)+-4]
 35194  01E892  0EFC               	movlw	-4
 35195  01E894  006F FF8C  F00B    	movff	plusw1,btemp+10
 35196  01E89A  0EFD               	movlw	-3
 35197  01E89C  006F FF8C  F00C    	movff	plusw1,btemp+11
 35198  01E8A2  0E02               	movlw	2
 35199  01E8A4  240B               	addwf	(btemp+10)^0,w,c
 35200  01E8A6  6ED9               	movwf	fsr2l,c
 35201  01E8A8  0E00               	movlw	0
 35202  01E8AA  200C               	addwfc	(btemp+11)^0,w,c
 35203  01E8AC  6EDA               	movwf	fsr2h,c
 35204  01E8AE  006F FF78  F00B    	movff	postinc2,btemp+10
 35205  01E8B4  006F FF74  F00C    	movff	postdec2,btemp+11
 35206                           
 35207                           ;stkvar	_fp @ sp[(0)+-4]
 35208  01E8BA  0EFC               	movlw	-4
 35209  01E8BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 35210  01E8C2  0EFD               	movlw	-3
 35211  01E8C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 35212  01E8CA  006F FF78  F009    	movff	postinc2,btemp+8
 35213  01E8D0  006F FF74  F00A    	movff	postdec2,btemp+9
 35214  01E8D6  500B               	movf	(btemp+10)^0,w,c
 35215  01E8D8  2409               	addwf	(btemp+8)^0,w,c
 35216  01E8DA  6ED9               	movwf	fsr2l,c
 35217  01E8DC  500C               	movf	(btemp+11)^0,w,c
 35218  01E8DE  200A               	addwfc	(btemp+9)^0,w,c
 35219  01E8E0  6EDA               	movwf	fsr2h,c
 35220  01E8E2  0EFE               	movlw	-2
 35221  01E8E4  006F FF8F FFDF     	movff	plusw1,indf2
 35222                           
 35223                           ;stkvar	_fp @ sp[(0)+-4]
 35224  01E8EA  0EFC               	movlw	-4
 35225  01E8EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 35226  01E8F2  0EFD               	movlw	-3
 35227  01E8F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 35228  01E8FA  0E02               	movlw	2
 35229  01E8FC  240B               	addwf	(btemp+10)^0,w,c
 35230  01E8FE  6ED9               	movwf	fsr2l,c
 35231  01E900  0E00               	movlw	0
 35232  01E902  200C               	addwfc	(btemp+11)^0,w,c
 35233  01E904  6EDA               	movwf	fsr2h,c
 35234  01E906  2ADE               	incf	postinc2,f,c
 35235  01E908  0E00               	movlw	0
 35236  01E90A  22DD               	addwfc	postdec2,f,c
 35237  01E90C                     l3516:
 35238                           
 35239                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35240  01E90C  52E5               	movf	postdec1,f,c
 35241  01E90E  52E5               	movf	postdec1,f,c
 35242  01E910  52E5               	movf	postdec1,f,c
 35243  01E912  52E5               	movf	postdec1,f,c
 35244  01E914  0012               	return		;funcret
 35245  01E916                     __end_of_fputc:
 35246                           	opt callstack 0
 35247                           
 35248 ;; *************** function _putch *****************
 35249 ;; Defined at:
 35250 ;;		line 421 in file "eadog.c"
 35251 ;; Parameters:    Size  Location     Type
 35252 ;;  c               1  [STACK] unsigned char 
 35253 ;; Auto vars:     Size  Location     Type
 35254 ;;		None
 35255 ;; Return value:  Size  Location     Type
 35256 ;;                  1  [STACK] void 
 35257 ;; Registers used:
 35258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35259 ;; Tracked objects:
 35260 ;;		On entry : 0/0
 35261 ;;		On exit  : 0/0
 35262 ;;		Unchanged: 0/0
 35263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35268 ;;Total ram usage:        0 bytes
 35269 ;; Hardware stack levels used:    1
 35270 ;; Hardware stack levels required when called:   16
 35271 ;; This function calls:
 35272 ;;		_ringBufS_put_dma
 35273 ;; This function is called by:
 35274 ;;		_fputc
 35275 ;; This function uses a reentrant model
 35276 ;;
 35277                           
 35278                           	psect	text120
 35279  001CC0                     __ptext120:
 35280                           	opt callstack 0
 35281  001CC0                     _putch:
 35282                           	opt callstack 0
 35283                           
 35284                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 35285                           ;stkvar	_c @ sp[(0)+-1]
 35286                           
 35287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35288                           ;incstack = 0
 35289 ;; hardware stack exceeded
 35290  001CC0  0EFF               	movlw	-1
 35291  001CC2  50E3               	movf	plusw1,w,c
 35292  001CC4  6EE6               	movwf	postinc1,c
 35293  001CC6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 35294  001CCC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 35295  001CD2  EC24  F0FF         	call	_ringBufS_put_dma	;wreg free
 35296                           
 35297                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 35298  001CD6  52E5               	movf	postdec1,f,c
 35299  001CD8  0012               	return		;funcret
 35300  001CDA                     __end_of_putch:
 35301                           	opt callstack 0
 35302                           
 35303 ;; *************** function _ringBufS_put_dma *****************
 35304 ;; Defined at:
 35305 ;;		line 67 in file "ringbufs.c"
 35306 ;; Parameters:    Size  Location     Type
 35307 ;;  _this           2  [STACK] PTR struct ringBufS_t
 35308 ;;		 -> ring_buf1(67), 
 35309 ;;  c               1  [STACK] const unsigned char 
 35310 ;; Auto vars:     Size  Location     Type
 35311 ;;		None
 35312 ;; Return value:  Size  Location     Type
 35313 ;;                  1  [STACK] void 
 35314 ;; Registers used:
 35315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35316 ;; Tracked objects:
 35317 ;;		On entry : 0/0
 35318 ;;		On exit  : 0/0
 35319 ;;		Unchanged: 0/0
 35320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35325 ;;Total ram usage:        0 bytes
 35326 ;; Hardware stack levels used:    1
 35327 ;; Hardware stack levels required when called:   15
 35328 ;; This function calls:
 35329 ;;		Nothing
 35330 ;; This function is called by:
 35331 ;;		_putch
 35332 ;; This function uses a reentrant model
 35333 ;;
 35334                           
 35335                           	psect	text121
 35336  01FE48                     __ptext121:
 35337                           	opt callstack 0
 35338  01FE48                     _ringBufS_put_dma:
 35339                           	opt callstack 0
 35340                           
 35341                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 35342                           ;stkvar	__this @ sp[(0)+-2]
 35343                           
 35344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35345                           ;incstack = 0
 35346 ;; hardware stack exceeded
 35347  01FE48  0EFE               	movlw	-2
 35348  01FE4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 35349  01FE50  0EFF               	movlw	-1
 35350  01FE52  006F FF8C  F00C    	movff	plusw1,btemp+11
 35351  01FE58  0E42               	movlw	66
 35352  01FE5A  240B               	addwf	(btemp+10)^0,w,c
 35353  01FE5C  6ED9               	movwf	fsr2l,c
 35354  01FE5E  0E00               	movlw	0
 35355  01FE60  200C               	addwfc	(btemp+11)^0,w,c
 35356  01FE62  6EDA               	movwf	fsr2h,c
 35357  01FE64  0E40               	movlw	64
 35358  01FE66  60DF               	cpfslt	indf2,c
 35359  01FE68  D040               	goto	l1734
 35360                           
 35361                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 35362                           ;stkvar	_c @ sp[(0)+-3]
 35363                           ;stkvar	__this @ sp[(0)+-2]
 35364  01FE6A  0EFE               	movlw	-2
 35365  01FE6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 35366  01FE72  0EFF               	movlw	-1
 35367  01FE74  006F FF8C  F00C    	movff	plusw1,btemp+11
 35368  01FE7A  0E40               	movlw	64
 35369  01FE7C  240B               	addwf	(btemp+10)^0,w,c
 35370  01FE7E  6ED9               	movwf	fsr2l,c
 35371  01FE80  0E00               	movlw	0
 35372  01FE82  200C               	addwfc	(btemp+11)^0,w,c
 35373  01FE84  6EDA               	movwf	fsr2h,c
 35374  01FE86  50DF               	movf	indf2,w,c
 35375  01FE88  6E0C               	movwf	(btemp+11)^0,c
 35376                           
 35377                           ;stkvar	__this @ sp[(0)+-2]
 35378  01FE8A  0EFE               	movlw	-2
 35379  01FE8C  006F FF8C  F009    	movff	plusw1,btemp+8
 35380  01FE92  0EFF               	movlw	-1
 35381  01FE94  006F FF8C  F00A    	movff	plusw1,btemp+9
 35382  01FE9A  500C               	movf	(btemp+11)^0,w,c
 35383  01FE9C  2409               	addwf	(btemp+8)^0,w,c
 35384  01FE9E  6ED9               	movwf	fsr2l,c
 35385  01FEA0  0E00               	movlw	0
 35386  01FEA2  200A               	addwfc	(btemp+9)^0,w,c
 35387  01FEA4  6EDA               	movwf	fsr2h,c
 35388  01FEA6  0EFD               	movlw	-3
 35389  01FEA8  006F FF8F FFDF     	movff	plusw1,indf2
 35390                           
 35391                           ;ringbufs.c: 71:   ++_this->head;
 35392                           ;stkvar	__this @ sp[(0)+-2]
 35393  01FEAE  0EFE               	movlw	-2
 35394  01FEB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 35395  01FEB6  0EFF               	movlw	-1
 35396  01FEB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 35397  01FEBE  0E40               	movlw	64
 35398  01FEC0  240B               	addwf	(btemp+10)^0,w,c
 35399  01FEC2  6ED9               	movwf	fsr2l,c
 35400  01FEC4  0E00               	movlw	0
 35401  01FEC6  200C               	addwfc	(btemp+11)^0,w,c
 35402  01FEC8  6EDA               	movwf	fsr2h,c
 35403  01FECA  2ADF               	incf	indf2,f,c
 35404                           
 35405                           ;ringbufs.c: 72:   ++_this->count;
 35406                           ;stkvar	__this @ sp[(0)+-2]
 35407  01FECC  0EFE               	movlw	-2
 35408  01FECE  006F FF8C  F00B    	movff	plusw1,btemp+10
 35409  01FED4  0EFF               	movlw	-1
 35410  01FED6  006F FF8C  F00C    	movff	plusw1,btemp+11
 35411  01FEDC  0E42               	movlw	66
 35412  01FEDE  240B               	addwf	(btemp+10)^0,w,c
 35413  01FEE0  6ED9               	movwf	fsr2l,c
 35414  01FEE2  0E00               	movlw	0
 35415  01FEE4  200C               	addwfc	(btemp+11)^0,w,c
 35416  01FEE6  6EDA               	movwf	fsr2h,c
 35417  01FEE8  2ADF               	incf	indf2,f,c
 35418  01FEEA                     l1734:
 35419                           
 35420                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 35421  01FEEA  52E5               	movf	postdec1,f,c
 35422  01FEEC  52E5               	movf	postdec1,f,c
 35423  01FEEE  52E5               	movf	postdec1,f,c
 35424  01FEF0  0012               	return		;funcret
 35425  01FEF2                     __end_of_ringBufS_put_dma:
 35426                           	opt callstack 0
 35427                           
 35428 ;; *************** function _atoi *****************
 35429 ;; Defined at:
 35430 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 35431 ;; Parameters:    Size  Location     Type
 35432 ;;  s               2  [STACK] PTR const unsigned char 
 35433 ;;		 -> STR_87(127), STR_85(3), STR_84(3), STR_83(19), 
 35434 ;;		 -> STR_82(19), STR_81(19), STR_80(19), STR_79(19), 
 35435 ;;		 -> STR_78(19), STR_77(24), STR_76(15), STR_75(15), 
 35436 ;;		 -> STR_74(15), STR_73(10), STR_72(10), STR_71(19), 
 35437 ;;		 -> STR_70(19), STR_67(3), STR_66(3), STR_65(14), 
 35438 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 35439 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 35440 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 35441 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 35442 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 35443 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 35444 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 35445 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 35446 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 35447 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 35448 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 35449 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 35450 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 35451 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 35452 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 35453 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 35454 ;; Auto vars:     Size  Location     Type
 35455 ;;  n               2  [STACK] int 
 35456 ;;  neg             2  [STACK] int 
 35457 ;; Return value:  Size  Location     Type
 35458 ;;                  2  [STACK] int 
 35459 ;; Registers used:
 35460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 35461 ;; Tracked objects:
 35462 ;;		On entry : 0/0
 35463 ;;		On exit  : 0/0
 35464 ;;		Unchanged: 0/0
 35465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35470 ;;Total ram usage:        0 bytes
 35471 ;; Hardware stack levels used:    1
 35472 ;; Hardware stack levels required when called:   16
 35473 ;; This function calls:
 35474 ;;		_isdigit
 35475 ;;		_isspace
 35476 ;; This function is called by:
 35477 ;;		_vfpfcnvrt
 35478 ;; This function uses a reentrant model
 35479 ;;
 35480                           
 35481                           	psect	text122
 35482  01B6B2                     __ptext122:
 35483                           	opt callstack 0
 35484  01B6B2                     _atoi:
 35485                           	opt callstack 0
 35486                           
 35487                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35488  01B6B2  0E09               	movlw	9
 35489  01B6B4  26E1               	addwf	fsr1l,f,c
 35490  01B6B6  0E00               	movlw	0
 35491  01B6B8  22E2               	addwfc	fsr1h,f,c
 35492                           
 35493                           ;stkvar	_n @ sp[(-9)+5]
 35494                           
 35495                           ;incstack = 0
 35496 ;; hardware stack exceeded
 35497  01B6BA  0EFC               	movlw	-4
 35498  01B6BC  6AE3               	clrf	plusw1,c
 35499  01B6BE  0EFD               	movlw	-3
 35500  01B6C0  6AE3               	clrf	plusw1,c
 35501                           
 35502                           ;stkvar	_neg @ sp[(-9)+7]
 35503  01B6C2  0EFE               	movlw	-2
 35504  01B6C4  6AE3               	clrf	plusw1,c
 35505  01B6C6  0EFF               	movlw	-1
 35506  01B6C8  6AE3               	clrf	plusw1,c
 35507  01B6CA  D011               	goto	l11359
 35508  01B6CC                     l11357:
 35509                           
 35510                           ;stkvar	_s @ sp[(-9)+-2]
 35511  01B6CC  0EF5               	movlw	-11
 35512  01B6CE  50E3               	movf	plusw1,w,c
 35513  01B6D0  0F01               	addlw	1
 35514  01B6D2  6E01               	movwf	btemp^0,c
 35515  01B6D4  0EF5               	movlw	-11
 35516  01B6D6  0060  F007  FFE3   	movff	btemp,plusw1
 35517  01B6DC  6A01               	clrf	btemp^0,c
 35518  01B6DE  0EF6               	movlw	-10
 35519  01B6E0  50E3               	movf	plusw1,w,c
 35520  01B6E2  2001               	addwfc	btemp^0,w,c
 35521  01B6E4  6E01               	movwf	btemp^0,c
 35522  01B6E6  0EF6               	movlw	-10
 35523  01B6E8  0060  F007  FFE3   	movff	btemp,plusw1
 35524  01B6EE                     l11359:
 35525                           
 35526                           ;stkvar	_atoi$7423 @ sp[(-9)+4]
 35527  01B6EE  0EFB               	movlw	-5
 35528  01B6F0  6AE3               	clrf	plusw1,c
 35529  01B6F2  2AE3               	incf	plusw1,f,c
 35530                           
 35531                           ;stkvar	_s @ sp[(-9)+-2]
 35532  01B6F4  50E1               	movf	fsr1l,w,c
 35533  01B6F6  0FF5               	addlw	-11
 35534  01B6F8  6ED9               	movwf	fsr2l,c
 35535  01B6FA  50E2               	movf	fsr1h,w,c
 35536  01B6FC  6EDA               	movwf	fsr2h,c
 35537  01B6FE  0EFF               	movlw	255
 35538  01B700  22DA               	addwfc	fsr2h,f,c
 35539  01B702  006F FF7B FFF6     	movff	postinc2,tblptrl
 35540  01B708  006F FF77 FFF7     	movff	postdec2,tblptrh
 35541  01B70E                     	if	0	;tblptru may be non-zero
 35542  01B70E                     	endif
 35543  01B70E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35544  01B70E  0E00               	movlw	low (__mediumconst shr (0+16))
 35545  01B710  6EF8               	movwf	tblptru,c
 35546  01B712                     	endif
 35547  01B712  0008               	tblrd		*
 35548  01B714  50F5               	movf	tablat,w,c
 35549  01B716  0A20               	xorlw	32
 35550  01B718  B4D8               	btfsc	status,2,c
 35551  01B71A  D023               	goto	l11367
 35552  01B71C  0EF7               	movlw	247
 35553  01B71E  6E0B               	movwf	(btemp+10)^0,c
 35554  01B720  0EFF               	movlw	255
 35555  01B722  6E0C               	movwf	(btemp+11)^0,c
 35556                           
 35557                           ;stkvar	_s @ sp[(-9)+-2]
 35558  01B724  50E1               	movf	fsr1l,w,c
 35559  01B726  0FF5               	addlw	-11
 35560  01B728  6ED9               	movwf	fsr2l,c
 35561  01B72A  50E2               	movf	fsr1h,w,c
 35562  01B72C  6EDA               	movwf	fsr2h,c
 35563  01B72E  0EFF               	movlw	255
 35564  01B730  22DA               	addwfc	fsr2h,f,c
 35565  01B732  006F FF7B FFF6     	movff	postinc2,tblptrl
 35566  01B738  006F FF77 FFF7     	movff	postdec2,tblptrh
 35567  01B73E                     	if	0	;tblptru may be non-zero
 35568  01B73E                     	endif
 35569  01B73E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35570  01B73E  0E00               	movlw	low (__mediumconst shr (0+16))
 35571  01B740  6EF8               	movwf	tblptru,c
 35572  01B742                     	endif
 35573  01B742  0008               	tblrd		*
 35574  01B744  50F5               	movf	tablat,w,c
 35575  01B746  6E09               	movwf	(btemp+8)^0,c
 35576  01B748  6A0A               	clrf	(btemp+9)^0,c
 35577  01B74A  500B               	movf	(btemp+10)^0,w,c
 35578  01B74C  2609               	addwf	(btemp+8)^0,f,c
 35579  01B74E  500C               	movf	(btemp+11)^0,w,c
 35580  01B750  220A               	addwfc	(btemp+9)^0,f,c
 35581  01B752  500A               	movf	(btemp+9)^0,w,c
 35582  01B754  E104               	bnz	u10320
 35583  01B756  0E05               	movlw	5
 35584  01B758  5C09               	subwf	(btemp+8)^0,w,c
 35585  01B75A  A0D8               	btfss	status,0,c
 35586  01B75C  D002               	goto	l11367
 35587  01B75E                     u10320:
 35588                           
 35589                           ;stkvar	_atoi$7423 @ sp[(-9)+4]
 35590  01B75E  0EFB               	movlw	-5
 35591  01B760  6AE3               	clrf	plusw1,c
 35592  01B762                     l11367:
 35593                           
 35594                           ;stkvar	_atoi$7423 @ sp[(-9)+4]
 35595  01B762  0EFB               	movlw	-5
 35596  01B764  50E3               	movf	plusw1,w,c
 35597  01B766  6E0B               	movwf	(btemp+10)^0,c
 35598  01B768  6A0C               	clrf	(btemp+11)^0,c
 35599                           
 35600                           ;stkvar	_atoi$7422 @ sp[(-9)+2]
 35601  01B76A  0EF9               	movlw	-7
 35602  01B76C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35603  01B772  0EFA               	movlw	-6
 35604  01B774  0060  F033  FFE3   	movff	btemp+11,plusw1
 35605                           
 35606                           ;stkvar	_atoi$7422 @ sp[(-9)+2]
 35607  01B77A  0EF9               	movlw	-7
 35608  01B77C  006F FF8C  F001    	movff	plusw1,btemp
 35609  01B782  0EFA               	movlw	-6
 35610  01B784  50E3               	movf	plusw1,w,c
 35611  01B786  1001               	iorwf	btemp^0,w,c
 35612  01B788  B4D8               	btfsc	status,2,c
 35613  01B78A  D01F               	goto	l11377
 35614  01B78C  D79F               	goto	l11357
 35615  01B78E                     l11373:
 35616  01B78E  0E01               	movlw	1
 35617  01B790  6E0B               	movwf	(btemp+10)^0,c
 35618  01B792  0E00               	movlw	0
 35619  01B794  6E0C               	movwf	(btemp+11)^0,c
 35620                           
 35621                           ;stkvar	_neg @ sp[(-9)+7]
 35622  01B796  0EFE               	movlw	-2
 35623  01B798  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35624  01B79E  0EFF               	movlw	-1
 35625  01B7A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 35626  01B7A6                     l11375:
 35627                           
 35628                           ;stkvar	_s @ sp[(-9)+-2]
 35629  01B7A6  0EF5               	movlw	-11
 35630  01B7A8  50E3               	movf	plusw1,w,c
 35631  01B7AA  0F01               	addlw	1
 35632  01B7AC  6E01               	movwf	btemp^0,c
 35633  01B7AE  0EF5               	movlw	-11
 35634  01B7B0  0060  F007  FFE3   	movff	btemp,plusw1
 35635  01B7B6  6A01               	clrf	btemp^0,c
 35636  01B7B8  0EF6               	movlw	-10
 35637  01B7BA  50E3               	movf	plusw1,w,c
 35638  01B7BC  2001               	addwfc	btemp^0,w,c
 35639  01B7BE  6E01               	movwf	btemp^0,c
 35640  01B7C0  0EF6               	movlw	-10
 35641  01B7C2  0060  F007  FFE3   	movff	btemp,plusw1
 35642  01B7C8  D053               	goto	l11383
 35643  01B7CA                     l11377:
 35644                           
 35645                           ;stkvar	_s @ sp[(-9)+-2]
 35646  01B7CA  50E1               	movf	fsr1l,w,c
 35647  01B7CC  0FF5               	addlw	-11
 35648  01B7CE  6ED9               	movwf	fsr2l,c
 35649  01B7D0  50E2               	movf	fsr1h,w,c
 35650  01B7D2  6EDA               	movwf	fsr2h,c
 35651  01B7D4  0EFF               	movlw	255
 35652  01B7D6  22DA               	addwfc	fsr2h,f,c
 35653  01B7D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 35654  01B7DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 35655  01B7E4                     	if	0	;tblptru may be non-zero
 35656  01B7E4                     	endif
 35657  01B7E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35658  01B7E4  0E00               	movlw	low (__mediumconst shr (0+16))
 35659  01B7E6  6EF8               	movwf	tblptru,c
 35660  01B7E8                     	endif
 35661  01B7E8  0008               	tblrd		*
 35662  01B7EA  50F5               	movf	tablat,w,c
 35663  01B7EC  6E0B               	movwf	(btemp+10)^0,c
 35664  01B7EE  6A0C               	clrf	(btemp+11)^0,c
 35665                           
 35666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35667                           ; Switch size 1, requested type "simple"
 35668                           ; Number of cases is 1, Range of values is 0 to 0
 35669                           ; switch strategies available:
 35670                           ; Name         Instructions Cycles
 35671                           ; simple_byte            4     3 (average)
 35672                           ;	Chosen strategy is simple_byte
 35673  01B7F0  500C               	movf	(btemp+11)^0,w,c
 35674  01B7F2  0A00               	xorlw	0	; case 0
 35675  01B7F4  A4D8               	btfss	status,2,c
 35676  01B7F6  D03C               	goto	l11383
 35677                           
 35678                           ; Switch size 1, requested type "simple"
 35679                           ; Number of cases is 2, Range of values is 43 to 45
 35680                           ; switch strategies available:
 35681                           ; Name         Instructions Cycles
 35682                           ; simple_byte            7     4 (average)
 35683                           ;	Chosen strategy is simple_byte
 35684  01B7F8  500B               	movf	(btemp+10)^0,w,c
 35685  01B7FA  0A2B               	xorlw	43	; case 43
 35686  01B7FC  B4D8               	btfsc	status,2,c
 35687  01B7FE  D7D3               	goto	l11375
 35688  01B800  0A06               	xorlw	6	; case 45
 35689  01B802  B4D8               	btfsc	status,2,c
 35690  01B804  D7C4               	goto	l11373
 35691  01B806  D034               	goto	l11383
 35692  01B808                     l11379:
 35693                           
 35694                           ;stkvar	_n @ sp[(-9)+5]
 35695  01B808  0EFC               	movlw	-4
 35696  01B80A  006F FF8C  F00B    	movff	plusw1,btemp+10
 35697  01B810  0EFD               	movlw	-3
 35698  01B812  006F FF8C  F00C    	movff	plusw1,btemp+11
 35699  01B818  0E0A               	movlw	10
 35700  01B81A  020B               	mulwf	(btemp+10)^0,c
 35701  01B81C  006F FFCC  F009    	movff	prodl,btemp+8
 35702  01B822  006F FFD0  F00A    	movff	prodh,btemp+9
 35703  01B828  020C               	mulwf	(btemp+11)^0,c
 35704  01B82A  50F3               	movf	prodl,w,c
 35705  01B82C  260A               	addwf	(btemp+9)^0,f,c
 35706                           
 35707                           ;stkvar	_s @ sp[(-9)+-2]
 35708  01B82E  50E1               	movf	fsr1l,w,c
 35709  01B830  0FF5               	addlw	-11
 35710  01B832  6ED9               	movwf	fsr2l,c
 35711  01B834  50E2               	movf	fsr1h,w,c
 35712  01B836  6EDA               	movwf	fsr2h,c
 35713  01B838  0EFF               	movlw	255
 35714  01B83A  22DA               	addwfc	fsr2h,f,c
 35715  01B83C  006F FF7B FFF6     	movff	postinc2,tblptrl
 35716  01B842  006F FF77 FFF7     	movff	postdec2,tblptrh
 35717  01B848                     	if	0	;tblptru may be non-zero
 35718  01B848                     	endif
 35719  01B848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35720  01B848  0E00               	movlw	low (__mediumconst shr (0+16))
 35721  01B84A  6EF8               	movwf	tblptru,c
 35722  01B84C                     	endif
 35723  01B84C  0008               	tblrd		*
 35724  01B84E  50F5               	movf	tablat,w,c
 35725  01B850  5E09               	subwf	(btemp+8)^0,f,c
 35726  01B852  0E00               	movlw	0
 35727  01B854  5A0A               	subwfb	(btemp+9)^0,f,c
 35728  01B856  0E30               	movlw	48
 35729  01B858  2609               	addwf	(btemp+8)^0,f,c
 35730  01B85A  0E00               	movlw	0
 35731  01B85C  220A               	addwfc	(btemp+9)^0,f,c
 35732                           
 35733                           ;stkvar	_n @ sp[(-9)+5]
 35734  01B85E  0EFC               	movlw	-4
 35735  01B860  0060  F027  FFE3   	movff	btemp+8,plusw1
 35736  01B866  0EFD               	movlw	-3
 35737  01B868  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35738  01B86E  D79B               	goto	l11375
 35739  01B870                     l11383:
 35740  01B870  0ED0               	movlw	208
 35741  01B872  6E0B               	movwf	(btemp+10)^0,c
 35742  01B874  0EFF               	movlw	255
 35743  01B876  6E0C               	movwf	(btemp+11)^0,c
 35744                           
 35745                           ;stkvar	_s @ sp[(-9)+-2]
 35746  01B878  50E1               	movf	fsr1l,w,c
 35747  01B87A  0FF5               	addlw	-11
 35748  01B87C  6ED9               	movwf	fsr2l,c
 35749  01B87E  50E2               	movf	fsr1h,w,c
 35750  01B880  6EDA               	movwf	fsr2h,c
 35751  01B882  0EFF               	movlw	255
 35752  01B884  22DA               	addwfc	fsr2h,f,c
 35753  01B886  006F FF7B FFF6     	movff	postinc2,tblptrl
 35754  01B88C  006F FF77 FFF7     	movff	postdec2,tblptrh
 35755  01B892                     	if	0	;tblptru may be non-zero
 35756  01B892                     	endif
 35757  01B892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35758  01B892  0E00               	movlw	low (__mediumconst shr (0+16))
 35759  01B894  6EF8               	movwf	tblptru,c
 35760  01B896                     	endif
 35761  01B896  0008               	tblrd		*
 35762  01B898  50F5               	movf	tablat,w,c
 35763  01B89A  6E09               	movwf	(btemp+8)^0,c
 35764  01B89C  6A0A               	clrf	(btemp+9)^0,c
 35765  01B89E  500B               	movf	(btemp+10)^0,w,c
 35766  01B8A0  2609               	addwf	(btemp+8)^0,f,c
 35767  01B8A2  500C               	movf	(btemp+11)^0,w,c
 35768  01B8A4  220A               	addwfc	(btemp+9)^0,f,c
 35769  01B8A6  500A               	movf	(btemp+9)^0,w,c
 35770  01B8A8  E106               	bnz	u10340
 35771  01B8AA  0E0A               	movlw	10
 35772  01B8AC  5C09               	subwf	(btemp+8)^0,w,c
 35773  01B8AE  B0D8               	btfsc	status,0,c
 35774  01B8B0  D002               	goto	u10340
 35775  01B8B2  0E01               	movlw	1
 35776  01B8B4  D001               	goto	u10350
 35777  01B8B6                     u10340:
 35778  01B8B6  0E00               	movlw	0
 35779  01B8B8                     u10350:
 35780  01B8B8  6E0B               	movwf	(btemp+10)^0,c
 35781  01B8BA  6A0C               	clrf	(btemp+11)^0,c
 35782                           
 35783                           ;stkvar	_atoi$7424 @ sp[(-9)+0]
 35784  01B8BC  0EF7               	movlw	-9
 35785  01B8BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35786  01B8C4  0EF8               	movlw	-8
 35787  01B8C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 35788                           
 35789                           ;stkvar	_atoi$7424 @ sp[(-9)+0]
 35790  01B8CC  0EF7               	movlw	-9
 35791  01B8CE  006F FF8C  F001    	movff	plusw1,btemp
 35792  01B8D4  0EF8               	movlw	-8
 35793  01B8D6  50E3               	movf	plusw1,w,c
 35794  01B8D8  1001               	iorwf	btemp^0,w,c
 35795  01B8DA  A4D8               	btfss	status,2,c
 35796  01B8DC  D795               	goto	l11379
 35797                           
 35798                           ;stkvar	_neg @ sp[(-9)+7]
 35799  01B8DE  0EFE               	movlw	-2
 35800  01B8E0  006F FF8C  F001    	movff	plusw1,btemp
 35801  01B8E6  0EFF               	movlw	-1
 35802  01B8E8  50E3               	movf	plusw1,w,c
 35803  01B8EA  1001               	iorwf	btemp^0,w,c
 35804  01B8EC  A4D8               	btfss	status,2,c
 35805  01B8EE  D00E               	goto	l11393
 35806                           
 35807                           ;stkvar	_n @ sp[(-9)+5]
 35808  01B8F0  0EFC               	movlw	-4
 35809  01B8F2  006F FF8C  F001    	movff	plusw1,btemp
 35810  01B8F8  1E01               	comf	btemp^0,f,c
 35811  01B8FA  0EFD               	movlw	-3
 35812  01B8FC  006F FF8C  F002    	movff	plusw1,btemp+1
 35813  01B902  1E02               	comf	(btemp+1)^0,f,c
 35814  01B904  2A01               	incf	btemp^0,f,c
 35815  01B906  B4D8               	btfsc	status,2,c
 35816  01B908  2A02               	incf	(btemp+1)^0,f,c
 35817  01B90A  D008               	goto	l3427
 35818  01B90C                     l11393:
 35819                           
 35820                           ;stkvar	_n @ sp[(-9)+5]
 35821  01B90C  0EFC               	movlw	-4
 35822  01B90E  006F FF8C  F001    	movff	plusw1,btemp
 35823  01B914  0EFD               	movlw	-3
 35824  01B916  006F FF8C  F002    	movff	plusw1,btemp+1
 35825  01B91C                     l3427:
 35826                           
 35827                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 35828  01B91C  0EF5               	movlw	245
 35829  01B91E  26E1               	addwf	fsr1l,f,c
 35830  01B920  0EFF               	movlw	255
 35831  01B922  22E2               	addwfc	fsr1h,f,c
 35832  01B924  0012               	return		;funcret
 35833  01B926                     __end_of_atoi:
 35834                           	opt callstack 0
 35835                           
 35836 ;; *************** function _isspace *****************
 35837 ;; Defined at:
 35838 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 35839 ;; Parameters:    Size  Location     Type
 35840 ;;  c               2  [STACK] int 
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;		None
 35843 ;; Return value:  Size  Location     Type
 35844 ;;                  2  [STACK] int 
 35845 ;; Registers used:
 35846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 35847 ;; Tracked objects:
 35848 ;;		On entry : 0/0
 35849 ;;		On exit  : 0/0
 35850 ;;		Unchanged: 0/0
 35851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35856 ;;Total ram usage:        0 bytes
 35857 ;; Hardware stack levels used:    1
 35858 ;; Hardware stack levels required when called:   15
 35859 ;; This function calls:
 35860 ;;		Nothing
 35861 ;; This function is called by:
 35862 ;;		_atoi
 35863 ;; This function uses a reentrant model
 35864 ;;
 35865                           
 35866                           	psect	text123
 35867  000F38                     __ptext123:
 35868                           	opt callstack 0
 35869  000F38                     _isspace:
 35870                           	opt callstack 0
 35871                           
 35872                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35873  000F38  52E6               	movf	postinc1,f,c
 35874                           
 35875                           ;stkvar	_isspace$7473 @ sp[(-1)+0]
 35876                           
 35877                           ;incstack = 0
 35878 ;; hardware stack exceeded
 35879  000F3A  0EFF               	movlw	-1
 35880  000F3C  6AE3               	clrf	plusw1,c
 35881  000F3E  2AE3               	incf	plusw1,f,c
 35882                           
 35883                           ;stkvar	_c @ sp[(-1)+-2]
 35884  000F40  0EFD               	movlw	-3
 35885  000F42  006F FF8C  F001    	movff	plusw1,btemp
 35886  000F48  0E20               	movlw	32
 35887  000F4A  1801               	xorwf	btemp^0,w,c
 35888  000F4C  E104               	bnz	u9160
 35889  000F4E  0EFE               	movlw	-2
 35890  000F50  50E3               	movf	plusw1,w,c
 35891  000F52  B4D8               	btfsc	status,2,c
 35892  000F54  D012               	goto	l10743
 35893  000F56                     u9160:
 35894                           
 35895                           ;stkvar	_c @ sp[(-1)+-2]
 35896  000F56  0EFD               	movlw	-3
 35897  000F58  50E3               	movf	plusw1,w,c
 35898  000F5A  0FF7               	addlw	247
 35899  000F5C  6E0B               	movwf	(btemp+10)^0,c
 35900  000F5E  0EFE               	movlw	-2
 35901  000F60  006F FF8C  F00C    	movff	plusw1,btemp+11
 35902  000F66  0EFF               	movlw	255
 35903  000F68  220C               	addwfc	(btemp+11)^0,f,c
 35904  000F6A  500C               	movf	(btemp+11)^0,w,c
 35905  000F6C  E104               	bnz	u9170
 35906  000F6E  0E05               	movlw	5
 35907  000F70  5C0B               	subwf	(btemp+10)^0,w,c
 35908  000F72  A0D8               	btfss	status,0,c
 35909  000F74  D002               	goto	l10743
 35910  000F76                     u9170:
 35911                           
 35912                           ;stkvar	_isspace$7473 @ sp[(-1)+0]
 35913  000F76  0EFF               	movlw	-1
 35914  000F78  6AE3               	clrf	plusw1,c
 35915  000F7A                     l10743:
 35916                           
 35917                           ;stkvar	_isspace$7473 @ sp[(-1)+0]
 35918  000F7A  0EFF               	movlw	-1
 35919  000F7C  50E3               	movf	plusw1,w,c
 35920  000F7E  6E01               	movwf	btemp^0,c
 35921  000F80  6A02               	clrf	(btemp+1)^0,c
 35922                           
 35923                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 35924  000F82  52E5               	movf	postdec1,f,c
 35925  000F84  52E5               	movf	postdec1,f,c
 35926  000F86  52E5               	movf	postdec1,f,c
 35927  000F88  0012               	return		;funcret
 35928  000F8A                     __end_of_isspace:
 35929                           	opt callstack 0
 35930                           
 35931 ;; *************** function _isdigit *****************
 35932 ;; Defined at:
 35933 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 35934 ;; Parameters:    Size  Location     Type
 35935 ;;  c               2  [STACK] int 
 35936 ;; Auto vars:     Size  Location     Type
 35937 ;;		None
 35938 ;; Return value:  Size  Location     Type
 35939 ;;                  2  [STACK] int 
 35940 ;; Registers used:
 35941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 35942 ;; Tracked objects:
 35943 ;;		On entry : 0/0
 35944 ;;		On exit  : 0/0
 35945 ;;		Unchanged: 0/0
 35946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35951 ;;Total ram usage:        0 bytes
 35952 ;; Hardware stack levels used:    1
 35953 ;; Hardware stack levels required when called:   15
 35954 ;; This function calls:
 35955 ;;		Nothing
 35956 ;; This function is called by:
 35957 ;;		_vfpfcnvrt
 35958 ;;		_atoi
 35959 ;; This function uses a reentrant model
 35960 ;;
 35961                           
 35962                           	psect	text124
 35963  001720                     __ptext124:
 35964                           	opt callstack 0
 35965  001720                     _isdigit:
 35966                           	opt callstack 0
 35967                           
 35968                           ;stkvar	_c @ sp[(0)+-2]
 35969                           
 35970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35971                           ;incstack = 0
 35972 ;; hardware stack exceeded
 35973  001720  0EFE               	movlw	-2
 35974  001722  50E3               	movf	plusw1,w,c
 35975  001724  0FD0               	addlw	208
 35976  001726  6E0B               	movwf	(btemp+10)^0,c
 35977  001728  0EFF               	movlw	-1
 35978  00172A  006F FF8C  F00C    	movff	plusw1,btemp+11
 35979  001730  0EFF               	movlw	255
 35980  001732  220C               	addwfc	(btemp+11)^0,f,c
 35981  001734  500C               	movf	(btemp+11)^0,w,c
 35982  001736  E106               	bnz	u7950
 35983  001738  0E0A               	movlw	10
 35984  00173A  5C0B               	subwf	(btemp+10)^0,w,c
 35985  00173C  B0D8               	btfsc	status,0,c
 35986  00173E  D002               	goto	u7950
 35987  001740  0E01               	movlw	1
 35988  001742  D001               	goto	u7960
 35989  001744                     u7950:
 35990  001744  0E00               	movlw	0
 35991  001746                     u7960:
 35992  001746  6E01               	movwf	btemp^0,c
 35993  001748  6A02               	clrf	(btemp+1)^0,c
 35994                           
 35995                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 35996  00174A  52E5               	movf	postdec1,f,c
 35997  00174C  52E5               	movf	postdec1,f,c
 35998  00174E  0012               	return		;funcret
 35999  001750                     __end_of_isdigit:
 36000                           	opt callstack 0
 36001                           
 36002 ;; *************** function _set_vterm *****************
 36003 ;; Defined at:
 36004 ;;		line 107 in file "mconfig.c"
 36005 ;; Parameters:    Size  Location     Type
 36006 ;;  vterm           1  [STACK] const unsigned char 
 36007 ;; Auto vars:     Size  Location     Type
 36008 ;;		None
 36009 ;; Return value:  Size  Location     Type
 36010 ;;                  1  [STACK] unsigned char 
 36011 ;; Registers used:
 36012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36013 ;; Tracked objects:
 36014 ;;		On entry : 0/2
 36015 ;;		On exit  : 0/0
 36016 ;;		Unchanged: 0/0
 36017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36022 ;;Total ram usage:        0 bytes
 36023 ;; Hardware stack levels used:    1
 36024 ;; Hardware stack levels required when called:   15
 36025 ;; This function calls:
 36026 ;;		Nothing
 36027 ;; This function is called by:
 36028 ;;		_main
 36029 ;;		_check_help
 36030 ;; This function uses a reentrant model
 36031 ;;
 36032                           
 36033                           	psect	text125
 36034  001C84                     __ptext125:
 36035                           	opt callstack 0
 36036  001C84                     _set_vterm:
 36037                           	opt callstack 15
 36038                           
 36039                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 36040                           ;stkvar	_vterm @ sp[(0)+-1]
 36041                           
 36042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36043                           ;incstack = 0
 36044  001C84  0EFF               	movlw	-1
 36045  001C86  006F FF8C  F00C    	movff	plusw1,btemp+11
 36046  001C8C  0E03               	movlw	3
 36047  001C8E  160C               	andwf	(btemp+11)^0,f,c
 36048  001C90  EE23  F02F         	lfsr	2,_D+480
 36049  001C94  50DF               	movf	223,w,c
 36050  001C96  180C               	xorwf	(btemp+11)^0,w,c
 36051  001C98  0BFE               	andlw	-2
 36052  001C9A  180C               	xorwf	(btemp+11)^0,w,c
 36053  001C9C  6EDF               	movwf	223,c
 36054                           
 36055                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36056  001C9E  52E5               	movf	postdec1,f,c
 36057  001CA0  0012               	return		;funcret
 36058  001CA2                     __end_of_set_vterm:
 36059                           	opt callstack 0
 36060                           
 36061 ;; *************** function _set_temp_display_help *****************
 36062 ;; Defined at:
 36063 ;;		line 211 in file "mconfig.c"
 36064 ;; Parameters:    Size  Location     Type
 36065 ;;  new_response    1  [STACK] const enum E16677
 36066 ;; Auto vars:     Size  Location     Type
 36067 ;;		None
 36068 ;; Return value:  Size  Location     Type
 36069 ;;                  1  [STACK] enum E16677
 36070 ;; Registers used:
 36071 ;;		wreg, fsr1l, fsr1h
 36072 ;; Tracked objects:
 36073 ;;		On entry : 0/1
 36074 ;;		On exit  : 3F/1
 36075 ;;		Unchanged: 0/0
 36076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36081 ;;Total ram usage:        0 bytes
 36082 ;; Hardware stack levels used:    1
 36083 ;; Hardware stack levels required when called:   15
 36084 ;; This function calls:
 36085 ;;		Nothing
 36086 ;; This function is called by:
 36087 ;;		_check_help
 36088 ;; This function uses a reentrant model
 36089 ;;
 36090                           
 36091                           	psect	text126
 36092  001DE8                     __ptext126:
 36093                           	opt callstack 0
 36094  001DE8                     _set_temp_display_help:
 36095                           	opt callstack 14
 36096                           
 36097                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 36098                           
 36099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36100                           ;incstack = 0
 36101  001DE8  0101               	movlb	1	; () banked
 36102  001DEA  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 36103                           
 36104                           ; BSR set to: 1
 36105                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 36106                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36107  001DEC  0EFF               	movlw	-1
 36108  001DEE  006F FF8C  F1A5    	movff	plusw1,_V+165	;volatile
 36109                           
 36110                           ; BSR set to: 1
 36111                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36112  001DF4  52E5               	movf	postdec1,f,c
 36113  001DF6  0012               	return		;funcret
 36114  001DF8                     __end_of_set_temp_display_help:
 36115                           	opt callstack 0
 36116                           
 36117 ;; *************** function _set_display_info *****************
 36118 ;; Defined at:
 36119 ;;		line 200 in file "mconfig.c"
 36120 ;; Parameters:    Size  Location     Type
 36121 ;;  new_response    1  [STACK] const enum E16677
 36122 ;; Auto vars:     Size  Location     Type
 36123 ;;		None
 36124 ;; Return value:  Size  Location     Type
 36125 ;;                  1  [STACK] enum E17160
 36126 ;; Registers used:
 36127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36128 ;; Tracked objects:
 36129 ;;		On entry : 0/1
 36130 ;;		On exit  : 0/0
 36131 ;;		Unchanged: 0/0
 36132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36137 ;;Total ram usage:        0 bytes
 36138 ;; Hardware stack levels used:    1
 36139 ;; Hardware stack levels required when called:   16
 36140 ;; This function calls:
 36141 ;;		_TimerDone
 36142 ;; This function is called by:
 36143 ;;		_main
 36144 ;;		_check_help
 36145 ;; This function uses a reentrant model
 36146 ;;
 36147                           
 36148                           	psect	text127
 36149  001CA2                     __ptext127:
 36150                           	opt callstack 0
 36151  001CA2                     _set_display_info:
 36152                           	opt callstack 14
 36153                           
 36154                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 36155                           
 36156                           ; BSR set to: 1
 36157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36158                           ;incstack = 0
 36159  001CA2  0E07               	movlw	7
 36160  001CA4  6EE6               	movwf	postinc1,c
 36161  001CA6  EC2B  F00C         	call	_TimerDone	;wreg free
 36162  001CAA  5001               	movf	btemp^0,w,c
 36163  001CAC  B4D8               	btfsc	status,2,c
 36164  001CAE  D006               	goto	l1869
 36165                           
 36166                           ;mconfig.c: 205:   old_info = V.response.info;
 36167  001CB0  0101               	movlb	1	; () banked
 36168  001CB2  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 36169                           
 36170                           ; BSR set to: 1
 36171                           ;mconfig.c: 206:   V.response.info = new_response_info;
 36172                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36173  001CB4  0EFF               	movlw	-1
 36174  001CB6  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 36175  001CBC                     l1869:
 36176                           
 36177                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 36178  001CBC  52E5               	movf	postdec1,f,c
 36179  001CBE  0012               	return		;funcret
 36180  001CC0                     __end_of_set_display_info:
 36181                           	opt callstack 0
 36182                           
 36183 ;; *************** function _mode_lamp_dim *****************
 36184 ;; Defined at:
 36185 ;;		line 13 in file "mconfig.c"
 36186 ;; Parameters:    Size  Location     Type
 36187 ;;  level           2  [STACK] const unsigned short 
 36188 ;; Auto vars:     Size  Location     Type
 36189 ;;		None
 36190 ;; Return value:  Size  Location     Type
 36191 ;;                  1  [STACK] void 
 36192 ;; Registers used:
 36193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36194 ;; Tracked objects:
 36195 ;;		On entry : 0/1
 36196 ;;		On exit  : 0/0
 36197 ;;		Unchanged: 0/0
 36198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36203 ;;Total ram usage:        0 bytes
 36204 ;; Hardware stack levels used:    1
 36205 ;; Hardware stack levels required when called:   16
 36206 ;; This function calls:
 36207 ;;		_PWM8_LoadDutyValue
 36208 ;; This function is called by:
 36209 ;;		_main
 36210 ;;		_check_help
 36211 ;; This function uses a reentrant model
 36212 ;;
 36213                           
 36214                           	psect	text128
 36215  001D0E                     __ptext128:
 36216                           	opt callstack 0
 36217  001D0E                     _mode_lamp_dim:
 36218                           	opt callstack 14
 36219                           
 36220                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 36221                           ;stkvar	_level @ sp[(0)+-2]
 36222                           
 36223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36224                           ;incstack = 0
 36225  001D0E  0EFE               	movlw	-2
 36226  001D10  006F FF8F FFE6     	movff	plusw1,postinc1
 36227  001D16  006F FF8F FFE6     	movff	plusw1,postinc1
 36228  001D1C  EC59  F009         	call	_PWM8_LoadDutyValue	;wreg free
 36229                           
 36230                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 36231  001D20  52E5               	movf	postdec1,f,c
 36232  001D22  52E5               	movf	postdec1,f,c
 36233  001D24  0012               	return		;funcret
 36234  001D26                     __end_of_mode_lamp_dim:
 36235                           	opt callstack 0
 36236                           
 36237 ;; *************** function _mode_lamp_bright *****************
 36238 ;; Defined at:
 36239 ;;		line 18 in file "mconfig.c"
 36240 ;; Parameters:    Size  Location     Type
 36241 ;;		None
 36242 ;; Auto vars:     Size  Location     Type
 36243 ;;		None
 36244 ;; Return value:  Size  Location     Type
 36245 ;;                  1  [STACK] void 
 36246 ;; Registers used:
 36247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36248 ;; Tracked objects:
 36249 ;;		On entry : 0/0
 36250 ;;		On exit  : 0/0
 36251 ;;		Unchanged: 0/0
 36252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36257 ;;Total ram usage:        0 bytes
 36258 ;; Hardware stack levels used:    1
 36259 ;; Hardware stack levels required when called:   16
 36260 ;; This function calls:
 36261 ;;		_PWM8_LoadDutyValue
 36262 ;; This function is called by:
 36263 ;;		_check_help
 36264 ;; This function uses a reentrant model
 36265 ;;
 36266                           
 36267                           	psect	text129
 36268  001E16                     __ptext129:
 36269                           	opt callstack 0
 36270  001E16                     _mode_lamp_bright:
 36271                           	opt callstack 13
 36272                           
 36273                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 36274                           
 36275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36276                           ;incstack = 0
 36277  001E16  0E2C               	movlw	44
 36278  001E18  6EE6               	movwf	postinc1,c
 36279  001E1A  0E01               	movlw	1
 36280  001E1C  6EE6               	movwf	postinc1,c
 36281  001E1E  EC59  F009         	call	_PWM8_LoadDutyValue	;wreg free
 36282                           
 36283                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 36284  001E22  0012               	return		;funcret
 36285  001E24                     __end_of_mode_lamp_bright:
 36286                           	opt callstack 0
 36287                           
 36288 ;; *************** function _PWM8_LoadDutyValue *****************
 36289 ;; Defined at:
 36290 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 36291 ;; Parameters:    Size  Location     Type
 36292 ;;  dutyValue       2  [STACK] unsigned short 
 36293 ;; Auto vars:     Size  Location     Type
 36294 ;;		None
 36295 ;; Return value:  Size  Location     Type
 36296 ;;                  1  [STACK] void 
 36297 ;; Registers used:
 36298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36299 ;; Tracked objects:
 36300 ;;		On entry : 0/1
 36301 ;;		On exit  : 0/0
 36302 ;;		Unchanged: 0/0
 36303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36308 ;;Total ram usage:        0 bytes
 36309 ;; Hardware stack levels used:    1
 36310 ;; Hardware stack levels required when called:   15
 36311 ;; This function calls:
 36312 ;;		Nothing
 36313 ;; This function is called by:
 36314 ;;		_mode_lamp_dim
 36315 ;;		_mode_lamp_bright
 36316 ;; This function uses a reentrant model
 36317 ;;
 36318                           
 36319                           	psect	text130
 36320  0012B2                     __ptext130:
 36321                           	opt callstack 0
 36322  0012B2                     _PWM8_LoadDutyValue:
 36323                           	opt callstack 14
 36324                           
 36325                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 36326                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36327                           
 36328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36329                           ;incstack = 0
 36330  0012B2  0EFE               	movlw	-2
 36331  0012B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 36332  0012BA  0EFF               	movlw	-1
 36333  0012BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 36334  0012C2  90D8               	bcf	status,0,c
 36335  0012C4  320C               	rrcf	(btemp+11)^0,f,c
 36336  0012C6  320B               	rrcf	(btemp+10)^0,f,c
 36337  0012C8  90D8               	bcf	status,0,c
 36338  0012CA  320C               	rrcf	(btemp+11)^0,f,c
 36339  0012CC  320B               	rrcf	(btemp+10)^0,f,c
 36340  0012CE  500B               	movf	(btemp+10)^0,w,c
 36341  0012D0  6E61               	movwf	97,c	;volatile
 36342                           
 36343                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 36344                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36345  0012D2  0EFE               	movlw	-2
 36346  0012D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 36347  0012DA  0E03               	movlw	3
 36348  0012DC  160C               	andwf	(btemp+11)^0,f,c
 36349  0012DE  0E06               	movlw	6
 36350  0012E0  6E01               	movwf	btemp^0,c
 36351  0012E2                     u12145:
 36352  0012E2  90D8               	bcf	status,0,c
 36353  0012E4  360C               	rlcf	(btemp+11)^0,f,c
 36354  0012E6  2E01               	decfsz	btemp^0,f,c
 36355  0012E8  D7FC               	goto	u12145
 36356  0012EA  500C               	movf	(btemp+11)^0,w,c
 36357  0012EC  6E60               	movwf	96,c	;volatile
 36358                           
 36359                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36360  0012EE  52E5               	movf	postdec1,f,c
 36361  0012F0  52E5               	movf	postdec1,f,c
 36362  0012F2  0012               	return		;funcret
 36363  0012F4                     __end_of_PWM8_LoadDutyValue:
 36364                           	opt callstack 0
 36365                           
 36366 ;; *************** function _help_button *****************
 36367 ;; Defined at:
 36368 ;;		line 26 in file "mconfig.c"
 36369 ;; Parameters:    Size  Location     Type
 36370 ;;		None
 36371 ;; Auto vars:     Size  Location     Type
 36372 ;;		None
 36373 ;; Return value:  Size  Location     Type
 36374 ;;                  1  [STACK] _Bool 
 36375 ;; Registers used:
 36376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36377 ;; Tracked objects:
 36378 ;;		On entry : 0/1
 36379 ;;		On exit  : 0/0
 36380 ;;		Unchanged: 0/0
 36381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36386 ;;Total ram usage:        0 bytes
 36387 ;; Hardware stack levels used:    1
 36388 ;; Hardware stack levels required when called:   16
 36389 ;; This function calls:
 36390 ;;		_StartTimer
 36391 ;;		_TimerDone
 36392 ;; This function is called by:
 36393 ;;		_check_help
 36394 ;; This function uses a reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text131
 36398  0014E8                     __ptext131:
 36399                           	opt callstack 0
 36400  0014E8                     _help_button:
 36401                           	opt callstack 13
 36402                           
 36403                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 36404                           
 36405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36406                           ;incstack = 0
 36407  0014E8  B0CB               	btfsc	203,0,c	;volatile
 36408  0014EA  D00C               	goto	l1812
 36409                           
 36410                           ;mconfig.c: 29:   V.help = 1;
 36411  0014EC  0101               	movlb	1	; () banked
 36412  0014EE  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 36413                           
 36414                           ; BSR set to: 1
 36415                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 36416  0014F0  0E08               	movlw	8
 36417  0014F2  6EE6               	movwf	postinc1,c
 36418  0014F4  EC2B  F00C         	call	_TimerDone	;wreg free
 36419  0014F8  5001               	movf	btemp^0,w,c
 36420  0014FA  B4D8               	btfsc	status,2,c
 36421  0014FC  D003               	goto	l1812
 36422                           
 36423                           ;mconfig.c: 31:    return 1;
 36424  0014FE  0E01               	movlw	1
 36425  001500  6E01               	movwf	btemp^0,c
 36426  001502  0012               	return	
 36427  001504                     l1812:
 36428                           
 36429                           ;mconfig.c: 34:  if (!V.help)
 36430  001504  0101               	movlb	1	; () banked
 36431  001506  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 36432  001508  D008               	goto	l13481
 36433                           
 36434                           ; BSR set to: 1
 36435                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 36436  00150A  0E2C               	movlw	44
 36437  00150C  6EE6               	movwf	postinc1,c
 36438  00150E  0E01               	movlw	1
 36439  001510  6EE6               	movwf	postinc1,c
 36440  001512  0E08               	movlw	8
 36441  001514  6EE6               	movwf	postinc1,c
 36442  001516  ECBA  F009         	call	_StartTimer	;wreg free
 36443  00151A                     l13481:
 36444                           
 36445                           ;mconfig.c: 37:  return 0;
 36446  00151A  0E00               	movlw	0
 36447  00151C  6E01               	movwf	btemp^0,c
 36448                           
 36449                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 36450  00151E  0012               	return		;funcret
 36451  001520                     __end_of_help_button:
 36452                           	opt callstack 0
 36453                           
 36454 ;; *************** function _TimerDone *****************
 36455 ;; Defined at:
 36456 ;;		line 20 in file "timers.c"
 36457 ;; Parameters:    Size  Location     Type
 36458 ;;  timer           1  [STACK] const unsigned char 
 36459 ;; Auto vars:     Size  Location     Type
 36460 ;;		None
 36461 ;; Return value:  Size  Location     Type
 36462 ;;                  1  [STACK] _Bool 
 36463 ;; Registers used:
 36464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36465 ;; Tracked objects:
 36466 ;;		On entry : 0/1
 36467 ;;		On exit  : 0/0
 36468 ;;		Unchanged: 0/0
 36469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36474 ;;Total ram usage:        0 bytes
 36475 ;; Hardware stack levels used:    1
 36476 ;; Hardware stack levels required when called:   15
 36477 ;; This function calls:
 36478 ;;		Nothing
 36479 ;; This function is called by:
 36480 ;;		_main
 36481 ;;		_WaitMs
 36482 ;;		_help_button
 36483 ;;		_check_help
 36484 ;;		_set_display_info
 36485 ;;		_update_adc_result
 36486 ;;		_esr_check
 36487 ;; This function uses a reentrant model
 36488 ;;
 36489                           
 36490                           	psect	text132
 36491  001856                     __ptext132:
 36492                           	opt callstack 0
 36493  001856                     _TimerDone:
 36494                           	opt callstack 14
 36495                           
 36496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36497                           ;incstack = 0
 36498  001856  0004               	clrwdt		;# 
 36499                           
 36500                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 36501                           ;stkvar	_timer @ sp[(0)+-1]
 36502  001858  0EFF               	movlw	-1
 36503  00185A  50E3               	movf	plusw1,w,c
 36504  00185C  0D02               	mullw	2
 36505  00185E  0EB2               	movlw	low _tickCount
 36506  001860  24F3               	addwf	243,w,c
 36507  001862  6ED9               	movwf	fsr2l,c
 36508  001864  0E02               	movlw	high _tickCount
 36509  001866  20F4               	addwfc	prodh,w,c
 36510  001868  6EDA               	movwf	fsr2h,c
 36511  00186A  50DE               	movf	postinc2,w,c
 36512  00186C  10DE               	iorwf	postinc2,w,c
 36513  00186E  A4D8               	btfss	status,2,c
 36514  001870  D002               	goto	l12255
 36515                           
 36516                           ;timers.c: 24:   return 1;
 36517  001872  0E01               	movlw	1
 36518  001874  D001               	goto	L41
 36519  001876                     l12255:
 36520                           
 36521                           ;timers.c: 26:  return 0;
 36522  001876  0E00               	movlw	0
 36523  001878                     L41:
 36524  001878  6E01               	movwf	btemp^0,c
 36525                           
 36526                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36527  00187A  52E5               	movf	postdec1,f,c
 36528  00187C  0012               	return		;funcret
 36529  00187E                     __end_of_TimerDone:
 36530                           	opt callstack 0
 36531                           
 36532 ;; *************** function _StartTimer *****************
 36533 ;; Defined at:
 36534 ;;		line 12 in file "timers.c"
 36535 ;; Parameters:    Size  Location     Type
 36536 ;;  timer           1  [STACK] const unsigned char 
 36537 ;;  count           2  [STACK] const unsigned short 
 36538 ;; Auto vars:     Size  Location     Type
 36539 ;;		None
 36540 ;; Return value:  Size  Location     Type
 36541 ;;                  1  [STACK] void 
 36542 ;; Registers used:
 36543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36544 ;; Tracked objects:
 36545 ;;		On entry : 0/0
 36546 ;;		On exit  : 0/0
 36547 ;;		Unchanged: 0/0
 36548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36553 ;;Total ram usage:        0 bytes
 36554 ;; Hardware stack levels used:    1
 36555 ;; Hardware stack levels required when called:   15
 36556 ;; This function calls:
 36557 ;;		Nothing
 36558 ;; This function is called by:
 36559 ;;		_main
 36560 ;;		_WaitMs
 36561 ;;		_help_button
 36562 ;;		_check_help
 36563 ;;		_update_adc_result
 36564 ;;		_calc_bsoc
 36565 ;;		_esr_check
 36566 ;; This function uses a reentrant model
 36567 ;;
 36568                           
 36569                           	psect	text133
 36570  001374                     __ptext133:
 36571                           	opt callstack 0
 36572  001374                     _StartTimer:
 36573                           	opt callstack 0
 36574                           
 36575                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 36576                           ;stkvar	_count @ sp[(0)+-3]
 36577                           
 36578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36579                           ;incstack = 0
 36580 ;; hardware stack exceeded
 36581  001374  0EFD               	movlw	-3
 36582  001376  006F FF8C  F00B    	movff	plusw1,btemp+10
 36583  00137C  0EFE               	movlw	-2
 36584  00137E  006F FF8C  F00C    	movff	plusw1,btemp+11
 36585  001384  90D8               	bcf	status,0,c
 36586  001386  340B               	rlcf	(btemp+10)^0,w,c
 36587  001388  6E09               	movwf	(btemp+8)^0,c
 36588  00138A  340C               	rlcf	(btemp+11)^0,w,c
 36589  00138C  6E0A               	movwf	(btemp+9)^0,c
 36590                           
 36591                           ;stkvar	_timer @ sp[(0)+-1]
 36592  00138E  0EFF               	movlw	-1
 36593  001390  50E3               	movf	plusw1,w,c
 36594  001392  0D02               	mullw	2
 36595  001394  0EB2               	movlw	low _tickCount
 36596  001396  24F3               	addwf	243,w,c
 36597  001398  6ED9               	movwf	fsr2l,c
 36598  00139A  0E02               	movlw	high _tickCount
 36599  00139C  20F4               	addwfc	prodh,w,c
 36600  00139E  6EDA               	movwf	fsr2h,c
 36601  0013A0  0060  F027  FFDE   	movff	btemp+8,postinc2
 36602  0013A6  0060  F02B  FFDD   	movff	btemp+9,postdec2
 36603                           
 36604                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 36605  0013AC  52E5               	movf	postdec1,f,c
 36606  0013AE  52E5               	movf	postdec1,f,c
 36607  0013B0  52E5               	movf	postdec1,f,c
 36608  0013B2  0012               	return		;funcret
 36609  0013B4                     __end_of_StartTimer:
 36610                           	opt callstack 0
 36611                           
 36612 ;; *************** function _display_info *****************
 36613 ;; Defined at:
 36614 ;;		line 190 in file "mconfig.c"
 36615 ;; Parameters:    Size  Location     Type
 36616 ;;		None
 36617 ;; Auto vars:     Size  Location     Type
 36618 ;;		None
 36619 ;; Return value:  Size  Location     Type
 36620 ;;                  1  [STACK] enum E16677
 36621 ;; Registers used:
 36622 ;;		btemp
 36623 ;; Tracked objects:
 36624 ;;		On entry : 0/1
 36625 ;;		On exit  : 0/0
 36626 ;;		Unchanged: 0/0
 36627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36632 ;;Total ram usage:        0 bytes
 36633 ;; Hardware stack levels used:    1
 36634 ;; Hardware stack levels required when called:   15
 36635 ;; This function calls:
 36636 ;;		Nothing
 36637 ;; This function is called by:
 36638 ;;		_check_help
 36639 ;; This function uses a reentrant model
 36640 ;;
 36641                           
 36642                           	psect	text134
 36643  001E9A                     __ptext134:
 36644                           	opt callstack 0
 36645  001E9A                     _display_info:
 36646                           	opt callstack 14
 36647                           
 36648                           ;mconfig.c: 192:  return V.response.info;
 36649                           
 36650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36651                           ;incstack = 0
 36652  001E9A  0060  F690  F001   	movff	_V+164,btemp	;volatile
 36653                           
 36654                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 36655  001EA0  0012               	return		;funcret
 36656  001EA2                     __end_of_display_info:
 36657                           	opt callstack 0
 36658                           
 36659 ;; *************** function _display_help *****************
 36660 ;; Defined at:
 36661 ;;		line 195 in file "mconfig.c"
 36662 ;; Parameters:    Size  Location     Type
 36663 ;;		None
 36664 ;; Auto vars:     Size  Location     Type
 36665 ;;		None
 36666 ;; Return value:  Size  Location     Type
 36667 ;;                  1  [STACK] enum E16677
 36668 ;; Registers used:
 36669 ;;		btemp
 36670 ;; Tracked objects:
 36671 ;;		On entry : 3F/1
 36672 ;;		On exit  : 0/0
 36673 ;;		Unchanged: 0/0
 36674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36679 ;;Total ram usage:        0 bytes
 36680 ;; Hardware stack levels used:    1
 36681 ;; Hardware stack levels required when called:   15
 36682 ;; This function calls:
 36683 ;;		Nothing
 36684 ;; This function is called by:
 36685 ;;		_check_help
 36686 ;; This function uses a reentrant model
 36687 ;;
 36688                           
 36689                           	psect	text135
 36690  001EA2                     __ptext135:
 36691                           	opt callstack 0
 36692  001EA2                     _display_help:
 36693                           	opt callstack 14
 36694                           
 36695                           ;mconfig.c: 197:  return V.response.help_temp;
 36696                           
 36697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36698                           ;incstack = 0
 36699  001EA2  0060  F694  F001   	movff	_V+165,btemp	;volatile
 36700                           
 36701                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 36702  001EA8  0012               	return		;funcret
 36703  001EAA                     __end_of_display_help:
 36704                           	opt callstack 0
 36705                           
 36706 ;; *************** function _check_enter_button *****************
 36707 ;; Defined at:
 36708 ;;		line 49 in file "hid.c"
 36709 ;; Parameters:    Size  Location     Type
 36710 ;;  h               2  [STACK] PTR struct H_data
 36711 ;;		 -> H(9), 
 36712 ;; Auto vars:     Size  Location     Type
 36713 ;;		None
 36714 ;; Return value:  Size  Location     Type
 36715 ;;                  1  [STACK] _Bool 
 36716 ;; Registers used:
 36717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 36718 ;; Tracked objects:
 36719 ;;		On entry : 0/0
 36720 ;;		On exit  : 0/0
 36721 ;;		Unchanged: 0/0
 36722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36727 ;;Total ram usage:        0 bytes
 36728 ;; Hardware stack levels used:    1
 36729 ;; Hardware stack levels required when called:   15
 36730 ;; This function calls:
 36731 ;;		Nothing
 36732 ;; This function is called by:
 36733 ;;		_main
 36734 ;; This function uses a reentrant model
 36735 ;;
 36736                           
 36737                           	psect	text136
 36738  0008FC                     __ptext136:
 36739                           	opt callstack 0
 36740  0008FC                     _check_enter_button:
 36741                           	opt callstack 15
 36742                           
 36743                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 36744                           ;stkvar	_h @ sp[(0)+-2]
 36745                           
 36746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36747                           ;incstack = 0
 36748  0008FC  0EFE               	movlw	-2
 36749  0008FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 36750  000904  0EFF               	movlw	-1
 36751  000906  006F FF8C  F00C    	movff	plusw1,btemp+11
 36752  00090C  0E04               	movlw	4
 36753  00090E  240B               	addwf	(btemp+10)^0,w,c
 36754  000910  6ED9               	movwf	fsr2l,c
 36755  000912  0E00               	movlw	0
 36756  000914  200C               	addwfc	(btemp+11)^0,w,c
 36757  000916  6EDA               	movwf	fsr2h,c
 36758  000918  50DF               	movf	indf2,w,c
 36759  00091A  A4D8               	btfss	status,2,c
 36760  00091C  D023               	goto	l16869
 36761                           
 36762                           ;stkvar	_h @ sp[(0)+-2]
 36763  00091E  0EFE               	movlw	-2
 36764  000920  006F FF8C  F00B    	movff	plusw1,btemp+10
 36765  000926  0EFF               	movlw	-1
 36766  000928  006F FF8C  F00C    	movff	plusw1,btemp+11
 36767  00092E  0E05               	movlw	5
 36768  000930  240B               	addwf	(btemp+10)^0,w,c
 36769  000932  6ED9               	movwf	fsr2l,c
 36770  000934  0E00               	movlw	0
 36771  000936  200C               	addwfc	(btemp+11)^0,w,c
 36772  000938  6EDA               	movwf	fsr2h,c
 36773  00093A  50DF               	movf	indf2,w,c
 36774  00093C  A4D8               	btfss	status,2,c
 36775  00093E  D012               	goto	l16869
 36776                           
 36777                           ;hid.c: 52:   h->wait_enter = 1;
 36778                           ;stkvar	_h @ sp[(0)+-2]
 36779  000940  0EFE               	movlw	-2
 36780  000942  006F FF8C  F00B    	movff	plusw1,btemp+10
 36781  000948  0EFF               	movlw	-1
 36782  00094A  006F FF8C  F00C    	movff	plusw1,btemp+11
 36783  000950  0E04               	movlw	4
 36784  000952  240B               	addwf	(btemp+10)^0,w,c
 36785  000954  6ED9               	movwf	fsr2l,c
 36786  000956  0E00               	movlw	0
 36787  000958  200C               	addwfc	(btemp+11)^0,w,c
 36788  00095A  6EDA               	movwf	fsr2h,c
 36789  00095C  0E01               	movlw	1
 36790  00095E  6EDF               	movwf	indf2,c
 36791                           
 36792                           ;hid.c: 53:   return 1;
 36793  000960  0E01               	movlw	1
 36794  000962  D001               	goto	L42
 36795  000964                     l16869:
 36796                           
 36797                           ;hid.c: 55:  return 0;
 36798  000964  0E00               	movlw	0
 36799  000966                     L42:
 36800  000966  6E01               	movwf	btemp^0,c
 36801                           
 36802                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36803  000968  52E5               	movf	postdec1,f,c
 36804  00096A  52E5               	movf	postdec1,f,c
 36805  00096C  0012               	return		;funcret
 36806  00096E                     __end_of_check_enter_button:
 36807                           	opt callstack 0
 36808                           
 36809 ;; *************** function _calc_ror_data *****************
 36810 ;; Defined at:
 36811 ;;		line 103 in file "mbmc.c"
 36812 ;; Parameters:    Size  Location     Type
 36813 ;;		None
 36814 ;; Auto vars:     Size  Location     Type
 36815 ;;		None
 36816 ;; Return value:  Size  Location     Type
 36817 ;;                  1  [STACK] void 
 36818 ;; Registers used:
 36819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36820 ;; Tracked objects:
 36821 ;;		On entry : 0/0
 36822 ;;		On exit  : 0/0
 36823 ;;		Unchanged: 0/0
 36824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36829 ;;Total ram usage:        0 bytes
 36830 ;; Hardware stack levels used:    1
 36831 ;; Hardware stack levels required when called:   18
 36832 ;; This function calls:
 36833 ;;		___flge
 36834 ;;		___flsub
 36835 ;;		_conv_raw_result
 36836 ;;		_fabsf
 36837 ;; This function is called by:
 36838 ;;		_main
 36839 ;; This function uses a reentrant model
 36840 ;;
 36841                           
 36842                           	psect	text137
 36843  01D4F6                     __ptext137:
 36844                           	opt callstack 0
 36845  01D4F6                     _calc_ror_data:
 36846                           	opt callstack 12
 36847                           
 36848                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 36849                           
 36850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36851                           ;incstack = 0
 36852  01D4F6  0060  F22B  FFE6   	movff	calc_ror_data@bcror,postinc1
 36853  01D4FC  0060  F22F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 36854  01D502  0060  F233  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 36855  01D508  0060  F237  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 36856  01D50E  0E00               	movlw	0
 36857  01D510  6EE6               	movwf	postinc1,c
 36858  01D512  0E00               	movlw	0
 36859  01D514  6EE6               	movwf	postinc1,c
 36860  01D516  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 36861  01D51A  0060  F007  FFE6   	movff	btemp,postinc1
 36862  01D520  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36863  01D526  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36864  01D52C  0060  F013  FFE6   	movff	btemp+3,postinc1
 36865  01D532  EC14  F009         	call	___flsub	;wreg free
 36866  01D536  0060  F007  FFE6   	movff	btemp,postinc1
 36867  01D53C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36868  01D542  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36869  01D548  0060  F013  FFE6   	movff	btemp+3,postinc1
 36870  01D54E  EC77  F0FE         	call	_fabsf	;wreg free
 36871  01D552  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 36872  01D558  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 36873  01D55E  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 36874  01D564  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 36875                           
 36876                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 36877  01D56A  0E00               	movlw	0
 36878  01D56C  6EE6               	movwf	postinc1,c
 36879  01D56E  0E00               	movlw	0
 36880  01D570  6EE6               	movwf	postinc1,c
 36881  01D572  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 36882  01D576  0060  F004  F08A   	movff	btemp,calc_ror_data@bcror
 36883  01D57C  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bcror+1
 36884  01D582  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bcror+2
 36885  01D588  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bcror+3
 36886                           
 36887                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 36888  01D58E  0060  F23B  FFE6   	movff	calc_ror_data@bvror,postinc1
 36889  01D594  0060  F23F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 36890  01D59A  0060  F243  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 36891  01D5A0  0060  F247  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 36892  01D5A6  0E00               	movlw	0
 36893  01D5A8  6EE6               	movwf	postinc1,c
 36894  01D5AA  0E04               	movlw	4
 36895  01D5AC  6EE6               	movwf	postinc1,c
 36896  01D5AE  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 36897  01D5B2  0060  F007  FFE6   	movff	btemp,postinc1
 36898  01D5B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36899  01D5BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36900  01D5C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 36901  01D5CA  EC14  F009         	call	___flsub	;wreg free
 36902  01D5CE  0060  F007  FFE6   	movff	btemp,postinc1
 36903  01D5D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36904  01D5DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36905  01D5E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 36906  01D5E6  EC77  F0FE         	call	_fabsf	;wreg free
 36907  01D5EA  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 36908  01D5F0  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 36909  01D5F6  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 36910  01D5FC  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 36911                           
 36912                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 36913  01D602  0EE7               	movlw	231
 36914  01D604  6EE6               	movwf	postinc1,c
 36915  01D606  0E1D               	movlw	29
 36916  01D608  6EE6               	movwf	postinc1,c
 36917  01D60A  0EA7               	movlw	167
 36918  01D60C  6EE6               	movwf	postinc1,c
 36919  01D60E  0E3B               	movlw	59
 36920  01D610  6EE6               	movwf	postinc1,c
 36921  01D612  EE22  F16B         	lfsr	2,_C+108	;volatile
 36922  01D616  006F FF7B FFE6     	movff	postinc2,postinc1
 36923  01D61C  006F FF7B FFE6     	movff	postinc2,postinc1
 36924  01D622  006F FF7B FFE6     	movff	postinc2,postinc1
 36925  01D628  006F FF7B FFE6     	movff	postinc2,postinc1
 36926  01D62E  EC23  F0EE         	call	___flge	;wreg free
 36927  01D632  B001               	btfsc	btemp& (0+255),0,c
 36928  01D634  D010               	goto	l14057
 36929                           
 36930                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 36931  01D636  0EB0               	movlw	176
 36932  01D638  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 36933  01D63E  0E03               	movlw	3
 36934  01D640  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 36935  01D646  0E67               	movlw	103
 36936  01D648  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 36937  01D64E  0E3C               	movlw	60
 36938  01D650  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 36939  01D656                     l14057:
 36940                           
 36941                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 36942  01D656  0E00               	movlw	0
 36943  01D658  6EE6               	movwf	postinc1,c
 36944  01D65A  0E04               	movlw	4
 36945  01D65C  6EE6               	movwf	postinc1,c
 36946  01D65E  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 36947  01D662  0060  F004  F08E   	movff	btemp,calc_ror_data@bvror
 36948  01D668  0060  F008  F08F   	movff	btemp+1,calc_ror_data@bvror+1
 36949  01D66E  0060  F00C  F090   	movff	btemp+2,calc_ror_data@bvror+2
 36950  01D674  0060  F010  F091   	movff	btemp+3,calc_ror_data@bvror+3
 36951                           
 36952                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 36953  01D67A  0012               	return		;funcret
 36954  01D67C                     __end_of_calc_ror_data:
 36955                           	opt callstack 0
 36956                           
 36957 ;; *************** function _fabsf *****************
 36958 ;; Defined at:
 36959 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 36960 ;; Parameters:    Size  Location     Type
 36961 ;;  x               4  [STACK] float 
 36962 ;; Auto vars:     Size  Location     Type
 36963 ;;  u               4  [STACK] struct .
 36964 ;; Return value:  Size  Location     Type
 36965 ;;                  4  [STACK] float 
 36966 ;; Registers used:
 36967 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 36968 ;; Tracked objects:
 36969 ;;		On entry : 0/0
 36970 ;;		On exit  : 0/0
 36971 ;;		Unchanged: 0/0
 36972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36977 ;;Total ram usage:        0 bytes
 36978 ;; Hardware stack levels used:    1
 36979 ;; Hardware stack levels required when called:   15
 36980 ;; This function calls:
 36981 ;;		Nothing
 36982 ;; This function is called by:
 36983 ;;		_main
 36984 ;;		_calc_ror_data
 36985 ;;		_calc_bsoc
 36986 ;;		_esr_check
 36987 ;; This function uses a reentrant model
 36988 ;;
 36989                           
 36990                           	psect	text138
 36991  01FCEE                     __ptext138:
 36992                           	opt callstack 0
 36993  01FCEE                     _fabsf:
 36994                           	opt callstack 0
 36995                           
 36996                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36997  01FCEE  52E6               	movf	postinc1,f,c
 36998  01FCF0  52E6               	movf	postinc1,f,c
 36999  01FCF2  52E6               	movf	postinc1,f,c
 37000  01FCF4  52E6               	movf	postinc1,f,c
 37001                           
 37002                           ;incstack = 0
 37003 ;; hardware stack exceeded
 37004  01FCF6  0060  F208  F009   	movff	fabsf@F463,btemp+8
 37005  01FCFC  0060  F20C  F00A   	movff	fabsf@F463+1,btemp+9
 37006  01FD02  0060  F210  F00B   	movff	fabsf@F463+2,btemp+10
 37007  01FD08  0060  F214  F00C   	movff	fabsf@F463+3,btemp+11
 37008                           
 37009                           ;stkvar	_u @ sp[(-4)+0]
 37010  01FD0E  0EFC               	movlw	-4
 37011  01FD10  0060  F027  FFE3   	movff	btemp+8,plusw1
 37012  01FD16  0EFD               	movlw	-3
 37013  01FD18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37014  01FD1E  0EFE               	movlw	-2
 37015  01FD20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37016  01FD26  0EFF               	movlw	-1
 37017  01FD28  0060  F033  FFE3   	movff	btemp+11,plusw1
 37018                           
 37019                           ;stkvar	_x @ sp[(-4)+-4]
 37020  01FD2E  0EF8               	movlw	-8
 37021  01FD30  006F FF8C  F009    	movff	plusw1,btemp+8
 37022  01FD36  0EF9               	movlw	-7
 37023  01FD38  006F FF8C  F00A    	movff	plusw1,btemp+9
 37024  01FD3E  0EFA               	movlw	-6
 37025  01FD40  006F FF8C  F00B    	movff	plusw1,btemp+10
 37026  01FD46  0EFB               	movlw	-5
 37027  01FD48  006F FF8C  F00C    	movff	plusw1,btemp+11
 37028                           
 37029                           ;stkvar	_u @ sp[(-4)+0]
 37030  01FD4E  0EFC               	movlw	-4
 37031  01FD50  0060  F027  FFE3   	movff	btemp+8,plusw1
 37032  01FD56  0EFD               	movlw	-3
 37033  01FD58  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37034  01FD5E  0EFE               	movlw	-2
 37035  01FD60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37036  01FD66  0EFF               	movlw	-1
 37037  01FD68  0060  F033  FFE3   	movff	btemp+11,plusw1
 37038                           
 37039                           ;stkvar	_u @ sp[(-4)+0]
 37040  01FD6E  0EFF               	movlw	-1
 37041  01FD70  9EE3               	bcf	plusw1,7,c
 37042                           
 37043                           ;stkvar	_u @ sp[(-4)+0]
 37044  01FD72  0EFC               	movlw	-4
 37045  01FD74  006F FF8C  F001    	movff	plusw1,btemp
 37046  01FD7A  0EFD               	movlw	-3
 37047  01FD7C  006F FF8C  F002    	movff	plusw1,btemp+1
 37048  01FD82  0EFE               	movlw	-2
 37049  01FD84  006F FF8C  F003    	movff	plusw1,btemp+2
 37050  01FD8A  0EFF               	movlw	-1
 37051  01FD8C  006F FF8C  F004    	movff	plusw1,btemp+3
 37052                           
 37053                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37054  01FD92  0EF8               	movlw	248
 37055  01FD94  26E1               	addwf	fsr1l,f,c
 37056  01FD96  0EFF               	movlw	255
 37057  01FD98  22E2               	addwfc	fsr1h,f,c
 37058  01FD9A  0012               	return		;funcret
 37059  01FD9C                     __end_of_fabsf:
 37060                           	opt callstack 0
 37061                           
 37062 ;; *************** function _conv_raw_result *****************
 37063 ;; Defined at:
 37064 ;;		line 133 in file "daq.c"
 37065 ;; Parameters:    Size  Location     Type
 37066 ;;  chan            1  [STACK] const enum E16605
 37067 ;;  to_what         1  [STACK] const enum E16998
 37068 ;; Auto vars:     Size  Location     Type
 37069 ;;		None
 37070 ;; Return value:  Size  Location     Type
 37071 ;;                  4  [STACK] float 
 37072 ;; Registers used:
 37073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37074 ;; Tracked objects:
 37075 ;;		On entry : 0/0
 37076 ;;		On exit  : 0/0
 37077 ;;		Unchanged: 0/0
 37078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37083 ;;Total ram usage:        0 bytes
 37084 ;; Hardware stack levels used:    1
 37085 ;; Hardware stack levels required when called:   17
 37086 ;; This function calls:
 37087 ;;		___fldiv
 37088 ;;		___flmul
 37089 ;;		___flsub
 37090 ;;		___xxtofl
 37091 ;;		_get_raw_result
 37092 ;;		_nanf
 37093 ;; This function is called by:
 37094 ;;		_main
 37095 ;;		_convert_adc_data
 37096 ;;		_calc_ror_data
 37097 ;;		_check_day_time
 37098 ;;		_init_bsoc
 37099 ;;		_esr_check
 37100 ;; This function uses a reentrant model
 37101 ;;
 37102                           
 37103                           	psect	text139
 37104  0183F4                     __ptext139:
 37105                           	opt callstack 0
 37106  0183F4                     _conv_raw_result:
 37107                           	opt callstack 0
 37108                           
 37109                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 37110                           
 37111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37112                           ;incstack = 0
 37113 ;; hardware stack exceeded
 37114  0183F4  D24A               	goto	l12237
 37115  0183F6                     l12183:
 37116                           
 37117                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 37118                           ;stkvar	_chan @ sp[(0)+-1]
 37119  0183F6  0EFF               	movlw	-1
 37120  0183F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 37121  0183FE  0E77               	movlw	119
 37122  018400  6E09               	movwf	(btemp+8)^0,c
 37123  018402  0E3C               	movlw	60
 37124  018404  6E0A               	movwf	(btemp+9)^0,c
 37125  018406  2A0C               	incf	(btemp+11)^0,f,c
 37126  018408  D003               	goto	u11514
 37127  01840A                     u11515:
 37128  01840A  340A               	rlcf	(btemp+9)^0,w,c
 37129  01840C  320A               	rrcf	(btemp+9)^0,f,c
 37130  01840E  3209               	rrcf	(btemp+8)^0,f,c
 37131  018410                     u11514:
 37132  018410  2E0C               	decfsz	(btemp+11)^0,f,c
 37133  018412  D7FB               	goto	u11515
 37134  018414  B009               	btfsc	(btemp+8)^0,0,c
 37135  018416  D007               	goto	l12189
 37136                           
 37137                           ;daq.c: 139:    return nanf("");
 37138  018418  0EBD               	movlw	low (STR_87+126)
 37139  01841A  6EE6               	movwf	postinc1,c
 37140  01841C  0EFA               	movlw	high (STR_87+126)
 37141  01841E  6EE6               	movwf	postinc1,c
 37142  018420  EC89  F006         	call	_nanf	;wreg free
 37143  018424  D242               	goto	l1969
 37144  018426                     l12189:
 37145                           
 37146                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 37147                           ;stkvar	_chan @ sp[(0)+-1]
 37148  018426  0EFF               	movlw	-1
 37149  018428  006F FF8C  F00C    	movff	plusw1,btemp+11
 37150  01842E  0E03               	movlw	3
 37151  018430  6E09               	movwf	(btemp+8)^0,c
 37152  018432  0E00               	movlw	0
 37153  018434  6E0A               	movwf	(btemp+9)^0,c
 37154  018436  2A0C               	incf	(btemp+11)^0,f,c
 37155  018438  D003               	goto	u11534
 37156  01843A                     u11535:
 37157  01843A  340A               	rlcf	(btemp+9)^0,w,c
 37158  01843C  320A               	rrcf	(btemp+9)^0,f,c
 37159  01843E  3209               	rrcf	(btemp+8)^0,f,c
 37160  018440                     u11534:
 37161  018440  2E0C               	decfsz	(btemp+11)^0,f,c
 37162  018442  D7FB               	goto	u11535
 37163  018444  A009               	btfss	(btemp+8)^0,0,c
 37164  018446  D0F3               	goto	l12203
 37165                           
 37166                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 37167                           ;stkvar	_chan @ sp[(0)+-1]
 37168  018448  0EFF               	movlw	-1
 37169  01844A  006F FF8C  F00C    	movff	plusw1,btemp+11
 37170  018450  0E01               	movlw	1
 37171  018452  6E09               	movwf	(btemp+8)^0,c
 37172  018454  0E00               	movlw	0
 37173  018456  6E0A               	movwf	(btemp+9)^0,c
 37174  018458  2A0C               	incf	(btemp+11)^0,f,c
 37175  01845A  D003               	goto	u11554
 37176  01845C                     u11555:
 37177  01845C  340A               	rlcf	(btemp+9)^0,w,c
 37178  01845E  320A               	rrcf	(btemp+9)^0,f,c
 37179  018460  3209               	rrcf	(btemp+8)^0,f,c
 37180  018462                     u11554:
 37181  018462  2E0C               	decfsz	(btemp+11)^0,f,c
 37182  018464  D7FB               	goto	u11555
 37183  018466  A009               	btfss	(btemp+8)^0,0,c
 37184  018468  D071               	goto	l12199
 37185                           
 37186                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 37187  01846A  0060  F8C7  FFE6   	movff	_R+42,postinc1
 37188  018470  0060  F8CB  FFE6   	movff	_R+43,postinc1
 37189  018476  0060  F8CF  FFE6   	movff	_R+44,postinc1
 37190  01847C  0060  F8D3  FFE6   	movff	_R+45,postinc1
 37191  018482  0060  F8B4  F009   	movff	_R+38,btemp+8	;volatile
 37192  018488  0060  F8B8  F00A   	movff	_R+39,btemp+9	;volatile
 37193  01848E  0E00               	movlw	0
 37194  018490  BE0A               	btfsc	(btemp+9)^0,7,c
 37195  018492  0EFF               	movlw	255
 37196  018494  6E0B               	movwf	(btemp+10)^0,c
 37197  018496  6E0C               	movwf	(btemp+11)^0,c
 37198  018498  0060  F027  FFE6   	movff	btemp+8,postinc1
 37199  01849E  0060  F02B  FFE6   	movff	btemp+9,postinc1
 37200  0184A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37201  0184AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 37202  0184B0  0E01               	movlw	1
 37203  0184B2  6EE6               	movwf	postinc1,c
 37204  0184B4  EC5B  F0E5         	call	___xxtofl	;wreg free
 37205  0184B8  0060  F007  FFE6   	movff	btemp,postinc1
 37206  0184BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37207  0184C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37208  0184CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37209                           
 37210                           ;stkvar	_chan @ sp[(-8)+-1]
 37211  0184D0  0EF7               	movlw	-9
 37212  0184D2  50E3               	movf	plusw1,w,c
 37213  0184D4  6EE6               	movwf	postinc1,c
 37214  0184D6  ECC1  F00D         	call	_get_raw_result	;wreg free
 37215  0184DA  0060  F004  F00B   	movff	btemp,btemp+10
 37216  0184E0  0060  F008  F00C   	movff	btemp+1,btemp+11
 37217  0184E6  500B               	movf	(btemp+10)^0,w,c
 37218  0184E8  6E05               	movwf	(btemp+4)^0,c
 37219  0184EA  500C               	movf	(btemp+11)^0,w,c
 37220  0184EC  6E06               	movwf	(btemp+5)^0,c
 37221  0184EE  6A07               	clrf	(btemp+6)^0,c
 37222  0184F0  6A08               	clrf	(btemp+7)^0,c
 37223  0184F2  0060  F017  FFE6   	movff	btemp+4,postinc1
 37224  0184F8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37225  0184FE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37226  018504  0060  F023  FFE6   	movff	btemp+7,postinc1
 37227  01850A  0E00               	movlw	0
 37228  01850C  6EE6               	movwf	postinc1,c
 37229  01850E  EC5B  F0E5         	call	___xxtofl	;wreg free
 37230  018512  0060  F007  FFE6   	movff	btemp,postinc1
 37231  018518  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37232  01851E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37233  018524  0060  F013  FFE6   	movff	btemp+3,postinc1
 37234  01852A  EC14  F009         	call	___flsub	;wreg free
 37235  01852E  0060  F007  FFE6   	movff	btemp,postinc1
 37236  018534  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37237  01853A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37238  018540  0060  F013  FFE6   	movff	btemp+3,postinc1
 37239  018546  EC61  F0B1         	call	___flmul	;wreg free
 37240  01854A  D1AF               	goto	l1969
 37241  01854C                     l12199:
 37242                           
 37243                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 37244  01854C  0060  F8D7  FFE6   	movff	_R+46,postinc1
 37245  018552  0060  F8DB  FFE6   	movff	_R+47,postinc1
 37246  018558  0060  F8DF  FFE6   	movff	_R+48,postinc1
 37247  01855E  0060  F8E3  FFE6   	movff	_R+49,postinc1
 37248  018564  0060  F8BC  F009   	movff	_R+40,btemp+8	;volatile
 37249  01856A  0060  F8C0  F00A   	movff	_R+41,btemp+9	;volatile
 37250  018570  0E00               	movlw	0
 37251  018572  BE0A               	btfsc	(btemp+9)^0,7,c
 37252  018574  0EFF               	movlw	255
 37253  018576  6E0B               	movwf	(btemp+10)^0,c
 37254  018578  6E0C               	movwf	(btemp+11)^0,c
 37255  01857A  0060  F027  FFE6   	movff	btemp+8,postinc1
 37256  018580  0060  F02B  FFE6   	movff	btemp+9,postinc1
 37257  018586  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37258  01858C  0060  F033  FFE6   	movff	btemp+11,postinc1
 37259  018592  0E01               	movlw	1
 37260  018594  6EE6               	movwf	postinc1,c
 37261  018596  EC5B  F0E5         	call	___xxtofl	;wreg free
 37262  01859A  0060  F007  FFE6   	movff	btemp,postinc1
 37263  0185A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37264  0185A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37265  0185AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37266                           
 37267                           ;stkvar	_chan @ sp[(-8)+-1]
 37268  0185B2  0EF7               	movlw	-9
 37269  0185B4  50E3               	movf	plusw1,w,c
 37270  0185B6  6EE6               	movwf	postinc1,c
 37271  0185B8  ECC1  F00D         	call	_get_raw_result	;wreg free
 37272  0185BC  0060  F004  F00B   	movff	btemp,btemp+10
 37273  0185C2  0060  F008  F00C   	movff	btemp+1,btemp+11
 37274  0185C8  500B               	movf	(btemp+10)^0,w,c
 37275  0185CA  6E05               	movwf	(btemp+4)^0,c
 37276  0185CC  500C               	movf	(btemp+11)^0,w,c
 37277  0185CE  6E06               	movwf	(btemp+5)^0,c
 37278  0185D0  6A07               	clrf	(btemp+6)^0,c
 37279  0185D2  6A08               	clrf	(btemp+7)^0,c
 37280  0185D4  0060  F017  FFE6   	movff	btemp+4,postinc1
 37281  0185DA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37282  0185E0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37283  0185E6  0060  F023  FFE6   	movff	btemp+7,postinc1
 37284  0185EC  0E00               	movlw	0
 37285  0185EE  6EE6               	movwf	postinc1,c
 37286  0185F0  EC5B  F0E5         	call	___xxtofl	;wreg free
 37287  0185F4  0060  F007  FFE6   	movff	btemp,postinc1
 37288  0185FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37289  018600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37290  018606  0060  F013  FFE6   	movff	btemp+3,postinc1
 37291  01860C  EC14  F009         	call	___flsub	;wreg free
 37292  018610  0060  F007  FFE6   	movff	btemp,postinc1
 37293  018616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37294  01861C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37295  018622  0060  F013  FFE6   	movff	btemp+3,postinc1
 37296  018628  EC61  F0B1         	call	___flmul	;wreg free
 37297  01862C  D13E               	goto	l1969
 37298  01862E                     l12203:
 37299                           
 37300                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 37301                           ;stkvar	_chan @ sp[(0)+-1]
 37302  01862E  0EFF               	movlw	-1
 37303  018630  006F FF8C  F00C    	movff	plusw1,btemp+11
 37304  018636  0E00               	movlw	0
 37305  018638  6E09               	movwf	(btemp+8)^0,c
 37306  01863A  0E08               	movlw	8
 37307  01863C  6E0A               	movwf	(btemp+9)^0,c
 37308  01863E  2A0C               	incf	(btemp+11)^0,f,c
 37309  018640  D003               	goto	u11574
 37310  018642                     u11575:
 37311  018642  340A               	rlcf	(btemp+9)^0,w,c
 37312  018644  320A               	rrcf	(btemp+9)^0,f,c
 37313  018646  3209               	rrcf	(btemp+8)^0,f,c
 37314  018648                     u11574:
 37315  018648  2E0C               	decfsz	(btemp+11)^0,f,c
 37316  01864A  D7FB               	goto	u11575
 37317  01864C  A009               	btfss	(btemp+8)^0,0,c
 37318  01864E  D008               	goto	l12211
 37319                           
 37320                           ;daq.c: 149:     return 25.0;
 37321  018650  0E00               	movlw	0
 37322  018652  6E01               	movwf	btemp^0,c
 37323  018654  0E00               	movlw	0
 37324  018656  6E02               	movwf	(btemp+1)^0,c
 37325  018658  0EC8               	movlw	200
 37326  01865A  6E03               	movwf	(btemp+2)^0,c
 37327  01865C  0E41               	movlw	65
 37328  01865E  D113               	goto	L43
 37329  018660                     l12211:
 37330                           
 37331                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37332  018660  0E00               	movlw	0
 37333  018662  6EE6               	movwf	postinc1,c
 37334  018664  0E00               	movlw	0
 37335  018666  6EE6               	movwf	postinc1,c
 37336  018668  0E7A               	movlw	122
 37337  01866A  6EE6               	movwf	postinc1,c
 37338  01866C  0E44               	movlw	68
 37339  01866E  6EE6               	movwf	postinc1,c
 37340  018670  0E61               	movlw	97
 37341  018672  6EE6               	movwf	postinc1,c
 37342  018674  0E03               	movlw	3
 37343  018676  6EE6               	movwf	postinc1,c
 37344  018678  0E84               	movlw	132
 37345  01867A  6EE6               	movwf	postinc1,c
 37346  01867C  0E40               	movlw	64
 37347  01867E  6EE6               	movwf	postinc1,c
 37348                           
 37349                           ;stkvar	_chan @ sp[(-8)+-1]
 37350  018680  0EF7               	movlw	-9
 37351  018682  50E3               	movf	plusw1,w,c
 37352  018684  6EE6               	movwf	postinc1,c
 37353  018686  ECC1  F00D         	call	_get_raw_result	;wreg free
 37354  01868A  0060  F004  F00B   	movff	btemp,btemp+10
 37355  018690  0060  F008  F00C   	movff	btemp+1,btemp+11
 37356  018696  500B               	movf	(btemp+10)^0,w,c
 37357  018698  6E05               	movwf	(btemp+4)^0,c
 37358  01869A  500C               	movf	(btemp+11)^0,w,c
 37359  01869C  6E06               	movwf	(btemp+5)^0,c
 37360  01869E  6A07               	clrf	(btemp+6)^0,c
 37361  0186A0  6A08               	clrf	(btemp+7)^0,c
 37362  0186A2  0060  F017  FFE6   	movff	btemp+4,postinc1
 37363  0186A8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37364  0186AE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37365  0186B4  0060  F023  FFE6   	movff	btemp+7,postinc1
 37366  0186BA  0E00               	movlw	0
 37367  0186BC  6EE6               	movwf	postinc1,c
 37368  0186BE  EC5B  F0E5         	call	___xxtofl	;wreg free
 37369  0186C2  0060  F007  FFE6   	movff	btemp,postinc1
 37370  0186C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37371  0186CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37372  0186D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37373  0186DA  EC61  F0B1         	call	___flmul	;wreg free
 37374  0186DE  0060  F007  FFE6   	movff	btemp,postinc1
 37375  0186E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37376  0186EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37377  0186F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37378  0186F6  ECB2  F0BC         	call	___fldiv	;wreg free
 37379  0186FA  D0D7               	goto	l1969
 37380  0186FC                     l12215:
 37381                           
 37382                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 37383                           ;stkvar	_chan @ sp[(0)+-1]
 37384  0186FC  0EFF               	movlw	-1
 37385  0186FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 37386  018704  0E03               	movlw	3
 37387  018706  6E09               	movwf	(btemp+8)^0,c
 37388  018708  0E00               	movlw	0
 37389  01870A  6E0A               	movwf	(btemp+9)^0,c
 37390  01870C  2A0C               	incf	(btemp+11)^0,f,c
 37391  01870E  D003               	goto	u11594
 37392  018710                     u11595:
 37393  018710  340A               	rlcf	(btemp+9)^0,w,c
 37394  018712  320A               	rrcf	(btemp+9)^0,f,c
 37395  018714  3209               	rrcf	(btemp+8)^0,f,c
 37396  018716                     u11594:
 37397  018716  2E0C               	decfsz	(btemp+11)^0,f,c
 37398  018718  D7FB               	goto	u11595
 37399  01871A  B009               	btfsc	(btemp+8)^0,0,c
 37400  01871C  D011               	goto	u11620
 37401                           
 37402                           ;stkvar	_chan @ sp[(0)+-1]
 37403  01871E  0EFF               	movlw	-1
 37404  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
 37405  018726  0E00               	movlw	0
 37406  018728  6E09               	movwf	(btemp+8)^0,c
 37407  01872A  0E08               	movlw	8
 37408  01872C  6E0A               	movwf	(btemp+9)^0,c
 37409  01872E  2A0C               	incf	(btemp+11)^0,f,c
 37410  018730  D003               	goto	u11614
 37411  018732                     u11615:
 37412  018732  340A               	rlcf	(btemp+9)^0,w,c
 37413  018734  320A               	rrcf	(btemp+9)^0,f,c
 37414  018736  3209               	rrcf	(btemp+8)^0,f,c
 37415  018738                     u11614:
 37416  018738  2E0C               	decfsz	(btemp+11)^0,f,c
 37417  01873A  D7FB               	goto	u11615
 37418  01873C  A009               	btfss	(btemp+8)^0,0,c
 37419  01873E  D04E               	goto	l12223
 37420  018740                     u11620:
 37421                           
 37422                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 37423  018740  0E00               	movlw	0
 37424  018742  6EE6               	movwf	postinc1,c
 37425  018744  0E00               	movlw	0
 37426  018746  6EE6               	movwf	postinc1,c
 37427  018748  0E7A               	movlw	122
 37428  01874A  6EE6               	movwf	postinc1,c
 37429  01874C  0E44               	movlw	68
 37430  01874E  6EE6               	movwf	postinc1,c
 37431  018750  0E00               	movlw	0
 37432  018752  6EE6               	movwf	postinc1,c
 37433  018754  0E00               	movlw	0
 37434  018756  6EE6               	movwf	postinc1,c
 37435  018758  0E20               	movlw	32
 37436  01875A  6EE6               	movwf	postinc1,c
 37437  01875C  0E3F               	movlw	63
 37438  01875E  6EE6               	movwf	postinc1,c
 37439                           
 37440                           ;stkvar	_chan @ sp[(-8)+-1]
 37441  018760  0EF7               	movlw	-9
 37442  018762  50E3               	movf	plusw1,w,c
 37443  018764  6EE6               	movwf	postinc1,c
 37444  018766  ECC1  F00D         	call	_get_raw_result	;wreg free
 37445  01876A  0060  F004  F00B   	movff	btemp,btemp+10
 37446  018770  0060  F008  F00C   	movff	btemp+1,btemp+11
 37447  018776  500B               	movf	(btemp+10)^0,w,c
 37448  018778  6E05               	movwf	(btemp+4)^0,c
 37449  01877A  500C               	movf	(btemp+11)^0,w,c
 37450  01877C  6E06               	movwf	(btemp+5)^0,c
 37451  01877E  6A07               	clrf	(btemp+6)^0,c
 37452  018780  6A08               	clrf	(btemp+7)^0,c
 37453  018782  0060  F017  FFE6   	movff	btemp+4,postinc1
 37454  018788  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37455  01878E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37456  018794  0060  F023  FFE6   	movff	btemp+7,postinc1
 37457  01879A  0E00               	movlw	0
 37458  01879C  6EE6               	movwf	postinc1,c
 37459  01879E  EC5B  F0E5         	call	___xxtofl	;wreg free
 37460  0187A2  0060  F007  FFE6   	movff	btemp,postinc1
 37461  0187A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37462  0187AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37463  0187B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37464  0187BA  EC61  F0B1         	call	___flmul	;wreg free
 37465  0187BE  0060  F007  FFE6   	movff	btemp,postinc1
 37466  0187C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37467  0187CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37468  0187D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37469  0187D6  ECB2  F0BC         	call	___fldiv	;wreg free
 37470  0187DA  D067               	goto	l1969
 37471  0187DC                     l12223:
 37472                           
 37473                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37474  0187DC  0E00               	movlw	0
 37475  0187DE  6EE6               	movwf	postinc1,c
 37476  0187E0  0E00               	movlw	0
 37477  0187E2  6EE6               	movwf	postinc1,c
 37478  0187E4  0E7A               	movlw	122
 37479  0187E6  6EE6               	movwf	postinc1,c
 37480  0187E8  0E44               	movlw	68
 37481  0187EA  6EE6               	movwf	postinc1,c
 37482  0187EC  0E61               	movlw	97
 37483  0187EE  6EE6               	movwf	postinc1,c
 37484  0187F0  0E03               	movlw	3
 37485  0187F2  6EE6               	movwf	postinc1,c
 37486  0187F4  0E84               	movlw	132
 37487  0187F6  6EE6               	movwf	postinc1,c
 37488  0187F8  0E40               	movlw	64
 37489  0187FA  6EE6               	movwf	postinc1,c
 37490                           
 37491                           ;stkvar	_chan @ sp[(-8)+-1]
 37492  0187FC  0EF7               	movlw	-9
 37493  0187FE  50E3               	movf	plusw1,w,c
 37494  018800  6EE6               	movwf	postinc1,c
 37495  018802  ECC1  F00D         	call	_get_raw_result	;wreg free
 37496  018806  0060  F004  F00B   	movff	btemp,btemp+10
 37497  01880C  0060  F008  F00C   	movff	btemp+1,btemp+11
 37498  018812  500B               	movf	(btemp+10)^0,w,c
 37499  018814  6E05               	movwf	(btemp+4)^0,c
 37500  018816  500C               	movf	(btemp+11)^0,w,c
 37501  018818  6E06               	movwf	(btemp+5)^0,c
 37502  01881A  6A07               	clrf	(btemp+6)^0,c
 37503  01881C  6A08               	clrf	(btemp+7)^0,c
 37504  01881E  0060  F017  FFE6   	movff	btemp+4,postinc1
 37505  018824  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37506  01882A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37507  018830  0060  F023  FFE6   	movff	btemp+7,postinc1
 37508  018836  0E00               	movlw	0
 37509  018838  6EE6               	movwf	postinc1,c
 37510  01883A  EC5B  F0E5         	call	___xxtofl	;wreg free
 37511  01883E  0060  F007  FFE6   	movff	btemp,postinc1
 37512  018844  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37513  01884A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37514  018850  0060  F013  FFE6   	movff	btemp+3,postinc1
 37515  018856  EC61  F0B1         	call	___flmul	;wreg free
 37516  01885A  0060  F007  FFE6   	movff	btemp,postinc1
 37517  018860  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37518  018866  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37519  01886C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37520  018872  ECB2  F0BC         	call	___fldiv	;wreg free
 37521  018876  D019               	goto	l1969
 37522  018878                     l12229:
 37523                           
 37524                           ;daq.c: 162:   return 0.0;
 37525  018878  0E00               	movlw	0
 37526  01887A  6E01               	movwf	btemp^0,c
 37527  01887C  0E00               	movlw	0
 37528  01887E  6E02               	movwf	(btemp+1)^0,c
 37529  018880  0E00               	movlw	0
 37530  018882  6E03               	movwf	(btemp+2)^0,c
 37531  018884  0E00               	movlw	0
 37532  018886                     L43:
 37533  018886  6E04               	movwf	(btemp+3)^0,c
 37534  018888  D010               	goto	l1969
 37535  01888A                     l12237:
 37536                           
 37537                           ;stkvar	_to_what @ sp[(0)+-2]
 37538  01888A  0EFE               	movlw	-2
 37539  01888C  50E3               	movf	plusw1,w,c
 37540  01888E  6E0B               	movwf	(btemp+10)^0,c
 37541  018890  6A0C               	clrf	(btemp+11)^0,c
 37542                           
 37543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37544                           ; Switch size 1, requested type "simple"
 37545                           ; Number of cases is 1, Range of values is 0 to 0
 37546                           ; switch strategies available:
 37547                           ; Name         Instructions Cycles
 37548                           ; simple_byte            4     3 (average)
 37549                           ;	Chosen strategy is simple_byte
 37550  018892  500C               	movf	(btemp+11)^0,w,c
 37551  018894  0A00               	xorlw	0	; case 0
 37552  018896  A4D8               	btfss	status,2,c
 37553  018898  D7EF               	goto	l12229
 37554                           
 37555                           ; Switch size 1, requested type "simple"
 37556                           ; Number of cases is 2, Range of values is 0 to 1
 37557                           ; switch strategies available:
 37558                           ; Name         Instructions Cycles
 37559                           ; simple_byte            7     4 (average)
 37560                           ;	Chosen strategy is simple_byte
 37561  01889A  500B               	movf	(btemp+10)^0,w,c
 37562  01889C  0A00               	xorlw	0	; case 0
 37563  01889E  B4D8               	btfsc	status,2,c
 37564  0188A0  D5AA               	goto	l12183
 37565  0188A2  0A01               	xorlw	1	; case 1
 37566  0188A4  B4D8               	btfsc	status,2,c
 37567  0188A6  D72A               	goto	l12215
 37568  0188A8  D7E7               	goto	l12229
 37569  0188AA                     l1969:
 37570                           
 37571                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37572  0188AA  52E5               	movf	postdec1,f,c
 37573  0188AC  52E5               	movf	postdec1,f,c
 37574  0188AE  0012               	return		;funcret
 37575  0188B0                     __end_of_conv_raw_result:
 37576                           	opt callstack 0
 37577                           
 37578 ;; *************** function _nanf *****************
 37579 ;; Defined at:
 37580 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 37581 ;; Parameters:    Size  Location     Type
 37582 ;;  s               2  [STACK] PTR const unsigned char 
 37583 ;;		 -> STR_126(1), STR_86(1), 
 37584 ;; Auto vars:     Size  Location     Type
 37585 ;;  u               4  [STACK] struct .
 37586 ;; Return value:  Size  Location     Type
 37587 ;;                  4  [STACK] float 
 37588 ;; Registers used:
 37589 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37590 ;; Tracked objects:
 37591 ;;		On entry : 0/0
 37592 ;;		On exit  : 0/0
 37593 ;;		Unchanged: 0/0
 37594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37599 ;;Total ram usage:        0 bytes
 37600 ;; Hardware stack levels used:    1
 37601 ;; Hardware stack levels required when called:   15
 37602 ;; This function calls:
 37603 ;;		Nothing
 37604 ;; This function is called by:
 37605 ;;		_conv_raw_result
 37606 ;; This function uses a reentrant model
 37607 ;;
 37608                           
 37609                           	psect	text140
 37610  000D12                     __ptext140:
 37611                           	opt callstack 0
 37612  000D12                     _nanf:
 37613                           	opt callstack 0
 37614                           
 37615                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37616  000D12  52E6               	movf	postinc1,f,c
 37617  000D14  52E6               	movf	postinc1,f,c
 37618  000D16  52E6               	movf	postinc1,f,c
 37619  000D18  52E6               	movf	postinc1,f,c
 37620                           
 37621                           ;incstack = 0
 37622 ;; hardware stack exceeded
 37623  000D1A  0EFF               	movlw	255
 37624  000D1C  6E09               	movwf	(btemp+8)^0,c
 37625  000D1E  0EFF               	movlw	255
 37626  000D20  6E0A               	movwf	(btemp+9)^0,c
 37627  000D22  0EFF               	movlw	255
 37628  000D24  6E0B               	movwf	(btemp+10)^0,c
 37629  000D26  0E7F               	movlw	127
 37630  000D28  6E0C               	movwf	(btemp+11)^0,c
 37631                           
 37632                           ;stkvar	_u @ sp[(-4)+0]
 37633  000D2A  0EFC               	movlw	-4
 37634  000D2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 37635  000D32  0EFD               	movlw	-3
 37636  000D34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37637  000D3A  0EFE               	movlw	-2
 37638  000D3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37639  000D42  0EFF               	movlw	-1
 37640  000D44  0060  F033  FFE3   	movff	btemp+11,plusw1
 37641                           
 37642                           ;stkvar	_u @ sp[(-4)+0]
 37643  000D4A  0EFC               	movlw	-4
 37644  000D4C  006F FF8C  F001    	movff	plusw1,btemp
 37645  000D52  0EFD               	movlw	-3
 37646  000D54  006F FF8C  F002    	movff	plusw1,btemp+1
 37647  000D5A  0EFE               	movlw	-2
 37648  000D5C  006F FF8C  F003    	movff	plusw1,btemp+2
 37649  000D62  0EFF               	movlw	-1
 37650  000D64  006F FF8C  F004    	movff	plusw1,btemp+3
 37651                           
 37652                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37653  000D6A  0EFA               	movlw	250
 37654  000D6C  26E1               	addwf	fsr1l,f,c
 37655  000D6E  0EFF               	movlw	255
 37656  000D70  22E2               	addwfc	fsr1h,f,c
 37657  000D72  0012               	return		;funcret
 37658  000D74                     __end_of_nanf:
 37659                           	opt callstack 0
 37660                           
 37661 ;; *************** function _get_raw_result *****************
 37662 ;; Defined at:
 37663 ;;		line 125 in file "daq.c"
 37664 ;; Parameters:    Size  Location     Type
 37665 ;;  index           1  [STACK] const enum E16605
 37666 ;; Auto vars:     Size  Location     Type
 37667 ;;		None
 37668 ;; Return value:  Size  Location     Type
 37669 ;;                  2  [STACK] unsigned short 
 37670 ;; Registers used:
 37671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 37672 ;; Tracked objects:
 37673 ;;		On entry : 0/1
 37674 ;;		On exit  : 0/0
 37675 ;;		Unchanged: 0/0
 37676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37681 ;;Total ram usage:        0 bytes
 37682 ;; Hardware stack levels used:    1
 37683 ;; Hardware stack levels required when called:   15
 37684 ;; This function calls:
 37685 ;;		Nothing
 37686 ;; This function is called by:
 37687 ;;		_main
 37688 ;;		_current_sensor_cal
 37689 ;;		_conv_raw_result
 37690 ;; This function uses a reentrant model
 37691 ;;
 37692                           
 37693                           	psect	text141
 37694  001B82                     __ptext141:
 37695                           	opt callstack 0
 37696  001B82                     _get_raw_result:
 37697                           	opt callstack 0
 37698                           
 37699                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 37700                           ;stkvar	_index @ sp[(0)+-1]
 37701                           
 37702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37703                           ;incstack = 0
 37704 ;; hardware stack exceeded
 37705  001B82  0EFF               	movlw	-1
 37706  001B84  50E3               	movf	plusw1,w,c
 37707  001B86  0D02               	mullw	2
 37708  001B88  0E07               	movlw	low _R
 37709  001B8A  24F3               	addwf	243,w,c
 37710  001B8C  6ED9               	movwf	fsr2l,c
 37711  001B8E  0E02               	movlw	high _R
 37712  001B90  20F4               	addwfc	prodh,w,c
 37713  001B92  6EDA               	movwf	fsr2h,c
 37714  001B94  006F FF78  F001    	movff	postinc2,btemp
 37715  001B9A  006F FF74  F002    	movff	postdec2,btemp+1
 37716                           
 37717                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 37718  001BA0  52E5               	movf	postdec1,f,c
 37719  001BA2  0012               	return		;funcret
 37720  001BA4                     __end_of_get_raw_result:
 37721                           	opt callstack 0
 37722                           
 37723 ;; *************** function ___xxtofl *****************
 37724 ;; Defined at:
 37725 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 37726 ;; Parameters:    Size  Location     Type
 37727 ;;  sign            1  [STACK] unsigned char 
 37728 ;;  val             4  [STACK] long 
 37729 ;; Auto vars:     Size  Location     Type
 37730 ;;  arg             4  [STACK] unsigned long 
 37731 ;;  exp             1  [STACK] unsigned char 
 37732 ;; Return value:  Size  Location     Type
 37733 ;;                  4  [STACK] unsigned char 
 37734 ;; Registers used:
 37735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 37736 ;; Tracked objects:
 37737 ;;		On entry : 0/2
 37738 ;;		On exit  : 0/0
 37739 ;;		Unchanged: 0/0
 37740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37745 ;;Total ram usage:        0 bytes
 37746 ;; Hardware stack levels used:    1
 37747 ;; Hardware stack levels required when called:   15
 37748 ;; This function calls:
 37749 ;;		Nothing
 37750 ;; This function is called by:
 37751 ;;		_conv_raw_result
 37752 ;;		_init_bsoc
 37753 ;; This function uses a reentrant model
 37754 ;;
 37755                           
 37756                           	psect	text142
 37757  01CAB6                     __ptext142:
 37758                           	opt callstack 0
 37759  01CAB6                     ___xxtofl:
 37760                           	opt callstack 0
 37761                           
 37762                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37763  01CAB6  0E05               	movlw	5
 37764  01CAB8  26E1               	addwf	fsr1l,f,c
 37765  01CABA  0E00               	movlw	0
 37766  01CABC  22E2               	addwfc	fsr1h,f,c
 37767                           
 37768                           ;stkvar	_sign @ sp[(-5)+-1]
 37769                           
 37770                           ;incstack = 0
 37771 ;; hardware stack exceeded
 37772  01CABE  0EFA               	movlw	-6
 37773  01CAC0  50E3               	movf	plusw1,w,c
 37774  01CAC2  B4D8               	btfsc	status,2,c
 37775  01CAC4  D01D               	goto	l11919
 37776                           
 37777                           ;stkvar	_val @ sp[(-5)+-5]
 37778  01CAC6  0EF9               	movlw	-7
 37779  01CAC8  AEE3               	btfss	plusw1,7,c
 37780  01CACA  D01A               	goto	l11919
 37781                           
 37782                           ;stkvar	_val @ sp[(-5)+-5]
 37783  01CACC  0EF6               	movlw	-10
 37784  01CACE  006F FF8C  F009    	movff	plusw1,btemp+8
 37785  01CAD4  0EF7               	movlw	-9
 37786  01CAD6  006F FF8C  F00A    	movff	plusw1,btemp+9
 37787  01CADC  0EF8               	movlw	-8
 37788  01CADE  006F FF8C  F00B    	movff	plusw1,btemp+10
 37789  01CAE4  0EF9               	movlw	-7
 37790  01CAE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 37791  01CAEC  1E09               	comf	(btemp+8)^0,f,c
 37792  01CAEE  1E0A               	comf	(btemp+9)^0,f,c
 37793  01CAF0  1E0B               	comf	(btemp+10)^0,f,c
 37794  01CAF2  1E0C               	comf	(btemp+11)^0,f,c
 37795  01CAF4  2A09               	incf	(btemp+8)^0,f,c
 37796  01CAF6  0E00               	movlw	0
 37797  01CAF8  220A               	addwfc	(btemp+9)^0,f,c
 37798  01CAFA  220B               	addwfc	(btemp+10)^0,f,c
 37799  01CAFC  220C               	addwfc	(btemp+11)^0,f,c
 37800  01CAFE  D010               	goto	L44
 37801  01CB00                     l11919:
 37802                           
 37803                           ;stkvar	_val @ sp[(-5)+-5]
 37804  01CB00  0EF6               	movlw	-10
 37805  01CB02  006F FF8C  F009    	movff	plusw1,btemp+8
 37806  01CB08  0EF7               	movlw	-9
 37807  01CB0A  006F FF8C  F00A    	movff	plusw1,btemp+9
 37808  01CB10  0EF8               	movlw	-8
 37809  01CB12  006F FF8C  F00B    	movff	plusw1,btemp+10
 37810  01CB18  0EF9               	movlw	-7
 37811  01CB1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 37812  01CB20                     L44:
 37813                           
 37814                           ;stkvar	_arg @ sp[(-5)+0]
 37815  01CB20  0EFB               	movlw	-5
 37816  01CB22  0060  F027  FFE3   	movff	btemp+8,plusw1
 37817  01CB28  0EFC               	movlw	-4
 37818  01CB2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37819  01CB30  0EFD               	movlw	-3
 37820  01CB32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37821  01CB38  0EFE               	movlw	-2
 37822  01CB3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 37823                           
 37824                           ;stkvar	_val @ sp[(-5)+-5]
 37825  01CB40  0EF6               	movlw	-10
 37826  01CB42  50E3               	movf	plusw1,w,c
 37827  01CB44  E113               	bnz	l11927
 37828  01CB46  0EF7               	movlw	-9
 37829  01CB48  50E3               	movf	plusw1,w,c
 37830  01CB4A  E110               	bnz	l11927
 37831  01CB4C  0EF8               	movlw	-8
 37832  01CB4E  50E3               	movf	plusw1,w,c
 37833  01CB50  E10D               	bnz	l11927
 37834  01CB52  0EF9               	movlw	-7
 37835  01CB54  50E3               	movf	plusw1,w,c
 37836  01CB56  A4D8               	btfss	status,2,c
 37837  01CB58  D009               	goto	l11927
 37838  01CB5A  0E00               	movlw	0
 37839  01CB5C  6E01               	movwf	btemp^0,c
 37840  01CB5E  0E00               	movlw	0
 37841  01CB60  6E02               	movwf	(btemp+1)^0,c
 37842  01CB62  0E00               	movlw	0
 37843  01CB64  6E03               	movwf	(btemp+2)^0,c
 37844  01CB66  0E00               	movlw	0
 37845  01CB68  6E04               	movwf	(btemp+3)^0,c
 37846  01CB6A  D0A2               	goto	l3355
 37847  01CB6C                     l11927:
 37848  01CB6C  0E96               	movlw	150
 37849  01CB6E  6E0C               	movwf	(btemp+11)^0,c
 37850                           
 37851                           ;stkvar	_exp @ sp[(-5)+4]
 37852  01CB70  0EFF               	movlw	-1
 37853  01CB72  0060  F033  FFE3   	movff	btemp+11,plusw1
 37854  01CB78  D00B               	goto	l11931
 37855  01CB7A                     l11929:
 37856                           
 37857                           ;stkvar	_exp @ sp[(-5)+4]
 37858  01CB7A  0EFF               	movlw	-1
 37859  01CB7C  2AE3               	incf	plusw1,f,c
 37860                           
 37861                           ;stkvar	_arg @ sp[(-5)+0]
 37862  01CB7E  90D8               	bcf	status,0,c
 37863  01CB80  0EFE               	movlw	-2
 37864  01CB82  32E3               	rrcf	plusw1,f,c
 37865  01CB84  0EFD               	movlw	-3
 37866  01CB86  32E3               	rrcf	plusw1,f,c
 37867  01CB88  0EFC               	movlw	-4
 37868  01CB8A  32E3               	rrcf	plusw1,f,c
 37869  01CB8C  0EFB               	movlw	-5
 37870  01CB8E  32E3               	rrcf	plusw1,f,c
 37871  01CB90                     l11931:
 37872                           
 37873                           ;stkvar	_arg @ sp[(-5)+0]
 37874  01CB90  50E1               	movf	fsr1l,w,c
 37875  01CB92  0FFB               	addlw	-5
 37876  01CB94  6ED9               	movwf	fsr2l,c
 37877  01CB96  50E2               	movf	fsr1h,w,c
 37878  01CB98  6EDA               	movwf	fsr2h,c
 37879  01CB9A  0EFF               	movlw	255
 37880  01CB9C  22DA               	addwfc	fsr2h,f,c
 37881  01CB9E  52DE               	movf	postinc2,f,c
 37882  01CBA0  52DE               	movf	postinc2,f,c
 37883  01CBA2  52DE               	movf	postinc2,f,c
 37884  01CBA4  0EFE               	movlw	254
 37885  01CBA6  14DD               	andwf	postdec2,w,c
 37886  01CBA8  B4D8               	btfsc	status,2,c
 37887  01CBAA  D018               	goto	l11939
 37888  01CBAC  D7E6               	goto	l11929
 37889  01CBAE                     l11933:
 37890                           
 37891                           ;stkvar	_exp @ sp[(-5)+4]
 37892  01CBAE  0EFF               	movlw	-1
 37893  01CBB0  2AE3               	incf	plusw1,f,c
 37894                           
 37895                           ;stkvar	_arg @ sp[(-5)+0]
 37896  01CBB2  50E1               	movf	fsr1l,w,c
 37897  01CBB4  0FFB               	addlw	-5
 37898  01CBB6  6ED9               	movwf	fsr2l,c
 37899  01CBB8  50E2               	movf	fsr1h,w,c
 37900  01CBBA  6EDA               	movwf	fsr2h,c
 37901  01CBBC  0EFF               	movlw	255
 37902  01CBBE  22DA               	addwfc	fsr2h,f,c
 37903  01CBC0  2ADE               	incf	postinc2,f,c
 37904  01CBC2  0E00               	movlw	0
 37905  01CBC4  22DE               	addwfc	postinc2,f,c
 37906  01CBC6  22DE               	addwfc	postinc2,f,c
 37907  01CBC8  22DE               	addwfc	postinc2,f,c
 37908                           
 37909                           ;stkvar	_arg @ sp[(-5)+0]
 37910  01CBCA  90D8               	bcf	status,0,c
 37911  01CBCC  0EFE               	movlw	-2
 37912  01CBCE  32E3               	rrcf	plusw1,f,c
 37913  01CBD0  0EFD               	movlw	-3
 37914  01CBD2  32E3               	rrcf	plusw1,f,c
 37915  01CBD4  0EFC               	movlw	-4
 37916  01CBD6  32E3               	rrcf	plusw1,f,c
 37917  01CBD8  0EFB               	movlw	-5
 37918  01CBDA  32E3               	rrcf	plusw1,f,c
 37919  01CBDC                     l11939:
 37920                           
 37921                           ;stkvar	_arg @ sp[(-5)+0]
 37922  01CBDC  50E1               	movf	fsr1l,w,c
 37923  01CBDE  0FFB               	addlw	-5
 37924  01CBE0  6ED9               	movwf	fsr2l,c
 37925  01CBE2  50E2               	movf	fsr1h,w,c
 37926  01CBE4  6EDA               	movwf	fsr2h,c
 37927  01CBE6  0EFF               	movlw	255
 37928  01CBE8  22DA               	addwfc	fsr2h,f,c
 37929  01CBEA  52DE               	movf	postinc2,f,c
 37930  01CBEC  52DE               	movf	postinc2,f,c
 37931  01CBEE  52DE               	movf	postinc2,f,c
 37932  01CBF0  0EFF               	movlw	255
 37933  01CBF2  14DD               	andwf	postdec2,w,c
 37934  01CBF4  B4D8               	btfsc	status,2,c
 37935  01CBF6  D00C               	goto	l11943
 37936  01CBF8  D7DA               	goto	l11933
 37937  01CBFA                     l11941:
 37938                           
 37939                           ;stkvar	_exp @ sp[(-5)+4]
 37940  01CBFA  0EFF               	movlw	-1
 37941  01CBFC  06E3               	decf	plusw1,f,c
 37942                           
 37943                           ;stkvar	_arg @ sp[(-5)+0]
 37944  01CBFE  90D8               	bcf	status,0,c
 37945  01CC00  0EFB               	movlw	-5
 37946  01CC02  36E3               	rlcf	plusw1,f,c
 37947  01CC04  0EFC               	movlw	-4
 37948  01CC06  36E3               	rlcf	plusw1,f,c
 37949  01CC08  0EFD               	movlw	-3
 37950  01CC0A  36E3               	rlcf	plusw1,f,c
 37951  01CC0C  0EFE               	movlw	-2
 37952  01CC0E  36E3               	rlcf	plusw1,f,c
 37953  01CC10                     l11943:
 37954                           
 37955                           ;stkvar	_arg @ sp[(-5)+0]
 37956  01CC10  0EFD               	movlw	-3
 37957  01CC12  BEE3               	btfsc	plusw1,7,c
 37958  01CC14  D007               	goto	u11290
 37959                           
 37960                           ;stkvar	_exp @ sp[(-5)+4]
 37961  01CC16  0EFF               	movlw	-1
 37962  01CC18  006F FF8C  F001    	movff	plusw1,btemp
 37963  01CC1E  0E02               	movlw	2
 37964  01CC20  6001               	cpfslt	btemp^0,c
 37965  01CC22  D7EB               	goto	l11941
 37966  01CC24                     u11290:
 37967                           
 37968                           ;stkvar	_exp @ sp[(-5)+4]
 37969  01CC24  0EFF               	movlw	-1
 37970  01CC26  B0E3               	btfsc	plusw1,0,c
 37971  01CC28  D002               	goto	l11951
 37972                           
 37973                           ;stkvar	_arg @ sp[(-5)+0]
 37974  01CC2A  0EFD               	movlw	-3
 37975  01CC2C  9EE3               	bcf	plusw1,7,c
 37976  01CC2E                     l11951:
 37977                           
 37978                           ;stkvar	_exp @ sp[(-5)+4]
 37979  01CC2E  50E1               	movf	fsr1l,w,c
 37980  01CC30  0FFF               	addlw	-1
 37981  01CC32  6ED9               	movwf	fsr2l,c
 37982  01CC34  50E2               	movf	fsr1h,w,c
 37983  01CC36  6EDA               	movwf	fsr2h,c
 37984  01CC38  0EFF               	movlw	255
 37985  01CC3A  22DA               	addwfc	fsr2h,f,c
 37986  01CC3C  90D8               	bcf	status,0,c
 37987  01CC3E  32DF               	rrcf	indf2,f,c
 37988                           
 37989                           ;stkvar	_exp @ sp[(-5)+4]
 37990  01CC40  0EFF               	movlw	-1
 37991  01CC42  006F FF8C  F00C    	movff	plusw1,btemp+11
 37992  01CC48  0060  F030  F005   	movff	btemp+11,btemp+4
 37993  01CC4E  6A06               	clrf	(btemp+5)^0,c
 37994  01CC50  6A07               	clrf	(btemp+6)^0,c
 37995  01CC52  6A08               	clrf	(btemp+7)^0,c
 37996  01CC54  0060  F014  F008   	movff	btemp+4,btemp+7
 37997  01CC5A  6A07               	clrf	(btemp+6)^0,c
 37998  01CC5C  6A06               	clrf	(btemp+5)^0,c
 37999  01CC5E  6A05               	clrf	(btemp+4)^0,c
 38000                           
 38001                           ;stkvar	_arg @ sp[(-5)+0]
 38002  01CC60  50E1               	movf	fsr1l,w,c
 38003  01CC62  0FFB               	addlw	-5
 38004  01CC64  6ED9               	movwf	fsr2l,c
 38005  01CC66  50E2               	movf	fsr1h,w,c
 38006  01CC68  6EDA               	movwf	fsr2h,c
 38007  01CC6A  0EFF               	movlw	255
 38008  01CC6C  22DA               	addwfc	fsr2h,f,c
 38009  01CC6E  5005               	movf	(btemp+4)^0,w,c
 38010  01CC70  12DE               	iorwf	postinc2,f,c
 38011  01CC72  5006               	movf	(btemp+5)^0,w,c
 38012  01CC74  12DE               	iorwf	postinc2,f,c
 38013  01CC76  5007               	movf	(btemp+6)^0,w,c
 38014  01CC78  12DE               	iorwf	postinc2,f,c
 38015  01CC7A  5008               	movf	(btemp+7)^0,w,c
 38016  01CC7C  12DE               	iorwf	postinc2,f,c
 38017                           
 38018                           ;stkvar	_sign @ sp[(-5)+-1]
 38019  01CC7E  0EFA               	movlw	-6
 38020  01CC80  50E3               	movf	plusw1,w,c
 38021  01CC82  B4D8               	btfsc	status,2,c
 38022  01CC84  D005               	goto	l11961
 38023                           
 38024                           ;stkvar	_val @ sp[(-5)+-5]
 38025  01CC86  0EF9               	movlw	-7
 38026  01CC88  AEE3               	btfss	plusw1,7,c
 38027  01CC8A  D002               	goto	l11961
 38028                           
 38029                           ;stkvar	_arg @ sp[(-5)+0]
 38030  01CC8C  0EFE               	movlw	-2
 38031  01CC8E  8EE3               	bsf	plusw1,7,c
 38032  01CC90                     l11961:
 38033                           
 38034                           ;stkvar	_arg @ sp[(-5)+0]
 38035  01CC90  0EFB               	movlw	-5
 38036  01CC92  006F FF8C  F001    	movff	plusw1,btemp
 38037  01CC98  0EFC               	movlw	-4
 38038  01CC9A  006F FF8C  F002    	movff	plusw1,btemp+1
 38039  01CCA0  0EFD               	movlw	-3
 38040  01CCA2  006F FF8C  F003    	movff	plusw1,btemp+2
 38041  01CCA8  0EFE               	movlw	-2
 38042  01CCAA  006F FF8C  F004    	movff	plusw1,btemp+3
 38043  01CCB0                     l3355:
 38044                           
 38045                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38046  01CCB0  0EF6               	movlw	246
 38047  01CCB2  26E1               	addwf	fsr1l,f,c
 38048  01CCB4  0EFF               	movlw	255
 38049  01CCB6  22E2               	addwfc	fsr1h,f,c
 38050  01CCB8  0012               	return		;funcret
 38051  01CCBA                     __end_of___xxtofl:
 38052                           	opt callstack 0
 38053                           
 38054 ;; *************** function ___fldiv *****************
 38055 ;; Defined at:
 38056 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38057 ;; Parameters:    Size  Location     Type
 38058 ;;  b               4  [STACK] unsigned char 
 38059 ;;  a               4  [STACK] unsigned char 
 38060 ;; Auto vars:     Size  Location     Type
 38061 ;;  grs             4  [STACK] unsigned long 
 38062 ;;  rem             4  [STACK] unsigned long 
 38063 ;;  new_exp         2  [STACK] short 
 38064 ;;  aexp            1  [STACK] unsigned char 
 38065 ;;  bexp            1  [STACK] unsigned char 
 38066 ;;  sign            1  [STACK] unsigned char 
 38067 ;; Return value:  Size  Location     Type
 38068 ;;                  4  [STACK] unsigned char 
 38069 ;; Registers used:
 38070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38071 ;; Tracked objects:
 38072 ;;		On entry : 0/0
 38073 ;;		On exit  : 0/0
 38074 ;;		Unchanged: 0/0
 38075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38080 ;;Total ram usage:        0 bytes
 38081 ;; Hardware stack levels used:    1
 38082 ;; Hardware stack levels required when called:   15
 38083 ;; This function calls:
 38084 ;;		Nothing
 38085 ;; This function is called by:
 38086 ;;		_conv_raw_result
 38087 ;;		_convert_dac_raw
 38088 ;;		_calc_bsoc
 38089 ;;		_init_bsoc
 38090 ;;		_esr_check
 38091 ;;		_efgtoa
 38092 ;; This function uses a reentrant model
 38093 ;;
 38094                           
 38095                           	psect	text143
 38096  017964                     __ptext143:
 38097                           	opt callstack 0
 38098  017964                     ___fldiv:
 38099                           	opt callstack 0
 38100                           
 38101                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38102  017964  0E0D               	movlw	13
 38103  017966  26E1               	addwf	fsr1l,f,c
 38104  017968  0E00               	movlw	0
 38105  01796A  22E2               	addwfc	fsr1h,f,c
 38106                           
 38107                           ;stkvar	_b @ sp[(-13)+-4]
 38108                           
 38109                           ;incstack = 0
 38110 ;; hardware stack exceeded
 38111  01796C  0EF2               	movlw	242
 38112  01796E  24E1               	addwf	fsr1l,w,c
 38113  017970  6ED9               	movwf	fsr2l,c
 38114  017972  0EFF               	movlw	255
 38115  017974  20E2               	addwfc	fsr1h,w,c
 38116  017976  6EDA               	movwf	fsr2h,c
 38117  017978  50DF               	movf	indf2,w,c
 38118  01797A  6E0C               	movwf	(btemp+11)^0,c
 38119  01797C  0E80               	movlw	128
 38120  01797E  160C               	andwf	(btemp+11)^0,f,c
 38121                           
 38122                           ;stkvar	_sign @ sp[(-13)+12]
 38123  017980  0EFF               	movlw	-1
 38124  017982  0060  F033  FFE3   	movff	btemp+11,plusw1
 38125                           
 38126                           ;stkvar	_b @ sp[(-13)+-4]
 38127  017988  0EF2               	movlw	242
 38128  01798A  24E1               	addwf	fsr1l,w,c
 38129  01798C  6ED9               	movwf	fsr2l,c
 38130  01798E  0EFF               	movlw	255
 38131  017990  20E2               	addwfc	fsr1h,w,c
 38132  017992  6EDA               	movwf	fsr2h,c
 38133  017994  50DF               	movf	indf2,w,c
 38134  017996  6E0C               	movwf	(btemp+11)^0,c
 38135  017998  90D8               	bcf	status,0,c
 38136  01799A  340C               	rlcf	(btemp+11)^0,w,c
 38137  01799C  6E0B               	movwf	(btemp+10)^0,c
 38138                           
 38139                           ;stkvar	_bexp @ sp[(-13)+11]
 38140  01799E  0EFE               	movlw	-2
 38141  0179A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38142                           
 38143                           ;stkvar	_b @ sp[(-13)+-4]
 38144  0179A6  0EF1               	movlw	241
 38145  0179A8  24E1               	addwf	fsr1l,w,c
 38146  0179AA  6ED9               	movwf	fsr2l,c
 38147  0179AC  0EFF               	movlw	255
 38148  0179AE  20E2               	addwfc	fsr1h,w,c
 38149  0179B0  6EDA               	movwf	fsr2h,c
 38150  0179B2  AEDF               	btfss	indf2,7,c
 38151  0179B4  D002               	goto	l10205
 38152                           
 38153                           ;stkvar	_bexp @ sp[(-13)+11]
 38154  0179B6  0EFE               	movlw	-2
 38155  0179B8  80E3               	bsf	plusw1,0,c
 38156  0179BA                     l10205:
 38157                           
 38158                           ;stkvar	_bexp @ sp[(-13)+11]
 38159  0179BA  0EFE               	movlw	-2
 38160  0179BC  50E3               	movf	plusw1,w,c
 38161  0179BE  B4D8               	btfsc	status,2,c
 38162  0179C0  D027               	goto	l10215
 38163                           
 38164                           ;stkvar	_bexp @ sp[(-13)+11]
 38165  0179C2  0EFE               	movlw	-2
 38166  0179C4  28E3               	incf	plusw1,w,c
 38167  0179C6  A4D8               	btfss	status,2,c
 38168  0179C8  D018               	goto	l10211
 38169  0179CA  0E00               	movlw	0
 38170  0179CC  6E09               	movwf	(btemp+8)^0,c
 38171  0179CE  0E00               	movlw	0
 38172  0179D0  6E0A               	movwf	(btemp+9)^0,c
 38173  0179D2  0E00               	movlw	0
 38174  0179D4  6E0B               	movwf	(btemp+10)^0,c
 38175  0179D6  0E00               	movlw	0
 38176  0179D8  6E0C               	movwf	(btemp+11)^0,c
 38177                           
 38178                           ;stkvar	_b @ sp[(-13)+-4]
 38179  0179DA  0EEF               	movlw	-17
 38180  0179DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 38181  0179E2  0EF0               	movlw	-16
 38182  0179E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38183  0179EA  0EF1               	movlw	-15
 38184  0179EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38185  0179F2  0EF2               	movlw	-14
 38186  0179F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 38187  0179FA                     l10211:
 38188                           
 38189                           ;stkvar	_b @ sp[(-13)+-4]
 38190  0179FA  0EF1               	movlw	-15
 38191  0179FC  8EE3               	bsf	plusw1,7,c
 38192                           
 38193                           ;stkvar	_b @ sp[(-13)+-4]
 38194  0179FE  0EF2               	movlw	242
 38195  017A00  24E1               	addwf	fsr1l,w,c
 38196  017A02  6ED9               	movwf	fsr2l,c
 38197  017A04  0EFF               	movlw	255
 38198  017A06  20E2               	addwfc	fsr1h,w,c
 38199  017A08  6EDA               	movwf	fsr2h,c
 38200  017A0A  0E00               	movlw	0
 38201  017A0C  6EDF               	movwf	indf2,c
 38202  017A0E  D018               	goto	l10217
 38203  017A10                     l10215:
 38204  017A10  0E00               	movlw	0
 38205  017A12  6E09               	movwf	(btemp+8)^0,c
 38206  017A14  0E00               	movlw	0
 38207  017A16  6E0A               	movwf	(btemp+9)^0,c
 38208  017A18  0E00               	movlw	0
 38209  017A1A  6E0B               	movwf	(btemp+10)^0,c
 38210  017A1C  0E00               	movlw	0
 38211  017A1E  6E0C               	movwf	(btemp+11)^0,c
 38212                           
 38213                           ;stkvar	_b @ sp[(-13)+-4]
 38214  017A20  0EEF               	movlw	-17
 38215  017A22  0060  F027  FFE3   	movff	btemp+8,plusw1
 38216  017A28  0EF0               	movlw	-16
 38217  017A2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38218  017A30  0EF1               	movlw	-15
 38219  017A32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38220  017A38  0EF2               	movlw	-14
 38221  017A3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 38222  017A40                     l10217:
 38223                           
 38224                           ;stkvar	_a @ sp[(-13)+-8]
 38225  017A40  0EEE               	movlw	238
 38226  017A42  24E1               	addwf	fsr1l,w,c
 38227  017A44  6ED9               	movwf	fsr2l,c
 38228  017A46  0EFF               	movlw	255
 38229  017A48  20E2               	addwfc	fsr1h,w,c
 38230  017A4A  6EDA               	movwf	fsr2h,c
 38231  017A4C  50DF               	movf	indf2,w,c
 38232  017A4E  6E0C               	movwf	(btemp+11)^0,c
 38233  017A50  0E80               	movlw	128
 38234  017A52  160C               	andwf	(btemp+11)^0,f,c
 38235                           
 38236                           ;stkvar	_sign @ sp[(-13)+12]
 38237  017A54  50E1               	movf	fsr1l,w,c
 38238  017A56  0FFF               	addlw	-1
 38239  017A58  6ED9               	movwf	fsr2l,c
 38240  017A5A  50E2               	movf	fsr1h,w,c
 38241  017A5C  6EDA               	movwf	fsr2h,c
 38242  017A5E  0EFF               	movlw	255
 38243  017A60  22DA               	addwfc	fsr2h,f,c
 38244  017A62  500C               	movf	(btemp+11)^0,w,c
 38245  017A64  1ADF               	xorwf	indf2,f,c
 38246                           
 38247                           ;stkvar	_a @ sp[(-13)+-8]
 38248  017A66  0EEE               	movlw	238
 38249  017A68  24E1               	addwf	fsr1l,w,c
 38250  017A6A  6ED9               	movwf	fsr2l,c
 38251  017A6C  0EFF               	movlw	255
 38252  017A6E  20E2               	addwfc	fsr1h,w,c
 38253  017A70  6EDA               	movwf	fsr2h,c
 38254  017A72  50DF               	movf	indf2,w,c
 38255  017A74  6E0C               	movwf	(btemp+11)^0,c
 38256  017A76  90D8               	bcf	status,0,c
 38257  017A78  340C               	rlcf	(btemp+11)^0,w,c
 38258  017A7A  6E0B               	movwf	(btemp+10)^0,c
 38259                           
 38260                           ;stkvar	_aexp @ sp[(-13)+10]
 38261  017A7C  0EFD               	movlw	-3
 38262  017A7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38263                           
 38264                           ;stkvar	_a @ sp[(-13)+-8]
 38265  017A84  0EED               	movlw	237
 38266  017A86  24E1               	addwf	fsr1l,w,c
 38267  017A88  6ED9               	movwf	fsr2l,c
 38268  017A8A  0EFF               	movlw	255
 38269  017A8C  20E2               	addwfc	fsr1h,w,c
 38270  017A8E  6EDA               	movwf	fsr2h,c
 38271  017A90  AEDF               	btfss	indf2,7,c
 38272  017A92  D002               	goto	l10225
 38273                           
 38274                           ;stkvar	_aexp @ sp[(-13)+10]
 38275  017A94  0EFD               	movlw	-3
 38276  017A96  80E3               	bsf	plusw1,0,c
 38277  017A98                     l10225:
 38278                           
 38279                           ;stkvar	_aexp @ sp[(-13)+10]
 38280  017A98  0EFD               	movlw	-3
 38281  017A9A  50E3               	movf	plusw1,w,c
 38282  017A9C  B4D8               	btfsc	status,2,c
 38283  017A9E  D027               	goto	l10235
 38284                           
 38285                           ;stkvar	_aexp @ sp[(-13)+10]
 38286  017AA0  0EFD               	movlw	-3
 38287  017AA2  28E3               	incf	plusw1,w,c
 38288  017AA4  A4D8               	btfss	status,2,c
 38289  017AA6  D018               	goto	l10231
 38290  017AA8  0E00               	movlw	0
 38291  017AAA  6E09               	movwf	(btemp+8)^0,c
 38292  017AAC  0E00               	movlw	0
 38293  017AAE  6E0A               	movwf	(btemp+9)^0,c
 38294  017AB0  0E00               	movlw	0
 38295  017AB2  6E0B               	movwf	(btemp+10)^0,c
 38296  017AB4  0E00               	movlw	0
 38297  017AB6  6E0C               	movwf	(btemp+11)^0,c
 38298                           
 38299                           ;stkvar	_a @ sp[(-13)+-8]
 38300  017AB8  0EEB               	movlw	-21
 38301  017ABA  0060  F027  FFE3   	movff	btemp+8,plusw1
 38302  017AC0  0EEC               	movlw	-20
 38303  017AC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38304  017AC8  0EED               	movlw	-19
 38305  017ACA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38306  017AD0  0EEE               	movlw	-18
 38307  017AD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 38308  017AD8                     l10231:
 38309                           
 38310                           ;stkvar	_a @ sp[(-13)+-8]
 38311  017AD8  0EED               	movlw	-19
 38312  017ADA  8EE3               	bsf	plusw1,7,c
 38313                           
 38314                           ;stkvar	_a @ sp[(-13)+-8]
 38315  017ADC  0EEE               	movlw	238
 38316  017ADE  24E1               	addwf	fsr1l,w,c
 38317  017AE0  6ED9               	movwf	fsr2l,c
 38318  017AE2  0EFF               	movlw	255
 38319  017AE4  20E2               	addwfc	fsr1h,w,c
 38320  017AE6  6EDA               	movwf	fsr2h,c
 38321  017AE8  0E00               	movlw	0
 38322  017AEA  6EDF               	movwf	indf2,c
 38323  017AEC  D018               	goto	l10237
 38324  017AEE                     l10235:
 38325  017AEE  0E00               	movlw	0
 38326  017AF0  6E09               	movwf	(btemp+8)^0,c
 38327  017AF2  0E00               	movlw	0
 38328  017AF4  6E0A               	movwf	(btemp+9)^0,c
 38329  017AF6  0E00               	movlw	0
 38330  017AF8  6E0B               	movwf	(btemp+10)^0,c
 38331  017AFA  0E00               	movlw	0
 38332  017AFC  6E0C               	movwf	(btemp+11)^0,c
 38333                           
 38334                           ;stkvar	_a @ sp[(-13)+-8]
 38335  017AFE  0EEB               	movlw	-21
 38336  017B00  0060  F027  FFE3   	movff	btemp+8,plusw1
 38337  017B06  0EEC               	movlw	-20
 38338  017B08  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38339  017B0E  0EED               	movlw	-19
 38340  017B10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38341  017B16  0EEE               	movlw	-18
 38342  017B18  0060  F033  FFE3   	movff	btemp+11,plusw1
 38343  017B1E                     l10237:
 38344                           
 38345                           ;stkvar	_a @ sp[(-13)+-8]
 38346  017B1E  0EEB               	movlw	-21
 38347  017B20  50E3               	movf	plusw1,w,c
 38348  017B22  E139               	bnz	l10249
 38349  017B24  0EEC               	movlw	-20
 38350  017B26  50E3               	movf	plusw1,w,c
 38351  017B28  E136               	bnz	l10249
 38352  017B2A  0EED               	movlw	-19
 38353  017B2C  50E3               	movf	plusw1,w,c
 38354  017B2E  E133               	bnz	l10249
 38355  017B30  0EEE               	movlw	-18
 38356  017B32  50E3               	movf	plusw1,w,c
 38357  017B34  A4D8               	btfss	status,2,c
 38358  017B36  D02F               	goto	l10249
 38359                           
 38360                           ;stkvar	_b @ sp[(-13)+-4]
 38361  017B38  0EEF               	movlw	-17
 38362  017B3A  6AE3               	clrf	plusw1,c
 38363  017B3C  0EF0               	movlw	-16
 38364  017B3E  6AE3               	clrf	plusw1,c
 38365  017B40  0EF1               	movlw	-15
 38366  017B42  6AE3               	clrf	plusw1,c
 38367  017B44  0EF2               	movlw	-14
 38368  017B46  6AE3               	clrf	plusw1,c
 38369                           
 38370                           ;stkvar	_b @ sp[(-13)+-4]
 38371  017B48  0EF1               	movlw	241
 38372  017B4A  24E1               	addwf	fsr1l,w,c
 38373  017B4C  6ED9               	movwf	fsr2l,c
 38374  017B4E  0EFF               	movlw	255
 38375  017B50  20E2               	addwfc	fsr1h,w,c
 38376  017B52  6EDA               	movwf	fsr2h,c
 38377  017B54  0E80               	movlw	128
 38378  017B56  12DE               	iorwf	postinc2,f,c
 38379  017B58  0E7F               	movlw	127
 38380  017B5A  12DD               	iorwf	postdec2,f,c
 38381  017B5C                     l10243:
 38382                           
 38383                           ;stkvar	_sign @ sp[(-13)+12]
 38384  017B5C  0EFF               	movlw	-1
 38385  017B5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 38386                           
 38387                           ;stkvar	_b @ sp[(-13)+-4]
 38388  017B64  0EF2               	movlw	242
 38389  017B66  24E1               	addwf	fsr1l,w,c
 38390  017B68  6ED9               	movwf	fsr2l,c
 38391  017B6A  0EFF               	movlw	255
 38392  017B6C  20E2               	addwfc	fsr1h,w,c
 38393  017B6E  6EDA               	movwf	fsr2h,c
 38394  017B70  500C               	movf	(btemp+11)^0,w,c
 38395  017B72  12DF               	iorwf	indf2,f,c
 38396                           
 38397                           ;stkvar	_b @ sp[(-13)+-4]
 38398  017B74  0EEF               	movlw	-17
 38399  017B76  006F FF8C  F001    	movff	plusw1,btemp
 38400  017B7C  0EF0               	movlw	-16
 38401  017B7E  006F FF8C  F002    	movff	plusw1,btemp+1
 38402  017B84  0EF1               	movlw	-15
 38403  017B86  006F FF8C  F003    	movff	plusw1,btemp+2
 38404  017B8C  0EF2               	movlw	-14
 38405  017B8E  006F FF8C  F004    	movff	plusw1,btemp+3
 38406  017B94  D19F               	goto	l3279
 38407  017B96                     l10249:
 38408                           
 38409                           ;stkvar	_bexp @ sp[(-13)+11]
 38410  017B96  0EFE               	movlw	-2
 38411  017B98  50E3               	movf	plusw1,w,c
 38412  017B9A  A4D8               	btfss	status,2,c
 38413  017B9C  D009               	goto	l10257
 38414  017B9E  0E00               	movlw	0
 38415  017BA0  6E01               	movwf	btemp^0,c
 38416  017BA2  0E00               	movlw	0
 38417  017BA4  6E02               	movwf	(btemp+1)^0,c
 38418  017BA6  0E00               	movlw	0
 38419  017BA8  6E03               	movwf	(btemp+2)^0,c
 38420  017BAA  0E00               	movlw	0
 38421  017BAC  6E04               	movwf	(btemp+3)^0,c
 38422  017BAE  D192               	goto	l3279
 38423  017BB0                     l10257:
 38424                           
 38425                           ;stkvar	_bexp @ sp[(-13)+11]
 38426  017BB0  0EFE               	movlw	-2
 38427  017BB2  50E3               	movf	plusw1,w,c
 38428  017BB4  6E0B               	movwf	(btemp+10)^0,c
 38429  017BB6  6A0C               	clrf	(btemp+11)^0,c
 38430                           
 38431                           ;stkvar	_aexp @ sp[(-13)+10]
 38432  017BB8  0EFD               	movlw	-3
 38433  017BBA  50E3               	movf	plusw1,w,c
 38434  017BBC  5E0B               	subwf	(btemp+10)^0,f,c
 38435  017BBE  0E00               	movlw	0
 38436  017BC0  5A0C               	subwfb	(btemp+11)^0,f,c
 38437  017BC2  0E7F               	movlw	127
 38438  017BC4  260B               	addwf	(btemp+10)^0,f,c
 38439  017BC6  0E00               	movlw	0
 38440  017BC8  220C               	addwfc	(btemp+11)^0,f,c
 38441                           
 38442                           ;stkvar	_new_exp @ sp[(-13)+8]
 38443  017BCA  0EFB               	movlw	-5
 38444  017BCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38445  017BD2  0EFC               	movlw	-4
 38446  017BD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 38447                           
 38448                           ;stkvar	_b @ sp[(-13)+-4]
 38449  017BDA  0EEF               	movlw	-17
 38450  017BDC  006F FF8C  F009    	movff	plusw1,btemp+8
 38451  017BE2  0EF0               	movlw	-16
 38452  017BE4  006F FF8C  F00A    	movff	plusw1,btemp+9
 38453  017BEA  0EF1               	movlw	-15
 38454  017BEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 38455  017BF2  0EF2               	movlw	-14
 38456  017BF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 38457                           
 38458                           ;stkvar	_rem @ sp[(-13)+4]
 38459  017BFA  0EF7               	movlw	-9
 38460  017BFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 38461  017C02  0EF8               	movlw	-8
 38462  017C04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38463  017C0A  0EF9               	movlw	-7
 38464  017C0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38465  017C12  0EFA               	movlw	-6
 38466  017C14  0060  F033  FFE3   	movff	btemp+11,plusw1
 38467                           
 38468                           ;stkvar	_b @ sp[(-13)+-4]
 38469  017C1A  0EEF               	movlw	-17
 38470  017C1C  6AE3               	clrf	plusw1,c
 38471  017C1E  0EF0               	movlw	-16
 38472  017C20  6AE3               	clrf	plusw1,c
 38473  017C22  0EF1               	movlw	-15
 38474  017C24  6AE3               	clrf	plusw1,c
 38475  017C26  0EF2               	movlw	-14
 38476  017C28  6AE3               	clrf	plusw1,c
 38477                           
 38478                           ;stkvar	_grs @ sp[(-13)+0]
 38479  017C2A  0EF3               	movlw	-13
 38480  017C2C  6AE3               	clrf	plusw1,c
 38481  017C2E  0EF4               	movlw	-12
 38482  017C30  6AE3               	clrf	plusw1,c
 38483  017C32  0EF5               	movlw	-11
 38484  017C34  6AE3               	clrf	plusw1,c
 38485  017C36  0EF6               	movlw	-10
 38486  017C38  6AE3               	clrf	plusw1,c
 38487                           
 38488                           ;stkvar	_aexp @ sp[(-13)+10]
 38489  017C3A  0EFD               	movlw	-3
 38490  017C3C  6AE3               	clrf	plusw1,c
 38491  017C3E  D050               	goto	l10285
 38492  017C40                     l10267:
 38493                           
 38494                           ;stkvar	_aexp @ sp[(-13)+10]
 38495  017C40  0EFD               	movlw	-3
 38496  017C42  50E3               	movf	plusw1,w,c
 38497  017C44  B4D8               	btfsc	status,2,c
 38498  017C46  D020               	goto	l10277
 38499                           
 38500                           ;stkvar	_rem @ sp[(-13)+4]
 38501  017C48  90D8               	bcf	status,0,c
 38502  017C4A  0EF7               	movlw	-9
 38503  017C4C  36E3               	rlcf	plusw1,f,c
 38504  017C4E  0EF8               	movlw	-8
 38505  017C50  36E3               	rlcf	plusw1,f,c
 38506  017C52  0EF9               	movlw	-7
 38507  017C54  36E3               	rlcf	plusw1,f,c
 38508  017C56  0EFA               	movlw	-6
 38509  017C58  36E3               	rlcf	plusw1,f,c
 38510                           
 38511                           ;stkvar	_b @ sp[(-13)+-4]
 38512  017C5A  90D8               	bcf	status,0,c
 38513  017C5C  0EEF               	movlw	-17
 38514  017C5E  36E3               	rlcf	plusw1,f,c
 38515  017C60  0EF0               	movlw	-16
 38516  017C62  36E3               	rlcf	plusw1,f,c
 38517  017C64  0EF1               	movlw	-15
 38518  017C66  36E3               	rlcf	plusw1,f,c
 38519  017C68  0EF2               	movlw	-14
 38520  017C6A  36E3               	rlcf	plusw1,f,c
 38521                           
 38522                           ;stkvar	_grs @ sp[(-13)+0]
 38523  017C6C  0EF6               	movlw	-10
 38524  017C6E  AEE3               	btfss	plusw1,7,c
 38525  017C70  D002               	goto	l10275
 38526                           
 38527                           ;stkvar	_b @ sp[(-13)+-4]
 38528  017C72  0EEF               	movlw	-17
 38529  017C74  80E3               	bsf	plusw1,0,c
 38530  017C76                     l10275:
 38531                           
 38532                           ;stkvar	_grs @ sp[(-13)+0]
 38533  017C76  90D8               	bcf	status,0,c
 38534  017C78  0EF3               	movlw	-13
 38535  017C7A  36E3               	rlcf	plusw1,f,c
 38536  017C7C  0EF4               	movlw	-12
 38537  017C7E  36E3               	rlcf	plusw1,f,c
 38538  017C80  0EF5               	movlw	-11
 38539  017C82  36E3               	rlcf	plusw1,f,c
 38540  017C84  0EF6               	movlw	-10
 38541  017C86  36E3               	rlcf	plusw1,f,c
 38542  017C88                     l10277:
 38543                           
 38544                           ;stkvar	_a @ sp[(-13)+-8]
 38545                           ;stkvar	_rem @ sp[(-13)+4]
 38546  017C88  50E1               	movf	fsr1l,w,c
 38547  017C8A  0FF7               	addlw	-9
 38548  017C8C  6ED9               	movwf	fsr2l,c
 38549  017C8E  50E2               	movf	fsr1h,w,c
 38550  017C90  6EDA               	movwf	fsr2h,c
 38551  017C92  0EFF               	movlw	255
 38552  017C94  22DA               	addwfc	fsr2h,f,c
 38553  017C96  0EEB               	movlw	-21
 38554  017C98  50E3               	movf	plusw1,w,c
 38555  017C9A  5CDE               	subwf	postinc2,w,c
 38556  017C9C  0EEC               	movlw	-20
 38557  017C9E  50E3               	movf	plusw1,w,c
 38558  017CA0  58DE               	subwfb	postinc2,w,c
 38559  017CA2  0EED               	movlw	-19
 38560  017CA4  50E3               	movf	plusw1,w,c
 38561  017CA6  58DE               	subwfb	postinc2,w,c
 38562  017CA8  0EEE               	movlw	-18
 38563  017CAA  50E3               	movf	plusw1,w,c
 38564  017CAC  58DE               	subwfb	postinc2,w,c
 38565  017CAE  A0D8               	btfss	status,0,c
 38566  017CB0  D015               	goto	l10283
 38567                           
 38568                           ;stkvar	_grs @ sp[(-13)+0]
 38569  017CB2  0EF6               	movlw	-10
 38570  017CB4  8CE3               	bsf	plusw1,6,c
 38571                           
 38572                           ;stkvar	_a @ sp[(-13)+-8]
 38573                           ;stkvar	_rem @ sp[(-13)+4]
 38574  017CB6  50E1               	movf	fsr1l,w,c
 38575  017CB8  0FF7               	addlw	-9
 38576  017CBA  6ED9               	movwf	fsr2l,c
 38577  017CBC  50E2               	movf	fsr1h,w,c
 38578  017CBE  6EDA               	movwf	fsr2h,c
 38579  017CC0  0EFF               	movlw	255
 38580  017CC2  22DA               	addwfc	fsr2h,f,c
 38581  017CC4  0EEB               	movlw	-21
 38582  017CC6  50E3               	movf	plusw1,w,c
 38583  017CC8  5EDE               	subwf	postinc2,f,c
 38584  017CCA  0EEC               	movlw	-20
 38585  017CCC  50E3               	movf	plusw1,w,c
 38586  017CCE  5ADE               	subwfb	postinc2,f,c
 38587  017CD0  0EED               	movlw	-19
 38588  017CD2  50E3               	movf	plusw1,w,c
 38589  017CD4  5ADE               	subwfb	postinc2,f,c
 38590  017CD6  0EEE               	movlw	-18
 38591  017CD8  50E3               	movf	plusw1,w,c
 38592  017CDA  5ADE               	subwfb	postinc2,f,c
 38593  017CDC                     l10283:
 38594                           
 38595                           ;stkvar	_aexp @ sp[(-13)+10]
 38596  017CDC  0EFD               	movlw	-3
 38597  017CDE  2AE3               	incf	plusw1,f,c
 38598  017CE0                     l10285:
 38599                           
 38600                           ;stkvar	_aexp @ sp[(-13)+10]
 38601  017CE0  0EFD               	movlw	-3
 38602  017CE2  006F FF8C  F001    	movff	plusw1,btemp
 38603  017CE8  0E19               	movlw	25
 38604  017CEA  6401               	cpfsgt	btemp^0,c
 38605  017CEC  D7A9               	goto	l10267
 38606                           
 38607                           ;stkvar	_rem @ sp[(-13)+4]
 38608  017CEE  0EF7               	movlw	-9
 38609  017CF0  50E3               	movf	plusw1,w,c
 38610  017CF2  E10A               	bnz	u8380
 38611  017CF4  0EF8               	movlw	-8
 38612  017CF6  50E3               	movf	plusw1,w,c
 38613  017CF8  E107               	bnz	u8380
 38614  017CFA  0EF9               	movlw	-7
 38615  017CFC  50E3               	movf	plusw1,w,c
 38616  017CFE  E104               	bnz	u8380
 38617  017D00  0EFA               	movlw	-6
 38618  017D02  50E3               	movf	plusw1,w,c
 38619  017D04  B4D8               	btfsc	status,2,c
 38620  017D06  D024               	goto	l10301
 38621  017D08                     u8380:
 38622                           
 38623                           ;stkvar	_grs @ sp[(-13)+0]
 38624  017D08  0EF3               	movlw	-13
 38625  017D0A  80E3               	bsf	plusw1,0,c
 38626  017D0C  D021               	goto	l10301
 38627  017D0E                     l10291:
 38628                           
 38629                           ;stkvar	_b @ sp[(-13)+-4]
 38630  017D0E  90D8               	bcf	status,0,c
 38631  017D10  0EEF               	movlw	-17
 38632  017D12  36E3               	rlcf	plusw1,f,c
 38633  017D14  0EF0               	movlw	-16
 38634  017D16  36E3               	rlcf	plusw1,f,c
 38635  017D18  0EF1               	movlw	-15
 38636  017D1A  36E3               	rlcf	plusw1,f,c
 38637  017D1C  0EF2               	movlw	-14
 38638  017D1E  36E3               	rlcf	plusw1,f,c
 38639                           
 38640                           ;stkvar	_grs @ sp[(-13)+0]
 38641  017D20  0EF6               	movlw	-10
 38642  017D22  AEE3               	btfss	plusw1,7,c
 38643  017D24  D002               	goto	l10297
 38644                           
 38645                           ;stkvar	_b @ sp[(-13)+-4]
 38646  017D26  0EEF               	movlw	-17
 38647  017D28  80E3               	bsf	plusw1,0,c
 38648  017D2A                     l10297:
 38649                           
 38650                           ;stkvar	_grs @ sp[(-13)+0]
 38651  017D2A  90D8               	bcf	status,0,c
 38652  017D2C  0EF3               	movlw	-13
 38653  017D2E  36E3               	rlcf	plusw1,f,c
 38654  017D30  0EF4               	movlw	-12
 38655  017D32  36E3               	rlcf	plusw1,f,c
 38656  017D34  0EF5               	movlw	-11
 38657  017D36  36E3               	rlcf	plusw1,f,c
 38658  017D38  0EF6               	movlw	-10
 38659  017D3A  36E3               	rlcf	plusw1,f,c
 38660                           
 38661                           ;stkvar	_new_exp @ sp[(-13)+8]
 38662  017D3C  50E1               	movf	fsr1l,w,c
 38663  017D3E  0FFB               	addlw	-5
 38664  017D40  6ED9               	movwf	fsr2l,c
 38665  017D42  50E2               	movf	fsr1h,w,c
 38666  017D44  6EDA               	movwf	fsr2h,c
 38667  017D46  0EFF               	movlw	255
 38668  017D48  22DA               	addwfc	fsr2h,f,c
 38669  017D4A  06DE               	decf	postinc2,f,c
 38670  017D4C  0E00               	movlw	0
 38671  017D4E  5ADD               	subwfb	postdec2,f,c
 38672  017D50                     l10301:
 38673                           
 38674                           ;stkvar	_b @ sp[(-13)+-4]
 38675  017D50  0EF1               	movlw	-15
 38676  017D52  AEE3               	btfss	plusw1,7,c
 38677  017D54  D7DC               	goto	l10291
 38678                           
 38679                           ;stkvar	_aexp @ sp[(-13)+10]
 38680  017D56  0EFD               	movlw	-3
 38681  017D58  6AE3               	clrf	plusw1,c
 38682                           
 38683                           ;stkvar	_grs @ sp[(-13)+0]
 38684  017D5A  0EF6               	movlw	-10
 38685  017D5C  AEE3               	btfss	plusw1,7,c
 38686  017D5E  D020               	goto	l10315
 38687                           
 38688                           ;stkvar	_grs @ sp[(-13)+0]
 38689  017D60  50E1               	movf	fsr1l,w,c
 38690  017D62  0FF3               	addlw	-13
 38691  017D64  6ED9               	movwf	fsr2l,c
 38692  017D66  50E2               	movf	fsr1h,w,c
 38693  017D68  6EDA               	movwf	fsr2h,c
 38694  017D6A  0EFF               	movlw	255
 38695  017D6C  22DA               	addwfc	fsr2h,f,c
 38696  017D6E  0EFF               	movlw	255
 38697  017D70  14DE               	andwf	postinc2,w,c
 38698  017D72  6E09               	movwf	(btemp+8)^0,c
 38699  017D74  0EFF               	movlw	255
 38700  017D76  14DE               	andwf	postinc2,w,c
 38701  017D78  6E0A               	movwf	(btemp+9)^0,c
 38702  017D7A  0EFF               	movlw	255
 38703  017D7C  14DE               	andwf	postinc2,w,c
 38704  017D7E  6E0B               	movwf	(btemp+10)^0,c
 38705  017D80  0E7F               	movlw	127
 38706  017D82  14DE               	andwf	postinc2,w,c
 38707  017D84  6E0C               	movwf	(btemp+11)^0,c
 38708  017D86  5009               	movf	(btemp+8)^0,w,c
 38709  017D88  100A               	iorwf	(btemp+9)^0,w,c
 38710  017D8A  100B               	iorwf	(btemp+10)^0,w,c
 38711  017D8C  100C               	iorwf	(btemp+11)^0,w,c
 38712  017D8E  B4D8               	btfsc	status,2,c
 38713  017D90  D004               	goto	l10311
 38714  017D92                     u8420:
 38715                           
 38716                           ;stkvar	_aexp @ sp[(-13)+10]
 38717  017D92  0EFD               	movlw	-3
 38718  017D94  6AE3               	clrf	plusw1,c
 38719  017D96  2AE3               	incf	plusw1,f,c
 38720  017D98  D003               	goto	l10315
 38721  017D9A                     l10311:
 38722                           
 38723                           ;stkvar	_b @ sp[(-13)+-4]
 38724  017D9A  0EEF               	movlw	-17
 38725  017D9C  B0E3               	btfsc	plusw1,0,c
 38726  017D9E  D7F9               	goto	u8420
 38727  017DA0                     l10315:
 38728                           
 38729                           ;stkvar	_aexp @ sp[(-13)+10]
 38730  017DA0  0EFD               	movlw	-3
 38731  017DA2  50E3               	movf	plusw1,w,c
 38732  017DA4  B4D8               	btfsc	status,2,c
 38733  017DA6  D036               	goto	l10325
 38734                           
 38735                           ;stkvar	_b @ sp[(-13)+-4]
 38736  017DA8  50E1               	movf	fsr1l,w,c
 38737  017DAA  0FEF               	addlw	-17
 38738  017DAC  6ED9               	movwf	fsr2l,c
 38739  017DAE  50E2               	movf	fsr1h,w,c
 38740  017DB0  6EDA               	movwf	fsr2h,c
 38741  017DB2  0EFF               	movlw	255
 38742  017DB4  22DA               	addwfc	fsr2h,f,c
 38743  017DB6  2ADE               	incf	postinc2,f,c
 38744  017DB8  0E00               	movlw	0
 38745  017DBA  22DE               	addwfc	postinc2,f,c
 38746  017DBC  22DE               	addwfc	postinc2,f,c
 38747  017DBE  22DE               	addwfc	postinc2,f,c
 38748                           
 38749                           ;stkvar	_b @ sp[(-13)+-4]
 38750  017DC0  0EF2               	movlw	-14
 38751  017DC2  A0E3               	btfss	plusw1,0,c
 38752  017DC4  D027               	goto	l10325
 38753  017DC6  0E01               	movlw	1
 38754  017DC8  6E0C               	movwf	(btemp+11)^0,c
 38755                           
 38756                           ;stkvar	_b @ sp[(-13)+-4]
 38757  017DCA  50E1               	movf	fsr1l,w,c
 38758  017DCC  0FEF               	addlw	-17
 38759  017DCE  6ED9               	movwf	fsr2l,c
 38760  017DD0  50E2               	movf	fsr1h,w,c
 38761  017DD2  6EDA               	movwf	fsr2h,c
 38762  017DD4  0EFF               	movlw	255
 38763  017DD6  22DA               	addwfc	fsr2h,f,c
 38764  017DD8  280C               	incf	(btemp+11)^0,w,c
 38765  017DDA  52DE               	movf	postinc2,f,c
 38766  017DDC  D008               	goto	u8460
 38767  017DDE                     u8465:
 38768  017DDE  52DE               	movf	postinc2,f,c
 38769  017DE0  90D8               	bcf	status,0,c
 38770  017DE2  BEDC               	btfsc	preinc2,7,c
 38771  017DE4  80D8               	bsf	status,0,c
 38772  017DE6  32DD               	rrcf	postdec2,f,c
 38773  017DE8  32DD               	rrcf	postdec2,f,c
 38774  017DEA  32DD               	rrcf	postdec2,f,c
 38775  017DEC  32DE               	rrcf	postinc2,f,c
 38776  017DEE                     u8460:
 38777  017DEE  2EE8               	decfsz	wreg,f,c
 38778  017DF0  D7F6               	goto	u8465
 38779                           
 38780                           ;stkvar	_new_exp @ sp[(-13)+8]
 38781  017DF2  0EFB               	movlw	-5
 38782  017DF4  50E3               	movf	plusw1,w,c
 38783  017DF6  0F01               	addlw	1
 38784  017DF8  6E01               	movwf	btemp^0,c
 38785  017DFA  0EFB               	movlw	-5
 38786  017DFC  0060  F007  FFE3   	movff	btemp,plusw1
 38787  017E02  6A01               	clrf	btemp^0,c
 38788  017E04  0EFC               	movlw	-4
 38789  017E06  50E3               	movf	plusw1,w,c
 38790  017E08  2001               	addwfc	btemp^0,w,c
 38791  017E0A  6E01               	movwf	btemp^0,c
 38792  017E0C  0EFC               	movlw	-4
 38793  017E0E  0060  F007  FFE3   	movff	btemp,plusw1
 38794  017E14                     l10325:
 38795                           
 38796                           ;stkvar	_new_exp @ sp[(-13)+8]
 38797  017E14  0EFC               	movlw	-4
 38798  017E16  BEE3               	btfsc	plusw1,7,c
 38799  017E18  D01B               	goto	l10331
 38800  017E1A  0EFC               	movlw	-4
 38801  017E1C  50E3               	movf	plusw1,w,c
 38802  017E1E  E104               	bnz	u8470
 38803  017E20  0EFB               	movlw	-5
 38804  017E22  28E3               	incf	plusw1,w,c
 38805  017E24  A0D8               	btfss	status,0,c
 38806  017E26  D014               	goto	l10331
 38807  017E28                     u8470:
 38808  017E28  0EFF               	movlw	255
 38809  017E2A  6E0B               	movwf	(btemp+10)^0,c
 38810  017E2C  0E00               	movlw	0
 38811  017E2E  6E0C               	movwf	(btemp+11)^0,c
 38812                           
 38813                           ;stkvar	_new_exp @ sp[(-13)+8]
 38814  017E30  0EFB               	movlw	-5
 38815  017E32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38816  017E38  0EFC               	movlw	-4
 38817  017E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 38818                           
 38819                           ;stkvar	_b @ sp[(-13)+-4]
 38820  017E40  0EEF               	movlw	-17
 38821  017E42  6AE3               	clrf	plusw1,c
 38822  017E44  0EF0               	movlw	-16
 38823  017E46  6AE3               	clrf	plusw1,c
 38824  017E48  0EF1               	movlw	-15
 38825  017E4A  6AE3               	clrf	plusw1,c
 38826  017E4C  0EF2               	movlw	-14
 38827  017E4E  6AE3               	clrf	plusw1,c
 38828  017E50                     l10331:
 38829                           
 38830                           ;stkvar	_new_exp @ sp[(-13)+8]
 38831  017E50  0EFC               	movlw	-4
 38832  017E52  BEE3               	btfsc	plusw1,7,c
 38833  017E54  D007               	goto	u8480
 38834  017E56  0EFC               	movlw	-4
 38835  017E58  50E3               	movf	plusw1,w,c
 38836  017E5A  E112               	bnz	l10337
 38837  017E5C  0EFB               	movlw	-5
 38838  017E5E  04E3               	decf	plusw1,w,c
 38839  017E60  B0D8               	btfsc	status,0,c
 38840  017E62  D00E               	goto	l10337
 38841  017E64                     u8480:
 38842                           
 38843                           ;stkvar	_new_exp @ sp[(-13)+8]
 38844  017E64  0EFB               	movlw	-5
 38845  017E66  6AE3               	clrf	plusw1,c
 38846  017E68  0EFC               	movlw	-4
 38847  017E6A  6AE3               	clrf	plusw1,c
 38848                           
 38849                           ;stkvar	_b @ sp[(-13)+-4]
 38850  017E6C  0EEF               	movlw	-17
 38851  017E6E  6AE3               	clrf	plusw1,c
 38852  017E70  0EF0               	movlw	-16
 38853  017E72  6AE3               	clrf	plusw1,c
 38854  017E74  0EF1               	movlw	-15
 38855  017E76  6AE3               	clrf	plusw1,c
 38856  017E78  0EF2               	movlw	-14
 38857  017E7A  6AE3               	clrf	plusw1,c
 38858                           
 38859                           ;stkvar	_sign @ sp[(-13)+12]
 38860  017E7C  0EFF               	movlw	-1
 38861  017E7E  6AE3               	clrf	plusw1,c
 38862  017E80                     l10337:
 38863                           
 38864                           ;stkvar	_new_exp @ sp[(-13)+8]
 38865                           ;stkvar	_bexp @ sp[(-13)+11]
 38866  017E80  0EFB               	movlw	-5
 38867  017E82  006F FF8C  F001    	movff	plusw1,btemp
 38868  017E88  0EFE               	movlw	-2
 38869  017E8A  0060  F007  FFE3   	movff	btemp,plusw1
 38870                           
 38871                           ;stkvar	_bexp @ sp[(-13)+11]
 38872  017E90  0EFE               	movlw	-2
 38873  017E92  A0E3               	btfss	plusw1,0,c
 38874  017E94  D009               	goto	l10343
 38875                           
 38876                           ;stkvar	_b @ sp[(-13)+-4]
 38877  017E96  0EF1               	movlw	241
 38878  017E98  24E1               	addwf	fsr1l,w,c
 38879  017E9A  6ED9               	movwf	fsr2l,c
 38880  017E9C  0EFF               	movlw	255
 38881  017E9E  20E2               	addwfc	fsr1h,w,c
 38882  017EA0  6EDA               	movwf	fsr2h,c
 38883  017EA2  0E00               	movlw	0
 38884  017EA4  8EDB               	bsf	plusw2,7,c
 38885  017EA6  D008               	goto	l10345
 38886  017EA8                     l10343:
 38887                           
 38888                           ;stkvar	_b @ sp[(-13)+-4]
 38889  017EA8  0EF1               	movlw	241
 38890  017EAA  24E1               	addwf	fsr1l,w,c
 38891  017EAC  6ED9               	movwf	fsr2l,c
 38892  017EAE  0EFF               	movlw	255
 38893  017EB0  20E2               	addwfc	fsr1h,w,c
 38894  017EB2  6EDA               	movwf	fsr2h,c
 38895  017EB4  0E7F               	movlw	127
 38896  017EB6  16DF               	andwf	indf2,f,c
 38897  017EB8                     l10345:
 38898                           
 38899                           ;stkvar	_b @ sp[(-13)+-4]
 38900  017EB8  0EF2               	movlw	242
 38901  017EBA  24E1               	addwf	fsr1l,w,c
 38902  017EBC  6ED9               	movwf	fsr2l,c
 38903  017EBE  0EFF               	movlw	255
 38904  017EC0  20E2               	addwfc	fsr1h,w,c
 38905  017EC2  6EDA               	movwf	fsr2h,c
 38906                           
 38907                           ;stkvar	_bexp @ sp[(-13)+11]
 38908  017EC4  0EFE               	movlw	-2
 38909  017EC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 38910  017ECC  90D8               	bcf	status,0,c
 38911  017ECE  300C               	rrcf	(btemp+11)^0,w,c
 38912  017ED0  6EDF               	movwf	indf2,c
 38913  017ED2  D644               	goto	l10243
 38914  017ED4                     l3279:
 38915                           
 38916                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 38917  017ED4  0EEB               	movlw	235
 38918  017ED6  26E1               	addwf	fsr1l,f,c
 38919  017ED8  0EFF               	movlw	255
 38920  017EDA  22E2               	addwfc	fsr1h,f,c
 38921  017EDC  0012               	return		;funcret
 38922  017EDE                     __end_of___fldiv:
 38923                           	opt callstack 0
 38924                           
 38925 ;; *************** function ___flge *****************
 38926 ;; Defined at:
 38927 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 38928 ;; Parameters:    Size  Location     Type
 38929 ;;  ff1             4  [STACK] unsigned char 
 38930 ;;  ff2             4  [STACK] unsigned char 
 38931 ;; Auto vars:     Size  Location     Type
 38932 ;;		None
 38933 ;; Return value:  Size  Location     Type
 38934 ;;		None               void
 38935 ;; Registers used:
 38936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 38937 ;; Tracked objects:
 38938 ;;		On entry : 0/2
 38939 ;;		On exit  : 0/0
 38940 ;;		Unchanged: 0/0
 38941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38946 ;;Total ram usage:        0 bytes
 38947 ;; Hardware stack levels used:    1
 38948 ;; Hardware stack levels required when called:   15
 38949 ;; This function calls:
 38950 ;;		Nothing
 38951 ;; This function is called by:
 38952 ;;		_main
 38953 ;;		_convert_dac_raw
 38954 ;;		_calc_ror_data
 38955 ;;		_check_day_time
 38956 ;;		_calc_bsoc
 38957 ;;		_efgtoa
 38958 ;; This function uses a reentrant model
 38959 ;;
 38960                           
 38961                           	psect	text144
 38962  01DC46                     __ptext144:
 38963                           	opt callstack 0
 38964  01DC46                     ___flge:
 38965                           	opt callstack 0
 38966                           
 38967                           ;stkvar	_ff1 @ sp[(0)+-4]
 38968                           
 38969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38970                           ;incstack = 0
 38971 ;; hardware stack exceeded
 38972  01DC46  50E1               	movf	fsr1l,w,c
 38973  01DC48  0FFC               	addlw	-4
 38974  01DC4A  6ED9               	movwf	fsr2l,c
 38975  01DC4C  50E2               	movf	fsr1h,w,c
 38976  01DC4E  6EDA               	movwf	fsr2h,c
 38977  01DC50  0EFF               	movlw	255
 38978  01DC52  22DA               	addwfc	fsr2h,f,c
 38979  01DC54  0E00               	movlw	0
 38980  01DC56  14DE               	andwf	postinc2,w,c
 38981  01DC58  6E09               	movwf	(btemp+8)^0,c
 38982  01DC5A  0E00               	movlw	0
 38983  01DC5C  14DE               	andwf	postinc2,w,c
 38984  01DC5E  6E0A               	movwf	(btemp+9)^0,c
 38985  01DC60  0E80               	movlw	128
 38986  01DC62  14DE               	andwf	postinc2,w,c
 38987  01DC64  6E0B               	movwf	(btemp+10)^0,c
 38988  01DC66  0E7F               	movlw	127
 38989  01DC68  14DE               	andwf	postinc2,w,c
 38990  01DC6A  6E0C               	movwf	(btemp+11)^0,c
 38991  01DC6C  5009               	movf	(btemp+8)^0,w,c
 38992  01DC6E  100A               	iorwf	(btemp+9)^0,w,c
 38993  01DC70  100B               	iorwf	(btemp+10)^0,w,c
 38994  01DC72  100C               	iorwf	(btemp+11)^0,w,c
 38995  01DC74  A4D8               	btfss	status,2,c
 38996  01DC76  D008               	goto	l10619
 38997                           
 38998                           ;stkvar	_ff1 @ sp[(0)+-4]
 38999  01DC78  0EFC               	movlw	-4
 39000  01DC7A  6AE3               	clrf	plusw1,c
 39001  01DC7C  0EFD               	movlw	-3
 39002  01DC7E  6AE3               	clrf	plusw1,c
 39003  01DC80  0EFE               	movlw	-2
 39004  01DC82  6AE3               	clrf	plusw1,c
 39005  01DC84  0EFF               	movlw	-1
 39006  01DC86  6AE3               	clrf	plusw1,c
 39007  01DC88                     l10619:
 39008                           
 39009                           ;stkvar	_ff2 @ sp[(0)+-8]
 39010  01DC88  50E1               	movf	fsr1l,w,c
 39011  01DC8A  0FF8               	addlw	-8
 39012  01DC8C  6ED9               	movwf	fsr2l,c
 39013  01DC8E  50E2               	movf	fsr1h,w,c
 39014  01DC90  6EDA               	movwf	fsr2h,c
 39015  01DC92  0EFF               	movlw	255
 39016  01DC94  22DA               	addwfc	fsr2h,f,c
 39017  01DC96  0E00               	movlw	0
 39018  01DC98  14DE               	andwf	postinc2,w,c
 39019  01DC9A  6E09               	movwf	(btemp+8)^0,c
 39020  01DC9C  0E00               	movlw	0
 39021  01DC9E  14DE               	andwf	postinc2,w,c
 39022  01DCA0  6E0A               	movwf	(btemp+9)^0,c
 39023  01DCA2  0E80               	movlw	128
 39024  01DCA4  14DE               	andwf	postinc2,w,c
 39025  01DCA6  6E0B               	movwf	(btemp+10)^0,c
 39026  01DCA8  0E7F               	movlw	127
 39027  01DCAA  14DE               	andwf	postinc2,w,c
 39028  01DCAC  6E0C               	movwf	(btemp+11)^0,c
 39029  01DCAE  5009               	movf	(btemp+8)^0,w,c
 39030  01DCB0  100A               	iorwf	(btemp+9)^0,w,c
 39031  01DCB2  100B               	iorwf	(btemp+10)^0,w,c
 39032  01DCB4  100C               	iorwf	(btemp+11)^0,w,c
 39033  01DCB6  A4D8               	btfss	status,2,c
 39034  01DCB8  D008               	goto	l2960
 39035                           
 39036                           ;stkvar	_ff2 @ sp[(0)+-8]
 39037  01DCBA  0EF8               	movlw	-8
 39038  01DCBC  6AE3               	clrf	plusw1,c
 39039  01DCBE  0EF9               	movlw	-7
 39040  01DCC0  6AE3               	clrf	plusw1,c
 39041  01DCC2  0EFA               	movlw	-6
 39042  01DCC4  6AE3               	clrf	plusw1,c
 39043  01DCC6  0EFB               	movlw	-5
 39044  01DCC8  6AE3               	clrf	plusw1,c
 39045  01DCCA                     l2960:
 39046                           
 39047                           ;stkvar	_ff1 @ sp[(0)+-4]
 39048  01DCCA  0EFF               	movlw	-1
 39049  01DCCC  AEE3               	btfss	plusw1,7,c
 39050  01DCCE  D024               	goto	l10625
 39051                           
 39052                           ;stkvar	_ff1 @ sp[(0)+-4]
 39053  01DCD0  0E00               	movlw	0
 39054  01DCD2  6E09               	movwf	(btemp+8)^0,c
 39055  01DCD4  0E00               	movlw	0
 39056  01DCD6  6E0A               	movwf	(btemp+9)^0,c
 39057  01DCD8  0E00               	movlw	0
 39058  01DCDA  6E0B               	movwf	(btemp+10)^0,c
 39059  01DCDC  0E80               	movlw	128
 39060  01DCDE  6E0C               	movwf	(btemp+11)^0,c
 39061  01DCE0  0EFC               	movlw	-4
 39062  01DCE2  50E3               	movf	plusw1,w,c
 39063  01DCE4  5E09               	subwf	(btemp+8)^0,f,c
 39064  01DCE6  0EFD               	movlw	-3
 39065  01DCE8  50E3               	movf	plusw1,w,c
 39066  01DCEA  5A0A               	subwfb	(btemp+9)^0,f,c
 39067  01DCEC  0EFE               	movlw	-2
 39068  01DCEE  50E3               	movf	plusw1,w,c
 39069  01DCF0  5A0B               	subwfb	(btemp+10)^0,f,c
 39070  01DCF2  0EFF               	movlw	-1
 39071  01DCF4  50E3               	movf	plusw1,w,c
 39072  01DCF6  5A0C               	subwfb	(btemp+11)^0,f,c
 39073                           
 39074                           ;stkvar	_ff1 @ sp[(0)+-4]
 39075  01DCF8  0EFC               	movlw	-4
 39076  01DCFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 39077  01DD00  0EFD               	movlw	-3
 39078  01DD02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 39079  01DD08  0EFE               	movlw	-2
 39080  01DD0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39081  01DD10  0EFF               	movlw	-1
 39082  01DD12  0060  F033  FFE3   	movff	btemp+11,plusw1
 39083  01DD18                     l10625:
 39084                           
 39085                           ;stkvar	_ff2 @ sp[(0)+-8]
 39086  01DD18  0EFB               	movlw	-5
 39087  01DD1A  AEE3               	btfss	plusw1,7,c
 39088  01DD1C  D024               	goto	l10629
 39089                           
 39090                           ;stkvar	_ff2 @ sp[(0)+-8]
 39091  01DD1E  0E00               	movlw	0
 39092  01DD20  6E09               	movwf	(btemp+8)^0,c
 39093  01DD22  0E00               	movlw	0
 39094  01DD24  6E0A               	movwf	(btemp+9)^0,c
 39095  01DD26  0E00               	movlw	0
 39096  01DD28  6E0B               	movwf	(btemp+10)^0,c
 39097  01DD2A  0E80               	movlw	128
 39098  01DD2C  6E0C               	movwf	(btemp+11)^0,c
 39099  01DD2E  0EF8               	movlw	-8
 39100  01DD30  50E3               	movf	plusw1,w,c
 39101  01DD32  5E09               	subwf	(btemp+8)^0,f,c
 39102  01DD34  0EF9               	movlw	-7
 39103  01DD36  50E3               	movf	plusw1,w,c
 39104  01DD38  5A0A               	subwfb	(btemp+9)^0,f,c
 39105  01DD3A  0EFA               	movlw	-6
 39106  01DD3C  50E3               	movf	plusw1,w,c
 39107  01DD3E  5A0B               	subwfb	(btemp+10)^0,f,c
 39108  01DD40  0EFB               	movlw	-5
 39109  01DD42  50E3               	movf	plusw1,w,c
 39110  01DD44  5A0C               	subwfb	(btemp+11)^0,f,c
 39111                           
 39112                           ;stkvar	_ff2 @ sp[(0)+-8]
 39113  01DD46  0EF8               	movlw	-8
 39114  01DD48  0060  F027  FFE3   	movff	btemp+8,plusw1
 39115  01DD4E  0EF9               	movlw	-7
 39116  01DD50  0060  F02B  FFE3   	movff	btemp+9,plusw1
 39117  01DD56  0EFA               	movlw	-6
 39118  01DD58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39119  01DD5E  0EFB               	movlw	-5
 39120  01DD60  0060  F033  FFE3   	movff	btemp+11,plusw1
 39121  01DD66                     l10629:
 39122                           
 39123                           ;stkvar	_ff1 @ sp[(0)+-4]
 39124  01DD66  0EFF               	movlw	-1
 39125  01DD68  7EE3               	btg	plusw1,7,c
 39126                           
 39127                           ;stkvar	_ff2 @ sp[(0)+-8]
 39128  01DD6A  0EFB               	movlw	-5
 39129  01DD6C  7EE3               	btg	plusw1,7,c
 39130                           
 39131                           ;stkvar	_ff2 @ sp[(0)+-8]
 39132                           ;stkvar	_ff1 @ sp[(0)+-4]
 39133  01DD6E  50E1               	movf	fsr1l,w,c
 39134  01DD70  0FFC               	addlw	-4
 39135  01DD72  6ED9               	movwf	fsr2l,c
 39136  01DD74  50E2               	movf	fsr1h,w,c
 39137  01DD76  6EDA               	movwf	fsr2h,c
 39138  01DD78  0EFF               	movlw	255
 39139  01DD7A  22DA               	addwfc	fsr2h,f,c
 39140  01DD7C  0EF8               	movlw	-8
 39141  01DD7E  50E3               	movf	plusw1,w,c
 39142  01DD80  5CDE               	subwf	postinc2,w,c
 39143  01DD82  0EF9               	movlw	-7
 39144  01DD84  50E3               	movf	plusw1,w,c
 39145  01DD86  58DE               	subwfb	postinc2,w,c
 39146  01DD88  0EFA               	movlw	-6
 39147  01DD8A  50E3               	movf	plusw1,w,c
 39148  01DD8C  58DE               	subwfb	postinc2,w,c
 39149  01DD8E  0EFB               	movlw	-5
 39150  01DD90  50E3               	movf	plusw1,w,c
 39151  01DD92  58DE               	subwfb	postinc2,w,c
 39152  01DD94  B0D8               	btfsc	status,0,c
 39153  01DD96  D002               	goto	l10637
 39154  01DD98  9001               	bcf	btemp& (0+255),0,c
 39155  01DD9A  D001               	goto	l2967
 39156  01DD9C                     l10637:
 39157  01DD9C  8001               	bsf	btemp& (0+255),0,c
 39158  01DD9E                     l2967:
 39159                           
 39160                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39161  01DD9E  0EF8               	movlw	248
 39162  01DDA0  26E1               	addwf	fsr1l,f,c
 39163  01DDA2  0EFF               	movlw	255
 39164  01DDA4  22E2               	addwfc	fsr1h,f,c
 39165  01DDA6  0012               	return		;funcret
 39166  01DDA8                     __end_of___flge:
 39167                           	opt callstack 0
 39168                           
 39169 ;; *************** function _calc_model_data *****************
 39170 ;; Defined at:
 39171 ;;		line 67 in file "mbmc.c"
 39172 ;; Parameters:    Size  Location     Type
 39173 ;;		None
 39174 ;; Auto vars:     Size  Location     Type
 39175 ;;		None
 39176 ;; Return value:  Size  Location     Type
 39177 ;;                  1  [STACK] void 
 39178 ;; Registers used:
 39179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39180 ;; Tracked objects:
 39181 ;;		On entry : 0/1
 39182 ;;		On exit  : 3F/39
 39183 ;;		Unchanged: 0/0
 39184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39189 ;;Total ram usage:        0 bytes
 39190 ;; Hardware stack levels used:    1
 39191 ;; Hardware stack levels required when called:   18
 39192 ;; This function calls:
 39193 ;;		___fladd
 39194 ;;		___flmul
 39195 ;;		___flsub
 39196 ;;		_lp_filter
 39197 ;;		_start_bsoc
 39198 ;;		_stop_bsoc
 39199 ;; This function is called by:
 39200 ;;		_main
 39201 ;; This function uses a reentrant model
 39202 ;;
 39203                           
 39204                           	psect	text145
 39205  0191A4                     __ptext145:
 39206                           	opt callstack 0
 39207  0191A4                     _calc_model_data:
 39208                           	opt callstack 12
 39209                           
 39210                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 39211                           
 39212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39213                           ;incstack = 0
 39214  0191A4  EC65  F00F         	call	_stop_bsoc	;wreg free
 39215                           
 39216                           ; BSR set to: 57
 39217                           ;mbmc.c: 72:  if (!V.calib) {
 39218  0191A8  0101               	movlb	1	; () banked
 39219  0191AA  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 39220  0191AC  A4D8               	btfss	status,2,c
 39221  0191AE  D220               	goto	l14281
 39222                           
 39223                           ; BSR set to: 1
 39224                           ;mbmc.c: 73:   C.updates++;
 39225  0191B0  EE22  F24B         	lfsr	2,_C+332	;volatile
 39226  0191B4  2ADE               	incf	postinc2,f,c
 39227  0191B6  0E00               	movlw	0
 39228  0191B8  22DE               	addwfc	postinc2,f,c
 39229  0191BA  22DE               	addwfc	postinc2,f,c
 39230  0191BC  22DE               	addwfc	postinc2,f,c
 39231                           
 39232                           ; BSR set to: 1
 39233                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 39234  0191BE  EE22  F0FF         	lfsr	2,_C
 39235  0191C2  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 39236  0191C8  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 39237  0191CE  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 39238  0191D4  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 39239                           
 39240                           ; BSR set to: 1
 39241                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 39242  0191DA  0060  F24B  FFE6   	movff	calc_model_data@bcror,postinc1
 39243  0191E0  0060  F24F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 39244  0191E6  0060  F253  FFE6   	movff	calc_model_data@bcror+2,postinc1
 39245  0191EC  0060  F257  FFE6   	movff	calc_model_data@bcror+3,postinc1
 39246  0191F2  EE22  F143         	lfsr	2,_C+68	;volatile
 39247  0191F6  006F FF7B FFE6     	movff	postinc2,postinc1
 39248  0191FC  006F FF7B FFE6     	movff	postinc2,postinc1
 39249  019202  006F FF7B FFE6     	movff	postinc2,postinc1
 39250  019208  006F FF7B FFE6     	movff	postinc2,postinc1
 39251  01920E  EC14  F009         	call	___flsub	;wreg free
 39252  019212  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 39253  019218  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 39254  01921E  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 39255  019224  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 39256                           
 39257                           ;mbmc.c: 76:   bcror = C.c_bat;
 39258  01922A  C943  F092         	movff	_C+68,calc_model_data@bcror	;volatile
 39259  01922E  C944  F093         	movff	_C+69,calc_model_data@bcror+1	;volatile
 39260  019232  C945  F094         	movff	_C+70,calc_model_data@bcror+2	;volatile
 39261  019236  C946  F095         	movff	_C+71,calc_model_data@bcror+3	;volatile
 39262                           
 39263                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 39264  01923A  EE22  F103         	lfsr	2,_C+4	;volatile
 39265  01923E  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 39266  019244  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 39267  01924A  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 39268  019250  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 39269                           
 39270                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 39271  019256  EE22  F10F         	lfsr	2,_C+16	;volatile
 39272  01925A  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 39273  019260  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 39274  019266  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 39275  01926C  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 39276                           
 39277                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 39278  019272  EE22  F133         	lfsr	2,_C+52	;volatile
 39279  019276  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 39280  01927C  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 39281  019282  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 39282  019288  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 39283                           
 39284                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 39285  01928E  0060  F25B  FFE6   	movff	calc_model_data@bvror,postinc1
 39286  019294  0060  F25F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 39287  01929A  0060  F263  FFE6   	movff	calc_model_data@bvror+2,postinc1
 39288  0192A0  0060  F267  FFE6   	movff	calc_model_data@bvror+3,postinc1
 39289  0192A6  EE22  F153         	lfsr	2,_C+84	;volatile
 39290  0192AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39291  0192B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39292  0192B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39293  0192BC  006F FF7B FFE6     	movff	postinc2,postinc1
 39294  0192C2  EC14  F009         	call	___flsub	;wreg free
 39295  0192C6  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 39296  0192CC  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 39297  0192D2  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 39298  0192D8  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 39299                           
 39300                           ;mbmc.c: 81:   bvror = C.v_bat;
 39301  0192DE  C953  F096         	movff	_C+84,calc_model_data@bvror	;volatile
 39302  0192E2  C954  F097         	movff	_C+85,calc_model_data@bvror+1	;volatile
 39303  0192E6  C955  F098         	movff	_C+86,calc_model_data@bvror+2	;volatile
 39304  0192EA  C956  F099         	movff	_C+87,calc_model_data@bvror+3	;volatile
 39305                           
 39306                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 39307  0192EE  EE22  F113         	lfsr	2,_C+20	;volatile
 39308  0192F2  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 39309  0192F8  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 39310  0192FE  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 39311  019304  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 39312                           
 39313                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 39314  01930A  EE22  F107         	lfsr	2,_C+8	;volatile
 39315  01930E  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 39316  019314  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 39317  01931A  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 39318  019320  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 39319                           
 39320                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 39321  019326  EE22  F12F         	lfsr	2,_C+48	;volatile
 39322  01932A  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 39323  019330  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 39324  019336  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 39325  01933C  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 39326                           
 39327                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 39328  019342  0E01               	movlw	1
 39329  019344  6EE6               	movwf	postinc1,c
 39330  019346  0E10               	movlw	16
 39331  019348  6EE6               	movwf	postinc1,c
 39332  01934A  EE22  F0FF         	lfsr	2,_C
 39333  01934E  006F FF7B FFE6     	movff	postinc2,postinc1
 39334  019354  006F FF7B FFE6     	movff	postinc2,postinc1
 39335  01935A  006F FF7B FFE6     	movff	postinc2,postinc1
 39336  019360  006F FF7B FFE6     	movff	postinc2,postinc1
 39337  019366  EE22  F103         	lfsr	2,_C+4	;volatile
 39338  01936A  006F FF7B FFE6     	movff	postinc2,postinc1
 39339  019370  006F FF7B FFE6     	movff	postinc2,postinc1
 39340  019376  006F FF7B FFE6     	movff	postinc2,postinc1
 39341  01937C  006F FF7B FFE6     	movff	postinc2,postinc1
 39342  019382  EC14  F009         	call	___flsub	;wreg free
 39343  019386  0060  F007  FFE6   	movff	btemp,postinc1
 39344  01938C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39345  019392  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39346  019398  0060  F013  FFE6   	movff	btemp+3,postinc1
 39347  01939E  EC42  F0E7         	call	_lp_filter	;wreg free
 39348  0193A2  0060  F004  F93F   	movff	btemp,_C+64	;volatile
 39349  0193A8  0060  F008  F940   	movff	btemp+1,_C+65	;volatile
 39350  0193AE  0060  F00C  F941   	movff	btemp+2,_C+66	;volatile
 39351  0193B4  0060  F010  F942   	movff	btemp+3,_C+67	;volatile
 39352                           
 39353                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 39354  0193BA  0E01               	movlw	1
 39355  0193BC  6EE6               	movwf	postinc1,c
 39356  0193BE  0E11               	movlw	17
 39357  0193C0  6EE6               	movwf	postinc1,c
 39358  0193C2  EE22  F153         	lfsr	2,_C+84	;volatile
 39359  0193C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39360  0193CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39361  0193D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39362  0193D8  006F FF7B FFE6     	movff	postinc2,postinc1
 39363  0193DE  EE22  F13F         	lfsr	2,_C+64	;volatile
 39364  0193E2  006F FF7B FFE6     	movff	postinc2,postinc1
 39365  0193E8  006F FF7B FFE6     	movff	postinc2,postinc1
 39366  0193EE  006F FF7B FFE6     	movff	postinc2,postinc1
 39367  0193F4  006F FF7B FFE6     	movff	postinc2,postinc1
 39368  0193FA  EC61  F0B1         	call	___flmul	;wreg free
 39369  0193FE  0060  F007  FFE6   	movff	btemp,postinc1
 39370  019404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39371  01940A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39372  019410  0060  F013  FFE6   	movff	btemp+3,postinc1
 39373  019416  EC42  F0E7         	call	_lp_filter	;wreg free
 39374  01941A  0060  F004  F973   	movff	btemp,_C+116	;volatile
 39375  019420  0060  F008  F974   	movff	btemp+1,_C+117	;volatile
 39376  019426  0060  F00C  F975   	movff	btemp+2,_C+118	;volatile
 39377  01942C  0060  F010  F976   	movff	btemp+3,_C+119	;volatile
 39378                           
 39379                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 39380  019432  0E01               	movlw	1
 39381  019434  6EE6               	movwf	postinc1,c
 39382  019436  0E12               	movlw	18
 39383  019438  6EE6               	movwf	postinc1,c
 39384  01943A  EE22  F14F         	lfsr	2,_C+80	;volatile
 39385  01943E  006F FF7B FFE6     	movff	postinc2,postinc1
 39386  019444  006F FF7B FFE6     	movff	postinc2,postinc1
 39387  01944A  006F FF7B FFE6     	movff	postinc2,postinc1
 39388  019450  006F FF7B FFE6     	movff	postinc2,postinc1
 39389  019456  EE22  F147         	lfsr	2,_C+72	;volatile
 39390  01945A  006F FF7B FFE6     	movff	postinc2,postinc1
 39391  019460  006F FF7B FFE6     	movff	postinc2,postinc1
 39392  019466  006F FF7B FFE6     	movff	postinc2,postinc1
 39393  01946C  006F FF7B FFE6     	movff	postinc2,postinc1
 39394  019472  EC61  F0B1         	call	___flmul	;wreg free
 39395  019476  0060  F007  FFE6   	movff	btemp,postinc1
 39396  01947C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39397  019482  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39398  019488  0060  F013  FFE6   	movff	btemp+3,postinc1
 39399  01948E  EC42  F0E7         	call	_lp_filter	;wreg free
 39400  019492  0060  F004  F97B   	movff	btemp,_C+124	;volatile
 39401  019498  0060  F008  F97C   	movff	btemp+1,_C+125	;volatile
 39402  01949E  0060  F00C  F97D   	movff	btemp+2,_C+126	;volatile
 39403  0194A4  0060  F010  F97E   	movff	btemp+3,_C+127	;volatile
 39404                           
 39405                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 39406  0194AA  0E01               	movlw	1
 39407  0194AC  6EE6               	movwf	postinc1,c
 39408  0194AE  0E13               	movlw	19
 39409  0194B0  6EE6               	movwf	postinc1,c
 39410  0194B2  0E00               	movlw	0
 39411  0194B4  6EE6               	movwf	postinc1,c
 39412  0194B6  0E00               	movlw	0
 39413  0194B8  6EE6               	movwf	postinc1,c
 39414  0194BA  0E60               	movlw	96
 39415  0194BC  6EE6               	movwf	postinc1,c
 39416  0194BE  0EC1               	movlw	193
 39417  0194C0  6EE6               	movwf	postinc1,c
 39418  0194C2  EE22  F163         	lfsr	2,_C+100	;volatile
 39419  0194C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39420  0194CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39421  0194D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39422  0194D8  006F FF7B FFE6     	movff	postinc2,postinc1
 39423  0194DE  EE22  F13F         	lfsr	2,_C+64	;volatile
 39424  0194E2  006F FF7B FFE6     	movff	postinc2,postinc1
 39425  0194E8  006F FF7B FFE6     	movff	postinc2,postinc1
 39426  0194EE  006F FF7B FFE6     	movff	postinc2,postinc1
 39427  0194F4  006F FF7B FFE6     	movff	postinc2,postinc1
 39428  0194FA  EC61  F0B1         	call	___flmul	;wreg free
 39429  0194FE  0060  F007  FFE6   	movff	btemp,postinc1
 39430  019504  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39431  01950A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39432  019510  0060  F013  FFE6   	movff	btemp+3,postinc1
 39433  019516  EC76  F0B5         	call	___fladd	;wreg free
 39434  01951A  0060  F007  FFE6   	movff	btemp,postinc1
 39435  019520  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39436  019526  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39437  01952C  0060  F013  FFE6   	movff	btemp+3,postinc1
 39438  019532  EC42  F0E7         	call	_lp_filter	;wreg free
 39439  019536  0060  F004  F977   	movff	btemp,_C+120	;volatile
 39440  01953C  0060  F008  F978   	movff	btemp+1,_C+121	;volatile
 39441  019542  0060  F00C  F979   	movff	btemp+2,_C+122	;volatile
 39442  019548  0060  F010  F97A   	movff	btemp+3,_C+123	;volatile
 39443                           
 39444                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 39445  01954E  0E01               	movlw	1
 39446  019550  6EE6               	movwf	postinc1,c
 39447  019552  0E14               	movlw	20
 39448  019554  6EE6               	movwf	postinc1,c
 39449  019556  EE22  F153         	lfsr	2,_C+84	;volatile
 39450  01955A  006F FF7B FFE6     	movff	postinc2,postinc1
 39451  019560  006F FF7B FFE6     	movff	postinc2,postinc1
 39452  019566  006F FF7B FFE6     	movff	postinc2,postinc1
 39453  01956C  006F FF7B FFE6     	movff	postinc2,postinc1
 39454  019572  EE22  F143         	lfsr	2,_C+68	;volatile
 39455  019576  006F FF7B FFE6     	movff	postinc2,postinc1
 39456  01957C  006F FF7B FFE6     	movff	postinc2,postinc1
 39457  019582  006F FF7B FFE6     	movff	postinc2,postinc1
 39458  019588  006F FF7B FFE6     	movff	postinc2,postinc1
 39459  01958E  EC61  F0B1         	call	___flmul	;wreg free
 39460  019592  0060  F007  FFE6   	movff	btemp,postinc1
 39461  019598  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39462  01959E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39463  0195A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 39464  0195AA  EC42  F0E7         	call	_lp_filter	;wreg free
 39465  0195AE  0060  F004  F97F   	movff	btemp,_C+128	;volatile
 39466  0195B4  0060  F008  F980   	movff	btemp+1,_C+129	;volatile
 39467  0195BA  0060  F00C  F981   	movff	btemp+2,_C+130	;volatile
 39468  0195C0  0060  F010  F982   	movff	btemp+3,_C+131	;volatile
 39469                           
 39470                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 39471  0195C6  EE22  F177         	lfsr	2,_C+120	;volatile
 39472  0195CA  0E03               	movlw	3
 39473  0195CC  AEDB               	btfss	plusw2,7,c
 39474  0195CE  D010               	goto	l14281
 39475                           
 39476                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 39477  0195D0  0E17               	movlw	23
 39478  0195D2  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 39479  0195D8  0EB7               	movlw	183
 39480  0195DA  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 39481  0195E0  0ED1               	movlw	209
 39482  0195E2  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 39483  0195E8  0E38               	movlw	56
 39484  0195EA  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 39485  0195F0                     l14281:
 39486                           
 39487                           ;mbmc.c: 96:  start_bsoc();
 39488  0195F0  ECD2  F00D         	call	_start_bsoc	;wreg free
 39489                           
 39490                           ; BSR set to: 57
 39491                           ;mbmc.c: 97:  C.update = 1;
 39492  0195F4  0E01               	movlw	1
 39493  0195F6  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 39494                           
 39495                           ; BSR set to: 57
 39496                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 39497  0195FC  0012               	return		;funcret
 39498  0195FE                     __end_of_calc_model_data:
 39499                           	opt callstack 0
 39500                           
 39501 ;; *************** function _stop_bsoc *****************
 39502 ;; Defined at:
 39503 ;;		line 130 in file "bsoc.c"
 39504 ;; Parameters:    Size  Location     Type
 39505 ;;		None
 39506 ;; Auto vars:     Size  Location     Type
 39507 ;;		None
 39508 ;; Return value:  Size  Location     Type
 39509 ;;                  1  [STACK] void 
 39510 ;; Registers used:
 39511 ;;		None
 39512 ;; Tracked objects:
 39513 ;;		On entry : 0/39
 39514 ;;		On exit  : 3F/39
 39515 ;;		Unchanged: 0/0
 39516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39521 ;;Total ram usage:        0 bytes
 39522 ;; Hardware stack levels used:    1
 39523 ;; Hardware stack levels required when called:   15
 39524 ;; This function calls:
 39525 ;;		Nothing
 39526 ;; This function is called by:
 39527 ;;		_calc_model_data
 39528 ;;		_load_hist_data
 39529 ;; This function uses a reentrant model
 39530 ;;
 39531                           
 39532                           	psect	text146
 39533  001ECA                     __ptext146:
 39534                           	opt callstack 0
 39535  001ECA                     _stop_bsoc:
 39536                           	opt callstack 14
 39537                           
 39538                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 39539                           
 39540                           ; BSR set to: 57
 39541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39542                           ;incstack = 0
 39543  001ECA  0139               	movlb	57	; () banked
 39544  001ECC  9D96               	bcf	150,6,b	;volatile
 39545                           
 39546                           ; BSR set to: 57
 39547                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39548  001ECE  0012               	return		;funcret
 39549  001ED0                     __end_of_stop_bsoc:
 39550                           	opt callstack 0
 39551                           
 39552 ;; *************** function _start_bsoc *****************
 39553 ;; Defined at:
 39554 ;;		line 121 in file "bsoc.c"
 39555 ;; Parameters:    Size  Location     Type
 39556 ;;		None
 39557 ;; Auto vars:     Size  Location     Type
 39558 ;;		None
 39559 ;; Return value:  Size  Location     Type
 39560 ;;                  1  [STACK] void 
 39561 ;; Registers used:
 39562 ;;		wreg, status,2, status,0, btemp+11
 39563 ;; Tracked objects:
 39564 ;;		On entry : 0/39
 39565 ;;		On exit  : 3F/39
 39566 ;;		Unchanged: 0/0
 39567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39572 ;;Total ram usage:        0 bytes
 39573 ;; Hardware stack levels used:    1
 39574 ;; Hardware stack levels required when called:   15
 39575 ;; This function calls:
 39576 ;;		Nothing
 39577 ;; This function is called by:
 39578 ;;		_calc_model_data
 39579 ;;		_load_hist_data
 39580 ;; This function uses a reentrant model
 39581 ;;
 39582                           
 39583                           	psect	text147
 39584  001BA4                     __ptext147:
 39585                           	opt callstack 0
 39586  001BA4                     _start_bsoc:
 39587                           	opt callstack 14
 39588                           
 39589                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 39590                           
 39591                           ; BSR set to: 57
 39592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39593                           ;incstack = 0
 39594  001BA4  0139               	movlb	57	; () banked
 39595  001BA6  8D96               	bsf	150,6,b	;volatile
 39596                           
 39597                           ; BSR set to: 57
 39598  001BA8  A4BE               	btfss	190,2,c	;volatile
 39599  001BAA  D002               	goto	u12670
 39600  001BAC  0E01               	movlw	1
 39601  001BAE  D001               	goto	u12676
 39602  001BB0                     u12670:
 39603  001BB0  0E00               	movlw	0
 39604  001BB2                     u12676:
 39605  001BB2  0AFF               	xorlw	255
 39606  001BB4  6E0C               	movwf	(btemp+11)^0,c
 39607  001BB6  460C               	rlncf	(btemp+11)^0,f,c
 39608  001BB8  460C               	rlncf	(btemp+11)^0,f,c
 39609  001BBA  50BE               	movf	190,w,c	;volatile
 39610  001BBC  180C               	xorwf	(btemp+11)^0,w,c
 39611  001BBE  0BFB               	andlw	-5
 39612  001BC0  180C               	xorwf	(btemp+11)^0,w,c
 39613  001BC2  6EBE               	movwf	190,c	;volatile
 39614                           
 39615                           ; BSR set to: 57
 39616                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 39617  001BC4  0012               	return		;funcret
 39618  001BC6                     __end_of_start_bsoc:
 39619                           	opt callstack 0
 39620                           
 39621 ;; *************** function _lp_filter *****************
 39622 ;; Defined at:
 39623 ;;		line 29 in file "mbmc.c"
 39624 ;; Parameters:    Size  Location     Type
 39625 ;;  new             4  [STACK] const float 
 39626 ;;  bn              1  [STACK] const unsigned char 
 39627 ;;  slow            1  [STACK] const char 
 39628 ;; Auto vars:     Size  Location     Type
 39629 ;;  lp_speed        4  [STACK] float 
 39630 ;; Return value:  Size  Location     Type
 39631 ;;                  4  [STACK] float 
 39632 ;; Registers used:
 39633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39634 ;; Tracked objects:
 39635 ;;		On entry : 0/1
 39636 ;;		On exit  : 0/0
 39637 ;;		Unchanged: 0/0
 39638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39643 ;;Total ram usage:        0 bytes
 39644 ;; Hardware stack levels used:    1
 39645 ;; Hardware stack levels required when called:   17
 39646 ;; This function calls:
 39647 ;;		___fladd
 39648 ;;		___flmul
 39649 ;;		___flsub
 39650 ;; This function is called by:
 39651 ;;		_main
 39652 ;;		_convert_adc_data
 39653 ;;		_calc_model_data
 39654 ;; This function uses a reentrant model
 39655 ;;
 39656                           
 39657                           	psect	text148
 39658  01CE84                     __ptext148:
 39659                           	opt callstack 0
 39660  01CE84                     _lp_filter:
 39661                           	opt callstack 0
 39662                           
 39663                           ; BSR set to: 57
 39664                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39665  01CE84  52E6               	movf	postinc1,f,c
 39666  01CE86  52E6               	movf	postinc1,f,c
 39667  01CE88  52E6               	movf	postinc1,f,c
 39668  01CE8A  52E6               	movf	postinc1,f,c
 39669                           
 39670                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 39671                           ;stkvar	_bn @ sp[(-4)+-5]
 39672                           
 39673                           ;incstack = 0
 39674  01CE8C  0EF7               	movlw	-9
 39675  01CE8E  006F FF8C  F001    	movff	plusw1,btemp
 39676  01CE94  0E14               	movlw	20
 39677  01CE96  6401               	cpfsgt	btemp^0,c
 39678  01CE98  D011               	goto	l13343
 39679  01CE9A                     u12500:
 39680                           
 39681                           ;mbmc.c: 35:   return new;
 39682                           ;stkvar	_new @ sp[(-4)+-4]
 39683  01CE9A  0EF8               	movlw	-8
 39684  01CE9C  006F FF8C  F001    	movff	plusw1,btemp
 39685  01CEA2  0EF9               	movlw	-7
 39686  01CEA4  006F FF8C  F002    	movff	plusw1,btemp+1
 39687  01CEAA  0EFA               	movlw	-6
 39688  01CEAC  006F FF8C  F003    	movff	plusw1,btemp+2
 39689  01CEB2  0EFB               	movlw	-5
 39690  01CEB4  006F FF8C  F004    	movff	plusw1,btemp+3
 39691  01CEBA  D0BD               	goto	l2121
 39692  01CEBC                     l13343:
 39693                           
 39694                           ;mbmc.c: 37:  if (slow == (-1)) {
 39695                           ;stkvar	_slow @ sp[(-4)+-6]
 39696  01CEBC  0EF6               	movlw	-10
 39697  01CEBE  28E3               	incf	plusw1,w,c
 39698  01CEC0  A4D8               	btfss	status,2,c
 39699  01CEC2  D012               	goto	l13351
 39700                           
 39701                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 39702                           ;stkvar	_bn @ sp[(-4)+-5]
 39703  01CEC4  0EF7               	movlw	-9
 39704  01CEC6  50E3               	movf	plusw1,w,c
 39705  01CEC8  0D04               	mullw	4
 39706  01CECA  0E00               	movlw	low lp_filter@smooth
 39707  01CECC  24F3               	addwf	243,w,c
 39708  01CECE  6ED9               	movwf	fsr2l,c
 39709  01CED0  0E03               	movlw	high lp_filter@smooth
 39710  01CED2  20F4               	addwfc	prodh,w,c
 39711  01CED4  6EDA               	movwf	fsr2h,c
 39712  01CED6  0E00               	movlw	0
 39713  01CED8  6EDE               	movwf	postinc2,c
 39714  01CEDA  0E00               	movlw	0
 39715  01CEDC  6EDE               	movwf	postinc2,c
 39716  01CEDE  0E00               	movlw	0
 39717  01CEE0  6EDE               	movwf	postinc2,c
 39718  01CEE2  0E00               	movlw	0
 39719  01CEE4  6EDD               	movwf	postdec2,c
 39720  01CEE6  D7D9               	goto	u12500
 39721  01CEE8                     l13351:
 39722                           
 39723                           ;mbmc.c: 42:  if (slow) {
 39724                           ;stkvar	_slow @ sp[(-4)+-6]
 39725  01CEE8  0EF6               	movlw	-10
 39726  01CEEA  50E3               	movf	plusw1,w,c
 39727  01CEEC  B4D8               	btfsc	status,2,c
 39728  01CEEE  D006               	goto	l13355
 39729                           
 39730                           ;mbmc.c: 43:   lp_speed = 0.033;
 39731  01CEF0  0E02               	movlw	2
 39732  01CEF2  6E09               	movwf	(btemp+8)^0,c
 39733  01CEF4  0E2B               	movlw	43
 39734  01CEF6  6E0A               	movwf	(btemp+9)^0,c
 39735  01CEF8  0E07               	movlw	7
 39736  01CEFA  D005               	goto	L45
 39737  01CEFC                     l13355:
 39738                           
 39739                           ;mbmc.c: 45:   lp_speed = 0.066;
 39740  01CEFC  0E02               	movlw	2
 39741  01CEFE  6E09               	movwf	(btemp+8)^0,c
 39742  01CF00  0E2B               	movlw	43
 39743  01CF02  6E0A               	movwf	(btemp+9)^0,c
 39744  01CF04  0E87               	movlw	135
 39745  01CF06                     L45:
 39746  01CF06  6E0B               	movwf	(btemp+10)^0,c
 39747  01CF08  0E3D               	movlw	61
 39748  01CF0A  6E0C               	movwf	(btemp+11)^0,c
 39749                           
 39750                           ;stkvar	_lp_speed @ sp[(-4)+0]
 39751  01CF0C  0EFC               	movlw	-4
 39752  01CF0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 39753  01CF14  0EFD               	movlw	-3
 39754  01CF16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 39755  01CF1C  0EFE               	movlw	-2
 39756  01CF1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39757  01CF24  0EFF               	movlw	-1
 39758  01CF26  0060  F033  FFE3   	movff	btemp+11,plusw1
 39759                           
 39760                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 39761                           ;stkvar	_bn @ sp[(-4)+-5]
 39762  01CF2C  0EF7               	movlw	-9
 39763  01CF2E  50E3               	movf	plusw1,w,c
 39764  01CF30  0D04               	mullw	4
 39765  01CF32  0E00               	movlw	low lp_filter@smooth
 39766  01CF34  24F3               	addwf	243,w,c
 39767  01CF36  6ED9               	movwf	fsr2l,c
 39768  01CF38  0E03               	movlw	high lp_filter@smooth
 39769  01CF3A  20F4               	addwfc	prodh,w,c
 39770  01CF3C  6EDA               	movwf	fsr2h,c
 39771  01CF3E  006F FF7B FFE6     	movff	postinc2,postinc1
 39772  01CF44  006F FF7B FFE6     	movff	postinc2,postinc1
 39773  01CF4A  006F FF7B FFE6     	movff	postinc2,postinc1
 39774  01CF50  006F FF7B FFE6     	movff	postinc2,postinc1
 39775                           
 39776                           ;stkvar	_lp_speed @ sp[(-8)+0]
 39777  01CF56  0EF8               	movlw	-8
 39778  01CF58  006F FF8F FFE6     	movff	plusw1,postinc1
 39779  01CF5E  006F FF8F FFE6     	movff	plusw1,postinc1
 39780  01CF64  006F FF8F FFE6     	movff	plusw1,postinc1
 39781  01CF6A  006F FF8F FFE6     	movff	plusw1,postinc1
 39782                           
 39783                           ;stkvar	_bn @ sp[(-12)+-5]
 39784  01CF70  0EEF               	movlw	-17
 39785  01CF72  50E3               	movf	plusw1,w,c
 39786  01CF74  0D04               	mullw	4
 39787  01CF76  0E00               	movlw	low lp_filter@smooth
 39788  01CF78  24F3               	addwf	243,w,c
 39789  01CF7A  6ED9               	movwf	fsr2l,c
 39790  01CF7C  0E03               	movlw	high lp_filter@smooth
 39791  01CF7E  20F4               	addwfc	prodh,w,c
 39792  01CF80  6EDA               	movwf	fsr2h,c
 39793  01CF82  006F FF7B FFE6     	movff	postinc2,postinc1
 39794  01CF88  006F FF7B FFE6     	movff	postinc2,postinc1
 39795  01CF8E  006F FF7B FFE6     	movff	postinc2,postinc1
 39796  01CF94  006F FF7B FFE6     	movff	postinc2,postinc1
 39797                           
 39798                           ;stkvar	_new @ sp[(-16)+-4]
 39799  01CF9A  0EEC               	movlw	-20
 39800  01CF9C  006F FF8F FFE6     	movff	plusw1,postinc1
 39801  01CFA2  006F FF8F FFE6     	movff	plusw1,postinc1
 39802  01CFA8  006F FF8F FFE6     	movff	plusw1,postinc1
 39803  01CFAE  006F FF8F FFE6     	movff	plusw1,postinc1
 39804  01CFB4  EC14  F009         	call	___flsub	;wreg free
 39805  01CFB8  0060  F007  FFE6   	movff	btemp,postinc1
 39806  01CFBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39807  01CFC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39808  01CFCA  0060  F013  FFE6   	movff	btemp+3,postinc1
 39809  01CFD0  EC61  F0B1         	call	___flmul	;wreg free
 39810  01CFD4  0060  F007  FFE6   	movff	btemp,postinc1
 39811  01CFDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39812  01CFE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39813  01CFE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 39814  01CFEC  EC76  F0B5         	call	___fladd	;wreg free
 39815                           
 39816                           ;stkvar	_bn @ sp[(-4)+-5]
 39817  01CFF0  0EF7               	movlw	-9
 39818  01CFF2  50E3               	movf	plusw1,w,c
 39819  01CFF4  0D04               	mullw	4
 39820  01CFF6  0E00               	movlw	low lp_filter@smooth
 39821  01CFF8  24F3               	addwf	243,w,c
 39822  01CFFA  6ED9               	movwf	fsr2l,c
 39823  01CFFC  0E03               	movlw	high lp_filter@smooth
 39824  01CFFE  20F4               	addwfc	prodh,w,c
 39825  01D000  6EDA               	movwf	fsr2h,c
 39826  01D002  0060  F007  FFDE   	movff	btemp,postinc2
 39827  01D008  0060  F00B  FFDE   	movff	btemp+1,postinc2
 39828  01D00E  0060  F00F  FFDE   	movff	btemp+2,postinc2
 39829  01D014  0060  F013  FFDD   	movff	btemp+3,postdec2
 39830  01D01A  52DD               	movf	postdec2,f,c
 39831  01D01C  52DD               	movf	postdec2,f,c
 39832  01D01E  006F FF78  F001    	movff	postinc2,btemp
 39833  01D024  006F FF78  F002    	movff	postinc2,btemp+1
 39834  01D02A  006F FF78  F003    	movff	postinc2,btemp+2
 39835  01D030  006F FF78  F004    	movff	postinc2,btemp+3
 39836  01D036                     l2121:
 39837                           
 39838                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 39839  01D036  0EF6               	movlw	246
 39840  01D038  26E1               	addwf	fsr1l,f,c
 39841  01D03A  0EFF               	movlw	255
 39842  01D03C  22E2               	addwfc	fsr1h,f,c
 39843  01D03E  0012               	return		;funcret
 39844  01D040                     __end_of_lp_filter:
 39845                           	opt callstack 0
 39846                           
 39847 ;; *************** function ___flsub *****************
 39848 ;; Defined at:
 39849 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 39850 ;; Parameters:    Size  Location     Type
 39851 ;;  b               4  [STACK] float 
 39852 ;;  a               4  [STACK] float 
 39853 ;; Auto vars:     Size  Location     Type
 39854 ;;		None
 39855 ;; Return value:  Size  Location     Type
 39856 ;;                  4  [STACK] float 
 39857 ;; Registers used:
 39858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39859 ;; Tracked objects:
 39860 ;;		On entry : 0/0
 39861 ;;		On exit  : 0/0
 39862 ;;		Unchanged: 0/0
 39863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39868 ;;Total ram usage:        0 bytes
 39869 ;; Hardware stack levels used:    1
 39870 ;; Hardware stack levels required when called:   16
 39871 ;; This function calls:
 39872 ;;		___fladd
 39873 ;; This function is called by:
 39874 ;;		_conv_raw_result
 39875 ;;		_lp_filter
 39876 ;;		_calc_model_data
 39877 ;;		_calc_ror_data
 39878 ;;		_esr_check
 39879 ;;		_efgtoa
 39880 ;; This function uses a reentrant model
 39881 ;;
 39882                           
 39883                           	psect	text149
 39884  001228                     __ptext149:
 39885                           	opt callstack 0
 39886  001228                     ___flsub:
 39887                           	opt callstack 0
 39888                           
 39889                           ;stkvar	_a @ sp[(0)+-8]
 39890                           
 39891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39892                           ;incstack = 0
 39893 ;; hardware stack exceeded
 39894  001228  0EFB               	movlw	-5
 39895  00122A  7EE3               	btg	plusw1,7,c
 39896                           
 39897                           ;stkvar	_a @ sp[(0)+-8]
 39898  00122C  0EF8               	movlw	-8
 39899  00122E  006F FF8F FFE6     	movff	plusw1,postinc1
 39900  001234  006F FF8F FFE6     	movff	plusw1,postinc1
 39901  00123A  006F FF8F FFE6     	movff	plusw1,postinc1
 39902  001240  006F FF8F FFE6     	movff	plusw1,postinc1
 39903                           
 39904                           ;stkvar	_b @ sp[(-4)+-4]
 39905  001246  0EF8               	movlw	-8
 39906  001248  006F FF8F FFE6     	movff	plusw1,postinc1
 39907  00124E  006F FF8F FFE6     	movff	plusw1,postinc1
 39908  001254  006F FF8F FFE6     	movff	plusw1,postinc1
 39909  00125A  006F FF8F FFE6     	movff	plusw1,postinc1
 39910  001260  EC76  F0B5         	call	___fladd	;wreg free
 39911                           
 39912                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 39913  001264  0EF8               	movlw	248
 39914  001266  26E1               	addwf	fsr1l,f,c
 39915  001268  0EFF               	movlw	255
 39916  00126A  22E2               	addwfc	fsr1h,f,c
 39917  00126C  0012               	return		;funcret
 39918  00126E                     __end_of___flsub:
 39919                           	opt callstack 0
 39920                           
 39921 ;; *************** function ___fladd *****************
 39922 ;; Defined at:
 39923 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 39924 ;; Parameters:    Size  Location     Type
 39925 ;;  b               4  [STACK] float 
 39926 ;;  a               4  [STACK] float 
 39927 ;; Auto vars:     Size  Location     Type
 39928 ;;  grs             1  [STACK] unsigned char 
 39929 ;;  bexp            1  [STACK] unsigned char 
 39930 ;;  aexp            1  [STACK] unsigned char 
 39931 ;;  signs           1  [STACK] unsigned char 
 39932 ;; Return value:  Size  Location     Type
 39933 ;;                  4  [STACK] unsigned char 
 39934 ;; Registers used:
 39935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39936 ;; Tracked objects:
 39937 ;;		On entry : 0/0
 39938 ;;		On exit  : 0/0
 39939 ;;		Unchanged: 0/0
 39940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39945 ;;Total ram usage:        0 bytes
 39946 ;; Hardware stack levels used:    1
 39947 ;; Hardware stack levels required when called:   15
 39948 ;; This function calls:
 39949 ;;		Nothing
 39950 ;; This function is called by:
 39951 ;;		_main
 39952 ;;		_lp_filter
 39953 ;;		_calc_model_data
 39954 ;;		_efgtoa
 39955 ;;		___asfladd
 39956 ;;		___flsub
 39957 ;; This function uses a reentrant model
 39958 ;;
 39959                           
 39960                           	psect	text150
 39961  016AEC                     __ptext150:
 39962                           	opt callstack 0
 39963  016AEC                     ___fladd:
 39964                           	opt callstack 0
 39965                           
 39966                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39967  016AEC  52E6               	movf	postinc1,f,c
 39968  016AEE  52E6               	movf	postinc1,f,c
 39969  016AF0  52E6               	movf	postinc1,f,c
 39970  016AF2  52E6               	movf	postinc1,f,c
 39971                           
 39972                           ;stkvar	_b @ sp[(-4)+-4]
 39973                           
 39974                           ;incstack = 0
 39975 ;; hardware stack exceeded
 39976  016AF4  0EFB               	movlw	251
 39977  016AF6  24E1               	addwf	fsr1l,w,c
 39978  016AF8  6ED9               	movwf	fsr2l,c
 39979  016AFA  0EFF               	movlw	255
 39980  016AFC  20E2               	addwfc	fsr1h,w,c
 39981  016AFE  6EDA               	movwf	fsr2h,c
 39982  016B00  50DF               	movf	indf2,w,c
 39983  016B02  6E0C               	movwf	(btemp+11)^0,c
 39984  016B04  0E80               	movlw	128
 39985  016B06  160C               	andwf	(btemp+11)^0,f,c
 39986                           
 39987                           ;stkvar	_signs @ sp[(-4)+3]
 39988  016B08  0EFF               	movlw	-1
 39989  016B0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 39990                           
 39991                           ;stkvar	_b @ sp[(-4)+-4]
 39992  016B10  0EFB               	movlw	251
 39993  016B12  24E1               	addwf	fsr1l,w,c
 39994  016B14  6ED9               	movwf	fsr2l,c
 39995  016B16  0EFF               	movlw	255
 39996  016B18  20E2               	addwfc	fsr1h,w,c
 39997  016B1A  6EDA               	movwf	fsr2h,c
 39998  016B1C  50DF               	movf	indf2,w,c
 39999  016B1E  6E0C               	movwf	(btemp+11)^0,c
 40000  016B20  90D8               	bcf	status,0,c
 40001  016B22  340C               	rlcf	(btemp+11)^0,w,c
 40002  016B24  6E0B               	movwf	(btemp+10)^0,c
 40003                           
 40004                           ;stkvar	_bexp @ sp[(-4)+1]
 40005  016B26  0EFD               	movlw	-3
 40006  016B28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40007                           
 40008                           ;stkvar	_b @ sp[(-4)+-4]
 40009  016B2E  0EFA               	movlw	250
 40010  016B30  24E1               	addwf	fsr1l,w,c
 40011  016B32  6ED9               	movwf	fsr2l,c
 40012  016B34  0EFF               	movlw	255
 40013  016B36  20E2               	addwfc	fsr1h,w,c
 40014  016B38  6EDA               	movwf	fsr2h,c
 40015  016B3A  AEDF               	btfss	indf2,7,c
 40016  016B3C  D002               	goto	l9689
 40017                           
 40018                           ;stkvar	_bexp @ sp[(-4)+1]
 40019  016B3E  0EFD               	movlw	-3
 40020  016B40  80E3               	bsf	plusw1,0,c
 40021  016B42                     l9689:
 40022                           
 40023                           ;stkvar	_bexp @ sp[(-4)+1]
 40024  016B42  0EFD               	movlw	-3
 40025  016B44  50E3               	movf	plusw1,w,c
 40026  016B46  B4D8               	btfsc	status,2,c
 40027  016B48  D027               	goto	l9699
 40028                           
 40029                           ;stkvar	_bexp @ sp[(-4)+1]
 40030  016B4A  0EFD               	movlw	-3
 40031  016B4C  28E3               	incf	plusw1,w,c
 40032  016B4E  A4D8               	btfss	status,2,c
 40033  016B50  D018               	goto	l9695
 40034  016B52  0E00               	movlw	0
 40035  016B54  6E09               	movwf	(btemp+8)^0,c
 40036  016B56  0E00               	movlw	0
 40037  016B58  6E0A               	movwf	(btemp+9)^0,c
 40038  016B5A  0E00               	movlw	0
 40039  016B5C  6E0B               	movwf	(btemp+10)^0,c
 40040  016B5E  0E00               	movlw	0
 40041  016B60  6E0C               	movwf	(btemp+11)^0,c
 40042                           
 40043                           ;stkvar	_b @ sp[(-4)+-4]
 40044  016B62  0EF8               	movlw	-8
 40045  016B64  0060  F027  FFE3   	movff	btemp+8,plusw1
 40046  016B6A  0EF9               	movlw	-7
 40047  016B6C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40048  016B72  0EFA               	movlw	-6
 40049  016B74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40050  016B7A  0EFB               	movlw	-5
 40051  016B7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 40052  016B82                     l9695:
 40053                           
 40054                           ;stkvar	_b @ sp[(-4)+-4]
 40055  016B82  0EFA               	movlw	-6
 40056  016B84  8EE3               	bsf	plusw1,7,c
 40057                           
 40058                           ;stkvar	_b @ sp[(-4)+-4]
 40059  016B86  0EFB               	movlw	251
 40060  016B88  24E1               	addwf	fsr1l,w,c
 40061  016B8A  6ED9               	movwf	fsr2l,c
 40062  016B8C  0EFF               	movlw	255
 40063  016B8E  20E2               	addwfc	fsr1h,w,c
 40064  016B90  6EDA               	movwf	fsr2h,c
 40065  016B92  0E00               	movlw	0
 40066  016B94  6EDF               	movwf	indf2,c
 40067  016B96  D018               	goto	l9701
 40068  016B98                     l9699:
 40069  016B98  0E00               	movlw	0
 40070  016B9A  6E09               	movwf	(btemp+8)^0,c
 40071  016B9C  0E00               	movlw	0
 40072  016B9E  6E0A               	movwf	(btemp+9)^0,c
 40073  016BA0  0E00               	movlw	0
 40074  016BA2  6E0B               	movwf	(btemp+10)^0,c
 40075  016BA4  0E00               	movlw	0
 40076  016BA6  6E0C               	movwf	(btemp+11)^0,c
 40077                           
 40078                           ;stkvar	_b @ sp[(-4)+-4]
 40079  016BA8  0EF8               	movlw	-8
 40080  016BAA  0060  F027  FFE3   	movff	btemp+8,plusw1
 40081  016BB0  0EF9               	movlw	-7
 40082  016BB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40083  016BB8  0EFA               	movlw	-6
 40084  016BBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40085  016BC0  0EFB               	movlw	-5
 40086  016BC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 40087  016BC8                     l9701:
 40088                           
 40089                           ;stkvar	_a @ sp[(-4)+-8]
 40090  016BC8  0EF7               	movlw	247
 40091  016BCA  24E1               	addwf	fsr1l,w,c
 40092  016BCC  6ED9               	movwf	fsr2l,c
 40093  016BCE  0EFF               	movlw	255
 40094  016BD0  20E2               	addwfc	fsr1h,w,c
 40095  016BD2  6EDA               	movwf	fsr2h,c
 40096  016BD4  50DF               	movf	indf2,w,c
 40097  016BD6  6E0C               	movwf	(btemp+11)^0,c
 40098  016BD8  0E80               	movlw	128
 40099  016BDA  160C               	andwf	(btemp+11)^0,f,c
 40100                           
 40101                           ;stkvar	_aexp @ sp[(-4)+2]
 40102  016BDC  0EFE               	movlw	-2
 40103  016BDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 40104                           
 40105                           ;stkvar	_signs @ sp[(-4)+3]
 40106                           ;stkvar	_aexp @ sp[(-4)+2]
 40107  016BE4  50E1               	movf	fsr1l,w,c
 40108  016BE6  0FFE               	addlw	-2
 40109  016BE8  6ED9               	movwf	fsr2l,c
 40110  016BEA  50E2               	movf	fsr1h,w,c
 40111  016BEC  6EDA               	movwf	fsr2h,c
 40112  016BEE  0EFF               	movlw	255
 40113  016BF0  22DA               	addwfc	fsr2h,f,c
 40114  016BF2  0EFF               	movlw	-1
 40115  016BF4  50E3               	movf	plusw1,w,c
 40116  016BF6  18DE               	xorwf	postinc2,w,c
 40117  016BF8  B4D8               	btfsc	status,2,c
 40118  016BFA  D002               	goto	l9707
 40119                           
 40120                           ;stkvar	_signs @ sp[(-4)+3]
 40121  016BFC  0EFF               	movlw	-1
 40122  016BFE  8CE3               	bsf	plusw1,6,c
 40123  016C00                     l9707:
 40124                           
 40125                           ;stkvar	_a @ sp[(-4)+-8]
 40126  016C00  0EF7               	movlw	247
 40127  016C02  24E1               	addwf	fsr1l,w,c
 40128  016C04  6ED9               	movwf	fsr2l,c
 40129  016C06  0EFF               	movlw	255
 40130  016C08  20E2               	addwfc	fsr1h,w,c
 40131  016C0A  6EDA               	movwf	fsr2h,c
 40132  016C0C  50DF               	movf	indf2,w,c
 40133  016C0E  6E0C               	movwf	(btemp+11)^0,c
 40134  016C10  90D8               	bcf	status,0,c
 40135  016C12  340C               	rlcf	(btemp+11)^0,w,c
 40136  016C14  6E0B               	movwf	(btemp+10)^0,c
 40137                           
 40138                           ;stkvar	_aexp @ sp[(-4)+2]
 40139  016C16  0EFE               	movlw	-2
 40140  016C18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40141                           
 40142                           ;stkvar	_a @ sp[(-4)+-8]
 40143  016C1E  0EF6               	movlw	246
 40144  016C20  24E1               	addwf	fsr1l,w,c
 40145  016C22  6ED9               	movwf	fsr2l,c
 40146  016C24  0EFF               	movlw	255
 40147  016C26  20E2               	addwfc	fsr1h,w,c
 40148  016C28  6EDA               	movwf	fsr2h,c
 40149  016C2A  AEDF               	btfss	indf2,7,c
 40150  016C2C  D002               	goto	l9713
 40151                           
 40152                           ;stkvar	_aexp @ sp[(-4)+2]
 40153  016C2E  0EFE               	movlw	-2
 40154  016C30  80E3               	bsf	plusw1,0,c
 40155  016C32                     l9713:
 40156                           
 40157                           ;stkvar	_aexp @ sp[(-4)+2]
 40158  016C32  0EFE               	movlw	-2
 40159  016C34  50E3               	movf	plusw1,w,c
 40160  016C36  B4D8               	btfsc	status,2,c
 40161  016C38  D027               	goto	l9723
 40162                           
 40163                           ;stkvar	_aexp @ sp[(-4)+2]
 40164  016C3A  0EFE               	movlw	-2
 40165  016C3C  28E3               	incf	plusw1,w,c
 40166  016C3E  A4D8               	btfss	status,2,c
 40167  016C40  D018               	goto	l9719
 40168  016C42  0E00               	movlw	0
 40169  016C44  6E09               	movwf	(btemp+8)^0,c
 40170  016C46  0E00               	movlw	0
 40171  016C48  6E0A               	movwf	(btemp+9)^0,c
 40172  016C4A  0E00               	movlw	0
 40173  016C4C  6E0B               	movwf	(btemp+10)^0,c
 40174  016C4E  0E00               	movlw	0
 40175  016C50  6E0C               	movwf	(btemp+11)^0,c
 40176                           
 40177                           ;stkvar	_a @ sp[(-4)+-8]
 40178  016C52  0EF4               	movlw	-12
 40179  016C54  0060  F027  FFE3   	movff	btemp+8,plusw1
 40180  016C5A  0EF5               	movlw	-11
 40181  016C5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40182  016C62  0EF6               	movlw	-10
 40183  016C64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40184  016C6A  0EF7               	movlw	-9
 40185  016C6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 40186  016C72                     l9719:
 40187                           
 40188                           ;stkvar	_a @ sp[(-4)+-8]
 40189  016C72  0EF6               	movlw	-10
 40190  016C74  8EE3               	bsf	plusw1,7,c
 40191                           
 40192                           ;stkvar	_a @ sp[(-4)+-8]
 40193  016C76  0EF7               	movlw	247
 40194  016C78  24E1               	addwf	fsr1l,w,c
 40195  016C7A  6ED9               	movwf	fsr2l,c
 40196  016C7C  0EFF               	movlw	255
 40197  016C7E  20E2               	addwfc	fsr1h,w,c
 40198  016C80  6EDA               	movwf	fsr2h,c
 40199  016C82  0E00               	movlw	0
 40200  016C84  6EDF               	movwf	indf2,c
 40201  016C86  D018               	goto	l9725
 40202  016C88                     l9723:
 40203  016C88  0E00               	movlw	0
 40204  016C8A  6E09               	movwf	(btemp+8)^0,c
 40205  016C8C  0E00               	movlw	0
 40206  016C8E  6E0A               	movwf	(btemp+9)^0,c
 40207  016C90  0E00               	movlw	0
 40208  016C92  6E0B               	movwf	(btemp+10)^0,c
 40209  016C94  0E00               	movlw	0
 40210  016C96  6E0C               	movwf	(btemp+11)^0,c
 40211                           
 40212                           ;stkvar	_a @ sp[(-4)+-8]
 40213  016C98  0EF4               	movlw	-12
 40214  016C9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 40215  016CA0  0EF5               	movlw	-11
 40216  016CA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40217  016CA8  0EF6               	movlw	-10
 40218  016CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40219  016CB0  0EF7               	movlw	-9
 40220  016CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 40221  016CB8                     l9725:
 40222                           
 40223                           ;stkvar	_bexp @ sp[(-4)+1]
 40224                           ;stkvar	_aexp @ sp[(-4)+2]
 40225  016CB8  50E1               	movf	fsr1l,w,c
 40226  016CBA  0FFE               	addlw	-2
 40227  016CBC  6ED9               	movwf	fsr2l,c
 40228  016CBE  50E2               	movf	fsr1h,w,c
 40229  016CC0  6EDA               	movwf	fsr2h,c
 40230  016CC2  0EFF               	movlw	255
 40231  016CC4  22DA               	addwfc	fsr2h,f,c
 40232  016CC6  0EFD               	movlw	-3
 40233  016CC8  50E3               	movf	plusw1,w,c
 40234  016CCA  5CDE               	subwf	postinc2,w,c
 40235  016CCC  B0D8               	btfsc	status,0,c
 40236  016CCE  D0A4               	goto	l9761
 40237                           
 40238                           ;stkvar	_signs @ sp[(-4)+3]
 40239  016CD0  0EFF               	movlw	-1
 40240  016CD2  ACE3               	btfss	plusw1,6,c
 40241  016CD4  D002               	goto	l9731
 40242                           
 40243                           ;stkvar	_signs @ sp[(-4)+3]
 40244  016CD6  0EFF               	movlw	-1
 40245  016CD8  7EE3               	btg	plusw1,7,c
 40246  016CDA                     l9731:
 40247                           
 40248                           ;stkvar	_bexp @ sp[(-4)+1]
 40249                           ;stkvar	_grs @ sp[(-4)+0]
 40250  016CDA  0EFD               	movlw	-3
 40251  016CDC  006F FF8C  F001    	movff	plusw1,btemp
 40252  016CE2  0EFC               	movlw	-4
 40253  016CE4  0060  F007  FFE3   	movff	btemp,plusw1
 40254                           
 40255                           ;stkvar	_aexp @ sp[(-4)+2]
 40256                           ;stkvar	_bexp @ sp[(-4)+1]
 40257  016CEA  0EFE               	movlw	-2
 40258  016CEC  006F FF8C  F001    	movff	plusw1,btemp
 40259  016CF2  0EFD               	movlw	-3
 40260  016CF4  0060  F007  FFE3   	movff	btemp,plusw1
 40261                           
 40262                           ;stkvar	_grs @ sp[(-4)+0]
 40263                           ;stkvar	_aexp @ sp[(-4)+2]
 40264  016CFA  0EFC               	movlw	-4
 40265  016CFC  006F FF8C  F001    	movff	plusw1,btemp
 40266  016D02  0EFE               	movlw	-2
 40267  016D04  0060  F007  FFE3   	movff	btemp,plusw1
 40268                           
 40269                           ;stkvar	_b @ sp[(-4)+-4]
 40270                           ;stkvar	_grs @ sp[(-4)+0]
 40271  016D0A  0EF8               	movlw	-8
 40272  016D0C  006F FF8C  F001    	movff	plusw1,btemp
 40273  016D12  0EFC               	movlw	-4
 40274  016D14  0060  F007  FFE3   	movff	btemp,plusw1
 40275                           
 40276                           ;stkvar	_a @ sp[(-4)+-8]
 40277                           ;stkvar	_b @ sp[(-4)+-4]
 40278  016D1A  0EF4               	movlw	-12
 40279  016D1C  006F FF8C  F001    	movff	plusw1,btemp
 40280  016D22  0EF8               	movlw	-8
 40281  016D24  0060  F007  FFE3   	movff	btemp,plusw1
 40282                           
 40283                           ;stkvar	_grs @ sp[(-4)+0]
 40284                           ;stkvar	_a @ sp[(-4)+-8]
 40285  016D2A  0EFC               	movlw	-4
 40286  016D2C  006F FF8C  F001    	movff	plusw1,btemp
 40287  016D32  0EF4               	movlw	-12
 40288  016D34  0060  F007  FFE3   	movff	btemp,plusw1
 40289                           
 40290                           ;stkvar	_b @ sp[(-4)+-4]
 40291  016D3A  0EF9               	movlw	249
 40292  016D3C  24E1               	addwf	fsr1l,w,c
 40293  016D3E  6ED9               	movwf	fsr2l,c
 40294  016D40  0EFF               	movlw	255
 40295  016D42  20E2               	addwfc	fsr1h,w,c
 40296  016D44  6EDA               	movwf	fsr2h,c
 40297  016D46  50DF               	movf	indf2,w,c
 40298  016D48  6E0C               	movwf	(btemp+11)^0,c
 40299                           
 40300                           ;stkvar	_grs @ sp[(-4)+0]
 40301  016D4A  0EFC               	movlw	-4
 40302  016D4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 40303                           
 40304                           ;stkvar	_a @ sp[(-4)+-8]
 40305  016D52  0EF5               	movlw	245
 40306  016D54  24E1               	addwf	fsr1l,w,c
 40307  016D56  6ED9               	movwf	fsr2l,c
 40308  016D58  0EFF               	movlw	255
 40309  016D5A  20E2               	addwfc	fsr1h,w,c
 40310  016D5C  6EDA               	movwf	fsr2h,c
 40311                           
 40312                           ;stkvar	_b @ sp[(-4)+-4]
 40313  016D5E  0EF9               	movlw	249
 40314  016D60  24E1               	addwf	fsr1l,w,c
 40315  016D62  6EE9               	movwf	fsr0l,c
 40316  016D64  0EFF               	movlw	255
 40317  016D66  20E2               	addwfc	fsr1h,w,c
 40318  016D68  6EEA               	movwf	fsr0h,c
 40319  016D6A  006F FF7F FFEF     	movff	indf2,indf0
 40320                           
 40321                           ;stkvar	_grs @ sp[(-4)+0]
 40322                           ;stkvar	_a @ sp[(-4)+-8]
 40323  016D70  0EF5               	movlw	245
 40324  016D72  24E1               	addwf	fsr1l,w,c
 40325  016D74  6ED9               	movwf	fsr2l,c
 40326  016D76  0EFF               	movlw	255
 40327  016D78  20E2               	addwfc	fsr1h,w,c
 40328  016D7A  6EDA               	movwf	fsr2h,c
 40329  016D7C  0EFC               	movlw	-4
 40330  016D7E  006F FF8F FFDF     	movff	plusw1,indf2
 40331                           
 40332                           ;stkvar	_b @ sp[(-4)+-4]
 40333  016D84  0EFA               	movlw	250
 40334  016D86  24E1               	addwf	fsr1l,w,c
 40335  016D88  6ED9               	movwf	fsr2l,c
 40336  016D8A  0EFF               	movlw	255
 40337  016D8C  20E2               	addwfc	fsr1h,w,c
 40338  016D8E  6EDA               	movwf	fsr2h,c
 40339  016D90  50DF               	movf	indf2,w,c
 40340  016D92  6E0C               	movwf	(btemp+11)^0,c
 40341                           
 40342                           ;stkvar	_grs @ sp[(-4)+0]
 40343  016D94  0EFC               	movlw	-4
 40344  016D96  0060  F033  FFE3   	movff	btemp+11,plusw1
 40345                           
 40346                           ;stkvar	_a @ sp[(-4)+-8]
 40347  016D9C  0EF6               	movlw	246
 40348  016D9E  24E1               	addwf	fsr1l,w,c
 40349  016DA0  6ED9               	movwf	fsr2l,c
 40350  016DA2  0EFF               	movlw	255
 40351  016DA4  20E2               	addwfc	fsr1h,w,c
 40352  016DA6  6EDA               	movwf	fsr2h,c
 40353                           
 40354                           ;stkvar	_b @ sp[(-4)+-4]
 40355  016DA8  0EFA               	movlw	250
 40356  016DAA  24E1               	addwf	fsr1l,w,c
 40357  016DAC  6EE9               	movwf	fsr0l,c
 40358  016DAE  0EFF               	movlw	255
 40359  016DB0  20E2               	addwfc	fsr1h,w,c
 40360  016DB2  6EEA               	movwf	fsr0h,c
 40361  016DB4  006F FF7F FFEF     	movff	indf2,indf0
 40362                           
 40363                           ;stkvar	_grs @ sp[(-4)+0]
 40364                           ;stkvar	_a @ sp[(-4)+-8]
 40365  016DBA  0EF6               	movlw	246
 40366  016DBC  24E1               	addwf	fsr1l,w,c
 40367  016DBE  6ED9               	movwf	fsr2l,c
 40368  016DC0  0EFF               	movlw	255
 40369  016DC2  20E2               	addwfc	fsr1h,w,c
 40370  016DC4  6EDA               	movwf	fsr2h,c
 40371  016DC6  0EFC               	movlw	-4
 40372  016DC8  006F FF8F FFDF     	movff	plusw1,indf2
 40373                           
 40374                           ;stkvar	_b @ sp[(-4)+-4]
 40375  016DCE  0EFB               	movlw	251
 40376  016DD0  24E1               	addwf	fsr1l,w,c
 40377  016DD2  6ED9               	movwf	fsr2l,c
 40378  016DD4  0EFF               	movlw	255
 40379  016DD6  20E2               	addwfc	fsr1h,w,c
 40380  016DD8  6EDA               	movwf	fsr2h,c
 40381  016DDA  50DF               	movf	indf2,w,c
 40382  016DDC  6E0C               	movwf	(btemp+11)^0,c
 40383                           
 40384                           ;stkvar	_grs @ sp[(-4)+0]
 40385  016DDE  0EFC               	movlw	-4
 40386  016DE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 40387                           
 40388                           ;stkvar	_a @ sp[(-4)+-8]
 40389  016DE6  0EF7               	movlw	247
 40390  016DE8  24E1               	addwf	fsr1l,w,c
 40391  016DEA  6ED9               	movwf	fsr2l,c
 40392  016DEC  0EFF               	movlw	255
 40393  016DEE  20E2               	addwfc	fsr1h,w,c
 40394  016DF0  6EDA               	movwf	fsr2h,c
 40395                           
 40396                           ;stkvar	_b @ sp[(-4)+-4]
 40397  016DF2  0EFB               	movlw	251
 40398  016DF4  24E1               	addwf	fsr1l,w,c
 40399  016DF6  6EE9               	movwf	fsr0l,c
 40400  016DF8  0EFF               	movlw	255
 40401  016DFA  20E2               	addwfc	fsr1h,w,c
 40402  016DFC  6EEA               	movwf	fsr0h,c
 40403  016DFE  006F FF7F FFEF     	movff	indf2,indf0
 40404                           
 40405                           ;stkvar	_grs @ sp[(-4)+0]
 40406                           ;stkvar	_a @ sp[(-4)+-8]
 40407  016E04  0EF7               	movlw	247
 40408  016E06  24E1               	addwf	fsr1l,w,c
 40409  016E08  6ED9               	movwf	fsr2l,c
 40410  016E0A  0EFF               	movlw	255
 40411  016E0C  20E2               	addwfc	fsr1h,w,c
 40412  016E0E  6EDA               	movwf	fsr2h,c
 40413  016E10  0EFC               	movlw	-4
 40414  016E12  006F FF8F FFDF     	movff	plusw1,indf2
 40415  016E18                     l9761:
 40416                           
 40417                           ;stkvar	_grs @ sp[(-4)+0]
 40418  016E18  0EFC               	movlw	-4
 40419  016E1A  6AE3               	clrf	plusw1,c
 40420                           
 40421                           ;stkvar	_aexp @ sp[(-4)+2]
 40422  016E1C  0EFE               	movlw	-2
 40423  016E1E  50E3               	movf	plusw1,w,c
 40424  016E20  6E0B               	movwf	(btemp+10)^0,c
 40425  016E22  6A0C               	clrf	(btemp+11)^0,c
 40426                           
 40427                           ;stkvar	_bexp @ sp[(-4)+1]
 40428  016E24  0EFD               	movlw	-3
 40429  016E26  50E3               	movf	plusw1,w,c
 40430  016E28  5E0B               	subwf	(btemp+10)^0,f,c
 40431  016E2A  0E00               	movlw	0
 40432  016E2C  5A0C               	subwfb	(btemp+11)^0,f,c
 40433  016E2E  BE0C               	btfsc	(btemp+11)^0,7,c
 40434  016E30  D062               	goto	l9785
 40435  016E32  500C               	movf	(btemp+11)^0,w,c
 40436  016E34  E104               	bnz	u7220
 40437  016E36  0E1A               	movlw	26
 40438  016E38  5C0B               	subwf	(btemp+10)^0,w,c
 40439  016E3A  A0D8               	btfss	status,0,c
 40440  016E3C  D05C               	goto	l9785
 40441  016E3E                     u7220:
 40442                           
 40443                           ;stkvar	_b @ sp[(-4)+-4]
 40444  016E3E  0EF8               	movlw	-8
 40445  016E40  50E3               	movf	plusw1,w,c
 40446  016E42  E10A               	bnz	u7231
 40447  016E44  0EF9               	movlw	-7
 40448  016E46  50E3               	movf	plusw1,w,c
 40449  016E48  E107               	bnz	u7231
 40450  016E4A  0EFA               	movlw	-6
 40451  016E4C  50E3               	movf	plusw1,w,c
 40452  016E4E  E104               	bnz	u7231
 40453  016E50  0EFB               	movlw	-5
 40454  016E52  50E3               	movf	plusw1,w,c
 40455  016E54  B4D8               	btfsc	status,2,c
 40456  016E56  D003               	goto	u7230
 40457  016E58                     u7231:
 40458  016E58  6A0C               	clrf	(btemp+11)^0,c
 40459  016E5A  2A0C               	incf	(btemp+11)^0,f,c
 40460  016E5C  D001               	goto	u7248
 40461  016E5E                     u7230:
 40462  016E5E  6A0C               	clrf	(btemp+11)^0,c
 40463  016E60                     u7248:
 40464                           
 40465                           ;stkvar	_grs @ sp[(-4)+0]
 40466  016E60  0EFC               	movlw	-4
 40467  016E62  0060  F033  FFE3   	movff	btemp+11,plusw1
 40468                           
 40469                           ;stkvar	_b @ sp[(-4)+-4]
 40470  016E68  0EF8               	movlw	-8
 40471  016E6A  6AE3               	clrf	plusw1,c
 40472  016E6C  0EF9               	movlw	-7
 40473  016E6E  6AE3               	clrf	plusw1,c
 40474  016E70  0EFA               	movlw	-6
 40475  016E72  6AE3               	clrf	plusw1,c
 40476  016E74  0EFB               	movlw	-5
 40477  016E76  6AE3               	clrf	plusw1,c
 40478                           
 40479                           ;stkvar	_aexp @ sp[(-4)+2]
 40480                           ;stkvar	_bexp @ sp[(-4)+1]
 40481  016E78  0EFE               	movlw	-2
 40482  016E7A  006F FF8C  F001    	movff	plusw1,btemp
 40483  016E80  0EFD               	movlw	-3
 40484  016E82  0060  F007  FFE3   	movff	btemp,plusw1
 40485  016E88  D042               	goto	u7280
 40486  016E8A                     l9771:
 40487                           
 40488                           ;stkvar	_grs @ sp[(-4)+0]
 40489  016E8A  0EFC               	movlw	-4
 40490  016E8C  A0E3               	btfss	plusw1,0,c
 40491  016E8E  D00D               	goto	l9775
 40492                           
 40493                           ;stkvar	_grs @ sp[(-4)+0]
 40494  016E90  0EFC               	movlw	-4
 40495  016E92  006F FF8C  F00C    	movff	plusw1,btemp+11
 40496  016E98  90D8               	bcf	status,0,c
 40497  016E9A  320C               	rrcf	(btemp+11)^0,f,c
 40498  016E9C  0E01               	movlw	1
 40499  016E9E  120C               	iorwf	(btemp+11)^0,f,c
 40500                           
 40501                           ;stkvar	_grs @ sp[(-4)+0]
 40502  016EA0  0EFC               	movlw	-4
 40503  016EA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 40504  016EA8  D009               	goto	l9777
 40505  016EAA                     l9775:
 40506                           
 40507                           ;stkvar	_grs @ sp[(-4)+0]
 40508  016EAA  50E1               	movf	fsr1l,w,c
 40509  016EAC  0FFC               	addlw	-4
 40510  016EAE  6ED9               	movwf	fsr2l,c
 40511  016EB0  50E2               	movf	fsr1h,w,c
 40512  016EB2  6EDA               	movwf	fsr2h,c
 40513  016EB4  0EFF               	movlw	255
 40514  016EB6  22DA               	addwfc	fsr2h,f,c
 40515  016EB8  90D8               	bcf	status,0,c
 40516  016EBA  32DF               	rrcf	indf2,f,c
 40517  016EBC                     l9777:
 40518                           
 40519                           ;stkvar	_b @ sp[(-4)+-4]
 40520  016EBC  0EF8               	movlw	-8
 40521  016EBE  A0E3               	btfss	plusw1,0,c
 40522  016EC0  D002               	goto	l9781
 40523                           
 40524                           ;stkvar	_grs @ sp[(-4)+0]
 40525  016EC2  0EFC               	movlw	-4
 40526  016EC4  8EE3               	bsf	plusw1,7,c
 40527  016EC6                     l9781:
 40528  016EC6  0E01               	movlw	1
 40529  016EC8  6E0C               	movwf	(btemp+11)^0,c
 40530                           
 40531                           ;stkvar	_b @ sp[(-4)+-4]
 40532  016ECA  50E1               	movf	fsr1l,w,c
 40533  016ECC  0FF8               	addlw	-8
 40534  016ECE  6ED9               	movwf	fsr2l,c
 40535  016ED0  50E2               	movf	fsr1h,w,c
 40536  016ED2  6EDA               	movwf	fsr2h,c
 40537  016ED4  0EFF               	movlw	255
 40538  016ED6  22DA               	addwfc	fsr2h,f,c
 40539  016ED8  280C               	incf	(btemp+11)^0,w,c
 40540  016EDA  52DE               	movf	postinc2,f,c
 40541  016EDC  D008               	goto	u7270
 40542  016EDE                     u7275:
 40543  016EDE  52DE               	movf	postinc2,f,c
 40544  016EE0  90D8               	bcf	status,0,c
 40545  016EE2  BEDC               	btfsc	preinc2,7,c
 40546  016EE4  80D8               	bsf	status,0,c
 40547  016EE6  32DD               	rrcf	postdec2,f,c
 40548  016EE8  32DD               	rrcf	postdec2,f,c
 40549  016EEA  32DD               	rrcf	postdec2,f,c
 40550  016EEC  32DE               	rrcf	postinc2,f,c
 40551  016EEE                     u7270:
 40552  016EEE  2EE8               	decfsz	wreg,f,c
 40553  016EF0  D7F6               	goto	u7275
 40554                           
 40555                           ;stkvar	_bexp @ sp[(-4)+1]
 40556  016EF2  0EFD               	movlw	-3
 40557  016EF4  2AE3               	incf	plusw1,f,c
 40558  016EF6                     l9785:
 40559                           
 40560                           ;stkvar	_aexp @ sp[(-4)+2]
 40561                           ;stkvar	_bexp @ sp[(-4)+1]
 40562  016EF6  50E1               	movf	fsr1l,w,c
 40563  016EF8  0FFD               	addlw	-3
 40564  016EFA  6ED9               	movwf	fsr2l,c
 40565  016EFC  50E2               	movf	fsr1h,w,c
 40566  016EFE  6EDA               	movwf	fsr2h,c
 40567  016F00  0EFF               	movlw	255
 40568  016F02  22DA               	addwfc	fsr2h,f,c
 40569  016F04  0EFE               	movlw	-2
 40570  016F06  50E3               	movf	plusw1,w,c
 40571  016F08  5CDE               	subwf	postinc2,w,c
 40572  016F0A  A0D8               	btfss	status,0,c
 40573  016F0C  D7BE               	goto	l9771
 40574  016F0E                     u7280:
 40575                           
 40576                           ;stkvar	_signs @ sp[(-4)+3]
 40577  016F0E  0EFF               	movlw	-1
 40578  016F10  BCE3               	btfsc	plusw1,6,c
 40579  016F12  D066               	goto	l9813
 40580                           
 40581                           ;stkvar	_bexp @ sp[(-4)+1]
 40582  016F14  0EFD               	movlw	-3
 40583  016F16  50E3               	movf	plusw1,w,c
 40584  016F18  B4D8               	btfsc	status,2,c
 40585  016F1A  D0F2               	goto	u7380
 40586                           
 40587                           ;stkvar	_a @ sp[(-4)+-8]
 40588                           ;stkvar	_b @ sp[(-4)+-4]
 40589  016F1C  0EF8               	movlw	-8
 40590  016F1E  50E3               	movf	plusw1,w,c
 40591  016F20  6E01               	movwf	btemp^0,c
 40592  016F22  0EF4               	movlw	-12
 40593  016F24  50E3               	movf	plusw1,w,c
 40594  016F26  2601               	addwf	btemp^0,f,c
 40595  016F28  0EF8               	movlw	-8
 40596  016F2A  0060  F007  FFE3   	movff	btemp,plusw1
 40597  016F30  0EF9               	movlw	-7
 40598  016F32  50E3               	movf	plusw1,w,c
 40599  016F34  6E01               	movwf	btemp^0,c
 40600  016F36  0EF5               	movlw	-11
 40601  016F38  50E3               	movf	plusw1,w,c
 40602  016F3A  2201               	addwfc	btemp^0,f,c
 40603  016F3C  0EF9               	movlw	-7
 40604  016F3E  0060  F007  FFE3   	movff	btemp,plusw1
 40605  016F44  0EFA               	movlw	-6
 40606  016F46  50E3               	movf	plusw1,w,c
 40607  016F48  6E01               	movwf	btemp^0,c
 40608  016F4A  0EF6               	movlw	-10
 40609  016F4C  50E3               	movf	plusw1,w,c
 40610  016F4E  2201               	addwfc	btemp^0,f,c
 40611  016F50  0EFA               	movlw	-6
 40612  016F52  0060  F007  FFE3   	movff	btemp,plusw1
 40613  016F58  0EFB               	movlw	-5
 40614  016F5A  50E3               	movf	plusw1,w,c
 40615  016F5C  6E01               	movwf	btemp^0,c
 40616  016F5E  0EF7               	movlw	-9
 40617  016F60  50E3               	movf	plusw1,w,c
 40618  016F62  2201               	addwfc	btemp^0,f,c
 40619  016F64  0EFB               	movlw	-5
 40620  016F66  0060  F007  FFE3   	movff	btemp,plusw1
 40621                           
 40622                           ;stkvar	_b @ sp[(-4)+-4]
 40623  016F6C  0EFB               	movlw	-5
 40624  016F6E  A0E3               	btfss	plusw1,0,c
 40625  016F70  D101               	goto	u7420
 40626                           
 40627                           ;stkvar	_grs @ sp[(-4)+0]
 40628  016F72  0EFC               	movlw	-4
 40629  016F74  A0E3               	btfss	plusw1,0,c
 40630  016F76  D00D               	goto	l9803
 40631                           
 40632                           ;stkvar	_grs @ sp[(-4)+0]
 40633  016F78  0EFC               	movlw	-4
 40634  016F7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 40635  016F80  90D8               	bcf	status,0,c
 40636  016F82  320C               	rrcf	(btemp+11)^0,f,c
 40637  016F84  0E01               	movlw	1
 40638  016F86  120C               	iorwf	(btemp+11)^0,f,c
 40639                           
 40640                           ;stkvar	_grs @ sp[(-4)+0]
 40641  016F88  0EFC               	movlw	-4
 40642  016F8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 40643  016F90  D009               	goto	l9805
 40644  016F92                     l9803:
 40645                           
 40646                           ;stkvar	_grs @ sp[(-4)+0]
 40647  016F92  50E1               	movf	fsr1l,w,c
 40648  016F94  0FFC               	addlw	-4
 40649  016F96  6ED9               	movwf	fsr2l,c
 40650  016F98  50E2               	movf	fsr1h,w,c
 40651  016F9A  6EDA               	movwf	fsr2h,c
 40652  016F9C  0EFF               	movlw	255
 40653  016F9E  22DA               	addwfc	fsr2h,f,c
 40654  016FA0  90D8               	bcf	status,0,c
 40655  016FA2  32DF               	rrcf	indf2,f,c
 40656  016FA4                     l9805:
 40657                           
 40658                           ;stkvar	_b @ sp[(-4)+-4]
 40659  016FA4  0EF8               	movlw	-8
 40660  016FA6  A0E3               	btfss	plusw1,0,c
 40661  016FA8  D002               	goto	l9809
 40662                           
 40663                           ;stkvar	_grs @ sp[(-4)+0]
 40664  016FAA  0EFC               	movlw	-4
 40665  016FAC  8EE3               	bsf	plusw1,7,c
 40666  016FAE                     l9809:
 40667  016FAE  0E01               	movlw	1
 40668  016FB0  6E0C               	movwf	(btemp+11)^0,c
 40669                           
 40670                           ;stkvar	_b @ sp[(-4)+-4]
 40671  016FB2  50E1               	movf	fsr1l,w,c
 40672  016FB4  0FF8               	addlw	-8
 40673  016FB6  6ED9               	movwf	fsr2l,c
 40674  016FB8  50E2               	movf	fsr1h,w,c
 40675  016FBA  6EDA               	movwf	fsr2h,c
 40676  016FBC  0EFF               	movlw	255
 40677  016FBE  22DA               	addwfc	fsr2h,f,c
 40678  016FC0  280C               	incf	(btemp+11)^0,w,c
 40679  016FC2  52DE               	movf	postinc2,f,c
 40680  016FC4  D008               	goto	u7340
 40681  016FC6                     u7345:
 40682  016FC6  52DE               	movf	postinc2,f,c
 40683  016FC8  90D8               	bcf	status,0,c
 40684  016FCA  BEDC               	btfsc	preinc2,7,c
 40685  016FCC  80D8               	bsf	status,0,c
 40686  016FCE  32DD               	rrcf	postdec2,f,c
 40687  016FD0  32DD               	rrcf	postdec2,f,c
 40688  016FD2  32DD               	rrcf	postdec2,f,c
 40689  016FD4  32DE               	rrcf	postinc2,f,c
 40690  016FD6                     u7340:
 40691  016FD6  2EE8               	decfsz	wreg,f,c
 40692  016FD8  D7F6               	goto	u7345
 40693                           
 40694                           ;stkvar	_bexp @ sp[(-4)+1]
 40695  016FDA  0EFD               	movlw	-3
 40696  016FDC  2AE3               	incf	plusw1,f,c
 40697  016FDE  D0CA               	goto	u7420
 40698  016FE0                     l9813:
 40699                           
 40700                           ;stkvar	_a @ sp[(-4)+-8]
 40701                           ;stkvar	_b @ sp[(-4)+-4]
 40702  016FE0  50E1               	movf	fsr1l,w,c
 40703  016FE2  0FF8               	addlw	-8
 40704  016FE4  6ED9               	movwf	fsr2l,c
 40705  016FE6  50E2               	movf	fsr1h,w,c
 40706  016FE8  6EDA               	movwf	fsr2h,c
 40707  016FEA  0EFF               	movlw	255
 40708  016FEC  22DA               	addwfc	fsr2h,f,c
 40709  016FEE  0EF4               	movlw	-12
 40710  016FF0  50E3               	movf	plusw1,w,c
 40711  016FF2  5CDE               	subwf	postinc2,w,c
 40712  016FF4  0EF5               	movlw	-11
 40713  016FF6  50E3               	movf	plusw1,w,c
 40714  016FF8  58DE               	subwfb	postinc2,w,c
 40715  016FFA  0EF6               	movlw	-10
 40716  016FFC  50E3               	movf	plusw1,w,c
 40717  016FFE  58DE               	subwfb	postinc2,w,c
 40718  017000  50DE               	movf	postinc2,w,c
 40719  017002  0A80               	xorlw	128
 40720  017004  6E01               	movwf	btemp^0,c
 40721  017006  0EF7               	movlw	-9
 40722  017008  50E3               	movf	plusw1,w,c
 40723  01700A  0A80               	xorlw	128
 40724  01700C  5801               	subwfb	btemp^0,w,c
 40725  01700E  B0D8               	btfsc	status,0,c
 40726  017010  D053               	goto	l9825
 40727                           
 40728                           ;stkvar	_b @ sp[(-4)+-4]
 40729                           ;stkvar	_a @ sp[(-4)+-8]
 40730  017012  0EF4               	movlw	-12
 40731  017014  006F FF8C  F009    	movff	plusw1,btemp+8
 40732  01701A  0EF5               	movlw	-11
 40733  01701C  006F FF8C  F00A    	movff	plusw1,btemp+9
 40734  017022  0EF6               	movlw	-10
 40735  017024  006F FF8C  F00B    	movff	plusw1,btemp+10
 40736  01702A  0EF7               	movlw	-9
 40737  01702C  006F FF8C  F00C    	movff	plusw1,btemp+11
 40738  017032  0EF8               	movlw	-8
 40739  017034  50E3               	movf	plusw1,w,c
 40740  017036  5E09               	subwf	(btemp+8)^0,f,c
 40741  017038  0EF9               	movlw	-7
 40742  01703A  50E3               	movf	plusw1,w,c
 40743  01703C  5A0A               	subwfb	(btemp+9)^0,f,c
 40744  01703E  0EFA               	movlw	-6
 40745  017040  50E3               	movf	plusw1,w,c
 40746  017042  5A0B               	subwfb	(btemp+10)^0,f,c
 40747  017044  0EFB               	movlw	-5
 40748  017046  50E3               	movf	plusw1,w,c
 40749  017048  5A0C               	subwfb	(btemp+11)^0,f,c
 40750  01704A  0EFF               	movlw	255
 40751  01704C  2409               	addwf	(btemp+8)^0,w,c
 40752  01704E  6E05               	movwf	(btemp+4)^0,c
 40753  017050  0EFF               	movlw	255
 40754  017052  200A               	addwfc	(btemp+9)^0,w,c
 40755  017054  6E06               	movwf	(btemp+5)^0,c
 40756  017056  0EFF               	movlw	255
 40757  017058  200B               	addwfc	(btemp+10)^0,w,c
 40758  01705A  6E07               	movwf	(btemp+6)^0,c
 40759  01705C  0EFF               	movlw	255
 40760  01705E  200C               	addwfc	(btemp+11)^0,w,c
 40761  017060  6E08               	movwf	(btemp+7)^0,c
 40762                           
 40763                           ;stkvar	_b @ sp[(-4)+-4]
 40764  017062  0EF8               	movlw	-8
 40765  017064  0060  F017  FFE3   	movff	btemp+4,plusw1
 40766  01706A  0EF9               	movlw	-7
 40767  01706C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 40768  017072  0EFA               	movlw	-6
 40769  017074  0060  F01F  FFE3   	movff	btemp+6,plusw1
 40770  01707A  0EFB               	movlw	-5
 40771  01707C  0060  F023  FFE3   	movff	btemp+7,plusw1
 40772                           
 40773                           ;stkvar	_signs @ sp[(-4)+3]
 40774  017082  0EFF               	movlw	-1
 40775  017084  7EE3               	btg	plusw1,7,c
 40776                           
 40777                           ;stkvar	_grs @ sp[(-4)+0]
 40778  017086  0EFC               	movlw	-4
 40779  017088  50E3               	movf	plusw1,w,c
 40780  01708A  0800               	sublw	0
 40781  01708C  6E0C               	movwf	(btemp+11)^0,c
 40782                           
 40783                           ;stkvar	_grs @ sp[(-4)+0]
 40784  01708E  0EFC               	movlw	-4
 40785  017090  0060  F033  FFE3   	movff	btemp+11,plusw1
 40786                           
 40787                           ;stkvar	_grs @ sp[(-4)+0]
 40788  017096  0EFC               	movlw	-4
 40789  017098  50E3               	movf	plusw1,w,c
 40790  01709A  A4D8               	btfss	status,2,c
 40791  01709C  D020               	goto	l9827
 40792                           
 40793                           ;stkvar	_b @ sp[(-4)+-4]
 40794  01709E  50E1               	movf	fsr1l,w,c
 40795  0170A0  0FF8               	addlw	-8
 40796  0170A2  6ED9               	movwf	fsr2l,c
 40797  0170A4  50E2               	movf	fsr1h,w,c
 40798  0170A6  6EDA               	movwf	fsr2h,c
 40799  0170A8  0EFF               	movlw	255
 40800  0170AA  22DA               	addwfc	fsr2h,f,c
 40801  0170AC  2ADE               	incf	postinc2,f,c
 40802  0170AE  0E00               	movlw	0
 40803  0170B0  22DE               	addwfc	postinc2,f,c
 40804  0170B2  22DE               	addwfc	postinc2,f,c
 40805  0170B4  22DE               	addwfc	postinc2,f,c
 40806  0170B6  D013               	goto	l9827
 40807  0170B8                     l9825:
 40808                           
 40809                           ;stkvar	_a @ sp[(-4)+-8]
 40810                           ;stkvar	_b @ sp[(-4)+-4]
 40811  0170B8  50E1               	movf	fsr1l,w,c
 40812  0170BA  0FF8               	addlw	-8
 40813  0170BC  6ED9               	movwf	fsr2l,c
 40814  0170BE  50E2               	movf	fsr1h,w,c
 40815  0170C0  6EDA               	movwf	fsr2h,c
 40816  0170C2  0EFF               	movlw	255
 40817  0170C4  22DA               	addwfc	fsr2h,f,c
 40818  0170C6  0EF4               	movlw	-12
 40819  0170C8  50E3               	movf	plusw1,w,c
 40820  0170CA  5EDE               	subwf	postinc2,f,c
 40821  0170CC  0EF5               	movlw	-11
 40822  0170CE  50E3               	movf	plusw1,w,c
 40823  0170D0  5ADE               	subwfb	postinc2,f,c
 40824  0170D2  0EF6               	movlw	-10
 40825  0170D4  50E3               	movf	plusw1,w,c
 40826  0170D6  5ADE               	subwfb	postinc2,f,c
 40827  0170D8  0EF7               	movlw	-9
 40828  0170DA  50E3               	movf	plusw1,w,c
 40829  0170DC  5ADE               	subwfb	postinc2,f,c
 40830  0170DE                     l9827:
 40831                           
 40832                           ;stkvar	_b @ sp[(-4)+-4]
 40833  0170DE  0EF8               	movlw	-8
 40834  0170E0  50E3               	movf	plusw1,w,c
 40835  0170E2  E145               	bnz	l9849
 40836  0170E4  0EF9               	movlw	-7
 40837  0170E6  50E3               	movf	plusw1,w,c
 40838  0170E8  E142               	bnz	l9849
 40839  0170EA  0EFA               	movlw	-6
 40840  0170EC  50E3               	movf	plusw1,w,c
 40841  0170EE  E13F               	bnz	l9849
 40842  0170F0  0EFB               	movlw	-5
 40843  0170F2  50E3               	movf	plusw1,w,c
 40844  0170F4  A4D8               	btfss	status,2,c
 40845  0170F6  D03B               	goto	l9849
 40846                           
 40847                           ;stkvar	_grs @ sp[(-4)+0]
 40848  0170F8  0EFC               	movlw	-4
 40849  0170FA  50E3               	movf	plusw1,w,c
 40850  0170FC  A4D8               	btfss	status,2,c
 40851  0170FE  D037               	goto	l9849
 40852  017100                     u7380:
 40853  017100  0E00               	movlw	0
 40854  017102  6E01               	movwf	btemp^0,c
 40855  017104  0E00               	movlw	0
 40856  017106  6E02               	movwf	(btemp+1)^0,c
 40857  017108  0E00               	movlw	0
 40858  01710A  6E03               	movwf	(btemp+2)^0,c
 40859  01710C  0E00               	movlw	0
 40860  01710E  6E04               	movwf	(btemp+3)^0,c
 40861  017110  D0C6               	goto	l3234
 40862  017112                     l9835:
 40863                           
 40864                           ;stkvar	_b @ sp[(-4)+-4]
 40865  017112  90D8               	bcf	status,0,c
 40866  017114  0EF8               	movlw	-8
 40867  017116  36E3               	rlcf	plusw1,f,c
 40868  017118  0EF9               	movlw	-7
 40869  01711A  36E3               	rlcf	plusw1,f,c
 40870  01711C  0EFA               	movlw	-6
 40871  01711E  36E3               	rlcf	plusw1,f,c
 40872  017120  0EFB               	movlw	-5
 40873  017122  36E3               	rlcf	plusw1,f,c
 40874                           
 40875                           ;stkvar	_grs @ sp[(-4)+0]
 40876  017124  0EFC               	movlw	-4
 40877  017126  AEE3               	btfss	plusw1,7,c
 40878  017128  D002               	goto	l3246
 40879                           
 40880                           ;stkvar	_b @ sp[(-4)+-4]
 40881  01712A  0EF8               	movlw	-8
 40882  01712C  80E3               	bsf	plusw1,0,c
 40883  01712E                     l3246:
 40884                           
 40885                           ;stkvar	_grs @ sp[(-4)+0]
 40886  01712E  0EFC               	movlw	-4
 40887  017130  A0E3               	btfss	plusw1,0,c
 40888  017132  D00E               	goto	l9843
 40889                           
 40890                           ;stkvar	_grs @ sp[(-4)+0]
 40891  017134  0EFC               	movlw	-4
 40892  017136  006F FF8C  F00C    	movff	plusw1,btemp+11
 40893  01713C  90D8               	bcf	status,0,c
 40894  01713E  340C               	rlcf	(btemp+11)^0,w,c
 40895  017140  6E0B               	movwf	(btemp+10)^0,c
 40896  017142  0E01               	movlw	1
 40897  017144  120B               	iorwf	(btemp+10)^0,f,c
 40898                           
 40899                           ;stkvar	_grs @ sp[(-4)+0]
 40900  017146  0EFC               	movlw	-4
 40901  017148  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40902  01714E  D009               	goto	l9845
 40903  017150                     l9843:
 40904                           
 40905                           ;stkvar	_grs @ sp[(-4)+0]
 40906  017150  50E1               	movf	fsr1l,w,c
 40907  017152  0FFC               	addlw	-4
 40908  017154  6ED9               	movwf	fsr2l,c
 40909  017156  50E2               	movf	fsr1h,w,c
 40910  017158  6EDA               	movwf	fsr2h,c
 40911  01715A  0EFF               	movlw	255
 40912  01715C  22DA               	addwfc	fsr2h,f,c
 40913  01715E  90D8               	bcf	status,0,c
 40914  017160  36DF               	rlcf	indf2,f,c
 40915  017162                     l9845:
 40916                           
 40917                           ;stkvar	_bexp @ sp[(-4)+1]
 40918  017162  0EFD               	movlw	-3
 40919  017164  50E3               	movf	plusw1,w,c
 40920  017166  B4D8               	btfsc	status,2,c
 40921  017168  D002               	goto	l9849
 40922                           
 40923                           ;stkvar	_bexp @ sp[(-4)+1]
 40924  01716A  0EFD               	movlw	-3
 40925  01716C  06E3               	decf	plusw1,f,c
 40926  01716E                     l9849:
 40927                           
 40928                           ;stkvar	_b @ sp[(-4)+-4]
 40929  01716E  0EFA               	movlw	-6
 40930  017170  AEE3               	btfss	plusw1,7,c
 40931  017172  D7CF               	goto	l9835
 40932  017174                     u7420:
 40933                           
 40934                           ;stkvar	_aexp @ sp[(-4)+2]
 40935  017174  0EFE               	movlw	-2
 40936  017176  6AE3               	clrf	plusw1,c
 40937                           
 40938                           ;stkvar	_grs @ sp[(-4)+0]
 40939  017178  0EFC               	movlw	-4
 40940  01717A  AEE3               	btfss	plusw1,7,c
 40941  01717C  D00F               	goto	l9863
 40942                           
 40943                           ;stkvar	_grs @ sp[(-4)+0]
 40944  01717E  0EFC               	movlw	-4
 40945  017180  006F FF8C  F00C    	movff	plusw1,btemp+11
 40946  017186  0E7F               	movlw	127
 40947  017188  160C               	andwf	(btemp+11)^0,f,c
 40948  01718A  B4D8               	btfsc	status,2,c
 40949  01718C  D004               	goto	l9859
 40950  01718E                     u7440:
 40951                           
 40952                           ;stkvar	_aexp @ sp[(-4)+2]
 40953  01718E  0EFE               	movlw	-2
 40954  017190  6AE3               	clrf	plusw1,c
 40955  017192  2AE3               	incf	plusw1,f,c
 40956  017194  D003               	goto	l9863
 40957  017196                     l9859:
 40958                           
 40959                           ;stkvar	_b @ sp[(-4)+-4]
 40960  017196  0EF8               	movlw	-8
 40961  017198  B0E3               	btfsc	plusw1,0,c
 40962  01719A  D7F9               	goto	u7440
 40963  01719C                     l9863:
 40964                           
 40965                           ;stkvar	_aexp @ sp[(-4)+2]
 40966  01719C  0EFE               	movlw	-2
 40967  01719E  50E3               	movf	plusw1,w,c
 40968  0171A0  B4D8               	btfsc	status,2,c
 40969  0171A2  D02B               	goto	l9875
 40970                           
 40971                           ;stkvar	_b @ sp[(-4)+-4]
 40972  0171A4  50E1               	movf	fsr1l,w,c
 40973  0171A6  0FF8               	addlw	-8
 40974  0171A8  6ED9               	movwf	fsr2l,c
 40975  0171AA  50E2               	movf	fsr1h,w,c
 40976  0171AC  6EDA               	movwf	fsr2h,c
 40977  0171AE  0EFF               	movlw	255
 40978  0171B0  22DA               	addwfc	fsr2h,f,c
 40979  0171B2  2ADE               	incf	postinc2,f,c
 40980  0171B4  0E00               	movlw	0
 40981  0171B6  22DE               	addwfc	postinc2,f,c
 40982  0171B8  22DE               	addwfc	postinc2,f,c
 40983  0171BA  22DE               	addwfc	postinc2,f,c
 40984                           
 40985                           ;stkvar	_b @ sp[(-4)+-4]
 40986  0171BC  0EFB               	movlw	-5
 40987  0171BE  A0E3               	btfss	plusw1,0,c
 40988  0171C0  D01C               	goto	l9875
 40989  0171C2  0E01               	movlw	1
 40990  0171C4  6E0C               	movwf	(btemp+11)^0,c
 40991                           
 40992                           ;stkvar	_b @ sp[(-4)+-4]
 40993  0171C6  50E1               	movf	fsr1l,w,c
 40994  0171C8  0FF8               	addlw	-8
 40995  0171CA  6ED9               	movwf	fsr2l,c
 40996  0171CC  50E2               	movf	fsr1h,w,c
 40997  0171CE  6EDA               	movwf	fsr2h,c
 40998  0171D0  0EFF               	movlw	255
 40999  0171D2  22DA               	addwfc	fsr2h,f,c
 41000  0171D4  280C               	incf	(btemp+11)^0,w,c
 41001  0171D6  52DE               	movf	postinc2,f,c
 41002  0171D8  D008               	goto	u7480
 41003  0171DA                     u7485:
 41004  0171DA  52DE               	movf	postinc2,f,c
 41005  0171DC  90D8               	bcf	status,0,c
 41006  0171DE  BEDC               	btfsc	preinc2,7,c
 41007  0171E0  80D8               	bsf	status,0,c
 41008  0171E2  32DD               	rrcf	postdec2,f,c
 41009  0171E4  32DD               	rrcf	postdec2,f,c
 41010  0171E6  32DD               	rrcf	postdec2,f,c
 41011  0171E8  32DE               	rrcf	postinc2,f,c
 41012  0171EA                     u7480:
 41013  0171EA  2EE8               	decfsz	wreg,f,c
 41014  0171EC  D7F6               	goto	u7485
 41015                           
 41016                           ;stkvar	_bexp @ sp[(-4)+1]
 41017  0171EE  0EFD               	movlw	-3
 41018  0171F0  28E3               	incf	plusw1,w,c
 41019  0171F2  B4D8               	btfsc	status,2,c
 41020  0171F4  D002               	goto	l9875
 41021                           
 41022                           ;stkvar	_bexp @ sp[(-4)+1]
 41023  0171F6  0EFD               	movlw	-3
 41024  0171F8  2AE3               	incf	plusw1,f,c
 41025  0171FA                     l9875:
 41026                           
 41027                           ;stkvar	_bexp @ sp[(-4)+1]
 41028  0171FA  0EFD               	movlw	-3
 41029  0171FC  28E3               	incf	plusw1,w,c
 41030  0171FE  B4D8               	btfsc	status,2,c
 41031  017200  D004               	goto	u7510
 41032                           
 41033                           ;stkvar	_bexp @ sp[(-4)+1]
 41034  017202  0EFD               	movlw	-3
 41035  017204  50E3               	movf	plusw1,w,c
 41036  017206  A4D8               	btfss	status,2,c
 41037  017208  D00E               	goto	l9885
 41038  01720A                     u7510:
 41039                           
 41040                           ;stkvar	_b @ sp[(-4)+-4]
 41041  01720A  0EF8               	movlw	-8
 41042  01720C  6AE3               	clrf	plusw1,c
 41043  01720E  0EF9               	movlw	-7
 41044  017210  6AE3               	clrf	plusw1,c
 41045  017212  0EFA               	movlw	-6
 41046  017214  6AE3               	clrf	plusw1,c
 41047  017216  0EFB               	movlw	-5
 41048  017218  6AE3               	clrf	plusw1,c
 41049                           
 41050                           ;stkvar	_bexp @ sp[(-4)+1]
 41051  01721A  0EFD               	movlw	-3
 41052  01721C  50E3               	movf	plusw1,w,c
 41053  01721E  A4D8               	btfss	status,2,c
 41054  017220  D002               	goto	l9885
 41055                           
 41056                           ;stkvar	_signs @ sp[(-4)+3]
 41057  017222  0EFF               	movlw	-1
 41058  017224  6AE3               	clrf	plusw1,c
 41059  017226                     l9885:
 41060                           
 41061                           ;stkvar	_bexp @ sp[(-4)+1]
 41062  017226  0EFD               	movlw	-3
 41063  017228  A0E3               	btfss	plusw1,0,c
 41064  01722A  D009               	goto	l9889
 41065                           
 41066                           ;stkvar	_b @ sp[(-4)+-4]
 41067  01722C  0EFA               	movlw	250
 41068  01722E  24E1               	addwf	fsr1l,w,c
 41069  017230  6ED9               	movwf	fsr2l,c
 41070  017232  0EFF               	movlw	255
 41071  017234  20E2               	addwfc	fsr1h,w,c
 41072  017236  6EDA               	movwf	fsr2h,c
 41073  017238  0E00               	movlw	0
 41074  01723A  8EDB               	bsf	plusw2,7,c
 41075  01723C  D008               	goto	l9891
 41076  01723E                     l9889:
 41077                           
 41078                           ;stkvar	_b @ sp[(-4)+-4]
 41079  01723E  0EFA               	movlw	250
 41080  017240  24E1               	addwf	fsr1l,w,c
 41081  017242  6ED9               	movwf	fsr2l,c
 41082  017244  0EFF               	movlw	255
 41083  017246  20E2               	addwfc	fsr1h,w,c
 41084  017248  6EDA               	movwf	fsr2h,c
 41085  01724A  0E7F               	movlw	127
 41086  01724C  16DF               	andwf	indf2,f,c
 41087  01724E                     l9891:
 41088                           
 41089                           ;stkvar	_b @ sp[(-4)+-4]
 41090  01724E  0EFB               	movlw	251
 41091  017250  24E1               	addwf	fsr1l,w,c
 41092  017252  6ED9               	movwf	fsr2l,c
 41093  017254  0EFF               	movlw	255
 41094  017256  20E2               	addwfc	fsr1h,w,c
 41095  017258  6EDA               	movwf	fsr2h,c
 41096                           
 41097                           ;stkvar	_bexp @ sp[(-4)+1]
 41098  01725A  0EFD               	movlw	-3
 41099  01725C  006F FF8C  F00C    	movff	plusw1,btemp+11
 41100  017262  90D8               	bcf	status,0,c
 41101  017264  300C               	rrcf	(btemp+11)^0,w,c
 41102  017266  6EDF               	movwf	indf2,c
 41103                           
 41104                           ;stkvar	_signs @ sp[(-4)+3]
 41105  017268  0EFF               	movlw	-1
 41106  01726A  AEE3               	btfss	plusw1,7,c
 41107  01726C  D008               	goto	l9897
 41108                           
 41109                           ;stkvar	_b @ sp[(-4)+-4]
 41110  01726E  0EFB               	movlw	251
 41111  017270  24E1               	addwf	fsr1l,w,c
 41112  017272  6ED9               	movwf	fsr2l,c
 41113  017274  0EFF               	movlw	255
 41114  017276  20E2               	addwfc	fsr1h,w,c
 41115  017278  6EDA               	movwf	fsr2h,c
 41116  01727A  0E00               	movlw	0
 41117  01727C  8EDB               	bsf	plusw2,7,c
 41118  01727E                     l9897:
 41119                           
 41120                           ;stkvar	_b @ sp[(-4)+-4]
 41121  01727E  0EF8               	movlw	-8
 41122  017280  006F FF8C  F001    	movff	plusw1,btemp
 41123  017286  0EF9               	movlw	-7
 41124  017288  006F FF8C  F002    	movff	plusw1,btemp+1
 41125  01728E  0EFA               	movlw	-6
 41126  017290  006F FF8C  F003    	movff	plusw1,btemp+2
 41127  017296  0EFB               	movlw	-5
 41128  017298  006F FF8C  F004    	movff	plusw1,btemp+3
 41129  01729E                     l3234:
 41130                           
 41131                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41132  01729E  0EF4               	movlw	244
 41133  0172A0  26E1               	addwf	fsr1l,f,c
 41134  0172A2  0EFF               	movlw	255
 41135  0172A4  22E2               	addwfc	fsr1h,f,c
 41136  0172A6  0012               	return		;funcret
 41137  0172A8                     __end_of___fladd:
 41138                           	opt callstack 0
 41139                           
 41140 ;; *************** function ___flmul *****************
 41141 ;; Defined at:
 41142 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41143 ;; Parameters:    Size  Location     Type
 41144 ;;  b               4  [STACK] unsigned char 
 41145 ;;  a               4  [STACK] unsigned char 
 41146 ;; Auto vars:     Size  Location     Type
 41147 ;;  prod            4  [STACK] struct .
 41148 ;;  grs             4  [STACK] unsigned long 
 41149 ;;  temp            2  [STACK] struct .
 41150 ;;  bexp            1  [STACK] unsigned char 
 41151 ;;  aexp            1  [STACK] unsigned char 
 41152 ;;  sign            1  [STACK] unsigned char 
 41153 ;; Return value:  Size  Location     Type
 41154 ;;                  4  [STACK] unsigned char 
 41155 ;; Registers used:
 41156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41157 ;; Tracked objects:
 41158 ;;		On entry : 0/2
 41159 ;;		On exit  : 0/0
 41160 ;;		Unchanged: 0/0
 41161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41166 ;;Total ram usage:        0 bytes
 41167 ;; Hardware stack levels used:    1
 41168 ;; Hardware stack levels required when called:   15
 41169 ;; This function calls:
 41170 ;;		Nothing
 41171 ;; This function is called by:
 41172 ;;		_conv_raw_result
 41173 ;;		_lp_filter
 41174 ;;		_calc_model_data
 41175 ;;		_calc_bsoc
 41176 ;;		_init_bsoc
 41177 ;;		_efgtoa
 41178 ;; This function uses a reentrant model
 41179 ;;
 41180                           
 41181                           	psect	text151
 41182  0162C2                     __ptext151:
 41183                           	opt callstack 0
 41184  0162C2                     ___flmul:
 41185                           	opt callstack 0
 41186                           
 41187                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41188  0162C2  0E0D               	movlw	13
 41189  0162C4  26E1               	addwf	fsr1l,f,c
 41190  0162C6  0E00               	movlw	0
 41191  0162C8  22E2               	addwfc	fsr1h,f,c
 41192                           
 41193                           ;stkvar	_b @ sp[(-13)+-4]
 41194                           
 41195                           ;incstack = 0
 41196 ;; hardware stack exceeded
 41197  0162CA  0EF2               	movlw	242
 41198  0162CC  24E1               	addwf	fsr1l,w,c
 41199  0162CE  6ED9               	movwf	fsr2l,c
 41200  0162D0  0EFF               	movlw	255
 41201  0162D2  20E2               	addwfc	fsr1h,w,c
 41202  0162D4  6EDA               	movwf	fsr2h,c
 41203  0162D6  50DF               	movf	indf2,w,c
 41204  0162D8  6E0C               	movwf	(btemp+11)^0,c
 41205  0162DA  0E80               	movlw	128
 41206  0162DC  160C               	andwf	(btemp+11)^0,f,c
 41207                           
 41208                           ;stkvar	_sign @ sp[(-13)+12]
 41209  0162DE  0EFF               	movlw	-1
 41210  0162E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 41211                           
 41212                           ;stkvar	_b @ sp[(-13)+-4]
 41213  0162E6  0EF2               	movlw	242
 41214  0162E8  24E1               	addwf	fsr1l,w,c
 41215  0162EA  6ED9               	movwf	fsr2l,c
 41216  0162EC  0EFF               	movlw	255
 41217  0162EE  20E2               	addwfc	fsr1h,w,c
 41218  0162F0  6EDA               	movwf	fsr2h,c
 41219  0162F2  50DF               	movf	indf2,w,c
 41220  0162F4  6E0C               	movwf	(btemp+11)^0,c
 41221  0162F6  90D8               	bcf	status,0,c
 41222  0162F8  340C               	rlcf	(btemp+11)^0,w,c
 41223  0162FA  6E0B               	movwf	(btemp+10)^0,c
 41224                           
 41225                           ;stkvar	_bexp @ sp[(-13)+10]
 41226  0162FC  0EFD               	movlw	-3
 41227  0162FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41228                           
 41229                           ;stkvar	_b @ sp[(-13)+-4]
 41230  016304  0EF1               	movlw	241
 41231  016306  24E1               	addwf	fsr1l,w,c
 41232  016308  6ED9               	movwf	fsr2l,c
 41233  01630A  0EFF               	movlw	255
 41234  01630C  20E2               	addwfc	fsr1h,w,c
 41235  01630E  6EDA               	movwf	fsr2h,c
 41236  016310  AEDF               	btfss	indf2,7,c
 41237  016312  D002               	goto	l10361
 41238                           
 41239                           ;stkvar	_bexp @ sp[(-13)+10]
 41240  016314  0EFD               	movlw	-3
 41241  016316  80E3               	bsf	plusw1,0,c
 41242  016318                     l10361:
 41243                           
 41244                           ;stkvar	_bexp @ sp[(-13)+10]
 41245  016318  0EFD               	movlw	-3
 41246  01631A  50E3               	movf	plusw1,w,c
 41247  01631C  B4D8               	btfsc	status,2,c
 41248  01631E  D01F               	goto	l10369
 41249                           
 41250                           ;stkvar	_bexp @ sp[(-13)+10]
 41251  016320  0EFD               	movlw	-3
 41252  016322  28E3               	incf	plusw1,w,c
 41253  016324  A4D8               	btfss	status,2,c
 41254  016326  D018               	goto	l10367
 41255  016328  0E00               	movlw	0
 41256  01632A  6E09               	movwf	(btemp+8)^0,c
 41257  01632C  0E00               	movlw	0
 41258  01632E  6E0A               	movwf	(btemp+9)^0,c
 41259  016330  0E00               	movlw	0
 41260  016332  6E0B               	movwf	(btemp+10)^0,c
 41261  016334  0E00               	movlw	0
 41262  016336  6E0C               	movwf	(btemp+11)^0,c
 41263                           
 41264                           ;stkvar	_b @ sp[(-13)+-4]
 41265  016338  0EEF               	movlw	-17
 41266  01633A  0060  F027  FFE3   	movff	btemp+8,plusw1
 41267  016340  0EF0               	movlw	-16
 41268  016342  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41269  016348  0EF1               	movlw	-15
 41270  01634A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41271  016350  0EF2               	movlw	-14
 41272  016352  0060  F033  FFE3   	movff	btemp+11,plusw1
 41273  016358                     l10367:
 41274                           
 41275                           ;stkvar	_b @ sp[(-13)+-4]
 41276  016358  0EF1               	movlw	-15
 41277  01635A  8EE3               	bsf	plusw1,7,c
 41278  01635C  D018               	goto	l10371
 41279  01635E                     l10369:
 41280  01635E  0E00               	movlw	0
 41281  016360  6E09               	movwf	(btemp+8)^0,c
 41282  016362  0E00               	movlw	0
 41283  016364  6E0A               	movwf	(btemp+9)^0,c
 41284  016366  0E00               	movlw	0
 41285  016368  6E0B               	movwf	(btemp+10)^0,c
 41286  01636A  0E00               	movlw	0
 41287  01636C  6E0C               	movwf	(btemp+11)^0,c
 41288                           
 41289                           ;stkvar	_b @ sp[(-13)+-4]
 41290  01636E  0EEF               	movlw	-17
 41291  016370  0060  F027  FFE3   	movff	btemp+8,plusw1
 41292  016376  0EF0               	movlw	-16
 41293  016378  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41294  01637E  0EF1               	movlw	-15
 41295  016380  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41296  016386  0EF2               	movlw	-14
 41297  016388  0060  F033  FFE3   	movff	btemp+11,plusw1
 41298  01638E                     l10371:
 41299                           
 41300                           ;stkvar	_a @ sp[(-13)+-8]
 41301  01638E  0EEE               	movlw	238
 41302  016390  24E1               	addwf	fsr1l,w,c
 41303  016392  6ED9               	movwf	fsr2l,c
 41304  016394  0EFF               	movlw	255
 41305  016396  20E2               	addwfc	fsr1h,w,c
 41306  016398  6EDA               	movwf	fsr2h,c
 41307  01639A  50DF               	movf	indf2,w,c
 41308  01639C  6E0C               	movwf	(btemp+11)^0,c
 41309  01639E  0E80               	movlw	128
 41310  0163A0  160C               	andwf	(btemp+11)^0,f,c
 41311                           
 41312                           ;stkvar	_sign @ sp[(-13)+12]
 41313  0163A2  50E1               	movf	fsr1l,w,c
 41314  0163A4  0FFF               	addlw	-1
 41315  0163A6  6ED9               	movwf	fsr2l,c
 41316  0163A8  50E2               	movf	fsr1h,w,c
 41317  0163AA  6EDA               	movwf	fsr2h,c
 41318  0163AC  0EFF               	movlw	255
 41319  0163AE  22DA               	addwfc	fsr2h,f,c
 41320  0163B0  500C               	movf	(btemp+11)^0,w,c
 41321  0163B2  1ADF               	xorwf	indf2,f,c
 41322                           
 41323                           ;stkvar	_a @ sp[(-13)+-8]
 41324  0163B4  0EEE               	movlw	238
 41325  0163B6  24E1               	addwf	fsr1l,w,c
 41326  0163B8  6ED9               	movwf	fsr2l,c
 41327  0163BA  0EFF               	movlw	255
 41328  0163BC  20E2               	addwfc	fsr1h,w,c
 41329  0163BE  6EDA               	movwf	fsr2h,c
 41330  0163C0  50DF               	movf	indf2,w,c
 41331  0163C2  6E0C               	movwf	(btemp+11)^0,c
 41332  0163C4  90D8               	bcf	status,0,c
 41333  0163C6  340C               	rlcf	(btemp+11)^0,w,c
 41334  0163C8  6E0B               	movwf	(btemp+10)^0,c
 41335                           
 41336                           ;stkvar	_aexp @ sp[(-13)+11]
 41337  0163CA  0EFE               	movlw	-2
 41338  0163CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41339                           
 41340                           ;stkvar	_a @ sp[(-13)+-8]
 41341  0163D2  0EED               	movlw	237
 41342  0163D4  24E1               	addwf	fsr1l,w,c
 41343  0163D6  6ED9               	movwf	fsr2l,c
 41344  0163D8  0EFF               	movlw	255
 41345  0163DA  20E2               	addwfc	fsr1h,w,c
 41346  0163DC  6EDA               	movwf	fsr2h,c
 41347  0163DE  AEDF               	btfss	indf2,7,c
 41348  0163E0  D002               	goto	l10379
 41349                           
 41350                           ;stkvar	_aexp @ sp[(-13)+11]
 41351  0163E2  0EFE               	movlw	-2
 41352  0163E4  80E3               	bsf	plusw1,0,c
 41353  0163E6                     l10379:
 41354                           
 41355                           ;stkvar	_aexp @ sp[(-13)+11]
 41356  0163E6  0EFE               	movlw	-2
 41357  0163E8  50E3               	movf	plusw1,w,c
 41358  0163EA  B4D8               	btfsc	status,2,c
 41359  0163EC  D01F               	goto	l10387
 41360                           
 41361                           ;stkvar	_aexp @ sp[(-13)+11]
 41362  0163EE  0EFE               	movlw	-2
 41363  0163F0  28E3               	incf	plusw1,w,c
 41364  0163F2  A4D8               	btfss	status,2,c
 41365  0163F4  D018               	goto	l10385
 41366  0163F6  0E00               	movlw	0
 41367  0163F8  6E09               	movwf	(btemp+8)^0,c
 41368  0163FA  0E00               	movlw	0
 41369  0163FC  6E0A               	movwf	(btemp+9)^0,c
 41370  0163FE  0E00               	movlw	0
 41371  016400  6E0B               	movwf	(btemp+10)^0,c
 41372  016402  0E00               	movlw	0
 41373  016404  6E0C               	movwf	(btemp+11)^0,c
 41374                           
 41375                           ;stkvar	_a @ sp[(-13)+-8]
 41376  016406  0EEB               	movlw	-21
 41377  016408  0060  F027  FFE3   	movff	btemp+8,plusw1
 41378  01640E  0EEC               	movlw	-20
 41379  016410  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41380  016416  0EED               	movlw	-19
 41381  016418  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41382  01641E  0EEE               	movlw	-18
 41383  016420  0060  F033  FFE3   	movff	btemp+11,plusw1
 41384  016426                     l10385:
 41385                           
 41386                           ;stkvar	_a @ sp[(-13)+-8]
 41387  016426  0EED               	movlw	-19
 41388  016428  8EE3               	bsf	plusw1,7,c
 41389  01642A  D018               	goto	l10389
 41390  01642C                     l10387:
 41391  01642C  0E00               	movlw	0
 41392  01642E  6E09               	movwf	(btemp+8)^0,c
 41393  016430  0E00               	movlw	0
 41394  016432  6E0A               	movwf	(btemp+9)^0,c
 41395  016434  0E00               	movlw	0
 41396  016436  6E0B               	movwf	(btemp+10)^0,c
 41397  016438  0E00               	movlw	0
 41398  01643A  6E0C               	movwf	(btemp+11)^0,c
 41399                           
 41400                           ;stkvar	_a @ sp[(-13)+-8]
 41401  01643C  0EEB               	movlw	-21
 41402  01643E  0060  F027  FFE3   	movff	btemp+8,plusw1
 41403  016444  0EEC               	movlw	-20
 41404  016446  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41405  01644C  0EED               	movlw	-19
 41406  01644E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41407  016454  0EEE               	movlw	-18
 41408  016456  0060  F033  FFE3   	movff	btemp+11,plusw1
 41409  01645C                     l10389:
 41410                           
 41411                           ;stkvar	_aexp @ sp[(-13)+11]
 41412  01645C  0EFE               	movlw	-2
 41413  01645E  50E3               	movf	plusw1,w,c
 41414  016460  B4D8               	btfsc	status,2,c
 41415  016462  D004               	goto	u8570
 41416                           
 41417                           ;stkvar	_bexp @ sp[(-13)+10]
 41418  016464  0EFD               	movlw	-3
 41419  016466  50E3               	movf	plusw1,w,c
 41420  016468  A4D8               	btfss	status,2,c
 41421  01646A  D009               	goto	l10397
 41422  01646C                     u8570:
 41423  01646C  0E00               	movlw	0
 41424  01646E  6E01               	movwf	btemp^0,c
 41425  016470  0E00               	movlw	0
 41426  016472  6E02               	movwf	(btemp+1)^0,c
 41427  016474  0E00               	movlw	0
 41428  016476  6E03               	movwf	(btemp+2)^0,c
 41429  016478  0E00               	movlw	0
 41430  01647A  6E04               	movwf	(btemp+3)^0,c
 41431  01647C  D332               	goto	l3315
 41432  01647E                     l10397:
 41433                           
 41434                           ;stkvar	_b @ sp[(-13)+-4]
 41435  01647E  0EEF               	movlw	-17
 41436  016480  006F FF8C  F00C    	movff	plusw1,btemp+11
 41437                           
 41438                           ;stkvar	_a @ sp[(-13)+-8]
 41439  016486  0EED               	movlw	237
 41440  016488  24E1               	addwf	fsr1l,w,c
 41441  01648A  6ED9               	movwf	fsr2l,c
 41442  01648C  0EFF               	movlw	255
 41443  01648E  20E2               	addwfc	fsr1h,w,c
 41444  016490  6EDA               	movwf	fsr2h,c
 41445  016492  50DF               	movf	indf2,w,c
 41446  016494  020C               	mulwf	(btemp+11)^0,c
 41447                           
 41448                           ;stkvar	_temp @ sp[(-13)+8]
 41449  016496  0EFB               	movlw	-5
 41450  016498  006F FFCF FFE3     	movff	prodl,plusw1
 41451  01649E  0EFC               	movlw	-4
 41452  0164A0  006F FFD3 FFE3     	movff	prodh,plusw1
 41453                           
 41454                           ;stkvar	_temp @ sp[(-13)+8]
 41455  0164A6  0EFB               	movlw	-5
 41456  0164A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 41457  0164AE  0060  F030  F005   	movff	btemp+11,btemp+4
 41458  0164B4  6A06               	clrf	(btemp+5)^0,c
 41459  0164B6  6A07               	clrf	(btemp+6)^0,c
 41460  0164B8  6A08               	clrf	(btemp+7)^0,c
 41461                           
 41462                           ;stkvar	_grs @ sp[(-13)+4]
 41463  0164BA  0EF7               	movlw	-9
 41464  0164BC  0060  F017  FFE3   	movff	btemp+4,plusw1
 41465  0164C2  0EF8               	movlw	-8
 41466  0164C4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 41467  0164CA  0EF9               	movlw	-7
 41468  0164CC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 41469  0164D2  0EFA               	movlw	-6
 41470  0164D4  0060  F023  FFE3   	movff	btemp+7,plusw1
 41471                           
 41472                           ;stkvar	_temp @ sp[(-13)+8]
 41473  0164DA  0EFC               	movlw	252
 41474  0164DC  24E1               	addwf	fsr1l,w,c
 41475  0164DE  6ED9               	movwf	fsr2l,c
 41476  0164E0  0EFF               	movlw	255
 41477  0164E2  20E2               	addwfc	fsr1h,w,c
 41478  0164E4  6EDA               	movwf	fsr2h,c
 41479  0164E6  50DF               	movf	indf2,w,c
 41480  0164E8  6E0C               	movwf	(btemp+11)^0,c
 41481  0164EA  0060  F030  F005   	movff	btemp+11,btemp+4
 41482  0164F0  6A06               	clrf	(btemp+5)^0,c
 41483  0164F2  6A07               	clrf	(btemp+6)^0,c
 41484  0164F4  6A08               	clrf	(btemp+7)^0,c
 41485                           
 41486                           ;stkvar	_prod @ sp[(-13)+0]
 41487  0164F6  0EF3               	movlw	-13
 41488  0164F8  0060  F017  FFE3   	movff	btemp+4,plusw1
 41489  0164FE  0EF4               	movlw	-12
 41490  016500  0060  F01B  FFE3   	movff	btemp+5,plusw1
 41491  016506  0EF5               	movlw	-11
 41492  016508  0060  F01F  FFE3   	movff	btemp+6,plusw1
 41493  01650E  0EF6               	movlw	-10
 41494  016510  0060  F023  FFE3   	movff	btemp+7,plusw1
 41495                           
 41496                           ;stkvar	_b @ sp[(-13)+-4]
 41497  016516  0EF0               	movlw	240
 41498  016518  24E1               	addwf	fsr1l,w,c
 41499  01651A  6ED9               	movwf	fsr2l,c
 41500  01651C  0EFF               	movlw	255
 41501  01651E  20E2               	addwfc	fsr1h,w,c
 41502  016520  6EDA               	movwf	fsr2h,c
 41503  016522  50DF               	movf	indf2,w,c
 41504  016524  6E0C               	movwf	(btemp+11)^0,c
 41505                           
 41506                           ;stkvar	_a @ sp[(-13)+-8]
 41507  016526  0EEC               	movlw	236
 41508  016528  24E1               	addwf	fsr1l,w,c
 41509  01652A  6ED9               	movwf	fsr2l,c
 41510  01652C  0EFF               	movlw	255
 41511  01652E  20E2               	addwfc	fsr1h,w,c
 41512  016530  6EDA               	movwf	fsr2h,c
 41513  016532  50DF               	movf	indf2,w,c
 41514  016534  020C               	mulwf	(btemp+11)^0,c
 41515                           
 41516                           ;stkvar	_temp @ sp[(-13)+8]
 41517  016536  0EFB               	movlw	-5
 41518  016538  006F FFCF FFE3     	movff	prodl,plusw1
 41519  01653E  0EFC               	movlw	-4
 41520  016540  006F FFD3 FFE3     	movff	prodh,plusw1
 41521                           
 41522                           ;stkvar	_grs @ sp[(-13)+4]
 41523  016546  50E1               	movf	fsr1l,w,c
 41524  016548  0FF7               	addlw	-9
 41525  01654A  6ED9               	movwf	fsr2l,c
 41526  01654C  50E2               	movf	fsr1h,w,c
 41527  01654E  6EDA               	movwf	fsr2h,c
 41528  016550  0EFF               	movlw	255
 41529  016552  22DA               	addwfc	fsr2h,f,c
 41530                           
 41531                           ;stkvar	_temp @ sp[(-13)+8]
 41532  016554  0EFB               	movlw	-5
 41533  016556  50E3               	movf	plusw1,w,c
 41534  016558  26DE               	addwf	postinc2,f,c
 41535  01655A  0E00               	movlw	0
 41536  01655C  22DE               	addwfc	postinc2,f,c
 41537  01655E  22DE               	addwfc	postinc2,f,c
 41538  016560  22DE               	addwfc	postinc2,f,c
 41539                           
 41540                           ;stkvar	_prod @ sp[(-13)+0]
 41541  016562  50E1               	movf	fsr1l,w,c
 41542  016564  0FF3               	addlw	-13
 41543  016566  6ED9               	movwf	fsr2l,c
 41544  016568  50E2               	movf	fsr1h,w,c
 41545  01656A  6EDA               	movwf	fsr2h,c
 41546  01656C  0EFF               	movlw	255
 41547  01656E  22DA               	addwfc	fsr2h,f,c
 41548                           
 41549                           ;stkvar	_temp @ sp[(-13)+8]
 41550  016570  0EFC               	movlw	252
 41551  016572  24E1               	addwf	fsr1l,w,c
 41552  016574  6EE9               	movwf	fsr0l,c
 41553  016576  0EFF               	movlw	255
 41554  016578  20E2               	addwfc	fsr1h,w,c
 41555  01657A  6EEA               	movwf	fsr0h,c
 41556  01657C  50EF               	movf	indf0,w,c
 41557  01657E  26DE               	addwf	postinc2,f,c
 41558  016580  0E00               	movlw	0
 41559  016582  22DE               	addwfc	postinc2,f,c
 41560  016584  22DE               	addwfc	postinc2,f,c
 41561  016586  22DE               	addwfc	postinc2,f,c
 41562                           
 41563                           ;stkvar	_b @ sp[(-13)+-4]
 41564  016588  0EF1               	movlw	241
 41565  01658A  24E1               	addwf	fsr1l,w,c
 41566  01658C  6ED9               	movwf	fsr2l,c
 41567  01658E  0EFF               	movlw	255
 41568  016590  20E2               	addwfc	fsr1h,w,c
 41569  016592  6EDA               	movwf	fsr2h,c
 41570  016594  50DF               	movf	indf2,w,c
 41571  016596  6E0C               	movwf	(btemp+11)^0,c
 41572                           
 41573                           ;stkvar	_a @ sp[(-13)+-8]
 41574  016598  0EEB               	movlw	-21
 41575  01659A  50E3               	movf	plusw1,w,c
 41576  01659C  020C               	mulwf	(btemp+11)^0,c
 41577                           
 41578                           ;stkvar	_temp @ sp[(-13)+8]
 41579  01659E  0EFB               	movlw	-5
 41580  0165A0  006F FFCF FFE3     	movff	prodl,plusw1
 41581  0165A6  0EFC               	movlw	-4
 41582  0165A8  006F FFD3 FFE3     	movff	prodh,plusw1
 41583                           
 41584                           ;stkvar	_grs @ sp[(-13)+4]
 41585  0165AE  50E1               	movf	fsr1l,w,c
 41586  0165B0  0FF7               	addlw	-9
 41587  0165B2  6ED9               	movwf	fsr2l,c
 41588  0165B4  50E2               	movf	fsr1h,w,c
 41589  0165B6  6EDA               	movwf	fsr2h,c
 41590  0165B8  0EFF               	movlw	255
 41591  0165BA  22DA               	addwfc	fsr2h,f,c
 41592                           
 41593                           ;stkvar	_temp @ sp[(-13)+8]
 41594  0165BC  0EFB               	movlw	-5
 41595  0165BE  50E3               	movf	plusw1,w,c
 41596  0165C0  26DE               	addwf	postinc2,f,c
 41597  0165C2  0E00               	movlw	0
 41598  0165C4  22DE               	addwfc	postinc2,f,c
 41599  0165C6  22DE               	addwfc	postinc2,f,c
 41600  0165C8  22DE               	addwfc	postinc2,f,c
 41601                           
 41602                           ;stkvar	_prod @ sp[(-13)+0]
 41603  0165CA  50E1               	movf	fsr1l,w,c
 41604  0165CC  0FF3               	addlw	-13
 41605  0165CE  6ED9               	movwf	fsr2l,c
 41606  0165D0  50E2               	movf	fsr1h,w,c
 41607  0165D2  6EDA               	movwf	fsr2h,c
 41608  0165D4  0EFF               	movlw	255
 41609  0165D6  22DA               	addwfc	fsr2h,f,c
 41610                           
 41611                           ;stkvar	_temp @ sp[(-13)+8]
 41612  0165D8  0EFC               	movlw	252
 41613  0165DA  24E1               	addwf	fsr1l,w,c
 41614  0165DC  6EE9               	movwf	fsr0l,c
 41615  0165DE  0EFF               	movlw	255
 41616  0165E0  20E2               	addwfc	fsr1h,w,c
 41617  0165E2  6EEA               	movwf	fsr0h,c
 41618  0165E4  50EF               	movf	indf0,w,c
 41619  0165E6  26DE               	addwf	postinc2,f,c
 41620  0165E8  0E00               	movlw	0
 41621  0165EA  22DE               	addwfc	postinc2,f,c
 41622  0165EC  22DE               	addwfc	postinc2,f,c
 41623  0165EE  22DE               	addwfc	postinc2,f,c
 41624                           
 41625                           ;stkvar	_grs @ sp[(-13)+4]
 41626  0165F0  50E1               	movf	fsr1l,w,c
 41627  0165F2  0FF7               	addlw	-9
 41628  0165F4  6ED9               	movwf	fsr2l,c
 41629  0165F6  50E2               	movf	fsr1h,w,c
 41630  0165F8  6EDA               	movwf	fsr2h,c
 41631  0165FA  0EFF               	movlw	255
 41632  0165FC  22DA               	addwfc	fsr2h,f,c
 41633  0165FE  0E08               	movlw	8
 41634  016600                     u8585:
 41635  016600  90D8               	bcf	status,0,c
 41636  016602  36DE               	rlcf	postinc2,f,c
 41637  016604  36DE               	rlcf	postinc2,f,c
 41638  016606  36DE               	rlcf	postinc2,f,c
 41639  016608  36DD               	rlcf	postdec2,f,c
 41640  01660A  52DD               	movf	postdec2,f,c
 41641  01660C  52DD               	movf	postdec2,f,c
 41642  01660E  2EE8               	decfsz	wreg,f,c
 41643  016610  D7F7               	goto	u8585
 41644                           
 41645                           ;stkvar	_b @ sp[(-13)+-4]
 41646  016612  0EF0               	movlw	240
 41647  016614  24E1               	addwf	fsr1l,w,c
 41648  016616  6ED9               	movwf	fsr2l,c
 41649  016618  0EFF               	movlw	255
 41650  01661A  20E2               	addwfc	fsr1h,w,c
 41651  01661C  6EDA               	movwf	fsr2h,c
 41652  01661E  50DF               	movf	indf2,w,c
 41653  016620  6E0C               	movwf	(btemp+11)^0,c
 41654                           
 41655                           ;stkvar	_a @ sp[(-13)+-8]
 41656  016622  0EEB               	movlw	-21
 41657  016624  50E3               	movf	plusw1,w,c
 41658  016626  020C               	mulwf	(btemp+11)^0,c
 41659                           
 41660                           ;stkvar	_temp @ sp[(-13)+8]
 41661  016628  0EFB               	movlw	-5
 41662  01662A  006F FFCF FFE3     	movff	prodl,plusw1
 41663  016630  0EFC               	movlw	-4
 41664  016632  006F FFD3 FFE3     	movff	prodh,plusw1
 41665                           
 41666                           ;stkvar	_temp @ sp[(-13)+8]
 41667  016638  0EFB               	movlw	-5
 41668  01663A  006F FF8C  F00B    	movff	plusw1,btemp+10
 41669  016640  0EFC               	movlw	-4
 41670  016642  006F FF8C  F00C    	movff	plusw1,btemp+11
 41671                           
 41672                           ;stkvar	_grs @ sp[(-13)+4]
 41673  016648  50E1               	movf	fsr1l,w,c
 41674  01664A  0FF7               	addlw	-9
 41675  01664C  6ED9               	movwf	fsr2l,c
 41676  01664E  50E2               	movf	fsr1h,w,c
 41677  016650  6EDA               	movwf	fsr2h,c
 41678  016652  0EFF               	movlw	255
 41679  016654  22DA               	addwfc	fsr2h,f,c
 41680  016656  500B               	movf	(btemp+10)^0,w,c
 41681  016658  26DE               	addwf	postinc2,f,c
 41682  01665A  500C               	movf	(btemp+11)^0,w,c
 41683  01665C  22DE               	addwfc	postinc2,f,c
 41684  01665E  0E00               	movlw	0
 41685  016660  22DE               	addwfc	postinc2,f,c
 41686  016662  22DE               	addwfc	postinc2,f,c
 41687                           
 41688                           ;stkvar	_b @ sp[(-13)+-4]
 41689  016664  0EEF               	movlw	-17
 41690  016666  006F FF8C  F00C    	movff	plusw1,btemp+11
 41691                           
 41692                           ;stkvar	_a @ sp[(-13)+-8]
 41693  01666C  0EEC               	movlw	236
 41694  01666E  24E1               	addwf	fsr1l,w,c
 41695  016670  6ED9               	movwf	fsr2l,c
 41696  016672  0EFF               	movlw	255
 41697  016674  20E2               	addwfc	fsr1h,w,c
 41698  016676  6EDA               	movwf	fsr2h,c
 41699  016678  50DF               	movf	indf2,w,c
 41700  01667A  020C               	mulwf	(btemp+11)^0,c
 41701                           
 41702                           ;stkvar	_temp @ sp[(-13)+8]
 41703  01667C  0EFB               	movlw	-5
 41704  01667E  006F FFCF FFE3     	movff	prodl,plusw1
 41705  016684  0EFC               	movlw	-4
 41706  016686  006F FFD3 FFE3     	movff	prodh,plusw1
 41707                           
 41708                           ;stkvar	_temp @ sp[(-13)+8]
 41709  01668C  0EFB               	movlw	-5
 41710  01668E  006F FF8C  F00B    	movff	plusw1,btemp+10
 41711  016694  0EFC               	movlw	-4
 41712  016696  006F FF8C  F00C    	movff	plusw1,btemp+11
 41713                           
 41714                           ;stkvar	_grs @ sp[(-13)+4]
 41715  01669C  50E1               	movf	fsr1l,w,c
 41716  01669E  0FF7               	addlw	-9
 41717  0166A0  6ED9               	movwf	fsr2l,c
 41718  0166A2  50E2               	movf	fsr1h,w,c
 41719  0166A4  6EDA               	movwf	fsr2h,c
 41720  0166A6  0EFF               	movlw	255
 41721  0166A8  22DA               	addwfc	fsr2h,f,c
 41722  0166AA  500B               	movf	(btemp+10)^0,w,c
 41723  0166AC  26DE               	addwf	postinc2,f,c
 41724  0166AE  500C               	movf	(btemp+11)^0,w,c
 41725  0166B0  22DE               	addwfc	postinc2,f,c
 41726  0166B2  0E00               	movlw	0
 41727  0166B4  22DE               	addwfc	postinc2,f,c
 41728  0166B6  22DE               	addwfc	postinc2,f,c
 41729                           
 41730                           ;stkvar	_grs @ sp[(-13)+4]
 41731  0166B8  50E1               	movf	fsr1l,w,c
 41732  0166BA  0FF7               	addlw	-9
 41733  0166BC  6ED9               	movwf	fsr2l,c
 41734  0166BE  50E2               	movf	fsr1h,w,c
 41735  0166C0  6EDA               	movwf	fsr2h,c
 41736  0166C2  0EFF               	movlw	255
 41737  0166C4  22DA               	addwfc	fsr2h,f,c
 41738  0166C6  0E08               	movlw	8
 41739  0166C8                     u8595:
 41740  0166C8  90D8               	bcf	status,0,c
 41741  0166CA  36DE               	rlcf	postinc2,f,c
 41742  0166CC  36DE               	rlcf	postinc2,f,c
 41743  0166CE  36DE               	rlcf	postinc2,f,c
 41744  0166D0  36DD               	rlcf	postdec2,f,c
 41745  0166D2  52DD               	movf	postdec2,f,c
 41746  0166D4  52DD               	movf	postdec2,f,c
 41747  0166D6  2EE8               	decfsz	wreg,f,c
 41748  0166D8  D7F7               	goto	u8595
 41749                           
 41750                           ;stkvar	_b @ sp[(-13)+-4]
 41751  0166DA  0EEF               	movlw	-17
 41752  0166DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 41753                           
 41754                           ;stkvar	_a @ sp[(-13)+-8]
 41755  0166E2  0EEB               	movlw	-21
 41756  0166E4  50E3               	movf	plusw1,w,c
 41757  0166E6  020C               	mulwf	(btemp+11)^0,c
 41758                           
 41759                           ;stkvar	_temp @ sp[(-13)+8]
 41760  0166E8  0EFB               	movlw	-5
 41761  0166EA  006F FFCF FFE3     	movff	prodl,plusw1
 41762  0166F0  0EFC               	movlw	-4
 41763  0166F2  006F FFD3 FFE3     	movff	prodh,plusw1
 41764                           
 41765                           ;stkvar	_temp @ sp[(-13)+8]
 41766  0166F8  0EFB               	movlw	-5
 41767  0166FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 41768  016700  0EFC               	movlw	-4
 41769  016702  006F FF8C  F00C    	movff	plusw1,btemp+11
 41770                           
 41771                           ;stkvar	_grs @ sp[(-13)+4]
 41772  016708  50E1               	movf	fsr1l,w,c
 41773  01670A  0FF7               	addlw	-9
 41774  01670C  6ED9               	movwf	fsr2l,c
 41775  01670E  50E2               	movf	fsr1h,w,c
 41776  016710  6EDA               	movwf	fsr2h,c
 41777  016712  0EFF               	movlw	255
 41778  016714  22DA               	addwfc	fsr2h,f,c
 41779  016716  500B               	movf	(btemp+10)^0,w,c
 41780  016718  26DE               	addwf	postinc2,f,c
 41781  01671A  500C               	movf	(btemp+11)^0,w,c
 41782  01671C  22DE               	addwfc	postinc2,f,c
 41783  01671E  0E00               	movlw	0
 41784  016720  22DE               	addwfc	postinc2,f,c
 41785  016722  22DE               	addwfc	postinc2,f,c
 41786                           
 41787                           ;stkvar	_b @ sp[(-13)+-4]
 41788  016724  0EF0               	movlw	240
 41789  016726  24E1               	addwf	fsr1l,w,c
 41790  016728  6ED9               	movwf	fsr2l,c
 41791  01672A  0EFF               	movlw	255
 41792  01672C  20E2               	addwfc	fsr1h,w,c
 41793  01672E  6EDA               	movwf	fsr2h,c
 41794  016730  50DF               	movf	indf2,w,c
 41795  016732  6E0C               	movwf	(btemp+11)^0,c
 41796                           
 41797                           ;stkvar	_a @ sp[(-13)+-8]
 41798  016734  0EED               	movlw	237
 41799  016736  24E1               	addwf	fsr1l,w,c
 41800  016738  6ED9               	movwf	fsr2l,c
 41801  01673A  0EFF               	movlw	255
 41802  01673C  20E2               	addwfc	fsr1h,w,c
 41803  01673E  6EDA               	movwf	fsr2h,c
 41804  016740  50DF               	movf	indf2,w,c
 41805  016742  020C               	mulwf	(btemp+11)^0,c
 41806                           
 41807                           ;stkvar	_temp @ sp[(-13)+8]
 41808  016744  0EFB               	movlw	-5
 41809  016746  006F FFCF FFE3     	movff	prodl,plusw1
 41810  01674C  0EFC               	movlw	-4
 41811  01674E  006F FFD3 FFE3     	movff	prodh,plusw1
 41812                           
 41813                           ;stkvar	_temp @ sp[(-13)+8]
 41814  016754  0EFB               	movlw	-5
 41815  016756  006F FF8C  F00B    	movff	plusw1,btemp+10
 41816  01675C  0EFC               	movlw	-4
 41817  01675E  006F FF8C  F00C    	movff	plusw1,btemp+11
 41818                           
 41819                           ;stkvar	_prod @ sp[(-13)+0]
 41820  016764  50E1               	movf	fsr1l,w,c
 41821  016766  0FF3               	addlw	-13
 41822  016768  6ED9               	movwf	fsr2l,c
 41823  01676A  50E2               	movf	fsr1h,w,c
 41824  01676C  6EDA               	movwf	fsr2h,c
 41825  01676E  0EFF               	movlw	255
 41826  016770  22DA               	addwfc	fsr2h,f,c
 41827  016772  500B               	movf	(btemp+10)^0,w,c
 41828  016774  26DE               	addwf	postinc2,f,c
 41829  016776  500C               	movf	(btemp+11)^0,w,c
 41830  016778  22DE               	addwfc	postinc2,f,c
 41831  01677A  0E00               	movlw	0
 41832  01677C  22DE               	addwfc	postinc2,f,c
 41833  01677E  22DE               	addwfc	postinc2,f,c
 41834                           
 41835                           ;stkvar	_b @ sp[(-13)+-4]
 41836  016780  0EF1               	movlw	241
 41837  016782  24E1               	addwf	fsr1l,w,c
 41838  016784  6ED9               	movwf	fsr2l,c
 41839  016786  0EFF               	movlw	255
 41840  016788  20E2               	addwfc	fsr1h,w,c
 41841  01678A  6EDA               	movwf	fsr2h,c
 41842  01678C  50DF               	movf	indf2,w,c
 41843  01678E  6E0C               	movwf	(btemp+11)^0,c
 41844                           
 41845                           ;stkvar	_a @ sp[(-13)+-8]
 41846  016790  0EEC               	movlw	236
 41847  016792  24E1               	addwf	fsr1l,w,c
 41848  016794  6ED9               	movwf	fsr2l,c
 41849  016796  0EFF               	movlw	255
 41850  016798  20E2               	addwfc	fsr1h,w,c
 41851  01679A  6EDA               	movwf	fsr2h,c
 41852  01679C  50DF               	movf	indf2,w,c
 41853  01679E  020C               	mulwf	(btemp+11)^0,c
 41854                           
 41855                           ;stkvar	_temp @ sp[(-13)+8]
 41856  0167A0  0EFB               	movlw	-5
 41857  0167A2  006F FFCF FFE3     	movff	prodl,plusw1
 41858  0167A8  0EFC               	movlw	-4
 41859  0167AA  006F FFD3 FFE3     	movff	prodh,plusw1
 41860                           
 41861                           ;stkvar	_temp @ sp[(-13)+8]
 41862  0167B0  0EFB               	movlw	-5
 41863  0167B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 41864  0167B8  0EFC               	movlw	-4
 41865  0167BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 41866                           
 41867                           ;stkvar	_prod @ sp[(-13)+0]
 41868  0167C0  50E1               	movf	fsr1l,w,c
 41869  0167C2  0FF3               	addlw	-13
 41870  0167C4  6ED9               	movwf	fsr2l,c
 41871  0167C6  50E2               	movf	fsr1h,w,c
 41872  0167C8  6EDA               	movwf	fsr2h,c
 41873  0167CA  0EFF               	movlw	255
 41874  0167CC  22DA               	addwfc	fsr2h,f,c
 41875  0167CE  500B               	movf	(btemp+10)^0,w,c
 41876  0167D0  26DE               	addwf	postinc2,f,c
 41877  0167D2  500C               	movf	(btemp+11)^0,w,c
 41878  0167D4  22DE               	addwfc	postinc2,f,c
 41879  0167D6  0E00               	movlw	0
 41880  0167D8  22DE               	addwfc	postinc2,f,c
 41881  0167DA  22DE               	addwfc	postinc2,f,c
 41882                           
 41883                           ;stkvar	_b @ sp[(-13)+-4]
 41884  0167DC  0EF1               	movlw	241
 41885  0167DE  24E1               	addwf	fsr1l,w,c
 41886  0167E0  6ED9               	movwf	fsr2l,c
 41887  0167E2  0EFF               	movlw	255
 41888  0167E4  20E2               	addwfc	fsr1h,w,c
 41889  0167E6  6EDA               	movwf	fsr2h,c
 41890  0167E8  50DF               	movf	indf2,w,c
 41891  0167EA  6E0C               	movwf	(btemp+11)^0,c
 41892                           
 41893                           ;stkvar	_a @ sp[(-13)+-8]
 41894  0167EC  0EED               	movlw	237
 41895  0167EE  24E1               	addwf	fsr1l,w,c
 41896  0167F0  6ED9               	movwf	fsr2l,c
 41897  0167F2  0EFF               	movlw	255
 41898  0167F4  20E2               	addwfc	fsr1h,w,c
 41899  0167F6  6EDA               	movwf	fsr2h,c
 41900  0167F8  50DF               	movf	indf2,w,c
 41901  0167FA  020C               	mulwf	(btemp+11)^0,c
 41902                           
 41903                           ;stkvar	_temp @ sp[(-13)+8]
 41904  0167FC  0EFB               	movlw	-5
 41905  0167FE  006F FFCF FFE3     	movff	prodl,plusw1
 41906  016804  0EFC               	movlw	-4
 41907  016806  006F FFD3 FFE3     	movff	prodh,plusw1
 41908                           
 41909                           ;stkvar	_temp @ sp[(-13)+8]
 41910  01680C  0EFB               	movlw	-5
 41911  01680E  006F FF8C  F00B    	movff	plusw1,btemp+10
 41912  016814  0EFC               	movlw	-4
 41913  016816  006F FF8C  F00C    	movff	plusw1,btemp+11
 41914  01681C  500B               	movf	(btemp+10)^0,w,c
 41915  01681E  6E05               	movwf	(btemp+4)^0,c
 41916  016820  500C               	movf	(btemp+11)^0,w,c
 41917  016822  6E06               	movwf	(btemp+5)^0,c
 41918  016824  6A07               	clrf	(btemp+6)^0,c
 41919  016826  6A08               	clrf	(btemp+7)^0,c
 41920  016828  0060  F01C  F008   	movff	btemp+6,btemp+7
 41921  01682E  0060  F018  F007   	movff	btemp+5,btemp+6
 41922  016834  0060  F014  F006   	movff	btemp+4,btemp+5
 41923  01683A  6A05               	clrf	(btemp+4)^0,c
 41924                           
 41925                           ;stkvar	_prod @ sp[(-13)+0]
 41926  01683C  50E1               	movf	fsr1l,w,c
 41927  01683E  0FF3               	addlw	-13
 41928  016840  6ED9               	movwf	fsr2l,c
 41929  016842  50E2               	movf	fsr1h,w,c
 41930  016844  6EDA               	movwf	fsr2h,c
 41931  016846  0EFF               	movlw	255
 41932  016848  22DA               	addwfc	fsr2h,f,c
 41933  01684A  5005               	movf	(btemp+4)^0,w,c
 41934  01684C  26DE               	addwf	postinc2,f,c
 41935  01684E  5006               	movf	(btemp+5)^0,w,c
 41936  016850  22DE               	addwfc	postinc2,f,c
 41937  016852  5007               	movf	(btemp+6)^0,w,c
 41938  016854  22DE               	addwfc	postinc2,f,c
 41939  016856  5008               	movf	(btemp+7)^0,w,c
 41940  016858  22DE               	addwfc	postinc2,f,c
 41941                           
 41942                           ;stkvar	_prod @ sp[(-13)+0]
 41943  01685A  50E1               	movf	fsr1l,w,c
 41944  01685C  0FF3               	addlw	-13
 41945  01685E  6ED9               	movwf	fsr2l,c
 41946  016860  50E2               	movf	fsr1h,w,c
 41947  016862  6EDA               	movwf	fsr2h,c
 41948  016864  0EFF               	movlw	255
 41949  016866  22DA               	addwfc	fsr2h,f,c
 41950                           
 41951                           ;stkvar	_grs @ sp[(-13)+4]
 41952  016868  0EFA               	movlw	250
 41953  01686A  24E1               	addwf	fsr1l,w,c
 41954  01686C  6EE9               	movwf	fsr0l,c
 41955  01686E  0EFF               	movlw	255
 41956  016870  20E2               	addwfc	fsr1h,w,c
 41957  016872  6EEA               	movwf	fsr0h,c
 41958  016874  50EF               	movf	indf0,w,c
 41959  016876  26DE               	addwf	postinc2,f,c
 41960  016878  0E00               	movlw	0
 41961  01687A  22DE               	addwfc	postinc2,f,c
 41962  01687C  22DE               	addwfc	postinc2,f,c
 41963  01687E  22DE               	addwfc	postinc2,f,c
 41964                           
 41965                           ;stkvar	_grs @ sp[(-13)+4]
 41966  016880  50E1               	movf	fsr1l,w,c
 41967  016882  0FF7               	addlw	-9
 41968  016884  6ED9               	movwf	fsr2l,c
 41969  016886  50E2               	movf	fsr1h,w,c
 41970  016888  6EDA               	movwf	fsr2h,c
 41971  01688A  0EFF               	movlw	255
 41972  01688C  22DA               	addwfc	fsr2h,f,c
 41973  01688E  0E08               	movlw	8
 41974  016890                     u8605:
 41975  016890  90D8               	bcf	status,0,c
 41976  016892  36DE               	rlcf	postinc2,f,c
 41977  016894  36DE               	rlcf	postinc2,f,c
 41978  016896  36DE               	rlcf	postinc2,f,c
 41979  016898  36DD               	rlcf	postdec2,f,c
 41980  01689A  52DD               	movf	postdec2,f,c
 41981  01689C  52DD               	movf	postdec2,f,c
 41982  01689E  2EE8               	decfsz	wreg,f,c
 41983  0168A0  D7F7               	goto	u8605
 41984  0168A2  0E82               	movlw	130
 41985  0168A4  6E0B               	movwf	(btemp+10)^0,c
 41986  0168A6  0EFF               	movlw	255
 41987  0168A8  6E0C               	movwf	(btemp+11)^0,c
 41988                           
 41989                           ;stkvar	_bexp @ sp[(-13)+10]
 41990  0168AA  0EFD               	movlw	-3
 41991  0168AC  50E3               	movf	plusw1,w,c
 41992  0168AE  6E09               	movwf	(btemp+8)^0,c
 41993  0168B0  6A0A               	clrf	(btemp+9)^0,c
 41994                           
 41995                           ;stkvar	_aexp @ sp[(-13)+11]
 41996  0168B2  0EFE               	movlw	-2
 41997  0168B4  50E3               	movf	plusw1,w,c
 41998  0168B6  2609               	addwf	(btemp+8)^0,f,c
 41999  0168B8  0E00               	movlw	0
 42000  0168BA  220A               	addwfc	(btemp+9)^0,f,c
 42001  0168BC  500B               	movf	(btemp+10)^0,w,c
 42002  0168BE  2609               	addwf	(btemp+8)^0,f,c
 42003  0168C0  500C               	movf	(btemp+11)^0,w,c
 42004  0168C2  220A               	addwfc	(btemp+9)^0,f,c
 42005                           
 42006                           ;stkvar	_temp @ sp[(-13)+8]
 42007  0168C4  0EFB               	movlw	-5
 42008  0168C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 42009  0168CC  0EFC               	movlw	-4
 42010  0168CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 42011  0168D4  D021               	goto	l10459
 42012  0168D6                     l10449:
 42013                           
 42014                           ;stkvar	_prod @ sp[(-13)+0]
 42015  0168D6  90D8               	bcf	status,0,c
 42016  0168D8  0EF3               	movlw	-13
 42017  0168DA  36E3               	rlcf	plusw1,f,c
 42018  0168DC  0EF4               	movlw	-12
 42019  0168DE  36E3               	rlcf	plusw1,f,c
 42020  0168E0  0EF5               	movlw	-11
 42021  0168E2  36E3               	rlcf	plusw1,f,c
 42022  0168E4  0EF6               	movlw	-10
 42023  0168E6  36E3               	rlcf	plusw1,f,c
 42024                           
 42025                           ;stkvar	_grs @ sp[(-13)+4]
 42026  0168E8  0EFA               	movlw	-6
 42027  0168EA  AEE3               	btfss	plusw1,7,c
 42028  0168EC  D002               	goto	l10455
 42029                           
 42030                           ;stkvar	_prod @ sp[(-13)+0]
 42031  0168EE  0EF3               	movlw	-13
 42032  0168F0  80E3               	bsf	plusw1,0,c
 42033  0168F2                     l10455:
 42034                           
 42035                           ;stkvar	_grs @ sp[(-13)+4]
 42036  0168F2  90D8               	bcf	status,0,c
 42037  0168F4  0EF7               	movlw	-9
 42038  0168F6  36E3               	rlcf	plusw1,f,c
 42039  0168F8  0EF8               	movlw	-8
 42040  0168FA  36E3               	rlcf	plusw1,f,c
 42041  0168FC  0EF9               	movlw	-7
 42042  0168FE  36E3               	rlcf	plusw1,f,c
 42043  016900  0EFA               	movlw	-6
 42044  016902  36E3               	rlcf	plusw1,f,c
 42045                           
 42046                           ;stkvar	_temp @ sp[(-13)+8]
 42047  016904  50E1               	movf	fsr1l,w,c
 42048  016906  0FFB               	addlw	-5
 42049  016908  6ED9               	movwf	fsr2l,c
 42050  01690A  50E2               	movf	fsr1h,w,c
 42051  01690C  6EDA               	movwf	fsr2h,c
 42052  01690E  0EFF               	movlw	255
 42053  016910  22DA               	addwfc	fsr2h,f,c
 42054  016912  06DE               	decf	postinc2,f,c
 42055  016914  0E00               	movlw	0
 42056  016916  5ADD               	subwfb	postdec2,f,c
 42057  016918                     l10459:
 42058                           
 42059                           ;stkvar	_prod @ sp[(-13)+0]
 42060  016918  0EF5               	movlw	-11
 42061  01691A  AEE3               	btfss	plusw1,7,c
 42062  01691C  D7DC               	goto	l10449
 42063                           
 42064                           ;stkvar	_aexp @ sp[(-13)+11]
 42065  01691E  0EFE               	movlw	-2
 42066  016920  6AE3               	clrf	plusw1,c
 42067                           
 42068                           ;stkvar	_grs @ sp[(-13)+4]
 42069  016922  0EFA               	movlw	-6
 42070  016924  AEE3               	btfss	plusw1,7,c
 42071  016926  D020               	goto	l10473
 42072                           
 42073                           ;stkvar	_grs @ sp[(-13)+4]
 42074  016928  50E1               	movf	fsr1l,w,c
 42075  01692A  0FF7               	addlw	-9
 42076  01692C  6ED9               	movwf	fsr2l,c
 42077  01692E  50E2               	movf	fsr1h,w,c
 42078  016930  6EDA               	movwf	fsr2h,c
 42079  016932  0EFF               	movlw	255
 42080  016934  22DA               	addwfc	fsr2h,f,c
 42081  016936  0EFF               	movlw	255
 42082  016938  14DE               	andwf	postinc2,w,c
 42083  01693A  6E09               	movwf	(btemp+8)^0,c
 42084  01693C  0EFF               	movlw	255
 42085  01693E  14DE               	andwf	postinc2,w,c
 42086  016940  6E0A               	movwf	(btemp+9)^0,c
 42087  016942  0EFF               	movlw	255
 42088  016944  14DE               	andwf	postinc2,w,c
 42089  016946  6E0B               	movwf	(btemp+10)^0,c
 42090  016948  0E7F               	movlw	127
 42091  01694A  14DE               	andwf	postinc2,w,c
 42092  01694C  6E0C               	movwf	(btemp+11)^0,c
 42093  01694E  5009               	movf	(btemp+8)^0,w,c
 42094  016950  100A               	iorwf	(btemp+9)^0,w,c
 42095  016952  100B               	iorwf	(btemp+10)^0,w,c
 42096  016954  100C               	iorwf	(btemp+11)^0,w,c
 42097  016956  B4D8               	btfsc	status,2,c
 42098  016958  D004               	goto	l10469
 42099  01695A                     u8640:
 42100                           
 42101                           ;stkvar	_aexp @ sp[(-13)+11]
 42102  01695A  0EFE               	movlw	-2
 42103  01695C  6AE3               	clrf	plusw1,c
 42104  01695E  2AE3               	incf	plusw1,f,c
 42105  016960  D003               	goto	l10473
 42106  016962                     l10469:
 42107                           
 42108                           ;stkvar	_prod @ sp[(-13)+0]
 42109  016962  0EF3               	movlw	-13
 42110  016964  B0E3               	btfsc	plusw1,0,c
 42111  016966  D7F9               	goto	u8640
 42112  016968                     l10473:
 42113                           
 42114                           ;stkvar	_aexp @ sp[(-13)+11]
 42115  016968  0EFE               	movlw	-2
 42116  01696A  50E3               	movf	plusw1,w,c
 42117  01696C  B4D8               	btfsc	status,2,c
 42118  01696E  D036               	goto	l10483
 42119                           
 42120                           ;stkvar	_prod @ sp[(-13)+0]
 42121  016970  50E1               	movf	fsr1l,w,c
 42122  016972  0FF3               	addlw	-13
 42123  016974  6ED9               	movwf	fsr2l,c
 42124  016976  50E2               	movf	fsr1h,w,c
 42125  016978  6EDA               	movwf	fsr2h,c
 42126  01697A  0EFF               	movlw	255
 42127  01697C  22DA               	addwfc	fsr2h,f,c
 42128  01697E  2ADE               	incf	postinc2,f,c
 42129  016980  0E00               	movlw	0
 42130  016982  22DE               	addwfc	postinc2,f,c
 42131  016984  22DE               	addwfc	postinc2,f,c
 42132  016986  22DE               	addwfc	postinc2,f,c
 42133                           
 42134                           ;stkvar	_prod @ sp[(-13)+0]
 42135  016988  0EF6               	movlw	-10
 42136  01698A  A0E3               	btfss	plusw1,0,c
 42137  01698C  D027               	goto	l10483
 42138  01698E  0E01               	movlw	1
 42139  016990  6E0C               	movwf	(btemp+11)^0,c
 42140                           
 42141                           ;stkvar	_prod @ sp[(-13)+0]
 42142  016992  50E1               	movf	fsr1l,w,c
 42143  016994  0FF3               	addlw	-13
 42144  016996  6ED9               	movwf	fsr2l,c
 42145  016998  50E2               	movf	fsr1h,w,c
 42146  01699A  6EDA               	movwf	fsr2h,c
 42147  01699C  0EFF               	movlw	255
 42148  01699E  22DA               	addwfc	fsr2h,f,c
 42149  0169A0  280C               	incf	(btemp+11)^0,w,c
 42150  0169A2  52DE               	movf	postinc2,f,c
 42151  0169A4  D008               	goto	u8680
 42152  0169A6                     u8685:
 42153  0169A6  52DE               	movf	postinc2,f,c
 42154  0169A8  90D8               	bcf	status,0,c
 42155  0169AA  BEDC               	btfsc	preinc2,7,c
 42156  0169AC  80D8               	bsf	status,0,c
 42157  0169AE  32DD               	rrcf	postdec2,f,c
 42158  0169B0  32DD               	rrcf	postdec2,f,c
 42159  0169B2  32DD               	rrcf	postdec2,f,c
 42160  0169B4  32DE               	rrcf	postinc2,f,c
 42161  0169B6                     u8680:
 42162  0169B6  2EE8               	decfsz	wreg,f,c
 42163  0169B8  D7F6               	goto	u8685
 42164                           
 42165                           ;stkvar	_temp @ sp[(-13)+8]
 42166  0169BA  0EFB               	movlw	-5
 42167  0169BC  50E3               	movf	plusw1,w,c
 42168  0169BE  0F01               	addlw	1
 42169  0169C0  6E01               	movwf	btemp^0,c
 42170  0169C2  0EFB               	movlw	-5
 42171  0169C4  0060  F007  FFE3   	movff	btemp,plusw1
 42172  0169CA  6A01               	clrf	btemp^0,c
 42173  0169CC  0EFC               	movlw	-4
 42174  0169CE  50E3               	movf	plusw1,w,c
 42175  0169D0  2001               	addwfc	btemp^0,w,c
 42176  0169D2  6E01               	movwf	btemp^0,c
 42177  0169D4  0EFC               	movlw	-4
 42178  0169D6  0060  F007  FFE3   	movff	btemp,plusw1
 42179  0169DC                     l10483:
 42180                           
 42181                           ;stkvar	_temp @ sp[(-13)+8]
 42182  0169DC  0EFC               	movlw	-4
 42183  0169DE  BEE3               	btfsc	plusw1,7,c
 42184  0169E0  D020               	goto	l10487
 42185  0169E2  0EFC               	movlw	-4
 42186  0169E4  50E3               	movf	plusw1,w,c
 42187  0169E6  E104               	bnz	u8690
 42188  0169E8  0EFB               	movlw	-5
 42189  0169EA  28E3               	incf	plusw1,w,c
 42190  0169EC  A0D8               	btfss	status,0,c
 42191  0169EE  D019               	goto	l10487
 42192  0169F0                     u8690:
 42193  0169F0  0E00               	movlw	0
 42194  0169F2  6E09               	movwf	(btemp+8)^0,c
 42195  0169F4  0E00               	movlw	0
 42196  0169F6  6E0A               	movwf	(btemp+9)^0,c
 42197  0169F8  0E80               	movlw	128
 42198  0169FA  6E0B               	movwf	(btemp+10)^0,c
 42199  0169FC  0E7F               	movlw	127
 42200  0169FE  6E0C               	movwf	(btemp+11)^0,c
 42201                           
 42202                           ;stkvar	_prod @ sp[(-13)+0]
 42203  016A00  0EF3               	movlw	-13
 42204  016A02  0060  F027  FFE3   	movff	btemp+8,plusw1
 42205  016A08  0EF4               	movlw	-12
 42206  016A0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 42207  016A10  0EF5               	movlw	-11
 42208  016A12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 42209  016A18  0EF6               	movlw	-10
 42210  016A1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 42211  016A20  D044               	goto	l10503
 42212  016A22                     l10487:
 42213                           
 42214                           ;stkvar	_temp @ sp[(-13)+8]
 42215  016A22  0EFC               	movlw	-4
 42216  016A24  BEE3               	btfsc	plusw1,7,c
 42217  016A26  D007               	goto	u8700
 42218  016A28  0EFC               	movlw	-4
 42219  016A2A  50E3               	movf	plusw1,w,c
 42220  016A2C  E10F               	bnz	l10493
 42221  016A2E  0EFB               	movlw	-5
 42222  016A30  04E3               	decf	plusw1,w,c
 42223  016A32  B0D8               	btfsc	status,0,c
 42224  016A34  D00B               	goto	l10493
 42225  016A36                     u8700:
 42226                           
 42227                           ;stkvar	_prod @ sp[(-13)+0]
 42228  016A36  0EF3               	movlw	-13
 42229  016A38  6AE3               	clrf	plusw1,c
 42230  016A3A  0EF4               	movlw	-12
 42231  016A3C  6AE3               	clrf	plusw1,c
 42232  016A3E  0EF5               	movlw	-11
 42233  016A40  6AE3               	clrf	plusw1,c
 42234  016A42  0EF6               	movlw	-10
 42235  016A44  6AE3               	clrf	plusw1,c
 42236                           
 42237                           ;stkvar	_sign @ sp[(-13)+12]
 42238  016A46  0EFF               	movlw	-1
 42239  016A48  6AE3               	clrf	plusw1,c
 42240  016A4A  D02F               	goto	l10503
 42241  016A4C                     l10493:
 42242                           
 42243                           ;stkvar	_temp @ sp[(-13)+8]
 42244                           ;stkvar	_bexp @ sp[(-13)+10]
 42245  016A4C  0EFB               	movlw	-5
 42246  016A4E  006F FF8C  F001    	movff	plusw1,btemp
 42247  016A54  0EFD               	movlw	-3
 42248  016A56  0060  F007  FFE3   	movff	btemp,plusw1
 42249                           
 42250                           ;stkvar	_prod @ sp[(-13)+0]
 42251  016A5C  50E1               	movf	fsr1l,w,c
 42252  016A5E  0FF3               	addlw	-13
 42253  016A60  6ED9               	movwf	fsr2l,c
 42254  016A62  50E2               	movf	fsr1h,w,c
 42255  016A64  6EDA               	movwf	fsr2h,c
 42256  016A66  0EFF               	movlw	255
 42257  016A68  22DA               	addwfc	fsr2h,f,c
 42258  016A6A  0EFF               	movlw	255
 42259  016A6C  16DE               	andwf	postinc2,f,c
 42260  016A6E  0EFF               	movlw	255
 42261  016A70  16DE               	andwf	postinc2,f,c
 42262  016A72  0E7F               	movlw	127
 42263  016A74  16DE               	andwf	postinc2,f,c
 42264  016A76  0E00               	movlw	0
 42265  016A78  16DE               	andwf	postinc2,f,c
 42266                           
 42267                           ;stkvar	_bexp @ sp[(-13)+10]
 42268  016A7A  0EFD               	movlw	-3
 42269  016A7C  A0E3               	btfss	plusw1,0,c
 42270  016A7E  D008               	goto	l10501
 42271                           
 42272                           ;stkvar	_prod @ sp[(-13)+0]
 42273  016A80  0EF5               	movlw	245
 42274  016A82  24E1               	addwf	fsr1l,w,c
 42275  016A84  6ED9               	movwf	fsr2l,c
 42276  016A86  0EFF               	movlw	255
 42277  016A88  20E2               	addwfc	fsr1h,w,c
 42278  016A8A  6EDA               	movwf	fsr2h,c
 42279  016A8C  0E00               	movlw	0
 42280  016A8E  8EDB               	bsf	plusw2,7,c
 42281  016A90                     l10501:
 42282                           
 42283                           ;stkvar	_prod @ sp[(-13)+0]
 42284  016A90  0EF6               	movlw	246
 42285  016A92  24E1               	addwf	fsr1l,w,c
 42286  016A94  6ED9               	movwf	fsr2l,c
 42287  016A96  0EFF               	movlw	255
 42288  016A98  20E2               	addwfc	fsr1h,w,c
 42289  016A9A  6EDA               	movwf	fsr2h,c
 42290                           
 42291                           ;stkvar	_bexp @ sp[(-13)+10]
 42292  016A9C  0EFD               	movlw	-3
 42293  016A9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 42294  016AA4  90D8               	bcf	status,0,c
 42295  016AA6  300C               	rrcf	(btemp+11)^0,w,c
 42296  016AA8  6EDF               	movwf	indf2,c
 42297  016AAA                     l10503:
 42298                           
 42299                           ;stkvar	_sign @ sp[(-13)+12]
 42300  016AAA  0EFF               	movlw	-1
 42301  016AAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 42302                           
 42303                           ;stkvar	_prod @ sp[(-13)+0]
 42304  016AB2  0EF6               	movlw	246
 42305  016AB4  24E1               	addwf	fsr1l,w,c
 42306  016AB6  6ED9               	movwf	fsr2l,c
 42307  016AB8  0EFF               	movlw	255
 42308  016ABA  20E2               	addwfc	fsr1h,w,c
 42309  016ABC  6EDA               	movwf	fsr2h,c
 42310  016ABE  500C               	movf	(btemp+11)^0,w,c
 42311  016AC0  12DF               	iorwf	indf2,f,c
 42312                           
 42313                           ;stkvar	_prod @ sp[(-13)+0]
 42314  016AC2  0EF3               	movlw	-13
 42315  016AC4  006F FF8C  F001    	movff	plusw1,btemp
 42316  016ACA  0EF4               	movlw	-12
 42317  016ACC  006F FF8C  F002    	movff	plusw1,btemp+1
 42318  016AD2  0EF5               	movlw	-11
 42319  016AD4  006F FF8C  F003    	movff	plusw1,btemp+2
 42320  016ADA  0EF6               	movlw	-10
 42321  016ADC  006F FF8C  F004    	movff	plusw1,btemp+3
 42322  016AE2                     l3315:
 42323                           
 42324                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 42325  016AE2  0EEB               	movlw	235
 42326  016AE4  26E1               	addwf	fsr1l,f,c
 42327  016AE6  0EFF               	movlw	255
 42328  016AE8  22E2               	addwfc	fsr1h,f,c
 42329  016AEA  0012               	return		;funcret
 42330  016AEC                     __end_of___flmul:
 42331                           	opt callstack 0
 42332                           
 42333 ;; *************** function _SYSTEM_Initialize *****************
 42334 ;; Defined at:
 42335 ;;		line 50 in file "mcc_generated_files/mcc.c"
 42336 ;; Parameters:    Size  Location     Type
 42337 ;;		None
 42338 ;; Auto vars:     Size  Location     Type
 42339 ;;		None
 42340 ;; Return value:  Size  Location     Type
 42341 ;;                  1  [STACK] void 
 42342 ;; Registers used:
 42343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 42344 ;; Tracked objects:
 42345 ;;		On entry : 0/0
 42346 ;;		On exit  : 3F/3C
 42347 ;;		Unchanged: 0/0
 42348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42353 ;;Total ram usage:        0 bytes
 42354 ;; Hardware stack levels used:    1
 42355 ;; Hardware stack levels required when called:   17
 42356 ;; This function calls:
 42357 ;;		_ADCC_Initialize
 42358 ;;		_CLKREF_Initialize
 42359 ;;		_CRC_Initialize
 42360 ;;		_DMA1_Initialize
 42361 ;;		_DMA2_Initialize
 42362 ;;		_EXT_INT_Initialize
 42363 ;;		_FVR_Initialize
 42364 ;;		_INTERRUPT_Initialize
 42365 ;;		_OSCILLATOR_Initialize
 42366 ;;		_PIN_MANAGER_Initialize
 42367 ;;		_PMD_Initialize
 42368 ;;		_PWM8_Initialize
 42369 ;;		_SPI1_Initialize
 42370 ;;		_TMR2_Initialize
 42371 ;;		_TMR3_Initialize
 42372 ;;		_TMR5_Initialize
 42373 ;;		_TMR6_Initialize
 42374 ;;		_UART1_Initialize
 42375 ;;		_UART2_Initialize
 42376 ;; This function is called by:
 42377 ;;		_main
 42378 ;; This function uses a reentrant model
 42379 ;;
 42380                           
 42381                           	psect	text152
 42382  000FDC                     __ptext152:
 42383                           	opt callstack 0
 42384  000FDC                     _SYSTEM_Initialize:
 42385                           	opt callstack 13
 42386                           
 42387                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 42388                           
 42389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42390                           ;incstack = 0
 42391  000FDC  ECC1  F005         	call	_INTERRUPT_Initialize	;wreg free
 42392                           
 42393                           ; BSR set to: 57
 42394                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 42395  000FE0  ECC0  F00E         	call	_PMD_Initialize	;wreg free
 42396                           
 42397                           ; BSR set to: 57
 42398                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 42399  000FE4  EC2A  F002         	call	_PIN_MANAGER_Initialize	;wreg free
 42400                           
 42401                           ; BSR set to: 58
 42402                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 42403  000FE8  ECB5  F00E         	call	_OSCILLATOR_Initialize	;wreg free
 42404                           
 42405                           ; BSR set to: 57
 42406                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 42407  000FEC  EC55  F00F         	call	_FVR_Initialize	;wreg free
 42408                           
 42409                           ; BSR set to: 62
 42410                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 42411  000FF0  EC73  F002         	call	_CRC_Initialize	;wreg free
 42412                           
 42413                           ; BSR set to: 0
 42414                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 42415  000FF4  EC23  F005         	call	_ADCC_Initialize	;wreg free
 42416                           
 42417                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 42418  000FF8  ECAA  F00E         	call	_PWM8_Initialize	;wreg free
 42419                           
 42420                           ; BSR set to: 63
 42421                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 42422  000FFC  EC93  F00E         	call	_TMR2_Initialize	;wreg free
 42423                           
 42424                           ; BSR set to: 57
 42425                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 42426  001000  EC15  F00B         	call	_EXT_INT_Initialize	;wreg free
 42427                           
 42428                           ; BSR set to: 57
 42429                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 42430  001004  EC02  F00C         	call	_TMR6_Initialize	;wreg free
 42431                           
 42432                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 42433  001008  ECCD  F008         	call	_TMR3_Initialize	;wreg free
 42434                           
 42435                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 42436  00100C  ECA9  F008         	call	_TMR5_Initialize	;wreg free
 42437                           
 42438                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 42439  001010  EC85  F008         	call	_UART1_Initialize	;wreg free
 42440                           
 42441                           ; BSR set to: 57
 42442                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 42443  001014  ECBA  F006         	call	_UART2_Initialize	;wreg free
 42444                           
 42445                           ; BSR set to: 57
 42446                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 42447  001018  EC9F  F00E         	call	_SPI1_Initialize	;wreg free
 42448                           
 42449                           ; BSR set to: 61
 42450                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 42451  00101C  EC44  F007         	call	_DMA2_Initialize	;wreg free
 42452                           
 42453                           ; BSR set to: 59
 42454                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 42455  001020  ECEE  F004         	call	_DMA1_Initialize	;wreg free
 42456                           
 42457                           ; BSR set to: 59
 42458                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 42459  001024  EC29  F00F         	call	_CLKREF_Initialize	;wreg free
 42460                           
 42461                           ; BSR set to: 60
 42462                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 42463  001028  0012               	return		;funcret
 42464  00102A                     __end_of_SYSTEM_Initialize:
 42465                           	opt callstack 0
 42466                           
 42467 ;; *************** function _UART2_Initialize *****************
 42468 ;; Defined at:
 42469 ;;		line 78 in file "mcc_generated_files/uart2.c"
 42470 ;; Parameters:    Size  Location     Type
 42471 ;;		None
 42472 ;; Auto vars:     Size  Location     Type
 42473 ;;		None
 42474 ;; Return value:  Size  Location     Type
 42475 ;;                  1  [STACK] void 
 42476 ;; Registers used:
 42477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 42478 ;; Tracked objects:
 42479 ;;		On entry : 3F/39
 42480 ;;		On exit  : 3F/39
 42481 ;;		Unchanged: 0/0
 42482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42487 ;;Total ram usage:        0 bytes
 42488 ;; Hardware stack levels used:    1
 42489 ;; Hardware stack levels required when called:   16
 42490 ;; This function calls:
 42491 ;;		_UART2_SetRxInterruptHandler
 42492 ;;		_UART2_SetTxInterruptHandler
 42493 ;; This function is called by:
 42494 ;;		_SYSTEM_Initialize
 42495 ;; This function uses a reentrant model
 42496 ;;
 42497                           
 42498                           	psect	text153
 42499  000D74                     __ptext153:
 42500                           	opt callstack 0
 42501  000D74                     _UART2_Initialize:
 42502                           	opt callstack 13
 42503                           
 42504                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 42505                           
 42506                           ; BSR set to: 60
 42507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42508                           ;incstack = 0
 42509  000D74  0139               	movlb	57	; () banked
 42510  000D76  9596               	bcf	150,2,b	;volatile
 42511                           
 42512                           ; BSR set to: 57
 42513                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 42514  000D78  0E28               	movlw	low _UART2_Receive_ISR
 42515  000D7A  6EE6               	movwf	postinc1,c
 42516  000D7C  0E1C               	movlw	high _UART2_Receive_ISR
 42517  000D7E  6EE6               	movwf	postinc1,c
 42518  000D80  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 42519  000D82  6EE6               	movwf	postinc1,c
 42520  000D84  EC53  F00C         	call	_UART2_SetRxInterruptHandler	;wreg free
 42521                           
 42522                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 42523  000D88  0139               	movlb	57	; () banked
 42524  000D8A  9796               	bcf	150,3,b	;volatile
 42525                           
 42526                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 42527  000D8C  0ED8               	movlw	low _UART2_Transmit_ISR
 42528  000D8E  6EE6               	movwf	postinc1,c
 42529  000D90  0E17               	movlw	high _UART2_Transmit_ISR
 42530  000D92  6EE6               	movwf	postinc1,c
 42531  000D94  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 42532  000D96  6EE6               	movwf	postinc1,c
 42533  000D98  EC3F  F00C         	call	_UART2_SetTxInterruptHandler	;wreg free
 42534                           
 42535                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 42536  000D9C  013D               	movlb	61	; () banked
 42537  000D9E  6BD4               	clrf	212,b	;volatile
 42538                           
 42539                           ; BSR set to: 61
 42540                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 42541  000DA0  6BD6               	clrf	214,b	;volatile
 42542                           
 42543                           ; BSR set to: 61
 42544                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 42545  000DA2  6BD8               	clrf	216,b	;volatile
 42546                           
 42547                           ; BSR set to: 61
 42548                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 42549  000DA4  0EB0               	movlw	176
 42550  000DA6  6FDA               	movwf	218,b	;volatile
 42551                           
 42552                           ; BSR set to: 61
 42553                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 42554  000DA8  0E80               	movlw	128
 42555  000DAA  6FDB               	movwf	219,b	;volatile
 42556                           
 42557                           ; BSR set to: 61
 42558                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 42559  000DAC  6BDC               	clrf	220,b	;volatile
 42560                           
 42561                           ; BSR set to: 61
 42562                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 42563  000DAE  0E82               	movlw	130
 42564  000DB0  6FDD               	movwf	221,b	;volatile
 42565                           
 42566                           ; BSR set to: 61
 42567                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 42568  000DB2  0E06               	movlw	6
 42569  000DB4  6FDE               	movwf	222,b	;volatile
 42570                           
 42571                           ; BSR set to: 61
 42572                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 42573  000DB6  6BDF               	clrf	223,b	;volatile
 42574                           
 42575                           ; BSR set to: 61
 42576                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 42577  000DB8  6BE0               	clrf	224,b	;volatile
 42578                           
 42579                           ; BSR set to: 61
 42580                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 42581  000DBA  6BE1               	clrf	225,b	;volatile
 42582                           
 42583                           ; BSR set to: 61
 42584                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 42585  000DBC  6BE2               	clrf	226,b	;volatile
 42586                           
 42587                           ; BSR set to: 61
 42588                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 42589  000DBE  0100               	movlb	0	; () banked
 42590  000DC0  6BDD               	clrf	_uart2TxHead& (0+255),b	;volatile
 42591                           
 42592                           ; BSR set to: 0
 42593                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 42594  000DC2  6A46               	clrf	_uart2TxTail^0,c	;volatile
 42595                           
 42596                           ; BSR set to: 0
 42597                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 42598  000DC4  0E40               	movlw	64
 42599  000DC6  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 42600                           
 42601                           ; BSR set to: 0
 42602                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 42603  000DC8  6A44               	clrf	_uart2RxHead^0,c	;volatile
 42604                           
 42605                           ; BSR set to: 0
 42606                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 42607  000DCA  6BDC               	clrf	_uart2RxTail& (0+255),b	;volatile
 42608                           
 42609                           ; BSR set to: 0
 42610                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 42611  000DCC  6BDB               	clrf	_uart2RxCount& (0+255),b	;volatile
 42612                           
 42613                           ; BSR set to: 0
 42614                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 42615  000DCE  0139               	movlb	57	; () banked
 42616  000DD0  8596               	bsf	150,2,b	;volatile
 42617                           
 42618                           ; BSR set to: 57
 42619                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 42620  000DD2  0012               	return		;funcret
 42621  000DD4                     __end_of_UART2_Initialize:
 42622                           	opt callstack 0
 42623                           
 42624 ;; *************** function _UART2_SetTxInterruptHandler *****************
 42625 ;; Defined at:
 42626 ;;		line 252 in file "mcc_generated_files/uart2.c"
 42627 ;; Parameters:    Size  Location     Type
 42628 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42629 ;;		 -> UART2_Transmit_ISR(1), 
 42630 ;; Auto vars:     Size  Location     Type
 42631 ;;		None
 42632 ;; Return value:  Size  Location     Type
 42633 ;;                  1  [STACK] void 
 42634 ;; Registers used:
 42635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42636 ;; Tracked objects:
 42637 ;;		On entry : 3F/39
 42638 ;;		On exit  : 0/0
 42639 ;;		Unchanged: 0/0
 42640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42645 ;;Total ram usage:        0 bytes
 42646 ;; Hardware stack levels used:    1
 42647 ;; Hardware stack levels required when called:   15
 42648 ;; This function calls:
 42649 ;;		Nothing
 42650 ;; This function is called by:
 42651 ;;		_UART2_Initialize
 42652 ;; This function uses a reentrant model
 42653 ;;
 42654                           
 42655                           	psect	text154
 42656  00187E                     __ptext154:
 42657                           	opt callstack 0
 42658  00187E                     _UART2_SetTxInterruptHandler:
 42659                           	opt callstack 13
 42660                           
 42661                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 42662                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42663                           
 42664                           ; BSR set to: 57
 42665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42666                           ;incstack = 0
 42667  00187E  50E1               	movf	fsr1l,w,c
 42668  001880  0FFD               	addlw	-3
 42669  001882  6ED9               	movwf	fsr2l,c
 42670  001884  50E2               	movf	fsr1h,w,c
 42671  001886  6EDA               	movwf	fsr2h,c
 42672  001888  0EFF               	movlw	255
 42673  00188A  22DA               	addwfc	fsr2h,f,c
 42674  00188C  006F FF78  F0B8    	movff	postinc2,_UART2_TxInterruptHandler
 42675  001892  006F FF78  F0B9    	movff	postinc2,_UART2_TxInterruptHandler+1
 42676  001898  006F FF74  F0BA    	movff	postdec2,_UART2_TxInterruptHandler+2
 42677                           
 42678                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42679  00189E  52E5               	movf	postdec1,f,c
 42680  0018A0  52E5               	movf	postdec1,f,c
 42681  0018A2  52E5               	movf	postdec1,f,c
 42682  0018A4  0012               	return		;funcret
 42683  0018A6                     __end_of_UART2_SetTxInterruptHandler:
 42684                           	opt callstack 0
 42685                           
 42686 ;; *************** function _UART2_SetRxInterruptHandler *****************
 42687 ;; Defined at:
 42688 ;;		line 248 in file "mcc_generated_files/uart2.c"
 42689 ;; Parameters:    Size  Location     Type
 42690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42691 ;;		 -> UART2_Receive_ISR(1), 
 42692 ;; Auto vars:     Size  Location     Type
 42693 ;;		None
 42694 ;; Return value:  Size  Location     Type
 42695 ;;                  1  [STACK] void 
 42696 ;; Registers used:
 42697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42698 ;; Tracked objects:
 42699 ;;		On entry : 3F/39
 42700 ;;		On exit  : 0/0
 42701 ;;		Unchanged: 0/0
 42702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42707 ;;Total ram usage:        0 bytes
 42708 ;; Hardware stack levels used:    1
 42709 ;; Hardware stack levels required when called:   15
 42710 ;; This function calls:
 42711 ;;		Nothing
 42712 ;; This function is called by:
 42713 ;;		_UART2_Initialize
 42714 ;; This function uses a reentrant model
 42715 ;;
 42716                           
 42717                           	psect	text155
 42718  0018A6                     __ptext155:
 42719                           	opt callstack 0
 42720  0018A6                     _UART2_SetRxInterruptHandler:
 42721                           	opt callstack 13
 42722                           
 42723                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 42724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42725                           
 42726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42727                           ;incstack = 0
 42728  0018A6  50E1               	movf	fsr1l,w,c
 42729  0018A8  0FFD               	addlw	-3
 42730  0018AA  6ED9               	movwf	fsr2l,c
 42731  0018AC  50E2               	movf	fsr1h,w,c
 42732  0018AE  6EDA               	movwf	fsr2h,c
 42733  0018B0  0EFF               	movlw	255
 42734  0018B2  22DA               	addwfc	fsr2h,f,c
 42735  0018B4  006F FF78  F0BB    	movff	postinc2,_UART2_RxInterruptHandler
 42736  0018BA  006F FF78  F0BC    	movff	postinc2,_UART2_RxInterruptHandler+1
 42737  0018C0  006F FF74  F0BD    	movff	postdec2,_UART2_RxInterruptHandler+2
 42738                           
 42739                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42740  0018C6  52E5               	movf	postdec1,f,c
 42741  0018C8  52E5               	movf	postdec1,f,c
 42742  0018CA  52E5               	movf	postdec1,f,c
 42743  0018CC  0012               	return		;funcret
 42744  0018CE                     __end_of_UART2_SetRxInterruptHandler:
 42745                           	opt callstack 0
 42746                           
 42747 ;; *************** function _UART1_Initialize *****************
 42748 ;; Defined at:
 42749 ;;		line 75 in file "mcc_generated_files/uart1.c"
 42750 ;; Parameters:    Size  Location     Type
 42751 ;;		None
 42752 ;; Auto vars:     Size  Location     Type
 42753 ;;		None
 42754 ;; Return value:  Size  Location     Type
 42755 ;;                  1  [STACK] void 
 42756 ;; Registers used:
 42757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 42758 ;; Tracked objects:
 42759 ;;		On entry : 0/39
 42760 ;;		On exit  : 3F/39
 42761 ;;		Unchanged: 0/0
 42762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42767 ;;Total ram usage:        0 bytes
 42768 ;; Hardware stack levels used:    1
 42769 ;; Hardware stack levels required when called:   16
 42770 ;; This function calls:
 42771 ;;		_UART1_SetRxInterruptHandler
 42772 ;; This function is called by:
 42773 ;;		_SYSTEM_Initialize
 42774 ;; This function uses a reentrant model
 42775 ;;
 42776                           
 42777                           	psect	text156
 42778  00110A                     __ptext156:
 42779                           	opt callstack 0
 42780  00110A                     _UART1_Initialize:
 42781                           	opt callstack 13
 42782                           
 42783                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 42784                           
 42785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42786                           ;incstack = 0
 42787  00110A  0139               	movlb	57	; () banked
 42788  00110C  9793               	bcf	147,3,b	;volatile
 42789                           
 42790                           ; BSR set to: 57
 42791                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 42792  00110E  0EC6               	movlw	low _UART1_Receive_ISR
 42793  001110  6EE6               	movwf	postinc1,c
 42794  001112  0E1B               	movlw	high _UART1_Receive_ISR
 42795  001114  6EE6               	movwf	postinc1,c
 42796  001116  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 42797  001118  6EE6               	movwf	postinc1,c
 42798  00111A  EC67  F00C         	call	_UART1_SetRxInterruptHandler	;wreg free
 42799                           
 42800                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 42801  00111E  013D               	movlb	61	; () banked
 42802  001120  6BEC               	clrf	236,b	;volatile
 42803                           
 42804                           ; BSR set to: 61
 42805                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 42806  001122  6BED               	clrf	237,b	;volatile
 42807                           
 42808                           ; BSR set to: 61
 42809                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 42810  001124  6BEE               	clrf	238,b	;volatile
 42811                           
 42812                           ; BSR set to: 61
 42813                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 42814  001126  6BEF               	clrf	239,b	;volatile
 42815                           
 42816                           ; BSR set to: 61
 42817                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 42818  001128  6BF0               	clrf	240,b	;volatile
 42819                           
 42820                           ; BSR set to: 61
 42821                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 42822  00112A  6BF1               	clrf	241,b	;volatile
 42823                           
 42824                           ; BSR set to: 61
 42825                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 42826  00112C  0EB0               	movlw	176
 42827  00112E  6FF2               	movwf	242,b	;volatile
 42828                           
 42829                           ; BSR set to: 61
 42830                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 42831  001130  0E80               	movlw	128
 42832  001132  6FF3               	movwf	243,b	;volatile
 42833                           
 42834                           ; BSR set to: 61
 42835                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 42836  001134  6BF4               	clrf	244,b	;volatile
 42837                           
 42838                           ; BSR set to: 61
 42839                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 42840  001136  0E8A               	movlw	138
 42841  001138  6FF5               	movwf	245,b	;volatile
 42842                           
 42843                           ; BSR set to: 61
 42844                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 42845  00113A  6BF6               	clrf	246,b	;volatile
 42846                           
 42847                           ; BSR set to: 61
 42848                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 42849  00113C  6BF7               	clrf	247,b	;volatile
 42850                           
 42851                           ; BSR set to: 61
 42852                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 42853  00113E  6BF8               	clrf	248,b	;volatile
 42854                           
 42855                           ; BSR set to: 61
 42856                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 42857  001140  6BF9               	clrf	249,b	;volatile
 42858                           
 42859                           ; BSR set to: 61
 42860                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 42861  001142  6BFA               	clrf	250,b	;volatile
 42862                           
 42863                           ; BSR set to: 61
 42864                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 42865  001144  6A47               	clrf	_uart1RxHead^0,c	;volatile
 42866                           
 42867                           ; BSR set to: 61
 42868                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 42869  001146  0100               	movlb	0	; () banked
 42870  001148  6BDF               	clrf	_uart1RxTail& (0+255),b	;volatile
 42871                           
 42872                           ; BSR set to: 0
 42873                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 42874  00114A  6BDE               	clrf	_uart1RxCount& (0+255),b	;volatile
 42875                           
 42876                           ; BSR set to: 0
 42877                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 42878  00114C  0139               	movlb	57	; () banked
 42879  00114E  8793               	bsf	147,3,b	;volatile
 42880                           
 42881                           ; BSR set to: 57
 42882                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 42883  001150  0012               	return		;funcret
 42884  001152                     __end_of_UART1_Initialize:
 42885                           	opt callstack 0
 42886                           
 42887 ;; *************** function _UART1_SetRxInterruptHandler *****************
 42888 ;; Defined at:
 42889 ;;		line 207 in file "mcc_generated_files/uart1.c"
 42890 ;; Parameters:    Size  Location     Type
 42891 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42892 ;;		 -> UART1_Receive_ISR(1), 
 42893 ;; Auto vars:     Size  Location     Type
 42894 ;;		None
 42895 ;; Return value:  Size  Location     Type
 42896 ;;                  1  [STACK] void 
 42897 ;; Registers used:
 42898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42899 ;; Tracked objects:
 42900 ;;		On entry : 3F/39
 42901 ;;		On exit  : 0/0
 42902 ;;		Unchanged: 0/0
 42903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42908 ;;Total ram usage:        0 bytes
 42909 ;; Hardware stack levels used:    1
 42910 ;; Hardware stack levels required when called:   15
 42911 ;; This function calls:
 42912 ;;		Nothing
 42913 ;; This function is called by:
 42914 ;;		_UART1_Initialize
 42915 ;; This function uses a reentrant model
 42916 ;;
 42917                           
 42918                           	psect	text157
 42919  0018CE                     __ptext157:
 42920                           	opt callstack 0
 42921  0018CE                     _UART1_SetRxInterruptHandler:
 42922                           	opt callstack 13
 42923                           
 42924                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 42925                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42926                           
 42927                           ; BSR set to: 57
 42928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42929                           ;incstack = 0
 42930  0018CE  50E1               	movf	fsr1l,w,c
 42931  0018D0  0FFD               	addlw	-3
 42932  0018D2  6ED9               	movwf	fsr2l,c
 42933  0018D4  50E2               	movf	fsr1h,w,c
 42934  0018D6  6EDA               	movwf	fsr2h,c
 42935  0018D8  0EFF               	movlw	255
 42936  0018DA  22DA               	addwfc	fsr2h,f,c
 42937  0018DC  006F FF78  F0B5    	movff	postinc2,_UART1_RxInterruptHandler
 42938  0018E2  006F FF78  F0B6    	movff	postinc2,_UART1_RxInterruptHandler+1
 42939  0018E8  006F FF74  F0B7    	movff	postdec2,_UART1_RxInterruptHandler+2
 42940                           
 42941                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42942  0018EE  52E5               	movf	postdec1,f,c
 42943  0018F0  52E5               	movf	postdec1,f,c
 42944  0018F2  52E5               	movf	postdec1,f,c
 42945  0018F4  0012               	return		;funcret
 42946  0018F6                     __end_of_UART1_SetRxInterruptHandler:
 42947                           	opt callstack 0
 42948                           
 42949 ;; *************** function _TMR6_Initialize *****************
 42950 ;; Defined at:
 42951 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 42952 ;; Parameters:    Size  Location     Type
 42953 ;;		None
 42954 ;; Auto vars:     Size  Location     Type
 42955 ;;		None
 42956 ;; Return value:  Size  Location     Type
 42957 ;;                  1  [STACK] void 
 42958 ;; Registers used:
 42959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 42960 ;; Tracked objects:
 42961 ;;		On entry : 3F/39
 42962 ;;		On exit  : 0/0
 42963 ;;		Unchanged: 0/0
 42964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42969 ;;Total ram usage:        0 bytes
 42970 ;; Hardware stack levels used:    1
 42971 ;; Hardware stack levels required when called:   16
 42972 ;; This function calls:
 42973 ;;		_TMR6_SetInterruptHandler
 42974 ;; This function is called by:
 42975 ;;		_SYSTEM_Initialize
 42976 ;; This function uses a reentrant model
 42977 ;;
 42978                           
 42979                           	psect	text158
 42980  001804                     __ptext158:
 42981                           	opt callstack 0
 42982  001804                     _TMR6_Initialize:
 42983                           	opt callstack 13
 42984                           
 42985                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 42986                           
 42987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42988                           ;incstack = 0
 42989  001804  0E01               	movlw	1
 42990  001806  6E96               	movwf	150,c	;volatile
 42991                           
 42992                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 42993  001808  6A95               	clrf	149,c	;volatile
 42994                           
 42995                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 42996  00180A  6A97               	clrf	151,c	;volatile
 42997                           
 42998                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 42999  00180C  0E7C               	movlw	124
 43000  00180E  6E93               	movwf	147,c	;volatile
 43001                           
 43002                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43003  001810  6A92               	clrf	146,c	;volatile
 43004                           
 43005                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43006  001812  0139               	movlb	57	; () banked
 43007  001814  91A9               	bcf	169,0,b	;volatile
 43008                           
 43009                           ; BSR set to: 57
 43010                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43011  001816  8199               	bsf	153,0,b	;volatile
 43012                           
 43013                           ; BSR set to: 57
 43014                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43015  001818  0E2A               	movlw	low _TMR6_DefaultInterruptHandler
 43016  00181A  6EE6               	movwf	postinc1,c
 43017  00181C  0E10               	movlw	high _TMR6_DefaultInterruptHandler
 43018  00181E  6EE6               	movwf	postinc1,c
 43019  001820  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43020  001822  6EE6               	movwf	postinc1,c
 43021  001824  EC7B  F00C         	call	_TMR6_SetInterruptHandler	;wreg free
 43022                           
 43023                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43024  001828  0EE0               	movlw	224
 43025  00182A  6E94               	movwf	148,c	;volatile
 43026                           
 43027                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43028  00182C  0012               	return		;funcret
 43029  00182E                     __end_of_TMR6_Initialize:
 43030                           	opt callstack 0
 43031                           
 43032 ;; *************** function _TMR6_SetInterruptHandler *****************
 43033 ;; Defined at:
 43034 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43035 ;; Parameters:    Size  Location     Type
 43036 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43037 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43038 ;; Auto vars:     Size  Location     Type
 43039 ;;		None
 43040 ;; Return value:  Size  Location     Type
 43041 ;;                  1  [STACK] void 
 43042 ;; Registers used:
 43043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43044 ;; Tracked objects:
 43045 ;;		On entry : 3F/39
 43046 ;;		On exit  : 0/0
 43047 ;;		Unchanged: 0/0
 43048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43053 ;;Total ram usage:        0 bytes
 43054 ;; Hardware stack levels used:    1
 43055 ;; Hardware stack levels required when called:   15
 43056 ;; This function calls:
 43057 ;;		Nothing
 43058 ;; This function is called by:
 43059 ;;		_TMR6_Initialize
 43060 ;; This function uses a reentrant model
 43061 ;;
 43062                           
 43063                           	psect	text159
 43064  0018F6                     __ptext159:
 43065                           	opt callstack 0
 43066  0018F6                     _TMR6_SetInterruptHandler:
 43067                           	opt callstack 13
 43068                           
 43069                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43070                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43071                           
 43072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43073                           ;incstack = 0
 43074  0018F6  50E1               	movf	fsr1l,w,c
 43075  0018F8  0FFD               	addlw	-3
 43076  0018FA  6ED9               	movwf	fsr2l,c
 43077  0018FC  50E2               	movf	fsr1h,w,c
 43078  0018FE  6EDA               	movwf	fsr2h,c
 43079  001900  0EFF               	movlw	255
 43080  001902  22DA               	addwfc	fsr2h,f,c
 43081  001904  006F FF78  F0AC    	movff	postinc2,_TMR6_InterruptHandler
 43082  00190A  006F FF78  F0AD    	movff	postinc2,_TMR6_InterruptHandler+1
 43083  001910  006F FF74  F0AE    	movff	postdec2,_TMR6_InterruptHandler+2
 43084                           
 43085                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43086  001916  52E5               	movf	postdec1,f,c
 43087  001918  52E5               	movf	postdec1,f,c
 43088  00191A  52E5               	movf	postdec1,f,c
 43089  00191C  0012               	return		;funcret
 43090  00191E                     __end_of_TMR6_SetInterruptHandler:
 43091                           	opt callstack 0
 43092                           
 43093 ;; *************** function _TMR5_Initialize *****************
 43094 ;; Defined at:
 43095 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43096 ;; Parameters:    Size  Location     Type
 43097 ;;		None
 43098 ;; Auto vars:     Size  Location     Type
 43099 ;;		None
 43100 ;; Return value:  Size  Location     Type
 43101 ;;                  1  [STACK] void 
 43102 ;; Registers used:
 43103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43104 ;; Tracked objects:
 43105 ;;		On entry : 0/39
 43106 ;;		On exit  : 0/0
 43107 ;;		Unchanged: 0/0
 43108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43113 ;;Total ram usage:        0 bytes
 43114 ;; Hardware stack levels used:    1
 43115 ;; Hardware stack levels required when called:   16
 43116 ;; This function calls:
 43117 ;;		_TMR5_SetInterruptHandler
 43118 ;; This function is called by:
 43119 ;;		_SYSTEM_Initialize
 43120 ;; This function uses a reentrant model
 43121 ;;
 43122                           
 43123                           	psect	text160
 43124  001152                     __ptext160:
 43125                           	opt callstack 0
 43126  001152                     _TMR5_Initialize:
 43127                           	opt callstack 13
 43128                           
 43129                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43130                           
 43131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43132                           ;incstack = 0
 43133  001152  6A9B               	clrf	155,c	;volatile
 43134                           
 43135                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43136  001154  6A9C               	clrf	156,c	;volatile
 43137                           
 43138                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43139  001156  0E01               	movlw	1
 43140  001158  6E9D               	movwf	157,c	;volatile
 43141                           
 43142                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43143  00115A  0E63               	movlw	99
 43144  00115C  6E99               	movwf	153,c	;volatile
 43145                           
 43146                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43147  00115E  0EC0               	movlw	192
 43148  001160  6E98               	movwf	152,c	;volatile
 43149                           
 43150                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43151  001162  5098               	movf	152,w,c	;volatile
 43152  001164  006F FE64  F001    	movff	16281,btemp	;volatile
 43153  00116A  6A02               	clrf	(btemp+1)^0,c
 43154  00116C  0060  F004  F002   	movff	btemp,btemp+1
 43155  001172  6A01               	clrf	btemp^0,c
 43156  001174  1001               	iorwf	btemp^0,w,c
 43157  001176  0100               	movlb	0	; () banked
 43158  001178  6FD2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43159  00117A  5002               	movf	(btemp+1)^0,w,c
 43160  00117C  6FD3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43161                           
 43162                           ; BSR set to: 0
 43163                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43164  00117E  0139               	movlb	57	; () banked
 43165  001180  9DA8               	bcf	168,6,b	;volatile
 43166                           
 43167                           ; BSR set to: 57
 43168                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43169  001182  8D98               	bsf	152,6,b	;volatile
 43170                           
 43171                           ; BSR set to: 57
 43172                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43173  001184  0E20               	movlw	low _TMR5_DefaultInterruptHandler
 43174  001186  6EE6               	movwf	postinc1,c
 43175  001188  0E15               	movlw	high _TMR5_DefaultInterruptHandler
 43176  00118A  6EE6               	movwf	postinc1,c
 43177  00118C  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 43178  00118E  6EE6               	movwf	postinc1,c
 43179  001190  EC8F  F00C         	call	_TMR5_SetInterruptHandler	;wreg free
 43180                           
 43181                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 43182  001194  0E31               	movlw	49
 43183  001196  6E9A               	movwf	154,c	;volatile
 43184                           
 43185                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43186  001198  0012               	return		;funcret
 43187  00119A                     __end_of_TMR5_Initialize:
 43188                           	opt callstack 0
 43189                           
 43190 ;; *************** function _TMR5_SetInterruptHandler *****************
 43191 ;; Defined at:
 43192 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 43193 ;; Parameters:    Size  Location     Type
 43194 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43195 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 43196 ;; Auto vars:     Size  Location     Type
 43197 ;;		None
 43198 ;; Return value:  Size  Location     Type
 43199 ;;                  1  [STACK] void 
 43200 ;; Registers used:
 43201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43202 ;; Tracked objects:
 43203 ;;		On entry : 3F/39
 43204 ;;		On exit  : 0/0
 43205 ;;		Unchanged: 0/0
 43206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43211 ;;Total ram usage:        0 bytes
 43212 ;; Hardware stack levels used:    1
 43213 ;; Hardware stack levels required when called:   15
 43214 ;; This function calls:
 43215 ;;		Nothing
 43216 ;; This function is called by:
 43217 ;;		_TMR5_Initialize
 43218 ;; This function uses a reentrant model
 43219 ;;
 43220                           
 43221                           	psect	text161
 43222  00191E                     __ptext161:
 43223                           	opt callstack 0
 43224  00191E                     _TMR5_SetInterruptHandler:
 43225                           	opt callstack 13
 43226                           
 43227                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 43228                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43229                           
 43230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43231                           ;incstack = 0
 43232  00191E  50E1               	movf	fsr1l,w,c
 43233  001920  0FFD               	addlw	-3
 43234  001922  6ED9               	movwf	fsr2l,c
 43235  001924  50E2               	movf	fsr1h,w,c
 43236  001926  6EDA               	movwf	fsr2h,c
 43237  001928  0EFF               	movlw	255
 43238  00192A  22DA               	addwfc	fsr2h,f,c
 43239  00192C  006F FF78  F0A9    	movff	postinc2,_TMR5_InterruptHandler
 43240  001932  006F FF78  F0AA    	movff	postinc2,_TMR5_InterruptHandler+1
 43241  001938  006F FF74  F0AB    	movff	postdec2,_TMR5_InterruptHandler+2
 43242                           
 43243                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43244  00193E  52E5               	movf	postdec1,f,c
 43245  001940  52E5               	movf	postdec1,f,c
 43246  001942  52E5               	movf	postdec1,f,c
 43247  001944  0012               	return		;funcret
 43248  001946                     __end_of_TMR5_SetInterruptHandler:
 43249                           	opt callstack 0
 43250                           
 43251 ;; *************** function _TMR3_Initialize *****************
 43252 ;; Defined at:
 43253 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 43254 ;; Parameters:    Size  Location     Type
 43255 ;;		None
 43256 ;; Auto vars:     Size  Location     Type
 43257 ;;		None
 43258 ;; Return value:  Size  Location     Type
 43259 ;;                  1  [STACK] void 
 43260 ;; Registers used:
 43261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43262 ;; Tracked objects:
 43263 ;;		On entry : 0/39
 43264 ;;		On exit  : 0/0
 43265 ;;		Unchanged: 0/0
 43266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43271 ;;Total ram usage:        0 bytes
 43272 ;; Hardware stack levels used:    1
 43273 ;; Hardware stack levels required when called:   16
 43274 ;; This function calls:
 43275 ;;		_TMR3_SetInterruptHandler
 43276 ;; This function is called by:
 43277 ;;		_SYSTEM_Initialize
 43278 ;; This function uses a reentrant model
 43279 ;;
 43280                           
 43281                           	psect	text162
 43282  00119A                     __ptext162:
 43283                           	opt callstack 0
 43284  00119A                     _TMR3_Initialize:
 43285                           	opt callstack 13
 43286                           
 43287                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 43288                           
 43289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43290                           ;incstack = 0
 43291  00119A  6AA7               	clrf	167,c	;volatile
 43292                           
 43293                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 43294  00119C  6AA8               	clrf	168,c	;volatile
 43295                           
 43296                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 43297  00119E  0E01               	movlw	1
 43298  0011A0  6EA9               	movwf	169,c	;volatile
 43299                           
 43300                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 43301  0011A2  0E3C               	movlw	60
 43302  0011A4  6EA5               	movwf	165,c	;volatile
 43303                           
 43304                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 43305  0011A6  0EB0               	movlw	176
 43306  0011A8  6EA4               	movwf	164,c	;volatile
 43307                           
 43308                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 43309  0011AA  50A4               	movf	164,w,c	;volatile
 43310  0011AC  006F FE94  F001    	movff	16293,btemp	;volatile
 43311  0011B2  6A02               	clrf	(btemp+1)^0,c
 43312  0011B4  0060  F004  F002   	movff	btemp,btemp+1
 43313  0011BA  6A01               	clrf	btemp^0,c
 43314  0011BC  1001               	iorwf	btemp^0,w,c
 43315  0011BE  0100               	movlb	0	; () banked
 43316  0011C0  6FCE               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 43317  0011C2  5002               	movf	(btemp+1)^0,w,c
 43318  0011C4  6FCF               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 43319                           
 43320                           ; BSR set to: 0
 43321                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 43322  0011C6  0139               	movlb	57	; () banked
 43323  0011C8  9DA6               	bcf	166,6,b	;volatile
 43324                           
 43325                           ; BSR set to: 57
 43326                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 43327  0011CA  8D96               	bsf	150,6,b	;volatile
 43328                           
 43329                           ; BSR set to: 57
 43330                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 43331  0011CC  0ED6               	movlw	low _TMR3_DefaultInterruptHandler
 43332  0011CE  6EE6               	movwf	postinc1,c
 43333  0011D0  0E1E               	movlw	high _TMR3_DefaultInterruptHandler
 43334  0011D2  6EE6               	movwf	postinc1,c
 43335  0011D4  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 43336  0011D6  6EE6               	movwf	postinc1,c
 43337  0011D8  ECA3  F00C         	call	_TMR3_SetInterruptHandler	;wreg free
 43338                           
 43339                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 43340  0011DC  0E31               	movlw	49
 43341  0011DE  6EA6               	movwf	166,c	;volatile
 43342                           
 43343                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43344  0011E0  0012               	return		;funcret
 43345  0011E2                     __end_of_TMR3_Initialize:
 43346                           	opt callstack 0
 43347                           
 43348 ;; *************** function _TMR3_SetInterruptHandler *****************
 43349 ;; Defined at:
 43350 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 43351 ;; Parameters:    Size  Location     Type
 43352 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43353 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 43354 ;; Auto vars:     Size  Location     Type
 43355 ;;		None
 43356 ;; Return value:  Size  Location     Type
 43357 ;;                  1  [STACK] void 
 43358 ;; Registers used:
 43359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43360 ;; Tracked objects:
 43361 ;;		On entry : 0/2
 43362 ;;		On exit  : 0/0
 43363 ;;		Unchanged: 0/0
 43364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43369 ;;Total ram usage:        0 bytes
 43370 ;; Hardware stack levels used:    1
 43371 ;; Hardware stack levels required when called:   15
 43372 ;; This function calls:
 43373 ;;		Nothing
 43374 ;; This function is called by:
 43375 ;;		_TMR3_Initialize
 43376 ;;		_init_bsoc
 43377 ;; This function uses a reentrant model
 43378 ;;
 43379                           
 43380                           	psect	text163
 43381  001946                     __ptext163:
 43382                           	opt callstack 0
 43383  001946                     _TMR3_SetInterruptHandler:
 43384                           	opt callstack 14
 43385                           
 43386                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 43387                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43388                           
 43389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43390                           ;incstack = 0
 43391  001946  50E1               	movf	fsr1l,w,c
 43392  001948  0FFD               	addlw	-3
 43393  00194A  6ED9               	movwf	fsr2l,c
 43394  00194C  50E2               	movf	fsr1h,w,c
 43395  00194E  6EDA               	movwf	fsr2h,c
 43396  001950  0EFF               	movlw	255
 43397  001952  22DA               	addwfc	fsr2h,f,c
 43398  001954  006F FF78  F0A6    	movff	postinc2,_TMR3_InterruptHandler
 43399  00195A  006F FF78  F0A7    	movff	postinc2,_TMR3_InterruptHandler+1
 43400  001960  006F FF74  F0A8    	movff	postdec2,_TMR3_InterruptHandler+2
 43401                           
 43402                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43403  001966  52E5               	movf	postdec1,f,c
 43404  001968  52E5               	movf	postdec1,f,c
 43405  00196A  52E5               	movf	postdec1,f,c
 43406  00196C  0012               	return		;funcret
 43407  00196E                     __end_of_TMR3_SetInterruptHandler:
 43408                           	opt callstack 0
 43409                           
 43410 ;; *************** function _TMR2_Initialize *****************
 43411 ;; Defined at:
 43412 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 43413 ;; Parameters:    Size  Location     Type
 43414 ;;		None
 43415 ;; Auto vars:     Size  Location     Type
 43416 ;;		None
 43417 ;; Return value:  Size  Location     Type
 43418 ;;                  1  [STACK] void 
 43419 ;; Registers used:
 43420 ;;		wreg, status,2
 43421 ;; Tracked objects:
 43422 ;;		On entry : 3F/3F
 43423 ;;		On exit  : 3F/39
 43424 ;;		Unchanged: 0/0
 43425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43430 ;;Total ram usage:        0 bytes
 43431 ;; Hardware stack levels used:    1
 43432 ;; Hardware stack levels required when called:   15
 43433 ;; This function calls:
 43434 ;;		Nothing
 43435 ;; This function is called by:
 43436 ;;		_SYSTEM_Initialize
 43437 ;; This function uses a reentrant model
 43438 ;;
 43439                           
 43440                           	psect	text164
 43441  001D26                     __ptext164:
 43442                           	opt callstack 0
 43443  001D26                     _TMR2_Initialize:
 43444                           	opt callstack 14
 43445                           
 43446                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 43447                           
 43448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43449                           ;incstack = 0
 43450  001D26  0E01               	movlw	1
 43451  001D28  6EAE               	movwf	174,c	;volatile
 43452                           
 43453                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 43454  001D2A  6AAD               	clrf	173,c	;volatile
 43455                           
 43456                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 43457  001D2C  6AAF               	clrf	175,c	;volatile
 43458                           
 43459                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 43460  001D2E  0E63               	movlw	99
 43461  001D30  6EAB               	movwf	171,c	;volatile
 43462                           
 43463                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 43464  001D32  6AAA               	clrf	170,c	;volatile
 43465                           
 43466                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 43467  001D34  0139               	movlb	57	; () banked
 43468  001D36  95A4               	bcf	164,2,b	;volatile
 43469                           
 43470                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 43471  001D38  0EC0               	movlw	192
 43472  001D3A  6EAC               	movwf	172,c	;volatile
 43473                           
 43474                           ; BSR set to: 57
 43475                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43476  001D3C  0012               	return		;funcret
 43477  001D3E                     __end_of_TMR2_Initialize:
 43478                           	opt callstack 0
 43479                           
 43480 ;; *************** function _SPI1_Initialize *****************
 43481 ;; Defined at:
 43482 ;;		line 64 in file "mcc_generated_files/spi1.c"
 43483 ;; Parameters:    Size  Location     Type
 43484 ;;		None
 43485 ;; Auto vars:     Size  Location     Type
 43486 ;;		None
 43487 ;; Return value:  Size  Location     Type
 43488 ;;                  1  [STACK] void 
 43489 ;; Registers used:
 43490 ;;		wreg, status,2
 43491 ;; Tracked objects:
 43492 ;;		On entry : 3F/39
 43493 ;;		On exit  : 3F/3D
 43494 ;;		Unchanged: 0/0
 43495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43500 ;;Total ram usage:        0 bytes
 43501 ;; Hardware stack levels used:    1
 43502 ;; Hardware stack levels required when called:   15
 43503 ;; This function calls:
 43504 ;;		Nothing
 43505 ;; This function is called by:
 43506 ;;		_SYSTEM_Initialize
 43507 ;; This function uses a reentrant model
 43508 ;;
 43509                           
 43510                           	psect	text165
 43511  001D3E                     __ptext165:
 43512                           	opt callstack 0
 43513  001D3E                     _SPI1_Initialize:
 43514                           	opt callstack 14
 43515                           
 43516                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 43517                           
 43518                           ; BSR set to: 57
 43519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43520                           ;incstack = 0
 43521  001D3E  0E40               	movlw	64
 43522  001D40  013D               	movlb	61	; () banked
 43523  001D42  6F15               	movwf	21,b	;volatile
 43524                           
 43525                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 43526  001D44  0E03               	movlw	3
 43527  001D46  6F16               	movwf	22,b	;volatile
 43528                           
 43529                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 43530  001D48  0E4F               	movlw	79
 43531  001D4A  6F19               	movwf	25,b	;volatile
 43532                           
 43533                           ; BSR set to: 61
 43534                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 43535  001D4C  6B1C               	clrf	28,b	;volatile
 43536                           
 43537                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 43538  001D4E  0E83               	movlw	131
 43539  001D50  6F14               	movwf	20,b	;volatile
 43540                           
 43541                           ; BSR set to: 61
 43542                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43543  001D52  0012               	return		;funcret
 43544  001D54                     __end_of_SPI1_Initialize:
 43545                           	opt callstack 0
 43546                           
 43547 ;; *************** function _PWM8_Initialize *****************
 43548 ;; Defined at:
 43549 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 43550 ;; Parameters:    Size  Location     Type
 43551 ;;		None
 43552 ;; Auto vars:     Size  Location     Type
 43553 ;;		None
 43554 ;; Return value:  Size  Location     Type
 43555 ;;                  1  [STACK] void 
 43556 ;; Registers used:
 43557 ;;		wreg, status,2
 43558 ;; Tracked objects:
 43559 ;;		On entry : 0/0
 43560 ;;		On exit  : 3F/3F
 43561 ;;		Unchanged: 0/0
 43562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43567 ;;Total ram usage:        0 bytes
 43568 ;; Hardware stack levels used:    1
 43569 ;; Hardware stack levels required when called:   15
 43570 ;; This function calls:
 43571 ;;		Nothing
 43572 ;; This function is called by:
 43573 ;;		_SYSTEM_Initialize
 43574 ;; This function uses a reentrant model
 43575 ;;
 43576                           
 43577                           	psect	text166
 43578  001D54                     __ptext166:
 43579                           	opt callstack 0
 43580  001D54                     _PWM8_Initialize:
 43581                           	opt callstack 14
 43582                           
 43583                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 43584                           
 43585                           ; BSR set to: 61
 43586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43587                           ;incstack = 0
 43588  001D54  0E80               	movlw	128
 43589  001D56  6E62               	movwf	98,c	;volatile
 43590                           
 43591                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 43592  001D58  6A61               	clrf	97,c	;volatile
 43593                           
 43594                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 43595  001D5A  0E40               	movlw	64
 43596  001D5C  6E60               	movwf	96,c	;volatile
 43597                           
 43598                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 43599  001D5E  013F               	movlb	63	; () banked
 43600  001D60  515F               	movf	95,w,b	;volatile
 43601  001D62  0B3F               	andlw	-193
 43602  001D64  0940               	iorlw	64
 43603  001D66  6F5F               	movwf	95,b	;volatile
 43604                           
 43605                           ; BSR set to: 63
 43606                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43607  001D68  0012               	return		;funcret
 43608  001D6A                     __end_of_PWM8_Initialize:
 43609                           	opt callstack 0
 43610                           
 43611 ;; *************** function _PMD_Initialize *****************
 43612 ;; Defined at:
 43613 ;;		line 91 in file "mcc_generated_files/mcc.c"
 43614 ;; Parameters:    Size  Location     Type
 43615 ;;		None
 43616 ;; Auto vars:     Size  Location     Type
 43617 ;;		None
 43618 ;; Return value:  Size  Location     Type
 43619 ;;                  1  [STACK] void 
 43620 ;; Registers used:
 43621 ;;		None
 43622 ;; Tracked objects:
 43623 ;;		On entry : 3F/39
 43624 ;;		On exit  : 3F/39
 43625 ;;		Unchanged: 0/0
 43626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43631 ;;Total ram usage:        0 bytes
 43632 ;; Hardware stack levels used:    1
 43633 ;; Hardware stack levels required when called:   15
 43634 ;; This function calls:
 43635 ;;		Nothing
 43636 ;; This function is called by:
 43637 ;;		_SYSTEM_Initialize
 43638 ;; This function uses a reentrant model
 43639 ;;
 43640                           
 43641                           	psect	text167
 43642  001D80                     __ptext167:
 43643                           	opt callstack 0
 43644  001D80                     _PMD_Initialize:
 43645                           	opt callstack 14
 43646                           
 43647                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 43648                           
 43649                           ; BSR set to: 63
 43650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43651                           ;incstack = 0
 43652  001D80  0139               	movlb	57	; () banked
 43653  001D82  6BC0               	clrf	192,b	;volatile
 43654                           
 43655                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 43656  001D84  6BC1               	clrf	193,b	;volatile
 43657                           
 43658                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 43659  001D86  6BC2               	clrf	194,b	;volatile
 43660                           
 43661                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 43662  001D88  6BC3               	clrf	195,b	;volatile
 43663                           
 43664                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 43665  001D8A  6BC4               	clrf	196,b	;volatile
 43666                           
 43667                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 43668  001D8C  6BC5               	clrf	197,b	;volatile
 43669                           
 43670                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 43671  001D8E  6BC6               	clrf	198,b	;volatile
 43672                           
 43673                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 43674  001D90  6BC7               	clrf	199,b	;volatile
 43675                           
 43676                           ; BSR set to: 57
 43677                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 43678  001D92  0012               	return		;funcret
 43679  001D94                     __end_of_PMD_Initialize:
 43680                           	opt callstack 0
 43681                           
 43682 ;; *************** function _PIN_MANAGER_Initialize *****************
 43683 ;; Defined at:
 43684 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 43685 ;; Parameters:    Size  Location     Type
 43686 ;;		None
 43687 ;; Auto vars:     Size  Location     Type
 43688 ;;		None
 43689 ;; Return value:  Size  Location     Type
 43690 ;;                  1  [STACK] void 
 43691 ;; Registers used:
 43692 ;;		wreg, status,2
 43693 ;; Tracked objects:
 43694 ;;		On entry : 3F/39
 43695 ;;		On exit  : 3F/3A
 43696 ;;		Unchanged: 0/0
 43697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43702 ;;Total ram usage:        0 bytes
 43703 ;; Hardware stack levels used:    1
 43704 ;; Hardware stack levels required when called:   15
 43705 ;; This function calls:
 43706 ;;		Nothing
 43707 ;; This function is called by:
 43708 ;;		_SYSTEM_Initialize
 43709 ;; This function uses a reentrant model
 43710 ;;
 43711                           
 43712                           	psect	text168
 43713  000454                     __ptext168:
 43714                           	opt callstack 0
 43715  000454                     _PIN_MANAGER_Initialize:
 43716                           	opt callstack 14
 43717                           
 43718                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 43719                           
 43720                           ; BSR set to: 57
 43721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43722                           ;incstack = 0
 43723  000454  0E07               	movlw	7
 43724  000456  6EBE               	movwf	190,c	;volatile
 43725                           
 43726                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 43727  000458  6ABD               	clrf	189,c	;volatile
 43728                           
 43729                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 43730  00045A  6ABA               	clrf	186,c	;volatile
 43731                           
 43732                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 43733  00045C  0E23               	movlw	35
 43734  00045E  6EBF               	movwf	191,c	;volatile
 43735                           
 43736                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 43737  000460  6ABB               	clrf	187,c	;volatile
 43738                           
 43739                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 43740  000462  0E07               	movlw	7
 43741  000464  6EBC               	movwf	188,c	;volatile
 43742                           
 43743                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 43744  000466  6AC6               	clrf	198,c	;volatile
 43745                           
 43746                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 43747  000468  0E0C               	movlw	12
 43748  00046A  6EC7               	movwf	199,c	;volatile
 43749                           
 43750                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 43751  00046C  68C2               	setf	194,c	;volatile
 43752                           
 43753                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 43754  00046E  0EBF               	movlw	191
 43755  000470  6EC3               	movwf	195,c	;volatile
 43756                           
 43757                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 43758  000472  0E90               	movlw	144
 43759  000474  6EC4               	movwf	196,c	;volatile
 43760                           
 43761                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 43762  000476  0E0C               	movlw	12
 43763  000478  6EC5               	movwf	197,c	;volatile
 43764                           
 43765                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 43766  00047A  013A               	movlb	58	; () banked
 43767  00047C  6B70               	clrf	112,b	;volatile
 43768                           
 43769                           ; BSR set to: 58
 43770                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 43771  00047E  6B60               	clrf	96,b	;volatile
 43772                           
 43773                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 43774  000480  0E3C               	movlw	60
 43775  000482  6F50               	movwf	80,b	;volatile
 43776                           
 43777                           ; BSR set to: 58
 43778                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 43779  000484  6B80               	clrf	128,b	;volatile
 43780                           
 43781                           ; BSR set to: 58
 43782                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 43783  000486  6B90               	clrf	144,b	;volatile
 43784                           
 43785                           ; BSR set to: 58
 43786                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 43787  000488  6940               	setf	64,b	;volatile
 43788                           
 43789                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 43790  00048A  0E0C               	movlw	12
 43791  00048C  6F71               	movwf	113,b	;volatile
 43792                           
 43793                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 43794  00048E  0E0C               	movlw	12
 43795  000490  6F91               	movwf	145,b	;volatile
 43796                           
 43797                           ; BSR set to: 58
 43798                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 43799  000492  6B81               	clrf	129,b	;volatile
 43800                           
 43801                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 43802  000494  0E83               	movlw	131
 43803  000496  6F51               	movwf	81,b	;volatile
 43804                           
 43805                           ; BSR set to: 58
 43806                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 43807  000498  6B41               	clrf	65,b	;volatile
 43808                           
 43809                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 43810  00049A  0E97               	movlw	151
 43811  00049C  6F61               	movwf	97,b	;volatile
 43812                           
 43813                           ; BSR set to: 58
 43814                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 43815  00049E  6B82               	clrf	130,b	;volatile
 43816                           
 43817                           ; BSR set to: 58
 43818                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 43819  0004A0  6B92               	clrf	146,b	;volatile
 43820                           
 43821                           ; BSR set to: 58
 43822                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 43823  0004A2  6B42               	clrf	66,b	;volatile
 43824                           
 43825                           ; BSR set to: 58
 43826                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 43827  0004A4  6B52               	clrf	82,b	;volatile
 43828                           
 43829                           ; BSR set to: 58
 43830                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 43831  0004A6  6B62               	clrf	98,b	;volatile
 43832                           
 43833                           ; BSR set to: 58
 43834                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 43835  0004A8  6B72               	clrf	114,b	;volatile
 43836                           
 43837                           ; BSR set to: 58
 43838                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 43839  0004AA  6943               	setf	67,b	;volatile
 43840                           
 43841                           ; BSR set to: 58
 43842                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 43843  0004AC  6953               	setf	83,b	;volatile
 43844                           
 43845                           ; BSR set to: 58
 43846                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 43847  0004AE  6963               	setf	99,b	;volatile
 43848                           
 43849                           ; BSR set to: 58
 43850                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 43851  0004B0  6973               	setf	115,b	;volatile
 43852                           
 43853                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 43854  0004B2  0E07               	movlw	7
 43855  0004B4  6F83               	movwf	131,b	;volatile
 43856                           
 43857                           ; BSR set to: 58
 43858                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 43859  0004B6  6993               	setf	147,b	;volatile
 43860                           
 43861                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 43862  0004B8  0E0F               	movlw	15
 43863  0004BA  6FE8               	movwf	232,b	;volatile
 43864                           
 43865                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 43866  0004BC  0E13               	movlw	19
 43867  0004BE  6FDE               	movwf	222,b	;volatile
 43868                           
 43869                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 43870  0004C0  0E16               	movlw	22
 43871  0004C2  6F0E               	movwf	14,b	;volatile
 43872                           
 43873                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 43874  0004C4  0E1E               	movlw	30
 43875  0004C6  6F13               	movwf	19,b	;volatile
 43876                           
 43877                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 43878  0004C8  0E08               	movlw	8
 43879  0004CA  6FC0               	movwf	192,b	;volatile
 43880                           
 43881                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 43882  0004CC  0E10               	movlw	16
 43883  0004CE  6F19               	movwf	25,b	;volatile
 43884                           
 43885                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 43886  0004D0  0E09               	movlw	9
 43887  0004D2  6FC1               	movwf	193,b	;volatile
 43888                           
 43889                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 43890  0004D4  0E1F               	movlw	31
 43891  0004D6  6F15               	movwf	21,b	;volatile
 43892                           
 43893                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 43894  0004D8  0E13               	movlw	19
 43895  0004DA  6F16               	movwf	22,b	;volatile
 43896                           
 43897                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 43898  0004DC  0E17               	movlw	23
 43899  0004DE  6FE5               	movwf	229,b	;volatile
 43900                           
 43901                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 43902  0004E0  0E14               	movlw	20
 43903  0004E2  6FDF               	movwf	223,b	;volatile
 43904                           
 43905                           ; BSR set to: 58
 43906                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 43907  0004E4  0012               	return		;funcret
 43908  0004E6                     __end_of_PIN_MANAGER_Initialize:
 43909                           	opt callstack 0
 43910                           
 43911 ;; *************** function _OSCILLATOR_Initialize *****************
 43912 ;; Defined at:
 43913 ;;		line 73 in file "mcc_generated_files/mcc.c"
 43914 ;; Parameters:    Size  Location     Type
 43915 ;;		None
 43916 ;; Auto vars:     Size  Location     Type
 43917 ;;		None
 43918 ;; Return value:  Size  Location     Type
 43919 ;;                  1  [STACK] void 
 43920 ;; Registers used:
 43921 ;;		wreg, status,2
 43922 ;; Tracked objects:
 43923 ;;		On entry : 3F/3A
 43924 ;;		On exit  : 3F/39
 43925 ;;		Unchanged: 0/0
 43926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43931 ;;Total ram usage:        0 bytes
 43932 ;; Hardware stack levels used:    1
 43933 ;; Hardware stack levels required when called:   15
 43934 ;; This function calls:
 43935 ;;		Nothing
 43936 ;; This function is called by:
 43937 ;;		_SYSTEM_Initialize
 43938 ;; This function uses a reentrant model
 43939 ;;
 43940                           
 43941                           	psect	text169
 43942  001D6A                     __ptext169:
 43943                           	opt callstack 0
 43944  001D6A                     _OSCILLATOR_Initialize:
 43945                           	opt callstack 14
 43946                           
 43947                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 43948                           
 43949                           ; BSR set to: 58
 43950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43951                           ;incstack = 0
 43952  001D6A  0E20               	movlw	32
 43953  001D6C  0139               	movlb	57	; () banked
 43954  001D6E  6FD9               	movwf	217,b	;volatile
 43955                           
 43956                           ; BSR set to: 57
 43957                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 43958  001D70  6BDB               	clrf	219,b	;volatile
 43959                           
 43960                           ; BSR set to: 57
 43961                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 43962  001D72  6BDD               	clrf	221,b	;volatile
 43963                           
 43964                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 43965  001D74  0E02               	movlw	2
 43966  001D76  6FDF               	movwf	223,b	;volatile
 43967                           
 43968                           ; BSR set to: 57
 43969                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 43970  001D78  6BDE               	clrf	222,b	;volatile
 43971  001D7A                     l171:
 43972                           
 43973                           ; BSR set to: 57
 43974                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 43975  001D7A  B1DC               	btfsc	220,0,b	;volatile
 43976  001D7C  0012               	return	
 43977  001D7E  D7FD               	goto	l171
 43978  001D80                     __end_of_OSCILLATOR_Initialize:
 43979                           	opt callstack 0
 43980                           
 43981 ;; *************** function _INTERRUPT_Initialize *****************
 43982 ;; Defined at:
 43983 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 43984 ;; Parameters:    Size  Location     Type
 43985 ;;		None
 43986 ;; Auto vars:     Size  Location     Type
 43987 ;;  state           1  [STACK] _Bool 
 43988 ;; Return value:  Size  Location     Type
 43989 ;;                  1  [STACK] void 
 43990 ;; Registers used:
 43991 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 43992 ;; Tracked objects:
 43993 ;;		On entry : 0/0
 43994 ;;		On exit  : 3F/39
 43995 ;;		Unchanged: 0/0
 43996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44001 ;;Total ram usage:        0 bytes
 44002 ;; Hardware stack levels used:    1
 44003 ;; Hardware stack levels required when called:   15
 44004 ;; This function calls:
 44005 ;;		Nothing
 44006 ;; This function is called by:
 44007 ;;		_SYSTEM_Initialize
 44008 ;; This function uses a reentrant model
 44009 ;;
 44010                           
 44011                           	psect	text170
 44012  000B82                     __ptext170:
 44013                           	opt callstack 0
 44014  000B82                     _INTERRUPT_Initialize:
 44015                           	opt callstack 0
 44016                           
 44017                           ; BSR set to: 57
 44018                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44019  000B82  52E6               	movf	postinc1,f,c
 44020                           
 44021                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44022                           
 44023                           ;incstack = 0
 44024  000B84  8AD2               	bsf	210,5,c	;volatile
 44025                           
 44026                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44027  000B86  AED2               	btfss	16338,7,c	;volatile
 44028  000B88  D003               	goto	u12330
 44029  000B8A  6A0C               	clrf	(btemp+11)^0,c
 44030  000B8C  2A0C               	incf	(btemp+11)^0,f,c
 44031  000B8E  D001               	goto	u12348
 44032  000B90                     u12330:
 44033  000B90  6A0C               	clrf	(btemp+11)^0,c
 44034  000B92                     u12348:
 44035                           
 44036                           ;stkvar	_state @ sp[(-1)+0]
 44037  000B92  0EFF               	movlw	-1
 44038  000B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 44039                           
 44040                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44041  000B9A  9ED2               	bcf	16338,7,c	;volatile
 44042                           
 44043                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44044  000B9C  0E55               	movlw	85
 44045  000B9E  6ED4               	movwf	212,c	;volatile
 44046                           
 44047                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44048  000BA0  0EAA               	movlw	170
 44049  000BA2  6ED4               	movwf	212,c	;volatile
 44050                           
 44051                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44052  000BA4  90D4               	bcf	212,0,c	;volatile
 44053                           
 44054                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44055  000BA6  0138               	movlb	56	; () banked
 44056  000BA8  6B9F               	clrf	159,b	;volatile
 44057                           
 44058                           ; BSR set to: 56
 44059                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44060  000BAA  6B9E               	clrf	158,b	;volatile
 44061                           
 44062                           ; BSR set to: 56
 44063                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44064  000BAC  0E08               	movlw	8
 44065  000BAE  6F9D               	movwf	157,b	;volatile
 44066                           
 44067                           ; BSR set to: 56
 44068                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44069  000BB0  0E55               	movlw	85
 44070  000BB2  6ED4               	movwf	212,c	;volatile
 44071                           
 44072                           ; BSR set to: 56
 44073                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44074  000BB4  0EAA               	movlw	170
 44075  000BB6  6ED4               	movwf	212,c	;volatile
 44076                           
 44077                           ; BSR set to: 56
 44078                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44079  000BB8  80D4               	bsf	212,0,c	;volatile
 44080                           
 44081                           ; BSR set to: 56
 44082                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44083                           ;stkvar	_state @ sp[(-1)+0]
 44084  000BBA  0EFF               	movlw	-1
 44085  000BBC  B0E3               	btfsc	plusw1,0,c
 44086  000BBE  D002               	bra	u12355
 44087  000BC0  9ED2               	bcf	16338,7,c	;volatile
 44088  000BC2  D001               	bra	u12356
 44089  000BC4                     u12355:
 44090  000BC4  8ED2               	bsf	16338,7,c	;volatile
 44091  000BC6                     u12356:
 44092                           
 44093                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44094  000BC6  0139               	movlb	57	; () banked
 44095  000BC8  8782               	bsf	130,3,b	;volatile
 44096                           
 44097                           ; BSR set to: 57
 44098                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44099  000BCA  8382               	bsf	130,1,b	;volatile
 44100                           
 44101                           ; BSR set to: 57
 44102                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44103  000BCC  8182               	bsf	130,0,b	;volatile
 44104                           
 44105                           ; BSR set to: 57
 44106                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44107  000BCE  8582               	bsf	130,2,b	;volatile
 44108                           
 44109                           ; BSR set to: 57
 44110                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44111  000BD0  8786               	bsf	134,3,b	;volatile
 44112                           
 44113                           ; BSR set to: 57
 44114                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44115  000BD2  8586               	bsf	134,2,b	;volatile
 44116                           
 44117                           ; BSR set to: 57
 44118                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44119  000BD4  8783               	bsf	131,3,b	;volatile
 44120                           
 44121                           ; BSR set to: 57
 44122                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44123  000BD6  8181               	bsf	129,0,b	;volatile
 44124                           
 44125                           ; BSR set to: 57
 44126                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44127  000BD8  9185               	bcf	133,0,b	;volatile
 44128                           
 44129                           ; BSR set to: 57
 44130                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44131  000BDA  8189               	bsf	137,0,b	;volatile
 44132                           
 44133                           ; BSR set to: 57
 44134                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44135  000BDC  9D88               	bcf	136,6,b	;volatile
 44136                           
 44137                           ; BSR set to: 57
 44138                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 44139  000BDE  9D86               	bcf	134,6,b	;volatile
 44140                           
 44141                           ; BSR set to: 57
 44142                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 44143  000BE0  8581               	bsf	129,2,b	;volatile
 44144                           
 44145                           ; BSR set to: 57
 44146                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 44147  000BE2  8781               	bsf	129,3,b	;volatile
 44148                           
 44149                           ; BSR set to: 57
 44150                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44151  000BE4  52E5               	movf	postdec1,f,c
 44152  000BE6  0012               	return		;funcret
 44153  000BE8                     __end_of_INTERRUPT_Initialize:
 44154                           	opt callstack 0
 44155                           
 44156 ;; *************** function _FVR_Initialize *****************
 44157 ;; Defined at:
 44158 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44159 ;; Parameters:    Size  Location     Type
 44160 ;;		None
 44161 ;; Auto vars:     Size  Location     Type
 44162 ;;		None
 44163 ;; Return value:  Size  Location     Type
 44164 ;;                  1  [STACK] void 
 44165 ;; Registers used:
 44166 ;;		wreg, status,2
 44167 ;; Tracked objects:
 44168 ;;		On entry : 3F/39
 44169 ;;		On exit  : 3F/3E
 44170 ;;		Unchanged: 0/0
 44171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44176 ;;Total ram usage:        0 bytes
 44177 ;; Hardware stack levels used:    1
 44178 ;; Hardware stack levels required when called:   15
 44179 ;; This function calls:
 44180 ;;		Nothing
 44181 ;; This function is called by:
 44182 ;;		_SYSTEM_Initialize
 44183 ;; This function uses a reentrant model
 44184 ;;
 44185                           
 44186                           	psect	text171
 44187  001EAA                     __ptext171:
 44188                           	opt callstack 0
 44189  001EAA                     _FVR_Initialize:
 44190                           	opt callstack 14
 44191                           
 44192                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 44193                           
 44194                           ; BSR set to: 57
 44195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44196                           ;incstack = 0
 44197  001EAA  0EAF               	movlw	175
 44198  001EAC  013E               	movlb	62	; () banked
 44199  001EAE  6FC1               	movwf	193,b	;volatile
 44200                           
 44201                           ; BSR set to: 62
 44202                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44203  001EB0  0012               	return		;funcret
 44204  001EB2                     __end_of_FVR_Initialize:
 44205                           	opt callstack 0
 44206                           
 44207 ;; *************** function _EXT_INT_Initialize *****************
 44208 ;; Defined at:
 44209 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 44210 ;; Parameters:    Size  Location     Type
 44211 ;;		None
 44212 ;; Auto vars:     Size  Location     Type
 44213 ;;		None
 44214 ;; Return value:  Size  Location     Type
 44215 ;;                  1  [STACK] void 
 44216 ;; Registers used:
 44217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44218 ;; Tracked objects:
 44219 ;;		On entry : 3F/39
 44220 ;;		On exit  : 3F/39
 44221 ;;		Unchanged: 0/0
 44222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44227 ;;Total ram usage:        0 bytes
 44228 ;; Hardware stack levels used:    1
 44229 ;; Hardware stack levels required when called:   16
 44230 ;; This function calls:
 44231 ;;		_INT0_SetInterruptHandler
 44232 ;;		_INT1_SetInterruptHandler
 44233 ;; This function is called by:
 44234 ;;		_SYSTEM_Initialize
 44235 ;; This function uses a reentrant model
 44236 ;;
 44237                           
 44238                           	psect	text172
 44239  00162A                     __ptext172:
 44240                           	opt callstack 0
 44241  00162A                     _EXT_INT_Initialize:
 44242                           	opt callstack 13
 44243                           
 44244                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 44245                           
 44246                           ; BSR set to: 62
 44247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44248                           ;incstack = 0
 44249  00162A  0139               	movlb	57	; () banked
 44250  00162C  91A1               	bcf	161,0,b	;volatile
 44251                           
 44252                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 44253  00162E  90D2               	bcf	210,0,c	;volatile
 44254                           
 44255                           ; BSR set to: 57
 44256                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 44257  001630  0ED8               	movlw	low _INT0_DefaultInterruptHandler
 44258  001632  6EE6               	movwf	postinc1,c
 44259  001634  0E1E               	movlw	high _INT0_DefaultInterruptHandler
 44260  001636  6EE6               	movwf	postinc1,c
 44261  001638  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 44262  00163A  6EE6               	movwf	postinc1,c
 44263  00163C  ECCB  F00C         	call	_INT0_SetInterruptHandler	;wreg free
 44264                           
 44265                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 44266  001640  0139               	movlb	57	; () banked
 44267  001642  8191               	bsf	145,0,b	;volatile
 44268                           
 44269                           ; BSR set to: 57
 44270                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 44271  001644  91A5               	bcf	165,0,b	;volatile
 44272                           
 44273                           ; BSR set to: 57
 44274                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 44275  001646  92D2               	bcf	210,1,c	;volatile
 44276                           
 44277                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 44278  001648  0E2A               	movlw	low _INT1_DefaultInterruptHandler
 44279  00164A  6EE6               	movwf	postinc1,c
 44280  00164C  0EF5               	movlw	high _INT1_DefaultInterruptHandler
 44281  00164E  6EE6               	movwf	postinc1,c
 44282  001650  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 44283  001652  6EE6               	movwf	postinc1,c
 44284  001654  ECB7  F00C         	call	_INT1_SetInterruptHandler	;wreg free
 44285                           
 44286                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 44287  001658  0139               	movlb	57	; () banked
 44288  00165A  8195               	bsf	149,0,b	;volatile
 44289                           
 44290                           ; BSR set to: 57
 44291                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 44292  00165C  0012               	return		;funcret
 44293  00165E                     __end_of_EXT_INT_Initialize:
 44294                           	opt callstack 0
 44295                           
 44296 ;; *************** function _INT1_SetInterruptHandler *****************
 44297 ;; Defined at:
 44298 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 44299 ;; Parameters:    Size  Location     Type
 44300 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44301 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 44302 ;; Auto vars:     Size  Location     Type
 44303 ;;		None
 44304 ;; Return value:  Size  Location     Type
 44305 ;;                  1  [STACK] void 
 44306 ;; Registers used:
 44307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44308 ;; Tracked objects:
 44309 ;;		On entry : 3F/39
 44310 ;;		On exit  : 0/0
 44311 ;;		Unchanged: 0/0
 44312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44317 ;;Total ram usage:        0 bytes
 44318 ;; Hardware stack levels used:    1
 44319 ;; Hardware stack levels required when called:   15
 44320 ;; This function calls:
 44321 ;;		Nothing
 44322 ;; This function is called by:
 44323 ;;		_EXT_INT_Initialize
 44324 ;;		_start_switch_handler
 44325 ;; This function uses a reentrant model
 44326 ;;
 44327                           
 44328                           	psect	text173
 44329  00196E                     __ptext173:
 44330                           	opt callstack 0
 44331  00196E                     _INT1_SetInterruptHandler:
 44332                           	opt callstack 14
 44333                           
 44334                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 44335                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44336                           
 44337                           ; BSR set to: 57
 44338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44339                           ;incstack = 0
 44340  00196E  50E1               	movf	fsr1l,w,c
 44341  001970  0FFD               	addlw	-3
 44342  001972  6ED9               	movwf	fsr2l,c
 44343  001974  50E2               	movf	fsr1h,w,c
 44344  001976  6EDA               	movwf	fsr2h,c
 44345  001978  0EFF               	movlw	255
 44346  00197A  22DA               	addwfc	fsr2h,f,c
 44347  00197C  006F FF78  F0BE    	movff	postinc2,_INT1_InterruptHandler
 44348  001982  006F FF78  F0BF    	movff	postinc2,_INT1_InterruptHandler+1
 44349  001988  006F FF74  F0C0    	movff	postdec2,_INT1_InterruptHandler+2
 44350                           
 44351                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44352  00198E  52E5               	movf	postdec1,f,c
 44353  001990  52E5               	movf	postdec1,f,c
 44354  001992  52E5               	movf	postdec1,f,c
 44355  001994  0012               	return		;funcret
 44356  001996                     __end_of_INT1_SetInterruptHandler:
 44357                           	opt callstack 0
 44358                           
 44359 ;; *************** function _INT0_SetInterruptHandler *****************
 44360 ;; Defined at:
 44361 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 44362 ;; Parameters:    Size  Location     Type
 44363 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44364 ;;		 -> INT0_DefaultInterruptHandler(1), 
 44365 ;; Auto vars:     Size  Location     Type
 44366 ;;		None
 44367 ;; Return value:  Size  Location     Type
 44368 ;;                  1  [STACK] void 
 44369 ;; Registers used:
 44370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44371 ;; Tracked objects:
 44372 ;;		On entry : 3F/39
 44373 ;;		On exit  : 0/0
 44374 ;;		Unchanged: 0/0
 44375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44380 ;;Total ram usage:        0 bytes
 44381 ;; Hardware stack levels used:    1
 44382 ;; Hardware stack levels required when called:   15
 44383 ;; This function calls:
 44384 ;;		Nothing
 44385 ;; This function is called by:
 44386 ;;		_EXT_INT_Initialize
 44387 ;; This function uses a reentrant model
 44388 ;;
 44389                           
 44390                           	psect	text174
 44391  001996                     __ptext174:
 44392                           	opt callstack 0
 44393  001996                     _INT0_SetInterruptHandler:
 44394                           	opt callstack 13
 44395                           
 44396                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 44397                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44398                           
 44399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44400                           ;incstack = 0
 44401  001996  50E1               	movf	fsr1l,w,c
 44402  001998  0FFD               	addlw	-3
 44403  00199A  6ED9               	movwf	fsr2l,c
 44404  00199C  50E2               	movf	fsr1h,w,c
 44405  00199E  6EDA               	movwf	fsr2h,c
 44406  0019A0  0EFF               	movlw	255
 44407  0019A2  22DA               	addwfc	fsr2h,f,c
 44408  0019A4  006F FF78  F0C1    	movff	postinc2,_INT0_InterruptHandler
 44409  0019AA  006F FF78  F0C2    	movff	postinc2,_INT0_InterruptHandler+1
 44410  0019B0  006F FF74  F0C3    	movff	postdec2,_INT0_InterruptHandler+2
 44411                           
 44412                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44413  0019B6  52E5               	movf	postdec1,f,c
 44414  0019B8  52E5               	movf	postdec1,f,c
 44415  0019BA  52E5               	movf	postdec1,f,c
 44416  0019BC  0012               	return		;funcret
 44417  0019BE                     __end_of_INT0_SetInterruptHandler:
 44418                           	opt callstack 0
 44419                           
 44420 ;; *************** function _DMA2_Initialize *****************
 44421 ;; Defined at:
 44422 ;;		line 61 in file "mcc_generated_files/dma2.c"
 44423 ;; Parameters:    Size  Location     Type
 44424 ;;		None
 44425 ;; Auto vars:     Size  Location     Type
 44426 ;;		None
 44427 ;; Return value:  Size  Location     Type
 44428 ;;                  1  [STACK] void 
 44429 ;; Registers used:
 44430 ;;		wreg, status,2
 44431 ;; Tracked objects:
 44432 ;;		On entry : 3F/3D
 44433 ;;		On exit  : 3F/3B
 44434 ;;		Unchanged: 0/0
 44435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44440 ;;Total ram usage:        0 bytes
 44441 ;; Hardware stack levels used:    1
 44442 ;; Hardware stack levels required when called:   15
 44443 ;; This function calls:
 44444 ;;		Nothing
 44445 ;; This function is called by:
 44446 ;;		_SYSTEM_Initialize
 44447 ;; This function uses a reentrant model
 44448 ;;
 44449                           
 44450                           	psect	text175
 44451  000E88                     __ptext175:
 44452                           	opt callstack 0
 44453  000E88                     _DMA2_Initialize:
 44454                           	opt callstack 14
 44455                           
 44456                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 44457                           
 44458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44459                           ;incstack = 0
 44460  000E88  0E00               	movlw	0
 44461  000E8A  013B               	movlb	59	; () banked
 44462  000E8C  6FD9               	movwf	217,b	;volatile
 44463  000E8E  0E10               	movlw	16
 44464  000E90  6FDA               	movwf	218,b	;volatile
 44465  000E92  0E00               	movlw	0
 44466  000E94  6FDB               	movwf	219,b	;volatile
 44467                           
 44468                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 44469  000E96  0E3F               	movlw	63
 44470  000E98  6FD1               	movwf	209,b	;volatile
 44471  000E9A  0EBB               	movlw	187
 44472  000E9C  6FD0               	movwf	208,b	;volatile
 44473                           
 44474                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 44475  000E9E  0E03               	movlw	3
 44476  000EA0  6FDD               	movwf	221,b	;volatile
 44477                           
 44478                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 44479  000EA2  0E00               	movlw	0
 44480  000EA4  6FD8               	movwf	216,b	;volatile
 44481  000EA6  0E01               	movlw	1
 44482  000EA8  6FD7               	movwf	215,b	;volatile
 44483                           
 44484                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 44485  000EAA  0E00               	movlw	0
 44486  000EAC  6FCF               	movwf	207,b	;volatile
 44487  000EAE  0E01               	movlw	1
 44488  000EB0  6FCE               	movwf	206,b	;volatile
 44489                           
 44490                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 44491  000EB2  0E1C               	movlw	28
 44492  000EB4  6FDF               	movwf	223,b	;volatile
 44493                           
 44494                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 44495  000EB6  0E3D               	movlw	61
 44496  000EB8  6FDE               	movwf	222,b	;volatile
 44497                           
 44498                           ; BSR set to: 59
 44499                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 44500  000EBA  0139               	movlb	57	; () banked
 44501  000EBC  97A5               	bcf	165,3,b	;volatile
 44502                           
 44503                           ; BSR set to: 57
 44504                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 44505  000EBE  95A5               	bcf	165,2,b	;volatile
 44506                           
 44507                           ; BSR set to: 57
 44508                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 44509  000EC0  9BA5               	bcf	165,5,b	;volatile
 44510                           
 44511                           ; BSR set to: 57
 44512                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 44513  000EC2  99A5               	bcf	165,4,b	;volatile
 44514                           
 44515                           ; BSR set to: 57
 44516                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 44517  000EC4  9795               	bcf	149,3,b	;volatile
 44518                           
 44519                           ; BSR set to: 57
 44520                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 44521  000EC6  9595               	bcf	149,2,b	;volatile
 44522                           
 44523                           ; BSR set to: 57
 44524                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 44525  000EC8  9B95               	bcf	149,5,b	;volatile
 44526                           
 44527                           ; BSR set to: 57
 44528                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 44529  000ECA  9995               	bcf	149,4,b	;volatile
 44530  000ECC  9ED2               	bcf	16338,7,c	;# 
 44531  000ECE  0139               	banksel	14831	;# 
 44532  000ED0  0E55               	movlw	85	;# 
 44533  000ED2  6FEF               	movwf	14831,b	;# 
 44534  000ED4  0EAA               	movlw	170	;# 
 44535  000ED6  6FEF               	movwf	14831,b	;# 
 44536  000ED8  81EF               	bsf	14831,0,b	;# 
 44537  000EDA  8ED2               	bsf	16338,7,c	;# 
 44538                           
 44539                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 44540  000EDC  013B               	movlb	59	; () banked
 44541  000EDE  6BDC               	clrf	220,b	;volatile
 44542                           
 44543                           ; BSR set to: 59
 44544                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44545  000EE0  0012               	return		;funcret
 44546  000EE2                     __end_of_DMA2_Initialize:
 44547                           	opt callstack 0
 44548                           
 44549 ;; *************** function _DMA1_Initialize *****************
 44550 ;; Defined at:
 44551 ;;		line 86 in file "mcc_generated_files/dma1.c"
 44552 ;; Parameters:    Size  Location     Type
 44553 ;;		None
 44554 ;; Auto vars:     Size  Location     Type
 44555 ;;		None
 44556 ;; Return value:  Size  Location     Type
 44557 ;;                  1  [STACK] void 
 44558 ;; Registers used:
 44559 ;;		wreg, status,2
 44560 ;; Tracked objects:
 44561 ;;		On entry : 3F/3B
 44562 ;;		On exit  : 3F/3B
 44563 ;;		Unchanged: 0/0
 44564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44569 ;;Total ram usage:        0 bytes
 44570 ;; Hardware stack levels used:    1
 44571 ;; Hardware stack levels required when called:   15
 44572 ;; This function calls:
 44573 ;;		Nothing
 44574 ;; This function is called by:
 44575 ;;		_SYSTEM_Initialize
 44576 ;; This function uses a reentrant model
 44577 ;;
 44578                           
 44579                           	psect	text176
 44580  0009DC                     __ptext176:
 44581                           	opt callstack 0
 44582  0009DC                     _DMA1_Initialize:
 44583                           	opt callstack 14
 44584                           
 44585                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 44586                           
 44587                           ; BSR set to: 59
 44588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44589                           ;incstack = 0
 44590  0009DC  0E00               	movlw	0
 44591  0009DE  013B               	movlb	59	; () banked
 44592  0009E0  6FF9               	movwf	249,b	;volatile
 44593  0009E2  0E10               	movlw	16
 44594  0009E4  6FFA               	movwf	250,b	;volatile
 44595  0009E6  0E00               	movlw	0
 44596  0009E8  6FFB               	movwf	251,b	;volatile
 44597                           
 44598                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 44599  0009EA  0E3D               	movlw	61
 44600  0009EC  6FF1               	movwf	241,b	;volatile
 44601  0009EE  0E11               	movlw	17
 44602  0009F0  6FF0               	movwf	240,b	;volatile
 44603                           
 44604                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 44605  0009F2  0E03               	movlw	3
 44606  0009F4  6FFD               	movwf	253,b	;volatile
 44607                           
 44608                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 44609  0009F6  0E00               	movlw	0
 44610  0009F8  6FF8               	movwf	248,b	;volatile
 44611  0009FA  0E01               	movlw	1
 44612  0009FC  6FF7               	movwf	247,b	;volatile
 44613                           
 44614                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 44615  0009FE  0E00               	movlw	0
 44616  000A00  6FEF               	movwf	239,b	;volatile
 44617  000A02  0E01               	movlw	1
 44618  000A04  6FEE               	movwf	238,b	;volatile
 44619                           
 44620                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 44621  000A06  0E15               	movlw	21
 44622  000A08  6FFF               	movwf	255,b	;volatile
 44623                           
 44624                           ; BSR set to: 59
 44625                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 44626  000A0A  6BFE               	clrf	254,b	;volatile
 44627                           
 44628                           ; BSR set to: 59
 44629                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 44630  000A0C  0139               	movlb	57	; () banked
 44631  000A0E  93A2               	bcf	162,1,b	;volatile
 44632                           
 44633                           ; BSR set to: 57
 44634                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 44635  000A10  91A2               	bcf	162,0,b	;volatile
 44636                           
 44637                           ; BSR set to: 57
 44638                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 44639  000A12  97A2               	bcf	162,3,b	;volatile
 44640                           
 44641                           ; BSR set to: 57
 44642                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 44643  000A14  95A2               	bcf	162,2,b	;volatile
 44644                           
 44645                           ; BSR set to: 57
 44646                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 44647  000A16  8392               	bsf	146,1,b	;volatile
 44648                           
 44649                           ; BSR set to: 57
 44650                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 44651  000A18  8192               	bsf	146,0,b	;volatile
 44652                           
 44653                           ; BSR set to: 57
 44654                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 44655  000A1A  8792               	bsf	146,3,b	;volatile
 44656                           
 44657                           ; BSR set to: 57
 44658                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 44659  000A1C  8592               	bsf	146,2,b	;volatile
 44660                           
 44661                           ; BSR set to: 57
 44662                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 44663  000A1E  6BF1               	clrf	241,b	;volatile
 44664                           
 44665                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 44666  000A20  0E01               	movlw	1
 44667  000A22  6FF2               	movwf	242,b	;volatile
 44668                           
 44669                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 44670  000A24  0E04               	movlw	4
 44671  000A26  6FF3               	movwf	243,b	;volatile
 44672                           
 44673                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 44674  000A28  0E02               	movlw	2
 44675  000A2A  6FF4               	movwf	244,b	;volatile
 44676                           
 44677                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 44678  000A2C  0E03               	movlw	3
 44679  000A2E  6FF7               	movwf	247,b	;volatile
 44680  000A30  9ED2               	bcf	16338,7,c	;# 
 44681  000A32  0139               	banksel	14831	;# 
 44682  000A34  0E55               	movlw	85	;# 
 44683  000A36  6FEF               	movwf	14831,b	;# 
 44684  000A38  0EAA               	movlw	170	;# 
 44685  000A3A  6FEF               	movwf	14831,b	;# 
 44686  000A3C  81EF               	bsf	14831,0,b	;# 
 44687  000A3E  8ED2               	bsf	16338,7,c	;# 
 44688                           
 44689                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 44690  000A40  013B               	movlb	59	; () banked
 44691  000A42  6BFC               	clrf	252,b	;volatile
 44692                           
 44693                           ; BSR set to: 59
 44694                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44695  000A44  0012               	return		;funcret
 44696  000A46                     __end_of_DMA1_Initialize:
 44697                           	opt callstack 0
 44698                           
 44699 ;; *************** function _CRC_Initialize *****************
 44700 ;; Defined at:
 44701 ;;		line 76 in file "mcc_generated_files/crc.c"
 44702 ;; Parameters:    Size  Location     Type
 44703 ;;		None
 44704 ;; Auto vars:     Size  Location     Type
 44705 ;;  seed            2  [STACK] unsigned short 
 44706 ;;  poly            2  [STACK] unsigned short 
 44707 ;; Return value:  Size  Location     Type
 44708 ;;                  1  [STACK] void 
 44709 ;; Registers used:
 44710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 44711 ;; Tracked objects:
 44712 ;;		On entry : 0/39
 44713 ;;		On exit  : 3F/0
 44714 ;;		Unchanged: 0/0
 44715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44720 ;;Total ram usage:        0 bytes
 44721 ;; Hardware stack levels used:    1
 44722 ;; Hardware stack levels required when called:   15
 44723 ;; This function calls:
 44724 ;;		Nothing
 44725 ;; This function is called by:
 44726 ;;		_SYSTEM_Initialize
 44727 ;;		_read_cal_data
 44728 ;;		_write_cal_data
 44729 ;; This function uses a reentrant model
 44730 ;;
 44731                           
 44732                           	psect	text177
 44733  0004E6                     __ptext177:
 44734                           	opt callstack 0
 44735  0004E6                     _CRC_Initialize:
 44736                           	opt callstack 0
 44737                           
 44738                           ; BSR set to: 59
 44739                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44740  0004E6  52E6               	movf	postinc1,f,c
 44741  0004E8  52E6               	movf	postinc1,f,c
 44742  0004EA  52E6               	movf	postinc1,f,c
 44743  0004EC  52E6               	movf	postinc1,f,c
 44744                           
 44745                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 44746                           
 44747                           ;incstack = 0
 44748  0004EE  0E80               	movlw	128
 44749  0004F0  0139               	movlb	57	; () banked
 44750  0004F2  6F68               	movwf	104,b	;volatile
 44751                           
 44752                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 44753  0004F4  0E07               	movlw	7
 44754  0004F6  6F69               	movwf	105,b	;volatile
 44755                           
 44756                           ; BSR set to: 57
 44757                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 44758  0004F8  6B62               	clrf	98,b	;volatile
 44759                           
 44760                           ; BSR set to: 57
 44761                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 44762  0004FA  6B63               	clrf	99,b	;volatile
 44763                           
 44764                           ; BSR set to: 57
 44765                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 44766  0004FC  6B7C               	clrf	124,b	;volatile
 44767                           
 44768                           ; BSR set to: 57
 44769                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 44770  0004FE  6B78               	clrf	120,b	;volatile
 44771                           
 44772                           ; BSR set to: 57
 44773                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 44774  000500  6B77               	clrf	119,b	;volatile
 44775                           
 44776                           ; BSR set to: 57
 44777                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 44778  000502  6B76               	clrf	118,b	;volatile
 44779                           
 44780                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 44781  000504  0E3F               	movlw	63
 44782  000506  6F7B               	movwf	123,b	;volatile
 44783                           
 44784                           ; BSR set to: 57
 44785                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 44786  000508  697A               	setf	122,b	;volatile
 44787                           
 44788                           ; BSR set to: 57
 44789                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 44790  00050A  6979               	setf	121,b	;volatile
 44791                           
 44792                           ; BSR set to: 57
 44793                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 44794  00050C  6B7D               	clrf	125,b	;volatile
 44795                           
 44796                           ; BSR set to: 57
 44797                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 44798  00050E  0ED5               	movlw	213
 44799  000510  6E0B               	movwf	(btemp+10)^0,c
 44800  000512  0E00               	movlw	0
 44801  000514  6E0C               	movwf	(btemp+11)^0,c
 44802                           
 44803                           ;stkvar	_poly @ sp[(-4)+2]
 44804  000516  0EFE               	movlw	-2
 44805  000518  0060  F02F  FFE3   	movff	btemp+10,plusw1
 44806  00051E  0EFF               	movlw	-1
 44807  000520  0060  F033  FFE3   	movff	btemp+11,plusw1
 44808                           
 44809                           ; BSR set to: 57
 44810                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 44811                           ;stkvar	_poly @ sp[(-4)+2]
 44812  000526  0EFF               	movlw	255
 44813  000528  24E1               	addwf	fsr1l,w,c
 44814  00052A  6ED9               	movwf	fsr2l,c
 44815  00052C  0EFF               	movlw	255
 44816  00052E  20E2               	addwfc	fsr1h,w,c
 44817  000530  6EDA               	movwf	fsr2h,c
 44818  000532  50DF               	movf	indf2,w,c
 44819  000534  6F67               	movwf	103,b	;volatile
 44820                           
 44821                           ; BSR set to: 57
 44822                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 44823  000536  0ED5               	movlw	213
 44824  000538  6F66               	movwf	102,b	;volatile
 44825                           
 44826                           ; BSR set to: 57
 44827                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 44828                           ;stkvar	_seed @ sp[(-4)+0]
 44829  00053A  0EFC               	movlw	-4
 44830  00053C  6AE3               	clrf	plusw1,c
 44831  00053E  0EFD               	movlw	-3
 44832  000540  6AE3               	clrf	plusw1,c
 44833                           
 44834                           ; BSR set to: 57
 44835                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 44836                           ;stkvar	_seed @ sp[(-4)+0]
 44837  000542  0EFD               	movlw	253
 44838  000544  24E1               	addwf	fsr1l,w,c
 44839  000546  6ED9               	movwf	fsr2l,c
 44840  000548  0EFF               	movlw	255
 44841  00054A  20E2               	addwfc	fsr1h,w,c
 44842  00054C  6EDA               	movwf	fsr2h,c
 44843  00054E  50DF               	movf	indf2,w,c
 44844  000550  6F63               	movwf	99,b	;volatile
 44845                           
 44846                           ; BSR set to: 57
 44847                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 44848  000552  6B62               	clrf	98,b	;volatile
 44849                           
 44850                           ; BSR set to: 57
 44851                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 44852  000554  3969               	swapf	105,w,b	;volatile
 44853  000556  0B0F               	andlw	15
 44854  000558  6E0C               	movwf	(btemp+11)^0,c
 44855  00055A  280C               	incf	(btemp+11)^0,w,c
 44856  00055C  0100               	movlb	0	; () banked
 44857  00055E  6FE0               	movwf	_crcObj& (0+255),b
 44858                           
 44859                           ; BSR set to: 0
 44860                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 44861  000560  0139               	movlb	57	; () banked
 44862  000562  5169               	movf	105,w,b	;volatile
 44863  000564  0B0F               	andlw	15
 44864  000566  6E0C               	movwf	(btemp+11)^0,c
 44865  000568  280C               	incf	(btemp+11)^0,w,c
 44866  00056A  0100               	movlb	0	; () banked
 44867  00056C  6FE1               	movwf	(_crcObj+1)& (0+255),b
 44868                           
 44869                           ; BSR set to: 0
 44870                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44871  00056E  52E5               	movf	postdec1,f,c
 44872  000570  52E5               	movf	postdec1,f,c
 44873  000572  52E5               	movf	postdec1,f,c
 44874  000574  52E5               	movf	postdec1,f,c
 44875  000576  0012               	return		;funcret
 44876  000578                     __end_of_CRC_Initialize:
 44877                           	opt callstack 0
 44878                           
 44879 ;; *************** function _CLKREF_Initialize *****************
 44880 ;; Defined at:
 44881 ;;		line 58 in file "mcc_generated_files/clkref.c"
 44882 ;; Parameters:    Size  Location     Type
 44883 ;;		None
 44884 ;; Auto vars:     Size  Location     Type
 44885 ;;		None
 44886 ;; Return value:  Size  Location     Type
 44887 ;;                  1  [STACK] void 
 44888 ;; Registers used:
 44889 ;;		wreg, status,2
 44890 ;; Tracked objects:
 44891 ;;		On entry : 3F/3B
 44892 ;;		On exit  : 3F/3C
 44893 ;;		Unchanged: 0/0
 44894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44899 ;;Total ram usage:        0 bytes
 44900 ;; Hardware stack levels used:    1
 44901 ;; Hardware stack levels required when called:   15
 44902 ;; This function calls:
 44903 ;;		Nothing
 44904 ;; This function is called by:
 44905 ;;		_SYSTEM_Initialize
 44906 ;; This function uses a reentrant model
 44907 ;;
 44908                           
 44909                           	psect	text178
 44910  001E52                     __ptext178:
 44911                           	opt callstack 0
 44912  001E52                     _CLKREF_Initialize:
 44913                           	opt callstack 14
 44914                           
 44915                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 44916                           
 44917                           ; BSR set to: 0
 44918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44919                           ;incstack = 0
 44920  001E52  013C               	movlb	60	; () banked
 44921  001E54  6BE6               	clrf	230,b	;volatile
 44922                           
 44923                           ; BSR set to: 60
 44924                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 44925  001E56  0E94               	movlw	148
 44926  001E58  6FE5               	movwf	229,b	;volatile
 44927                           
 44928                           ; BSR set to: 60
 44929                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44930  001E5A  0012               	return		;funcret
 44931  001E5C                     __end_of_CLKREF_Initialize:
 44932                           	opt callstack 0
 44933                           
 44934 ;; *************** function _ADCC_Initialize *****************
 44935 ;; Defined at:
 44936 ;;		line 65 in file "mcc_generated_files/adcc.c"
 44937 ;; Parameters:    Size  Location     Type
 44938 ;;		None
 44939 ;; Auto vars:     Size  Location     Type
 44940 ;;		None
 44941 ;; Return value:  Size  Location     Type
 44942 ;;                  1  [STACK] void 
 44943 ;; Registers used:
 44944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44945 ;; Tracked objects:
 44946 ;;		On entry : 3F/0
 44947 ;;		On exit  : 0/0
 44948 ;;		Unchanged: 0/0
 44949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44954 ;;Total ram usage:        0 bytes
 44955 ;; Hardware stack levels used:    1
 44956 ;; Hardware stack levels required when called:   16
 44957 ;; This function calls:
 44958 ;;		_ADCC_SetADIInterruptHandler
 44959 ;;		_ADCC_SetADTIInterruptHandler
 44960 ;; This function is called by:
 44961 ;;		_SYSTEM_Initialize
 44962 ;; This function uses a reentrant model
 44963 ;;
 44964                           
 44965                           	psect	text179
 44966  000A46                     __ptext179:
 44967                           	opt callstack 0
 44968  000A46                     _ADCC_Initialize:
 44969                           	opt callstack 13
 44970                           
 44971                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 44972                           
 44973                           ; BSR set to: 60
 44974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44975                           ;incstack = 0
 44976  000A46  013E               	movlb	62	; () banked
 44977  000A48  6BDE               	clrf	222,b	;volatile
 44978                           
 44979                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 44980  000A4A  6BDF               	clrf	223,b	;volatile
 44981                           
 44982                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 44983  000A4C  6BE0               	clrf	224,b	;volatile
 44984                           
 44985                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 44986  000A4E  6BE1               	clrf	225,b	;volatile
 44987                           
 44988                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 44989  000A50  6BE4               	clrf	228,b	;volatile
 44990                           
 44991                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 44992  000A52  6BE5               	clrf	229,b	;volatile
 44993                           
 44994                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 44995  000A54  6BEA               	clrf	234,b	;volatile
 44996                           
 44997                           ; BSR set to: 62
 44998                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 44999  000A56  0E40               	movlw	64
 45000  000A58  6FEC               	movwf	236,b	;volatile
 45001                           
 45002                           ; BSR set to: 62
 45003                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45004  000A5A  6BF1               	clrf	241,b	;volatile
 45005                           
 45006                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45007  000A5C  0E20               	movlw	32
 45008  000A5E  6FF3               	movwf	243,b	;volatile
 45009                           
 45010                           ; BSR set to: 62
 45011                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45012  000A60  6BF4               	clrf	244,b	;volatile
 45013                           
 45014                           ; BSR set to: 62
 45015                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45016  000A62  6BF5               	clrf	245,b	;volatile
 45017                           
 45018                           ; BSR set to: 62
 45019                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45020  000A64  6BF6               	clrf	246,b	;volatile
 45021                           
 45022                           ; BSR set to: 62
 45023                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45024  000A66  6BF7               	clrf	247,b	;volatile
 45025                           
 45026                           ; BSR set to: 62
 45027                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45028  000A68  6BF9               	clrf	249,b	;volatile
 45029                           
 45030                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45031  000A6A  0E5B               	movlw	91
 45032  000A6C  6FFA               	movwf	250,b	;volatile
 45033                           
 45034                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45035  000A6E  0E27               	movlw	39
 45036  000A70  6FFB               	movwf	251,b	;volatile
 45037                           
 45038                           ; BSR set to: 62
 45039                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45040  000A72  6BFC               	clrf	252,b	;volatile
 45041                           
 45042                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45043  000A74  0E02               	movlw	2
 45044  000A76  6FFD               	movwf	253,b	;volatile
 45045                           
 45046                           ; BSR set to: 62
 45047                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45048  000A78  6BFE               	clrf	254,b	;volatile
 45049                           
 45050                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45051  000A7A  0E07               	movlw	7
 45052  000A7C  6FFF               	movwf	255,b	;volatile
 45053                           
 45054                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45055  000A7E  0E84               	movlw	132
 45056  000A80  6FF8               	movwf	248,b	;volatile
 45057                           
 45058                           ; BSR set to: 62
 45059                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45060  000A82  0139               	movlb	57	; () banked
 45061  000A84  95A1               	bcf	161,2,b	;volatile
 45062                           
 45063                           ; BSR set to: 57
 45064                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45065  000A86  8591               	bsf	145,2,b	;volatile
 45066                           
 45067                           ; BSR set to: 57
 45068                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45069  000A88  0EDA               	movlw	low _ADCC_DefaultInterruptHandler
 45070  000A8A  6EE6               	movwf	postinc1,c
 45071  000A8C  0E1E               	movlw	high _ADCC_DefaultInterruptHandler
 45072  000A8E  6EE6               	movwf	postinc1,c
 45073  000A90  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45074  000A92  6EE6               	movwf	postinc1,c
 45075  000A94  ECF3  F00C         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45076                           
 45077                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45078  000A98  0139               	movlb	57	; () banked
 45079  000A9A  97A1               	bcf	161,3,b	;volatile
 45080                           
 45081                           ; BSR set to: 57
 45082                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45083  000A9C  8791               	bsf	145,3,b	;volatile
 45084                           
 45085                           ; BSR set to: 57
 45086                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45087  000A9E  0EDA               	movlw	low _ADCC_DefaultInterruptHandler
 45088  000AA0  6EE6               	movwf	postinc1,c
 45089  000AA2  0E1E               	movlw	high _ADCC_DefaultInterruptHandler
 45090  000AA4  6EE6               	movwf	postinc1,c
 45091  000AA6  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45092  000AA8  6EE6               	movwf	postinc1,c
 45093  000AAA  ECDF  F00C         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45094                           
 45095                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45096  000AAE  0012               	return		;funcret
 45097  000AB0                     __end_of_ADCC_Initialize:
 45098                           	opt callstack 0
 45099                           
 45100 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45101 ;; Defined at:
 45102 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45103 ;; Parameters:    Size  Location     Type
 45104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45105 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45106 ;; Auto vars:     Size  Location     Type
 45107 ;;		None
 45108 ;; Return value:  Size  Location     Type
 45109 ;;                  1  [STACK] void 
 45110 ;; Registers used:
 45111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45112 ;; Tracked objects:
 45113 ;;		On entry : 0/2
 45114 ;;		On exit  : 0/0
 45115 ;;		Unchanged: 0/0
 45116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45121 ;;Total ram usage:        0 bytes
 45122 ;; Hardware stack levels used:    1
 45123 ;; Hardware stack levels required when called:   15
 45124 ;; This function calls:
 45125 ;;		Nothing
 45126 ;; This function is called by:
 45127 ;;		_ADCC_Initialize
 45128 ;;		_start_adc_scan
 45129 ;; This function uses a reentrant model
 45130 ;;
 45131                           
 45132                           	psect	text180
 45133  0019BE                     __ptext180:
 45134                           	opt callstack 0
 45135  0019BE                     _ADCC_SetADTIInterruptHandler:
 45136                           	opt callstack 14
 45137                           
 45138                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45139                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45140                           
 45141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45142                           ;incstack = 0
 45143  0019BE  50E1               	movf	fsr1l,w,c
 45144  0019C0  0FFD               	addlw	-3
 45145  0019C2  6ED9               	movwf	fsr2l,c
 45146  0019C4  50E2               	movf	fsr1h,w,c
 45147  0019C6  6EDA               	movwf	fsr2h,c
 45148  0019C8  0EFF               	movlw	255
 45149  0019CA  22DA               	addwfc	fsr2h,f,c
 45150  0019CC  006F FF78  F0AF    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45151  0019D2  006F FF78  F0B0    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45152  0019D8  006F FF74  F0B1    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45153                           
 45154                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45155  0019DE  52E5               	movf	postdec1,f,c
 45156  0019E0  52E5               	movf	postdec1,f,c
 45157  0019E2  52E5               	movf	postdec1,f,c
 45158  0019E4  0012               	return		;funcret
 45159  0019E6                     __end_of_ADCC_SetADTIInterruptHandler:
 45160                           	opt callstack 0
 45161                           
 45162 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45163 ;; Defined at:
 45164 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45165 ;; Parameters:    Size  Location     Type
 45166 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45167 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45168 ;; Auto vars:     Size  Location     Type
 45169 ;;		None
 45170 ;; Return value:  Size  Location     Type
 45171 ;;                  1  [STACK] void 
 45172 ;; Registers used:
 45173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45174 ;; Tracked objects:
 45175 ;;		On entry : 4/2
 45176 ;;		On exit  : 0/0
 45177 ;;		Unchanged: 0/0
 45178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45183 ;;Total ram usage:        0 bytes
 45184 ;; Hardware stack levels used:    1
 45185 ;; Hardware stack levels required when called:   15
 45186 ;; This function calls:
 45187 ;;		Nothing
 45188 ;; This function is called by:
 45189 ;;		_ADCC_Initialize
 45190 ;;		_start_adc_scan
 45191 ;; This function uses a reentrant model
 45192 ;;
 45193                           
 45194                           	psect	text181
 45195  0019E6                     __ptext181:
 45196                           	opt callstack 0
 45197  0019E6                     _ADCC_SetADIInterruptHandler:
 45198                           	opt callstack 14
 45199                           
 45200                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 45201                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45202                           
 45203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45204                           ;incstack = 0
 45205  0019E6  50E1               	movf	fsr1l,w,c
 45206  0019E8  0FFD               	addlw	-3
 45207  0019EA  6ED9               	movwf	fsr2l,c
 45208  0019EC  50E2               	movf	fsr1h,w,c
 45209  0019EE  6EDA               	movwf	fsr2h,c
 45210  0019F0  0EFF               	movlw	255
 45211  0019F2  22DA               	addwfc	fsr2h,f,c
 45212  0019F4  006F FF78  F0B2    	movff	postinc2,_ADCC_ADI_InterruptHandler
 45213  0019FA  006F FF78  F0B3    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 45214  001A00  006F FF74  F0B4    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 45215                           
 45216                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 45217  001A06  52E5               	movf	postdec1,f,c
 45218  001A08  52E5               	movf	postdec1,f,c
 45219  001A0A  52E5               	movf	postdec1,f,c
 45220  001A0C  0012               	return		;funcret
 45221  001A0E                     __end_of_ADCC_SetADIInterruptHandler:
 45222                           	opt callstack 0
 45223                           
 45224 ;; *************** function _INT1_ISR *****************
 45225 ;; Defined at:
 45226 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 45227 ;; Parameters:    Size  Location     Type
 45228 ;;		None
 45229 ;; Auto vars:     Size  Location     Type
 45230 ;;		None
 45231 ;; Return value:  Size  Location     Type
 45232 ;;                  1    wreg      void 
 45233 ;; Registers used:
 45234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45235 ;; Tracked objects:
 45236 ;;		On entry : 0/0
 45237 ;;		On exit  : 0/0
 45238 ;;		Unchanged: 0/0
 45239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45244 ;;Total ram usage:        4 bytes
 45245 ;; Hardware stack levels used:    1
 45246 ;; Hardware stack levels required when called:    5
 45247 ;; This function calls:
 45248 ;;		_INT1_CallBack
 45249 ;; This function is called by:
 45250 ;;		Interrupt level 1
 45251 ;; This function uses a non-reentrant model
 45252 ;;
 45253                           
 45254                           	psect	text182
 45255  001434                     __ptext182:
 45256                           	opt callstack 0
 45257  001434                     _INT1_ISR:
 45258                           	opt callstack 11
 45259                           
 45260                           ;incstack = 0
 45261  001434  006F FF60  F027    	movff	status,??_INT1_ISR
 45262  00143A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 45263  001440  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 45264  001446  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 45265  00144C  EE16  F166         	lfsr	1,___intlo_sp
 45266                           
 45267                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 45268  001450  0139               	movlb	57	; () banked
 45269  001452  91A5               	bcf	165,0,b	;volatile
 45270                           
 45271                           ; BSR set to: 57
 45272                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 45273  001454  EC56  F00D         	call	_INT1_CallBack	;wreg free
 45274  001458  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 45275  00145E  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 45276  001464  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 45277  00146A  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 45278  001470  0011               	retfie		f
 45279  001472                     __end_of_INT1_ISR:
 45280                           	opt callstack 0
 45281                           
 45282 ;; *************** function _INT1_CallBack *****************
 45283 ;; Defined at:
 45284 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 45285 ;; Parameters:    Size  Location     Type
 45286 ;;		None
 45287 ;; Auto vars:     Size  Location     Type
 45288 ;;		None
 45289 ;; Return value:  Size  Location     Type
 45290 ;;                  1  [STACK] void 
 45291 ;; Registers used:
 45292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45293 ;; Tracked objects:
 45294 ;;		On entry : 3F/39
 45295 ;;		On exit  : 0/0
 45296 ;;		Unchanged: 0/0
 45297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45302 ;;Total ram usage:        0 bytes
 45303 ;; Hardware stack levels used:    1
 45304 ;; Hardware stack levels required when called:    4
 45305 ;; This function calls:
 45306 ;;		Absolute function
 45307 ;;		_INT1_DefaultInterruptHandler
 45308 ;;		_switch_handler
 45309 ;; This function is called by:
 45310 ;;		_INT1_ISR
 45311 ;; This function uses a reentrant model
 45312 ;;
 45313                           
 45314                           	psect	text183
 45315  001AAC                     __ptext183:
 45316                           	opt callstack 0
 45317  001AAC                     _INT1_CallBack:
 45318                           	opt callstack 11
 45319                           
 45320                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 45321                           
 45322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45323                           ;incstack = 0
 45324  001AAC  0100               	movlb	0	; () banked
 45325  001AAE  51BE               	movf	_INT1_InterruptHandler& (0+255),w,b
 45326  001AB0  11BF               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45327  001AB2  11C0               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45328  001AB4  B4D8               	btfsc	status,2,c
 45329  001AB6  0012               	return	
 45330                           
 45331                           ; BSR set to: 0
 45332                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 45333  001AB8  D801               	call	u1304_28
 45334  001ABA  0012               	return	
 45335  001ABC                     u1304_28:
 45336  001ABC  0005               	push	
 45337  001ABE  6EFA               	movwf	pclath,c
 45338  001AC0  51BE               	movf	_INT1_InterruptHandler& (0+255),w,b
 45339  001AC2  6EFD               	movwf	tosl,c
 45340  001AC4  51BF               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45341  001AC6  6EFE               	movwf	tosh,c
 45342  001AC8  51C0               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45343  001ACA  6EFF               	movwf	tosu,c
 45344  001ACC  50FA               	movf	pclath,w,c
 45345  001ACE  0012               	return		;indir
 45346  001AD0                     __end_of_INT1_CallBack:
 45347                           	opt callstack 0
 45348                           
 45349 ;; *************** function _INT1_DefaultInterruptHandler *****************
 45350 ;; Defined at:
 45351 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 45352 ;; Parameters:    Size  Location     Type
 45353 ;;		None
 45354 ;; Auto vars:     Size  Location     Type
 45355 ;;		None
 45356 ;; Return value:  Size  Location     Type
 45357 ;;                  1  [STACK] void 
 45358 ;; Registers used:
 45359 ;;		None
 45360 ;; Tracked objects:
 45361 ;;		On entry : 3F/0
 45362 ;;		On exit  : 0/0
 45363 ;;		Unchanged: 0/0
 45364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45369 ;;Total ram usage:        0 bytes
 45370 ;; Hardware stack levels used:    1
 45371 ;; Hardware stack levels required when called:    3
 45372 ;; This function calls:
 45373 ;;		Nothing
 45374 ;; This function is called by:
 45375 ;;		_EXT_INT_Initialize
 45376 ;;		_INT1_CallBack
 45377 ;; This function uses a reentrant model
 45378 ;;
 45379                           
 45380                           	psect	text184
 45381  01F52A                     __ptext184:
 45382                           	opt callstack 0
 45383  01F52A                     _INT1_DefaultInterruptHandler:
 45384                           	opt callstack 11
 45385                           
 45386                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 45387                           
 45388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45389                           ;incstack = 0
 45390  01F52A  0012               	return		;funcret
 45391  01F52C                     __end_of_INT1_DefaultInterruptHandler:
 45392                           	opt callstack 0
 45393                           
 45394 ;; *************** function _switch_handler *****************
 45395 ;; Defined at:
 45396 ;;		line 58 in file "dio.c"
 45397 ;; Parameters:    Size  Location     Type
 45398 ;;		None
 45399 ;; Auto vars:     Size  Location     Type
 45400 ;;  i               1  [STACK] unsigned char 
 45401 ;;  sw_value        1  [STACK] unsigned char 
 45402 ;; Return value:  Size  Location     Type
 45403 ;;                  1  [STACK] void 
 45404 ;; Registers used:
 45405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 45406 ;; Tracked objects:
 45407 ;;		On entry : 3F/0
 45408 ;;		On exit  : 0/0
 45409 ;;		Unchanged: 0/0
 45410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45415 ;;Total ram usage:        0 bytes
 45416 ;; Hardware stack levels used:    1
 45417 ;; Hardware stack levels required when called:    3
 45418 ;; This function calls:
 45419 ;;		Nothing
 45420 ;; This function is called by:
 45421 ;;		_start_switch_handler
 45422 ;;		_INT1_CallBack
 45423 ;; This function uses a reentrant model
 45424 ;;
 45425                           
 45426                           	psect	text185
 45427  01E30A                     __ptext185:
 45428                           	opt callstack 0
 45429  01E30A                     _switch_handler:
 45430                           	opt callstack 0
 45431                           
 45432                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45433  01E30A  52E6               	movf	postinc1,f,c
 45434  01E30C  52E6               	movf	postinc1,f,c
 45435                           
 45436                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 45437                           ;stkvar	_i @ sp[(-2)+0]
 45438                           
 45439                           ;incstack = 0
 45440  01E30E  0EFE               	movlw	-2
 45441  01E310  6AE3               	clrf	plusw1,c
 45442  01E312  9ABF               	bcf	191,5,c	;volatile
 45443                           
 45444                           ;dio.c: 72:  __nop();
 45445  01E314  F000               	nop	
 45446                           
 45447                           ;dio.c: 73:  __nop();
 45448  01E316  F000               	nop	
 45449                           
 45450                           ;dio.c: 74:  __nop();
 45451  01E318  F000               	nop	
 45452                           
 45453                           ;dio.c: 75:  __nop();
 45454  01E31A  F000               	nop	
 45455                           
 45456                           ;dio.c: 76:  __nop();
 45457  01E31C  F000               	nop	
 45458                           
 45459                           ;dio.c: 77:  __nop();
 45460  01E31E  F000               	nop	
 45461  01E320  D016               	goto	l13611
 45462  01E322                     l13597:
 45463                           
 45464                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 45465  01E322  A6CF               	btfss	207,3,c	;volatile
 45466  01E324  D00E               	goto	u1270_20
 45467  01E326  D00A               	goto	u1270_21
 45468  01E328                     u1268_28:
 45469                           
 45470                           ;stkvar	_sw_value @ sp[(-2)+1]
 45471  01E328  0EFF               	movlw	-1
 45472  01E32A  0060  F033  FFE3   	movff	btemp+11,plusw1
 45473                           
 45474                           ;dio.c: 83:    break;
 45475  01E330  D027               	goto	l13613
 45476  01E332                     l13599:
 45477                           
 45478                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 45479  01E332  A4CF               	btfss	207,2,c	;volatile
 45480  01E334  D006               	goto	u1270_20
 45481  01E336  D002               	goto	u1270_21
 45482  01E338                     l13601:
 45483                           
 45484                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 45485  01E338  A6CD               	btfss	205,3,c	;volatile
 45486  01E33A  D003               	goto	u1270_20
 45487  01E33C                     u1270_21:
 45488  01E33C  6A0C               	clrf	(btemp+11)^0,c
 45489  01E33E  2A0C               	incf	(btemp+11)^0,f,c
 45490  01E340  D7F3               	goto	u1268_28
 45491  01E342                     u1270_20:
 45492  01E342  6A0C               	clrf	(btemp+11)^0,c
 45493  01E344  D7F1               	goto	u1268_28
 45494  01E346                     l13603:
 45495                           
 45496                           ;dio.c: 91:    sw_value = 1;
 45497                           ;stkvar	_sw_value @ sp[(-2)+1]
 45498  01E346  0EFF               	movlw	-1
 45499  01E348  6AE3               	clrf	plusw1,c
 45500  01E34A  2AE3               	incf	plusw1,f,c
 45501                           
 45502                           ;dio.c: 92:    break;
 45503  01E34C  D019               	goto	l13613
 45504  01E34E                     l13611:
 45505                           
 45506                           ;stkvar	_i @ sp[(-2)+0]
 45507  01E34E  0EFE               	movlw	-2
 45508  01E350  50E3               	movf	plusw1,w,c
 45509  01E352  6E0B               	movwf	(btemp+10)^0,c
 45510  01E354  6A0C               	clrf	(btemp+11)^0,c
 45511                           
 45512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45513                           ; Switch size 1, requested type "simple"
 45514                           ; Number of cases is 1, Range of values is 0 to 0
 45515                           ; switch strategies available:
 45516                           ; Name         Instructions Cycles
 45517                           ; simple_byte            4     3 (average)
 45518                           ;	Chosen strategy is simple_byte
 45519  01E356  500C               	movf	(btemp+11)^0,w,c
 45520  01E358  0A00               	xorlw	0	; case 0
 45521  01E35A  A4D8               	btfss	status,2,c
 45522  01E35C  D7F4               	goto	l13603
 45523                           
 45524                           ; Switch size 1, requested type "simple"
 45525                           ; Number of cases is 5, Range of values is 0 to 4
 45526                           ; switch strategies available:
 45527                           ; Name         Instructions Cycles
 45528                           ; simple_byte           16     9 (average)
 45529                           ;	Chosen strategy is simple_byte
 45530  01E35E  500B               	movf	(btemp+10)^0,w,c
 45531  01E360  0A00               	xorlw	0	; case 0
 45532  01E362  B4D8               	btfsc	status,2,c
 45533  01E364  D7F0               	goto	l13603
 45534  01E366  0A01               	xorlw	1	; case 1
 45535  01E368  B4D8               	btfsc	status,2,c
 45536  01E36A  D7ED               	goto	l13603
 45537  01E36C  0A03               	xorlw	3	; case 2
 45538  01E36E  B4D8               	btfsc	status,2,c
 45539  01E370  D7E0               	goto	l13599
 45540  01E372  0A01               	xorlw	1	; case 3
 45541  01E374  B4D8               	btfsc	status,2,c
 45542  01E376  D7D5               	goto	l13597
 45543  01E378  0A07               	xorlw	7	; case 4
 45544  01E37A  B4D8               	btfsc	status,2,c
 45545  01E37C  D7DD               	goto	l13601
 45546  01E37E  D7E3               	goto	l13603
 45547  01E380                     l13613:
 45548                           
 45549                           ;dio.c: 102:   if (sw_value) {
 45550                           ;stkvar	_sw_value @ sp[(-2)+1]
 45551  01E380  0EFF               	movlw	-1
 45552  01E382  50E3               	movf	plusw1,w,c
 45553  01E384  B4D8               	btfsc	status,2,c
 45554  01E386  D018               	goto	l13619
 45555                           
 45556                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 45557                           ;stkvar	_i @ sp[(-2)+0]
 45558  01E388  0EFE               	movlw	-2
 45559  01E38A  50E3               	movf	plusw1,w,c
 45560  01E38C  0D05               	mullw	5
 45561  01E38E  0EC9               	movlw	low _S
 45562  01E390  24F3               	addwf	243,w,c
 45563  01E392  6ED9               	movwf	fsr2l,c
 45564  01E394  0E01               	movlw	high _S
 45565  01E396  20F4               	addwfc	prodh,w,c
 45566  01E398  6EDA               	movwf	fsr2h,c
 45567  01E39A  04DE               	decf	postinc2,w,c
 45568  01E39C  A4D8               	btfss	status,2,c
 45569  01E39E  D049               	goto	l13627
 45570                           
 45571                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 45572                           ;stkvar	_i @ sp[(-2)+0]
 45573  01E3A0  0EFE               	movlw	-2
 45574  01E3A2  50E3               	movf	plusw1,w,c
 45575  01E3A4  0D05               	mullw	5
 45576  01E3A6  0EC9               	movlw	low _S
 45577  01E3A8  24F3               	addwf	243,w,c
 45578  01E3AA  6ED9               	movwf	fsr2l,c
 45579  01E3AC  0E01               	movlw	high _S
 45580  01E3AE  20F4               	addwfc	prodh,w,c
 45581  01E3B0  6EDA               	movwf	fsr2h,c
 45582  01E3B2  0E00               	movlw	0
 45583  01E3B4  6EDF               	movwf	indf2,c
 45584  01E3B6  D03D               	goto	l13627
 45585  01E3B8                     l13619:
 45586                           
 45587                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 45588                           ;stkvar	_i @ sp[(-2)+0]
 45589  01E3B8  0EFE               	movlw	-2
 45590  01E3BA  50E3               	movf	plusw1,w,c
 45591  01E3BC  0D05               	mullw	5
 45592  01E3BE  0EC9               	movlw	low _S
 45593  01E3C0  24F3               	addwf	243,w,c
 45594  01E3C2  6ED9               	movwf	fsr2l,c
 45595  01E3C4  0E01               	movlw	high _S
 45596  01E3C6  20F4               	addwfc	prodh,w,c
 45597  01E3C8  6EDA               	movwf	fsr2h,c
 45598  01E3CA  50DF               	movf	indf2,w,c
 45599  01E3CC  A4D8               	btfss	status,2,c
 45600  01E3CE  D031               	goto	l13627
 45601                           
 45602                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 45603                           ;stkvar	_i @ sp[(-2)+0]
 45604  01E3D0  0EFE               	movlw	-2
 45605  01E3D2  50E3               	movf	plusw1,w,c
 45606  01E3D4  0D05               	mullw	5
 45607  01E3D6  0EC9               	movlw	low _S
 45608  01E3D8  24F3               	addwf	243,w,c
 45609  01E3DA  6ED9               	movwf	fsr2l,c
 45610  01E3DC  0E01               	movlw	high _S
 45611  01E3DE  20F4               	addwfc	prodh,w,c
 45612  01E3E0  6EDA               	movwf	fsr2h,c
 45613  01E3E2  0E01               	movlw	1
 45614  01E3E4  6EDF               	movwf	indf2,c
 45615                           
 45616                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 45617  01E3E6  EE20  F1BC         	lfsr	2,_V+188	;volatile
 45618                           
 45619                           ;stkvar	_i @ sp[(-2)+0]
 45620  01E3EA  0EFE               	movlw	-2
 45621  01E3EC  50E3               	movf	plusw1,w,c
 45622  01E3EE  0D05               	mullw	5
 45623  01E3F0  0ECA               	movlw	low (_S+1)
 45624  01E3F2  24F3               	addwf	243,w,c
 45625  01E3F4  6EE9               	movwf	fsr0l,c
 45626  01E3F6  0E01               	movlw	high (_S+1)
 45627  01E3F8  20F4               	addwfc	prodh,w,c
 45628  01E3FA  6EEA               	movwf	fsr0h,c
 45629  01E3FC  006F FF7B FFEE     	movff	postinc2,postinc0
 45630  01E402  006F FF7B FFEE     	movff	postinc2,postinc0
 45631  01E408  006F FF7B FFEE     	movff	postinc2,postinc0
 45632  01E40E  006F FF7B FFEE     	movff	postinc2,postinc0
 45633                           
 45634                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 45635                           ;stkvar	_i @ sp[(-2)+0]
 45636  01E414  0EFE               	movlw	-2
 45637  01E416  006F FF8C  F00C    	movff	plusw1,btemp+11
 45638  01E41C  0E01               	movlw	1
 45639  01E41E  6E0B               	movwf	(btemp+10)^0,c
 45640  01E420  2A0C               	incf	(btemp+11)^0,f,c
 45641  01E422  D002               	goto	u1274_24
 45642  01E424                     u1274_25:
 45643  01E424  90D8               	bcf	status,0,c
 45644  01E426  360B               	rlcf	(btemp+10)^0,f,c
 45645  01E428                     u1274_24:
 45646  01E428  2E0C               	decfsz	(btemp+11)^0,f,c
 45647  01E42A  D7FC               	goto	u1274_25
 45648  01E42C  500B               	movf	(btemp+10)^0,w,c
 45649  01E42E  0101               	movlb	1	; () banked
 45650  01E430  13F1               	iorwf	(_S+40)& (0+255),f,b	;volatile
 45651  01E432                     l13627:
 45652                           
 45653                           ;dio.c: 113:  } while (++i < 6);
 45654                           ;stkvar	_i @ sp[(-2)+0]
 45655  01E432  0EFE               	movlw	-2
 45656  01E434  2AE3               	incf	plusw1,f,c
 45657  01E436  0EFE               	movlw	-2
 45658  01E438  006F FF8C  F001    	movff	plusw1,btemp
 45659  01E43E  0E05               	movlw	5
 45660  01E440  6401               	cpfsgt	btemp^0,c
 45661  01E442  D785               	goto	l13611
 45662                           
 45663                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 45664  01E444  8ABF               	bsf	191,5,c	;volatile
 45665                           
 45666                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45667  01E446  52E5               	movf	postdec1,f,c
 45668  01E448  52E5               	movf	postdec1,f,c
 45669  01E44A  0012               	return		;funcret
 45670  01E44C                     __end_of_switch_handler:
 45671                           	opt callstack 0
 45672                           
 45673 ;; *************** function _TMR5_ISR *****************
 45674 ;; Defined at:
 45675 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 45676 ;; Parameters:    Size  Location     Type
 45677 ;;		None
 45678 ;; Auto vars:     Size  Location     Type
 45679 ;;		None
 45680 ;; Return value:  Size  Location     Type
 45681 ;;                  1    wreg      void 
 45682 ;; Registers used:
 45683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 45684 ;; Tracked objects:
 45685 ;;		On entry : 0/0
 45686 ;;		On exit  : 3F/0
 45687 ;;		Unchanged: 0/0
 45688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45691 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45692 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45693 ;;Total ram usage:       15 bytes
 45694 ;; Hardware stack levels used:    1
 45695 ;; Hardware stack levels required when called:    9
 45696 ;; This function calls:
 45697 ;;		_TMR5_CallBack
 45698 ;;		_TMR5_WriteTimer
 45699 ;; This function is called by:
 45700 ;;		Interrupt level 1
 45701 ;; This function uses a non-reentrant model
 45702 ;;
 45703                           
 45704                           	psect	text186
 45705  01F52C                     __ptext186:
 45706                           	opt callstack 0
 45707  01F52C                     _TMR5_ISR:
 45708                           	opt callstack 7
 45709                           
 45710                           ;incstack = 0
 45711  01F52C  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 45712  01F532  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 45713  01F538  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 45714  01F53E  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 45715  01F544  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 45716  01F54A  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 45717  01F550  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 45718  01F556  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 45719  01F55C  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 45720  01F562  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 45721  01F568  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 45722  01F56E  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 45723  01F574  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 45724  01F57A  EE16  F166         	lfsr	1,___intlo_sp
 45725                           
 45726                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 45727  01F57E  0139               	movlb	57	; () banked
 45728  01F580  9DA8               	bcf	168,6,b	;volatile
 45729                           
 45730                           ; BSR set to: 57
 45731                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 45732  01F582  0060  F34B  FFE6   	movff	_timer5ReloadVal,postinc1
 45733  01F588  0060  F34F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 45734  01F58E  ECDA  F009         	call	_TMR5_WriteTimer	;wreg free
 45735                           
 45736                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 45737  01F592  0101               	movlb	1	; () banked
 45738  01F594  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 45739  01F596  6E2B               	movwf	??_TMR5_ISR^0,c
 45740  01F598  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 45741  01F59A  0E05               	movlw	5
 45742  01F59C  262B               	addwf	??_TMR5_ISR^0,f,c
 45743  01F59E  0E00               	movlw	0
 45744  01F5A0  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 45745  01F5A2  0100               	movlb	0	; () banked
 45746  01F5A4  4BD0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 45747  01F5A6  2BD1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 45748  01F5A8  502B               	movf	??_TMR5_ISR^0,w,c
 45749  01F5AA  5DD0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 45750  01F5AC  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 45751  01F5AE  59D1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 45752  01F5B0  A0D8               	btfss	status,0,c
 45753  01F5B2  D005               	goto	i1l1021
 45754                           
 45755                           ; BSR set to: 0
 45756                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 45757  01F5B4  EC68  F00D         	call	_TMR5_CallBack	;wreg free
 45758                           
 45759                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 45760  01F5B8  0100               	movlb	0	; () banked
 45761  01F5BA  6BD0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 45762  01F5BC  6BD1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 45763  01F5BE                     i1l1021:
 45764                           
 45765                           ; BSR set to: 0
 45766  01F5BE  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 45767  01F5C4  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 45768  01F5CA  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 45769  01F5D0  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 45770  01F5D6  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 45771  01F5DC  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 45772  01F5E2  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 45773  01F5E8  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 45774  01F5EE  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 45775  01F5F4  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 45776  01F5FA  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 45777  01F600  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 45778  01F606  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 45779  01F60C  0011               	retfie		f
 45780  01F60E                     __end_of_TMR5_ISR:
 45781                           	opt callstack 0
 45782                           
 45783 ;; *************** function _TMR5_WriteTimer *****************
 45784 ;; Defined at:
 45785 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 45786 ;; Parameters:    Size  Location     Type
 45787 ;;  timerVal        2  [STACK] unsigned short 
 45788 ;; Auto vars:     Size  Location     Type
 45789 ;;		None
 45790 ;; Return value:  Size  Location     Type
 45791 ;;                  1  [STACK] void 
 45792 ;; Registers used:
 45793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 45794 ;; Tracked objects:
 45795 ;;		On entry : 3F/39
 45796 ;;		On exit  : 0/0
 45797 ;;		Unchanged: 0/0
 45798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45803 ;;Total ram usage:        0 bytes
 45804 ;; Hardware stack levels used:    1
 45805 ;; Hardware stack levels required when called:    3
 45806 ;; This function calls:
 45807 ;;		Nothing
 45808 ;; This function is called by:
 45809 ;;		_TMR5_ISR
 45810 ;; This function uses a reentrant model
 45811 ;;
 45812                           
 45813                           	psect	text187
 45814  0013B4                     __ptext187:
 45815                           	opt callstack 0
 45816  0013B4                     _TMR5_WriteTimer:
 45817                           	opt callstack 12
 45818                           
 45819                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 45820                           
 45821                           ; BSR set to: 0
 45822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45823                           ;incstack = 0
 45824  0013B4  A49A               	btfss	154,2,c	;volatile
 45825  0013B6  D00F               	goto	l13839
 45826                           
 45827                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 45828  0013B8  909A               	bcf	154,0,c	;volatile
 45829                           
 45830                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 45831                           ;stkvar	_timerVal @ sp[(0)+-2]
 45832  0013BA  0EFF               	movlw	255
 45833  0013BC  24E1               	addwf	fsr1l,w,c
 45834  0013BE  6ED9               	movwf	fsr2l,c
 45835  0013C0  0EFF               	movlw	255
 45836  0013C2  20E2               	addwfc	fsr1h,w,c
 45837  0013C4  6EDA               	movwf	fsr2h,c
 45838  0013C6  50DF               	movf	indf2,w,c
 45839  0013C8  6E99               	movwf	153,c	;volatile
 45840                           
 45841                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 45842                           ;stkvar	_timerVal @ sp[(0)+-2]
 45843  0013CA  0EFE               	movlw	-2
 45844  0013CC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 45845                           
 45846                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 45847  0013D2  809A               	bsf	154,0,c	;volatile
 45848                           
 45849                           ;mcc_generated_files/tmr5.c: 144:  } else {
 45850  0013D4  D00C               	goto	l1004
 45851  0013D6                     l13839:
 45852                           
 45853                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 45854                           ;stkvar	_timerVal @ sp[(0)+-2]
 45855  0013D6  0EFF               	movlw	255
 45856  0013D8  24E1               	addwf	fsr1l,w,c
 45857  0013DA  6ED9               	movwf	fsr2l,c
 45858  0013DC  0EFF               	movlw	255
 45859  0013DE  20E2               	addwfc	fsr1h,w,c
 45860  0013E0  6EDA               	movwf	fsr2h,c
 45861  0013E2  50DF               	movf	indf2,w,c
 45862  0013E4  6E99               	movwf	153,c	;volatile
 45863                           
 45864                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 45865                           ;stkvar	_timerVal @ sp[(0)+-2]
 45866  0013E6  0EFE               	movlw	-2
 45867  0013E8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 45868  0013EE                     l1004:
 45869                           
 45870                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 45871  0013EE  52E5               	movf	postdec1,f,c
 45872  0013F0  52E5               	movf	postdec1,f,c
 45873  0013F2  0012               	return		;funcret
 45874  0013F4                     __end_of_TMR5_WriteTimer:
 45875                           	opt callstack 0
 45876                           
 45877 ;; *************** function _TMR5_CallBack *****************
 45878 ;; Defined at:
 45879 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 45880 ;; Parameters:    Size  Location     Type
 45881 ;;		None
 45882 ;; Auto vars:     Size  Location     Type
 45883 ;;		None
 45884 ;; Return value:  Size  Location     Type
 45885 ;;                  1  [STACK] void 
 45886 ;; Registers used:
 45887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 45888 ;; Tracked objects:
 45889 ;;		On entry : 3F/0
 45890 ;;		On exit  : 0/0
 45891 ;;		Unchanged: 0/0
 45892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45897 ;;Total ram usage:        0 bytes
 45898 ;; Hardware stack levels used:    1
 45899 ;; Hardware stack levels required when called:    8
 45900 ;; This function calls:
 45901 ;;		Absolute function
 45902 ;;		_TMR5_DefaultInterruptHandler
 45903 ;; This function is called by:
 45904 ;;		_TMR5_ISR
 45905 ;; This function uses a reentrant model
 45906 ;;
 45907                           
 45908                           	psect	text188
 45909  001AD0                     __ptext188:
 45910                           	opt callstack 0
 45911  001AD0                     _TMR5_CallBack:
 45912                           	opt callstack 7
 45913                           
 45914                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 45915                           
 45916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45917                           ;incstack = 0
 45918  001AD0  0100               	movlb	0	; () banked
 45919  001AD2  51A9               	movf	_TMR5_InterruptHandler& (0+255),w,b
 45920  001AD4  11AA               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 45921  001AD6  11AB               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 45922  001AD8  B4D8               	btfsc	status,2,c
 45923  001ADA  0012               	return	
 45924                           
 45925                           ; BSR set to: 0
 45926                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 45927  001ADC  D801               	call	u1313_28
 45928  001ADE  0012               	return	
 45929  001AE0                     u1313_28:
 45930  001AE0  0005               	push	
 45931  001AE2  6EFA               	movwf	pclath,c
 45932  001AE4  51A9               	movf	_TMR5_InterruptHandler& (0+255),w,b
 45933  001AE6  6EFD               	movwf	tosl,c
 45934  001AE8  51AA               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 45935  001AEA  6EFE               	movwf	tosh,c
 45936  001AEC  51AB               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 45937  001AEE  6EFF               	movwf	tosu,c
 45938  001AF0  50FA               	movf	pclath,w,c
 45939  001AF2  0012               	return		;indir
 45940  001AF4                     __end_of_TMR5_CallBack:
 45941                           	opt callstack 0
 45942                           
 45943 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 45944 ;; Defined at:
 45945 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 45946 ;; Parameters:    Size  Location     Type
 45947 ;;		None
 45948 ;; Auto vars:     Size  Location     Type
 45949 ;;		None
 45950 ;; Return value:  Size  Location     Type
 45951 ;;                  1  [STACK] void 
 45952 ;; Registers used:
 45953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 45954 ;; Tracked objects:
 45955 ;;		On entry : 3F/0
 45956 ;;		On exit  : 0/0
 45957 ;;		Unchanged: 0/0
 45958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45963 ;;Total ram usage:        0 bytes
 45964 ;; Hardware stack levels used:    1
 45965 ;; Hardware stack levels required when called:    7
 45966 ;; This function calls:
 45967 ;;		_check_day_time
 45968 ;; This function is called by:
 45969 ;;		_TMR5_Initialize
 45970 ;;		_TMR5_CallBack
 45971 ;; This function uses a reentrant model
 45972 ;;
 45973                           
 45974                           	psect	text189
 45975  001520                     __ptext189:
 45976                           	opt callstack 0
 45977  001520                     _TMR5_DefaultInterruptHandler:
 45978                           	opt callstack 7
 45979                           
 45980                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 45981                           
 45982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45983                           ;incstack = 0
 45984  001520  A0BE               	btfss	190,0,c	;volatile
 45985  001522  D002               	goto	u1239_20
 45986  001524  0E01               	movlw	1
 45987  001526  D001               	goto	u1239_26
 45988  001528                     u1239_20:
 45989  001528  0E00               	movlw	0
 45990  00152A                     u1239_26:
 45991  00152A  0AFF               	xorlw	255
 45992  00152C  6E0C               	movwf	(btemp+11)^0,c
 45993  00152E  50BE               	movf	190,w,c	;volatile
 45994  001530  180C               	xorwf	(btemp+11)^0,w,c
 45995  001532  0BFE               	andlw	-2
 45996  001534  180C               	xorwf	(btemp+11)^0,w,c
 45997  001536  6EBE               	movwf	190,c	;volatile
 45998                           
 45999                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46000  001538  0E01               	movlw	1
 46001  00153A  0101               	movlb	1	; () banked
 46002  00153C  27BC               	addwf	(_V+188)& (0+255),f,b	;volatile
 46003  00153E  0E00               	movlw	0
 46004  001540  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 46005  001542  23BE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 46006  001544  23BF               	addwfc	(_V+191)& (0+255),f,b	;volatile
 46007                           
 46008                           ; BSR set to: 1
 46009                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46010  001546  0E01               	movlw	1
 46011  001548  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 46012  00154A  0E00               	movlw	0
 46013  00154C  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46014  00154E  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46015  001550  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46016                           
 46017                           ; BSR set to: 1
 46018                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46019  001552  EC21  F0E1         	call	_check_day_time	;wreg free
 46020                           
 46021                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46022  001556  0012               	return		;funcret
 46023  001558                     __end_of_TMR5_DefaultInterruptHandler:
 46024                           	opt callstack 0
 46025                           
 46026 ;; *************** function _check_day_time *****************
 46027 ;; Defined at:
 46028 ;;		line 167 in file "mbmc.c"
 46029 ;; Parameters:    Size  Location     Type
 46030 ;;		None
 46031 ;; Auto vars:     Size  Location     Type
 46032 ;;  light           4  [STACK] float 
 46033 ;; Return value:  Size  Location     Type
 46034 ;;                  1  [STACK] _Bool 
 46035 ;; Registers used:
 46036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 46037 ;; Tracked objects:
 46038 ;;		On entry : 3F/1
 46039 ;;		On exit  : 0/0
 46040 ;;		Unchanged: 0/0
 46041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46046 ;;Total ram usage:        0 bytes
 46047 ;; Hardware stack levels used:    1
 46048 ;; Hardware stack levels required when called:    6
 46049 ;; This function calls:
 46050 ;;		___flge
 46051 ;;		_conv_raw_result
 46052 ;;		_get_ac_charger_relay
 46053 ;;		_set_ac_charger_relay
 46054 ;; This function is called by:
 46055 ;;		_TMR5_DefaultInterruptHandler
 46056 ;; This function uses a reentrant model
 46057 ;;
 46058                           
 46059                           	psect	text190
 46060  01C242                     __ptext190:
 46061                           	opt callstack 0
 46062  01C242                     _check_day_time:
 46063                           	opt callstack 0
 46064                           
 46065                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46066  01C242  52E6               	movf	postinc1,f,c
 46067  01C244  52E6               	movf	postinc1,f,c
 46068  01C246  52E6               	movf	postinc1,f,c
 46069  01C248  52E6               	movf	postinc1,f,c
 46070                           
 46071                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46072                           
 46073                           ;incstack = 0
 46074  01C24A  0E00               	movlw	0
 46075  01C24C  6EE6               	movwf	postinc1,c
 46076  01C24E  0E0D               	movlw	13
 46077  01C250  6EE6               	movwf	postinc1,c
 46078  01C252  ECFA  F0C1         	call	_conv_raw_result	;wreg free
 46079                           
 46080                           ;stkvar	_light @ sp[(-4)+0]
 46081  01C256  0EFC               	movlw	-4
 46082  01C258  0060  F007  FFE3   	movff	btemp,plusw1
 46083  01C25E  0EFD               	movlw	-3
 46084  01C260  0060  F00B  FFE3   	movff	btemp+1,plusw1
 46085  01C266  0EFE               	movlw	-2
 46086  01C268  0060  F00F  FFE3   	movff	btemp+2,plusw1
 46087  01C26E  0EFF               	movlw	-1
 46088  01C270  0060  F013  FFE3   	movff	btemp+3,plusw1
 46089                           
 46090                           ;mbmc.c: 176:  if (C.day_update) {
 46091  01C276  EE22  F247         	lfsr	2,_C+328	;volatile
 46092  01C27A  50DE               	movf	postinc2,w,c
 46093  01C27C  10DE               	iorwf	postinc2,w,c
 46094  01C27E  10DE               	iorwf	postinc2,w,c
 46095  01C280  10DE               	iorwf	postinc2,w,c
 46096  01C282  B4D8               	btfsc	status,2,c
 46097  01C284  D021               	goto	l12599
 46098                           
 46099                           ;mbmc.c: 177:   if (V.ticks >= C.day_update) {
 46100  01C286  EE22  F247         	lfsr	2,_C+328	;volatile
 46101  01C28A  50DE               	movf	postinc2,w,c
 46102  01C28C  0101               	movlb	1	; () banked
 46103  01C28E  5D81               	subwf	(_V+129)& (0+255),w,b	;volatile
 46104  01C290  50DE               	movf	postinc2,w,c
 46105  01C292  5982               	subwfb	(_V+130)& (0+255),w,b	;volatile
 46106  01C294  50DE               	movf	postinc2,w,c
 46107  01C296  5983               	subwfb	(_V+131)& (0+255),w,b	;volatile
 46108  01C298  50DE               	movf	postinc2,w,c
 46109  01C29A  5984               	subwfb	(_V+132)& (0+255),w,b	;volatile
 46110  01C29C  A0D8               	btfss	status,0,c
 46111  01C29E  D014               	goto	l12599
 46112                           
 46113                           ; BSR set to: 1
 46114                           ;mbmc.c: 178:    C.day_update = 0;
 46115  01C2A0  0E00               	movlw	0
 46116  01C2A2  006F FFA0  FA47    	movff	wreg,_C+328	;volatile
 46117  01C2A8  0E00               	movlw	0
 46118  01C2AA  006F FFA0  FA48    	movff	wreg,_C+329	;volatile
 46119  01C2B0  0E00               	movlw	0
 46120  01C2B2  006F FFA0  FA49    	movff	wreg,_C+330	;volatile
 46121  01C2B8  0E00               	movlw	0
 46122  01C2BA  006F FFA0  FA4A    	movff	wreg,_C+331	;volatile
 46123                           
 46124                           ;mbmc.c: 179:    C.dupdate = 1;
 46125  01C2C0  0E01               	movlw	1
 46126  01C2C2  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
 46127  01C2C8                     l12599:
 46128                           
 46129                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 46130  01C2C8  2A41               	incf	check_day_time@day_delay^0,f,c
 46131  01C2CA  0441               	decf	check_day_time@day_delay^0,w,c
 46132  01C2CC  A4D8               	btfss	status,2,c
 46133  01C2CE  D0C3               	goto	l2187
 46134  01C2D0  0101               	movlb	1	; () banked
 46135  01C2D2  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 46136  01C2D4  B4D8               	btfsc	status,2,c
 46137  01C2D6  D0BF               	goto	l2187
 46138                           
 46139                           ; BSR set to: 1
 46140                           ;mbmc.c: 184:   if (C.soc > 3) {
 46141  01C2D8  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46142  01C2DC  0E01               	movlw	1
 46143  01C2DE  50DB               	movf	plusw2,w,c
 46144  01C2E0  E104               	bnz	u1205_20
 46145  01C2E2  0E04               	movlw	4
 46146  01C2E4  5CDE               	subwf	postinc2,w,c
 46147  01C2E6  A0D8               	btfss	status,0,c
 46148  01C2E8  D08D               	goto	l12633
 46149  01C2EA                     u1205_20:
 46150                           
 46151                           ; BSR set to: 1
 46152                           ;mbmc.c: 185:    if (!C.day) {
 46153  01C2EA  EE22  F23D         	lfsr	2,_C+318	;volatile
 46154  01C2EE  50DF               	movf	indf2,w,c
 46155  01C2F0  A4D8               	btfss	status,2,c
 46156  01C2F2  D035               	goto	l12619
 46157                           
 46158                           ; BSR set to: 1
 46159                           ;mbmc.c: 186:     if (light > 22.0) {
 46160                           ;stkvar	_light @ sp[(-4)+0]
 46161  01C2F4  0EFC               	movlw	-4
 46162  01C2F6  006F FF8F FFE6     	movff	plusw1,postinc1
 46163  01C2FC  006F FF8F FFE6     	movff	plusw1,postinc1
 46164  01C302  006F FF8F FFE6     	movff	plusw1,postinc1
 46165  01C308  006F FF8F FFE6     	movff	plusw1,postinc1
 46166  01C30E  0E00               	movlw	0
 46167  01C310  6EE6               	movwf	postinc1,c
 46168  01C312  0E00               	movlw	0
 46169  01C314  6EE6               	movwf	postinc1,c
 46170  01C316  0EB0               	movlw	176
 46171  01C318  6EE6               	movwf	postinc1,c
 46172  01C31A  0E41               	movlw	65
 46173  01C31C  6EE6               	movwf	postinc1,c
 46174  01C31E  EC23  F0EE         	call	___flge	;wreg free
 46175  01C322  B001               	btfsc	btemp& (0+255),0,c
 46176  01C324  D098               	goto	l2187
 46177                           
 46178                           ;mbmc.c: 187:      C.day = 1;
 46179  01C326  0E01               	movlw	1
 46180  01C328  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46181                           
 46182                           ;mbmc.c: 188:      C.day_start = V.ticks;
 46183  01C32E  EE20  F181         	lfsr	2,_V+129	;volatile
 46184  01C332  006F FF78  FA3F    	movff	postinc2,_C+320	;volatile
 46185  01C338  006F FF78  FA40    	movff	postinc2,_C+321	;volatile
 46186  01C33E  006F FF78  FA41    	movff	postinc2,_C+322	;volatile
 46187  01C344  006F FF74  FA42    	movff	postdec2,_C+323	;volatile
 46188                           
 46189                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 46190  01C34A  EC12  F00F         	call	_get_ac_charger_relay	;wreg free
 46191  01C34E  5001               	movf	btemp^0,w,c
 46192  01C350  B4D8               	btfsc	status,2,c
 46193  01C352  D085               	goto	l2183
 46194                           
 46195                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 46196  01C354  0E00               	movlw	0
 46197  01C356  6EE6               	movwf	postinc1,c
 46198  01C358  ECFC  F00E         	call	_set_ac_charger_relay	;wreg free
 46199  01C35C  D080               	goto	l2183
 46200  01C35E                     l12619:
 46201                           
 46202                           ; BSR set to: 1
 46203                           ;mbmc.c: 195:     if (light < 12.0) {
 46204  01C35E  0E00               	movlw	0
 46205  01C360  6EE6               	movwf	postinc1,c
 46206  01C362  0E00               	movlw	0
 46207  01C364  6EE6               	movwf	postinc1,c
 46208  01C366  0E40               	movlw	64
 46209  01C368  6EE6               	movwf	postinc1,c
 46210  01C36A  0E41               	movlw	65
 46211  01C36C  6EE6               	movwf	postinc1,c
 46212                           
 46213                           ;stkvar	_light @ sp[(-8)+0]
 46214  01C36E  0EF8               	movlw	-8
 46215  01C370  006F FF8F FFE6     	movff	plusw1,postinc1
 46216  01C376  006F FF8F FFE6     	movff	plusw1,postinc1
 46217  01C37C  006F FF8F FFE6     	movff	plusw1,postinc1
 46218  01C382  006F FF8F FFE6     	movff	plusw1,postinc1
 46219  01C388  EC23  F0EE         	call	___flge	;wreg free
 46220  01C38C  B001               	btfsc	btemp& (0+255),0,c
 46221  01C38E  D063               	goto	l2187
 46222                           
 46223                           ;mbmc.c: 196:      C.day = 0;
 46224  01C390  0E00               	movlw	0
 46225  01C392  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46226                           
 46227                           ;mbmc.c: 197:      C.day_end = V.ticks;
 46228  01C398  EE20  F181         	lfsr	2,_V+129	;volatile
 46229  01C39C  006F FF78  FA43    	movff	postinc2,_C+324	;volatile
 46230  01C3A2  006F FF78  FA44    	movff	postinc2,_C+325	;volatile
 46231  01C3A8  006F FF78  FA45    	movff	postinc2,_C+326	;volatile
 46232  01C3AE  006F FF74  FA46    	movff	postdec2,_C+327	;volatile
 46233                           
 46234                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 46235  01C3B4  EE22  F243         	lfsr	2,_C+324	;volatile
 46236  01C3B8  0E40               	movlw	64
 46237  01C3BA  24DE               	addwf	postinc2,w,c
 46238  01C3BC  6E09               	movwf	(btemp+8)^0,c
 46239  01C3BE  0E38               	movlw	56
 46240  01C3C0  20DE               	addwfc	postinc2,w,c
 46241  01C3C2  6E0A               	movwf	(btemp+9)^0,c
 46242  01C3C4  0E00               	movlw	0
 46243  01C3C6  20DE               	addwfc	postinc2,w,c
 46244  01C3C8  6E0B               	movwf	(btemp+10)^0,c
 46245  01C3CA  0E00               	movlw	0
 46246  01C3CC  20DE               	addwfc	postinc2,w,c
 46247  01C3CE  6E0C               	movwf	(btemp+11)^0,c
 46248  01C3D0  0060  F024  FA47   	movff	btemp+8,_C+328	;volatile
 46249  01C3D6  0060  F028  FA48   	movff	btemp+9,_C+329	;volatile
 46250  01C3DC  0060  F02C  FA49   	movff	btemp+10,_C+330	;volatile
 46251  01C3E2  0060  F030  FA4A   	movff	btemp+11,_C+331	;volatile
 46252                           
 46253                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 46254  01C3E8  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46255  01C3EC  0E01               	movlw	1
 46256  01C3EE  50DB               	movf	plusw2,w,c
 46257  01C3F0  E136               	bnz	l2183
 46258  01C3F2  0E14               	movlw	20
 46259  01C3F4  5CDE               	subwf	postinc2,w,c
 46260  01C3F6  B0D8               	btfsc	status,0,c
 46261  01C3F8  D032               	goto	l2183
 46262                           
 46263                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 46264  01C3FA  0E01               	movlw	1
 46265  01C3FC  6EE6               	movwf	postinc1,c
 46266  01C3FE  ECFC  F00E         	call	_set_ac_charger_relay	;wreg free
 46267  01C402  D02D               	goto	l2183
 46268  01C404                     l12633:
 46269                           
 46270                           ; BSR set to: 1
 46271                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 46272  01C404  EE22  F177         	lfsr	2,_C+120	;volatile
 46273  01C408  006F FF7B FFE6     	movff	postinc2,postinc1
 46274  01C40E  006F FF7B FFE6     	movff	postinc2,postinc1
 46275  01C414  006F FF7B FFE6     	movff	postinc2,postinc1
 46276  01C41A  006F FF7B FFE6     	movff	postinc2,postinc1
 46277  01C420  EE22  F17B         	lfsr	2,_C+124	;volatile
 46278  01C424  006F FF7B FFE6     	movff	postinc2,postinc1
 46279  01C42A  006F FF7B FFE6     	movff	postinc2,postinc1
 46280  01C430  006F FF7B FFE6     	movff	postinc2,postinc1
 46281  01C436  006F FF7B FFE6     	movff	postinc2,postinc1
 46282  01C43C  EC23  F0EE         	call	___flge	;wreg free
 46283  01C440  B001               	btfsc	btemp& (0+255),0,c
 46284  01C442  D009               	goto	l2187
 46285                           
 46286                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 46287  01C444  EC12  F00F         	call	_get_ac_charger_relay	;wreg free
 46288  01C448  5001               	movf	btemp^0,w,c
 46289  01C44A  A4D8               	btfss	status,2,c
 46290  01C44C  D004               	goto	l2187
 46291                           
 46292                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 46293  01C44E  0E01               	movlw	1
 46294  01C450  6EE6               	movwf	postinc1,c
 46295  01C452  ECFC  F00E         	call	_set_ac_charger_relay	;wreg free
 46296  01C456                     l2187:
 46297                           
 46298                           ;mbmc.c: 216:  if (day_delay >= 240)
 46299  01C456  0EEF               	movlw	239
 46300  01C458  6441               	cpfsgt	check_day_time@day_delay^0,c
 46301  01C45A  D001               	goto	l2183
 46302                           
 46303                           ;mbmc.c: 217:   day_delay = 0;
 46304  01C45C  6A41               	clrf	check_day_time@day_delay^0,c
 46305  01C45E                     l2183:
 46306                           
 46307                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46308  01C45E  52E5               	movf	postdec1,f,c
 46309  01C460  52E5               	movf	postdec1,f,c
 46310  01C462  52E5               	movf	postdec1,f,c
 46311  01C464  52E5               	movf	postdec1,f,c
 46312  01C466  0012               	return		;funcret
 46313  01C468                     __end_of_check_day_time:
 46314                           	opt callstack 0
 46315                           
 46316 ;; *************** function _set_ac_charger_relay *****************
 46317 ;; Defined at:
 46318 ;;		line 136 in file "mbmc.c"
 46319 ;; Parameters:    Size  Location     Type
 46320 ;;  mode            1  [STACK] const _Bool 
 46321 ;; Auto vars:     Size  Location     Type
 46322 ;;		None
 46323 ;; Return value:  Size  Location     Type
 46324 ;;                  1  [STACK] void 
 46325 ;; Registers used:
 46326 ;;		wreg, fsr1l, fsr1h
 46327 ;; Tracked objects:
 46328 ;;		On entry : 0/1
 46329 ;;		On exit  : 0/0
 46330 ;;		Unchanged: 0/0
 46331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46336 ;;Total ram usage:        0 bytes
 46337 ;; Hardware stack levels used:    1
 46338 ;; Hardware stack levels required when called:    3
 46339 ;; This function calls:
 46340 ;;		Nothing
 46341 ;; This function is called by:
 46342 ;;		_check_day_time
 46343 ;; This function uses a reentrant model
 46344 ;;
 46345                           
 46346                           	psect	text191
 46347  001DF8                     __ptext191:
 46348                           	opt callstack 0
 46349  001DF8                     _set_ac_charger_relay:
 46350                           	opt callstack 9
 46351                           
 46352                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 46353                           ;stkvar	_mode @ sp[(0)+-1]
 46354                           
 46355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46356                           ;incstack = 0
 46357  001DF8  0EFF               	movlw	-1
 46358  001DFA  B0E3               	btfsc	plusw1,0,c
 46359  001DFC  D002               	bra	u1165_25
 46360  001DFE  9CBD               	bcf	189,6,c	;volatile
 46361  001E00  D001               	bra	u1165_26
 46362  001E02                     u1165_25:
 46363  001E02  8CBD               	bsf	189,6,c	;volatile
 46364  001E04                     u1165_26:
 46365                           
 46366                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 46367  001E04  52E5               	movf	postdec1,f,c
 46368  001E06  0012               	return		;funcret
 46369  001E08                     __end_of_set_ac_charger_relay:
 46370                           	opt callstack 0
 46371                           
 46372 ;; *************** function _get_ac_charger_relay *****************
 46373 ;; Defined at:
 46374 ;;		line 141 in file "mbmc.c"
 46375 ;; Parameters:    Size  Location     Type
 46376 ;;		None
 46377 ;; Auto vars:     Size  Location     Type
 46378 ;;		None
 46379 ;; Return value:  Size  Location     Type
 46380 ;;                  1  [STACK] _Bool 
 46381 ;; Registers used:
 46382 ;;		btemp
 46383 ;; Tracked objects:
 46384 ;;		On entry : 0/1
 46385 ;;		On exit  : 0/0
 46386 ;;		Unchanged: 0/0
 46387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46392 ;;Total ram usage:        0 bytes
 46393 ;; Hardware stack levels used:    1
 46394 ;; Hardware stack levels required when called:    3
 46395 ;; This function calls:
 46396 ;;		Nothing
 46397 ;; This function is called by:
 46398 ;;		_check_day_time
 46399 ;;		_calc_bsoc
 46400 ;; This function uses a reentrant model
 46401 ;;
 46402                           
 46403                           	psect	text192
 46404  001E24                     __ptext192:
 46405                           	opt callstack 0
 46406  001E24                     _get_ac_charger_relay:
 46407                           	opt callstack 10
 46408                           
 46409                           ;mbmc.c: 143:  return LATDbits.LATD6;
 46410                           
 46411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46412                           ;incstack = 0
 46413  001E24  ACBD               	btfss	189,6,c	;volatile
 46414  001E26  D003               	goto	u1228_20
 46415  001E28  6A01               	clrf	btemp^0,c
 46416  001E2A  2A01               	incf	btemp^0,f,c
 46417  001E2C  0012               	return	
 46418  001E2E                     u1228_20:
 46419  001E2E  6A01               	clrf	btemp^0,c
 46420                           
 46421                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46422  001E30  0012               	return		;funcret
 46423  001E32                     __end_of_get_ac_charger_relay:
 46424                           	opt callstack 0
 46425                           
 46426 ;; *************** function _TMR3_ISR *****************
 46427 ;; Defined at:
 46428 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 46429 ;; Parameters:    Size  Location     Type
 46430 ;;		None
 46431 ;; Auto vars:     Size  Location     Type
 46432 ;;		None
 46433 ;; Return value:  Size  Location     Type
 46434 ;;                  1    wreg      void 
 46435 ;; Registers used:
 46436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 46437 ;; Tracked objects:
 46438 ;;		On entry : 0/0
 46439 ;;		On exit  : 3F/0
 46440 ;;		Unchanged: 0/0
 46441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46444 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46445 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46446 ;;Total ram usage:       25 bytes
 46447 ;; Hardware stack levels used:    1
 46448 ;; Hardware stack levels required when called:   14
 46449 ;; This function calls:
 46450 ;;		_TMR3_CallBack
 46451 ;;		_TMR3_WriteTimer
 46452 ;; This function is called by:
 46453 ;;		Interrupt level 1
 46454 ;; This function uses a non-reentrant model
 46455 ;;
 46456                           
 46457                           	psect	text193
 46458  01DDA8                     __ptext193:
 46459                           	opt callstack 0
 46460  01DDA8                     _TMR3_ISR:
 46461                           	opt callstack 2
 46462                           
 46463                           ;incstack = 0
 46464  01DDA8  006F FF60  F0E3    	movff	status,??_TMR3_ISR
 46465  01DDAE  006F FFD8  F0E4    	movff	tblptrl,??_TMR3_ISR+1
 46466  01DDB4  006F FFDC  F0E5    	movff	tblptrh,??_TMR3_ISR+2
 46467  01DDBA  006F FFE0  F0E6    	movff	tblptru,??_TMR3_ISR+3
 46468  01DDC0  006F FFD4  F0E7    	movff	tablat,??_TMR3_ISR+4
 46469  01DDC6  0060  F004  F0E8   	movff	btemp,??_TMR3_ISR+5
 46470  01DDCC  0060  F008  F0E9   	movff	btemp+1,??_TMR3_ISR+6
 46471  01DDD2  0060  F00C  F0EA   	movff	btemp+2,??_TMR3_ISR+7
 46472  01DDD8  0060  F010  F0EB   	movff	btemp+3,??_TMR3_ISR+8
 46473  01DDDE  0060  F014  F0EC   	movff	btemp+4,??_TMR3_ISR+9
 46474  01DDE4  0060  F018  F0ED   	movff	btemp+5,??_TMR3_ISR+10
 46475  01DDEA  0060  F01C  F0EE   	movff	btemp+6,??_TMR3_ISR+11
 46476  01DDF0  0060  F020  F0EF   	movff	btemp+7,??_TMR3_ISR+12
 46477  01DDF6  0060  F024  F0F0   	movff	btemp+8,??_TMR3_ISR+13
 46478  01DDFC  0060  F028  F0F1   	movff	btemp+9,??_TMR3_ISR+14
 46479  01DE02  0060  F02C  F0F2   	movff	btemp+10,??_TMR3_ISR+15
 46480  01DE08  0060  F030  F0F3   	movff	btemp+11,??_TMR3_ISR+16
 46481  01DE0E  0060  F044  F0F4   	movff	btemp+16,??_TMR3_ISR+17
 46482  01DE14  0060  F048  F0F5   	movff	btemp+17,??_TMR3_ISR+18
 46483  01DE1A  0060  F04C  F0F6   	movff	btemp+18,??_TMR3_ISR+19
 46484  01DE20  0060  F050  F0F7   	movff	btemp+19,??_TMR3_ISR+20
 46485  01DE26  0060  F054  F0F8   	movff	btemp+20,??_TMR3_ISR+21
 46486  01DE2C  0060  F058  F0F9   	movff	btemp+21,??_TMR3_ISR+22
 46487  01DE32  0060  F05C  F0FA   	movff	btemp+22,??_TMR3_ISR+23
 46488  01DE38  0060  F060  F0FB   	movff	btemp+23,??_TMR3_ISR+24
 46489  01DE3E  EE16  F166         	lfsr	1,___intlo_sp
 46490                           
 46491                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 46492  01DE42  0139               	movlb	57	; () banked
 46493  01DE44  9DA6               	bcf	166,6,b	;volatile
 46494                           
 46495                           ; BSR set to: 57
 46496                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 46497  01DE46  0060  F33B  FFE6   	movff	_timer3ReloadVal,postinc1
 46498  01DE4C  0060  F33F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 46499  01DE52  ECFA  F009         	call	_TMR3_WriteTimer	;wreg free
 46500                           
 46501                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 46502  01DE56  0100               	movlb	0	; () banked
 46503  01DE58  4BCC               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 46504  01DE5A  2BCD               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46505  01DE5C  51CD               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46506  01DE5E  E104               	bnz	i1u1664_20
 46507  01DE60  0E28               	movlw	40
 46508  01DE62  5DCC               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 46509  01DE64  A0D8               	btfss	status,0,c
 46510  01DE66  D005               	goto	i1l1209
 46511  01DE68                     i1u1664_20:
 46512                           
 46513                           ; BSR set to: 0
 46514                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 46515  01DE68  EC7A  F00D         	call	_TMR3_CallBack	;wreg free
 46516                           
 46517                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 46518  01DE6C  0100               	movlb	0	; () banked
 46519  01DE6E  6BCC               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 46520  01DE70  6BCD               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 46521  01DE72                     i1l1209:
 46522                           
 46523                           ; BSR set to: 0
 46524  01DE72  0060  F3EC  F018   	movff	??_TMR3_ISR+24,btemp+23
 46525  01DE78  0060  F3E8  F017   	movff	??_TMR3_ISR+23,btemp+22
 46526  01DE7E  0060  F3E4  F016   	movff	??_TMR3_ISR+22,btemp+21
 46527  01DE84  0060  F3E0  F015   	movff	??_TMR3_ISR+21,btemp+20
 46528  01DE8A  0060  F3DC  F014   	movff	??_TMR3_ISR+20,btemp+19
 46529  01DE90  0060  F3D8  F013   	movff	??_TMR3_ISR+19,btemp+18
 46530  01DE96  0060  F3D4  F012   	movff	??_TMR3_ISR+18,btemp+17
 46531  01DE9C  0060  F3D0  F011   	movff	??_TMR3_ISR+17,btemp+16
 46532  01DEA2  0060  F3CC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 46533  01DEA8  0060  F3C8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 46534  01DEAE  0060  F3C4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 46535  01DEB4  0060  F3C0  F009   	movff	??_TMR3_ISR+13,btemp+8
 46536  01DEBA  0060  F3BC  F008   	movff	??_TMR3_ISR+12,btemp+7
 46537  01DEC0  0060  F3B8  F007   	movff	??_TMR3_ISR+11,btemp+6
 46538  01DEC6  0060  F3B4  F006   	movff	??_TMR3_ISR+10,btemp+5
 46539  01DECC  0060  F3B0  F005   	movff	??_TMR3_ISR+9,btemp+4
 46540  01DED2  0060  F3AC  F004   	movff	??_TMR3_ISR+8,btemp+3
 46541  01DED8  0060  F3A8  F003   	movff	??_TMR3_ISR+7,btemp+2
 46542  01DEDE  0060  F3A4  F002   	movff	??_TMR3_ISR+6,btemp+1
 46543  01DEE4  0060  F3A0  F001   	movff	??_TMR3_ISR+5,btemp
 46544  01DEEA  0060  F39F  FFF5   	movff	??_TMR3_ISR+4,tablat
 46545  01DEF0  0060  F39B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 46546  01DEF6  0060  F397  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 46547  01DEFC  0060  F393  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 46548  01DF02  0060  F38F  FFD8   	movff	??_TMR3_ISR,status
 46549  01DF08  0011               	retfie		f
 46550  01DF0A                     __end_of_TMR3_ISR:
 46551                           	opt callstack 0
 46552                           
 46553 ;; *************** function _TMR3_WriteTimer *****************
 46554 ;; Defined at:
 46555 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 46556 ;; Parameters:    Size  Location     Type
 46557 ;;  timerVal        2  [STACK] unsigned short 
 46558 ;; Auto vars:     Size  Location     Type
 46559 ;;		None
 46560 ;; Return value:  Size  Location     Type
 46561 ;;                  1  [STACK] void 
 46562 ;; Registers used:
 46563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46564 ;; Tracked objects:
 46565 ;;		On entry : 3F/39
 46566 ;;		On exit  : 0/0
 46567 ;;		Unchanged: 0/0
 46568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46573 ;;Total ram usage:        0 bytes
 46574 ;; Hardware stack levels used:    1
 46575 ;; Hardware stack levels required when called:    3
 46576 ;; This function calls:
 46577 ;;		Nothing
 46578 ;; This function is called by:
 46579 ;;		_TMR3_ISR
 46580 ;; This function uses a reentrant model
 46581 ;;
 46582                           
 46583                           	psect	text194
 46584  0013F4                     __ptext194:
 46585                           	opt callstack 0
 46586  0013F4                     _TMR3_WriteTimer:
 46587                           	opt callstack 12
 46588                           
 46589                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 46590                           
 46591                           ; BSR set to: 0
 46592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46593                           ;incstack = 0
 46594  0013F4  A4A6               	btfss	166,2,c	;volatile
 46595  0013F6  D00F               	goto	l13857
 46596                           
 46597                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 46598  0013F8  90A6               	bcf	166,0,c	;volatile
 46599                           
 46600                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 46601                           ;stkvar	_timerVal @ sp[(0)+-2]
 46602  0013FA  0EFF               	movlw	255
 46603  0013FC  24E1               	addwf	fsr1l,w,c
 46604  0013FE  6ED9               	movwf	fsr2l,c
 46605  001400  0EFF               	movlw	255
 46606  001402  20E2               	addwfc	fsr1h,w,c
 46607  001404  6EDA               	movwf	fsr2h,c
 46608  001406  50DF               	movf	indf2,w,c
 46609  001408  6EA5               	movwf	165,c	;volatile
 46610                           
 46611                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 46612                           ;stkvar	_timerVal @ sp[(0)+-2]
 46613  00140A  0EFE               	movlw	-2
 46614  00140C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 46615                           
 46616                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 46617  001412  80A6               	bsf	166,0,c	;volatile
 46618                           
 46619                           ;mcc_generated_files/tmr3.c: 141:     }
 46620  001414  D00C               	goto	l1192
 46621  001416                     l13857:
 46622                           
 46623                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 46624                           ;stkvar	_timerVal @ sp[(0)+-2]
 46625  001416  0EFF               	movlw	255
 46626  001418  24E1               	addwf	fsr1l,w,c
 46627  00141A  6ED9               	movwf	fsr2l,c
 46628  00141C  0EFF               	movlw	255
 46629  00141E  20E2               	addwfc	fsr1h,w,c
 46630  001420  6EDA               	movwf	fsr2h,c
 46631  001422  50DF               	movf	indf2,w,c
 46632  001424  6EA5               	movwf	165,c	;volatile
 46633                           
 46634                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 46635                           ;stkvar	_timerVal @ sp[(0)+-2]
 46636  001426  0EFE               	movlw	-2
 46637  001428  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 46638  00142E                     l1192:
 46639                           
 46640                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46641  00142E  52E5               	movf	postdec1,f,c
 46642  001430  52E5               	movf	postdec1,f,c
 46643  001432  0012               	return		;funcret
 46644  001434                     __end_of_TMR3_WriteTimer:
 46645                           	opt callstack 0
 46646                           
 46647 ;; *************** function _TMR3_CallBack *****************
 46648 ;; Defined at:
 46649 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 46650 ;; Parameters:    Size  Location     Type
 46651 ;;		None
 46652 ;; Auto vars:     Size  Location     Type
 46653 ;;		None
 46654 ;; Return value:  Size  Location     Type
 46655 ;;                  1  [STACK] void 
 46656 ;; Registers used:
 46657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 46658 ;; Tracked objects:
 46659 ;;		On entry : 3F/0
 46660 ;;		On exit  : 0/0
 46661 ;;		Unchanged: 0/0
 46662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46667 ;;Total ram usage:        0 bytes
 46668 ;; Hardware stack levels used:    1
 46669 ;; Hardware stack levels required when called:   13
 46670 ;; This function calls:
 46671 ;;		Absolute function
 46672 ;;		_TMR3_DefaultInterruptHandler
 46673 ;;		_calc_bsoc
 46674 ;; This function is called by:
 46675 ;;		_TMR3_ISR
 46676 ;; This function uses a reentrant model
 46677 ;;
 46678                           
 46679                           	psect	text195
 46680  001AF4                     __ptext195:
 46681                           	opt callstack 0
 46682  001AF4                     _TMR3_CallBack:
 46683                           	opt callstack 2
 46684                           
 46685                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 46686                           
 46687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46688                           ;incstack = 0
 46689  001AF4  0100               	movlb	0	; () banked
 46690  001AF6  51A6               	movf	_TMR3_InterruptHandler& (0+255),w,b
 46691  001AF8  11A7               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 46692  001AFA  11A8               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 46693  001AFC  B4D8               	btfsc	status,2,c
 46694  001AFE  0012               	return	
 46695                           
 46696                           ; BSR set to: 0
 46697                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 46698  001B00  D801               	call	u1642_28
 46699  001B02  0012               	return	
 46700  001B04                     u1642_28:
 46701  001B04  0005               	push	
 46702  001B06  6EFA               	movwf	pclath,c
 46703  001B08  51A6               	movf	_TMR3_InterruptHandler& (0+255),w,b
 46704  001B0A  6EFD               	movwf	tosl,c
 46705  001B0C  51A7               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 46706  001B0E  6EFE               	movwf	tosh,c
 46707  001B10  51A8               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 46708  001B12  6EFF               	movwf	tosu,c
 46709  001B14  50FA               	movf	pclath,w,c
 46710  001B16  0012               	return		;indir
 46711  001B18                     __end_of_TMR3_CallBack:
 46712                           	opt callstack 0
 46713                           
 46714 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 46715 ;; Defined at:
 46716 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 46717 ;; Parameters:    Size  Location     Type
 46718 ;;		None
 46719 ;; Auto vars:     Size  Location     Type
 46720 ;;		None
 46721 ;; Return value:  Size  Location     Type
 46722 ;;                  1  [STACK] void 
 46723 ;; Registers used:
 46724 ;;		None
 46725 ;; Tracked objects:
 46726 ;;		On entry : 3F/0
 46727 ;;		On exit  : 0/0
 46728 ;;		Unchanged: 0/0
 46729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46734 ;;Total ram usage:        0 bytes
 46735 ;; Hardware stack levels used:    1
 46736 ;; Hardware stack levels required when called:    3
 46737 ;; This function calls:
 46738 ;;		Nothing
 46739 ;; This function is called by:
 46740 ;;		_TMR3_Initialize
 46741 ;;		_TMR3_CallBack
 46742 ;; This function uses a reentrant model
 46743 ;;
 46744                           
 46745                           	psect	text196
 46746  001ED6                     __ptext196:
 46747                           	opt callstack 0
 46748  001ED6                     _TMR3_DefaultInterruptHandler:
 46749                           	opt callstack 11
 46750                           
 46751                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46752                           
 46753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46754                           ;incstack = 0
 46755  001ED6  0012               	return		;funcret
 46756  001ED8                     __end_of_TMR3_DefaultInterruptHandler:
 46757                           	opt callstack 0
 46758                           
 46759 ;; *************** function _calc_bsoc *****************
 46760 ;; Defined at:
 46761 ;;		line 39 in file "bsoc.c"
 46762 ;; Parameters:    Size  Location     Type
 46763 ;;		None
 46764 ;; Auto vars:     Size  Location     Type
 46765 ;;  adj             4  [STACK] float 
 46766 ;;  log_ptr         2  [STACK] PTR unsigned char 
 46767 ;;		 -> port_data(512), 
 46768 ;; Return value:  Size  Location     Type
 46769 ;;                  1  [STACK] void 
 46770 ;; Registers used:
 46771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 46772 ;; Tracked objects:
 46773 ;;		On entry : 3F/0
 46774 ;;		On exit  : 5/1
 46775 ;;		Unchanged: 0/0
 46776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46781 ;;Total ram usage:        0 bytes
 46782 ;; Hardware stack levels used:    1
 46783 ;; Hardware stack levels required when called:   12
 46784 ;; This function calls:
 46785 ;;		_StartTimer
 46786 ;;		___asfladd
 46787 ;;		___fldiv
 46788 ;;		___flge
 46789 ;;		___flmul
 46790 ;;		___flneg
 46791 ;;		___fltol
 46792 ;;		_fabsf
 46793 ;;		_get_ac_charger_relay
 46794 ;;		_port_data_dma_ptr
 46795 ;;		_send_port_data_dma
 46796 ;;		_sprintf
 46797 ;;		_strlen
 46798 ;; This function is called by:
 46799 ;;		_init_bsoc
 46800 ;;		_TMR3_CallBack
 46801 ;; This function uses a reentrant model
 46802 ;;
 46803                           
 46804                           	psect	text197
 46805  014640                     __ptext197:
 46806                           	opt callstack 0
 46807  014640                     _calc_bsoc:
 46808                           	opt callstack 0
 46809                           
 46810                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46811  014640  0E06               	movlw	6
 46812  014642  26E1               	addwf	fsr1l,f,c
 46813  014644  0E00               	movlw	0
 46814  014646  22E2               	addwfc	fsr1h,f,c
 46815                           
 46816                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 46817                           
 46818                           ;incstack = 0
 46819  014648  0E00               	movlw	0
 46820  01464A  6E09               	movwf	(btemp+8)^0,c
 46821  01464C  0E00               	movlw	0
 46822  01464E  6E0A               	movwf	(btemp+9)^0,c
 46823  014650  0E80               	movlw	128
 46824  014652  6E0B               	movwf	(btemp+10)^0,c
 46825  014654  0E3F               	movlw	63
 46826  014656  6E0C               	movwf	(btemp+11)^0,c
 46827                           
 46828                           ;stkvar	_adj @ sp[(-6)+0]
 46829  014658  0EFA               	movlw	-6
 46830  01465A  0060  F027  FFE3   	movff	btemp+8,plusw1
 46831  014660  0EFB               	movlw	-5
 46832  014662  0060  F02B  FFE3   	movff	btemp+9,plusw1
 46833  014668  0EFC               	movlw	-4
 46834  01466A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 46835  014670  0EFD               	movlw	-3
 46836  014672  0060  F033  FFE3   	movff	btemp+11,plusw1
 46837  014678  82BE               	bsf	190,1,c	;volatile
 46838                           
 46839                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 46840  01467A  0E00               	movlw	0
 46841  01467C  6EE6               	movwf	postinc1,c
 46842  01467E  0E00               	movlw	0
 46843  014680  6EE6               	movwf	postinc1,c
 46844  014682  0E61               	movlw	97
 46845  014684  6EE6               	movwf	postinc1,c
 46846  014686  0E45               	movlw	69
 46847  014688  6EE6               	movwf	postinc1,c
 46848  01468A  EE22  F143         	lfsr	2,_C+68	;volatile
 46849  01468E  006F FF7B FFE6     	movff	postinc2,postinc1
 46850  014694  006F FF7B FFE6     	movff	postinc2,postinc1
 46851  01469A  006F FF7B FFE6     	movff	postinc2,postinc1
 46852  0146A0  006F FF7B FFE6     	movff	postinc2,postinc1
 46853  0146A6  ECB2  F0BC         	call	___fldiv	;wreg free
 46854  0146AA  0060  F007  FFE6   	movff	btemp,postinc1
 46855  0146B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 46856  0146B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 46857  0146BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 46858  0146C2  0E8F               	movlw	low (_C+144)
 46859  0146C4  6EE6               	movwf	postinc1,c
 46860  0146C6  0E09               	movlw	high (_C+144)
 46861  0146C8  6EE6               	movwf	postinc1,c
 46862  0146CA  EC42  F004         	call	___asfladd	;wreg free
 46863                           
 46864                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 46865  0146CE  EE22  F18F         	lfsr	2,_C+144	;volatile
 46866  0146D2  006F FF7B FFE6     	movff	postinc2,postinc1
 46867  0146D8  006F FF7B FFE6     	movff	postinc2,postinc1
 46868  0146DE  006F FF7B FFE6     	movff	postinc2,postinc1
 46869  0146E4  006F FF7B FFE6     	movff	postinc2,postinc1
 46870  0146EA  EE22  F18B         	lfsr	2,_C+140	;volatile
 46871  0146EE  006F FF7B FFE6     	movff	postinc2,postinc1
 46872  0146F4  006F FF7B FFE6     	movff	postinc2,postinc1
 46873  0146FA  006F FF7B FFE6     	movff	postinc2,postinc1
 46874  014700  006F FF7B FFE6     	movff	postinc2,postinc1
 46875  014706  EC23  F0EE         	call	___flge	;wreg free
 46876  01470A  B001               	btfsc	btemp& (0+255),0,c
 46877  01470C  D00E               	goto	l16611
 46878                           
 46879                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 46880  01470E  EE22  F18B         	lfsr	2,_C+140	;volatile
 46881  014712  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 46882  014718  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 46883  01471E  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 46884  014724  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 46885  01472A                     l16611:
 46886                           
 46887                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 46888  01472A  0ECD               	movlw	205
 46889  01472C  6EE6               	movwf	postinc1,c
 46890  01472E  0ECC               	movlw	204
 46891  014730  6EE6               	movwf	postinc1,c
 46892  014732  0ECC               	movlw	204
 46893  014734  6EE6               	movwf	postinc1,c
 46894  014736  0E3D               	movlw	61
 46895  014738  6EE6               	movwf	postinc1,c
 46896  01473A  EE22  F18F         	lfsr	2,_C+144	;volatile
 46897  01473E  006F FF7B FFE6     	movff	postinc2,postinc1
 46898  014744  006F FF7B FFE6     	movff	postinc2,postinc1
 46899  01474A  006F FF7B FFE6     	movff	postinc2,postinc1
 46900  014750  006F FF7B FFE6     	movff	postinc2,postinc1
 46901  014756  EC23  F0EE         	call	___flge	;wreg free
 46902  01475A  B001               	btfsc	btemp& (0+255),0,c
 46903  01475C  D010               	goto	l16615
 46904                           
 46905                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 46906  01475E  0ECD               	movlw	205
 46907  014760  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 46908  014766  0ECC               	movlw	204
 46909  014768  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 46910  01476E  0ECC               	movlw	204
 46911  014770  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 46912  014776  0E3D               	movlw	61
 46913  014778  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 46914  01477E                     l16615:
 46915                           
 46916                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 46917  01477E  EE22  F143         	lfsr	2,_C+68	;volatile
 46918  014782  006F FF7B FFE6     	movff	postinc2,postinc1
 46919  014788  006F FF7B FFE6     	movff	postinc2,postinc1
 46920  01478E  006F FF7B FFE6     	movff	postinc2,postinc1
 46921  014794  006F FF7B FFE6     	movff	postinc2,postinc1
 46922  01479A  0E0A               	movlw	10
 46923  01479C  6EE6               	movwf	postinc1,c
 46924  01479E  0ED7               	movlw	215
 46925  0147A0  6EE6               	movwf	postinc1,c
 46926  0147A2  0E23               	movlw	35
 46927  0147A4  6EE6               	movwf	postinc1,c
 46928  0147A6  0E3C               	movlw	60
 46929  0147A8  6EE6               	movwf	postinc1,c
 46930  0147AA  EC23  F0EE         	call	___flge	;wreg free
 46931  0147AE  B001               	btfsc	btemp& (0+255),0,c
 46932  0147B0  D01C               	goto	l16619
 46933                           
 46934                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 46935  0147B2  0062  F754  F009   	movff	_C+214,btemp+8	;volatile
 46936  0147B8  0062  F758  F00A   	movff	_C+215,btemp+9	;volatile
 46937  0147BE  0062  F75C  F00B   	movff	_C+216,btemp+10	;volatile
 46938  0147C4  0062  F760  F00C   	movff	_C+217,btemp+11	;volatile
 46939                           
 46940                           ;stkvar	_adj @ sp[(-6)+0]
 46941  0147CA  0EFA               	movlw	-6
 46942  0147CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 46943  0147D2  0EFB               	movlw	-5
 46944  0147D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 46945  0147DA  0EFC               	movlw	-4
 46946  0147DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 46947  0147E2  0EFD               	movlw	-3
 46948  0147E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 46949  0147EA                     l16619:
 46950                           
 46951                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 46952  0147EA  0E0A               	movlw	10
 46953  0147EC  6EE6               	movwf	postinc1,c
 46954  0147EE  0ED7               	movlw	215
 46955  0147F0  6EE6               	movwf	postinc1,c
 46956  0147F2  0E23               	movlw	35
 46957  0147F4  6EE6               	movwf	postinc1,c
 46958  0147F6  0E3C               	movlw	60
 46959  0147F8  6EE6               	movwf	postinc1,c
 46960  0147FA  EE22  F143         	lfsr	2,_C+68	;volatile
 46961  0147FE  006F FF7B FFE6     	movff	postinc2,postinc1
 46962  014804  006F FF7B FFE6     	movff	postinc2,postinc1
 46963  01480A  006F FF7B FFE6     	movff	postinc2,postinc1
 46964  014810  006F FF7B FFE6     	movff	postinc2,postinc1
 46965  014816  EC23  F0EE         	call	___flge	;wreg free
 46966  01481A  B001               	btfsc	btemp& (0+255),0,c
 46967  01481C  D01C               	goto	l16623
 46968                           
 46969                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 46970  01481E  0062  F744  F009   	movff	_C+210,btemp+8	;volatile
 46971  014824  0062  F748  F00A   	movff	_C+211,btemp+9	;volatile
 46972  01482A  0062  F74C  F00B   	movff	_C+212,btemp+10	;volatile
 46973  014830  0062  F750  F00C   	movff	_C+213,btemp+11	;volatile
 46974                           
 46975                           ;stkvar	_adj @ sp[(-6)+0]
 46976  014836  0EFA               	movlw	-6
 46977  014838  0060  F027  FFE3   	movff	btemp+8,plusw1
 46978  01483E  0EFB               	movlw	-5
 46979  014840  0060  F02B  FFE3   	movff	btemp+9,plusw1
 46980  014846  0EFC               	movlw	-4
 46981  014848  0060  F02F  FFE3   	movff	btemp+10,plusw1
 46982  01484E  0EFD               	movlw	-3
 46983  014850  0060  F033  FFE3   	movff	btemp+11,plusw1
 46984  014856                     l16623:
 46985                           
 46986                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 46987  014856  0E00               	movlw	0
 46988  014858  6EE6               	movwf	postinc1,c
 46989  01485A  0E00               	movlw	0
 46990  01485C  6EE6               	movwf	postinc1,c
 46991  01485E  0E61               	movlw	97
 46992  014860  6EE6               	movwf	postinc1,c
 46993  014862  0E45               	movlw	69
 46994  014864  6EE6               	movwf	postinc1,c
 46995                           
 46996                           ;stkvar	_adj @ sp[(-10)+0]
 46997  014866  0EF6               	movlw	-10
 46998  014868  006F FF8F FFE6     	movff	plusw1,postinc1
 46999  01486E  006F FF8F FFE6     	movff	plusw1,postinc1
 47000  014874  006F FF8F FFE6     	movff	plusw1,postinc1
 47001  01487A  006F FF8F FFE6     	movff	plusw1,postinc1
 47002  014880  EE22  F143         	lfsr	2,_C+68	;volatile
 47003  014884  006F FF7B FFE6     	movff	postinc2,postinc1
 47004  01488A  006F FF7B FFE6     	movff	postinc2,postinc1
 47005  014890  006F FF7B FFE6     	movff	postinc2,postinc1
 47006  014896  006F FF7B FFE6     	movff	postinc2,postinc1
 47007  01489C  EC61  F0B1         	call	___flmul	;wreg free
 47008  0148A0  0060  F007  FFE6   	movff	btemp,postinc1
 47009  0148A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47010  0148AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47011  0148B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 47012  0148B8  ECB2  F0BC         	call	___fldiv	;wreg free
 47013  0148BC  0060  F007  FFE6   	movff	btemp,postinc1
 47014  0148C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47015  0148C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47016  0148CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 47017  0148D4  0E8F               	movlw	low (_C+144)
 47018  0148D6  6EE6               	movwf	postinc1,c
 47019  0148D8  0E09               	movlw	high (_C+144)
 47020  0148DA  6EE6               	movwf	postinc1,c
 47021  0148DC  EC42  F004         	call	___asfladd	;wreg free
 47022                           
 47023                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47024  0148E0  EE22  F18F         	lfsr	2,_C+144	;volatile
 47025  0148E4  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47026  0148EA  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47027  0148F0  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47028  0148F6  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47029                           
 47030                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47031  0148FC  EE22  F19B         	lfsr	2,_C+156	;volatile
 47032  014900  006F FF7B FFE6     	movff	postinc2,postinc1
 47033  014906  006F FF7B FFE6     	movff	postinc2,postinc1
 47034  01490C  006F FF7B FFE6     	movff	postinc2,postinc1
 47035  014912  006F FF7B FFE6     	movff	postinc2,postinc1
 47036  014918  EE22  F18B         	lfsr	2,_C+140	;volatile
 47037  01491C  006F FF7B FFE6     	movff	postinc2,postinc1
 47038  014922  006F FF7B FFE6     	movff	postinc2,postinc1
 47039  014928  006F FF7B FFE6     	movff	postinc2,postinc1
 47040  01492E  006F FF7B FFE6     	movff	postinc2,postinc1
 47041  014934  EC23  F0EE         	call	___flge	;wreg free
 47042  014938  B001               	btfsc	btemp& (0+255),0,c
 47043  01493A  D00E               	goto	l16631
 47044                           
 47045                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 47046  01493C  EE22  F18B         	lfsr	2,_C+140	;volatile
 47047  014940  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47048  014946  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47049  01494C  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47050  014952  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47051  014958                     l16631:
 47052                           
 47053                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 47054  014958  0ECD               	movlw	205
 47055  01495A  6EE6               	movwf	postinc1,c
 47056  01495C  0ECC               	movlw	204
 47057  01495E  6EE6               	movwf	postinc1,c
 47058  014960  0ECC               	movlw	204
 47059  014962  6EE6               	movwf	postinc1,c
 47060  014964  0E3D               	movlw	61
 47061  014966  6EE6               	movwf	postinc1,c
 47062  014968  EE22  F19B         	lfsr	2,_C+156	;volatile
 47063  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 47064  014972  006F FF7B FFE6     	movff	postinc2,postinc1
 47065  014978  006F FF7B FFE6     	movff	postinc2,postinc1
 47066  01497E  006F FF7B FFE6     	movff	postinc2,postinc1
 47067  014984  EC23  F0EE         	call	___flge	;wreg free
 47068  014988  B001               	btfsc	btemp& (0+255),0,c
 47069  01498A  D010               	goto	l16635
 47070                           
 47071                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 47072  01498C  0ECD               	movlw	205
 47073  01498E  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 47074  014994  0ECC               	movlw	204
 47075  014996  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 47076  01499C  0ECC               	movlw	204
 47077  01499E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 47078  0149A4  0E3D               	movlw	61
 47079  0149A6  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 47080  0149AC                     l16635:
 47081                           
 47082                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 47083  0149AC  0E00               	movlw	0
 47084  0149AE  6EE6               	movwf	postinc1,c
 47085  0149B0  0E00               	movlw	0
 47086  0149B2  6EE6               	movwf	postinc1,c
 47087  0149B4  0E61               	movlw	97
 47088  0149B6  6EE6               	movwf	postinc1,c
 47089  0149B8  0E45               	movlw	69
 47090  0149BA  6EE6               	movwf	postinc1,c
 47091  0149BC  EE22  F147         	lfsr	2,_C+72	;volatile
 47092  0149C0  006F FF7B FFE6     	movff	postinc2,postinc1
 47093  0149C6  006F FF7B FFE6     	movff	postinc2,postinc1
 47094  0149CC  006F FF7B FFE6     	movff	postinc2,postinc1
 47095  0149D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47096  0149D8  ECB2  F0BC         	call	___fldiv	;wreg free
 47097  0149DC  0060  F007  FFE6   	movff	btemp,postinc1
 47098  0149E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47099  0149E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47100  0149EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 47101  0149F4  0E93               	movlw	low (_C+148)
 47102  0149F6  6EE6               	movwf	postinc1,c
 47103  0149F8  0E09               	movlw	high (_C+148)
 47104  0149FA  6EE6               	movwf	postinc1,c
 47105  0149FC  EC42  F004         	call	___asfladd	;wreg free
 47106                           
 47107                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 47108  014A00  0E00               	movlw	0
 47109  014A02  6EE6               	movwf	postinc1,c
 47110  014A04  0E00               	movlw	0
 47111  014A06  6EE6               	movwf	postinc1,c
 47112  014A08  0E61               	movlw	97
 47113  014A0A  6EE6               	movwf	postinc1,c
 47114  014A0C  0E45               	movlw	69
 47115  014A0E  6EE6               	movwf	postinc1,c
 47116  014A10  EE22  F17B         	lfsr	2,_C+124	;volatile
 47117  014A14  006F FF7B FFE6     	movff	postinc2,postinc1
 47118  014A1A  006F FF7B FFE6     	movff	postinc2,postinc1
 47119  014A20  006F FF7B FFE6     	movff	postinc2,postinc1
 47120  014A26  006F FF7B FFE6     	movff	postinc2,postinc1
 47121  014A2C  ECB2  F0BC         	call	___fldiv	;wreg free
 47122  014A30  0060  F007  FFE6   	movff	btemp,postinc1
 47123  014A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47124  014A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47125  014A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 47126  014A48  0EA7               	movlw	low (_C+168)
 47127  014A4A  6EE6               	movwf	postinc1,c
 47128  014A4C  0E09               	movlw	high (_C+168)
 47129  014A4E  6EE6               	movwf	postinc1,c
 47130  014A50  EC42  F004         	call	___asfladd	;wreg free
 47131                           
 47132                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 47133  014A54  0E00               	movlw	0
 47134  014A56  6EE6               	movwf	postinc1,c
 47135  014A58  0E00               	movlw	0
 47136  014A5A  6EE6               	movwf	postinc1,c
 47137  014A5C  0E61               	movlw	97
 47138  014A5E  6EE6               	movwf	postinc1,c
 47139  014A60  0E45               	movlw	69
 47140  014A62  6EE6               	movwf	postinc1,c
 47141  014A64  EE22  F177         	lfsr	2,_C+120	;volatile
 47142  014A68  006F FF7B FFE6     	movff	postinc2,postinc1
 47143  014A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 47144  014A74  006F FF7B FFE6     	movff	postinc2,postinc1
 47145  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 47146  014A80  ECB2  F0BC         	call	___fldiv	;wreg free
 47147  014A84  0060  F007  FFE6   	movff	btemp,postinc1
 47148  014A8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47149  014A90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47150  014A96  0060  F013  FFE6   	movff	btemp+3,postinc1
 47151  014A9C  0EAB               	movlw	low (_C+172)
 47152  014A9E  6EE6               	movwf	postinc1,c
 47153  014AA0  0E09               	movlw	high (_C+172)
 47154  014AA2  6EE6               	movwf	postinc1,c
 47155  014AA4  EC42  F004         	call	___asfladd	;wreg free
 47156                           
 47157                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 47158  014AA8  0E00               	movlw	0
 47159  014AAA  6EE6               	movwf	postinc1,c
 47160  014AAC  0E00               	movlw	0
 47161  014AAE  6EE6               	movwf	postinc1,c
 47162  014AB0  0E61               	movlw	97
 47163  014AB2  6EE6               	movwf	postinc1,c
 47164  014AB4  0E45               	movlw	69
 47165  014AB6  6EE6               	movwf	postinc1,c
 47166  014AB8  EE22  F173         	lfsr	2,_C+116	;volatile
 47167  014ABC  006F FF7B FFE6     	movff	postinc2,postinc1
 47168  014AC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47169  014AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47170  014ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 47171  014AD4  ECB2  F0BC         	call	___fldiv	;wreg free
 47172  014AD8  0060  F007  FFE6   	movff	btemp,postinc1
 47173  014ADE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47174  014AE4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47175  014AEA  0060  F013  FFE6   	movff	btemp+3,postinc1
 47176  014AF0  0EAF               	movlw	low (_C+176)
 47177  014AF2  6EE6               	movwf	postinc1,c
 47178  014AF4  0E09               	movlw	high (_C+176)
 47179  014AF6  6EE6               	movwf	postinc1,c
 47180  014AF8  EC42  F004         	call	___asfladd	;wreg free
 47181                           
 47182                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 47183  014AFC  EE22  F17F         	lfsr	2,_C+128	;volatile
 47184  014B00  006F FF7B FFE6     	movff	postinc2,postinc1
 47185  014B06  006F FF7B FFE6     	movff	postinc2,postinc1
 47186  014B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 47187  014B12  006F FF7B FFE6     	movff	postinc2,postinc1
 47188  014B18  0E00               	movlw	0
 47189  014B1A  6EE6               	movwf	postinc1,c
 47190  014B1C  0E00               	movlw	0
 47191  014B1E  6EE6               	movwf	postinc1,c
 47192  014B20  0E00               	movlw	0
 47193  014B22  6EE6               	movwf	postinc1,c
 47194  014B24  0E00               	movlw	0
 47195  014B26  6EE6               	movwf	postinc1,c
 47196  014B28  EC23  F0EE         	call	___flge	;wreg free
 47197  014B2C  B001               	btfsc	btemp& (0+255),0,c
 47198  014B2E  D02A               	goto	l16641
 47199                           
 47200                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 47201  014B30  0E00               	movlw	0
 47202  014B32  6EE6               	movwf	postinc1,c
 47203  014B34  0E00               	movlw	0
 47204  014B36  6EE6               	movwf	postinc1,c
 47205  014B38  0E61               	movlw	97
 47206  014B3A  6EE6               	movwf	postinc1,c
 47207  014B3C  0E45               	movlw	69
 47208  014B3E  6EE6               	movwf	postinc1,c
 47209  014B40  EE22  F17F         	lfsr	2,_C+128	;volatile
 47210  014B44  006F FF7B FFE6     	movff	postinc2,postinc1
 47211  014B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47212  014B50  006F FF7B FFE6     	movff	postinc2,postinc1
 47213  014B56  006F FF7B FFE6     	movff	postinc2,postinc1
 47214  014B5C  ECB2  F0BC         	call	___fldiv	;wreg free
 47215  014B60  0060  F007  FFE6   	movff	btemp,postinc1
 47216  014B66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47217  014B6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47218  014B72  0060  F013  FFE6   	movff	btemp+3,postinc1
 47219  014B78  0E9F               	movlw	low (_C+160)
 47220  014B7A  6EE6               	movwf	postinc1,c
 47221  014B7C  0E09               	movlw	high (_C+160)
 47222  014B7E  6EE6               	movwf	postinc1,c
 47223  014B80  EC42  F004         	call	___asfladd	;wreg free
 47224  014B84                     l16641:
 47225                           
 47226                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 47227  014B84  EE22  F17F         	lfsr	2,_C+128	;volatile
 47228  014B88  0E03               	movlw	3
 47229  014B8A  AEDB               	btfss	plusw2,7,c
 47230  014B8C  D038               	goto	l16645
 47231                           
 47232                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 47233  014B8E  0E00               	movlw	0
 47234  014B90  6EE6               	movwf	postinc1,c
 47235  014B92  0E00               	movlw	0
 47236  014B94  6EE6               	movwf	postinc1,c
 47237  014B96  0E61               	movlw	97
 47238  014B98  6EE6               	movwf	postinc1,c
 47239  014B9A  0E45               	movlw	69
 47240  014B9C  6EE6               	movwf	postinc1,c
 47241  014B9E  EE22  F17F         	lfsr	2,_C+128	;volatile
 47242  014BA2  006F FF7B FFE6     	movff	postinc2,postinc1
 47243  014BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 47244  014BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 47245  014BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 47246  014BBA  ECB2  F0BC         	call	___fldiv	;wreg free
 47247  014BBE  0060  F007  FFE6   	movff	btemp,postinc1
 47248  014BC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47249  014BCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47250  014BD0  0060  F013  FFE6   	movff	btemp+3,postinc1
 47251  014BD6  EC77  F0FE         	call	_fabsf	;wreg free
 47252  014BDA  0060  F007  FFE6   	movff	btemp,postinc1
 47253  014BE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47254  014BE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47255  014BEC  0060  F013  FFE6   	movff	btemp+3,postinc1
 47256  014BF2  0EA3               	movlw	low (_C+164)
 47257  014BF4  6EE6               	movwf	postinc1,c
 47258  014BF6  0E09               	movlw	high (_C+164)
 47259  014BF8  6EE6               	movwf	postinc1,c
 47260  014BFA  EC42  F004         	call	___asfladd	;wreg free
 47261  014BFE                     l16645:
 47262                           
 47263                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 47264  014BFE  0E00               	movlw	0
 47265  014C00  6EE6               	movwf	postinc1,c
 47266  014C02  0E00               	movlw	0
 47267  014C04  6EE6               	movwf	postinc1,c
 47268  014C06  0EC8               	movlw	200
 47269  014C08  6EE6               	movwf	postinc1,c
 47270  014C0A  0E42               	movlw	66
 47271  014C0C  6EE6               	movwf	postinc1,c
 47272  014C0E  EE22  F18B         	lfsr	2,_C+140	;volatile
 47273  014C12  006F FF7B FFE6     	movff	postinc2,postinc1
 47274  014C18  006F FF7B FFE6     	movff	postinc2,postinc1
 47275  014C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 47276  014C24  006F FF7B FFE6     	movff	postinc2,postinc1
 47277  014C2A  EE22  F19B         	lfsr	2,_C+156	;volatile
 47278  014C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 47279  014C34  006F FF7B FFE6     	movff	postinc2,postinc1
 47280  014C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 47281  014C40  006F FF7B FFE6     	movff	postinc2,postinc1
 47282  014C46  ECB2  F0BC         	call	___fldiv	;wreg free
 47283  014C4A  0060  F007  FFE6   	movff	btemp,postinc1
 47284  014C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47285  014C56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47286  014C5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 47287  014C62  EC61  F0B1         	call	___flmul	;wreg free
 47288  014C66  0060  F007  FFE6   	movff	btemp,postinc1
 47289  014C6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47290  014C72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47291  014C78  0060  F013  FFE6   	movff	btemp+3,postinc1
 47292  014C7E  ECB7  F0EC         	call	___fltol	;wreg free
 47293  014C82  0060  F004  F00B   	movff	btemp,btemp+10
 47294  014C88  0060  F008  F00C   	movff	btemp+1,btemp+11
 47295  014C8E  0E01               	movlw	1
 47296  014C90  260B               	addwf	(btemp+10)^0,f,c
 47297  014C92  0E00               	movlw	0
 47298  014C94  220C               	addwfc	(btemp+11)^0,f,c
 47299  014C96  0060  F02C  F9B5   	movff	btemp+10,_C+182	;volatile
 47300  014C9C  0060  F030  F9B6   	movff	btemp+11,_C+183	;volatile
 47301                           
 47302                           ;bsoc.c: 76:  if (C.soc > 100)
 47303  014CA2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47304  014CA6  0E01               	movlw	1
 47305  014CA8  50DB               	movf	plusw2,w,c
 47306  014CAA  E104               	bnz	u1635_20
 47307  014CAC  0E65               	movlw	101
 47308  014CAE  5CDE               	subwf	postinc2,w,c
 47309  014CB0  A0D8               	btfss	status,0,c
 47310  014CB2  D008               	goto	l16651
 47311  014CB4                     u1635_20:
 47312                           
 47313                           ;bsoc.c: 77:   C.soc = 100;
 47314  014CB4  0E64               	movlw	100
 47315  014CB6  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 47316  014CBC  0E00               	movlw	0
 47317  014CBE  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 47318  014CC4                     l16651:
 47319                           
 47320                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 47321  014CC4  EE22  F143         	lfsr	2,_C+68	;volatile
 47322  014CC8  0E03               	movlw	3
 47323  014CCA  AEDB               	btfss	plusw2,7,c
 47324  014CCC  D047               	goto	l2335
 47325                           
 47326                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 47327  014CCE  EE22  F143         	lfsr	2,_C+68	;volatile
 47328  014CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 47329  014CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 47330  014CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 47331  014CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47332  014CEA  EE22  F19B         	lfsr	2,_C+156	;volatile
 47333  014CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 47334  014CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 47335  014CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47336  014D00  006F FF7B FFE6     	movff	postinc2,postinc1
 47337  014D06  ECB2  F0BC         	call	___fldiv	;wreg free
 47338  014D0A  0060  F007  FFE6   	movff	btemp,postinc1
 47339  014D10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47340  014D16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47341  014D1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 47342  014D22  EC61  F008         	call	___flneg	;wreg free
 47343  014D26  0060  F007  FFE6   	movff	btemp,postinc1
 47344  014D2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47345  014D32  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47346  014D38  0060  F013  FFE6   	movff	btemp+3,postinc1
 47347  014D3E  ECB7  F0EC         	call	___fltol	;wreg free
 47348  014D42  0060  F004  F00B   	movff	btemp,btemp+10
 47349  014D48  0060  F008  F00C   	movff	btemp+1,btemp+11
 47350  014D4E  0060  F02C  F9B3   	movff	btemp+10,_C+180	;volatile
 47351  014D54  0060  F030  F9B4   	movff	btemp+11,_C+181	;volatile
 47352                           
 47353                           ;bsoc.c: 81:  } else {
 47354  014D5A  D008               	goto	l16655
 47355  014D5C                     l2335:
 47356                           
 47357                           ;bsoc.c: 82:   C.runtime = 99;
 47358  014D5C  0E63               	movlw	99
 47359  014D5E  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47360  014D64  0E00               	movlw	0
 47361  014D66  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47362  014D6C                     l16655:
 47363                           
 47364                           ;bsoc.c: 84:  if (C.runtime > 99)
 47365  014D6C  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47366  014D70  0E01               	movlw	1
 47367  014D72  50DB               	movf	plusw2,w,c
 47368  014D74  E104               	bnz	u1637_20
 47369  014D76  0E64               	movlw	100
 47370  014D78  5CDE               	subwf	postinc2,w,c
 47371  014D7A  A0D8               	btfss	status,0,c
 47372  014D7C  D008               	goto	l16659
 47373  014D7E                     u1637_20:
 47374                           
 47375                           ;bsoc.c: 85:   C.runtime = 99;
 47376  014D7E  0E63               	movlw	99
 47377  014D80  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47378  014D86  0E00               	movlw	0
 47379  014D88  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47380  014D8E                     l16659:
 47381                           
 47382                           ;bsoc.c: 87:  V.lowint_count++;
 47383  014D8E  0E01               	movlw	1
 47384  014D90  0101               	movlb	1	; () banked
 47385  014D92  27B4               	addwf	(_V+180)& (0+255),f,b	;volatile
 47386  014D94  0E00               	movlw	0
 47387  014D96  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 47388  014D98  23B6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 47389  014D9A  23B7               	addwfc	(_V+183)& (0+255),f,b	;volatile
 47390                           
 47391                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 47392  014D9C  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 47393  014D9E  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 47394  014DA0  A4D8               	btfss	status,2,c
 47395  014DA2  D177               	goto	l16671
 47396                           
 47397                           ; BSR set to: 1
 47398  014DA4  51AF               	movf	(_V+175)& (0+255),w,b	;volatile
 47399  014DA6  B4D8               	btfsc	status,2,c
 47400  014DA8  D174               	goto	l16671
 47401                           
 47402                           ; BSR set to: 1
 47403                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 47404  014DAA  EC2E  F00F         	call	_port_data_dma_ptr	;wreg free
 47405                           
 47406                           ;stkvar	_log_ptr @ sp[(-6)+4]
 47407  014DAE  0EFF               	movlw	-1
 47408  014DB0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 47409  014DB6  0EFE               	movlw	-2
 47410  014DB8  0060  F007  FFE3   	movff	btemp,plusw1
 47411                           
 47412                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 47413  014DBE  EE22  F1D1         	lfsr	2,_C+210	;volatile
 47414  014DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47415  014DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47416  014DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 47417  014DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 47418  014DDA  EE22  F1D5         	lfsr	2,_C+214	;volatile
 47419  014DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 47420  014DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47421  014DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 47422  014DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 47423  014DF6  EE22  F19B         	lfsr	2,_C+156	;volatile
 47424  014DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47425  014E00  006F FF7B FFE6     	movff	postinc2,postinc1
 47426  014E06  006F FF7B FFE6     	movff	postinc2,postinc1
 47427  014E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 47428  014E12  EE22  F243         	lfsr	2,_C+324	;volatile
 47429  014E16  006F FF7B FFE6     	movff	postinc2,postinc1
 47430  014E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 47431  014E22  006F FF7B FFE6     	movff	postinc2,postinc1
 47432  014E28  006F FF7B FFE6     	movff	postinc2,postinc1
 47433  014E2E  EE22  F23F         	lfsr	2,_C+320	;volatile
 47434  014E32  006F FF7B FFE6     	movff	postinc2,postinc1
 47435  014E38  006F FF7B FFE6     	movff	postinc2,postinc1
 47436  014E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 47437  014E44  006F FF7B FFE6     	movff	postinc2,postinc1
 47438  014E4A  EE22  F23D         	lfsr	2,_C+318	;volatile
 47439  014E4E  50DF               	movf	indf2,w,c
 47440  014E50  6EE6               	movwf	postinc1,c
 47441  014E52  0E00               	movlw	0
 47442  014E54  6EE6               	movwf	postinc1,c
 47443  014E56  EC12  F00F         	call	_get_ac_charger_relay	;wreg free
 47444  014E5A  5001               	movf	btemp^0,w,c
 47445  014E5C  6EE6               	movwf	postinc1,c
 47446  014E5E  0E00               	movlw	0
 47447  014E60  6EE6               	movwf	postinc1,c
 47448  014E62  EE22  F167         	lfsr	2,_C+104	;volatile
 47449  014E66  006F FF7B FFE6     	movff	postinc2,postinc1
 47450  014E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 47451  014E72  006F FF7B FFE6     	movff	postinc2,postinc1
 47452  014E78  006F FF7B FFE6     	movff	postinc2,postinc1
 47453  014E7E  EE22  F187         	lfsr	2,_C+136	;volatile
 47454  014E82  006F FF7B FFE6     	movff	postinc2,postinc1
 47455  014E88  006F FF7B FFE6     	movff	postinc2,postinc1
 47456  014E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 47457  014E94  006F FF7B FFE6     	movff	postinc2,postinc1
 47458  014E9A  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47459  014E9E  006F FF78  F00B    	movff	postinc2,btemp+10
 47460  014EA4  006F FF74  F00C    	movff	postdec2,btemp+11
 47461  014EAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 47462  014EB0  0060  F033  FFE6   	movff	btemp+11,postinc1
 47463  014EB6  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47464  014EBA  006F FF78  F00B    	movff	postinc2,btemp+10
 47465  014EC0  006F FF74  F00C    	movff	postdec2,btemp+11
 47466  014EC6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 47467  014ECC  0060  F033  FFE6   	movff	btemp+11,postinc1
 47468  014ED2  EE22  F193         	lfsr	2,_C+148	;volatile
 47469  014ED6  006F FF7B FFE6     	movff	postinc2,postinc1
 47470  014EDC  006F FF7B FFE6     	movff	postinc2,postinc1
 47471  014EE2  006F FF7B FFE6     	movff	postinc2,postinc1
 47472  014EE8  006F FF7B FFE6     	movff	postinc2,postinc1
 47473  014EEE  EE22  F18F         	lfsr	2,_C+144	;volatile
 47474  014EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 47475  014EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 47476  014EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 47477  014F04  006F FF7B FFE6     	movff	postinc2,postinc1
 47478  014F0A  EE22  F177         	lfsr	2,_C+120	;volatile
 47479  014F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 47480  014F14  006F FF7B FFE6     	movff	postinc2,postinc1
 47481  014F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 47482  014F20  006F FF7B FFE6     	movff	postinc2,postinc1
 47483  014F26  EE22  F173         	lfsr	2,_C+116	;volatile
 47484  014F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 47485  014F30  006F FF7B FFE6     	movff	postinc2,postinc1
 47486  014F36  006F FF7B FFE6     	movff	postinc2,postinc1
 47487  014F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 47488  014F42  EE22  F17B         	lfsr	2,_C+124	;volatile
 47489  014F46  006F FF7B FFE6     	movff	postinc2,postinc1
 47490  014F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 47491  014F52  006F FF7B FFE6     	movff	postinc2,postinc1
 47492  014F58  006F FF7B FFE6     	movff	postinc2,postinc1
 47493  014F5E  EE22  F17F         	lfsr	2,_C+128	;volatile
 47494  014F62  006F FF7B FFE6     	movff	postinc2,postinc1
 47495  014F68  006F FF7B FFE6     	movff	postinc2,postinc1
 47496  014F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 47497  014F74  006F FF7B FFE6     	movff	postinc2,postinc1
 47498  014F7A  EE22  F147         	lfsr	2,_C+72	;volatile
 47499  014F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 47500  014F84  006F FF7B FFE6     	movff	postinc2,postinc1
 47501  014F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 47502  014F90  006F FF7B FFE6     	movff	postinc2,postinc1
 47503  014F96  EE22  F143         	lfsr	2,_C+68	;volatile
 47504  014F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 47505  014FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 47506  014FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 47507  014FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 47508  014FB2  EE22  F163         	lfsr	2,_C+100	;volatile
 47509  014FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 47510  014FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 47511  014FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47512  014FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47513  014FCE  EE22  F14B         	lfsr	2,_C+76	;volatile
 47514  014FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 47515  014FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 47516  014FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 47517  014FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47518  014FEA  EE22  F14F         	lfsr	2,_C+80	;volatile
 47519  014FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 47520  014FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 47521  014FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 47522  015000  006F FF7B FFE6     	movff	postinc2,postinc1
 47523  015006  EE22  F153         	lfsr	2,_C+84	;volatile
 47524  01500A  006F FF7B FFE6     	movff	postinc2,postinc1
 47525  015010  006F FF7B FFE6     	movff	postinc2,postinc1
 47526  015016  006F FF7B FFE6     	movff	postinc2,postinc1
 47527  01501C  006F FF7B FFE6     	movff	postinc2,postinc1
 47528  015022  0060  F607  FFE6   	movff	_V+129,postinc1
 47529  015028  0060  F60B  FFE6   	movff	_V+130,postinc1
 47530  01502E  0060  F60F  FFE6   	movff	_V+131,postinc1
 47531  015034  0060  F613  FFE6   	movff	_V+132,postinc1
 47532  01503A  0E32               	movlw	50
 47533  01503C  6EE6               	movwf	postinc1,c
 47534  01503E  0E00               	movlw	0
 47535  015040  6EE6               	movwf	postinc1,c
 47536  015042  0E3F               	movlw	low STR_87
 47537  015044  6EE6               	movwf	postinc1,c
 47538  015046  0EFA               	movlw	high STR_87
 47539  015048  6EE6               	movwf	postinc1,c
 47540                           
 47541                           ;stkvar	_log_ptr @ sp[(-98)+4]
 47542  01504A  0EA2               	movlw	-94
 47543  01504C  006F FF8F FFE6     	movff	plusw1,postinc1
 47544  015052  006F FF8F FFE6     	movff	plusw1,postinc1
 47545  015058  0E5E               	movlw	94
 47546  01505A  6EE6               	movwf	postinc1,c
 47547  01505C  EC42  F0F7         	call	_sprintf	;wreg free
 47548                           
 47549                           ; BSR set to: 0
 47550                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 47551  015060  0E7D               	movlw	125
 47552  015062  6EE6               	movwf	postinc1,c
 47553  015064  0E00               	movlw	0
 47554  015066  6EE6               	movwf	postinc1,c
 47555  015068  0E0A               	movlw	10
 47556  01506A  6EE6               	movwf	postinc1,c
 47557  01506C  ECBA  F009         	call	_StartTimer	;wreg free
 47558                           
 47559                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 47560                           ;stkvar	_log_ptr @ sp[(-6)+4]
 47561  015070  0EFE               	movlw	-2
 47562  015072  006F FF8F FFE6     	movff	plusw1,postinc1
 47563  015078  006F FF8F FFE6     	movff	plusw1,postinc1
 47564  01507E  ECAE  F000         	call	_strlen	;wreg free
 47565  015082  0060  F007  FFE6   	movff	btemp,postinc1
 47566  015088  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47567  01508E  ECC5  F007         	call	_send_port_data_dma	;wreg free
 47568  015092                     l16671:
 47569                           
 47570                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 47571  015092  0E09               	movlw	9
 47572  015094  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 47573  015096  D001               	goto	l2339
 47574                           
 47575                           ;bsoc.c: 102:   log_update_wait = 0;
 47576  015098  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 47577  01509A                     l2339:
 47578                           
 47579                           ;bsoc.c: 104:  C.update = 0;
 47580  01509A  0E00               	movlw	0
 47581  01509C  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 47582                           
 47583                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 47584  0150A2  92BE               	bcf	190,1,c	;volatile
 47585                           
 47586                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 47587  0150A4  0EFA               	movlw	250
 47588  0150A6  26E1               	addwf	fsr1l,f,c
 47589  0150A8  0EFF               	movlw	255
 47590  0150AA  22E2               	addwfc	fsr1h,f,c
 47591  0150AC  0012               	return		;funcret
 47592  0150AE                     __end_of_calc_bsoc:
 47593                           	opt callstack 0
 47594                           
 47595 ;; *************** function _send_port_data_dma *****************
 47596 ;; Defined at:
 47597 ;;		line 398 in file "eadog.c"
 47598 ;; Parameters:    Size  Location     Type
 47599 ;;  dsize           2  [STACK] unsigned short 
 47600 ;; Auto vars:     Size  Location     Type
 47601 ;;		None
 47602 ;; Return value:  Size  Location     Type
 47603 ;;                  1  [STACK] void 
 47604 ;; Registers used:
 47605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 47606 ;; Tracked objects:
 47607 ;;		On entry : 0/0
 47608 ;;		On exit  : 3F/3B
 47609 ;;		Unchanged: 0/0
 47610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47615 ;;Total ram usage:        0 bytes
 47616 ;; Hardware stack levels used:    1
 47617 ;; Hardware stack levels required when called:    3
 47618 ;; This function calls:
 47619 ;;		Nothing
 47620 ;; This function is called by:
 47621 ;;		_calc_bsoc
 47622 ;; This function uses a reentrant model
 47623 ;;
 47624                           
 47625                           	psect	text198
 47626  000F8A                     __ptext198:
 47627                           	opt callstack 0
 47628  000F8A                     _send_port_data_dma:
 47629                           	opt callstack 10
 47630                           
 47631                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 47632                           ;stkvar	_dsize @ sp[(0)+-2]
 47633                           
 47634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47635                           ;incstack = 0
 47636  000F8A  0EFE               	movlw	-2
 47637  000F8C  04E3               	decf	plusw1,w,c
 47638  000F8E  0EFF               	movlw	-1
 47639  000F90  006F FF8C  F001    	movff	plusw1,btemp
 47640  000F96  0E02               	movlw	2
 47641  000F98  5A01               	subwfb	btemp^0,f,c
 47642  000F9A  A0D8               	btfss	status,0,c
 47643  000F9C  D00C               	goto	l12785
 47644                           
 47645                           ;eadog.c: 401:   dsize = 512;
 47646  000F9E  0E00               	movlw	0
 47647  000FA0  6E0B               	movwf	(btemp+10)^0,c
 47648  000FA2  0E02               	movlw	2
 47649  000FA4  6E0C               	movwf	(btemp+11)^0,c
 47650                           
 47651                           ;stkvar	_dsize @ sp[(0)+-2]
 47652  000FA6  0EFE               	movlw	-2
 47653  000FA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 47654  000FAE  0EFF               	movlw	-1
 47655  000FB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 47656  000FB6                     l12785:
 47657                           
 47658                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 47659  000FB6  013B               	movlb	59	; () banked
 47660  000FB8  9FDC               	bcf	220,7,b	;volatile
 47661                           
 47662                           ; BSR set to: 59
 47663                           ;eadog.c: 404:  DMA2SSZ = dsize;
 47664                           ;stkvar	_dsize @ sp[(0)+-2]
 47665  000FBA  0EFE               	movlw	-2
 47666  000FBC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 47667  000FC2  0EFF               	movlw	-1
 47668  000FC4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 47669                           
 47670                           ; BSR set to: 59
 47671                           ;eadog.c: 405:  DMA2DSZ = 1;
 47672  000FCA  0E00               	movlw	0
 47673  000FCC  6FCF               	movwf	207,b	;volatile
 47674  000FCE  0E01               	movlw	1
 47675  000FD0  6FCE               	movwf	206,b	;volatile
 47676                           
 47677                           ; BSR set to: 59
 47678                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 47679  000FD2  8FDC               	bsf	220,7,b	;volatile
 47680                           
 47681                           ; BSR set to: 59
 47682                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 47683  000FD4  8DDC               	bsf	220,6,b	;volatile
 47684                           
 47685                           ; BSR set to: 59
 47686                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 47687  000FD6  52E5               	movf	postdec1,f,c
 47688  000FD8  52E5               	movf	postdec1,f,c
 47689  000FDA  0012               	return		;funcret
 47690  000FDC                     __end_of_send_port_data_dma:
 47691                           	opt callstack 0
 47692                           
 47693 ;; *************** function _port_data_dma_ptr *****************
 47694 ;; Defined at:
 47695 ;;		line 413 in file "eadog.c"
 47696 ;; Parameters:    Size  Location     Type
 47697 ;;		None
 47698 ;; Auto vars:     Size  Location     Type
 47699 ;;		None
 47700 ;; Return value:  Size  Location     Type
 47701 ;;                  2  [STACK] PTR unsigned char 
 47702 ;; Registers used:
 47703 ;;		wreg, status,2, status,0, btemp, btemp+1
 47704 ;; Tracked objects:
 47705 ;;		On entry : 3F/1
 47706 ;;		On exit  : 0/0
 47707 ;;		Unchanged: 0/0
 47708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47713 ;;Total ram usage:        0 bytes
 47714 ;; Hardware stack levels used:    1
 47715 ;; Hardware stack levels required when called:    3
 47716 ;; This function calls:
 47717 ;;		Nothing
 47718 ;; This function is called by:
 47719 ;;		_calc_bsoc
 47720 ;; This function uses a reentrant model
 47721 ;;
 47722                           
 47723                           	psect	text199
 47724  001E5C                     __ptext199:
 47725                           	opt callstack 0
 47726  001E5C                     _port_data_dma_ptr:
 47727                           	opt callstack 10
 47728                           
 47729                           ;eadog.c: 415:  return port_data;
 47730                           
 47731                           ; BSR set to: 59
 47732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47733                           ;incstack = 0
 47734  001E5C  0EFF               	movlw	low _port_data
 47735  001E5E  6E01               	movwf	btemp^0,c
 47736  001E60  0E06               	movlw	high _port_data
 47737  001E62  6E02               	movwf	(btemp+1)^0,c
 47738                           
 47739                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 47740  001E64  0012               	return		;funcret
 47741  001E66                     __end_of_port_data_dma_ptr:
 47742                           	opt callstack 0
 47743                           
 47744 ;; *************** function ___asfladd *****************
 47745 ;; Defined at:
 47746 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 47747 ;; Parameters:    Size  Location     Type
 47748 ;;  f1p             2  [STACK] PTR 
 47749 ;;		 -> C(336), 
 47750 ;;  f2              4  [STACK] PTR 
 47751 ;; Auto vars:     Size  Location     Type
 47752 ;;		None
 47753 ;; Return value:  Size  Location     Type
 47754 ;;                  4  [STACK] PTR 
 47755 ;; Registers used:
 47756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 47757 ;; Tracked objects:
 47758 ;;		On entry : 0/0
 47759 ;;		On exit  : 0/0
 47760 ;;		Unchanged: 0/0
 47761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47766 ;;Total ram usage:        0 bytes
 47767 ;; Hardware stack levels used:    1
 47768 ;; Hardware stack levels required when called:    4
 47769 ;; This function calls:
 47770 ;;		___fladd
 47771 ;; This function is called by:
 47772 ;;		_calc_bsoc
 47773 ;; This function uses a reentrant model
 47774 ;;
 47775                           
 47776                           	psect	text200
 47777  000884                     __ptext200:
 47778                           	opt callstack 0
 47779  000884                     ___asfladd:
 47780                           	opt callstack 9
 47781                           
 47782                           ;	Return value of ___asfladd is never used
 47783                           ;stkvar	_f2 @ sp[(0)+-6]
 47784                           
 47785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47786                           ;incstack = 0
 47787  000884  0EFA               	movlw	-6
 47788  000886  006F FF8F FFE6     	movff	plusw1,postinc1
 47789  00088C  006F FF8F FFE6     	movff	plusw1,postinc1
 47790  000892  006F FF8F FFE6     	movff	plusw1,postinc1
 47791  000898  006F FF8F FFE6     	movff	plusw1,postinc1
 47792                           
 47793                           ;stkvar	_f1p @ sp[(-4)+-2]
 47794  00089E  0EFA               	movlw	-6
 47795  0008A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 47796  0008A6  0EFB               	movlw	-5
 47797  0008A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 47798  0008AE  006F FF7B FFE6     	movff	postinc2,postinc1
 47799  0008B4  006F FF7B FFE6     	movff	postinc2,postinc1
 47800  0008BA  006F FF7B FFE6     	movff	postinc2,postinc1
 47801  0008C0  006F FF7B FFE6     	movff	postinc2,postinc1
 47802  0008C6  EC76  F0B5         	call	___fladd	;wreg free
 47803                           
 47804                           ;stkvar	_f1p @ sp[(0)+-2]
 47805  0008CA  0EFE               	movlw	-2
 47806  0008CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 47807  0008D2  0EFF               	movlw	-1
 47808  0008D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 47809  0008DA  0060  F007  FFDE   	movff	btemp,postinc2
 47810  0008E0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 47811  0008E6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 47812  0008EC  0060  F013  FFDE   	movff	btemp+3,postinc2
 47813                           
 47814                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 47815  0008F2  0EFA               	movlw	250
 47816  0008F4  26E1               	addwf	fsr1l,f,c
 47817  0008F6  0EFF               	movlw	255
 47818  0008F8  22E2               	addwfc	fsr1h,f,c
 47819  0008FA  0012               	return		;funcret
 47820  0008FC                     __end_of___asfladd:
 47821                           	opt callstack 0
 47822                           
 47823 ;; *************** function _INT0_ISR *****************
 47824 ;; Defined at:
 47825 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 47826 ;; Parameters:    Size  Location     Type
 47827 ;;		None
 47828 ;; Auto vars:     Size  Location     Type
 47829 ;;		None
 47830 ;; Return value:  Size  Location     Type
 47831 ;;                  1    wreg      void 
 47832 ;; Registers used:
 47833 ;;		wreg, status,2, status,0, pclath, tosl
 47834 ;; Tracked objects:
 47835 ;;		On entry : 0/0
 47836 ;;		On exit  : 0/0
 47837 ;;		Unchanged: 0/0
 47838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47843 ;;Total ram usage:        0 bytes
 47844 ;; Hardware stack levels used:    1
 47845 ;; Hardware stack levels required when called:    2
 47846 ;; This function calls:
 47847 ;;		_INT0_CallBack
 47848 ;; This function is called by:
 47849 ;;		Interrupt level 2
 47850 ;; This function uses a non-reentrant model
 47851 ;;
 47852                           
 47853                           	psect	text201
 47854  001E34                     __ptext201:
 47855                           	opt callstack 0
 47856  001E34                     _INT0_ISR:
 47857                           	opt callstack 2
 47858                           
 47859                           ;incstack = 0
 47860  001E34  EE14  F2CC         	lfsr	1,___inthi_sp
 47861                           
 47862                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 47863  001E38  0139               	movlb	57	; () banked
 47864  001E3A  91A1               	bcf	161,0,b	;volatile
 47865                           
 47866                           ; BSR set to: 57
 47867                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 47868  001E3C  EC8C  F00D         	call	_INT0_CallBack	;wreg free
 47869  001E40  0011               	retfie		f
 47870  001E42                     __end_of_INT0_ISR:
 47871                           	opt callstack 0
 47872                           
 47873 ;; *************** function _INT0_CallBack *****************
 47874 ;; Defined at:
 47875 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 47876 ;; Parameters:    Size  Location     Type
 47877 ;;		None
 47878 ;; Auto vars:     Size  Location     Type
 47879 ;;		None
 47880 ;; Return value:  Size  Location     Type
 47881 ;;                  1  [STACK] void 
 47882 ;; Registers used:
 47883 ;;		wreg, status,2, status,0, pclath, tosl
 47884 ;; Tracked objects:
 47885 ;;		On entry : 3F/39
 47886 ;;		On exit  : 0/0
 47887 ;;		Unchanged: 0/0
 47888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47893 ;;Total ram usage:        0 bytes
 47894 ;; Hardware stack levels used:    1
 47895 ;; Hardware stack levels required when called:    1
 47896 ;; This function calls:
 47897 ;;		Absolute function
 47898 ;;		_INT0_DefaultInterruptHandler
 47899 ;; This function is called by:
 47900 ;;		_INT0_ISR
 47901 ;; This function uses a reentrant model
 47902 ;;
 47903                           
 47904                           	psect	text202
 47905  001B18                     __ptext202:
 47906                           	opt callstack 0
 47907  001B18                     _INT0_CallBack:
 47908                           	opt callstack 2
 47909                           
 47910                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 47911                           
 47912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47913                           ;incstack = 0
 47914  001B18  0100               	movlb	0	; () banked
 47915  001B1A  51C1               	movf	_INT0_InterruptHandler& (0+255),w,b
 47916  001B1C  11C2               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 47917  001B1E  11C3               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 47918  001B20  B4D8               	btfsc	status,2,c
 47919  001B22  0012               	return	
 47920                           
 47921                           ; BSR set to: 0
 47922                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 47923  001B24  D801               	call	u1302_48
 47924  001B26  0012               	return	
 47925  001B28                     u1302_48:
 47926  001B28  0005               	push	
 47927  001B2A  6EFA               	movwf	pclath,c
 47928  001B2C  51C1               	movf	_INT0_InterruptHandler& (0+255),w,b
 47929  001B2E  6EFD               	movwf	tosl,c
 47930  001B30  51C2               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 47931  001B32  6EFE               	movwf	tosh,c
 47932  001B34  51C3               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 47933  001B36  6EFF               	movwf	tosu,c
 47934  001B38  50FA               	movf	pclath,w,c
 47935  001B3A  0012               	return		;indir
 47936  001B3C                     __end_of_INT0_CallBack:
 47937                           	opt callstack 0
 47938                           
 47939 ;; *************** function _INT0_DefaultInterruptHandler *****************
 47940 ;; Defined at:
 47941 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 47942 ;; Parameters:    Size  Location     Type
 47943 ;;		None
 47944 ;; Auto vars:     Size  Location     Type
 47945 ;;		None
 47946 ;; Return value:  Size  Location     Type
 47947 ;;                  1  [STACK] void 
 47948 ;; Registers used:
 47949 ;;		None
 47950 ;; Tracked objects:
 47951 ;;		On entry : 3F/0
 47952 ;;		On exit  : 0/0
 47953 ;;		Unchanged: 0/0
 47954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47959 ;;Total ram usage:        0 bytes
 47960 ;; Hardware stack levels used:    1
 47961 ;; This function calls:
 47962 ;;		Nothing
 47963 ;; This function is called by:
 47964 ;;		_EXT_INT_Initialize
 47965 ;;		_INT0_CallBack
 47966 ;; This function uses a reentrant model
 47967 ;;
 47968                           
 47969                           	psect	text203
 47970  001ED8                     __ptext203:
 47971                           	opt callstack 0
 47972  001ED8                     _INT0_DefaultInterruptHandler:
 47973                           	opt callstack 2
 47974                           
 47975                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47976                           
 47977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47978                           ;incstack = 0
 47979  001ED8  0012               	return		;funcret
 47980  001EDA                     __end_of_INT0_DefaultInterruptHandler:
 47981                           	opt callstack 0
 47982                           
 47983 ;; *************** function _Default_ISR *****************
 47984 ;; Defined at:
 47985 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 47986 ;; Parameters:    Size  Location     Type
 47987 ;;		None
 47988 ;; Auto vars:     Size  Location     Type
 47989 ;;		None
 47990 ;; Return value:  Size  Location     Type
 47991 ;;                  1    wreg      void 
 47992 ;; Registers used:
 47993 ;;		None
 47994 ;; Tracked objects:
 47995 ;;		On entry : 0/0
 47996 ;;		On exit  : 0/0
 47997 ;;		Unchanged: 0/0
 47998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48003 ;;Total ram usage:        0 bytes
 48004 ;; Hardware stack levels used:    1
 48005 ;; This function calls:
 48006 ;;		Nothing
 48007 ;; This function is called by:
 48008 ;;		Interrupt level 2
 48009 ;; This function uses a non-reentrant model
 48010 ;;
 48011                           
 48012                           	psect	text204
 48013  001ED0                     __ptext204:
 48014                           	opt callstack 0
 48015  001ED0                     _Default_ISR:
 48016                           	opt callstack 4
 48017                           
 48018                           ;incstack = 0
 48019  001ED0  EE14  F2CC         	lfsr	1,___inthi_sp
 48020  001ED4  0011               	retfie		f
 48021  001ED6                     __end_of_Default_ISR:
 48022                           	opt callstack 0
 48023                           
 48024 ;; *************** function _ADCC_ISR *****************
 48025 ;; Defined at:
 48026 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48027 ;; Parameters:    Size  Location     Type
 48028 ;;		None
 48029 ;; Auto vars:     Size  Location     Type
 48030 ;;		None
 48031 ;; Return value:  Size  Location     Type
 48032 ;;                  1    wreg      void 
 48033 ;; Registers used:
 48034 ;;		wreg, status,2, status,0, pclath, tosl
 48035 ;; Tracked objects:
 48036 ;;		On entry : 0/0
 48037 ;;		On exit  : 0/0
 48038 ;;		Unchanged: 0/0
 48039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48044 ;;Total ram usage:        0 bytes
 48045 ;; Hardware stack levels used:    1
 48046 ;; Hardware stack levels required when called:    1
 48047 ;; This function calls:
 48048 ;;		Absolute function
 48049 ;;		_ADCC_DefaultInterruptHandler
 48050 ;;		_adc_int_handler
 48051 ;; This function is called by:
 48052 ;;		Interrupt level 2
 48053 ;; This function uses a non-reentrant model
 48054 ;;
 48055                           
 48056                           	psect	text205
 48057  0017AC                     __ptext205:
 48058                           	opt callstack 0
 48059  0017AC                     _ADCC_ISR:
 48060                           	opt callstack 3
 48061                           
 48062                           ;incstack = 0
 48063  0017AC  EE14  F2CC         	lfsr	1,___inthi_sp
 48064                           
 48065                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 48066  0017B0  0139               	movlb	57	; () banked
 48067  0017B2  95A1               	bcf	161,2,b	;volatile
 48068                           
 48069                           ; BSR set to: 57
 48070                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 48071  0017B4  0100               	movlb	0	; () banked
 48072  0017B6  51B2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48073  0017B8  11B3               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48074  0017BA  11B4               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48075  0017BC  B4D8               	btfsc	status,2,c
 48076  0017BE  0011               	retfie		f
 48077                           
 48078                           ; BSR set to: 0
 48079                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 48080  0017C0  D801               	call	i2u1366_48
 48081  0017C2  0011               	retfie		f
 48082  0017C4                     i2u1366_48:
 48083  0017C4  0005               	push	
 48084  0017C6  6EFA               	movwf	pclath,c
 48085  0017C8  51B2               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48086  0017CA  6EFD               	movwf	tosl,c
 48087  0017CC  51B3               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48088  0017CE  6EFE               	movwf	tosh,c
 48089  0017D0  51B4               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48090  0017D2  6EFF               	movwf	tosu,c
 48091  0017D4  50FA               	movf	pclath,w,c
 48092  0017D6  0012               	return		;indir
 48093  0017D8                     __end_of_ADCC_ISR:
 48094                           	opt callstack 0
 48095                           
 48096 ;; *************** function _adc_int_t_handler *****************
 48097 ;; Defined at:
 48098 ;;		line 181 in file "daq.c"
 48099 ;; Parameters:    Size  Location     Type
 48100 ;;		None
 48101 ;; Auto vars:     Size  Location     Type
 48102 ;;		None
 48103 ;; Return value:  Size  Location     Type
 48104 ;;                  1  [STACK] void 
 48105 ;; Registers used:
 48106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 48107 ;; Tracked objects:
 48108 ;;		On entry : 3F/0
 48109 ;;		On exit  : 3/2
 48110 ;;		Unchanged: 0/0
 48111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48116 ;;Total ram usage:        0 bytes
 48117 ;; Hardware stack levels used:    1
 48118 ;; Hardware stack levels required when called:    1
 48119 ;; This function calls:
 48120 ;;		_ADCC_DischargeSampleCapacitor
 48121 ;;		_ADCC_StartConversion
 48122 ;; This function is called by:
 48123 ;;		_start_adc_scan
 48124 ;;		_ADCC_ThresholdISR
 48125 ;; This function uses a reentrant model
 48126 ;;
 48127                           
 48128                           	psect	text206
 48129  000708                     __ptext206:
 48130                           	opt callstack 0
 48131  000708                     _adc_int_t_handler:
 48132                           	opt callstack 2
 48133                           
 48134                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 48135                           
 48136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48137                           ;incstack = 0
 48138  000708  013E               	movlb	62	; () banked
 48139  00070A  51E6               	movf	230,w,b	;volatile
 48140  00070C  006F FB9C  F001    	movff	16103,btemp	;volatile
 48141  000712  6A02               	clrf	(btemp+1)^0,c
 48142  000714  0060  F004  F002   	movff	btemp,btemp+1
 48143  00071A  6A01               	clrf	btemp^0,c
 48144  00071C  2601               	addwf	btemp^0,f,c
 48145  00071E  0E00               	movlw	0
 48146  000720  2202               	addwfc	(btemp+1)^0,f,c
 48147  000722  0102               	movlb	2	; () banked
 48148  000724  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 48149  000726  0D02               	mullw	2
 48150  000728  0E07               	movlw	low _R
 48151  00072A  24F3               	addwf	243,w,c
 48152  00072C  6ED9               	movwf	fsr2l,c
 48153  00072E  0E02               	movlw	high _R
 48154  000730  20F4               	addwfc	prodh,w,c
 48155  000732  6EDA               	movwf	fsr2h,c
 48156  000734  0060  F007  FFDE   	movff	btemp,postinc2
 48157  00073A  0060  F00B  FFDD   	movff	btemp+1,postdec2
 48158  000740                     l14439:
 48159                           
 48160                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 48161  000740  0102               	movlb	2	; () banked
 48162  000742  2B39               	incf	(_R+50)& (0+255),f,b	;volatile
 48163  000744  0E0D               	movlw	13
 48164  000746  6539               	cpfsgt	(_R+50)& (0+255),b	;volatile
 48165  000748  D003               	goto	l14445
 48166                           
 48167                           ; BSR set to: 2
 48168                           ;daq.c: 189:    R.done = 1;
 48169  00074A  0E01               	movlw	1
 48170  00074C  6F3C               	movwf	(_R+53)& (0+255),b	;volatile
 48171  00074E  0012               	return	
 48172  000750                     l14445:
 48173                           
 48174                           ; BSR set to: 2
 48175                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 48176  000750  0060  F8E4  F00C   	movff	_R+50,btemp+11	;volatile
 48177  000756  EE20  F23A         	lfsr	2,_R+51	;volatile
 48178  00075A  006F FF78  F009    	movff	postinc2,btemp+8
 48179  000760  006F FF74  F00A    	movff	postdec2,btemp+9
 48180  000766  2A0C               	incf	(btemp+11)^0,f,c
 48181  000768  D003               	goto	u1363_44
 48182  00076A                     u1363_45:
 48183  00076A  90D8               	bcf	status,0,c
 48184  00076C  320A               	rrcf	(btemp+9)^0,f,c
 48185  00076E  3209               	rrcf	(btemp+8)^0,f,c
 48186  000770                     u1363_44:
 48187  000770  2E0C               	decfsz	(btemp+11)^0,f,c
 48188  000772  D7FB               	goto	u1363_45
 48189  000774  A009               	btfss	(btemp+8)^0,0,c
 48190  000776  D7E4               	goto	l14439
 48191                           
 48192                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 48193  000778  EC49  F00F         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 48194                           
 48195                           ; BSR set to: 62
 48196                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 48197  00077C  0102               	movlb	2	; () banked
 48198  00077E  5139               	movf	(_R+50)& (0+255),w,b	;volatile
 48199  000780  0B0F               	andlw	15
 48200  000782  6EE6               	movwf	postinc1,c
 48201  000784  ECD3  F00E         	call	_ADCC_StartConversion	;wreg free
 48202                           
 48203                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48204  000788  0012               	return		;funcret
 48205  00078A                     __end_of_adc_int_t_handler:
 48206                           	opt callstack 0
 48207                           
 48208 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 48209 ;; Defined at:
 48210 ;;		line 339 in file "mcc_generated_files/adcc.c"
 48211 ;; Parameters:    Size  Location     Type
 48212 ;;		None
 48213 ;; Auto vars:     Size  Location     Type
 48214 ;;		None
 48215 ;; Return value:  Size  Location     Type
 48216 ;;                  1  [STACK] void 
 48217 ;; Registers used:
 48218 ;;		None
 48219 ;; Tracked objects:
 48220 ;;		On entry : 3F/0
 48221 ;;		On exit  : 0/0
 48222 ;;		Unchanged: 0/0
 48223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48228 ;;Total ram usage:        0 bytes
 48229 ;; Hardware stack levels used:    1
 48230 ;; This function calls:
 48231 ;;		Nothing
 48232 ;; This function is called by:
 48233 ;;		_ADCC_Initialize
 48234 ;;		_ADCC_ISR
 48235 ;;		_ADCC_ThresholdISR
 48236 ;; This function uses a reentrant model
 48237 ;;
 48238                           
 48239                           	psect	text207
 48240  001EDA                     __ptext207:
 48241                           	opt callstack 0
 48242  001EDA                     _ADCC_DefaultInterruptHandler:
 48243                           	opt callstack 3
 48244                           
 48245                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48246                           
 48247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48248                           ;incstack = 0
 48249  001EDA  0012               	return		;funcret
 48250  001EDC                     __end_of_ADCC_DefaultInterruptHandler:
 48251                           	opt callstack 0
 48252                           
 48253 ;; *************** function _adc_int_handler *****************
 48254 ;; Defined at:
 48255 ;;		line 171 in file "daq.c"
 48256 ;; Parameters:    Size  Location     Type
 48257 ;;		None
 48258 ;; Auto vars:     Size  Location     Type
 48259 ;;		None
 48260 ;; Return value:  Size  Location     Type
 48261 ;;                  1  [STACK] void 
 48262 ;; Registers used:
 48263 ;;		None
 48264 ;; Tracked objects:
 48265 ;;		On entry : 3F/0
 48266 ;;		On exit  : 0/0
 48267 ;;		Unchanged: 0/0
 48268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48273 ;;Total ram usage:        0 bytes
 48274 ;; Hardware stack levels used:    1
 48275 ;; This function calls:
 48276 ;;		Nothing
 48277 ;; This function is called by:
 48278 ;;		_start_adc_scan
 48279 ;;		_ADCC_ISR
 48280 ;; This function uses a reentrant model
 48281 ;;
 48282                           
 48283                           	psect	text208
 48284  001EDC                     __ptext208:
 48285                           	opt callstack 0
 48286  001EDC                     _adc_int_handler:
 48287                           	opt callstack 3
 48288                           
 48289                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 48290                           
 48291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48292                           ;incstack = 0
 48293  001EDC  0012               	return		;funcret
 48294  001EDE                     __end_of_adc_int_handler:
 48295                           	opt callstack 0
 48296                           
 48297 ;; *************** function _ADCC_ThresholdISR *****************
 48298 ;; Defined at:
 48299 ;;		line 327 in file "mcc_generated_files/adcc.c"
 48300 ;; Parameters:    Size  Location     Type
 48301 ;;		None
 48302 ;; Auto vars:     Size  Location     Type
 48303 ;;		None
 48304 ;; Return value:  Size  Location     Type
 48305 ;;                  1    wreg      void 
 48306 ;; Registers used:
 48307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 48308 ;; Tracked objects:
 48309 ;;		On entry : 0/0
 48310 ;;		On exit  : 0/0
 48311 ;;		Unchanged: 0/0
 48312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48315 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48316 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48317 ;;Total ram usage:        5 bytes
 48318 ;; Hardware stack levels used:    1
 48319 ;; Hardware stack levels required when called:    2
 48320 ;; This function calls:
 48321 ;;		Absolute function
 48322 ;;		_ADCC_DefaultInterruptHandler
 48323 ;;		_adc_int_t_handler
 48324 ;; This function is called by:
 48325 ;;		Interrupt level 2
 48326 ;; This function uses a non-reentrant model
 48327 ;;
 48328                           
 48329                           	psect	text209
 48330  000AB0                     __ptext209:
 48331                           	opt callstack 0
 48332  000AB0                     _ADCC_ThresholdISR:
 48333                           	opt callstack 2
 48334                           
 48335                           ;incstack = 0
 48336  000AB0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 48337  000AB6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 48338  000ABC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 48339  000AC2  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 48340  000AC8  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 48341  000ACE  EE14  F2CC         	lfsr	1,___inthi_sp
 48342                           
 48343                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 48344  000AD2  0139               	movlb	57	; () banked
 48345  000AD4  97A1               	bcf	161,3,b	;volatile
 48346                           
 48347                           ; BSR set to: 57
 48348                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 48349  000AD6  0100               	movlb	0	; () banked
 48350  000AD8  51AF               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48351  000ADA  11B0               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48352  000ADC  11B1               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48353  000ADE  B4D8               	btfsc	status,2,c
 48354  000AE0  D00C               	goto	i2u1368_49
 48355                           
 48356                           ; BSR set to: 0
 48357                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 48358  000AE2  D801               	call	i2u1368_48
 48359  000AE4  D00A               	goto	i2u1368_49
 48360  000AE6                     i2u1368_48:
 48361  000AE6  0005               	push	
 48362  000AE8  6EFA               	movwf	pclath,c
 48363  000AEA  51AF               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48364  000AEC  6EFD               	movwf	tosl,c
 48365  000AEE  51B0               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48366  000AF0  6EFE               	movwf	tosh,c
 48367  000AF2  51B1               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48368  000AF4  6EFF               	movwf	tosu,c
 48369  000AF6  50FA               	movf	pclath,w,c
 48370  000AF8  0012               	return		;indir
 48371  000AFA                     i2u1368_49:
 48372  000AFA  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 48373  000B00  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 48374  000B06  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 48375  000B0C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 48376  000B12  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 48377  000B18  0011               	retfie		f
 48378  000B1A                     __end_of_ADCC_ThresholdISR:
 48379                           	opt callstack 0
 48380                           
 48381 ;; *************** function _UART1_rx_vect_isr *****************
 48382 ;; Defined at:
 48383 ;;		line 181 in file "mcc_generated_files/uart1.c"
 48384 ;; Parameters:    Size  Location     Type
 48385 ;;		None
 48386 ;; Auto vars:     Size  Location     Type
 48387 ;;		None
 48388 ;; Return value:  Size  Location     Type
 48389 ;;                  1    wreg      void 
 48390 ;; Registers used:
 48391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48392 ;; Tracked objects:
 48393 ;;		On entry : 0/0
 48394 ;;		On exit  : 0/0
 48395 ;;		Unchanged: 0/0
 48396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48401 ;;Total ram usage:        0 bytes
 48402 ;; Hardware stack levels used:    1
 48403 ;; Hardware stack levels required when called:    1
 48404 ;; This function calls:
 48405 ;;		Absolute function
 48406 ;;		_UART1_Receive_ISR
 48407 ;; This function is called by:
 48408 ;;		Interrupt level 2
 48409 ;; This function uses a non-reentrant model
 48410 ;;
 48411                           
 48412                           	psect	text210
 48413  001A10                     __ptext210:
 48414                           	opt callstack 0
 48415  001A10                     _UART1_rx_vect_isr:
 48416                           	opt callstack 3
 48417                           
 48418                           ;incstack = 0
 48419  001A10  EE14  F2CC         	lfsr	1,___inthi_sp
 48420                           
 48421                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 48422  001A14  0100               	movlb	0	; () banked
 48423  001A16  51B5               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48424  001A18  11B6               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48425  001A1A  11B7               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48426  001A1C  B4D8               	btfsc	status,2,c
 48427  001A1E  0011               	retfie		f
 48428                           
 48429                           ; BSR set to: 0
 48430                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 48431  001A20  D801               	call	i2u1370_48
 48432  001A22  0011               	retfie		f
 48433  001A24                     i2u1370_48:
 48434  001A24  0005               	push	
 48435  001A26  6EFA               	movwf	pclath,c
 48436  001A28  51B5               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48437  001A2A  6EFD               	movwf	tosl,c
 48438  001A2C  51B6               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48439  001A2E  6EFE               	movwf	tosh,c
 48440  001A30  51B7               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48441  001A32  6EFF               	movwf	tosu,c
 48442  001A34  50FA               	movf	pclath,w,c
 48443  001A36  0012               	return		;indir
 48444  001A38                     __end_of_UART1_rx_vect_isr:
 48445                           	opt callstack 0
 48446                           
 48447 ;; *************** function _UART1_Receive_ISR *****************
 48448 ;; Defined at:
 48449 ;;		line 192 in file "mcc_generated_files/uart1.c"
 48450 ;; Parameters:    Size  Location     Type
 48451 ;;		None
 48452 ;; Auto vars:     Size  Location     Type
 48453 ;;		None
 48454 ;; Return value:  Size  Location     Type
 48455 ;;                  1  [STACK] void 
 48456 ;; Registers used:
 48457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48458 ;; Tracked objects:
 48459 ;;		On entry : 3F/0
 48460 ;;		On exit  : 3F/0
 48461 ;;		Unchanged: 0/0
 48462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48467 ;;Total ram usage:        0 bytes
 48468 ;; Hardware stack levels used:    1
 48469 ;; This function calls:
 48470 ;;		Nothing
 48471 ;; This function is called by:
 48472 ;;		_UART1_Initialize
 48473 ;;		_UART1_rx_vect_isr
 48474 ;; This function uses a reentrant model
 48475 ;;
 48476                           
 48477                           	psect	text211
 48478  001BC6                     __ptext211:
 48479                           	opt callstack 0
 48480  001BC6                     _UART1_Receive_ISR:
 48481                           	opt callstack 3
 48482                           
 48483                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 48484                           
 48485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48486                           ;incstack = 0
 48487  001BC6  0ECC               	movlw	low _uart1RxBuffer
 48488  001BC8  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 48489  001BCA  6ED9               	movwf	fsr2l,c
 48490  001BCC  6ADA               	clrf	fsr2h,c
 48491  001BCE  0E02               	movlw	high _uart1RxBuffer
 48492  001BD0  22DA               	addwfc	fsr2h,f,c
 48493  001BD2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 48494  001BD8  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 48495                           
 48496                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 48497  001BDA  0E07               	movlw	7
 48498  001BDC  6447               	cpfsgt	_uart1RxHead^0,c
 48499  001BDE  D001               	goto	l13801
 48500                           
 48501                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 48502  001BE0  6A47               	clrf	_uart1RxHead^0,c	;volatile
 48503  001BE2                     l13801:
 48504                           
 48505                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 48506  001BE2  0100               	movlb	0	; () banked
 48507  001BE4  2BDE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 48508                           
 48509                           ; BSR set to: 0
 48510                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48511  001BE6  0012               	return		;funcret
 48512  001BE8                     __end_of_UART1_Receive_ISR:
 48513                           	opt callstack 0
 48514                           
 48515 ;; *************** function _UART2_tx_vect_isr *****************
 48516 ;; Defined at:
 48517 ;;		line 195 in file "mcc_generated_files/uart2.c"
 48518 ;; Parameters:    Size  Location     Type
 48519 ;;		None
 48520 ;; Auto vars:     Size  Location     Type
 48521 ;;		None
 48522 ;; Return value:  Size  Location     Type
 48523 ;;                  1    wreg      void 
 48524 ;; Registers used:
 48525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48526 ;; Tracked objects:
 48527 ;;		On entry : 0/0
 48528 ;;		On exit  : 0/0
 48529 ;;		Unchanged: 0/0
 48530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48535 ;;Total ram usage:        0 bytes
 48536 ;; Hardware stack levels used:    1
 48537 ;; Hardware stack levels required when called:    1
 48538 ;; This function calls:
 48539 ;;		Absolute function
 48540 ;;		_UART2_Transmit_ISR
 48541 ;; This function is called by:
 48542 ;;		Interrupt level 2
 48543 ;; This function uses a non-reentrant model
 48544 ;;
 48545                           
 48546                           	psect	text212
 48547  001A38                     __ptext212:
 48548                           	opt callstack 0
 48549  001A38                     _UART2_tx_vect_isr:
 48550                           	opt callstack 3
 48551                           
 48552                           ; BSR set to: 0
 48553                           ;incstack = 0
 48554  001A38  EE14  F2CC         	lfsr	1,___inthi_sp
 48555                           
 48556                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 48557  001A3C  0100               	movlb	0	; () banked
 48558  001A3E  51B8               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 48559  001A40  11B9               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 48560  001A42  11BA               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 48561  001A44  B4D8               	btfsc	status,2,c
 48562  001A46  0011               	retfie		f
 48563                           
 48564                           ; BSR set to: 0
 48565                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 48566  001A48  D801               	call	i2u1372_48
 48567  001A4A  0011               	retfie		f
 48568  001A4C                     i2u1372_48:
 48569  001A4C  0005               	push	
 48570  001A4E  6EFA               	movwf	pclath,c
 48571  001A50  51B8               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 48572  001A52  6EFD               	movwf	tosl,c
 48573  001A54  51B9               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 48574  001A56  6EFE               	movwf	tosh,c
 48575  001A58  51BA               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 48576  001A5A  6EFF               	movwf	tosu,c
 48577  001A5C  50FA               	movf	pclath,w,c
 48578  001A5E  0012               	return		;indir
 48579  001A60                     __end_of_UART2_tx_vect_isr:
 48580                           	opt callstack 0
 48581                           
 48582 ;; *************** function _UART2_Transmit_ISR *****************
 48583 ;; Defined at:
 48584 ;;		line 213 in file "mcc_generated_files/uart2.c"
 48585 ;; Parameters:    Size  Location     Type
 48586 ;;		None
 48587 ;; Auto vars:     Size  Location     Type
 48588 ;;		None
 48589 ;; Return value:  Size  Location     Type
 48590 ;;                  1  [STACK] void 
 48591 ;; Registers used:
 48592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48593 ;; Tracked objects:
 48594 ;;		On entry : 3F/0
 48595 ;;		On exit  : 3B/39
 48596 ;;		Unchanged: 0/0
 48597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48602 ;;Total ram usage:        0 bytes
 48603 ;; Hardware stack levels used:    1
 48604 ;; This function calls:
 48605 ;;		Nothing
 48606 ;; This function is called by:
 48607 ;;		_UART2_Initialize
 48608 ;;		_UART2_tx_vect_isr
 48609 ;; This function uses a reentrant model
 48610 ;;
 48611                           
 48612                           	psect	text213
 48613  0017D8                     __ptext213:
 48614                           	opt callstack 0
 48615  0017D8                     _UART2_Transmit_ISR:
 48616                           	opt callstack 3
 48617                           
 48618                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 48619                           
 48620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48621                           ;incstack = 0
 48622  0017D8  0E40               	movlw	64
 48623  0017DA  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 48624  0017DC  D010               	goto	l675
 48625                           
 48626                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 48627  0017DE  0E00               	movlw	low _uart2TxBuffer
 48628  0017E0  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 48629  0017E2  6ED9               	movwf	fsr2l,c
 48630  0017E4  6ADA               	clrf	fsr2h,c
 48631  0017E6  0E04               	movlw	high _uart2TxBuffer
 48632  0017E8  22DA               	addwfc	fsr2h,f,c
 48633  0017EA  50DF               	movf	indf2,w,c
 48634  0017EC  013D               	movlb	61	; () banked
 48635  0017EE  6FD2               	movwf	210,b	;volatile
 48636                           
 48637                           ; BSR set to: 61
 48638  0017F0  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 48639                           
 48640                           ; BSR set to: 61
 48641                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 48642  0017F2  0E3F               	movlw	63
 48643  0017F4  6446               	cpfsgt	_uart2TxTail^0,c
 48644  0017F6  D001               	goto	l13813
 48645                           
 48646                           ; BSR set to: 61
 48647                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 48648  0017F8  6A46               	clrf	_uart2TxTail^0,c	;volatile
 48649  0017FA                     l13813:
 48650                           
 48651                           ; BSR set to: 61
 48652                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 48653  0017FA  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 48654                           
 48655                           ;mcc_generated_files/uart2.c: 224:     }
 48656  0017FC  0012               	return	
 48657  0017FE                     l675:
 48658                           
 48659                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 48660  0017FE  0139               	movlb	57	; () banked
 48661  001800  9796               	bcf	150,3,b	;volatile
 48662                           
 48663                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 48664  001802  0012               	return		;funcret
 48665  001804                     __end_of_UART2_Transmit_ISR:
 48666                           	opt callstack 0
 48667                           
 48668 ;; *************** function _UART2_rx_vect_isr *****************
 48669 ;; Defined at:
 48670 ;;		line 203 in file "mcc_generated_files/uart2.c"
 48671 ;; Parameters:    Size  Location     Type
 48672 ;;		None
 48673 ;; Auto vars:     Size  Location     Type
 48674 ;;		None
 48675 ;; Return value:  Size  Location     Type
 48676 ;;                  1    wreg      void 
 48677 ;; Registers used:
 48678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48679 ;; Tracked objects:
 48680 ;;		On entry : 0/0
 48681 ;;		On exit  : 0/0
 48682 ;;		Unchanged: 0/0
 48683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48688 ;;Total ram usage:        0 bytes
 48689 ;; Hardware stack levels used:    1
 48690 ;; Hardware stack levels required when called:    1
 48691 ;; This function calls:
 48692 ;;		Absolute function
 48693 ;;		_UART2_Receive_ISR
 48694 ;; This function is called by:
 48695 ;;		Interrupt level 2
 48696 ;; This function uses a non-reentrant model
 48697 ;;
 48698                           
 48699                           	psect	text214
 48700  001A60                     __ptext214:
 48701                           	opt callstack 0
 48702  001A60                     _UART2_rx_vect_isr:
 48703                           	opt callstack 3
 48704                           
 48705                           ;incstack = 0
 48706  001A60  EE14  F2CC         	lfsr	1,___inthi_sp
 48707                           
 48708                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 48709  001A64  0100               	movlb	0	; () banked
 48710  001A66  51BB               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 48711  001A68  11BC               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 48712  001A6A  11BD               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 48713  001A6C  B4D8               	btfsc	status,2,c
 48714  001A6E  0011               	retfie		f
 48715                           
 48716                           ; BSR set to: 0
 48717                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 48718  001A70  D801               	call	i2u1374_48
 48719  001A72  0011               	retfie		f
 48720  001A74                     i2u1374_48:
 48721  001A74  0005               	push	
 48722  001A76  6EFA               	movwf	pclath,c
 48723  001A78  51BB               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 48724  001A7A  6EFD               	movwf	tosl,c
 48725  001A7C  51BC               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 48726  001A7E  6EFE               	movwf	tosh,c
 48727  001A80  51BD               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 48728  001A82  6EFF               	movwf	tosu,c
 48729  001A84  50FA               	movf	pclath,w,c
 48730  001A86  0012               	return		;indir
 48731  001A88                     __end_of_UART2_rx_vect_isr:
 48732                           	opt callstack 0
 48733                           
 48734 ;; *************** function _UART2_Receive_ISR *****************
 48735 ;; Defined at:
 48736 ;;		line 233 in file "mcc_generated_files/uart2.c"
 48737 ;; Parameters:    Size  Location     Type
 48738 ;;		None
 48739 ;; Auto vars:     Size  Location     Type
 48740 ;;		None
 48741 ;; Return value:  Size  Location     Type
 48742 ;;                  1  [STACK] void 
 48743 ;; Registers used:
 48744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48745 ;; Tracked objects:
 48746 ;;		On entry : 3F/0
 48747 ;;		On exit  : 3F/0
 48748 ;;		Unchanged: 0/0
 48749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48754 ;;Total ram usage:        0 bytes
 48755 ;; Hardware stack levels used:    1
 48756 ;; This function calls:
 48757 ;;		Nothing
 48758 ;; This function is called by:
 48759 ;;		_UART2_Initialize
 48760 ;;		_UART2_rx_vect_isr
 48761 ;; This function uses a reentrant model
 48762 ;;
 48763                           
 48764                           	psect	text215
 48765  001C28                     __ptext215:
 48766                           	opt callstack 0
 48767  001C28                     _UART2_Receive_ISR:
 48768                           	opt callstack 3
 48769                           
 48770                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 48771                           
 48772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48773                           ;incstack = 0
 48774  001C28  0E00               	movlw	low _uart2RxBuffer
 48775  001C2A  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 48776  001C2C  6ED9               	movwf	fsr2l,c
 48777  001C2E  6ADA               	clrf	fsr2h,c
 48778  001C30  0E06               	movlw	high _uart2RxBuffer
 48779  001C32  22DA               	addwfc	fsr2h,f,c
 48780  001C34  006F F743 FFDF     	movff	15824,indf2	;volatile
 48781  001C3A  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 48782                           
 48783                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 48784  001C3C  2844               	incf	_uart2RxHead^0,w,c
 48785  001C3E  B4D8               	btfsc	status,2,c
 48786                           
 48787                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 48788  001C40  6A44               	clrf	_uart2RxHead^0,c	;volatile
 48789                           
 48790                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 48791  001C42  0100               	movlb	0	; () banked
 48792  001C44  2BDB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 48793                           
 48794                           ; BSR set to: 0
 48795                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48796  001C46  0012               	return		;funcret
 48797  001C48                     __end_of_UART2_Receive_ISR:
 48798                           	opt callstack 0
 48799                           
 48800 ;; *************** function _TMR6_ISR *****************
 48801 ;; Defined at:
 48802 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 48803 ;; Parameters:    Size  Location     Type
 48804 ;;		None
 48805 ;; Auto vars:     Size  Location     Type
 48806 ;;		None
 48807 ;; Return value:  Size  Location     Type
 48808 ;;                  1    wreg      void 
 48809 ;; Registers used:
 48810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 48811 ;; Tracked objects:
 48812 ;;		On entry : 0/0
 48813 ;;		On exit  : 0/0
 48814 ;;		Unchanged: 0/0
 48815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48820 ;;Total ram usage:        1 bytes
 48821 ;; Hardware stack levels used:    1
 48822 ;; Hardware stack levels required when called:    2
 48823 ;; This function calls:
 48824 ;;		_TMR6_CallBack
 48825 ;; This function is called by:
 48826 ;;		Interrupt level 2
 48827 ;; This function uses a non-reentrant model
 48828 ;;
 48829                           
 48830                           	psect	text216
 48831  001CDC                     __ptext216:
 48832                           	opt callstack 0
 48833  001CDC                     _TMR6_ISR:
 48834                           	opt callstack 2
 48835                           
 48836                           ; BSR set to: 0
 48837                           ;incstack = 0
 48838  001CDC  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 48839  001CE2  EE14  F2CC         	lfsr	1,___inthi_sp
 48840                           
 48841                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 48842  001CE6  0139               	movlb	57	; () banked
 48843  001CE8  91A9               	bcf	169,0,b	;volatile
 48844                           
 48845                           ; BSR set to: 57
 48846                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 48847  001CEA  EC9E  F00D         	call	_TMR6_CallBack	;wreg free
 48848  001CEE  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 48849  001CF4  0011               	retfie		f
 48850  001CF6                     __end_of_TMR6_ISR:
 48851                           	opt callstack 0
 48852                           
 48853 ;; *************** function _TMR6_CallBack *****************
 48854 ;; Defined at:
 48855 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 48856 ;; Parameters:    Size  Location     Type
 48857 ;;		None
 48858 ;; Auto vars:     Size  Location     Type
 48859 ;;		None
 48860 ;; Return value:  Size  Location     Type
 48861 ;;                  1  [STACK] void 
 48862 ;; Registers used:
 48863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 48864 ;; Tracked objects:
 48865 ;;		On entry : 3F/39
 48866 ;;		On exit  : 0/0
 48867 ;;		Unchanged: 0/0
 48868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48873 ;;Total ram usage:        0 bytes
 48874 ;; Hardware stack levels used:    1
 48875 ;; Hardware stack levels required when called:    1
 48876 ;; This function calls:
 48877 ;;		Absolute function
 48878 ;;		_TMR6_DefaultInterruptHandler
 48879 ;; This function is called by:
 48880 ;;		_TMR6_ISR
 48881 ;; This function uses a reentrant model
 48882 ;;
 48883                           
 48884                           	psect	text217
 48885  001B3C                     __ptext217:
 48886                           	opt callstack 0
 48887  001B3C                     _TMR6_CallBack:
 48888                           	opt callstack 2
 48889                           
 48890                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 48891                           
 48892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48893                           ;incstack = 0
 48894  001B3C  0100               	movlb	0	; () banked
 48895  001B3E  51AC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 48896  001B40  11AD               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 48897  001B42  11AE               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 48898  001B44  B4D8               	btfsc	status,2,c
 48899  001B46  0012               	return	
 48900                           
 48901                           ; BSR set to: 0
 48902                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 48903  001B48  D801               	call	u1310_48
 48904  001B4A  0012               	return	
 48905  001B4C                     u1310_48:
 48906  001B4C  0005               	push	
 48907  001B4E  6EFA               	movwf	pclath,c
 48908  001B50  51AC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 48909  001B52  6EFD               	movwf	tosl,c
 48910  001B54  51AD               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 48911  001B56  6EFE               	movwf	tosh,c
 48912  001B58  51AE               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 48913  001B5A  6EFF               	movwf	tosu,c
 48914  001B5C  50FA               	movf	pclath,w,c
 48915  001B5E  0012               	return		;indir
 48916  001B60                     __end_of_TMR6_CallBack:
 48917                           	opt callstack 0
 48918                           
 48919 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 48920 ;; Defined at:
 48921 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 48922 ;; Parameters:    Size  Location     Type
 48923 ;;		None
 48924 ;; Auto vars:     Size  Location     Type
 48925 ;;  i               1  [STACK] unsigned char 
 48926 ;; Return value:  Size  Location     Type
 48927 ;;                  1  [STACK] void 
 48928 ;; Registers used:
 48929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 48930 ;; Tracked objects:
 48931 ;;		On entry : 3F/0
 48932 ;;		On exit  : 0/0
 48933 ;;		Unchanged: 0/0
 48934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48939 ;;Total ram usage:        0 bytes
 48940 ;; Hardware stack levels used:    1
 48941 ;; This function calls:
 48942 ;;		Nothing
 48943 ;; This function is called by:
 48944 ;;		_TMR6_Initialize
 48945 ;;		_TMR6_CallBack
 48946 ;; This function uses a reentrant model
 48947 ;;
 48948                           
 48949                           	psect	text218
 48950  00102A                     __ptext218:
 48951                           	opt callstack 0
 48952  00102A                     _TMR6_DefaultInterruptHandler:
 48953                           	opt callstack 0
 48954                           
 48955                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48956  00102A  52E6               	movf	postinc1,f,c
 48957                           
 48958                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 48959                           ;stkvar	_i @ sp[(-1)+0]
 48960                           
 48961                           ;incstack = 0
 48962  00102C  0EFF               	movlw	-1
 48963  00102E  6AE3               	clrf	plusw1,c
 48964  001030                     l13221:
 48965                           
 48966                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 48967                           ;stkvar	_i @ sp[(-1)+0]
 48968  001030  0EFF               	movlw	-1
 48969  001032  50E3               	movf	plusw1,w,c
 48970  001034  0D02               	mullw	2
 48971  001036  0EB2               	movlw	low _tickCount
 48972  001038  24F3               	addwf	243,w,c
 48973  00103A  6ED9               	movwf	fsr2l,c
 48974  00103C  0E02               	movlw	high _tickCount
 48975  00103E  20F4               	addwfc	prodh,w,c
 48976  001040  6EDA               	movwf	fsr2h,c
 48977  001042  50DE               	movf	postinc2,w,c
 48978  001044  10DE               	iorwf	postinc2,w,c
 48979  001046  B4D8               	btfsc	status,2,c
 48980  001048  D00C               	goto	l13225
 48981                           
 48982                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 48983                           ;stkvar	_i @ sp[(-1)+0]
 48984  00104A  0EFF               	movlw	-1
 48985  00104C  50E3               	movf	plusw1,w,c
 48986  00104E  0D02               	mullw	2
 48987  001050  0EB2               	movlw	low _tickCount
 48988  001052  24F3               	addwf	243,w,c
 48989  001054  6ED9               	movwf	fsr2l,c
 48990  001056  0E02               	movlw	high _tickCount
 48991  001058  20F4               	addwfc	prodh,w,c
 48992  00105A  6EDA               	movwf	fsr2h,c
 48993  00105C  06DE               	decf	postinc2,f,c
 48994  00105E  0E00               	movlw	0
 48995  001060  5ADD               	subwfb	postdec2,f,c
 48996  001062                     l13225:
 48997                           
 48998                           ;mcc_generated_files/tmr6.c: 207:  }
 48999                           ;stkvar	_i @ sp[(-1)+0]
 49000  001062  0EFF               	movlw	-1
 49001  001064  2AE3               	incf	plusw1,f,c
 49002                           
 49003                           ;stkvar	_i @ sp[(-1)+0]
 49004  001066  0EFF               	movlw	-1
 49005  001068  006F FF8C  F001    	movff	plusw1,btemp
 49006  00106E  0E0C               	movlw	12
 49007  001070  6401               	cpfsgt	btemp^0,c
 49008  001072  D7DE               	goto	l13221
 49009                           
 49010                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49011  001074  52E5               	movf	postdec1,f,c
 49012  001076  0012               	return		;funcret
 49013  001078                     __end_of_TMR6_DefaultInterruptHandler:
 49014                           	opt callstack 0
 49015                           
 49016 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49017 ;; Defined at:
 49018 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49019 ;; Parameters:    Size  Location     Type
 49020 ;;		None
 49021 ;; Auto vars:     Size  Location     Type
 49022 ;;		None
 49023 ;; Return value:  Size  Location     Type
 49024 ;;                  1    wreg      void 
 49025 ;; Registers used:
 49026 ;;		None
 49027 ;; Tracked objects:
 49028 ;;		On entry : 0/0
 49029 ;;		On exit  : 3F/0
 49030 ;;		Unchanged: 0/0
 49031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49036 ;;Total ram usage:        0 bytes
 49037 ;; Hardware stack levels used:    1
 49038 ;; This function calls:
 49039 ;;		Nothing
 49040 ;; This function is called by:
 49041 ;;		Interrupt level 2
 49042 ;; This function uses a non-reentrant model
 49043 ;;
 49044                           
 49045                           	psect	text219
 49046  001E44                     __ptext219:
 49047                           	opt callstack 0
 49048  001E44                     _DMA1_DMASCNT_ISR:
 49049                           	opt callstack 4
 49050                           
 49051                           ;incstack = 0
 49052  001E44  EE14  F2CC         	lfsr	1,___inthi_sp
 49053                           
 49054                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 49055  001E48  0139               	movlb	57	; () banked
 49056  001E4A  91A2               	bcf	162,0,b	;volatile
 49057                           
 49058                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 49059  001E4C  0100               	movlb	0	; () banked
 49060  001E4E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 49061                           
 49062                           ; BSR set to: 0
 49063  001E50  0011               	retfie		f
 49064  001E52                     __end_of_DMA1_DMASCNT_ISR:
 49065                           	opt callstack 0
 49066                           
 49067 ;; *************** function _DMA1_DMADCNT_ISR *****************
 49068 ;; Defined at:
 49069 ;;		line 133 in file "mcc_generated_files/dma1.c"
 49070 ;; Parameters:    Size  Location     Type
 49071 ;;		None
 49072 ;; Auto vars:     Size  Location     Type
 49073 ;;		None
 49074 ;; Return value:  Size  Location     Type
 49075 ;;                  1    wreg      void 
 49076 ;; Registers used:
 49077 ;;		None
 49078 ;; Tracked objects:
 49079 ;;		On entry : 0/0
 49080 ;;		On exit  : 3F/39
 49081 ;;		Unchanged: 0/0
 49082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49087 ;;Total ram usage:        0 bytes
 49088 ;; Hardware stack levels used:    1
 49089 ;; This function calls:
 49090 ;;		Nothing
 49091 ;; This function is called by:
 49092 ;;		Interrupt level 2
 49093 ;; This function uses a non-reentrant model
 49094 ;;
 49095                           
 49096                           	psect	text220
 49097  001E68                     __ptext220:
 49098                           	opt callstack 0
 49099  001E68                     _DMA1_DMADCNT_ISR:
 49100                           	opt callstack 4
 49101                           
 49102                           ; BSR set to: 0
 49103                           ;incstack = 0
 49104  001E68  EE14  F2CC         	lfsr	1,___inthi_sp
 49105                           
 49106                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 49107  001E6C  0139               	movlb	57	; () banked
 49108  001E6E  93A2               	bcf	162,1,b	;volatile
 49109                           
 49110                           ; BSR set to: 57
 49111  001E70  0011               	retfie		f
 49112  001E72                     __end_of_DMA1_DMADCNT_ISR:
 49113                           	opt callstack 0
 49114                           
 49115 ;; *************** function _DMA1_DMAA_ISR *****************
 49116 ;; Defined at:
 49117 ;;		line 143 in file "mcc_generated_files/dma1.c"
 49118 ;; Parameters:    Size  Location     Type
 49119 ;;		None
 49120 ;; Auto vars:     Size  Location     Type
 49121 ;;		None
 49122 ;; Return value:  Size  Location     Type
 49123 ;;                  1    wreg      void 
 49124 ;; Registers used:
 49125 ;;		None
 49126 ;; Tracked objects:
 49127 ;;		On entry : 0/0
 49128 ;;		On exit  : 3F/39
 49129 ;;		Unchanged: 0/0
 49130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49135 ;;Total ram usage:        0 bytes
 49136 ;; Hardware stack levels used:    1
 49137 ;; This function calls:
 49138 ;;		Nothing
 49139 ;; This function is called by:
 49140 ;;		Interrupt level 2
 49141 ;; This function uses a non-reentrant model
 49142 ;;
 49143                           
 49144                           	psect	text221
 49145  001E74                     __ptext221:
 49146                           	opt callstack 0
 49147  001E74                     _DMA1_DMAA_ISR:
 49148                           	opt callstack 4
 49149                           
 49150                           ; BSR set to: 57
 49151                           ;incstack = 0
 49152  001E74  EE14  F2CC         	lfsr	1,___inthi_sp
 49153                           
 49154                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 49155  001E78  0139               	movlb	57	; () banked
 49156  001E7A  97A2               	bcf	162,3,b	;volatile
 49157                           
 49158                           ; BSR set to: 57
 49159  001E7C  0011               	retfie		f
 49160  001E7E                     __end_of_DMA1_DMAA_ISR:
 49161                           	opt callstack 0
 49162                           
 49163 ;; *************** function _DMA1_DMAOR_ISR *****************
 49164 ;; Defined at:
 49165 ;;		line 154 in file "mcc_generated_files/dma1.c"
 49166 ;; Parameters:    Size  Location     Type
 49167 ;;		None
 49168 ;; Auto vars:     Size  Location     Type
 49169 ;;		None
 49170 ;; Return value:  Size  Location     Type
 49171 ;;                  1    wreg      void 
 49172 ;; Registers used:
 49173 ;;		None
 49174 ;; Tracked objects:
 49175 ;;		On entry : 0/0
 49176 ;;		On exit  : 3F/39
 49177 ;;		Unchanged: 0/0
 49178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49183 ;;Total ram usage:        0 bytes
 49184 ;; Hardware stack levels used:    1
 49185 ;; This function calls:
 49186 ;;		Nothing
 49187 ;; This function is called by:
 49188 ;;		Interrupt level 2
 49189 ;; This function uses a non-reentrant model
 49190 ;;
 49191                           
 49192                           	psect	text222
 49193  001E80                     __ptext222:
 49194                           	opt callstack 0
 49195  001E80                     _DMA1_DMAOR_ISR:
 49196                           	opt callstack 4
 49197                           
 49198                           ; BSR set to: 57
 49199                           ;incstack = 0
 49200  001E80  EE14  F2CC         	lfsr	1,___inthi_sp
 49201                           
 49202                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 49203  001E84  0139               	movlb	57	; () banked
 49204  001E86  95A2               	bcf	162,2,b	;volatile
 49205                           
 49206                           ; BSR set to: 57
 49207  001E88  0011               	retfie		f
 49208  001E8A                     __end_of_DMA1_DMAOR_ISR:
 49209                           	opt callstack 0
 49210                           
 49211                           ;
 49212                           ; Interrupt Vector Table @ 0x8
 49213                           ;
 49214                           
 49215                           	psect	ivt0x8
 49216  000008                     __pivt0x8:
 49217                           	opt callstack 0
 49218  000008                     ivt0x8_base:
 49219                           	opt callstack 0
 49220                           
 49221                           ; Vector 0 : SWINT
 49222  000008  07B4               	dw	_Default_ISR shr (0+2)
 49223                           
 49224                           ; Vector 1 : HLVD
 49225  00000A  07B4               	dw	_Default_ISR shr (0+2)
 49226                           
 49227                           ; Vector 2 : OSF
 49228  00000C  07B4               	dw	_Default_ISR shr (0+2)
 49229                           
 49230                           ; Vector 3 : CSW
 49231  00000E  07B4               	dw	_Default_ISR shr (0+2)
 49232                           
 49233                           ; Vector 4 : NVM
 49234  000010  07B4               	dw	_Default_ISR shr (0+2)
 49235                           
 49236                           ; Vector 5 : SCAN
 49237  000012  07B4               	dw	_Default_ISR shr (0+2)
 49238                           
 49239                           ; Vector 6 : CRC
 49240  000014  07B4               	dw	_Default_ISR shr (0+2)
 49241                           
 49242                           ; Vector 7 : IOC
 49243  000016  07B4               	dw	_Default_ISR shr (0+2)
 49244                           
 49245                           ; Vector 8 : INT0
 49246  000018  078D               	dw	_INT0_ISR shr (0+2)
 49247                           
 49248                           ; Vector 9 : ZCD
 49249  00001A  07B4               	dw	_Default_ISR shr (0+2)
 49250                           
 49251                           ; Vector 10 : AD
 49252  00001C  05EB               	dw	_ADCC_ISR shr (0+2)
 49253                           
 49254                           ; Vector 11 : ADT
 49255  00001E  02AC               	dw	_ADCC_ThresholdISR shr (0+2)
 49256                           
 49257                           ; Vector 12 : CMP1
 49258  000020  07B4               	dw	_Default_ISR shr (0+2)
 49259                           
 49260                           ; Vector 13 : SMT1
 49261  000022  07B4               	dw	_Default_ISR shr (0+2)
 49262                           
 49263                           ; Vector 14 : SMT1PRA
 49264  000024  07B4               	dw	_Default_ISR shr (0+2)
 49265                           
 49266                           ; Vector 15 : SMT1PRW
 49267  000026  07B4               	dw	_Default_ISR shr (0+2)
 49268                           
 49269                           ; Vector 16 : DMA1SCNT
 49270  000028  0791               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 49271                           
 49272                           ; Vector 17 : DMA1DCNT
 49273  00002A  079A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 49274                           
 49275                           ; Vector 18 : DMA1OR
 49276  00002C  07A0               	dw	_DMA1_DMAOR_ISR shr (0+2)
 49277                           
 49278                           ; Vector 19 : DMA1A
 49279  00002E  079D               	dw	_DMA1_DMAA_ISR shr (0+2)
 49280                           
 49281                           ; Vector 20 : SPI1RX
 49282  000030  07B4               	dw	_Default_ISR shr (0+2)
 49283                           
 49284                           ; Vector 21 : SPI1TX
 49285  000032  07B4               	dw	_Default_ISR shr (0+2)
 49286                           
 49287                           ; Vector 22 : SPI1
 49288  000034  07B4               	dw	_Default_ISR shr (0+2)
 49289                           
 49290                           ; Vector 23 : I2C1RX
 49291  000036  07B4               	dw	_Default_ISR shr (0+2)
 49292                           
 49293                           ; Vector 24 : I2C1TX
 49294  000038  07B4               	dw	_Default_ISR shr (0+2)
 49295                           
 49296                           ; Vector 25 : I2C1
 49297  00003A  07B4               	dw	_Default_ISR shr (0+2)
 49298                           
 49299                           ; Vector 26 : I2C1E
 49300  00003C  07B4               	dw	_Default_ISR shr (0+2)
 49301                           
 49302                           ; Vector 27 : U1RX
 49303  00003E  0684               	dw	_UART1_rx_vect_isr shr (0+2)
 49304                           
 49305                           ; Vector 28 : U1TX
 49306  000040  07B4               	dw	_Default_ISR shr (0+2)
 49307                           
 49308                           ; Vector 29 : U1E
 49309  000042  07B4               	dw	_Default_ISR shr (0+2)
 49310                           
 49311                           ; Vector 30 : U1
 49312  000044  07B4               	dw	_Default_ISR shr (0+2)
 49313                           
 49314                           ; Vector 31 : TMR0
 49315  000046  07B4               	dw	_Default_ISR shr (0+2)
 49316                           
 49317                           ; Vector 32 : TMR1
 49318  000048  07B4               	dw	_Default_ISR shr (0+2)
 49319                           
 49320                           ; Vector 33 : TMR1G
 49321  00004A  07B4               	dw	_Default_ISR shr (0+2)
 49322                           
 49323                           ; Vector 34 : TMR2
 49324  00004C  07B4               	dw	_Default_ISR shr (0+2)
 49325                           
 49326                           ; Vector 35 : CCP1
 49327  00004E  07B4               	dw	_Default_ISR shr (0+2)
 49328                           
 49329                           ; Vector 36 : Undefined
 49330  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 49331                           
 49332                           ; Vector 37 : NCO1
 49333  000052  07B4               	dw	_Default_ISR shr (0+2)
 49334                           
 49335                           ; Vector 38 : CWG1
 49336  000054  07B4               	dw	_Default_ISR shr (0+2)
 49337                           
 49338                           ; Vector 39 : CLC1
 49339  000056  07B4               	dw	_Default_ISR shr (0+2)
 49340                           
 49341                           ; Vector 40 : INT1
 49342  000058  050D               	dw	_INT1_ISR shr (0+2)
 49343                           
 49344                           ; Vector 41 : CMP2
 49345  00005A  07B4               	dw	_Default_ISR shr (0+2)
 49346                           
 49347                           ; Vector 42 : DMA2SCNT
 49348  00005C  07B4               	dw	_Default_ISR shr (0+2)
 49349                           
 49350                           ; Vector 43 : DMA2DCNT
 49351  00005E  07B4               	dw	_Default_ISR shr (0+2)
 49352                           
 49353                           ; Vector 44 : DMA2OR
 49354  000060  07B4               	dw	_Default_ISR shr (0+2)
 49355                           
 49356                           ; Vector 45 : DMA2A
 49357  000062  07B4               	dw	_Default_ISR shr (0+2)
 49358                           
 49359                           ; Vector 46 : I2C2RX
 49360  000064  07B4               	dw	_Default_ISR shr (0+2)
 49361                           
 49362                           ; Vector 47 : I2C2TX
 49363  000066  07B4               	dw	_Default_ISR shr (0+2)
 49364                           
 49365                           ; Vector 48 : I2C2
 49366  000068  07B4               	dw	_Default_ISR shr (0+2)
 49367                           
 49368                           ; Vector 49 : I2C2E
 49369  00006A  07B4               	dw	_Default_ISR shr (0+2)
 49370                           
 49371                           ; Vector 50 : U2RX
 49372  00006C  0698               	dw	_UART2_rx_vect_isr shr (0+2)
 49373                           
 49374                           ; Vector 51 : U2TX
 49375  00006E  068E               	dw	_UART2_tx_vect_isr shr (0+2)
 49376                           
 49377                           ; Vector 52 : U2E
 49378  000070  07B4               	dw	_Default_ISR shr (0+2)
 49379                           
 49380                           ; Vector 53 : U2
 49381  000072  07B4               	dw	_Default_ISR shr (0+2)
 49382                           
 49383                           ; Vector 54 : TMR3
 49384  000074  776A               	dw	_TMR3_ISR shr (0+2)
 49385                           
 49386                           ; Vector 55 : TMR3G
 49387  000076  07B4               	dw	_Default_ISR shr (0+2)
 49388                           
 49389                           ; Vector 56 : TMR4
 49390  000078  07B4               	dw	_Default_ISR shr (0+2)
 49391                           
 49392                           ; Vector 57 : CCP2
 49393  00007A  07B4               	dw	_Default_ISR shr (0+2)
 49394                           
 49395                           ; Vector 58 : Undefined
 49396  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 49397                           
 49398                           ; Vector 59 : CWG2
 49399  00007E  07B4               	dw	_Default_ISR shr (0+2)
 49400                           
 49401                           ; Vector 60 : CLC2
 49402  000080  07B4               	dw	_Default_ISR shr (0+2)
 49403                           
 49404                           ; Vector 61 : INT2
 49405  000082  07B4               	dw	_Default_ISR shr (0+2)
 49406                           
 49407                           ; Vector 62 : Undefined
 49408  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 49409                           
 49410                           ; Vector 63 : Undefined
 49411  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 49412                           
 49413                           ; Vector 64 : Undefined
 49414  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 49415                           
 49416                           ; Vector 65 : Undefined
 49417  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 49418                           
 49419                           ; Vector 66 : Undefined
 49420  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 49421                           
 49422                           ; Vector 67 : Undefined
 49423  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 49424                           
 49425                           ; Vector 68 : Undefined
 49426  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 49427                           
 49428                           ; Vector 69 : Undefined
 49429  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 49430                           
 49431                           ; Vector 70 : TMR5
 49432  000094  7D4B               	dw	_TMR5_ISR shr (0+2)
 49433                           
 49434                           ; Vector 71 : TMR5G
 49435  000096  07B4               	dw	_Default_ISR shr (0+2)
 49436                           
 49437                           ; Vector 72 : TMR6
 49438  000098  0737               	dw	_TMR6_ISR shr (0+2)
 49439                           
 49440                           ; Vector 73 : CCP3
 49441  00009A  07B4               	dw	_Default_ISR shr (0+2)
 49442                           
 49443                           ; Vector 74 : CWG3
 49444  00009C  07B4               	dw	_Default_ISR shr (0+2)
 49445                           
 49446                           ; Vector 75 : CLC3
 49447  00009E  07B4               	dw	_Default_ISR shr (0+2)
 49448                           
 49449                           ; Vector 76 : Undefined
 49450  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 49451                           
 49452                           ; Vector 77 : Undefined
 49453  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 49454                           
 49455                           ; Vector 78 : Undefined
 49456  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 49457                           
 49458                           ; Vector 79 : Undefined
 49459  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 49460                           
 49461                           ; Vector 80 : CCP4
 49462  0000A8  07B4               	dw	_Default_ISR shr (0+2)
 49463                           
 49464                           ; Vector 81 : CLC4
 49465  0000AA  07B4               	dw	_Default_ISR shr (0+2)
 49466  0000AC                     ivt0x8_undefint:
 49467                           	opt callstack 0
 49468  0000AC  00FF               	reset	
 49469                           
 49470                           	psect	text223
 49471  000000                     __ptext223:
 49472                           	opt callstack 0
 49473                           
 49474                           	psect	rparam
 49475  0000                     
 49476                           	psect	temp
 49477  000001                     btemp:
 49478                           	opt callstack 0
 49479  000001                     	ds	32
 49480  0000                     wtemp0	set	btemp
 49481  0000                     wtemp1	set	btemp+2
 49482  0000                     wtemp2	set	btemp+4
 49483  0000                     wtemp3	set	btemp+6
 49484  0000                     wtemp4	set	btemp+8
 49485  0000                     wtemp5	set	btemp+10
 49486  0000                     wtemp8	set	btemp+1
 49487  0000                     ttemp0	set	btemp
 49488  0000                     ttemp1	set	btemp+3
 49489  0000                     ttemp2	set	btemp+6
 49490  0000                     ttemp3	set	btemp+9
 49491  0000                     ttemp5	set	btemp+1
 49492  0000                     ttemp6	set	btemp+4
 49493  0000                     ttemp7	set	btemp+8
 49494  0000                     ltemp0	set	btemp
 49495  0000                     ltemp1	set	btemp+4
 49496  0000                     ltemp2	set	btemp+8
 49497  0000                     lltemp0	set	btemp
 49498  0000                     lltemp1	set	btemp+8
 49499  0000                     lltemp2	set	btemp+16
 49500  0000                     lltemp3	set	btemp+24
 49501                           tosu	equ	0x3FFF
 49502                           tosh	equ	0x3FFE
 49503                           tosl	equ	0x3FFD
 49504                           stkptr	equ	0x3FFC
 49505                           pclatu	equ	0x3FFB
 49506                           pclath	equ	0x3FFA
 49507                           pcl	equ	0x3FF9
 49508                           tblptru	equ	0x3FF8
 49509                           tblptrh	equ	0x3FF7
 49510                           tblptrl	equ	0x3FF6
 49511                           tablat	equ	0x3FF5
 49512                           prodh	equ	0x3FF4
 49513                           prodl	equ	0x3FF3
 49514                           indf0	equ	0x3FEF
 49515                           postinc0	equ	0x3FEE
 49516                           postdec0	equ	0x3FED
 49517                           preinc0	equ	0x3FEC
 49518                           plusw0	equ	0x3FEB
 49519                           fsr0h	equ	0x3FEA
 49520                           fsr0l	equ	0x3FE9
 49521                           wreg	equ	0x3FE8
 49522                           indf1	equ	0x3FE7
 49523                           postinc1	equ	0x3FE6
 49524                           postdec1	equ	0x3FE5
 49525                           preinc1	equ	0x3FE4
 49526                           plusw1	equ	0x3FE3
 49527                           fsr1h	equ	0x3FE2
 49528                           fsr1l	equ	0x3FE1
 49529                           bsr	equ	0x3FE0
 49530                           indf2	equ	0x3FDF
 49531                           postinc2	equ	0x3FDE
 49532                           postdec2	equ	0x3FDD
 49533                           preinc2	equ	0x3FDC
 49534                           plusw2	equ	0x3FDB
 49535                           fsr2h	equ	0x3FDA
 49536                           fsr2l	equ	0x3FD9
 49537                           status	equ	0x3FD8


Data Sizes:
    Strings     1471
    Constant    556
    Data        1227
    BSS         1615
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     156
    BANK1           256      0     256
    BANK2           256      0     240
    BANK3           256      0     247
    BANK4           256      0     198
    BANK5           256      0     171
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_126(CODE[1]), STR_86(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_127(CODE[1]), NULL(NULL[0]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK2[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK2[10]), r0(BANK2[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[3]), STR_98(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_121(CODE[3]), STR_117(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[3]), STR_98(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), 
		 -> STR_83(CODE[19]), STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), 
		 -> STR_79(CODE[19]), STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), 
		 -> STR_75(CODE[15]), STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_67(CODE[3]), STR_66(CODE[3]), 
		 -> STR_65(CODE[14]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), 
		 -> STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), 
		 -> STR_83(CODE[19]), STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), 
		 -> STR_79(CODE[19]), STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), 
		 -> STR_75(CODE[15]), STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_67(CODE[3]), STR_66(CODE[3]), 
		 -> STR_65(CODE[14]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), 
		 -> STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_69(CODE[9]), STR_68(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_69(CODE[9]), STR_68(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_93(CODE[4]), STR_92(CODE[4]), STR_89(CODE[4]), STR_88(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_93(CODE[4]), STR_92(CODE[4]), STR_89(CODE[4]), STR_88(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_66(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), STR_75(CODE[15]), 
		 -> STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_65(CODE[14]), STR_64(CODE[21]), STR_63(CODE[21]), 
		 -> STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), 
		 -> STR_46(CODE[22]), STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), 
		 -> STR_42(CODE[29]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), 
		 -> STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), 
		 -> STR_26(CODE[16]), STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7600_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), STR_75(CODE[15]), 
		 -> STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[14]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_125(CODE[37]), STR_124(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 337
		 -> C(BIGRAM[336]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), STR_75(CODE[15]), 
		 -> STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[14]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_87(CODE[127]), STR_85(CODE[3]), STR_84(CODE[3]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[19]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[24]), STR_76(CODE[15]), STR_75(CODE[15]), 
		 -> STR_74(CODE[15]), STR_73(CODE[10]), STR_72(CODE[10]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_67(CODE[3]), STR_66(CODE[3]), STR_65(CODE[14]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_69(CODE[9]), 
		 -> STR_68(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_69(CODE[9]), 
		 -> STR_68(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_69(CODE[9]), STR_68(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), 
		 -> T(CODE[144]), STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 337
		 -> C.hist(BIGRAM[113]), C(BIGRAM[336]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> R(BANK2[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> r_cal(BANK5[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_69(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_68(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    S3352tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  739586
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       0     0      0       0
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      8     8      0  140551
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                         _update_lcd
 ---------------------------------------------------------------------------------
 (2) _localtime                                            2     0      2   14068
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (3) ___localtime_r                                        4     0      4   14037
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (4) ___secs_to_zone                                      46    28     18   10553
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _scan_trans                                          30    18     12    1417
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (5) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (6) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (6) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (5) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (6) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (7) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (8) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (6) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (4) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2027
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     741
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     159
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125923
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     _start_bsoc
     _stop_bsoc
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     532      69       16.2%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      AB      15       66.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     61A      58        0.0%
DATA                 0      0     B4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 22:37:15 2020

                         _SPI1_Exchange8bit 1C48                    __end_of_set_display_info 1CC0  
                                         _C 08FF                                           _D 0A4F  
                                         _H 01C0                                           _P 00A2  
                                         _R 0207                                           _S 01C9  
                                         _T F91F                                           _V 0100  
          __end_of_TMR5_SetInterruptHandler 1946                __end_of_start_switch_handler 1C08  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 0EE2                                          _r0 02DE  
                                        _r1 02D4                                          _bp FA27  
                    __end_of_FVR_Initialize 1EB2                              _check_day_time C242  
                               __CFG_LVP$ON 000000                                         l171 1D7A  
                                       l809 1C56                                         l675 17FE  
                                       l942 0B66                                         _GIE 01FE97  
                                       _abs 11E2                                         _pad EC60  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 1D26  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs F35A  
                             _INT0_CallBack 1B18                           _update_adc_result 14AE  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0266                               _INT1_CallBack 1AAC  
                              __CFG_ZCD$OFF 000000                                        l1004 13EE  
                                      l2121 D036                                        l2009 0880  
                                      l2025 FC2A                                        l2050 03B8  
                                      l1271 1DA2                                        l1192 142E  
                                      l1512 919A                                        l1282 D82A  
                                      l4002 62B8                                        l1523 D4EC  
                           _timer3ReloadVal 00CE                                        l1284 D830  
                                      l1453 0298                                        l1606 0E38  
                                      l2335 4D5C                                        l2183 C45E  
                                      l1447 005E                                        l2440 ECBC  
                                      l2168 F458                                        l2256 E6BE  
                                      l2088 09D4                                        l2265 C89E  
                                      l3234 729E                                        l1466 07B6  
                                      l2339 509A                                        l2187 C456  
                                      l3315 6AE2                                        l1812 1504  
                                      l2460 898E                                        l2540 1E98  
                                      l1468 07BC                                        l2525 19E8  
                                      l1821 C956                                        l2381 AC70  
                                      l1493 133E                                        l1477 0946  
                                      l3246 712E                                        l1734 FEEA  
                                      l2614 9642                                        l1822 CAB2  
                                      l1487 0B4A                                        l1488 0D72  
                                      l1753 1570                                        l1738 044C  
                                      l2706 F626                                        l3355 CCB0  
                                      l3427 B91C                                        l3516 E90C  
                                      l1829 EE80                        _ADCC_StartConversion 1DA6  
                                      l3279 7ED4                                        l3391 EA26  
                                      l2496 25B8                                        l2664 4636  
                                      l3386 1222                                        l3378 D1CC  
                                      l2578 AD5E                                        l3490 BB82  
                                      l3811 067A                                        l1869 1CBC  
                                      l3822 368A                                        l2599 A0B8  
                                      l2960 DCCA                                        l1969 88AA  
                                      l3906 C238                                        l3915 B428  
                                      l2956 FA0A                                        l3950 B1AC  
                                      l3942 B0C6                                        l2967 DD9E  
                                      l3783 C67E                                        l2994 DAD6  
                                      l3798 06FE                                        l3994 77A4  
                                      l9701 6BC8                                        l9713 6C32  
                                      l9803 6F92                                        l9731 6CDA  
                                      l9723 6C88                                        l9707 6C00  
                                      l9805 6FA4                                        l9813 6FE0  
                                      l9725 6CB8                                        l9661 0182  
                                      l9719 6C72                                        l9663 01A4  
                                      l9911 F210                                        l9825 70B8  
                                      l9809 6FAE                                        l9761 6E18  
                                      l9843 7150                                        l9835 7112  
                                      l9827 70DE                                        l9771 6E8A  
                                      l9907 F18A                                        l9845 7162  
                                      l9781 6EC6                                        l9863 719C  
                                      l9775 6EAA                                        l9695 6B82  
                                      STR_1 FE61                                        STR_2 FE37  
                                      l9849 716E                                        l9777 6EBC  
                                      l9785 6EF6                                        l9689 6B42  
                                      STR_3 FFD1                                        STR_4 FDB9  
                                      l9891 724E                                        l9875 71FA  
                                      l9859 7196                                        l9699 6B98  
                                      STR_5 FBF0                                        STR_6 FBF0  
                                      l9885 7226                                        STR_7 FBF0  
                                      STR_8 FECA                                        STR_9 FF1E  
                                      l9897 727E                                        l9889 723E  
                                      l9985 1212                                        l9999 D16A  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      u7110 1714                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u7120 1716  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        u8011 E03A  
                                      _PMD7 0039C7                                        u7220 6E3E  
                                      u7230 6E5E                                        u8110 B638  
                                      u7231 6E58                                        u7080 01D2  
                                      u8040 B48E                                        u8200 BEE4  
                                      u8130 B68A                                        u7420 7174  
                                      u7340 6FD6                                        u8060 B4E4  
                                      u8220 BF9C                                        u9020 DA8C  
                                      u7510 720A                                        u7270 6EEE  
                                      u9110 E480                                        u7087 01C4  
                                      u8071 B4EE                                        u7440 718E  
                                      u7280 6F0E                                        u7248 6E60  
                                      u8080 B528                                        u8240 BFEE  
                                      u8160 BE2A                                        u9040 DAB6  
                                      u9120 E4B2                                        u7345 6FC6  
                                      u8090 B55A                                        u7275 6EDE  
                                      u9051 D68A                                        u7380 7100  
                                      u8420 7D92                                        u8180 BE80  
                                      u9060 D6C4                                        u9140 E56A  
                                      u8190 BEB2                                        u9070 D6F6  
                                      u7550 16E4                                        u7480 71EA  
                                      u9160 0F56                                        u7800 9A6E  
                                      u7560 16E6                                        u9170 0F76  
                                      u7730 D1BC                                        u7810 9ABA  
                                      u9090 D7D4                                        u7570 F254  
                                      u8700 6A36                                        u8460 7DEE  
                                      u8380 7D08                                        u7740 D1BE  
                                      u7900 12A6                                        u8605 6890  
                                      u7485 71DA                                        u7725 D19E  
                                      u7805 9A64                                        u8470 7E28  
                                      u7670 11F6                                        u7910 12A8  
                                      u8640 695A                                        u8480 7E64  
                                      u7680 D0EE                                        u7920 0628  
                                      u8465 7DDE                                        u8570 646C  
                                      u7850 9B9A                                        u7770 06AC  
                                      u7930 062A                                        u7835 9AF4  
                                      u8820 EBBE                                        u7836 9AFA  
                                      u7780 06AE                                        u7685 D0E4  
                                      u7837 9B08                                        u7950 1744  
                                      u8750 E242                                        u7870 9C72  
                                      u7855 9B90                                        u8680 69B6  
                                      u7960 1746                                        u8840 EC32  
                                      u8585 6600                                        u8690 69F0  
                                      u8770 E2DC                                        _PLLR 01CEE0  
                                      u8595 66C8                                        u7875 9C68  
                                      u8940 10DC                                        u8685 69A6  
                                      u8950 D9A0                                        u7991 DF18  
                                      u8880 FA04                                        u8960 D9B4  
                                      u8970 D9EE                                        u8955 D996  
                                      u8975 D9E4                     __end_of_display_history D4F6  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 17D8                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 72A8  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h FA3B                                        _cp_l FA37  
                                      _atoi B6B2                                        _ctoa 0578  
                                      _main 0000                                        _dtoa 88B0  
                                      _nanf 0D12                                        _lock 0072  
                                      _seed 02E8                                        _prec 003C  
                                      _nout 00C8                                        _spin F9AF  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa AC74  
                                      btemp 0001                                        _utoa A074  
                                      _xtoa 95FE                      __end_of_check_adc_scan 1E92  
                             ___fpclassifyf D040                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00D2                   __end_of_SPI1_Exchange8bit 1C66  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 119A  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 1A10                                ___param_bank 000000  
                      display_history@bwait 0043                      __end_of_check_day_time C468  
                        ?_UART1_rx_vect_isr 0021                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 096E                            __end_of_INT0_ISR 1E42  
                          __end_of_INT1_ISR 1472              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma FEF2               __end_of_OSCILLATOR_Initialize 1D80  
                                     l10003 D16E                                       l10009 D1C4  
                                     l10041 9AD6                                       l10105 DF20  
                                     l10211 79FA                                       l10131 B4E8  
                                     l10027 06EE                                       l10301 7D50  
                                     l10205 79BA                                       l10125 B494  
                                     l10061 9C8C                                       l10109 DFC6  
                                     l10311 7D9A                                       l10231 7AD8  
                                     l10215 7A10                                       l10055 9BF4  
                                     l10225 7A98                                       l10217 7A40  
                                     l10137 B52E                                       l10065 9CFA  
                                     l10057 9C44                                       l10331 7E50  
                                     l10315 7DA0                                       l10243 7B5C  
                                     l10235 7AEE                                       l10083 066A  
                                     l10501 6A90                                       l10325 7E14  
                                     l10237 7B1E                                       l10149 B600  
                                     l10503 6AAA                                       l10343 7EA8  
                                     l10095 F67C                                       l10361 6318  
                                     l10345 7EB8                                       l10337 7E80  
                                     l10257 7BB0                                       l10249 7B96  
                                     l10185 BF64                                       l10177 BEB8  
                                     l10169 BE30                                       l12017 149C  
                                     l10371 638E                                       l10291 7D0E  
                                     l10283 7CDC                                       l10275 7C76  
                                     l10267 7C40                                       l12211 8660  
                                     l12203 862E                                       l10523 E1E0  
                                     l10611 FA08                                       l10603 F992  
                                     l11411 C55C                                       l10277 7C88  
                                     l10285 7CE0                                       l10455 68F2  
                                     l10367 6358                                       l12223 87DC  
                                     l12215 86FC                                       l10535 E216  
                                     l10607 F9D4                                       l12311 0270  
                                     l12303 020C                                       l11431 D210  
                                     l10473 6968                                       l10449 68D6  
                                     l10385 6426                                       l10369 635E  
                                     l10625 DD18                                       l10297 7D2A  
                                     l10529 E1F6                                       l11409 C4F0  
                                     l11601 565C                                       l10483 69DC  
                                     l10459 6918                                       l10387 642C  
                                     l10379 63E6                                       l10619 DC88  
                                     l10707 D79C                                       l12171 F846  
                                     l11443 D26C                                       l13221 1030  
                                     l10493 6A4C                                       l10469 6962  
                                     l10397 647E                                       l10389 645C  
                                     l10637 DD9C                                       l10629 DD66  
                                     l12229 8878                                       l12237 888A  
                                     l11373 B78E                                       l11357 B6CC  
                                     l10557 E2F0                                       l10549 E2BC  
                                     l10573 EB7A                                       l10645 10E0  
                                     l11437 D23C                                       l11621 576E  
                                     l14021 CE6E                                       l14005 CDB8  
                                     l14013 CE6A                                       l10487 6A22  
                                     l12183 83F6                                       l12255 1876  
                                     l10743 0F7A                                       l11383 B870  
                                     l11375 B7A6                                       l11367 B762  
                                     l11359 B6EE                                       l10671 DA42  
                                     l10655 D9C0                                       l10727 E532  
                                     l10719 E486                                       l12167 F808  
                                     l12175 F85A                                       l11455 D2EE  
                                     l11615 56DA                                       l11607 56A6  
                                     l14103 AA5C                                       l14007 CDEC  
                                     l13225 1062                                       l11393 B90C  
                                     l11377 B7CA                                       l10577 EB92  
                                     l10569 EB68                                       l10681 DA84  
                                     l10673 DA5E                                       l11609 56AE  
                                     l11561 51F2                                       l14033 0F12  
                                     l11379 B808                                       l10595 EC46  
                                     l10587 EC12                                       l10755 C07C  
                                     l11635 F330                                       l11571 532E  
                                     l11539 0C10                                       l14123 AADC  
                                     l14115 AAB6                                       l14107 AA68  
                                     l12189 8426                                       l13325 E0BA  
                                     l11901 DBCA                                       l10773 C1FA  
                                     l11581 5586                                       l11557 51C8  
                                     l11565 52F8                                       PRLOCK 0039EF  
                                     l13351 CEE8                                       l13343 CEBC  
                                     l12199 854C                                       l10679 DA6E  
                                     l10695 D6CA                                       l14231 FAD4  
                                     l10759 C0BC                                       l14047 09B0  
                                     l12633 C404                                       l13601 E338  
                                     l14057 D656                                       l15201 A806  
                                     l13329 E130                                       l10777 C21E  
                                     l14081 A9CE                                       l14145 AC36  
                                     l12619 C35E                                       l13603 E346  
                                     l13611 E34E                                       l13355 CEFC  
                                     l11931 CB90                                       l16011 402A  
                                     l14235 FB12                                       l11587 55B8  
                                     l13523 14CE                                       l14091 AA0A  
                                     l14147 AC60                                       l13613 E380  
                                     l11941 CBFA                                       l11933 CBAE  
                                     l16021 40D8                                       l12805 07C2  
                                     l13293 F474                                       l11597 562E  
                                     l11589 55C2                                       l14077 A9B8  
                                     l11951 CC2E                                       l11943 CC10  
                                     l11927 CB6C                                       l11919 CB00  
                                     l15231 ECB4                                       l15303 89E6  
                                     l16031 41FA                                       l15215 A91E  
                                     l15207 A870                                       l13367 035C  
                                     l14087 A9FE                                       l14079 A9C8  
                                     l13801 1BE2                                       l14281 95F0  
                                     l11961 CC90                                       l11929 CB7A  
                                     l13481 151A                                       l15241 ED4C  
                                     l15233 ECC6                                       l15313 8BF8  
                                     l16041 42B0                                       l16201 FDC8  
                                     l12681 D91C                                       l14097 AA34  
                                     l13627 E432                                       l13619 E3B8  
                                     l11939 CBDC                                       l15163 E822  
                                     l15227 EC8C                                       l16203 FE0A  
                                     l13379 0392                                       l12747 1790  
                                     l13299 F51A                                       l13547 083E  
                                     l13571 EAF4                                       l13813 17FA  
                                     l14445 0750                                       l15237 ED02  
                                     l15333 8CAA                                       l15421 17EE  
                                     l12693 157A                                       l12677 D8F2  
                                     l11893 DB5E                                       l11885 DB16  
                                     l16125 B13E                                       l16117 B0AC  
                                     l14439 0740                                       l12599 C2C8  
                                     l15175 02A8                                       l15247 F72C  
                                     l15415 1714                                       l15407 16A8  
                                     l15351 142A                                       l16055 442C  
                                     l16119 B0D0                                       l13735 FA26  
                                     l13559 0856                                       l13567 EA92  
                                     l12785 0FB6                                       l15265 0596  
                                     l15337 8CE6                                       l15441 18FA  
                                     l15425 1850                                       l16321 2C68  
                                     l16313 2A68                                       l16145 7462  
                                     l16233 5B52                                       l15179 02E6  
                                     l15267 05C2                                       l15291 897E  
                                     l15443 190C                                       l15419 1784  
                                     l15363 146E                                       l15371 14C4  
                                     l16075 45BE                                       l15195 A748  
                                     l16307 292C                                       l16163 781A  
                                     l16147 74B6                                       l16235 5B72  
                                     l13739 FAA2                                       l17107 0542  
                                     l13597 E322                                       l15533 1FB0  
                                     l15517 1E90                                       l15509 1DC6  
                                     l15437 18D2                                       l15381 1568  
                                     l16069 4564                                       l16085 45E2  
                                     l16181 010E                                       l16421 FEFE  
                                     l16237 5C68                                       l17301 136A  
                                     l17053 0270                                       l13839 13D6  
                                     l13599 E332                                       l15607 2410  
                                     l15519 1EB2                                       l15383 1594  
                                     l16079 45C2                                       l16423 FF08  
                                     l16431 FF1E                                       l16343 2E98  
                                     l16335 2DC4                                       l16327 2CF0  
                                     l16239 5C88                                       l17223 100E  
                                     l17207 0A56                                       l17119 061C  
                                     l17143 07C0                                       l13857 1416  
                                     l15633 2518                                       l15617 2460  
                                     l15545 2038                                       l15553 20A2  
                                     l15561 210E                                       l15457 1974  
                                     l15449 1912                                       l15385 15AA  
                                     l15713 A104                                       l15705 A0A8  
                                     l16425 FF16                                       l16433 FF4A  
                                     l16353 2F36                                       l16273 61B0  
                                     l16249 5F6E                                       l17233 1190  
                                     l17145 07EE                                       l17137 07AC  
                                     l16611 472A                                       l15299 89C8  
                                     l15475 1A36                                       l15459 1980  
                                     l15723 A2FA                                       l16419 FEF6  
                                     l16371 3262                                       l16363 2FF6  
                                     l16355 2F3C                                       l16259 604E  
                                     l17219 0FAE                                       l17235 11BC  
                                     l17059 02B2                                       l15581 22B8  
                                     l15485 1AF8                                       l15389 15D6  
                                     l15653 ACE0                                       l15805 996E  
                                     l15821 B298                                       l16285 629C  
                                     l16277 61CE                                       l17165 0848  
                                     l17157 0822                                       l16631 4958  
                                     l16623 4856                                       l16615 477E  
                                     l15495 1CA4                                       l15479 1A6E  
                                     l15399 167A                                       l15751 966C  
                                     l15903 3776                                       l16455 E9E6  
                                     l16367 3202                                       l16295 2680  
                                     l17263 1268                                       l16641 4B84  
                                     l15569 2220                                       l15673 ADD0  
                                     l15745 9632                                       l15905 37B0  
                                     l15817 B25A                                       l16465 B9A4  
                                     l13993 CD02                                       l17281 12D0  
                                     l17273 12A6                                       l17249 1212  
                                     l16651 4CC4                                       l16635 49AC  
                                     l16619 47EA                                       l15595 2354  
                                     l15691 AEF2                                       l15683 AE8A  
                                     l15907 37C6                                       l16387 341A  
                                     l16379 3320                                       l15819 B272  
                                     l17291 1314                                       l17195 0956  
                                     l16645 4BFE                                       l15597 236E  
                                     l15677 AE00                                       l15669 AD94  
                                     l15781 97FE                                       l15765 9708  
                                     l15757 96A8                                       l15925 38F8  
                                     l16485 ED98                                       l15861 A5C2  
                                     l15845 A402                                       l15837 B404  
                                     l17189 0936                                       l16671 5092  
                                     l16655 4D6C                                       l15687 AEB6  
                                     l15927 3932                                       l15855 A51E  
                                     l17287 12EE                                       l17279 12B8  
                                     l15945 3AAC                                       l15929 3948  
                                     l16817 90E6                                       l15857 A528  
                                     l15865 A64E                                       l15849 A49C  
                                     l16593 E658                                       l16841 C790  
                                     l16825 C69C                                       l16659 4D8E  
                                     l15963 3C30                                       l15955 3B44  
                                     l16771 8DFC                                       l16587 E5F2  
                                     l16851 C868                                       l15789 9884  
                                     l16925 C926                                       l15991 3ECA  
                                     l15967 3C84                                       l16767 8DE8  
                                     l15987 3E96                                       l15979 3DDE  
                                     l16939 CA4E                                       l16779 8E5E  
                                     l16869 0964                                       l16893 D4DA  
                                     l16993 0066                                       l16899 D4DE  
                                     l16995 0078                                       l16987 0040  
                                     l16989 0048                             __end_of___aldiv D36A  
                           __end_of___aodiv B6B2                                _Volts_to_SOC FA14  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod DC46                             __end_of___fladd 72A8  
                                     _ADCLK 003EFF                             __end_of___aomod C012  
                                     _ADPCH 003EF1                             __end_of___fldiv 7EDE  
                                     _ADREF 003EFD                             __end_of___awdiv E30A  
                           __end_of___flneg 110A                                       STR_10 FD8F  
                                     STR_11 FB34                                       STR_12 FC1B  
                                     STR_20 FB00                                       STR_13 FCF7  
                                     STR_21 FB1A                                       STR_22 FF33  
                                     STR_30 FCB5                                       STR_14 FBEF  
                                     STR_15 FDE3                                       STR_23 FDCE  
                                     STR_31 FC9F                                       STR_24 FEA0  
                                     STR_16 FDF8                                       STR_32 FC89  
                                     STR_40 FB7D                                       STR_25 FF93  
                                     STR_17 FEDF                                       STR_33 FC73  
                                     STR_41 FBC2                               __CFG_WDTE$OFF 000000  
                                     STR_18 FE8B                                       STR_50 FE22  
                                     STR_34 FD39                                       STR_42 FAE3  
                                     STR_27 FF82                                       STR_51 FE0D  
                                     STR_35 FD0D                                       STR_19 FC05  
                                     STR_43 FB66                                       STR_60 FD7A  
                                     STR_52 FF48                                       STR_36 FD23  
                                     STR_28 FCE1                                       STR_44 FB94  
                           __end_of___awmod EC60                                       STR_61 FEF4  
                                     STR_53 FEB5                                       STR_29 FCCB  
                                     STR_37 FC31                                       STR_45 FBAB  
                                     STR_70 FF5C                                       STR_62 FDA4  
                                     STR_54 FD65                                       STR_46 FD4F  
                                     STR_38 FC47                                       STR_63 FDA4  
                                     STR_71 FF5C                                       STR_47 FD4F  
                                     STR_55 FF09                                       STR_39 FC5D  
                                     STR_64 FDA4                                       STR_56 FE76  
                                     STR_48 FD4F                                       STR_72 FFBE  
                                     _ADRPT 003EEC                                       STR_65 FF61  
                                     STR_73 FFBE                                       STR_49 FE76  
                                     STR_57 FD7A                                       STR_66 FFFB  
                                     STR_74 FFA3                                       STR_58 FE4C  
                                     STR_59 FE76                                       STR_75 FFA3  
                                     STR_67 FFF8                                       STR_76 FFA3  
                                     STR_92 FFDA                                       STR_68 FFB2  
                           __end_of___lbmod 0298                                       STR_93 FFE2  
                                     STR_69 FFC8                                       STR_77 FB4E  
                                     STR_86 FABD                                       STR_79 FF6F  
                                     STR_87 FA3F                                       STR_96 FFE9  
                                     STR_88 FFD6                             __end_of___flmul 6AEC  
                                     STR_89 FFDE                                       STR_98 FFE9  
                           __end_of___flsub 126E                             __end_of___fltol DAE0  
                                     u10320 B75E                                       u11200 DBF2  
                                     u10340 B8B6                                       u10500 D288  
                                     u11220 DC1C                                       u11140 DB10  
                                     u12005 0B76                                       u10350 B8B8  
                                     u10430 C624                                       u12006 0B78  
                                     u10440 C652                                       u10520 D316  
                                     u11160 DB3E                                       u12210 1DE4  
                                     u11170 DB58                                       u10435 C61E  
                           __end_of___lodiv D7FC                                       u10540 D340  
                                     u10460 D20A                                       u11180 DB7A  
                                     u10437 C610                                       u10390 C58A  
                                     u10447 C644                                       u10800 1B66  
                                     u10480 D238                                       u10720 55DE  
                                     u12145 12E2                                       u12330 0B90  
                                     u11290 CC24                                       u11514 8410  
                                     u10490 D266                                       _U1P1H 003DED  
                                     u11515 840A                                       u10651 5128  
                                     u12500 CE9A                                       u11620 8740  
                                     u12260 07BE                                       u10740 5678  
                                     u10644 0C2E                                       _U1P2H 003DEF  
                                     u10397 C57C                                       u10645 0C28  
                                     u12405 1DD2                                       u13301 09A4  
                                     u11614 8738                                       u11534 8440  
                                     u12406 1DD4                                       u13230 CE6A  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 8732                                       u11535 843A  
                                     u12415 1DC2                                       u13311 09C6  
                                     _T3CLK 003FA9                                       u14200 F7A6  
                                     u11480 F7FA                                       u10760 574C  
                                     u12416 1DC4                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u13241 0EEC  
                                     u11554 8462                                       u12530 0358  
                                     u12194 D89E                                       u10770 574E  
                                     _U1P3L 003DF0                                       u12355 0BC4  
                                     u11555 845C                                       u12195 D898  
                                     u12356 0BC6                                       u12348 0B92  
                                     u14300 8964                                       u15020 AF18  
                                     u15100 A36A                                       u11485 F7F4  
                                     u11574 8648                                       u14070 E816  
                                     u14150 A992                                       u12550 038C  
                                     u10790 F312                                       _U2P1L 003DD4  
                                     u11575 8642                                       u14207 F798  
                                     u14320 89B4                                       u15040 A08E  
                                     u15200 97B6                                       u15120 9618  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u11594 8716                                       u14090 E892  
                                     u14330 8C0C                                       u14250 88E0  
                                     _U2P3L 003DD8                                       u11595 8710  
                                     u14260 88E2                                       u14500 1624  
                                     u15220 9880                                       u16100 3398  
                                     u14341 8C3C                                       u16101 3394  
                                     u12670 1BB0                                       u14350 8C52  
                                     u14510 1626                                       u14430 1458  
                                     u15230 98A0                                       u15150 9700  
                                     u14351 8C50                                       u15071 A33C  
                                     _T5CLK 003F9D                                       u14360 8C66  
                                     u14280 8952                                       u15080 A352  
                                     u15160 9754                                       u15400 380E  
                           __end_of___lomod E58C                                       u15081 A350  
                                     u15241 98D0                                       u15225 9862  
                                     u14370 8C6A                                       u14610 1944  
                                     u15090 A366                                       u15250 98E6  
                                     u15170 9756                                       u15410 3810  
                                     u16050 2F36                                       u16130 B95C  
                                     u15251 98E4                                       u12676 1BB2  
                                     u14460 1512                                       u15260 98FA  
                                     u15420 3836                                       u11980 0B26  
                                     u15340 A506                                       u16140 B99A  
                                     u16220 E634                                       _T2HLT 003FAD  
                                     u14390 8C80                                       u14550 188C  
                                     u14470 1514                                       u15270 98FE  
                                     u15190 97B4                                       u14720 1D96  
                                     u15520 3B98                                       u15360 A64E  
                                     u16208 E5D0                                       _T5CON 003F9A  
                                     u14650 19C6                                       u15450 3990  
                                     u16090 32EA                                       u15290 B22C  
                                     u16250 E69A                                       u16075 3018  
                                     u14900 24EC                                       u14820 2262  
                                     u14580 18E0                                       u15540 3D0C  
                                     u15460 3992                                       u11988 0B28  
                                     u14910 24EE                                       u15470 39B8  
                                     u15710 B082                                       u16238 E636  
                                     u16190 E5CE                                       u15640 4304  
                                     _T6CON 003F94                                       u15570 3F84  
                                     u15660 44B4                                       u15580 3F86  
                                     u15820 00EE                                       u16620 CA9E  
                                     u16460 8FA4                                       u16268 E69C  
                                     u16630 CAA0                                       u16470 8FCE  
                                     u16710 064A                              __CFG_DEBUG$OFF 000000  
                                     u14880 2436                                       u15760 743C  
                                     u15920 60E2                                       u16720 0774  
                                     u16465 8F96                                       u15770 744E  
                                     u16730 0776                                       u16475 8FC0  
                                     u14980 ADF6                                       u14990 AE3C  
                                     u15950 261C                                       u15960 266C  
                                     u16690 03CC                                       u16860 1202  
                                     _T6HLT 003F95                                       u14997 AE2E  
                                     u16870 121A                                       u16880 122C  
                _ADCC_ADTI_InterruptHandler 00AF                                       u16866 1204  
                                     u16876 121C                                       u16886 122E  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0026  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 14E8                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 1ED0  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 8D30           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 25C2           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 83F4                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR DF0A                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0330                                       ___gmt FA2F  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR F60E  
                           __end_of_getname A6B0                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 1CF6                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 004A                             _DATAEE_ReadByte 165E  
                                     _fabsf FCEE                             __end_of_getrule B432  
                                     _flags 003E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0500  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 1E32  
                                     _fputc E7F2                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 12B2                                       _fputs 0298  
                           __end_of_isdigit 1750                             __end_of_ivln2_h FA37  
                                     _put2d E916                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 158E                                       _width 003A  
                                     _putch 1CC0                __end_of_set_ac_charger_relay 1E08  
                           __end_of_islower 16F0                             __end_of_isspace 0F8A  
                  _INT1_SetInterruptHandler 196E                             __end_of_set_dac FC3C  
                           __end_of_isupper 1720                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 0001  
                                     ltemp1 0005                                       ltemp2 0009  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 0001                                       ttemp1 0004  
                                     ttemp2 0007                                       ttemp3 000A  
                                     ttemp5 0002                                       ttemp6 0005  
                                     ttemp7 0009                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 18F6                 _UART1_SetRxInterruptHandler 18CE  
                                     wtemp0 0001                                       wtemp1 0003  
                                     wtemp2 0005                                       wtemp3 0007  
                                     wtemp4 0009                                       wtemp5 000B  
                                     wtemp8 0002                             __end_of_sprintf EF8E  
                           __end_of_tolower 0708                             __end_of_strncmp C688  
                           __end_of_toupper 0684                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 1A38                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 0F38                             _TMR5_Initialize 1152  
                     __end_of_ringBufS_init 1856                             __initialization EF8E  
                         _UART2_rx_vect_isr 1A60                               ___localtime_r B926  
                              __end_of_cp_h FA3F                                __end_of_cp_l FA3B  
                              __end_of_atoi B926                                __end_of_ctoa 0600  
                              __end_of_main 137E                                __end_of_dtoa 8D30  
                              __end_of_nanf 0D74                                __end_of_spin FA27  
                              __end_of_stoa AF32                                __end_of_utoa A3B4  
                              __end_of_xtoa 99B8                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0021                     __end_of_TMR2_Initialize 1D3E  
                     __end_of_send_lcd_data 1AAC                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 096E                           __end_of_CRC_Start 1EB8  
                  _TMR5_SetInterruptHandler 191E                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 00A6  
                         _port_data_dma_ptr 1E5C                          esr_check@esr_state 00D4  
                       ??_UART2_rx_vect_isr 0026                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 1804                             _PWM8_Initialize 1D54  
                          _UART1_Initialize 110A                           _UART2_tx_vect_isr 1A38  
                        _UART2_Transmit_ISR 17D8                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 0C4C                                      _ADLTHH 003EDF  
                                    STR_100 FFEF                                      _ADLTHL 003EDE  
                                    STR_102 FFEF                                      STR_110 FFF2  
                                    STR_112 FFF2                                      STR_121 FFE6  
                                    STR_105 FFEC                                      STR_107 FFEC  
                                    STR_115 FFF5                                      STR_124 FBD9  
                                    STR_117 FFF5                                      STR_125 FABE  
                                    STR_119 FFE6                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 12B2                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0021  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 F5BE  
                                    _RB6PPS 003A0E                                      i1l1209 DE72  
                      _start_switch_handler 1BE8                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 11E2  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 1E16                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl CCBA  
     __end_of_ADCC_DischargeSampleCapacitor 1E9A      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 1E92                    __end_of_send_lcd_cmd_dma 1C84  
                           _TMR3_WriteTimer 13F4                         ??_UART2_tx_vect_isr 0026  
                 __end_of_UART2_rx_vect_isr 1A88                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 1E52  
                          _UART2_Initialize 0D74                                      _WaitMs 1558  
                           _conv_raw_result 83F4                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset B1B2  
                                    ___flge DC46                                      ___fleq F950  
                                    ___lmul F60E                                      ___omul DF0A  
                         _ADCC_ThresholdISR 0AB0                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E0                              _ringBufS_flush 03C2  
                                    _efgtoa 137E                                      _getoff C012  
                                    _getint F17C                                      _floorf 99B8  
                         dac_spi_control@S0 00D9                           dac_spi_control@S1 00D8  
                         dac_spi_control@S2 00D7                           dac_spi_control@SB 00D5  
                         dac_spi_control@SC 00D6                          ?_ADCC_ThresholdISR 0021  
                                    _memset A6B0                        __size_of_help_button 0038  
                                    clear_0 F000                                      clear_1 F014  
                                    clear_2 F026                                      clear_3 F032  
                                    clear_4 F03E                                      clear_5 F04A  
                                    clear_6 F056                                      clear_7 F062  
                                    clear_8 F06E                                      _t_mbmc 00CA  
                 __end_of_port_data_dma_ptr 1E66                      __size_of_read_cal_data 01CA  
                                    _printf 0CB0                          _eaDogM_WriteString 00B6  
                   __end_of_DATAEE_ReadByte 1690                                      _strcpy F6E4  
                                 ?_ADCC_ISR 0021                                      _strlen 015C  
                        __size_of_TimerDone 0028                                __pdataBIGRAM 06FF  
                           _ADCC_Initialize 0A46                              _PMD_Initialize 1D80  
                __size_of_update_adc_result 003A                   __end_of_UART2_tx_vect_isr 1A60  
                                    lltemp0 0001                                      lltemp1 0009  
                                    lltemp2 0011                                      lltemp3 0019  
                       ??_ADCC_ThresholdISR 0021                      __end_of_start_adc_scan 0CB0  
                              __mediumconst F812                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 0E88                            __end_of_spinners F52A  
                          __end_of_vfprintf FE48                                  _StartTimer 1374  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 119A  
                         _SYSTEM_Initialize 0FDC                                  ___daylight 00C6  
                                __accesstop 0060                     __end_of__initialization F080  
                                 ?_INT0_ISR 0021                                   ?_INT1_ISR 0021  
                      __end_of_display_help 1EAA                        __end_of_display_info 1EA2  
                 __end_of_CLKREF_Initialize 1E5C                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 13B4  
                     _set_temp_display_help 1DE8                            _clear_hid_pflags FF9A  
                     __end_of_TMR3_CallBack 1B18                   __end_of_ADCC_ThresholdISR 0B1A  
                        __size_of_calc_bsoc 0A6E                      __end_of_ringBufS_flush 0454  
                            __pcstackCOMRAM 0021                                  ___inthi_sp 12CC  
                                ___intlo_sp 1966                                __pidataBANK1 F886  
                              __pidataBANK2 FC3C                               __end_of___gmt FA33  
               __size_of_send_port_data_dma 0052                               __end_of_fabsf FD9C  
                                 ?_TMR3_ISR 0021                                   ?_TMR5_ISR 0021  
                                 ?_TMR6_ISR 0021                            _DATAEE_WriteByte 0B1A  
                            ivt0x8_undefint 00AC                               __end_of_fputc E916  
                             __end_of_fputs 0330                        _get_ac_charger_relay 1E24  
                             __end_of_put2d EA30                               __end_of_srand 15C2  
                     __end_of_TMR5_CallBack 1AF4                               __end_of_putch 1CDA  
                      _set_ac_charger_relay 1DF8                     __end_of_PWM8_Initialize 1D6A  
                   __end_of_TMR6_Initialize 182E                           _adc_int_t_handler 0708  
                    __end_of_PMD_Initialize 1D94                                  __end_of_bp FA2F  
                                ___timezone 007A                                  ??_ADCC_ISR 0021  
                     __end_of_TMR6_CallBack 1B60                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0040                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 1E74                       TMR3_ISR@CountCallBack 00CC  
                            _clear_adc_scan 1EB8                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 1DE8                      __size_of_mode_lamp_dim 0018  
                          _CRC_ReverseValue F7B8                    _UART2_RxInterruptHandler 00BB  
                 __end_of_SYSTEM_Initialize 102A                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 1434  
                                __pbssBANK0 0060                                  __pbssBANK1 01C9  
                                __pbssBANK2 02B2                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 09DC  
                                _check_help C8A4                               _read_cal_data CCBA  
                   __end_of_conv_raw_result 88B0                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00C1                                  ??_INT0_ISR 0021  
                                ??_INT1_ISR 0027                       __end_of_days_in_month 0C4C  
                         __end_of_TimerDone 187E                            _DMA1_DMADCNT_ISR 1E68  
                           _convert_dac_raw EA30                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0020  
                             _init_port_dma 1690                       __end_of_wait_lcd_done 1B82  
                  __end_of_cal_current_zero 03C2            __end_of_TMR3_SetInterruptHandler 196E  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 191E  
                                ??_TMR3_ISR 00E3                     __end_of_ADCC_Initialize 0AB0  
                                ??_TMR5_ISR 002B                   __end_of_adc_int_t_handler 078A  
                                ??_TMR6_ISR 0026                           __end_of___asfladd 08FC  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 19E6       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 19BE                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 0018                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 1BC6  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 1EBE                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1205_20 C2EA  
                            ?_DMA1_DMAA_ISR 0021                            _DMA1_DMASCNT_ISR 1E44  
                                   u1310_48 1B4C                                     u1302_48 1B28  
                                   u1304_28 1ABC                                     _U1ERRIE 003DFA  
                                   u1313_28 1AE0                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     u1228_20 1E2E  
                                   u1165_25 1E02                                     u1165_26 1E04  
                                   _U2ERRIE 003DE2                                     u1270_20 E342  
                                   u1270_21 E33C                                     u1239_20 1528  
                                   _U2ERRIR 003DE1                                     u1239_26 152A  
                                   u1274_24 E428                                     u1274_25 E424  
                                   u1363_44 0770                                     u1363_45 076A  
                                   u1268_28 E328                           _CRC_8BitDataWrite 1D94  
                                   u1635_20 4CB4                                     u1642_28 1B04  
                                   _INT0PPS 003AC0                                     u1637_20 4D7E  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                              ?_Default_ISR 0021                  __size_of_UART2_tx_vect_isr 0028  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 080A                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 50AE  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 177E  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 13F4                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 1DD8  
                __end_of_set_load_relay_two 1DC8           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data D4F6  
                            ___secs_to_zone 5A20                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 1D0E                                     __Lparam 0000  
                  __end_of_UART1_Initialize 1152                           __end_of_hid_input E6C4  
                           __size_of_WaitMs 0036                                     ___aldiv D1D6  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv B432                                     ___almod DAE0  
                                   ___fladd 6AEC                                     ___aomod BDD2  
                                   ___fldiv 7964                                     ___awdiv E1BC  
                                   ___flneg 10C2                             __size_of___lmul 00D6  
                                   ___awmod EB48                             __size_of___omul 015A  
                                   ___lbmod 01FE                                     ___flmul 62C2  
                                   ___flsub 1228                                     ___fltol D96E  
                                   ___lodiv D67C                                     ___lomod E44C  
                 __end_of_UART1_Receive_ISR 1BE8                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display F444  
                                   __pcinit EF8E                    __end_of_mode_lamp_bright 1E24  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 1E08                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 1DA6                                     __ptext0 0000  
                                   __ptext1 096E                                     __ptext2 0EE2  
                                   __ptext3 0DD4                                     __ptext4 1BE8  
                                   __ptext5 158E                                     __ptext6 15C2  
                                   __ptext7 15F6                                     __ptext8 EA30  
                                   __ptext9 FB86                           __end_of_esr_check AC74  
                         _UART2_Receive_ISR 1C28                                     _asctime 7EDE  
                           __size_of_printf 0062                                     _getname A3B4  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule B1B2  
                                   _dst_off 00C4                       _OSCILLATOR_Initialize 1D6A  
                              __size_of_abs 0046                                     us802999 E04E  
                              __size_of_pad 0114                           __end_of_init_bsoc BDD2  
                                   us814999 B69C                                     us910999 D7E6  
                                   _isalpha 126E                                     _isdigit 1720  
                                   us825999 C000                                     _ivln2_h FA33  
                                   us915999 E57C                                   _T3CONbits 003FA6  
                                   _mode_sw 00DA                           __end_of_lp_filter D040  
                         __end_of_localtime 1C28                                     _islower 16C0  
                                   _isspace 0F38                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1472                                   _T5CONbits 003F9A  
                                   _set_dac FB86                    __end_of_UART2_Initialize 0DD4  
                                   _isupper 16F0                                   _CRC_Start 1EB2  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf EE84                                     _tolower 0684  
                     __size_of_display_help 0008                                     _utctime 009A  
                   __end_of_convert_dac_raw EB48                       __size_of_display_info 0008  
                                   _strncmp C468                                     _toupper 0600  
                      end_of_initialization F080                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 08FC  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 162A  
                         __end_of_set_dac_b 15F6                      __end_of___secs_to_zone 62C2  
       __end_of_UART2_SetRxInterruptHandler 18CE                 _UART2_SetRxInterruptHandler 18A6  
                                 i1u1664_20 DE68                     check_day_time@day_delay 0041  
                                 i2u1370_48 1A24                                   i2u1372_48 1A4C  
                         __end_of_set_vterm 1CA2                                   i2u1374_48 1A74  
                                 i2u1366_48 17C4                                   i2u1368_48 0AE6  
                                 i2u1368_49 0AFA                           __end_of_vfpfcnvrt 4640  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 F17C  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 1ECA                   __end_of_UART2_Receive_ISR 1C48  
                            wdtdelay@dcount 009E                     __end_of_dac_spi_control 0884  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0027                       _INT1_InterruptHandler 00BE  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 1ED0  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 1946  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 18F6  
                              _display_help 1EA2                       _TMR5_InterruptHandler 00A9  
                              _display_info 1E9A        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 0000                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 1A0E                 _ADCC_SetADIInterruptHandler 19E6  
                                asctime@buf 03C4                                  _update_lcd ED74  
                           _calc_model_data 91A4                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 0DD4  
                  __end_of_DATAEE_WriteByte 0B82                             _DMA1_Initialize 09DC  
                       __end_of_check_range 080A                                  _start_bsoc 1BA4  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 1D3E                       __end_of_get_vterm_ptr 177E  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 018C                    __end_of_CRC_ReverseValue F886  
                            __end_of_WaitMs 158E                __end_of_INTERRUPT_Initialize 0BE8  
                                _vterm_dump E6C4                              __end_of___flge DDA8  
                            __end_of___fleq FA14        __end_of_INT0_DefaultInterruptHandler 1EDA  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 1ED8  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 0E88  
                            __end_of___lmul F6E4                              __end_of___omul E064  
                             __pidataBIGRAM 9D24                              _load_hist_data 1CF6  
                            __end_of_efgtoa 25C2                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff C242  
                         __size_of_TMR5_ISR 00E2                              __end_of_getint F26E  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf 9D24                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 007E                              __end_of_memset A99C  
__end_of___month_to_secs@secs_through_month F913          ___month_to_secs@secs_through_month F8E3  
                            __end_of_printf 0D12                    __end_of_DMA1_DMADCNT_ISR 1E72  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 1B3C  
                            __end_of_strcpy F7B8                              __end_of_strlen 01FE  
                       start_initialization EF8E                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 1558       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 1520             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1228                       __end_of_INT1_CallBack 1AD0  
                 __size_of_set_display_info 001E                                 __end_of_pad ED74  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 50AE                        __end_of_send_lcd_cmd 1374  
                            _switch_handler E30A               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02CC  
                     __end_of___fpclassifyf D1D6                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 1E52                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 1E80                         __end_of_hid_display C8A4  
                __end_of_send_port_data_dma 0FDC                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet D96E                                   _TimerDone 1856  
                             _ringBufS_init 182E                      __end_of_load_hist_data 1D0E  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 165E                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 95FE                               _send_lcd_data 1A88  
                       __end_of_help_button 1520             __end_of_eaDogM_WriteStringAtPos FF9A  
                       __end_of_BVSOC_TABLE F8E3                                   ___asfladd 0884  
                      calc_model_data@bcror 0092                                 __pbssBIGRAM 0A4F  
                   __end_of_DMA1_Initialize 0A46                        calc_model_data@bvror 0096  
                               __pbssCOMRAM 003A                                 _check_range 078A  
          __end_of_INT0_SetInterruptHandler 19BE                      __end_of___year_to_secs 5A20  
                             __pcstackBANK0 00E3                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler E44C  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 1D54  
                  _UART1_RxInterruptHandler 00B5                    _UART2_TxInterruptHandler 00B8  
                                 __end_of_T F9AF                            _convert_adc_data FACE  
                                 _calc_bsoc 4640                   __size_of_ringBufS_put_dma 00AA  
                              _init_display F35A                      __end_of_DMA1_DMAOR_ISR 1E8A  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 00AC                          calc_ror_data@bcror 008A  
                    __size_of_TMR6_CallBack 0024                     __end_of_DMA2_Initialize 0EE2  
                        calc_ror_data@bvror 008E                      _PIN_MANAGER_Initialize 0454  
                     __end_of___localtime_r BB8C                    __size_of_TMR3_Initialize 0048  
                      __end_of_wait_lcd_set 1EC4                         __size_of_scan_trans 003C  
                             __pmediumconst F812                                   __ptext100 137E  
                                 __ptext101 0684                                   __ptext110 E1BC  
                                 __ptext102 16F0                                   __ptext111 88B0  
                                 __ptext103 F6E4                                   __ptext200 0884  
                                 __ptext120 1CC0                                   __ptext112 11E2  
                                 __ptext104 99B8                                   __ptext201 1E34  
                                 __ptext121 FE48                                   __ptext113 BDD2  
                                 __ptext105 D040                                   __ptext210 1A10  
                                 __ptext202 1B18                                   __ptext130 12B2  
                                 __ptext122 B6B2                                   __ptext114 B432  
                                 __ptext106 D96E                                   __ptext211 1BC6  
                                 __ptext203 1ED8                                   __ptext131 14E8  
                                 __ptext123 0F38                                   __ptext115 0578  
                                 __ptext107 10C2                                   __ptext220 1E68  
                                 __ptext212 1A38                                   __ptext204 1ED0  
                                 __ptext140 0D12                                   __ptext132 1856  
                                 __ptext124 1720                                   __ptext116 EC60  
                                 __ptext108 F950                                   __ptext221 1E74  
                                 __ptext213 17D8                                   __ptext205 17AC  
                                 __ptext141 1B82                                   __ptext133 1374  
                                 __ptext125 1C84                                   __ptext117 015C  
                                 __ptext109 EB48                                   __ptext222 1E80  
                                 __ptext214 1A60                                   __ptext206 0708  
                                 __ptext150 6AEC                                   __ptext142 CAB6  
                                 __ptext134 1E9A                                   __ptext126 1DE8  
                                 __ptext118 0298                                   __ptext223 0000  
                                 __ptext215 1C28                                   __ptext207 1EDA  
                                 __ptext151 62C2                                   __ptext143 7964  
                                 __ptext135 1EA2                                   __ptext127 1CA2  
                                 __ptext119 E7F2                                   __ptext216 1CDC  
                                 __ptext208 1EDC                                   __ptext160 1152  
                                 __ptext152 0FDC                                   __ptext144 DC46  
                                 __ptext136 08FC                                   __ptext128 1D0E  
                                 __ptext217 1B3C                                   __ptext209 0AB0  
                                 __ptext161 191E                                   __ptext153 0D74  
                                 __ptext145 91A4                                   __ptext137 D4F6  
                                 __ptext129 1E16                                   __ptext218 102A  
                                 __ptext170 0B82                                   __ptext162 119A  
                                 __ptext154 187E                                   __ptext146 1ECA  
                                 __ptext138 FCEE                                   __ptext219 1E44  
                                 __ptext171 1EAA                                   __ptext163 1946  
                                 __ptext155 18A6                                   __ptext147 1BA4  
                                 __ptext139 83F4                                   __ptext180 19BE  
                                 __ptext172 162A                                   __ptext164 1D26  
                                 __ptext156 110A                                   __ptext148 CE84  
                                 __ptext181 19E6                                   __ptext173 196E  
                                 __ptext165 1D3E                                   __ptext157 18CE  
                                 __ptext149 1228                                   __ptext190 C242  
                                 __ptext182 1434                                   __ptext174 1996  
                                 __ptext166 1D54                                   __ptext158 1804  
                                 __ptext191 1DF8                                   __ptext183 1AAC  
                                 __ptext175 0E88                                   __ptext167 1D80  
                                 __ptext159 18F6                                   __ptext192 1E24  
                                 __ptext184 F52A                                   __ptext176 09DC  
                                 __ptext168 0454                                   __ptext193 DDA8  
                                 __ptext185 E30A                                   __ptext177 04E6  
                                 __ptext169 1D6A                                   __ptext194 13F4  
                                 __ptext186 F52C                                   __ptext178 1E52  
                                 __ptext195 1AF4                                   __ptext187 13B4  
                                 __ptext179 0A46                                   __ptext196 1ED6  
                                 __ptext188 1AD0                                   __ptext197 4640  
                                 __ptext189 1520                                   __ptext198 0F8A  
                                 __ptext199 1E5C                                   _hid_input E58C  
                        __end_of_StartTimer 13B4                          _set_load_relay_one 1DC8  
                        _set_load_relay_two 1DB8                           __size_of_wdtdelay 005A  
                         __size_of_spinners 00E6                           __size_of_vfprintf 00AC  
                                  _ADCC_ISR 17AC                      __CFG_BBSIZE$BBSIZE_512 000000  
                                 fabsf@F463 0082                      __size_of_days_in_month 0064  
                                  _DMA1CON0 003BFC                                    _DMA1CON1 003BFD  
                                  _DMA1AIRQ 003BFE                                    _DMA2CON0 003BDC  
                                  _DMA2CON1 003BDD                                    _DMA2AIRQ 003BDE  
                                  _DMA1SIRQ 003BFF                                    _DMA2SIRQ 003BDF  
                                 _esr_check A99C                     __size_of_get_raw_result 0022  
                            __size_of_fabsf 00AE                                   _init_bsoc BB8C  
                    __size_of_wait_lcd_done 0022                              __size_of_fputc 0124  
                                  _T2CLKCON 003FAE                              __size_of_fputs 0098  
                  __size_of_DATAEE_ReadByte 0032                              __size_of_put2d 011A  
                                 _lp_filter CE84                                   _localtime 1C08  
                               _hid_display C688                              __size_of_srand 0034  
                            __size_of_putch 001A                        _INTERRUPT_Initialize 0B82  
                                  _T6CLKCON 003F96               __size_of_start_switch_handler 0020  
                           ?_DMA1_DMAOR_ISR 0021                                    _INT0_ISR 1E34  
                                  _INT1_ISR 1434                                    _LATCbits 003FBC  
                                  _LATDbits 003FBD                                    _LATEbits 003FBE  
                                  _LATFbits 003FBF           __size_of_INT1_SetInterruptHandler 0028  
                                  _SCANCON0 00397C                                    _IPR1bits 003981  
                                  _IPR2bits 003982                                    _PIE1bits 003991  
                                  _IPR3bits 003983                                    _SCANTRIG 00397D  
                                  _PIE2bits 003992                                    _IPR5bits 003985  
                                  _PIE3bits 003993                                   _tickCount 02B2  
                                  _IPR6bits 003986                                    _PIE5bits 003995  
                                  _IPR8bits 003988                                    _PIE6bits 003996  
                                  _IPR9bits 003989                                    _PIE8bits 003998  
                       __CFG_BORV$VBOR_2P45 000000                                    _PIE9bits 003999  
                              _SPI1CON0bits 003D14                                _SPI1CON1bits 003D15  
                                 _set_dac_a 15F6                                   _set_dac_b 15C2  
                                 _ring_buf1 0483                                   _ring_buf2 0440  
                                  _PIR0bits 0039A0                                    _PIR1bits 0039A1  
                                  _PIR2bits 0039A2                                    _SPI1BAUD 003D19  
                                  _PIR4bits 0039A4                                    _SPI1CON0 003D14  
                                  _SPI1CON1 003D15                                    _SPI1CON2 003D16  
                             _TMR3_CallBack 1AF4                                    _PIR5bits 0039A5  
                                  _PIR6bits 0039A6                                    _PIR8bits 0039A8  
                                  _PIR9bits 0039A9                    __size_of_TMR5_Initialize 0048  
                                 _set_vterm 1C84                         __size_of_update_lcd 0110  
                               _help_button 14E8                                    _TMR3_ISR DDA8  
                               _BVSOC_TABLE F813                                    _TMR5_ISR F52C  
                                  _TMR6_ISR 1CDC          __end_of___secs_to_tm@days_in_month F91F  
                ___secs_to_tm@days_in_month F913                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 3694  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 1AD0                                  _ADCON0bits 003EF8  
                                 _zi_read32 F086                          __end_of_check_help CAB6  
                                 _start_lcd 1EC4                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 1B3C  
                            _write_cal_data E064                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 1ECA  
                          _set_display_info 1CA2                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 04E6  
                               _INTCON0bits 003FD2                                   copy_data0 EFA2  
                                 copy_data1 EFC8                                   copy_data2 EFEA  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 1996  
                       __size_of_vterm_dump 012E         __end_of_UART2_SetTxInterruptHandler 18A6  
               _UART2_SetTxInterruptHandler 187E                               _days_in_month 0BE8  
                              _uart1RxCount 00DE                                _uart2RxCount 00DB  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 00A8  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 91A4  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 1B60  
                              _send_lcd_cmd 1334                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 1EDC  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 17AA  
                      __end_of_rule_to_secs 7964                     __size_of_check_day_time 0226  
                    __end_of_write_cal_data E1BC                       __end_of_DMA1_DMAA_ISR 1E7E  
                        ___fpclassifyf@F463 0086        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 0076  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl CAB6                      __end_of_CRC_Initialize 0578  
                         ?_DMA1_DMADCNT_ISR 0021                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 1E16                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0027                            __size_of_set_dac 00B6  
                                  __ptext10 080A                                    __ptext11 CCBA  
                                  __ptext20 182E                                    __ptext12 165E  
                                  __ptext21 BB8C                                    __ptext13 1CF6  
                                  __ptext30 1E08                                    __ptext22 FA14  
                                  __ptext14 1690                                    __ptext31 D36A  
                                  __ptext23 C688                                    __ptext15 F35A  
                                  __ptext40 F26E                                    __ptext32 1C08  
                                  __ptext24 E58C                                    __ptext16 1A88  
                                  __ptext41 AF32                                    __ptext33 B926  
                                  __ptext25 A99C                                    __ptext17 12F4  
                                  __ptext50 D1D6                                    __ptext42 B1B2  
                                  __ptext34 5A20                                    __ptext26 14AE  
                                  __ptext18 1334                                    __ptext51 7EDE  
                                  __ptext43 C012                                    __ptext35 1472  
                                  __ptext27 1E8A                                    __ptext19 1C48  
                                  __ptext60 F7B8                                    __ptext52 E916  
                                  __ptext44 F17C                                    __ptext36 F086  
                                  __ptext28 1DB8                                    __ptext61 1D94  
                                  __ptext53 01FE                                    __ptext45 A3B4  
                                  __ptext37 72A8                                    __ptext29 1DC8  
                                  __ptext70 FACE                                    __ptext62 0C4C  
                                  __ptext54 8D30                                    __ptext46 25C2  
                                  __ptext38 0BE8                                    __ptext71 FF9A  
                                  __ptext63 1DA6                                    __ptext55 E064  
                                  __ptext47 DF0A                                    __ptext39 50AE  
                                  __ptext80 1B60                                    __ptext72 C8A4  
                                  __ptext64 1E92                                    __ptext56 0B1A  
                                  __ptext48 F60E                                    __ptext81 0E2E  
                                  __ptext73 E6C4                                    __ptext65 F444  
                                  __ptext57 1EB2                                    __ptext49 DAE0  
                                  __ptext90 3694                                    __ptext82 1078  
                                  __ptext74 EE84                                    __ptext66 177E  
                                  __ptext58 1DD8                                    __ptext91 95FE  
                                  __ptext83 00B6                                    __ptext75 1750  
                                  __ptext67 1EB8                                    __ptext59 D7FC  
                                  __ptext92 0600                                    __ptext84 1EBE  
                                  __ptext76 1558                                    __ptext68 0330  
                                  __ptext93 16C0                                    __ptext85 1EC4  
                                  __ptext77 ED74                                    __ptext69 078A  
                                  __ptext94 126E                                    __ptext86 03C2  
                                  __ptext78 FEF2                                    __ptext95 A074  
                                  __ptext87 A6B0                                    __ptext79 1C66  
                                  __ptext96 E44C                                    __ptext88 0CB0  
                                  __ptext97 D67C                                    __ptext89 FD9C  
                                  __ptext98 C468                                    __ptext99 AC74  
                          __size_of_isupper 0030                                    _do_tzset AF32  
                     __end_of_read_cal_data CE84                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1424999 88CA  
                                  us1505999 A0DA                                    us1514999 967E  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1493999 AC86                                    us1581999 794E  
                          _ringBufS_put_dma FE48                                    _dst_name 01F2  
                      __end_of_Volts_to_SOC FACE                               __size_of_atoi 0274  
                             __size_of_ctoa 0088                               __size_of_main 137E  
                             __size_of_dtoa 0480                               __size_of_nanf 0062  
                     __size_of_wait_lcd_set 0006                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0042                                  _CRC_IsBusy 1DD8  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0021  
                     __end_of_init_port_dma 16C0                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 3694                    __size_of_TMR5_WriteTimer 0040  
                 _ADCC_ADI_InterruptHandler 00B2                                   stoa@F1166 0200  
                        ??_DMA1_DMASCNT_ISR 0027                __end_of_ADCC_StartConversion 1DB8  
                        __end_of_scan_trans 14AE                                    _spi_link 0060  
                                  _std_name 01F9                                    _wdtdelay 0E2E  
                __end_of_UART2_Transmit_ISR 1804                                    _spinners F444  
                                  _vfprintf FD9C                    __end_of_convert_adc_data FB86  
                 __size_of_update_hist_data 006E                  __end_of_PWM8_LoadDutyValue 12F4  
      __end_of_TMR3_DefaultInterruptHandler 1ED8       __size_of_TMR3_DefaultInterruptHandler 0002  
              _TMR3_DefaultInterruptHandler 1ED6        __end_of_INT1_DefaultInterruptHandler F52C  
     __size_of_INT1_DefaultInterruptHandler 0002                _INT1_DefaultInterruptHandler F52A  
                        _send_port_data_dma 0F8A                               ??_Default_ISR 0021  
                               _uart1RxHead 0047                      __size_of_get_vterm_ptr 002E  
                               _uart2RxHead 0044                                 _uart1RxTail 00DF  
                            _get_raw_result 1B82                                 _NVMCON1bits 0039E5  
                               _uart2TxHead 00DD                                 _uart2RxTail 00DC  
                                 spinners@s 006C                                 _uart2TxTail 0046  
                 __size_of_cal_current_zero 0092                                _wait_lcd_set 1EBE  
                        _EXT_INT_Initialize 162A        __end_of_TMR6_DefaultInterruptHandler 1078  
     __size_of_TMR6_DefaultInterruptHandler 004E                _TMR6_DefaultInterruptHandler 102A  
                         _send_lcd_data_dma 1078        __end_of_ADCC_DefaultInterruptHandler 1EDC  
     __size_of_ADCC_DefaultInterruptHandler 0002                _ADCC_DefaultInterruptHandler 1EDA  
                                  intlevel1 0000                                    intlevel2 0000  
                           ___month_to_secs F26E                           _send_lcd_cmd_long 12F4  
            __size_of_set_temp_display_help 0010               __end_of_set_temp_display_help 1DF8  
                     __end_of_calc_ror_data D67C                           __CFG_CLKOUTEN$OFF 000000  
                __end_of_eaDogM_WriteString 015C                       __end_of_mode_lamp_dim 1D26  
                   __end_of_adc_int_handler 1EDE                    __size_of_convert_dac_raw 0118  
                           _display_history D36A                      __size_of_INT0_CallBack 0024  
                                _SPI1SCKPPS 003ADE                                  _SPI1SDIPPS 003ADF  
                    __size_of_INT1_CallBack 0024                          __end_of_update_lcd EE84  
                    _uart2TxBufferRemaining 0045                          __end_of_static_soc 0E2E  
                        __end_of_start_bsoc 1BC6                              _FVR_Initialize 1EAA  
                    __end_of_get_raw_result 1BA4                            _send_lcd_cmd_dma 1C66  
                    __size_of___fpclassifyf 0196                       TMR5_ISR@CountCallBack 00D0  
          __end_of_INT1_SetInterruptHandler 1996                   __size_of_UART1_Initialize 0048  
                  __size_of_dac_spi_control 007A                   __end_of_send_lcd_data_dma 10C2  
                          ??_DMA1_DMAOR_ISR 0027                     _CRC_CalculatedResultGet D7FC  
                 __end_of_send_lcd_cmd_long 1334                     __size_of_start_adc_scan 0064  
                       __end_of_Default_ISR 1ED6              __end_of_PIN_MANAGER_Initialize 04E6  
                 __size_of_mode_lamp_bright 000E                          __end_of_vterm_dump E7F2  
                   _eaDogM_WriteStringAtPos FEF2                               _get_vterm_ptr 1750  
                            _check_adc_scan 1E8A                   __size_of_UART2_Initialize 0060  
                     __size_of_rule_to_secs 06BC  
